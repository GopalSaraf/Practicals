// Generated 09/02/2023 GMT

/*
 * Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
 * All rights reserved.
 * 
 * This software is developed by Microchip Technology Inc. and its subsidiaries ("Microchip").
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *     1. Redistributions of source code must retain the above copyright notice, this list of
 *        conditions and the following disclaimer.
 * 
 *     2. Redistributions in binary form must reproduce the above copyright notice, this list
 *        of conditions and the following disclaimer in the documentation and/or other
 *        materials provided with the distribution. Publication is not required when
 *        this file is used in an embedded application.
 * 
 *     3. Microchip's name may not be used to endorse or promote products derived from this
 *        software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _PIC16LF1779_H_
#define _PIC16LF1779_H_

/*
 * C Header file for the Microchip PIC Microcontroller
 * PIC16LF1779
 */
#ifndef _XC_H_
#warning Header file pic16lf1779.h included directly. Use #include <xc.h> instead.
#endif

#include <__at.h>

/*
 * Register Definitions
 */

// Register: INDF0
#define INDF0 INDF0
extern volatile unsigned char           INDF0               __at(0x000);
#ifndef _LIB_BUILD
asm("INDF0 equ 00h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INDF0                  :8;
    };
} INDF0bits_t;
extern volatile INDF0bits_t INDF0bits __at(0x000);
// bitfield macros
#define _INDF0_INDF0_POSN                                   0x0
#define _INDF0_INDF0_POSITION                               0x0
#define _INDF0_INDF0_SIZE                                   0x8
#define _INDF0_INDF0_LENGTH                                 0x8
#define _INDF0_INDF0_MASK                                   0xFF

// Register: INDF1
#define INDF1 INDF1
extern volatile unsigned char           INDF1               __at(0x001);
#ifndef _LIB_BUILD
asm("INDF1 equ 01h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INDF1                  :8;
    };
} INDF1bits_t;
extern volatile INDF1bits_t INDF1bits __at(0x001);
// bitfield macros
#define _INDF1_INDF1_POSN                                   0x0
#define _INDF1_INDF1_POSITION                               0x0
#define _INDF1_INDF1_SIZE                                   0x8
#define _INDF1_INDF1_LENGTH                                 0x8
#define _INDF1_INDF1_MASK                                   0xFF

// Register: PCL
#define PCL PCL
extern volatile unsigned char           PCL                 __at(0x002);
#ifndef _LIB_BUILD
asm("PCL equ 02h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCL                    :8;
    };
} PCLbits_t;
extern volatile PCLbits_t PCLbits __at(0x002);
// bitfield macros
#define _PCL_PCL_POSN                                       0x0
#define _PCL_PCL_POSITION                                   0x0
#define _PCL_PCL_SIZE                                       0x8
#define _PCL_PCL_LENGTH                                     0x8
#define _PCL_PCL_MASK                                       0xFF

// Register: STATUS
#define STATUS STATUS
extern volatile unsigned char           STATUS              __at(0x003);
#ifndef _LIB_BUILD
asm("STATUS equ 03h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C                      :1;
        unsigned DC                     :1;
        unsigned Z                      :1;
        unsigned nPD                    :1;
        unsigned nTO                    :1;
    };
    struct {
        unsigned CARRY                  :1;
        unsigned                        :1;
        unsigned ZERO                   :1;
    };
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits __at(0x003);
// bitfield macros
#define _STATUS_C_POSN                                      0x0
#define _STATUS_C_POSITION                                  0x0
#define _STATUS_C_SIZE                                      0x1
#define _STATUS_C_LENGTH                                    0x1
#define _STATUS_C_MASK                                      0x1
#define _STATUS_DC_POSN                                     0x1
#define _STATUS_DC_POSITION                                 0x1
#define _STATUS_DC_SIZE                                     0x1
#define _STATUS_DC_LENGTH                                   0x1
#define _STATUS_DC_MASK                                     0x2
#define _STATUS_Z_POSN                                      0x2
#define _STATUS_Z_POSITION                                  0x2
#define _STATUS_Z_SIZE                                      0x1
#define _STATUS_Z_LENGTH                                    0x1
#define _STATUS_Z_MASK                                      0x4
#define _STATUS_nPD_POSN                                    0x3
#define _STATUS_nPD_POSITION                                0x3
#define _STATUS_nPD_SIZE                                    0x1
#define _STATUS_nPD_LENGTH                                  0x1
#define _STATUS_nPD_MASK                                    0x8
#define _STATUS_nTO_POSN                                    0x4
#define _STATUS_nTO_POSITION                                0x4
#define _STATUS_nTO_SIZE                                    0x1
#define _STATUS_nTO_LENGTH                                  0x1
#define _STATUS_nTO_MASK                                    0x10
#define _STATUS_CARRY_POSN                                  0x0
#define _STATUS_CARRY_POSITION                              0x0
#define _STATUS_CARRY_SIZE                                  0x1
#define _STATUS_CARRY_LENGTH                                0x1
#define _STATUS_CARRY_MASK                                  0x1
#define _STATUS_ZERO_POSN                                   0x2
#define _STATUS_ZERO_POSITION                               0x2
#define _STATUS_ZERO_SIZE                                   0x1
#define _STATUS_ZERO_LENGTH                                 0x1
#define _STATUS_ZERO_MASK                                   0x4

// Register: FSR0
#define FSR0 FSR0
extern volatile unsigned short          FSR0                __at(0x004);

// Register: FSR0L
#define FSR0L FSR0L
extern volatile unsigned char           FSR0L               __at(0x004);
#ifndef _LIB_BUILD
asm("FSR0L equ 04h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR0L                  :8;
    };
} FSR0Lbits_t;
extern volatile FSR0Lbits_t FSR0Lbits __at(0x004);
// bitfield macros
#define _FSR0L_FSR0L_POSN                                   0x0
#define _FSR0L_FSR0L_POSITION                               0x0
#define _FSR0L_FSR0L_SIZE                                   0x8
#define _FSR0L_FSR0L_LENGTH                                 0x8
#define _FSR0L_FSR0L_MASK                                   0xFF

// Register: FSR0H
#define FSR0H FSR0H
extern volatile unsigned char           FSR0H               __at(0x005);
#ifndef _LIB_BUILD
asm("FSR0H equ 05h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR0H                  :8;
    };
} FSR0Hbits_t;
extern volatile FSR0Hbits_t FSR0Hbits __at(0x005);
// bitfield macros
#define _FSR0H_FSR0H_POSN                                   0x0
#define _FSR0H_FSR0H_POSITION                               0x0
#define _FSR0H_FSR0H_SIZE                                   0x8
#define _FSR0H_FSR0H_LENGTH                                 0x8
#define _FSR0H_FSR0H_MASK                                   0xFF

// Register: FSR1
#define FSR1 FSR1
extern volatile unsigned short          FSR1                __at(0x006);

// Register: FSR1L
#define FSR1L FSR1L
extern volatile unsigned char           FSR1L               __at(0x006);
#ifndef _LIB_BUILD
asm("FSR1L equ 06h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR1L                  :8;
    };
} FSR1Lbits_t;
extern volatile FSR1Lbits_t FSR1Lbits __at(0x006);
// bitfield macros
#define _FSR1L_FSR1L_POSN                                   0x0
#define _FSR1L_FSR1L_POSITION                               0x0
#define _FSR1L_FSR1L_SIZE                                   0x8
#define _FSR1L_FSR1L_LENGTH                                 0x8
#define _FSR1L_FSR1L_MASK                                   0xFF

// Register: FSR1H
#define FSR1H FSR1H
extern volatile unsigned char           FSR1H               __at(0x007);
#ifndef _LIB_BUILD
asm("FSR1H equ 07h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR1H                  :8;
    };
} FSR1Hbits_t;
extern volatile FSR1Hbits_t FSR1Hbits __at(0x007);
// bitfield macros
#define _FSR1H_FSR1H_POSN                                   0x0
#define _FSR1H_FSR1H_POSITION                               0x0
#define _FSR1H_FSR1H_SIZE                                   0x8
#define _FSR1H_FSR1H_LENGTH                                 0x8
#define _FSR1H_FSR1H_MASK                                   0xFF

// Register: BSR
#define BSR BSR
extern volatile unsigned char           BSR                 __at(0x008);
#ifndef _LIB_BUILD
asm("BSR equ 08h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BSR                    :5;
    };
    struct {
        unsigned BSR0                   :1;
        unsigned BSR1                   :1;
        unsigned BSR2                   :1;
        unsigned BSR3                   :1;
        unsigned BSR4                   :1;
    };
} BSRbits_t;
extern volatile BSRbits_t BSRbits __at(0x008);
// bitfield macros
#define _BSR_BSR_POSN                                       0x0
#define _BSR_BSR_POSITION                                   0x0
#define _BSR_BSR_SIZE                                       0x5
#define _BSR_BSR_LENGTH                                     0x5
#define _BSR_BSR_MASK                                       0x1F
#define _BSR_BSR0_POSN                                      0x0
#define _BSR_BSR0_POSITION                                  0x0
#define _BSR_BSR0_SIZE                                      0x1
#define _BSR_BSR0_LENGTH                                    0x1
#define _BSR_BSR0_MASK                                      0x1
#define _BSR_BSR1_POSN                                      0x1
#define _BSR_BSR1_POSITION                                  0x1
#define _BSR_BSR1_SIZE                                      0x1
#define _BSR_BSR1_LENGTH                                    0x1
#define _BSR_BSR1_MASK                                      0x2
#define _BSR_BSR2_POSN                                      0x2
#define _BSR_BSR2_POSITION                                  0x2
#define _BSR_BSR2_SIZE                                      0x1
#define _BSR_BSR2_LENGTH                                    0x1
#define _BSR_BSR2_MASK                                      0x4
#define _BSR_BSR3_POSN                                      0x3
#define _BSR_BSR3_POSITION                                  0x3
#define _BSR_BSR3_SIZE                                      0x1
#define _BSR_BSR3_LENGTH                                    0x1
#define _BSR_BSR3_MASK                                      0x8
#define _BSR_BSR4_POSN                                      0x4
#define _BSR_BSR4_POSITION                                  0x4
#define _BSR_BSR4_SIZE                                      0x1
#define _BSR_BSR4_LENGTH                                    0x1
#define _BSR_BSR4_MASK                                      0x10

// Register: WREG
#define WREG WREG
extern volatile unsigned char           WREG                __at(0x009);
#ifndef _LIB_BUILD
asm("WREG equ 09h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WREG0                  :8;
    };
} WREGbits_t;
extern volatile WREGbits_t WREGbits __at(0x009);
// bitfield macros
#define _WREG_WREG0_POSN                                    0x0
#define _WREG_WREG0_POSITION                                0x0
#define _WREG_WREG0_SIZE                                    0x8
#define _WREG_WREG0_LENGTH                                  0x8
#define _WREG_WREG0_MASK                                    0xFF

// Register: PCLATH
#define PCLATH PCLATH
extern volatile unsigned char           PCLATH              __at(0x00A);
#ifndef _LIB_BUILD
asm("PCLATH equ 0Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCLATH                 :7;
    };
} PCLATHbits_t;
extern volatile PCLATHbits_t PCLATHbits __at(0x00A);
// bitfield macros
#define _PCLATH_PCLATH_POSN                                 0x0
#define _PCLATH_PCLATH_POSITION                             0x0
#define _PCLATH_PCLATH_SIZE                                 0x7
#define _PCLATH_PCLATH_LENGTH                               0x7
#define _PCLATH_PCLATH_MASK                                 0x7F

// Register: INTCON
#define INTCON INTCON
extern volatile unsigned char           INTCON              __at(0x00B);
#ifndef _LIB_BUILD
asm("INTCON equ 0Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCIF                  :1;
        unsigned INTF                   :1;
        unsigned TMR0IF                 :1;
        unsigned IOCIE                  :1;
        unsigned INTE                   :1;
        unsigned TMR0IE                 :1;
        unsigned PEIE                   :1;
        unsigned GIE                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned T0IF                   :1;
        unsigned                        :2;
        unsigned T0IE                   :1;
    };
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits __at(0x00B);
// bitfield macros
#define _INTCON_IOCIF_POSN                                  0x0
#define _INTCON_IOCIF_POSITION                              0x0
#define _INTCON_IOCIF_SIZE                                  0x1
#define _INTCON_IOCIF_LENGTH                                0x1
#define _INTCON_IOCIF_MASK                                  0x1
#define _INTCON_INTF_POSN                                   0x1
#define _INTCON_INTF_POSITION                               0x1
#define _INTCON_INTF_SIZE                                   0x1
#define _INTCON_INTF_LENGTH                                 0x1
#define _INTCON_INTF_MASK                                   0x2
#define _INTCON_TMR0IF_POSN                                 0x2
#define _INTCON_TMR0IF_POSITION                             0x2
#define _INTCON_TMR0IF_SIZE                                 0x1
#define _INTCON_TMR0IF_LENGTH                               0x1
#define _INTCON_TMR0IF_MASK                                 0x4
#define _INTCON_IOCIE_POSN                                  0x3
#define _INTCON_IOCIE_POSITION                              0x3
#define _INTCON_IOCIE_SIZE                                  0x1
#define _INTCON_IOCIE_LENGTH                                0x1
#define _INTCON_IOCIE_MASK                                  0x8
#define _INTCON_INTE_POSN                                   0x4
#define _INTCON_INTE_POSITION                               0x4
#define _INTCON_INTE_SIZE                                   0x1
#define _INTCON_INTE_LENGTH                                 0x1
#define _INTCON_INTE_MASK                                   0x10
#define _INTCON_TMR0IE_POSN                                 0x5
#define _INTCON_TMR0IE_POSITION                             0x5
#define _INTCON_TMR0IE_SIZE                                 0x1
#define _INTCON_TMR0IE_LENGTH                               0x1
#define _INTCON_TMR0IE_MASK                                 0x20
#define _INTCON_PEIE_POSN                                   0x6
#define _INTCON_PEIE_POSITION                               0x6
#define _INTCON_PEIE_SIZE                                   0x1
#define _INTCON_PEIE_LENGTH                                 0x1
#define _INTCON_PEIE_MASK                                   0x40
#define _INTCON_GIE_POSN                                    0x7
#define _INTCON_GIE_POSITION                                0x7
#define _INTCON_GIE_SIZE                                    0x1
#define _INTCON_GIE_LENGTH                                  0x1
#define _INTCON_GIE_MASK                                    0x80
#define _INTCON_T0IF_POSN                                   0x2
#define _INTCON_T0IF_POSITION                               0x2
#define _INTCON_T0IF_SIZE                                   0x1
#define _INTCON_T0IF_LENGTH                                 0x1
#define _INTCON_T0IF_MASK                                   0x4
#define _INTCON_T0IE_POSN                                   0x5
#define _INTCON_T0IE_POSITION                               0x5
#define _INTCON_T0IE_SIZE                                   0x1
#define _INTCON_T0IE_LENGTH                                 0x1
#define _INTCON_T0IE_MASK                                   0x20

// Register: PORTA
#define PORTA PORTA
extern volatile unsigned char           PORTA               __at(0x00C);
#ifndef _LIB_BUILD
asm("PORTA equ 0Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA0                    :1;
        unsigned RA1                    :1;
        unsigned RA2                    :1;
        unsigned RA3                    :1;
        unsigned RA4                    :1;
        unsigned RA5                    :1;
        unsigned RA6                    :1;
        unsigned RA7                    :1;
    };
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits __at(0x00C);
// bitfield macros
#define _PORTA_RA0_POSN                                     0x0
#define _PORTA_RA0_POSITION                                 0x0
#define _PORTA_RA0_SIZE                                     0x1
#define _PORTA_RA0_LENGTH                                   0x1
#define _PORTA_RA0_MASK                                     0x1
#define _PORTA_RA1_POSN                                     0x1
#define _PORTA_RA1_POSITION                                 0x1
#define _PORTA_RA1_SIZE                                     0x1
#define _PORTA_RA1_LENGTH                                   0x1
#define _PORTA_RA1_MASK                                     0x2
#define _PORTA_RA2_POSN                                     0x2
#define _PORTA_RA2_POSITION                                 0x2
#define _PORTA_RA2_SIZE                                     0x1
#define _PORTA_RA2_LENGTH                                   0x1
#define _PORTA_RA2_MASK                                     0x4
#define _PORTA_RA3_POSN                                     0x3
#define _PORTA_RA3_POSITION                                 0x3
#define _PORTA_RA3_SIZE                                     0x1
#define _PORTA_RA3_LENGTH                                   0x1
#define _PORTA_RA3_MASK                                     0x8
#define _PORTA_RA4_POSN                                     0x4
#define _PORTA_RA4_POSITION                                 0x4
#define _PORTA_RA4_SIZE                                     0x1
#define _PORTA_RA4_LENGTH                                   0x1
#define _PORTA_RA4_MASK                                     0x10
#define _PORTA_RA5_POSN                                     0x5
#define _PORTA_RA5_POSITION                                 0x5
#define _PORTA_RA5_SIZE                                     0x1
#define _PORTA_RA5_LENGTH                                   0x1
#define _PORTA_RA5_MASK                                     0x20
#define _PORTA_RA6_POSN                                     0x6
#define _PORTA_RA6_POSITION                                 0x6
#define _PORTA_RA6_SIZE                                     0x1
#define _PORTA_RA6_LENGTH                                   0x1
#define _PORTA_RA6_MASK                                     0x40
#define _PORTA_RA7_POSN                                     0x7
#define _PORTA_RA7_POSITION                                 0x7
#define _PORTA_RA7_SIZE                                     0x1
#define _PORTA_RA7_LENGTH                                   0x1
#define _PORTA_RA7_MASK                                     0x80

// Register: PORTB
#define PORTB PORTB
extern volatile unsigned char           PORTB               __at(0x00D);
#ifndef _LIB_BUILD
asm("PORTB equ 0Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RB2                    :1;
        unsigned RB3                    :1;
        unsigned RB4                    :1;
        unsigned RB5                    :1;
        unsigned RB6                    :1;
        unsigned RB7                    :1;
    };
} PORTBbits_t;
extern volatile PORTBbits_t PORTBbits __at(0x00D);
// bitfield macros
#define _PORTB_RB0_POSN                                     0x0
#define _PORTB_RB0_POSITION                                 0x0
#define _PORTB_RB0_SIZE                                     0x1
#define _PORTB_RB0_LENGTH                                   0x1
#define _PORTB_RB0_MASK                                     0x1
#define _PORTB_RB1_POSN                                     0x1
#define _PORTB_RB1_POSITION                                 0x1
#define _PORTB_RB1_SIZE                                     0x1
#define _PORTB_RB1_LENGTH                                   0x1
#define _PORTB_RB1_MASK                                     0x2
#define _PORTB_RB2_POSN                                     0x2
#define _PORTB_RB2_POSITION                                 0x2
#define _PORTB_RB2_SIZE                                     0x1
#define _PORTB_RB2_LENGTH                                   0x1
#define _PORTB_RB2_MASK                                     0x4
#define _PORTB_RB3_POSN                                     0x3
#define _PORTB_RB3_POSITION                                 0x3
#define _PORTB_RB3_SIZE                                     0x1
#define _PORTB_RB3_LENGTH                                   0x1
#define _PORTB_RB3_MASK                                     0x8
#define _PORTB_RB4_POSN                                     0x4
#define _PORTB_RB4_POSITION                                 0x4
#define _PORTB_RB4_SIZE                                     0x1
#define _PORTB_RB4_LENGTH                                   0x1
#define _PORTB_RB4_MASK                                     0x10
#define _PORTB_RB5_POSN                                     0x5
#define _PORTB_RB5_POSITION                                 0x5
#define _PORTB_RB5_SIZE                                     0x1
#define _PORTB_RB5_LENGTH                                   0x1
#define _PORTB_RB5_MASK                                     0x20
#define _PORTB_RB6_POSN                                     0x6
#define _PORTB_RB6_POSITION                                 0x6
#define _PORTB_RB6_SIZE                                     0x1
#define _PORTB_RB6_LENGTH                                   0x1
#define _PORTB_RB6_MASK                                     0x40
#define _PORTB_RB7_POSN                                     0x7
#define _PORTB_RB7_POSITION                                 0x7
#define _PORTB_RB7_SIZE                                     0x1
#define _PORTB_RB7_LENGTH                                   0x1
#define _PORTB_RB7_MASK                                     0x80

// Register: PORTC
#define PORTC PORTC
extern volatile unsigned char           PORTC               __at(0x00E);
#ifndef _LIB_BUILD
asm("PORTC equ 0Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC0                    :1;
        unsigned RC1                    :1;
        unsigned RC2                    :1;
        unsigned RC3                    :1;
        unsigned RC4                    :1;
        unsigned RC5                    :1;
        unsigned RC6                    :1;
        unsigned RC7                    :1;
    };
} PORTCbits_t;
extern volatile PORTCbits_t PORTCbits __at(0x00E);
// bitfield macros
#define _PORTC_RC0_POSN                                     0x0
#define _PORTC_RC0_POSITION                                 0x0
#define _PORTC_RC0_SIZE                                     0x1
#define _PORTC_RC0_LENGTH                                   0x1
#define _PORTC_RC0_MASK                                     0x1
#define _PORTC_RC1_POSN                                     0x1
#define _PORTC_RC1_POSITION                                 0x1
#define _PORTC_RC1_SIZE                                     0x1
#define _PORTC_RC1_LENGTH                                   0x1
#define _PORTC_RC1_MASK                                     0x2
#define _PORTC_RC2_POSN                                     0x2
#define _PORTC_RC2_POSITION                                 0x2
#define _PORTC_RC2_SIZE                                     0x1
#define _PORTC_RC2_LENGTH                                   0x1
#define _PORTC_RC2_MASK                                     0x4
#define _PORTC_RC3_POSN                                     0x3
#define _PORTC_RC3_POSITION                                 0x3
#define _PORTC_RC3_SIZE                                     0x1
#define _PORTC_RC3_LENGTH                                   0x1
#define _PORTC_RC3_MASK                                     0x8
#define _PORTC_RC4_POSN                                     0x4
#define _PORTC_RC4_POSITION                                 0x4
#define _PORTC_RC4_SIZE                                     0x1
#define _PORTC_RC4_LENGTH                                   0x1
#define _PORTC_RC4_MASK                                     0x10
#define _PORTC_RC5_POSN                                     0x5
#define _PORTC_RC5_POSITION                                 0x5
#define _PORTC_RC5_SIZE                                     0x1
#define _PORTC_RC5_LENGTH                                   0x1
#define _PORTC_RC5_MASK                                     0x20
#define _PORTC_RC6_POSN                                     0x6
#define _PORTC_RC6_POSITION                                 0x6
#define _PORTC_RC6_SIZE                                     0x1
#define _PORTC_RC6_LENGTH                                   0x1
#define _PORTC_RC6_MASK                                     0x40
#define _PORTC_RC7_POSN                                     0x7
#define _PORTC_RC7_POSITION                                 0x7
#define _PORTC_RC7_SIZE                                     0x1
#define _PORTC_RC7_LENGTH                                   0x1
#define _PORTC_RC7_MASK                                     0x80

// Register: PORTD
#define PORTD PORTD
extern volatile unsigned char           PORTD               __at(0x00F);
#ifndef _LIB_BUILD
asm("PORTD equ 0Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD0                    :1;
        unsigned RD1                    :1;
        unsigned RD2                    :1;
        unsigned RD3                    :1;
        unsigned RD4                    :1;
        unsigned RD5                    :1;
        unsigned RD6                    :1;
        unsigned RD7                    :1;
    };
} PORTDbits_t;
extern volatile PORTDbits_t PORTDbits __at(0x00F);
// bitfield macros
#define _PORTD_RD0_POSN                                     0x0
#define _PORTD_RD0_POSITION                                 0x0
#define _PORTD_RD0_SIZE                                     0x1
#define _PORTD_RD0_LENGTH                                   0x1
#define _PORTD_RD0_MASK                                     0x1
#define _PORTD_RD1_POSN                                     0x1
#define _PORTD_RD1_POSITION                                 0x1
#define _PORTD_RD1_SIZE                                     0x1
#define _PORTD_RD1_LENGTH                                   0x1
#define _PORTD_RD1_MASK                                     0x2
#define _PORTD_RD2_POSN                                     0x2
#define _PORTD_RD2_POSITION                                 0x2
#define _PORTD_RD2_SIZE                                     0x1
#define _PORTD_RD2_LENGTH                                   0x1
#define _PORTD_RD2_MASK                                     0x4
#define _PORTD_RD3_POSN                                     0x3
#define _PORTD_RD3_POSITION                                 0x3
#define _PORTD_RD3_SIZE                                     0x1
#define _PORTD_RD3_LENGTH                                   0x1
#define _PORTD_RD3_MASK                                     0x8
#define _PORTD_RD4_POSN                                     0x4
#define _PORTD_RD4_POSITION                                 0x4
#define _PORTD_RD4_SIZE                                     0x1
#define _PORTD_RD4_LENGTH                                   0x1
#define _PORTD_RD4_MASK                                     0x10
#define _PORTD_RD5_POSN                                     0x5
#define _PORTD_RD5_POSITION                                 0x5
#define _PORTD_RD5_SIZE                                     0x1
#define _PORTD_RD5_LENGTH                                   0x1
#define _PORTD_RD5_MASK                                     0x20
#define _PORTD_RD6_POSN                                     0x6
#define _PORTD_RD6_POSITION                                 0x6
#define _PORTD_RD6_SIZE                                     0x1
#define _PORTD_RD6_LENGTH                                   0x1
#define _PORTD_RD6_MASK                                     0x40
#define _PORTD_RD7_POSN                                     0x7
#define _PORTD_RD7_POSITION                                 0x7
#define _PORTD_RD7_SIZE                                     0x1
#define _PORTD_RD7_LENGTH                                   0x1
#define _PORTD_RD7_MASK                                     0x80

// Register: PORTE
#define PORTE PORTE
extern volatile unsigned char           PORTE               __at(0x010);
#ifndef _LIB_BUILD
asm("PORTE equ 010h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RE0                    :1;
        unsigned RE1                    :1;
        unsigned RE2                    :1;
        unsigned RE3                    :1;
    };
} PORTEbits_t;
extern volatile PORTEbits_t PORTEbits __at(0x010);
// bitfield macros
#define _PORTE_RE0_POSN                                     0x0
#define _PORTE_RE0_POSITION                                 0x0
#define _PORTE_RE0_SIZE                                     0x1
#define _PORTE_RE0_LENGTH                                   0x1
#define _PORTE_RE0_MASK                                     0x1
#define _PORTE_RE1_POSN                                     0x1
#define _PORTE_RE1_POSITION                                 0x1
#define _PORTE_RE1_SIZE                                     0x1
#define _PORTE_RE1_LENGTH                                   0x1
#define _PORTE_RE1_MASK                                     0x2
#define _PORTE_RE2_POSN                                     0x2
#define _PORTE_RE2_POSITION                                 0x2
#define _PORTE_RE2_SIZE                                     0x1
#define _PORTE_RE2_LENGTH                                   0x1
#define _PORTE_RE2_MASK                                     0x4
#define _PORTE_RE3_POSN                                     0x3
#define _PORTE_RE3_POSITION                                 0x3
#define _PORTE_RE3_SIZE                                     0x1
#define _PORTE_RE3_LENGTH                                   0x1
#define _PORTE_RE3_MASK                                     0x8

// Register: PIR1
#define PIR1 PIR1
extern volatile unsigned char           PIR1                __at(0x011);
#ifndef _LIB_BUILD
asm("PIR1 equ 011h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IF                 :1;
        unsigned TMR2IF                 :1;
        unsigned CCP1IF                 :1;
        unsigned SSP1IF                 :1;
        unsigned TXIF                   :1;
        unsigned RCIF                   :1;
        unsigned ADIF                   :1;
        unsigned TMR1GIF                :1;
    };
    struct {
        unsigned                        :2;
        unsigned CCPIF                  :1;
    };
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits __at(0x011);
// bitfield macros
#define _PIR1_TMR1IF_POSN                                   0x0
#define _PIR1_TMR1IF_POSITION                               0x0
#define _PIR1_TMR1IF_SIZE                                   0x1
#define _PIR1_TMR1IF_LENGTH                                 0x1
#define _PIR1_TMR1IF_MASK                                   0x1
#define _PIR1_TMR2IF_POSN                                   0x1
#define _PIR1_TMR2IF_POSITION                               0x1
#define _PIR1_TMR2IF_SIZE                                   0x1
#define _PIR1_TMR2IF_LENGTH                                 0x1
#define _PIR1_TMR2IF_MASK                                   0x2
#define _PIR1_CCP1IF_POSN                                   0x2
#define _PIR1_CCP1IF_POSITION                               0x2
#define _PIR1_CCP1IF_SIZE                                   0x1
#define _PIR1_CCP1IF_LENGTH                                 0x1
#define _PIR1_CCP1IF_MASK                                   0x4
#define _PIR1_SSP1IF_POSN                                   0x3
#define _PIR1_SSP1IF_POSITION                               0x3
#define _PIR1_SSP1IF_SIZE                                   0x1
#define _PIR1_SSP1IF_LENGTH                                 0x1
#define _PIR1_SSP1IF_MASK                                   0x8
#define _PIR1_TXIF_POSN                                     0x4
#define _PIR1_TXIF_POSITION                                 0x4
#define _PIR1_TXIF_SIZE                                     0x1
#define _PIR1_TXIF_LENGTH                                   0x1
#define _PIR1_TXIF_MASK                                     0x10
#define _PIR1_RCIF_POSN                                     0x5
#define _PIR1_RCIF_POSITION                                 0x5
#define _PIR1_RCIF_SIZE                                     0x1
#define _PIR1_RCIF_LENGTH                                   0x1
#define _PIR1_RCIF_MASK                                     0x20
#define _PIR1_ADIF_POSN                                     0x6
#define _PIR1_ADIF_POSITION                                 0x6
#define _PIR1_ADIF_SIZE                                     0x1
#define _PIR1_ADIF_LENGTH                                   0x1
#define _PIR1_ADIF_MASK                                     0x40
#define _PIR1_TMR1GIF_POSN                                  0x7
#define _PIR1_TMR1GIF_POSITION                              0x7
#define _PIR1_TMR1GIF_SIZE                                  0x1
#define _PIR1_TMR1GIF_LENGTH                                0x1
#define _PIR1_TMR1GIF_MASK                                  0x80
#define _PIR1_CCPIF_POSN                                    0x2
#define _PIR1_CCPIF_POSITION                                0x2
#define _PIR1_CCPIF_SIZE                                    0x1
#define _PIR1_CCPIF_LENGTH                                  0x1
#define _PIR1_CCPIF_MASK                                    0x4

// Register: PIR2
#define PIR2 PIR2
extern volatile unsigned char           PIR2                __at(0x012);
#ifndef _LIB_BUILD
asm("PIR2 equ 012h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2IF                 :1;
        unsigned C3IF                   :1;
        unsigned C4IF                   :1;
        unsigned BCL1IF                 :1;
        unsigned COG1IF                 :1;
        unsigned C1IF                   :1;
        unsigned C2IF                   :1;
        unsigned OSFIF                  :1;
    };
} PIR2bits_t;
extern volatile PIR2bits_t PIR2bits __at(0x012);
// bitfield macros
#define _PIR2_CCP2IF_POSN                                   0x0
#define _PIR2_CCP2IF_POSITION                               0x0
#define _PIR2_CCP2IF_SIZE                                   0x1
#define _PIR2_CCP2IF_LENGTH                                 0x1
#define _PIR2_CCP2IF_MASK                                   0x1
#define _PIR2_C3IF_POSN                                     0x1
#define _PIR2_C3IF_POSITION                                 0x1
#define _PIR2_C3IF_SIZE                                     0x1
#define _PIR2_C3IF_LENGTH                                   0x1
#define _PIR2_C3IF_MASK                                     0x2
#define _PIR2_C4IF_POSN                                     0x2
#define _PIR2_C4IF_POSITION                                 0x2
#define _PIR2_C4IF_SIZE                                     0x1
#define _PIR2_C4IF_LENGTH                                   0x1
#define _PIR2_C4IF_MASK                                     0x4
#define _PIR2_BCL1IF_POSN                                   0x3
#define _PIR2_BCL1IF_POSITION                               0x3
#define _PIR2_BCL1IF_SIZE                                   0x1
#define _PIR2_BCL1IF_LENGTH                                 0x1
#define _PIR2_BCL1IF_MASK                                   0x8
#define _PIR2_COG1IF_POSN                                   0x4
#define _PIR2_COG1IF_POSITION                               0x4
#define _PIR2_COG1IF_SIZE                                   0x1
#define _PIR2_COG1IF_LENGTH                                 0x1
#define _PIR2_COG1IF_MASK                                   0x10
#define _PIR2_C1IF_POSN                                     0x5
#define _PIR2_C1IF_POSITION                                 0x5
#define _PIR2_C1IF_SIZE                                     0x1
#define _PIR2_C1IF_LENGTH                                   0x1
#define _PIR2_C1IF_MASK                                     0x20
#define _PIR2_C2IF_POSN                                     0x6
#define _PIR2_C2IF_POSITION                                 0x6
#define _PIR2_C2IF_SIZE                                     0x1
#define _PIR2_C2IF_LENGTH                                   0x1
#define _PIR2_C2IF_MASK                                     0x40
#define _PIR2_OSFIF_POSN                                    0x7
#define _PIR2_OSFIF_POSITION                                0x7
#define _PIR2_OSFIF_SIZE                                    0x1
#define _PIR2_OSFIF_LENGTH                                  0x1
#define _PIR2_OSFIF_MASK                                    0x80

// Register: PIR3
#define PIR3 PIR3
extern volatile unsigned char           PIR3                __at(0x013);
#ifndef _LIB_BUILD
asm("PIR3 equ 013h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLC1IF                 :1;
        unsigned CLC2IF                 :1;
        unsigned CLC3IF                 :1;
        unsigned CLC4IF                 :1;
        unsigned ZCDIF                  :1;
        unsigned COG2IF                 :1;
    };
} PIR3bits_t;
extern volatile PIR3bits_t PIR3bits __at(0x013);
// bitfield macros
#define _PIR3_CLC1IF_POSN                                   0x0
#define _PIR3_CLC1IF_POSITION                               0x0
#define _PIR3_CLC1IF_SIZE                                   0x1
#define _PIR3_CLC1IF_LENGTH                                 0x1
#define _PIR3_CLC1IF_MASK                                   0x1
#define _PIR3_CLC2IF_POSN                                   0x1
#define _PIR3_CLC2IF_POSITION                               0x1
#define _PIR3_CLC2IF_SIZE                                   0x1
#define _PIR3_CLC2IF_LENGTH                                 0x1
#define _PIR3_CLC2IF_MASK                                   0x2
#define _PIR3_CLC3IF_POSN                                   0x2
#define _PIR3_CLC3IF_POSITION                               0x2
#define _PIR3_CLC3IF_SIZE                                   0x1
#define _PIR3_CLC3IF_LENGTH                                 0x1
#define _PIR3_CLC3IF_MASK                                   0x4
#define _PIR3_CLC4IF_POSN                                   0x3
#define _PIR3_CLC4IF_POSITION                               0x3
#define _PIR3_CLC4IF_SIZE                                   0x1
#define _PIR3_CLC4IF_LENGTH                                 0x1
#define _PIR3_CLC4IF_MASK                                   0x8
#define _PIR3_ZCDIF_POSN                                    0x4
#define _PIR3_ZCDIF_POSITION                                0x4
#define _PIR3_ZCDIF_SIZE                                    0x1
#define _PIR3_ZCDIF_LENGTH                                  0x1
#define _PIR3_ZCDIF_MASK                                    0x10
#define _PIR3_COG2IF_POSN                                   0x5
#define _PIR3_COG2IF_POSITION                               0x5
#define _PIR3_COG2IF_SIZE                                   0x1
#define _PIR3_COG2IF_LENGTH                                 0x1
#define _PIR3_COG2IF_MASK                                   0x20

// Register: PIR4
#define PIR4 PIR4
extern volatile unsigned char           PIR4                __at(0x014);
#ifndef _LIB_BUILD
asm("PIR4 equ 014h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR4IF                 :1;
        unsigned TMR6IF                 :1;
        unsigned TMR3IF                 :1;
        unsigned TMR3GIF                :1;
        unsigned TMR5IF                 :1;
        unsigned TMR5GIF                :1;
        unsigned TMR8IF                 :1;
    };
} PIR4bits_t;
extern volatile PIR4bits_t PIR4bits __at(0x014);
// bitfield macros
#define _PIR4_TMR4IF_POSN                                   0x0
#define _PIR4_TMR4IF_POSITION                               0x0
#define _PIR4_TMR4IF_SIZE                                   0x1
#define _PIR4_TMR4IF_LENGTH                                 0x1
#define _PIR4_TMR4IF_MASK                                   0x1
#define _PIR4_TMR6IF_POSN                                   0x1
#define _PIR4_TMR6IF_POSITION                               0x1
#define _PIR4_TMR6IF_SIZE                                   0x1
#define _PIR4_TMR6IF_LENGTH                                 0x1
#define _PIR4_TMR6IF_MASK                                   0x2
#define _PIR4_TMR3IF_POSN                                   0x2
#define _PIR4_TMR3IF_POSITION                               0x2
#define _PIR4_TMR3IF_SIZE                                   0x1
#define _PIR4_TMR3IF_LENGTH                                 0x1
#define _PIR4_TMR3IF_MASK                                   0x4
#define _PIR4_TMR3GIF_POSN                                  0x3
#define _PIR4_TMR3GIF_POSITION                              0x3
#define _PIR4_TMR3GIF_SIZE                                  0x1
#define _PIR4_TMR3GIF_LENGTH                                0x1
#define _PIR4_TMR3GIF_MASK                                  0x8
#define _PIR4_TMR5IF_POSN                                   0x4
#define _PIR4_TMR5IF_POSITION                               0x4
#define _PIR4_TMR5IF_SIZE                                   0x1
#define _PIR4_TMR5IF_LENGTH                                 0x1
#define _PIR4_TMR5IF_MASK                                   0x10
#define _PIR4_TMR5GIF_POSN                                  0x5
#define _PIR4_TMR5GIF_POSITION                              0x5
#define _PIR4_TMR5GIF_SIZE                                  0x1
#define _PIR4_TMR5GIF_LENGTH                                0x1
#define _PIR4_TMR5GIF_MASK                                  0x20
#define _PIR4_TMR8IF_POSN                                   0x6
#define _PIR4_TMR8IF_POSITION                               0x6
#define _PIR4_TMR8IF_SIZE                                   0x1
#define _PIR4_TMR8IF_LENGTH                                 0x1
#define _PIR4_TMR8IF_MASK                                   0x40

// Register: PIR5
#define PIR5 PIR5
extern volatile unsigned char           PIR5                __at(0x015);
#ifndef _LIB_BUILD
asm("PIR5 equ 015h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C5IF                   :1;
        unsigned C6IF                   :1;
        unsigned C7IF                   :1;
        unsigned C8IF                   :1;
        unsigned COG3IF                 :1;
        unsigned COG4IF                 :1;
        unsigned CCP7IF                 :1;
        unsigned CCP8IF                 :1;
    };
} PIR5bits_t;
extern volatile PIR5bits_t PIR5bits __at(0x015);
// bitfield macros
#define _PIR5_C5IF_POSN                                     0x0
#define _PIR5_C5IF_POSITION                                 0x0
#define _PIR5_C5IF_SIZE                                     0x1
#define _PIR5_C5IF_LENGTH                                   0x1
#define _PIR5_C5IF_MASK                                     0x1
#define _PIR5_C6IF_POSN                                     0x1
#define _PIR5_C6IF_POSITION                                 0x1
#define _PIR5_C6IF_SIZE                                     0x1
#define _PIR5_C6IF_LENGTH                                   0x1
#define _PIR5_C6IF_MASK                                     0x2
#define _PIR5_C7IF_POSN                                     0x2
#define _PIR5_C7IF_POSITION                                 0x2
#define _PIR5_C7IF_SIZE                                     0x1
#define _PIR5_C7IF_LENGTH                                   0x1
#define _PIR5_C7IF_MASK                                     0x4
#define _PIR5_C8IF_POSN                                     0x3
#define _PIR5_C8IF_POSITION                                 0x3
#define _PIR5_C8IF_SIZE                                     0x1
#define _PIR5_C8IF_LENGTH                                   0x1
#define _PIR5_C8IF_MASK                                     0x8
#define _PIR5_COG3IF_POSN                                   0x4
#define _PIR5_COG3IF_POSITION                               0x4
#define _PIR5_COG3IF_SIZE                                   0x1
#define _PIR5_COG3IF_LENGTH                                 0x1
#define _PIR5_COG3IF_MASK                                   0x10
#define _PIR5_COG4IF_POSN                                   0x5
#define _PIR5_COG4IF_POSITION                               0x5
#define _PIR5_COG4IF_SIZE                                   0x1
#define _PIR5_COG4IF_LENGTH                                 0x1
#define _PIR5_COG4IF_MASK                                   0x20
#define _PIR5_CCP7IF_POSN                                   0x6
#define _PIR5_CCP7IF_POSITION                               0x6
#define _PIR5_CCP7IF_SIZE                                   0x1
#define _PIR5_CCP7IF_LENGTH                                 0x1
#define _PIR5_CCP7IF_MASK                                   0x40
#define _PIR5_CCP8IF_POSN                                   0x7
#define _PIR5_CCP8IF_POSITION                               0x7
#define _PIR5_CCP8IF_SIZE                                   0x1
#define _PIR5_CCP8IF_LENGTH                                 0x1
#define _PIR5_CCP8IF_MASK                                   0x80

// Register: PIR6
#define PIR6 PIR6
extern volatile unsigned char           PIR6                __at(0x016);
#ifndef _LIB_BUILD
asm("PIR6 equ 016h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PWM5IF                 :1;
        unsigned PWM6IF                 :1;
        unsigned PWM11IF                :1;
        unsigned PWM12IF                :1;
    };
} PIR6bits_t;
extern volatile PIR6bits_t PIR6bits __at(0x016);
// bitfield macros
#define _PIR6_PWM5IF_POSN                                   0x0
#define _PIR6_PWM5IF_POSITION                               0x0
#define _PIR6_PWM5IF_SIZE                                   0x1
#define _PIR6_PWM5IF_LENGTH                                 0x1
#define _PIR6_PWM5IF_MASK                                   0x1
#define _PIR6_PWM6IF_POSN                                   0x1
#define _PIR6_PWM6IF_POSITION                               0x1
#define _PIR6_PWM6IF_SIZE                                   0x1
#define _PIR6_PWM6IF_LENGTH                                 0x1
#define _PIR6_PWM6IF_MASK                                   0x2
#define _PIR6_PWM11IF_POSN                                  0x2
#define _PIR6_PWM11IF_POSITION                              0x2
#define _PIR6_PWM11IF_SIZE                                  0x1
#define _PIR6_PWM11IF_LENGTH                                0x1
#define _PIR6_PWM11IF_MASK                                  0x4
#define _PIR6_PWM12IF_POSN                                  0x3
#define _PIR6_PWM12IF_POSITION                              0x3
#define _PIR6_PWM12IF_SIZE                                  0x1
#define _PIR6_PWM12IF_LENGTH                                0x1
#define _PIR6_PWM12IF_MASK                                  0x8

// Register: TMR0
#define TMR0 TMR0
extern volatile unsigned char           TMR0                __at(0x017);
#ifndef _LIB_BUILD
asm("TMR0 equ 017h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR0                   :8;
    };
} TMR0bits_t;
extern volatile TMR0bits_t TMR0bits __at(0x017);
// bitfield macros
#define _TMR0_TMR0_POSN                                     0x0
#define _TMR0_TMR0_POSITION                                 0x0
#define _TMR0_TMR0_SIZE                                     0x8
#define _TMR0_TMR0_LENGTH                                   0x8
#define _TMR0_TMR0_MASK                                     0xFF

// Register: TMR1
#define TMR1 TMR1
extern volatile unsigned short          TMR1                __at(0x018);
#ifndef _LIB_BUILD
asm("TMR1 equ 018h");
#endif

// Register: TMR1L
#define TMR1L TMR1L
extern volatile unsigned char           TMR1L               __at(0x018);
#ifndef _LIB_BUILD
asm("TMR1L equ 018h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
} TMR1Lbits_t;
extern volatile TMR1Lbits_t TMR1Lbits __at(0x018);
// bitfield macros
#define _TMR1L_TMR_POSN                                     0x0
#define _TMR1L_TMR_POSITION                                 0x0
#define _TMR1L_TMR_SIZE                                     0x8
#define _TMR1L_TMR_LENGTH                                   0x8
#define _TMR1L_TMR_MASK                                     0xFF

// Register: TMR1H
#define TMR1H TMR1H
extern volatile unsigned char           TMR1H               __at(0x019);
#ifndef _LIB_BUILD
asm("TMR1H equ 019h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
} TMR1Hbits_t;
extern volatile TMR1Hbits_t TMR1Hbits __at(0x019);
// bitfield macros
#define _TMR1H_TMR_POSN                                     0x0
#define _TMR1H_TMR_POSITION                                 0x0
#define _TMR1H_TMR_SIZE                                     0x8
#define _TMR1H_TMR_LENGTH                                   0x8
#define _TMR1H_TMR_MASK                                     0xFF

// Register: T1CON
#define T1CON T1CON
extern volatile unsigned char           T1CON               __at(0x01A);
#ifndef _LIB_BUILD
asm("T1CON equ 01Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ON                     :1;
        unsigned                        :1;
        unsigned nSYNC                  :1;
        unsigned OSCEN                  :1;
        unsigned CKPS                   :2;
        unsigned CS                     :2;
    };
    struct {
        unsigned TMRON                  :1;
        unsigned                        :1;
        unsigned SYNC                   :1;
        unsigned SOSCEN                 :1;
        unsigned CKPS0                  :1;
        unsigned CKPS1                  :1;
        unsigned CS0                    :1;
        unsigned CS1                    :1;
    };
    struct {
        unsigned TMR1ON                 :1;
        unsigned                        :1;
        unsigned nT1SYNC                :1;
        unsigned T1OSCEN                :1;
        unsigned                        :2;
        unsigned T1CS0                  :1;
        unsigned T1CS1                  :1;
    };
    struct {
        unsigned T1ON                   :1;
        unsigned                        :3;
        unsigned T1CKPS0                :1;
        unsigned T1CKPS1                :1;
        unsigned TMR1CS0                :1;
        unsigned TMR1CS1                :1;
    };
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits __at(0x01A);
// bitfield macros
#define _T1CON_ON_POSN                                      0x0
#define _T1CON_ON_POSITION                                  0x0
#define _T1CON_ON_SIZE                                      0x1
#define _T1CON_ON_LENGTH                                    0x1
#define _T1CON_ON_MASK                                      0x1
#define _T1CON_nSYNC_POSN                                   0x2
#define _T1CON_nSYNC_POSITION                               0x2
#define _T1CON_nSYNC_SIZE                                   0x1
#define _T1CON_nSYNC_LENGTH                                 0x1
#define _T1CON_nSYNC_MASK                                   0x4
#define _T1CON_OSCEN_POSN                                   0x3
#define _T1CON_OSCEN_POSITION                               0x3
#define _T1CON_OSCEN_SIZE                                   0x1
#define _T1CON_OSCEN_LENGTH                                 0x1
#define _T1CON_OSCEN_MASK                                   0x8
#define _T1CON_CKPS_POSN                                    0x4
#define _T1CON_CKPS_POSITION                                0x4
#define _T1CON_CKPS_SIZE                                    0x2
#define _T1CON_CKPS_LENGTH                                  0x2
#define _T1CON_CKPS_MASK                                    0x30
#define _T1CON_CS_POSN                                      0x6
#define _T1CON_CS_POSITION                                  0x6
#define _T1CON_CS_SIZE                                      0x2
#define _T1CON_CS_LENGTH                                    0x2
#define _T1CON_CS_MASK                                      0xC0
#define _T1CON_TMRON_POSN                                   0x0
#define _T1CON_TMRON_POSITION                               0x0
#define _T1CON_TMRON_SIZE                                   0x1
#define _T1CON_TMRON_LENGTH                                 0x1
#define _T1CON_TMRON_MASK                                   0x1
#define _T1CON_SYNC_POSN                                    0x2
#define _T1CON_SYNC_POSITION                                0x2
#define _T1CON_SYNC_SIZE                                    0x1
#define _T1CON_SYNC_LENGTH                                  0x1
#define _T1CON_SYNC_MASK                                    0x4
#define _T1CON_SOSCEN_POSN                                  0x3
#define _T1CON_SOSCEN_POSITION                              0x3
#define _T1CON_SOSCEN_SIZE                                  0x1
#define _T1CON_SOSCEN_LENGTH                                0x1
#define _T1CON_SOSCEN_MASK                                  0x8
#define _T1CON_CKPS0_POSN                                   0x4
#define _T1CON_CKPS0_POSITION                               0x4
#define _T1CON_CKPS0_SIZE                                   0x1
#define _T1CON_CKPS0_LENGTH                                 0x1
#define _T1CON_CKPS0_MASK                                   0x10
#define _T1CON_CKPS1_POSN                                   0x5
#define _T1CON_CKPS1_POSITION                               0x5
#define _T1CON_CKPS1_SIZE                                   0x1
#define _T1CON_CKPS1_LENGTH                                 0x1
#define _T1CON_CKPS1_MASK                                   0x20
#define _T1CON_CS0_POSN                                     0x6
#define _T1CON_CS0_POSITION                                 0x6
#define _T1CON_CS0_SIZE                                     0x1
#define _T1CON_CS0_LENGTH                                   0x1
#define _T1CON_CS0_MASK                                     0x40
#define _T1CON_CS1_POSN                                     0x7
#define _T1CON_CS1_POSITION                                 0x7
#define _T1CON_CS1_SIZE                                     0x1
#define _T1CON_CS1_LENGTH                                   0x1
#define _T1CON_CS1_MASK                                     0x80
#define _T1CON_TMR1ON_POSN                                  0x0
#define _T1CON_TMR1ON_POSITION                              0x0
#define _T1CON_TMR1ON_SIZE                                  0x1
#define _T1CON_TMR1ON_LENGTH                                0x1
#define _T1CON_TMR1ON_MASK                                  0x1
#define _T1CON_nT1SYNC_POSN                                 0x2
#define _T1CON_nT1SYNC_POSITION                             0x2
#define _T1CON_nT1SYNC_SIZE                                 0x1
#define _T1CON_nT1SYNC_LENGTH                               0x1
#define _T1CON_nT1SYNC_MASK                                 0x4
#define _T1CON_T1OSCEN_POSN                                 0x3
#define _T1CON_T1OSCEN_POSITION                             0x3
#define _T1CON_T1OSCEN_SIZE                                 0x1
#define _T1CON_T1OSCEN_LENGTH                               0x1
#define _T1CON_T1OSCEN_MASK                                 0x8
#define _T1CON_T1CS0_POSN                                   0x6
#define _T1CON_T1CS0_POSITION                               0x6
#define _T1CON_T1CS0_SIZE                                   0x1
#define _T1CON_T1CS0_LENGTH                                 0x1
#define _T1CON_T1CS0_MASK                                   0x40
#define _T1CON_T1CS1_POSN                                   0x7
#define _T1CON_T1CS1_POSITION                               0x7
#define _T1CON_T1CS1_SIZE                                   0x1
#define _T1CON_T1CS1_LENGTH                                 0x1
#define _T1CON_T1CS1_MASK                                   0x80
#define _T1CON_T1ON_POSN                                    0x0
#define _T1CON_T1ON_POSITION                                0x0
#define _T1CON_T1ON_SIZE                                    0x1
#define _T1CON_T1ON_LENGTH                                  0x1
#define _T1CON_T1ON_MASK                                    0x1
#define _T1CON_T1CKPS0_POSN                                 0x4
#define _T1CON_T1CKPS0_POSITION                             0x4
#define _T1CON_T1CKPS0_SIZE                                 0x1
#define _T1CON_T1CKPS0_LENGTH                               0x1
#define _T1CON_T1CKPS0_MASK                                 0x10
#define _T1CON_T1CKPS1_POSN                                 0x5
#define _T1CON_T1CKPS1_POSITION                             0x5
#define _T1CON_T1CKPS1_SIZE                                 0x1
#define _T1CON_T1CKPS1_LENGTH                               0x1
#define _T1CON_T1CKPS1_MASK                                 0x20
#define _T1CON_TMR1CS0_POSN                                 0x6
#define _T1CON_TMR1CS0_POSITION                             0x6
#define _T1CON_TMR1CS0_SIZE                                 0x1
#define _T1CON_TMR1CS0_LENGTH                               0x1
#define _T1CON_TMR1CS0_MASK                                 0x40
#define _T1CON_TMR1CS1_POSN                                 0x7
#define _T1CON_TMR1CS1_POSITION                             0x7
#define _T1CON_TMR1CS1_SIZE                                 0x1
#define _T1CON_TMR1CS1_LENGTH                               0x1
#define _T1CON_TMR1CS1_MASK                                 0x80

// Register: T1GCON
#define T1GCON T1GCON
extern volatile unsigned char           T1GCON              __at(0x01B);
#ifndef _LIB_BUILD
asm("T1GCON equ 01Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned GSS                    :2;
        unsigned GVAL                   :1;
        unsigned GGO_nDONE              :1;
        unsigned GSPM                   :1;
        unsigned GTM                    :1;
        unsigned GPOL                   :1;
        unsigned GE                     :1;
    };
    struct {
        unsigned GSS0                   :1;
        unsigned GSS1                   :1;
        unsigned                        :5;
        unsigned T1GE                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned T1GVAL                 :1;
        unsigned T1GGO_nDONE            :1;
        unsigned T1GSPM                 :1;
        unsigned T1GTM                  :1;
        unsigned T1GPOL                 :1;
        unsigned TMR1GE                 :1;
    };
    struct {
        unsigned T1GSS0                 :1;
        unsigned T1GSS1                 :1;
    };
} T1GCONbits_t;
extern volatile T1GCONbits_t T1GCONbits __at(0x01B);
// bitfield macros
#define _T1GCON_GSS_POSN                                    0x0
#define _T1GCON_GSS_POSITION                                0x0
#define _T1GCON_GSS_SIZE                                    0x2
#define _T1GCON_GSS_LENGTH                                  0x2
#define _T1GCON_GSS_MASK                                    0x3
#define _T1GCON_GVAL_POSN                                   0x2
#define _T1GCON_GVAL_POSITION                               0x2
#define _T1GCON_GVAL_SIZE                                   0x1
#define _T1GCON_GVAL_LENGTH                                 0x1
#define _T1GCON_GVAL_MASK                                   0x4
#define _T1GCON_GGO_nDONE_POSN                              0x3
#define _T1GCON_GGO_nDONE_POSITION                          0x3
#define _T1GCON_GGO_nDONE_SIZE                              0x1
#define _T1GCON_GGO_nDONE_LENGTH                            0x1
#define _T1GCON_GGO_nDONE_MASK                              0x8
#define _T1GCON_GSPM_POSN                                   0x4
#define _T1GCON_GSPM_POSITION                               0x4
#define _T1GCON_GSPM_SIZE                                   0x1
#define _T1GCON_GSPM_LENGTH                                 0x1
#define _T1GCON_GSPM_MASK                                   0x10
#define _T1GCON_GTM_POSN                                    0x5
#define _T1GCON_GTM_POSITION                                0x5
#define _T1GCON_GTM_SIZE                                    0x1
#define _T1GCON_GTM_LENGTH                                  0x1
#define _T1GCON_GTM_MASK                                    0x20
#define _T1GCON_GPOL_POSN                                   0x6
#define _T1GCON_GPOL_POSITION                               0x6
#define _T1GCON_GPOL_SIZE                                   0x1
#define _T1GCON_GPOL_LENGTH                                 0x1
#define _T1GCON_GPOL_MASK                                   0x40
#define _T1GCON_GE_POSN                                     0x7
#define _T1GCON_GE_POSITION                                 0x7
#define _T1GCON_GE_SIZE                                     0x1
#define _T1GCON_GE_LENGTH                                   0x1
#define _T1GCON_GE_MASK                                     0x80
#define _T1GCON_GSS0_POSN                                   0x0
#define _T1GCON_GSS0_POSITION                               0x0
#define _T1GCON_GSS0_SIZE                                   0x1
#define _T1GCON_GSS0_LENGTH                                 0x1
#define _T1GCON_GSS0_MASK                                   0x1
#define _T1GCON_GSS1_POSN                                   0x1
#define _T1GCON_GSS1_POSITION                               0x1
#define _T1GCON_GSS1_SIZE                                   0x1
#define _T1GCON_GSS1_LENGTH                                 0x1
#define _T1GCON_GSS1_MASK                                   0x2
#define _T1GCON_T1GE_POSN                                   0x7
#define _T1GCON_T1GE_POSITION                               0x7
#define _T1GCON_T1GE_SIZE                                   0x1
#define _T1GCON_T1GE_LENGTH                                 0x1
#define _T1GCON_T1GE_MASK                                   0x80
#define _T1GCON_T1GVAL_POSN                                 0x2
#define _T1GCON_T1GVAL_POSITION                             0x2
#define _T1GCON_T1GVAL_SIZE                                 0x1
#define _T1GCON_T1GVAL_LENGTH                               0x1
#define _T1GCON_T1GVAL_MASK                                 0x4
#define _T1GCON_T1GGO_nDONE_POSN                            0x3
#define _T1GCON_T1GGO_nDONE_POSITION                        0x3
#define _T1GCON_T1GGO_nDONE_SIZE                            0x1
#define _T1GCON_T1GGO_nDONE_LENGTH                          0x1
#define _T1GCON_T1GGO_nDONE_MASK                            0x8
#define _T1GCON_T1GSPM_POSN                                 0x4
#define _T1GCON_T1GSPM_POSITION                             0x4
#define _T1GCON_T1GSPM_SIZE                                 0x1
#define _T1GCON_T1GSPM_LENGTH                               0x1
#define _T1GCON_T1GSPM_MASK                                 0x10
#define _T1GCON_T1GTM_POSN                                  0x5
#define _T1GCON_T1GTM_POSITION                              0x5
#define _T1GCON_T1GTM_SIZE                                  0x1
#define _T1GCON_T1GTM_LENGTH                                0x1
#define _T1GCON_T1GTM_MASK                                  0x20
#define _T1GCON_T1GPOL_POSN                                 0x6
#define _T1GCON_T1GPOL_POSITION                             0x6
#define _T1GCON_T1GPOL_SIZE                                 0x1
#define _T1GCON_T1GPOL_LENGTH                               0x1
#define _T1GCON_T1GPOL_MASK                                 0x40
#define _T1GCON_TMR1GE_POSN                                 0x7
#define _T1GCON_TMR1GE_POSITION                             0x7
#define _T1GCON_TMR1GE_SIZE                                 0x1
#define _T1GCON_TMR1GE_LENGTH                               0x1
#define _T1GCON_TMR1GE_MASK                                 0x80
#define _T1GCON_T1GSS0_POSN                                 0x0
#define _T1GCON_T1GSS0_POSITION                             0x0
#define _T1GCON_T1GSS0_SIZE                                 0x1
#define _T1GCON_T1GSS0_LENGTH                               0x1
#define _T1GCON_T1GSS0_MASK                                 0x1
#define _T1GCON_T1GSS1_POSN                                 0x1
#define _T1GCON_T1GSS1_POSITION                             0x1
#define _T1GCON_T1GSS1_SIZE                                 0x1
#define _T1GCON_T1GSS1_LENGTH                               0x1
#define _T1GCON_T1GSS1_MASK                                 0x2

// Register: TMR3
#define TMR3 TMR3
extern volatile unsigned short          TMR3                __at(0x01C);
#ifndef _LIB_BUILD
asm("TMR3 equ 01Ch");
#endif

// Register: TMR3L
#define TMR3L TMR3L
extern volatile unsigned char           TMR3L               __at(0x01C);
#ifndef _LIB_BUILD
asm("TMR3L equ 01Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
} TMR3Lbits_t;
extern volatile TMR3Lbits_t TMR3Lbits __at(0x01C);
// bitfield macros
#define _TMR3L_TMR_POSN                                     0x0
#define _TMR3L_TMR_POSITION                                 0x0
#define _TMR3L_TMR_SIZE                                     0x8
#define _TMR3L_TMR_LENGTH                                   0x8
#define _TMR3L_TMR_MASK                                     0xFF

// Register: TMR3H
#define TMR3H TMR3H
extern volatile unsigned char           TMR3H               __at(0x01D);
#ifndef _LIB_BUILD
asm("TMR3H equ 01Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
} TMR3Hbits_t;
extern volatile TMR3Hbits_t TMR3Hbits __at(0x01D);
// bitfield macros
#define _TMR3H_TMR_POSN                                     0x0
#define _TMR3H_TMR_POSITION                                 0x0
#define _TMR3H_TMR_SIZE                                     0x8
#define _TMR3H_TMR_LENGTH                                   0x8
#define _TMR3H_TMR_MASK                                     0xFF

// Register: T3CON
#define T3CON T3CON
extern volatile unsigned char           T3CON               __at(0x01E);
#ifndef _LIB_BUILD
asm("T3CON equ 01Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ON                     :1;
        unsigned                        :1;
        unsigned nSYNC                  :1;
        unsigned OSCEN                  :1;
        unsigned CKPS                   :2;
        unsigned CS                     :2;
    };
    struct {
        unsigned TMRON                  :1;
        unsigned                        :1;
        unsigned SYNC                   :1;
        unsigned SOSCEN                 :1;
        unsigned CKPS0                  :1;
        unsigned CKPS1                  :1;
        unsigned CS0                    :1;
        unsigned CS1                    :1;
    };
    struct {
        unsigned TMR3ON                 :1;
        unsigned                        :1;
        unsigned nT3SYNC                :1;
        unsigned T3OSCEN                :1;
        unsigned                        :2;
        unsigned T3CS0                  :1;
        unsigned T3CS1                  :1;
    };
    struct {
        unsigned T3ON                   :1;
        unsigned                        :3;
        unsigned T3CKPS0                :1;
        unsigned T3CKPS1                :1;
        unsigned TMR3CS0                :1;
        unsigned TMR3CS1                :1;
    };
} T3CONbits_t;
extern volatile T3CONbits_t T3CONbits __at(0x01E);
// bitfield macros
#define _T3CON_ON_POSN                                      0x0
#define _T3CON_ON_POSITION                                  0x0
#define _T3CON_ON_SIZE                                      0x1
#define _T3CON_ON_LENGTH                                    0x1
#define _T3CON_ON_MASK                                      0x1
#define _T3CON_nSYNC_POSN                                   0x2
#define _T3CON_nSYNC_POSITION                               0x2
#define _T3CON_nSYNC_SIZE                                   0x1
#define _T3CON_nSYNC_LENGTH                                 0x1
#define _T3CON_nSYNC_MASK                                   0x4
#define _T3CON_OSCEN_POSN                                   0x3
#define _T3CON_OSCEN_POSITION                               0x3
#define _T3CON_OSCEN_SIZE                                   0x1
#define _T3CON_OSCEN_LENGTH                                 0x1
#define _T3CON_OSCEN_MASK                                   0x8
#define _T3CON_CKPS_POSN                                    0x4
#define _T3CON_CKPS_POSITION                                0x4
#define _T3CON_CKPS_SIZE                                    0x2
#define _T3CON_CKPS_LENGTH                                  0x2
#define _T3CON_CKPS_MASK                                    0x30
#define _T3CON_CS_POSN                                      0x6
#define _T3CON_CS_POSITION                                  0x6
#define _T3CON_CS_SIZE                                      0x2
#define _T3CON_CS_LENGTH                                    0x2
#define _T3CON_CS_MASK                                      0xC0
#define _T3CON_TMRON_POSN                                   0x0
#define _T3CON_TMRON_POSITION                               0x0
#define _T3CON_TMRON_SIZE                                   0x1
#define _T3CON_TMRON_LENGTH                                 0x1
#define _T3CON_TMRON_MASK                                   0x1
#define _T3CON_SYNC_POSN                                    0x2
#define _T3CON_SYNC_POSITION                                0x2
#define _T3CON_SYNC_SIZE                                    0x1
#define _T3CON_SYNC_LENGTH                                  0x1
#define _T3CON_SYNC_MASK                                    0x4
#define _T3CON_SOSCEN_POSN                                  0x3
#define _T3CON_SOSCEN_POSITION                              0x3
#define _T3CON_SOSCEN_SIZE                                  0x1
#define _T3CON_SOSCEN_LENGTH                                0x1
#define _T3CON_SOSCEN_MASK                                  0x8
#define _T3CON_CKPS0_POSN                                   0x4
#define _T3CON_CKPS0_POSITION                               0x4
#define _T3CON_CKPS0_SIZE                                   0x1
#define _T3CON_CKPS0_LENGTH                                 0x1
#define _T3CON_CKPS0_MASK                                   0x10
#define _T3CON_CKPS1_POSN                                   0x5
#define _T3CON_CKPS1_POSITION                               0x5
#define _T3CON_CKPS1_SIZE                                   0x1
#define _T3CON_CKPS1_LENGTH                                 0x1
#define _T3CON_CKPS1_MASK                                   0x20
#define _T3CON_CS0_POSN                                     0x6
#define _T3CON_CS0_POSITION                                 0x6
#define _T3CON_CS0_SIZE                                     0x1
#define _T3CON_CS0_LENGTH                                   0x1
#define _T3CON_CS0_MASK                                     0x40
#define _T3CON_CS1_POSN                                     0x7
#define _T3CON_CS1_POSITION                                 0x7
#define _T3CON_CS1_SIZE                                     0x1
#define _T3CON_CS1_LENGTH                                   0x1
#define _T3CON_CS1_MASK                                     0x80
#define _T3CON_TMR3ON_POSN                                  0x0
#define _T3CON_TMR3ON_POSITION                              0x0
#define _T3CON_TMR3ON_SIZE                                  0x1
#define _T3CON_TMR3ON_LENGTH                                0x1
#define _T3CON_TMR3ON_MASK                                  0x1
#define _T3CON_nT3SYNC_POSN                                 0x2
#define _T3CON_nT3SYNC_POSITION                             0x2
#define _T3CON_nT3SYNC_SIZE                                 0x1
#define _T3CON_nT3SYNC_LENGTH                               0x1
#define _T3CON_nT3SYNC_MASK                                 0x4
#define _T3CON_T3OSCEN_POSN                                 0x3
#define _T3CON_T3OSCEN_POSITION                             0x3
#define _T3CON_T3OSCEN_SIZE                                 0x1
#define _T3CON_T3OSCEN_LENGTH                               0x1
#define _T3CON_T3OSCEN_MASK                                 0x8
#define _T3CON_T3CS0_POSN                                   0x6
#define _T3CON_T3CS0_POSITION                               0x6
#define _T3CON_T3CS0_SIZE                                   0x1
#define _T3CON_T3CS0_LENGTH                                 0x1
#define _T3CON_T3CS0_MASK                                   0x40
#define _T3CON_T3CS1_POSN                                   0x7
#define _T3CON_T3CS1_POSITION                               0x7
#define _T3CON_T3CS1_SIZE                                   0x1
#define _T3CON_T3CS1_LENGTH                                 0x1
#define _T3CON_T3CS1_MASK                                   0x80
#define _T3CON_T3ON_POSN                                    0x0
#define _T3CON_T3ON_POSITION                                0x0
#define _T3CON_T3ON_SIZE                                    0x1
#define _T3CON_T3ON_LENGTH                                  0x1
#define _T3CON_T3ON_MASK                                    0x1
#define _T3CON_T3CKPS0_POSN                                 0x4
#define _T3CON_T3CKPS0_POSITION                             0x4
#define _T3CON_T3CKPS0_SIZE                                 0x1
#define _T3CON_T3CKPS0_LENGTH                               0x1
#define _T3CON_T3CKPS0_MASK                                 0x10
#define _T3CON_T3CKPS1_POSN                                 0x5
#define _T3CON_T3CKPS1_POSITION                             0x5
#define _T3CON_T3CKPS1_SIZE                                 0x1
#define _T3CON_T3CKPS1_LENGTH                               0x1
#define _T3CON_T3CKPS1_MASK                                 0x20
#define _T3CON_TMR3CS0_POSN                                 0x6
#define _T3CON_TMR3CS0_POSITION                             0x6
#define _T3CON_TMR3CS0_SIZE                                 0x1
#define _T3CON_TMR3CS0_LENGTH                               0x1
#define _T3CON_TMR3CS0_MASK                                 0x40
#define _T3CON_TMR3CS1_POSN                                 0x7
#define _T3CON_TMR3CS1_POSITION                             0x7
#define _T3CON_TMR3CS1_SIZE                                 0x1
#define _T3CON_TMR3CS1_LENGTH                               0x1
#define _T3CON_TMR3CS1_MASK                                 0x80

// Register: T3GCON
#define T3GCON T3GCON
extern volatile unsigned char           T3GCON              __at(0x01F);
#ifndef _LIB_BUILD
asm("T3GCON equ 01Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned GSS                    :2;
        unsigned GVAL                   :1;
        unsigned GGO_nDONE              :1;
        unsigned GSPM                   :1;
        unsigned GTM                    :1;
        unsigned GPOL                   :1;
        unsigned GE                     :1;
    };
    struct {
        unsigned GSS0                   :1;
        unsigned GSS1                   :1;
        unsigned                        :5;
        unsigned T3GE                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned T3GVAL                 :1;
        unsigned T3GGO_nDONE            :1;
        unsigned T3GSPM                 :1;
        unsigned T3GTM                  :1;
        unsigned T3GPOL                 :1;
        unsigned TMR3GE                 :1;
    };
    struct {
        unsigned T3GSS0                 :1;
        unsigned T3GSS1                 :1;
    };
} T3GCONbits_t;
extern volatile T3GCONbits_t T3GCONbits __at(0x01F);
// bitfield macros
#define _T3GCON_GSS_POSN                                    0x0
#define _T3GCON_GSS_POSITION                                0x0
#define _T3GCON_GSS_SIZE                                    0x2
#define _T3GCON_GSS_LENGTH                                  0x2
#define _T3GCON_GSS_MASK                                    0x3
#define _T3GCON_GVAL_POSN                                   0x2
#define _T3GCON_GVAL_POSITION                               0x2
#define _T3GCON_GVAL_SIZE                                   0x1
#define _T3GCON_GVAL_LENGTH                                 0x1
#define _T3GCON_GVAL_MASK                                   0x4
#define _T3GCON_GGO_nDONE_POSN                              0x3
#define _T3GCON_GGO_nDONE_POSITION                          0x3
#define _T3GCON_GGO_nDONE_SIZE                              0x1
#define _T3GCON_GGO_nDONE_LENGTH                            0x1
#define _T3GCON_GGO_nDONE_MASK                              0x8
#define _T3GCON_GSPM_POSN                                   0x4
#define _T3GCON_GSPM_POSITION                               0x4
#define _T3GCON_GSPM_SIZE                                   0x1
#define _T3GCON_GSPM_LENGTH                                 0x1
#define _T3GCON_GSPM_MASK                                   0x10
#define _T3GCON_GTM_POSN                                    0x5
#define _T3GCON_GTM_POSITION                                0x5
#define _T3GCON_GTM_SIZE                                    0x1
#define _T3GCON_GTM_LENGTH                                  0x1
#define _T3GCON_GTM_MASK                                    0x20
#define _T3GCON_GPOL_POSN                                   0x6
#define _T3GCON_GPOL_POSITION                               0x6
#define _T3GCON_GPOL_SIZE                                   0x1
#define _T3GCON_GPOL_LENGTH                                 0x1
#define _T3GCON_GPOL_MASK                                   0x40
#define _T3GCON_GE_POSN                                     0x7
#define _T3GCON_GE_POSITION                                 0x7
#define _T3GCON_GE_SIZE                                     0x1
#define _T3GCON_GE_LENGTH                                   0x1
#define _T3GCON_GE_MASK                                     0x80
#define _T3GCON_GSS0_POSN                                   0x0
#define _T3GCON_GSS0_POSITION                               0x0
#define _T3GCON_GSS0_SIZE                                   0x1
#define _T3GCON_GSS0_LENGTH                                 0x1
#define _T3GCON_GSS0_MASK                                   0x1
#define _T3GCON_GSS1_POSN                                   0x1
#define _T3GCON_GSS1_POSITION                               0x1
#define _T3GCON_GSS1_SIZE                                   0x1
#define _T3GCON_GSS1_LENGTH                                 0x1
#define _T3GCON_GSS1_MASK                                   0x2
#define _T3GCON_T3GE_POSN                                   0x7
#define _T3GCON_T3GE_POSITION                               0x7
#define _T3GCON_T3GE_SIZE                                   0x1
#define _T3GCON_T3GE_LENGTH                                 0x1
#define _T3GCON_T3GE_MASK                                   0x80
#define _T3GCON_T3GVAL_POSN                                 0x2
#define _T3GCON_T3GVAL_POSITION                             0x2
#define _T3GCON_T3GVAL_SIZE                                 0x1
#define _T3GCON_T3GVAL_LENGTH                               0x1
#define _T3GCON_T3GVAL_MASK                                 0x4
#define _T3GCON_T3GGO_nDONE_POSN                            0x3
#define _T3GCON_T3GGO_nDONE_POSITION                        0x3
#define _T3GCON_T3GGO_nDONE_SIZE                            0x1
#define _T3GCON_T3GGO_nDONE_LENGTH                          0x1
#define _T3GCON_T3GGO_nDONE_MASK                            0x8
#define _T3GCON_T3GSPM_POSN                                 0x4
#define _T3GCON_T3GSPM_POSITION                             0x4
#define _T3GCON_T3GSPM_SIZE                                 0x1
#define _T3GCON_T3GSPM_LENGTH                               0x1
#define _T3GCON_T3GSPM_MASK                                 0x10
#define _T3GCON_T3GTM_POSN                                  0x5
#define _T3GCON_T3GTM_POSITION                              0x5
#define _T3GCON_T3GTM_SIZE                                  0x1
#define _T3GCON_T3GTM_LENGTH                                0x1
#define _T3GCON_T3GTM_MASK                                  0x20
#define _T3GCON_T3GPOL_POSN                                 0x6
#define _T3GCON_T3GPOL_POSITION                             0x6
#define _T3GCON_T3GPOL_SIZE                                 0x1
#define _T3GCON_T3GPOL_LENGTH                               0x1
#define _T3GCON_T3GPOL_MASK                                 0x40
#define _T3GCON_TMR3GE_POSN                                 0x7
#define _T3GCON_TMR3GE_POSITION                             0x7
#define _T3GCON_TMR3GE_SIZE                                 0x1
#define _T3GCON_TMR3GE_LENGTH                               0x1
#define _T3GCON_TMR3GE_MASK                                 0x80
#define _T3GCON_T3GSS0_POSN                                 0x0
#define _T3GCON_T3GSS0_POSITION                             0x0
#define _T3GCON_T3GSS0_SIZE                                 0x1
#define _T3GCON_T3GSS0_LENGTH                               0x1
#define _T3GCON_T3GSS0_MASK                                 0x1
#define _T3GCON_T3GSS1_POSN                                 0x1
#define _T3GCON_T3GSS1_POSITION                             0x1
#define _T3GCON_T3GSS1_SIZE                                 0x1
#define _T3GCON_T3GSS1_LENGTH                               0x1
#define _T3GCON_T3GSS1_MASK                                 0x2

// Register: TRISA
#define TRISA TRISA
extern volatile unsigned char           TRISA               __at(0x08C);
#ifndef _LIB_BUILD
asm("TRISA equ 08Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISA0                 :1;
        unsigned TRISA1                 :1;
        unsigned TRISA2                 :1;
        unsigned TRISA3                 :1;
        unsigned TRISA4                 :1;
        unsigned TRISA5                 :1;
        unsigned TRISA6                 :1;
        unsigned TRISA7                 :1;
    };
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits __at(0x08C);
// bitfield macros
#define _TRISA_TRISA0_POSN                                  0x0
#define _TRISA_TRISA0_POSITION                              0x0
#define _TRISA_TRISA0_SIZE                                  0x1
#define _TRISA_TRISA0_LENGTH                                0x1
#define _TRISA_TRISA0_MASK                                  0x1
#define _TRISA_TRISA1_POSN                                  0x1
#define _TRISA_TRISA1_POSITION                              0x1
#define _TRISA_TRISA1_SIZE                                  0x1
#define _TRISA_TRISA1_LENGTH                                0x1
#define _TRISA_TRISA1_MASK                                  0x2
#define _TRISA_TRISA2_POSN                                  0x2
#define _TRISA_TRISA2_POSITION                              0x2
#define _TRISA_TRISA2_SIZE                                  0x1
#define _TRISA_TRISA2_LENGTH                                0x1
#define _TRISA_TRISA2_MASK                                  0x4
#define _TRISA_TRISA3_POSN                                  0x3
#define _TRISA_TRISA3_POSITION                              0x3
#define _TRISA_TRISA3_SIZE                                  0x1
#define _TRISA_TRISA3_LENGTH                                0x1
#define _TRISA_TRISA3_MASK                                  0x8
#define _TRISA_TRISA4_POSN                                  0x4
#define _TRISA_TRISA4_POSITION                              0x4
#define _TRISA_TRISA4_SIZE                                  0x1
#define _TRISA_TRISA4_LENGTH                                0x1
#define _TRISA_TRISA4_MASK                                  0x10
#define _TRISA_TRISA5_POSN                                  0x5
#define _TRISA_TRISA5_POSITION                              0x5
#define _TRISA_TRISA5_SIZE                                  0x1
#define _TRISA_TRISA5_LENGTH                                0x1
#define _TRISA_TRISA5_MASK                                  0x20
#define _TRISA_TRISA6_POSN                                  0x6
#define _TRISA_TRISA6_POSITION                              0x6
#define _TRISA_TRISA6_SIZE                                  0x1
#define _TRISA_TRISA6_LENGTH                                0x1
#define _TRISA_TRISA6_MASK                                  0x40
#define _TRISA_TRISA7_POSN                                  0x7
#define _TRISA_TRISA7_POSITION                              0x7
#define _TRISA_TRISA7_SIZE                                  0x1
#define _TRISA_TRISA7_LENGTH                                0x1
#define _TRISA_TRISA7_MASK                                  0x80

// Register: TRISB
#define TRISB TRISB
extern volatile unsigned char           TRISB               __at(0x08D);
#ifndef _LIB_BUILD
asm("TRISB equ 08Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISB0                 :1;
        unsigned TRISB1                 :1;
        unsigned TRISB2                 :1;
        unsigned TRISB3                 :1;
        unsigned TRISB4                 :1;
        unsigned TRISB5                 :1;
        unsigned TRISB6                 :1;
        unsigned TRISB7                 :1;
    };
} TRISBbits_t;
extern volatile TRISBbits_t TRISBbits __at(0x08D);
// bitfield macros
#define _TRISB_TRISB0_POSN                                  0x0
#define _TRISB_TRISB0_POSITION                              0x0
#define _TRISB_TRISB0_SIZE                                  0x1
#define _TRISB_TRISB0_LENGTH                                0x1
#define _TRISB_TRISB0_MASK                                  0x1
#define _TRISB_TRISB1_POSN                                  0x1
#define _TRISB_TRISB1_POSITION                              0x1
#define _TRISB_TRISB1_SIZE                                  0x1
#define _TRISB_TRISB1_LENGTH                                0x1
#define _TRISB_TRISB1_MASK                                  0x2
#define _TRISB_TRISB2_POSN                                  0x2
#define _TRISB_TRISB2_POSITION                              0x2
#define _TRISB_TRISB2_SIZE                                  0x1
#define _TRISB_TRISB2_LENGTH                                0x1
#define _TRISB_TRISB2_MASK                                  0x4
#define _TRISB_TRISB3_POSN                                  0x3
#define _TRISB_TRISB3_POSITION                              0x3
#define _TRISB_TRISB3_SIZE                                  0x1
#define _TRISB_TRISB3_LENGTH                                0x1
#define _TRISB_TRISB3_MASK                                  0x8
#define _TRISB_TRISB4_POSN                                  0x4
#define _TRISB_TRISB4_POSITION                              0x4
#define _TRISB_TRISB4_SIZE                                  0x1
#define _TRISB_TRISB4_LENGTH                                0x1
#define _TRISB_TRISB4_MASK                                  0x10
#define _TRISB_TRISB5_POSN                                  0x5
#define _TRISB_TRISB5_POSITION                              0x5
#define _TRISB_TRISB5_SIZE                                  0x1
#define _TRISB_TRISB5_LENGTH                                0x1
#define _TRISB_TRISB5_MASK                                  0x20
#define _TRISB_TRISB6_POSN                                  0x6
#define _TRISB_TRISB6_POSITION                              0x6
#define _TRISB_TRISB6_SIZE                                  0x1
#define _TRISB_TRISB6_LENGTH                                0x1
#define _TRISB_TRISB6_MASK                                  0x40
#define _TRISB_TRISB7_POSN                                  0x7
#define _TRISB_TRISB7_POSITION                              0x7
#define _TRISB_TRISB7_SIZE                                  0x1
#define _TRISB_TRISB7_LENGTH                                0x1
#define _TRISB_TRISB7_MASK                                  0x80

// Register: TRISC
#define TRISC TRISC
extern volatile unsigned char           TRISC               __at(0x08E);
#ifndef _LIB_BUILD
asm("TRISC equ 08Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISC0                 :1;
        unsigned TRISC1                 :1;
        unsigned TRISC2                 :1;
        unsigned TRISC3                 :1;
        unsigned TRISC4                 :1;
        unsigned TRISC5                 :1;
        unsigned TRISC6                 :1;
        unsigned TRISC7                 :1;
    };
} TRISCbits_t;
extern volatile TRISCbits_t TRISCbits __at(0x08E);
// bitfield macros
#define _TRISC_TRISC0_POSN                                  0x0
#define _TRISC_TRISC0_POSITION                              0x0
#define _TRISC_TRISC0_SIZE                                  0x1
#define _TRISC_TRISC0_LENGTH                                0x1
#define _TRISC_TRISC0_MASK                                  0x1
#define _TRISC_TRISC1_POSN                                  0x1
#define _TRISC_TRISC1_POSITION                              0x1
#define _TRISC_TRISC1_SIZE                                  0x1
#define _TRISC_TRISC1_LENGTH                                0x1
#define _TRISC_TRISC1_MASK                                  0x2
#define _TRISC_TRISC2_POSN                                  0x2
#define _TRISC_TRISC2_POSITION                              0x2
#define _TRISC_TRISC2_SIZE                                  0x1
#define _TRISC_TRISC2_LENGTH                                0x1
#define _TRISC_TRISC2_MASK                                  0x4
#define _TRISC_TRISC3_POSN                                  0x3
#define _TRISC_TRISC3_POSITION                              0x3
#define _TRISC_TRISC3_SIZE                                  0x1
#define _TRISC_TRISC3_LENGTH                                0x1
#define _TRISC_TRISC3_MASK                                  0x8
#define _TRISC_TRISC4_POSN                                  0x4
#define _TRISC_TRISC4_POSITION                              0x4
#define _TRISC_TRISC4_SIZE                                  0x1
#define _TRISC_TRISC4_LENGTH                                0x1
#define _TRISC_TRISC4_MASK                                  0x10
#define _TRISC_TRISC5_POSN                                  0x5
#define _TRISC_TRISC5_POSITION                              0x5
#define _TRISC_TRISC5_SIZE                                  0x1
#define _TRISC_TRISC5_LENGTH                                0x1
#define _TRISC_TRISC5_MASK                                  0x20
#define _TRISC_TRISC6_POSN                                  0x6
#define _TRISC_TRISC6_POSITION                              0x6
#define _TRISC_TRISC6_SIZE                                  0x1
#define _TRISC_TRISC6_LENGTH                                0x1
#define _TRISC_TRISC6_MASK                                  0x40
#define _TRISC_TRISC7_POSN                                  0x7
#define _TRISC_TRISC7_POSITION                              0x7
#define _TRISC_TRISC7_SIZE                                  0x1
#define _TRISC_TRISC7_LENGTH                                0x1
#define _TRISC_TRISC7_MASK                                  0x80

// Register: TRISD
#define TRISD TRISD
extern volatile unsigned char           TRISD               __at(0x08F);
#ifndef _LIB_BUILD
asm("TRISD equ 08Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISD0                 :1;
        unsigned TRISD1                 :1;
        unsigned TRISD2                 :1;
        unsigned TRISD3                 :1;
        unsigned TRISD4                 :1;
        unsigned TRISD5                 :1;
        unsigned TRISD6                 :1;
        unsigned TRISD7                 :1;
    };
} TRISDbits_t;
extern volatile TRISDbits_t TRISDbits __at(0x08F);
// bitfield macros
#define _TRISD_TRISD0_POSN                                  0x0
#define _TRISD_TRISD0_POSITION                              0x0
#define _TRISD_TRISD0_SIZE                                  0x1
#define _TRISD_TRISD0_LENGTH                                0x1
#define _TRISD_TRISD0_MASK                                  0x1
#define _TRISD_TRISD1_POSN                                  0x1
#define _TRISD_TRISD1_POSITION                              0x1
#define _TRISD_TRISD1_SIZE                                  0x1
#define _TRISD_TRISD1_LENGTH                                0x1
#define _TRISD_TRISD1_MASK                                  0x2
#define _TRISD_TRISD2_POSN                                  0x2
#define _TRISD_TRISD2_POSITION                              0x2
#define _TRISD_TRISD2_SIZE                                  0x1
#define _TRISD_TRISD2_LENGTH                                0x1
#define _TRISD_TRISD2_MASK                                  0x4
#define _TRISD_TRISD3_POSN                                  0x3
#define _TRISD_TRISD3_POSITION                              0x3
#define _TRISD_TRISD3_SIZE                                  0x1
#define _TRISD_TRISD3_LENGTH                                0x1
#define _TRISD_TRISD3_MASK                                  0x8
#define _TRISD_TRISD4_POSN                                  0x4
#define _TRISD_TRISD4_POSITION                              0x4
#define _TRISD_TRISD4_SIZE                                  0x1
#define _TRISD_TRISD4_LENGTH                                0x1
#define _TRISD_TRISD4_MASK                                  0x10
#define _TRISD_TRISD5_POSN                                  0x5
#define _TRISD_TRISD5_POSITION                              0x5
#define _TRISD_TRISD5_SIZE                                  0x1
#define _TRISD_TRISD5_LENGTH                                0x1
#define _TRISD_TRISD5_MASK                                  0x20
#define _TRISD_TRISD6_POSN                                  0x6
#define _TRISD_TRISD6_POSITION                              0x6
#define _TRISD_TRISD6_SIZE                                  0x1
#define _TRISD_TRISD6_LENGTH                                0x1
#define _TRISD_TRISD6_MASK                                  0x40
#define _TRISD_TRISD7_POSN                                  0x7
#define _TRISD_TRISD7_POSITION                              0x7
#define _TRISD_TRISD7_SIZE                                  0x1
#define _TRISD_TRISD7_LENGTH                                0x1
#define _TRISD_TRISD7_MASK                                  0x80

// Register: TRISE
#define TRISE TRISE
extern volatile unsigned char           TRISE               __at(0x090);
#ifndef _LIB_BUILD
asm("TRISE equ 090h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISE0                 :1;
        unsigned TRISE1                 :1;
        unsigned TRISE2                 :1;
        unsigned TRISE3                 :1;
    };
} TRISEbits_t;
extern volatile TRISEbits_t TRISEbits __at(0x090);
// bitfield macros
#define _TRISE_TRISE0_POSN                                  0x0
#define _TRISE_TRISE0_POSITION                              0x0
#define _TRISE_TRISE0_SIZE                                  0x1
#define _TRISE_TRISE0_LENGTH                                0x1
#define _TRISE_TRISE0_MASK                                  0x1
#define _TRISE_TRISE1_POSN                                  0x1
#define _TRISE_TRISE1_POSITION                              0x1
#define _TRISE_TRISE1_SIZE                                  0x1
#define _TRISE_TRISE1_LENGTH                                0x1
#define _TRISE_TRISE1_MASK                                  0x2
#define _TRISE_TRISE2_POSN                                  0x2
#define _TRISE_TRISE2_POSITION                              0x2
#define _TRISE_TRISE2_SIZE                                  0x1
#define _TRISE_TRISE2_LENGTH                                0x1
#define _TRISE_TRISE2_MASK                                  0x4
#define _TRISE_TRISE3_POSN                                  0x3
#define _TRISE_TRISE3_POSITION                              0x3
#define _TRISE_TRISE3_SIZE                                  0x1
#define _TRISE_TRISE3_LENGTH                                0x1
#define _TRISE_TRISE3_MASK                                  0x8

// Register: PIE1
#define PIE1 PIE1
extern volatile unsigned char           PIE1                __at(0x091);
#ifndef _LIB_BUILD
asm("PIE1 equ 091h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IE                 :1;
        unsigned TMR2IE                 :1;
        unsigned CCP1IE                 :1;
        unsigned SSP1IE                 :1;
        unsigned TXIE                   :1;
        unsigned RCIE                   :1;
        unsigned ADIE                   :1;
        unsigned TMR1GIE                :1;
    };
    struct {
        unsigned                        :2;
        unsigned CCPIE                  :1;
    };
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits __at(0x091);
// bitfield macros
#define _PIE1_TMR1IE_POSN                                   0x0
#define _PIE1_TMR1IE_POSITION                               0x0
#define _PIE1_TMR1IE_SIZE                                   0x1
#define _PIE1_TMR1IE_LENGTH                                 0x1
#define _PIE1_TMR1IE_MASK                                   0x1
#define _PIE1_TMR2IE_POSN                                   0x1
#define _PIE1_TMR2IE_POSITION                               0x1
#define _PIE1_TMR2IE_SIZE                                   0x1
#define _PIE1_TMR2IE_LENGTH                                 0x1
#define _PIE1_TMR2IE_MASK                                   0x2
#define _PIE1_CCP1IE_POSN                                   0x2
#define _PIE1_CCP1IE_POSITION                               0x2
#define _PIE1_CCP1IE_SIZE                                   0x1
#define _PIE1_CCP1IE_LENGTH                                 0x1
#define _PIE1_CCP1IE_MASK                                   0x4
#define _PIE1_SSP1IE_POSN                                   0x3
#define _PIE1_SSP1IE_POSITION                               0x3
#define _PIE1_SSP1IE_SIZE                                   0x1
#define _PIE1_SSP1IE_LENGTH                                 0x1
#define _PIE1_SSP1IE_MASK                                   0x8
#define _PIE1_TXIE_POSN                                     0x4
#define _PIE1_TXIE_POSITION                                 0x4
#define _PIE1_TXIE_SIZE                                     0x1
#define _PIE1_TXIE_LENGTH                                   0x1
#define _PIE1_TXIE_MASK                                     0x10
#define _PIE1_RCIE_POSN                                     0x5
#define _PIE1_RCIE_POSITION                                 0x5
#define _PIE1_RCIE_SIZE                                     0x1
#define _PIE1_RCIE_LENGTH                                   0x1
#define _PIE1_RCIE_MASK                                     0x20
#define _PIE1_ADIE_POSN                                     0x6
#define _PIE1_ADIE_POSITION                                 0x6
#define _PIE1_ADIE_SIZE                                     0x1
#define _PIE1_ADIE_LENGTH                                   0x1
#define _PIE1_ADIE_MASK                                     0x40
#define _PIE1_TMR1GIE_POSN                                  0x7
#define _PIE1_TMR1GIE_POSITION                              0x7
#define _PIE1_TMR1GIE_SIZE                                  0x1
#define _PIE1_TMR1GIE_LENGTH                                0x1
#define _PIE1_TMR1GIE_MASK                                  0x80
#define _PIE1_CCPIE_POSN                                    0x2
#define _PIE1_CCPIE_POSITION                                0x2
#define _PIE1_CCPIE_SIZE                                    0x1
#define _PIE1_CCPIE_LENGTH                                  0x1
#define _PIE1_CCPIE_MASK                                    0x4

// Register: PIE2
#define PIE2 PIE2
extern volatile unsigned char           PIE2                __at(0x092);
#ifndef _LIB_BUILD
asm("PIE2 equ 092h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2IE                 :1;
        unsigned C3IE                   :1;
        unsigned C4IE                   :1;
        unsigned BCL1IE                 :1;
        unsigned COGIE                  :1;
        unsigned C1IE                   :1;
        unsigned C2IE                   :1;
        unsigned OSFIE                  :1;
    };
} PIE2bits_t;
extern volatile PIE2bits_t PIE2bits __at(0x092);
// bitfield macros
#define _PIE2_CCP2IE_POSN                                   0x0
#define _PIE2_CCP2IE_POSITION                               0x0
#define _PIE2_CCP2IE_SIZE                                   0x1
#define _PIE2_CCP2IE_LENGTH                                 0x1
#define _PIE2_CCP2IE_MASK                                   0x1
#define _PIE2_C3IE_POSN                                     0x1
#define _PIE2_C3IE_POSITION                                 0x1
#define _PIE2_C3IE_SIZE                                     0x1
#define _PIE2_C3IE_LENGTH                                   0x1
#define _PIE2_C3IE_MASK                                     0x2
#define _PIE2_C4IE_POSN                                     0x2
#define _PIE2_C4IE_POSITION                                 0x2
#define _PIE2_C4IE_SIZE                                     0x1
#define _PIE2_C4IE_LENGTH                                   0x1
#define _PIE2_C4IE_MASK                                     0x4
#define _PIE2_BCL1IE_POSN                                   0x3
#define _PIE2_BCL1IE_POSITION                               0x3
#define _PIE2_BCL1IE_SIZE                                   0x1
#define _PIE2_BCL1IE_LENGTH                                 0x1
#define _PIE2_BCL1IE_MASK                                   0x8
#define _PIE2_COGIE_POSN                                    0x4
#define _PIE2_COGIE_POSITION                                0x4
#define _PIE2_COGIE_SIZE                                    0x1
#define _PIE2_COGIE_LENGTH                                  0x1
#define _PIE2_COGIE_MASK                                    0x10
#define _PIE2_C1IE_POSN                                     0x5
#define _PIE2_C1IE_POSITION                                 0x5
#define _PIE2_C1IE_SIZE                                     0x1
#define _PIE2_C1IE_LENGTH                                   0x1
#define _PIE2_C1IE_MASK                                     0x20
#define _PIE2_C2IE_POSN                                     0x6
#define _PIE2_C2IE_POSITION                                 0x6
#define _PIE2_C2IE_SIZE                                     0x1
#define _PIE2_C2IE_LENGTH                                   0x1
#define _PIE2_C2IE_MASK                                     0x40
#define _PIE2_OSFIE_POSN                                    0x7
#define _PIE2_OSFIE_POSITION                                0x7
#define _PIE2_OSFIE_SIZE                                    0x1
#define _PIE2_OSFIE_LENGTH                                  0x1
#define _PIE2_OSFIE_MASK                                    0x80

// Register: PIE3
#define PIE3 PIE3
extern volatile unsigned char           PIE3                __at(0x093);
#ifndef _LIB_BUILD
asm("PIE3 equ 093h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLC1IE                 :1;
        unsigned CLC2IE                 :1;
        unsigned CLC3IE                 :1;
        unsigned CLC4IE                 :1;
        unsigned ZCDIE                  :1;
        unsigned COG2IE                 :1;
    };
} PIE3bits_t;
extern volatile PIE3bits_t PIE3bits __at(0x093);
// bitfield macros
#define _PIE3_CLC1IE_POSN                                   0x0
#define _PIE3_CLC1IE_POSITION                               0x0
#define _PIE3_CLC1IE_SIZE                                   0x1
#define _PIE3_CLC1IE_LENGTH                                 0x1
#define _PIE3_CLC1IE_MASK                                   0x1
#define _PIE3_CLC2IE_POSN                                   0x1
#define _PIE3_CLC2IE_POSITION                               0x1
#define _PIE3_CLC2IE_SIZE                                   0x1
#define _PIE3_CLC2IE_LENGTH                                 0x1
#define _PIE3_CLC2IE_MASK                                   0x2
#define _PIE3_CLC3IE_POSN                                   0x2
#define _PIE3_CLC3IE_POSITION                               0x2
#define _PIE3_CLC3IE_SIZE                                   0x1
#define _PIE3_CLC3IE_LENGTH                                 0x1
#define _PIE3_CLC3IE_MASK                                   0x4
#define _PIE3_CLC4IE_POSN                                   0x3
#define _PIE3_CLC4IE_POSITION                               0x3
#define _PIE3_CLC4IE_SIZE                                   0x1
#define _PIE3_CLC4IE_LENGTH                                 0x1
#define _PIE3_CLC4IE_MASK                                   0x8
#define _PIE3_ZCDIE_POSN                                    0x4
#define _PIE3_ZCDIE_POSITION                                0x4
#define _PIE3_ZCDIE_SIZE                                    0x1
#define _PIE3_ZCDIE_LENGTH                                  0x1
#define _PIE3_ZCDIE_MASK                                    0x10
#define _PIE3_COG2IE_POSN                                   0x5
#define _PIE3_COG2IE_POSITION                               0x5
#define _PIE3_COG2IE_SIZE                                   0x1
#define _PIE3_COG2IE_LENGTH                                 0x1
#define _PIE3_COG2IE_MASK                                   0x20

// Register: PIE4
#define PIE4 PIE4
extern volatile unsigned char           PIE4                __at(0x094);
#ifndef _LIB_BUILD
asm("PIE4 equ 094h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR4IE                 :1;
        unsigned TMR6IE                 :1;
        unsigned TMR3IE                 :1;
        unsigned TMR3GIE                :1;
        unsigned TMR5IE                 :1;
        unsigned TMR5GIE                :1;
        unsigned TMR8IE                 :1;
    };
} PIE4bits_t;
extern volatile PIE4bits_t PIE4bits __at(0x094);
// bitfield macros
#define _PIE4_TMR4IE_POSN                                   0x0
#define _PIE4_TMR4IE_POSITION                               0x0
#define _PIE4_TMR4IE_SIZE                                   0x1
#define _PIE4_TMR4IE_LENGTH                                 0x1
#define _PIE4_TMR4IE_MASK                                   0x1
#define _PIE4_TMR6IE_POSN                                   0x1
#define _PIE4_TMR6IE_POSITION                               0x1
#define _PIE4_TMR6IE_SIZE                                   0x1
#define _PIE4_TMR6IE_LENGTH                                 0x1
#define _PIE4_TMR6IE_MASK                                   0x2
#define _PIE4_TMR3IE_POSN                                   0x2
#define _PIE4_TMR3IE_POSITION                               0x2
#define _PIE4_TMR3IE_SIZE                                   0x1
#define _PIE4_TMR3IE_LENGTH                                 0x1
#define _PIE4_TMR3IE_MASK                                   0x4
#define _PIE4_TMR3GIE_POSN                                  0x3
#define _PIE4_TMR3GIE_POSITION                              0x3
#define _PIE4_TMR3GIE_SIZE                                  0x1
#define _PIE4_TMR3GIE_LENGTH                                0x1
#define _PIE4_TMR3GIE_MASK                                  0x8
#define _PIE4_TMR5IE_POSN                                   0x4
#define _PIE4_TMR5IE_POSITION                               0x4
#define _PIE4_TMR5IE_SIZE                                   0x1
#define _PIE4_TMR5IE_LENGTH                                 0x1
#define _PIE4_TMR5IE_MASK                                   0x10
#define _PIE4_TMR5GIE_POSN                                  0x5
#define _PIE4_TMR5GIE_POSITION                              0x5
#define _PIE4_TMR5GIE_SIZE                                  0x1
#define _PIE4_TMR5GIE_LENGTH                                0x1
#define _PIE4_TMR5GIE_MASK                                  0x20
#define _PIE4_TMR8IE_POSN                                   0x6
#define _PIE4_TMR8IE_POSITION                               0x6
#define _PIE4_TMR8IE_SIZE                                   0x1
#define _PIE4_TMR8IE_LENGTH                                 0x1
#define _PIE4_TMR8IE_MASK                                   0x40

// Register: PIE5
#define PIE5 PIE5
extern volatile unsigned char           PIE5                __at(0x095);
#ifndef _LIB_BUILD
asm("PIE5 equ 095h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C5IE                   :1;
        unsigned C6IE                   :1;
        unsigned C7IE                   :1;
        unsigned C8IE                   :1;
        unsigned COG3IE                 :1;
        unsigned COG4IE                 :1;
        unsigned CCP7IE                 :1;
        unsigned CCP8IE                 :1;
    };
} PIE5bits_t;
extern volatile PIE5bits_t PIE5bits __at(0x095);
// bitfield macros
#define _PIE5_C5IE_POSN                                     0x0
#define _PIE5_C5IE_POSITION                                 0x0
#define _PIE5_C5IE_SIZE                                     0x1
#define _PIE5_C5IE_LENGTH                                   0x1
#define _PIE5_C5IE_MASK                                     0x1
#define _PIE5_C6IE_POSN                                     0x1
#define _PIE5_C6IE_POSITION                                 0x1
#define _PIE5_C6IE_SIZE                                     0x1
#define _PIE5_C6IE_LENGTH                                   0x1
#define _PIE5_C6IE_MASK                                     0x2
#define _PIE5_C7IE_POSN                                     0x2
#define _PIE5_C7IE_POSITION                                 0x2
#define _PIE5_C7IE_SIZE                                     0x1
#define _PIE5_C7IE_LENGTH                                   0x1
#define _PIE5_C7IE_MASK                                     0x4
#define _PIE5_C8IE_POSN                                     0x3
#define _PIE5_C8IE_POSITION                                 0x3
#define _PIE5_C8IE_SIZE                                     0x1
#define _PIE5_C8IE_LENGTH                                   0x1
#define _PIE5_C8IE_MASK                                     0x8
#define _PIE5_COG3IE_POSN                                   0x4
#define _PIE5_COG3IE_POSITION                               0x4
#define _PIE5_COG3IE_SIZE                                   0x1
#define _PIE5_COG3IE_LENGTH                                 0x1
#define _PIE5_COG3IE_MASK                                   0x10
#define _PIE5_COG4IE_POSN                                   0x5
#define _PIE5_COG4IE_POSITION                               0x5
#define _PIE5_COG4IE_SIZE                                   0x1
#define _PIE5_COG4IE_LENGTH                                 0x1
#define _PIE5_COG4IE_MASK                                   0x20
#define _PIE5_CCP7IE_POSN                                   0x6
#define _PIE5_CCP7IE_POSITION                               0x6
#define _PIE5_CCP7IE_SIZE                                   0x1
#define _PIE5_CCP7IE_LENGTH                                 0x1
#define _PIE5_CCP7IE_MASK                                   0x40
#define _PIE5_CCP8IE_POSN                                   0x7
#define _PIE5_CCP8IE_POSITION                               0x7
#define _PIE5_CCP8IE_SIZE                                   0x1
#define _PIE5_CCP8IE_LENGTH                                 0x1
#define _PIE5_CCP8IE_MASK                                   0x80

// Register: PIE6
#define PIE6 PIE6
extern volatile unsigned char           PIE6                __at(0x096);
#ifndef _LIB_BUILD
asm("PIE6 equ 096h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PWM5IE                 :1;
        unsigned PWM6IE                 :1;
        unsigned PWM11IE                :1;
        unsigned PWM12IE                :1;
    };
} PIE6bits_t;
extern volatile PIE6bits_t PIE6bits __at(0x096);
// bitfield macros
#define _PIE6_PWM5IE_POSN                                   0x0
#define _PIE6_PWM5IE_POSITION                               0x0
#define _PIE6_PWM5IE_SIZE                                   0x1
#define _PIE6_PWM5IE_LENGTH                                 0x1
#define _PIE6_PWM5IE_MASK                                   0x1
#define _PIE6_PWM6IE_POSN                                   0x1
#define _PIE6_PWM6IE_POSITION                               0x1
#define _PIE6_PWM6IE_SIZE                                   0x1
#define _PIE6_PWM6IE_LENGTH                                 0x1
#define _PIE6_PWM6IE_MASK                                   0x2
#define _PIE6_PWM11IE_POSN                                  0x2
#define _PIE6_PWM11IE_POSITION                              0x2
#define _PIE6_PWM11IE_SIZE                                  0x1
#define _PIE6_PWM11IE_LENGTH                                0x1
#define _PIE6_PWM11IE_MASK                                  0x4
#define _PIE6_PWM12IE_POSN                                  0x3
#define _PIE6_PWM12IE_POSITION                              0x3
#define _PIE6_PWM12IE_SIZE                                  0x1
#define _PIE6_PWM12IE_LENGTH                                0x1
#define _PIE6_PWM12IE_MASK                                  0x8

// Register: OPTION_REG
#define OPTION_REG OPTION_REG
extern volatile unsigned char           OPTION_REG          __at(0x097);
#ifndef _LIB_BUILD
asm("OPTION_REG equ 097h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PS                     :3;
        unsigned PSA                    :1;
        unsigned TMR0SE                 :1;
        unsigned TMR0CS                 :1;
        unsigned INTEDG                 :1;
        unsigned nWPUEN                 :1;
    };
    struct {
        unsigned PS0                    :1;
        unsigned PS1                    :1;
        unsigned PS2                    :1;
        unsigned                        :1;
        unsigned T0SE                   :1;
        unsigned T0CS                   :1;
    };
} OPTION_REGbits_t;
extern volatile OPTION_REGbits_t OPTION_REGbits __at(0x097);
// bitfield macros
#define _OPTION_REG_PS_POSN                                 0x0
#define _OPTION_REG_PS_POSITION                             0x0
#define _OPTION_REG_PS_SIZE                                 0x3
#define _OPTION_REG_PS_LENGTH                               0x3
#define _OPTION_REG_PS_MASK                                 0x7
#define _OPTION_REG_PSA_POSN                                0x3
#define _OPTION_REG_PSA_POSITION                            0x3
#define _OPTION_REG_PSA_SIZE                                0x1
#define _OPTION_REG_PSA_LENGTH                              0x1
#define _OPTION_REG_PSA_MASK                                0x8
#define _OPTION_REG_TMR0SE_POSN                             0x4
#define _OPTION_REG_TMR0SE_POSITION                         0x4
#define _OPTION_REG_TMR0SE_SIZE                             0x1
#define _OPTION_REG_TMR0SE_LENGTH                           0x1
#define _OPTION_REG_TMR0SE_MASK                             0x10
#define _OPTION_REG_TMR0CS_POSN                             0x5
#define _OPTION_REG_TMR0CS_POSITION                         0x5
#define _OPTION_REG_TMR0CS_SIZE                             0x1
#define _OPTION_REG_TMR0CS_LENGTH                           0x1
#define _OPTION_REG_TMR0CS_MASK                             0x20
#define _OPTION_REG_INTEDG_POSN                             0x6
#define _OPTION_REG_INTEDG_POSITION                         0x6
#define _OPTION_REG_INTEDG_SIZE                             0x1
#define _OPTION_REG_INTEDG_LENGTH                           0x1
#define _OPTION_REG_INTEDG_MASK                             0x40
#define _OPTION_REG_nWPUEN_POSN                             0x7
#define _OPTION_REG_nWPUEN_POSITION                         0x7
#define _OPTION_REG_nWPUEN_SIZE                             0x1
#define _OPTION_REG_nWPUEN_LENGTH                           0x1
#define _OPTION_REG_nWPUEN_MASK                             0x80
#define _OPTION_REG_PS0_POSN                                0x0
#define _OPTION_REG_PS0_POSITION                            0x0
#define _OPTION_REG_PS0_SIZE                                0x1
#define _OPTION_REG_PS0_LENGTH                              0x1
#define _OPTION_REG_PS0_MASK                                0x1
#define _OPTION_REG_PS1_POSN                                0x1
#define _OPTION_REG_PS1_POSITION                            0x1
#define _OPTION_REG_PS1_SIZE                                0x1
#define _OPTION_REG_PS1_LENGTH                              0x1
#define _OPTION_REG_PS1_MASK                                0x2
#define _OPTION_REG_PS2_POSN                                0x2
#define _OPTION_REG_PS2_POSITION                            0x2
#define _OPTION_REG_PS2_SIZE                                0x1
#define _OPTION_REG_PS2_LENGTH                              0x1
#define _OPTION_REG_PS2_MASK                                0x4
#define _OPTION_REG_T0SE_POSN                               0x4
#define _OPTION_REG_T0SE_POSITION                           0x4
#define _OPTION_REG_T0SE_SIZE                               0x1
#define _OPTION_REG_T0SE_LENGTH                             0x1
#define _OPTION_REG_T0SE_MASK                               0x10
#define _OPTION_REG_T0CS_POSN                               0x5
#define _OPTION_REG_T0CS_POSITION                           0x5
#define _OPTION_REG_T0CS_SIZE                               0x1
#define _OPTION_REG_T0CS_LENGTH                             0x1
#define _OPTION_REG_T0CS_MASK                               0x20

// Register: PCON
#define PCON PCON
extern volatile unsigned char           PCON                __at(0x098);
#ifndef _LIB_BUILD
asm("PCON equ 098h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned nBOR                   :1;
        unsigned nPOR                   :1;
        unsigned nRI                    :1;
        unsigned nRMCLR                 :1;
        unsigned nRWDT                  :1;
        unsigned                        :1;
        unsigned STKUNF                 :1;
        unsigned STKOVF                 :1;
    };
} PCONbits_t;
extern volatile PCONbits_t PCONbits __at(0x098);
// bitfield macros
#define _PCON_nBOR_POSN                                     0x0
#define _PCON_nBOR_POSITION                                 0x0
#define _PCON_nBOR_SIZE                                     0x1
#define _PCON_nBOR_LENGTH                                   0x1
#define _PCON_nBOR_MASK                                     0x1
#define _PCON_nPOR_POSN                                     0x1
#define _PCON_nPOR_POSITION                                 0x1
#define _PCON_nPOR_SIZE                                     0x1
#define _PCON_nPOR_LENGTH                                   0x1
#define _PCON_nPOR_MASK                                     0x2
#define _PCON_nRI_POSN                                      0x2
#define _PCON_nRI_POSITION                                  0x2
#define _PCON_nRI_SIZE                                      0x1
#define _PCON_nRI_LENGTH                                    0x1
#define _PCON_nRI_MASK                                      0x4
#define _PCON_nRMCLR_POSN                                   0x3
#define _PCON_nRMCLR_POSITION                               0x3
#define _PCON_nRMCLR_SIZE                                   0x1
#define _PCON_nRMCLR_LENGTH                                 0x1
#define _PCON_nRMCLR_MASK                                   0x8
#define _PCON_nRWDT_POSN                                    0x4
#define _PCON_nRWDT_POSITION                                0x4
#define _PCON_nRWDT_SIZE                                    0x1
#define _PCON_nRWDT_LENGTH                                  0x1
#define _PCON_nRWDT_MASK                                    0x10
#define _PCON_STKUNF_POSN                                   0x6
#define _PCON_STKUNF_POSITION                               0x6
#define _PCON_STKUNF_SIZE                                   0x1
#define _PCON_STKUNF_LENGTH                                 0x1
#define _PCON_STKUNF_MASK                                   0x40
#define _PCON_STKOVF_POSN                                   0x7
#define _PCON_STKOVF_POSITION                               0x7
#define _PCON_STKOVF_SIZE                                   0x1
#define _PCON_STKOVF_LENGTH                                 0x1
#define _PCON_STKOVF_MASK                                   0x80

// Register: WDTCON
#define WDTCON WDTCON
extern volatile unsigned char           WDTCON              __at(0x099);
#ifndef _LIB_BUILD
asm("WDTCON equ 099h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SWDTEN                 :1;
        unsigned WDTPS                  :5;
    };
    struct {
        unsigned                        :1;
        unsigned WDTPS0                 :1;
        unsigned WDTPS1                 :1;
        unsigned WDTPS2                 :1;
        unsigned WDTPS3                 :1;
        unsigned WDTPS4                 :1;
    };
} WDTCONbits_t;
extern volatile WDTCONbits_t WDTCONbits __at(0x099);
// bitfield macros
#define _WDTCON_SWDTEN_POSN                                 0x0
#define _WDTCON_SWDTEN_POSITION                             0x0
#define _WDTCON_SWDTEN_SIZE                                 0x1
#define _WDTCON_SWDTEN_LENGTH                               0x1
#define _WDTCON_SWDTEN_MASK                                 0x1
#define _WDTCON_WDTPS_POSN                                  0x1
#define _WDTCON_WDTPS_POSITION                              0x1
#define _WDTCON_WDTPS_SIZE                                  0x5
#define _WDTCON_WDTPS_LENGTH                                0x5
#define _WDTCON_WDTPS_MASK                                  0x3E
#define _WDTCON_WDTPS0_POSN                                 0x1
#define _WDTCON_WDTPS0_POSITION                             0x1
#define _WDTCON_WDTPS0_SIZE                                 0x1
#define _WDTCON_WDTPS0_LENGTH                               0x1
#define _WDTCON_WDTPS0_MASK                                 0x2
#define _WDTCON_WDTPS1_POSN                                 0x2
#define _WDTCON_WDTPS1_POSITION                             0x2
#define _WDTCON_WDTPS1_SIZE                                 0x1
#define _WDTCON_WDTPS1_LENGTH                               0x1
#define _WDTCON_WDTPS1_MASK                                 0x4
#define _WDTCON_WDTPS2_POSN                                 0x3
#define _WDTCON_WDTPS2_POSITION                             0x3
#define _WDTCON_WDTPS2_SIZE                                 0x1
#define _WDTCON_WDTPS2_LENGTH                               0x1
#define _WDTCON_WDTPS2_MASK                                 0x8
#define _WDTCON_WDTPS3_POSN                                 0x4
#define _WDTCON_WDTPS3_POSITION                             0x4
#define _WDTCON_WDTPS3_SIZE                                 0x1
#define _WDTCON_WDTPS3_LENGTH                               0x1
#define _WDTCON_WDTPS3_MASK                                 0x10
#define _WDTCON_WDTPS4_POSN                                 0x5
#define _WDTCON_WDTPS4_POSITION                             0x5
#define _WDTCON_WDTPS4_SIZE                                 0x1
#define _WDTCON_WDTPS4_LENGTH                               0x1
#define _WDTCON_WDTPS4_MASK                                 0x20

// Register: OSCTUNE
#define OSCTUNE OSCTUNE
extern volatile unsigned char           OSCTUNE             __at(0x09A);
#ifndef _LIB_BUILD
asm("OSCTUNE equ 09Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TUN                    :6;
    };
    struct {
        unsigned TUN0                   :1;
        unsigned TUN1                   :1;
        unsigned TUN2                   :1;
        unsigned TUN3                   :1;
        unsigned TUN4                   :1;
        unsigned TUN5                   :1;
    };
} OSCTUNEbits_t;
extern volatile OSCTUNEbits_t OSCTUNEbits __at(0x09A);
// bitfield macros
#define _OSCTUNE_TUN_POSN                                   0x0
#define _OSCTUNE_TUN_POSITION                               0x0
#define _OSCTUNE_TUN_SIZE                                   0x6
#define _OSCTUNE_TUN_LENGTH                                 0x6
#define _OSCTUNE_TUN_MASK                                   0x3F
#define _OSCTUNE_TUN0_POSN                                  0x0
#define _OSCTUNE_TUN0_POSITION                              0x0
#define _OSCTUNE_TUN0_SIZE                                  0x1
#define _OSCTUNE_TUN0_LENGTH                                0x1
#define _OSCTUNE_TUN0_MASK                                  0x1
#define _OSCTUNE_TUN1_POSN                                  0x1
#define _OSCTUNE_TUN1_POSITION                              0x1
#define _OSCTUNE_TUN1_SIZE                                  0x1
#define _OSCTUNE_TUN1_LENGTH                                0x1
#define _OSCTUNE_TUN1_MASK                                  0x2
#define _OSCTUNE_TUN2_POSN                                  0x2
#define _OSCTUNE_TUN2_POSITION                              0x2
#define _OSCTUNE_TUN2_SIZE                                  0x1
#define _OSCTUNE_TUN2_LENGTH                                0x1
#define _OSCTUNE_TUN2_MASK                                  0x4
#define _OSCTUNE_TUN3_POSN                                  0x3
#define _OSCTUNE_TUN3_POSITION                              0x3
#define _OSCTUNE_TUN3_SIZE                                  0x1
#define _OSCTUNE_TUN3_LENGTH                                0x1
#define _OSCTUNE_TUN3_MASK                                  0x8
#define _OSCTUNE_TUN4_POSN                                  0x4
#define _OSCTUNE_TUN4_POSITION                              0x4
#define _OSCTUNE_TUN4_SIZE                                  0x1
#define _OSCTUNE_TUN4_LENGTH                                0x1
#define _OSCTUNE_TUN4_MASK                                  0x10
#define _OSCTUNE_TUN5_POSN                                  0x5
#define _OSCTUNE_TUN5_POSITION                              0x5
#define _OSCTUNE_TUN5_SIZE                                  0x1
#define _OSCTUNE_TUN5_LENGTH                                0x1
#define _OSCTUNE_TUN5_MASK                                  0x20

// Register: OSCCON
#define OSCCON OSCCON
extern volatile unsigned char           OSCCON              __at(0x09B);
#ifndef _LIB_BUILD
asm("OSCCON equ 09Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SCS                    :2;
        unsigned                        :1;
        unsigned IRCF                   :4;
        unsigned SPLLEN                 :1;
    };
    struct {
        unsigned SCS0                   :1;
        unsigned SCS1                   :1;
        unsigned                        :1;
        unsigned IRCF0                  :1;
        unsigned IRCF1                  :1;
        unsigned IRCF2                  :1;
        unsigned IRCF3                  :1;
    };
} OSCCONbits_t;
extern volatile OSCCONbits_t OSCCONbits __at(0x09B);
// bitfield macros
#define _OSCCON_SCS_POSN                                    0x0
#define _OSCCON_SCS_POSITION                                0x0
#define _OSCCON_SCS_SIZE                                    0x2
#define _OSCCON_SCS_LENGTH                                  0x2
#define _OSCCON_SCS_MASK                                    0x3
#define _OSCCON_IRCF_POSN                                   0x3
#define _OSCCON_IRCF_POSITION                               0x3
#define _OSCCON_IRCF_SIZE                                   0x4
#define _OSCCON_IRCF_LENGTH                                 0x4
#define _OSCCON_IRCF_MASK                                   0x78
#define _OSCCON_SPLLEN_POSN                                 0x7
#define _OSCCON_SPLLEN_POSITION                             0x7
#define _OSCCON_SPLLEN_SIZE                                 0x1
#define _OSCCON_SPLLEN_LENGTH                               0x1
#define _OSCCON_SPLLEN_MASK                                 0x80
#define _OSCCON_SCS0_POSN                                   0x0
#define _OSCCON_SCS0_POSITION                               0x0
#define _OSCCON_SCS0_SIZE                                   0x1
#define _OSCCON_SCS0_LENGTH                                 0x1
#define _OSCCON_SCS0_MASK                                   0x1
#define _OSCCON_SCS1_POSN                                   0x1
#define _OSCCON_SCS1_POSITION                               0x1
#define _OSCCON_SCS1_SIZE                                   0x1
#define _OSCCON_SCS1_LENGTH                                 0x1
#define _OSCCON_SCS1_MASK                                   0x2
#define _OSCCON_IRCF0_POSN                                  0x3
#define _OSCCON_IRCF0_POSITION                              0x3
#define _OSCCON_IRCF0_SIZE                                  0x1
#define _OSCCON_IRCF0_LENGTH                                0x1
#define _OSCCON_IRCF0_MASK                                  0x8
#define _OSCCON_IRCF1_POSN                                  0x4
#define _OSCCON_IRCF1_POSITION                              0x4
#define _OSCCON_IRCF1_SIZE                                  0x1
#define _OSCCON_IRCF1_LENGTH                                0x1
#define _OSCCON_IRCF1_MASK                                  0x10
#define _OSCCON_IRCF2_POSN                                  0x5
#define _OSCCON_IRCF2_POSITION                              0x5
#define _OSCCON_IRCF2_SIZE                                  0x1
#define _OSCCON_IRCF2_LENGTH                                0x1
#define _OSCCON_IRCF2_MASK                                  0x20
#define _OSCCON_IRCF3_POSN                                  0x6
#define _OSCCON_IRCF3_POSITION                              0x6
#define _OSCCON_IRCF3_SIZE                                  0x1
#define _OSCCON_IRCF3_LENGTH                                0x1
#define _OSCCON_IRCF3_MASK                                  0x40

// Register: OSCSTAT
#define OSCSTAT OSCSTAT
extern volatile unsigned char           OSCSTAT             __at(0x09C);
#ifndef _LIB_BUILD
asm("OSCSTAT equ 09Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned HFIOFS                 :1;
        unsigned LFIOFR                 :1;
        unsigned MFIOFR                 :1;
        unsigned HFIOFL                 :1;
        unsigned HFIOFR                 :1;
        unsigned OSTS                   :1;
        unsigned PLLR                   :1;
        unsigned SOSCR                  :1;
    };
} OSCSTATbits_t;
extern volatile OSCSTATbits_t OSCSTATbits __at(0x09C);
// bitfield macros
#define _OSCSTAT_HFIOFS_POSN                                0x0
#define _OSCSTAT_HFIOFS_POSITION                            0x0
#define _OSCSTAT_HFIOFS_SIZE                                0x1
#define _OSCSTAT_HFIOFS_LENGTH                              0x1
#define _OSCSTAT_HFIOFS_MASK                                0x1
#define _OSCSTAT_LFIOFR_POSN                                0x1
#define _OSCSTAT_LFIOFR_POSITION                            0x1
#define _OSCSTAT_LFIOFR_SIZE                                0x1
#define _OSCSTAT_LFIOFR_LENGTH                              0x1
#define _OSCSTAT_LFIOFR_MASK                                0x2
#define _OSCSTAT_MFIOFR_POSN                                0x2
#define _OSCSTAT_MFIOFR_POSITION                            0x2
#define _OSCSTAT_MFIOFR_SIZE                                0x1
#define _OSCSTAT_MFIOFR_LENGTH                              0x1
#define _OSCSTAT_MFIOFR_MASK                                0x4
#define _OSCSTAT_HFIOFL_POSN                                0x3
#define _OSCSTAT_HFIOFL_POSITION                            0x3
#define _OSCSTAT_HFIOFL_SIZE                                0x1
#define _OSCSTAT_HFIOFL_LENGTH                              0x1
#define _OSCSTAT_HFIOFL_MASK                                0x8
#define _OSCSTAT_HFIOFR_POSN                                0x4
#define _OSCSTAT_HFIOFR_POSITION                            0x4
#define _OSCSTAT_HFIOFR_SIZE                                0x1
#define _OSCSTAT_HFIOFR_LENGTH                              0x1
#define _OSCSTAT_HFIOFR_MASK                                0x10
#define _OSCSTAT_OSTS_POSN                                  0x5
#define _OSCSTAT_OSTS_POSITION                              0x5
#define _OSCSTAT_OSTS_SIZE                                  0x1
#define _OSCSTAT_OSTS_LENGTH                                0x1
#define _OSCSTAT_OSTS_MASK                                  0x20
#define _OSCSTAT_PLLR_POSN                                  0x6
#define _OSCSTAT_PLLR_POSITION                              0x6
#define _OSCSTAT_PLLR_SIZE                                  0x1
#define _OSCSTAT_PLLR_LENGTH                                0x1
#define _OSCSTAT_PLLR_MASK                                  0x40
#define _OSCSTAT_SOSCR_POSN                                 0x7
#define _OSCSTAT_SOSCR_POSITION                             0x7
#define _OSCSTAT_SOSCR_SIZE                                 0x1
#define _OSCSTAT_SOSCR_LENGTH                               0x1
#define _OSCSTAT_SOSCR_MASK                                 0x80

// Register: BORCON
#define BORCON BORCON
extern volatile unsigned char           BORCON              __at(0x09D);
#ifndef _LIB_BUILD
asm("BORCON equ 09Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BORRDY                 :1;
        unsigned                        :5;
        unsigned BORFS                  :1;
        unsigned SBOREN                 :1;
    };
} BORCONbits_t;
extern volatile BORCONbits_t BORCONbits __at(0x09D);
// bitfield macros
#define _BORCON_BORRDY_POSN                                 0x0
#define _BORCON_BORRDY_POSITION                             0x0
#define _BORCON_BORRDY_SIZE                                 0x1
#define _BORCON_BORRDY_LENGTH                               0x1
#define _BORCON_BORRDY_MASK                                 0x1
#define _BORCON_BORFS_POSN                                  0x6
#define _BORCON_BORFS_POSITION                              0x6
#define _BORCON_BORFS_SIZE                                  0x1
#define _BORCON_BORFS_LENGTH                                0x1
#define _BORCON_BORFS_MASK                                  0x40
#define _BORCON_SBOREN_POSN                                 0x7
#define _BORCON_SBOREN_POSITION                             0x7
#define _BORCON_SBOREN_SIZE                                 0x1
#define _BORCON_SBOREN_LENGTH                               0x1
#define _BORCON_SBOREN_MASK                                 0x80

// Register: FVRCON
#define FVRCON FVRCON
extern volatile unsigned char           FVRCON              __at(0x09E);
#ifndef _LIB_BUILD
asm("FVRCON equ 09Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADFVR                  :2;
        unsigned CDAFVR                 :2;
        unsigned TSRNG                  :1;
        unsigned TSEN                   :1;
        unsigned FVRRDY                 :1;
        unsigned FVREN                  :1;
    };
} FVRCONbits_t;
extern volatile FVRCONbits_t FVRCONbits __at(0x09E);
// bitfield macros
#define _FVRCON_ADFVR_POSN                                  0x0
#define _FVRCON_ADFVR_POSITION                              0x0
#define _FVRCON_ADFVR_SIZE                                  0x2
#define _FVRCON_ADFVR_LENGTH                                0x2
#define _FVRCON_ADFVR_MASK                                  0x3
#define _FVRCON_CDAFVR_POSN                                 0x2
#define _FVRCON_CDAFVR_POSITION                             0x2
#define _FVRCON_CDAFVR_SIZE                                 0x2
#define _FVRCON_CDAFVR_LENGTH                               0x2
#define _FVRCON_CDAFVR_MASK                                 0xC
#define _FVRCON_TSRNG_POSN                                  0x4
#define _FVRCON_TSRNG_POSITION                              0x4
#define _FVRCON_TSRNG_SIZE                                  0x1
#define _FVRCON_TSRNG_LENGTH                                0x1
#define _FVRCON_TSRNG_MASK                                  0x10
#define _FVRCON_TSEN_POSN                                   0x5
#define _FVRCON_TSEN_POSITION                               0x5
#define _FVRCON_TSEN_SIZE                                   0x1
#define _FVRCON_TSEN_LENGTH                                 0x1
#define _FVRCON_TSEN_MASK                                   0x20
#define _FVRCON_FVRRDY_POSN                                 0x6
#define _FVRCON_FVRRDY_POSITION                             0x6
#define _FVRCON_FVRRDY_SIZE                                 0x1
#define _FVRCON_FVRRDY_LENGTH                               0x1
#define _FVRCON_FVRRDY_MASK                                 0x40
#define _FVRCON_FVREN_POSN                                  0x7
#define _FVRCON_FVREN_POSITION                              0x7
#define _FVRCON_FVREN_SIZE                                  0x1
#define _FVRCON_FVREN_LENGTH                                0x1
#define _FVRCON_FVREN_MASK                                  0x80

// Register: ZCD1CON
#define ZCD1CON ZCD1CON
extern volatile unsigned char           ZCD1CON             __at(0x09F);
#ifndef _LIB_BUILD
asm("ZCD1CON equ 09Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ZCD1INTN               :1;
        unsigned ZCD1INTP               :1;
        unsigned                        :2;
        unsigned ZCD1POL                :1;
        unsigned ZCD1OUT                :1;
        unsigned                        :1;
        unsigned ZCD1EN                 :1;
    };
} ZCD1CONbits_t;
extern volatile ZCD1CONbits_t ZCD1CONbits __at(0x09F);
// bitfield macros
#define _ZCD1CON_ZCD1INTN_POSN                              0x0
#define _ZCD1CON_ZCD1INTN_POSITION                          0x0
#define _ZCD1CON_ZCD1INTN_SIZE                              0x1
#define _ZCD1CON_ZCD1INTN_LENGTH                            0x1
#define _ZCD1CON_ZCD1INTN_MASK                              0x1
#define _ZCD1CON_ZCD1INTP_POSN                              0x1
#define _ZCD1CON_ZCD1INTP_POSITION                          0x1
#define _ZCD1CON_ZCD1INTP_SIZE                              0x1
#define _ZCD1CON_ZCD1INTP_LENGTH                            0x1
#define _ZCD1CON_ZCD1INTP_MASK                              0x2
#define _ZCD1CON_ZCD1POL_POSN                               0x4
#define _ZCD1CON_ZCD1POL_POSITION                           0x4
#define _ZCD1CON_ZCD1POL_SIZE                               0x1
#define _ZCD1CON_ZCD1POL_LENGTH                             0x1
#define _ZCD1CON_ZCD1POL_MASK                               0x10
#define _ZCD1CON_ZCD1OUT_POSN                               0x5
#define _ZCD1CON_ZCD1OUT_POSITION                           0x5
#define _ZCD1CON_ZCD1OUT_SIZE                               0x1
#define _ZCD1CON_ZCD1OUT_LENGTH                             0x1
#define _ZCD1CON_ZCD1OUT_MASK                               0x20
#define _ZCD1CON_ZCD1EN_POSN                                0x7
#define _ZCD1CON_ZCD1EN_POSITION                            0x7
#define _ZCD1CON_ZCD1EN_SIZE                                0x1
#define _ZCD1CON_ZCD1EN_LENGTH                              0x1
#define _ZCD1CON_ZCD1EN_MASK                                0x80

// Register: LATA
#define LATA LATA
extern volatile unsigned char           LATA                __at(0x10C);
#ifndef _LIB_BUILD
asm("LATA equ 010Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATA0                  :1;
        unsigned LATA1                  :1;
        unsigned LATA2                  :1;
        unsigned LATA3                  :1;
        unsigned LATA4                  :1;
        unsigned LATA5                  :1;
        unsigned LATA6                  :1;
        unsigned LATA7                  :1;
    };
} LATAbits_t;
extern volatile LATAbits_t LATAbits __at(0x10C);
// bitfield macros
#define _LATA_LATA0_POSN                                    0x0
#define _LATA_LATA0_POSITION                                0x0
#define _LATA_LATA0_SIZE                                    0x1
#define _LATA_LATA0_LENGTH                                  0x1
#define _LATA_LATA0_MASK                                    0x1
#define _LATA_LATA1_POSN                                    0x1
#define _LATA_LATA1_POSITION                                0x1
#define _LATA_LATA1_SIZE                                    0x1
#define _LATA_LATA1_LENGTH                                  0x1
#define _LATA_LATA1_MASK                                    0x2
#define _LATA_LATA2_POSN                                    0x2
#define _LATA_LATA2_POSITION                                0x2
#define _LATA_LATA2_SIZE                                    0x1
#define _LATA_LATA2_LENGTH                                  0x1
#define _LATA_LATA2_MASK                                    0x4
#define _LATA_LATA3_POSN                                    0x3
#define _LATA_LATA3_POSITION                                0x3
#define _LATA_LATA3_SIZE                                    0x1
#define _LATA_LATA3_LENGTH                                  0x1
#define _LATA_LATA3_MASK                                    0x8
#define _LATA_LATA4_POSN                                    0x4
#define _LATA_LATA4_POSITION                                0x4
#define _LATA_LATA4_SIZE                                    0x1
#define _LATA_LATA4_LENGTH                                  0x1
#define _LATA_LATA4_MASK                                    0x10
#define _LATA_LATA5_POSN                                    0x5
#define _LATA_LATA5_POSITION                                0x5
#define _LATA_LATA5_SIZE                                    0x1
#define _LATA_LATA5_LENGTH                                  0x1
#define _LATA_LATA5_MASK                                    0x20
#define _LATA_LATA6_POSN                                    0x6
#define _LATA_LATA6_POSITION                                0x6
#define _LATA_LATA6_SIZE                                    0x1
#define _LATA_LATA6_LENGTH                                  0x1
#define _LATA_LATA6_MASK                                    0x40
#define _LATA_LATA7_POSN                                    0x7
#define _LATA_LATA7_POSITION                                0x7
#define _LATA_LATA7_SIZE                                    0x1
#define _LATA_LATA7_LENGTH                                  0x1
#define _LATA_LATA7_MASK                                    0x80

// Register: LATB
#define LATB LATB
extern volatile unsigned char           LATB                __at(0x10D);
#ifndef _LIB_BUILD
asm("LATB equ 010Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATB0                  :1;
        unsigned LATB1                  :1;
        unsigned LATB2                  :1;
        unsigned LATB3                  :1;
        unsigned LATB4                  :1;
        unsigned LATB5                  :1;
        unsigned LATB6                  :1;
        unsigned LATB7                  :1;
    };
} LATBbits_t;
extern volatile LATBbits_t LATBbits __at(0x10D);
// bitfield macros
#define _LATB_LATB0_POSN                                    0x0
#define _LATB_LATB0_POSITION                                0x0
#define _LATB_LATB0_SIZE                                    0x1
#define _LATB_LATB0_LENGTH                                  0x1
#define _LATB_LATB0_MASK                                    0x1
#define _LATB_LATB1_POSN                                    0x1
#define _LATB_LATB1_POSITION                                0x1
#define _LATB_LATB1_SIZE                                    0x1
#define _LATB_LATB1_LENGTH                                  0x1
#define _LATB_LATB1_MASK                                    0x2
#define _LATB_LATB2_POSN                                    0x2
#define _LATB_LATB2_POSITION                                0x2
#define _LATB_LATB2_SIZE                                    0x1
#define _LATB_LATB2_LENGTH                                  0x1
#define _LATB_LATB2_MASK                                    0x4
#define _LATB_LATB3_POSN                                    0x3
#define _LATB_LATB3_POSITION                                0x3
#define _LATB_LATB3_SIZE                                    0x1
#define _LATB_LATB3_LENGTH                                  0x1
#define _LATB_LATB3_MASK                                    0x8
#define _LATB_LATB4_POSN                                    0x4
#define _LATB_LATB4_POSITION                                0x4
#define _LATB_LATB4_SIZE                                    0x1
#define _LATB_LATB4_LENGTH                                  0x1
#define _LATB_LATB4_MASK                                    0x10
#define _LATB_LATB5_POSN                                    0x5
#define _LATB_LATB5_POSITION                                0x5
#define _LATB_LATB5_SIZE                                    0x1
#define _LATB_LATB5_LENGTH                                  0x1
#define _LATB_LATB5_MASK                                    0x20
#define _LATB_LATB6_POSN                                    0x6
#define _LATB_LATB6_POSITION                                0x6
#define _LATB_LATB6_SIZE                                    0x1
#define _LATB_LATB6_LENGTH                                  0x1
#define _LATB_LATB6_MASK                                    0x40
#define _LATB_LATB7_POSN                                    0x7
#define _LATB_LATB7_POSITION                                0x7
#define _LATB_LATB7_SIZE                                    0x1
#define _LATB_LATB7_LENGTH                                  0x1
#define _LATB_LATB7_MASK                                    0x80

// Register: LATC
#define LATC LATC
extern volatile unsigned char           LATC                __at(0x10E);
#ifndef _LIB_BUILD
asm("LATC equ 010Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATC0                  :1;
        unsigned LATC1                  :1;
        unsigned LATC2                  :1;
        unsigned LATC3                  :1;
        unsigned LATC4                  :1;
        unsigned LATC5                  :1;
        unsigned LATC6                  :1;
        unsigned LATC7                  :1;
    };
} LATCbits_t;
extern volatile LATCbits_t LATCbits __at(0x10E);
// bitfield macros
#define _LATC_LATC0_POSN                                    0x0
#define _LATC_LATC0_POSITION                                0x0
#define _LATC_LATC0_SIZE                                    0x1
#define _LATC_LATC0_LENGTH                                  0x1
#define _LATC_LATC0_MASK                                    0x1
#define _LATC_LATC1_POSN                                    0x1
#define _LATC_LATC1_POSITION                                0x1
#define _LATC_LATC1_SIZE                                    0x1
#define _LATC_LATC1_LENGTH                                  0x1
#define _LATC_LATC1_MASK                                    0x2
#define _LATC_LATC2_POSN                                    0x2
#define _LATC_LATC2_POSITION                                0x2
#define _LATC_LATC2_SIZE                                    0x1
#define _LATC_LATC2_LENGTH                                  0x1
#define _LATC_LATC2_MASK                                    0x4
#define _LATC_LATC3_POSN                                    0x3
#define _LATC_LATC3_POSITION                                0x3
#define _LATC_LATC3_SIZE                                    0x1
#define _LATC_LATC3_LENGTH                                  0x1
#define _LATC_LATC3_MASK                                    0x8
#define _LATC_LATC4_POSN                                    0x4
#define _LATC_LATC4_POSITION                                0x4
#define _LATC_LATC4_SIZE                                    0x1
#define _LATC_LATC4_LENGTH                                  0x1
#define _LATC_LATC4_MASK                                    0x10
#define _LATC_LATC5_POSN                                    0x5
#define _LATC_LATC5_POSITION                                0x5
#define _LATC_LATC5_SIZE                                    0x1
#define _LATC_LATC5_LENGTH                                  0x1
#define _LATC_LATC5_MASK                                    0x20
#define _LATC_LATC6_POSN                                    0x6
#define _LATC_LATC6_POSITION                                0x6
#define _LATC_LATC6_SIZE                                    0x1
#define _LATC_LATC6_LENGTH                                  0x1
#define _LATC_LATC6_MASK                                    0x40
#define _LATC_LATC7_POSN                                    0x7
#define _LATC_LATC7_POSITION                                0x7
#define _LATC_LATC7_SIZE                                    0x1
#define _LATC_LATC7_LENGTH                                  0x1
#define _LATC_LATC7_MASK                                    0x80

// Register: LATD
#define LATD LATD
extern volatile unsigned char           LATD                __at(0x10F);
#ifndef _LIB_BUILD
asm("LATD equ 010Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATD0                  :1;
        unsigned LATD1                  :1;
        unsigned LATD2                  :1;
        unsigned LATD3                  :1;
        unsigned LATD4                  :1;
        unsigned LATD5                  :1;
        unsigned LATD6                  :1;
        unsigned LATD7                  :1;
    };
} LATDbits_t;
extern volatile LATDbits_t LATDbits __at(0x10F);
// bitfield macros
#define _LATD_LATD0_POSN                                    0x0
#define _LATD_LATD0_POSITION                                0x0
#define _LATD_LATD0_SIZE                                    0x1
#define _LATD_LATD0_LENGTH                                  0x1
#define _LATD_LATD0_MASK                                    0x1
#define _LATD_LATD1_POSN                                    0x1
#define _LATD_LATD1_POSITION                                0x1
#define _LATD_LATD1_SIZE                                    0x1
#define _LATD_LATD1_LENGTH                                  0x1
#define _LATD_LATD1_MASK                                    0x2
#define _LATD_LATD2_POSN                                    0x2
#define _LATD_LATD2_POSITION                                0x2
#define _LATD_LATD2_SIZE                                    0x1
#define _LATD_LATD2_LENGTH                                  0x1
#define _LATD_LATD2_MASK                                    0x4
#define _LATD_LATD3_POSN                                    0x3
#define _LATD_LATD3_POSITION                                0x3
#define _LATD_LATD3_SIZE                                    0x1
#define _LATD_LATD3_LENGTH                                  0x1
#define _LATD_LATD3_MASK                                    0x8
#define _LATD_LATD4_POSN                                    0x4
#define _LATD_LATD4_POSITION                                0x4
#define _LATD_LATD4_SIZE                                    0x1
#define _LATD_LATD4_LENGTH                                  0x1
#define _LATD_LATD4_MASK                                    0x10
#define _LATD_LATD5_POSN                                    0x5
#define _LATD_LATD5_POSITION                                0x5
#define _LATD_LATD5_SIZE                                    0x1
#define _LATD_LATD5_LENGTH                                  0x1
#define _LATD_LATD5_MASK                                    0x20
#define _LATD_LATD6_POSN                                    0x6
#define _LATD_LATD6_POSITION                                0x6
#define _LATD_LATD6_SIZE                                    0x1
#define _LATD_LATD6_LENGTH                                  0x1
#define _LATD_LATD6_MASK                                    0x40
#define _LATD_LATD7_POSN                                    0x7
#define _LATD_LATD7_POSITION                                0x7
#define _LATD_LATD7_SIZE                                    0x1
#define _LATD_LATD7_LENGTH                                  0x1
#define _LATD_LATD7_MASK                                    0x80

// Register: LATE
#define LATE LATE
extern volatile unsigned char           LATE                __at(0x110);
#ifndef _LIB_BUILD
asm("LATE equ 0110h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATE0                  :1;
        unsigned LATE1                  :1;
        unsigned LATE2                  :1;
    };
} LATEbits_t;
extern volatile LATEbits_t LATEbits __at(0x110);
// bitfield macros
#define _LATE_LATE0_POSN                                    0x0
#define _LATE_LATE0_POSITION                                0x0
#define _LATE_LATE0_SIZE                                    0x1
#define _LATE_LATE0_LENGTH                                  0x1
#define _LATE_LATE0_MASK                                    0x1
#define _LATE_LATE1_POSN                                    0x1
#define _LATE_LATE1_POSITION                                0x1
#define _LATE_LATE1_SIZE                                    0x1
#define _LATE_LATE1_LENGTH                                  0x1
#define _LATE_LATE1_MASK                                    0x2
#define _LATE_LATE2_POSN                                    0x2
#define _LATE_LATE2_POSITION                                0x2
#define _LATE_LATE2_SIZE                                    0x1
#define _LATE_LATE2_LENGTH                                  0x1
#define _LATE_LATE2_MASK                                    0x4

// Register: CMOUT
#define CMOUT CMOUT
extern volatile unsigned char           CMOUT               __at(0x111);
#ifndef _LIB_BUILD
asm("CMOUT equ 0111h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MC1OUT                 :1;
        unsigned MC2OUT                 :1;
        unsigned MC3OUT                 :1;
        unsigned MC4OUT                 :1;
        unsigned MC5OUT                 :1;
        unsigned MC6OUT                 :1;
        unsigned MC7OUT                 :1;
        unsigned MC8OUT                 :1;
    };
} CMOUTbits_t;
extern volatile CMOUTbits_t CMOUTbits __at(0x111);
// bitfield macros
#define _CMOUT_MC1OUT_POSN                                  0x0
#define _CMOUT_MC1OUT_POSITION                              0x0
#define _CMOUT_MC1OUT_SIZE                                  0x1
#define _CMOUT_MC1OUT_LENGTH                                0x1
#define _CMOUT_MC1OUT_MASK                                  0x1
#define _CMOUT_MC2OUT_POSN                                  0x1
#define _CMOUT_MC2OUT_POSITION                              0x1
#define _CMOUT_MC2OUT_SIZE                                  0x1
#define _CMOUT_MC2OUT_LENGTH                                0x1
#define _CMOUT_MC2OUT_MASK                                  0x2
#define _CMOUT_MC3OUT_POSN                                  0x2
#define _CMOUT_MC3OUT_POSITION                              0x2
#define _CMOUT_MC3OUT_SIZE                                  0x1
#define _CMOUT_MC3OUT_LENGTH                                0x1
#define _CMOUT_MC3OUT_MASK                                  0x4
#define _CMOUT_MC4OUT_POSN                                  0x3
#define _CMOUT_MC4OUT_POSITION                              0x3
#define _CMOUT_MC4OUT_SIZE                                  0x1
#define _CMOUT_MC4OUT_LENGTH                                0x1
#define _CMOUT_MC4OUT_MASK                                  0x8
#define _CMOUT_MC5OUT_POSN                                  0x4
#define _CMOUT_MC5OUT_POSITION                              0x4
#define _CMOUT_MC5OUT_SIZE                                  0x1
#define _CMOUT_MC5OUT_LENGTH                                0x1
#define _CMOUT_MC5OUT_MASK                                  0x10
#define _CMOUT_MC6OUT_POSN                                  0x5
#define _CMOUT_MC6OUT_POSITION                              0x5
#define _CMOUT_MC6OUT_SIZE                                  0x1
#define _CMOUT_MC6OUT_LENGTH                                0x1
#define _CMOUT_MC6OUT_MASK                                  0x20
#define _CMOUT_MC7OUT_POSN                                  0x6
#define _CMOUT_MC7OUT_POSITION                              0x6
#define _CMOUT_MC7OUT_SIZE                                  0x1
#define _CMOUT_MC7OUT_LENGTH                                0x1
#define _CMOUT_MC7OUT_MASK                                  0x40
#define _CMOUT_MC8OUT_POSN                                  0x7
#define _CMOUT_MC8OUT_POSITION                              0x7
#define _CMOUT_MC8OUT_SIZE                                  0x1
#define _CMOUT_MC8OUT_LENGTH                                0x1
#define _CMOUT_MC8OUT_MASK                                  0x80

// Register: CM1CON0
#define CM1CON0 CM1CON0
extern volatile unsigned char           CM1CON0             __at(0x112);
#ifndef _LIB_BUILD
asm("CM1CON0 equ 0112h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SYNC                   :1;
        unsigned HYS                    :1;
        unsigned                        :1;
        unsigned ZLF                    :1;
        unsigned POL                    :1;
        unsigned                        :1;
        unsigned OUT                    :1;
        unsigned ON                     :1;
    };
    struct {
        unsigned C1SYNC                 :1;
        unsigned C1HYS                  :1;
        unsigned C1SP                   :1;
        unsigned C1ZLF                  :1;
        unsigned C1POL                  :1;
        unsigned                        :1;
        unsigned C1OUT                  :1;
        unsigned C1ON                   :1;
    };
} CM1CON0bits_t;
extern volatile CM1CON0bits_t CM1CON0bits __at(0x112);
// bitfield macros
#define _CM1CON0_SYNC_POSN                                  0x0
#define _CM1CON0_SYNC_POSITION                              0x0
#define _CM1CON0_SYNC_SIZE                                  0x1
#define _CM1CON0_SYNC_LENGTH                                0x1
#define _CM1CON0_SYNC_MASK                                  0x1
#define _CM1CON0_HYS_POSN                                   0x1
#define _CM1CON0_HYS_POSITION                               0x1
#define _CM1CON0_HYS_SIZE                                   0x1
#define _CM1CON0_HYS_LENGTH                                 0x1
#define _CM1CON0_HYS_MASK                                   0x2
#define _CM1CON0_ZLF_POSN                                   0x3
#define _CM1CON0_ZLF_POSITION                               0x3
#define _CM1CON0_ZLF_SIZE                                   0x1
#define _CM1CON0_ZLF_LENGTH                                 0x1
#define _CM1CON0_ZLF_MASK                                   0x8
#define _CM1CON0_POL_POSN                                   0x4
#define _CM1CON0_POL_POSITION                               0x4
#define _CM1CON0_POL_SIZE                                   0x1
#define _CM1CON0_POL_LENGTH                                 0x1
#define _CM1CON0_POL_MASK                                   0x10
#define _CM1CON0_OUT_POSN                                   0x6
#define _CM1CON0_OUT_POSITION                               0x6
#define _CM1CON0_OUT_SIZE                                   0x1
#define _CM1CON0_OUT_LENGTH                                 0x1
#define _CM1CON0_OUT_MASK                                   0x40
#define _CM1CON0_ON_POSN                                    0x7
#define _CM1CON0_ON_POSITION                                0x7
#define _CM1CON0_ON_SIZE                                    0x1
#define _CM1CON0_ON_LENGTH                                  0x1
#define _CM1CON0_ON_MASK                                    0x80
#define _CM1CON0_C1SYNC_POSN                                0x0
#define _CM1CON0_C1SYNC_POSITION                            0x0
#define _CM1CON0_C1SYNC_SIZE                                0x1
#define _CM1CON0_C1SYNC_LENGTH                              0x1
#define _CM1CON0_C1SYNC_MASK                                0x1
#define _CM1CON0_C1HYS_POSN                                 0x1
#define _CM1CON0_C1HYS_POSITION                             0x1
#define _CM1CON0_C1HYS_SIZE                                 0x1
#define _CM1CON0_C1HYS_LENGTH                               0x1
#define _CM1CON0_C1HYS_MASK                                 0x2
#define _CM1CON0_C1SP_POSN                                  0x2
#define _CM1CON0_C1SP_POSITION                              0x2
#define _CM1CON0_C1SP_SIZE                                  0x1
#define _CM1CON0_C1SP_LENGTH                                0x1
#define _CM1CON0_C1SP_MASK                                  0x4
#define _CM1CON0_C1ZLF_POSN                                 0x3
#define _CM1CON0_C1ZLF_POSITION                             0x3
#define _CM1CON0_C1ZLF_SIZE                                 0x1
#define _CM1CON0_C1ZLF_LENGTH                               0x1
#define _CM1CON0_C1ZLF_MASK                                 0x8
#define _CM1CON0_C1POL_POSN                                 0x4
#define _CM1CON0_C1POL_POSITION                             0x4
#define _CM1CON0_C1POL_SIZE                                 0x1
#define _CM1CON0_C1POL_LENGTH                               0x1
#define _CM1CON0_C1POL_MASK                                 0x10
#define _CM1CON0_C1OUT_POSN                                 0x6
#define _CM1CON0_C1OUT_POSITION                             0x6
#define _CM1CON0_C1OUT_SIZE                                 0x1
#define _CM1CON0_C1OUT_LENGTH                               0x1
#define _CM1CON0_C1OUT_MASK                                 0x40
#define _CM1CON0_C1ON_POSN                                  0x7
#define _CM1CON0_C1ON_POSITION                              0x7
#define _CM1CON0_C1ON_SIZE                                  0x1
#define _CM1CON0_C1ON_LENGTH                                0x1
#define _CM1CON0_C1ON_MASK                                  0x80

// Register: CM1CON1
#define CM1CON1 CM1CON1
extern volatile unsigned char           CM1CON1             __at(0x113);
#ifndef _LIB_BUILD
asm("CM1CON1 equ 0113h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTN                   :1;
        unsigned INTP                   :1;
    };
    struct {
        unsigned C1INTN                 :1;
        unsigned C1INTP                 :1;
    };
} CM1CON1bits_t;
extern volatile CM1CON1bits_t CM1CON1bits __at(0x113);
// bitfield macros
#define _CM1CON1_INTN_POSN                                  0x0
#define _CM1CON1_INTN_POSITION                              0x0
#define _CM1CON1_INTN_SIZE                                  0x1
#define _CM1CON1_INTN_LENGTH                                0x1
#define _CM1CON1_INTN_MASK                                  0x1
#define _CM1CON1_INTP_POSN                                  0x1
#define _CM1CON1_INTP_POSITION                              0x1
#define _CM1CON1_INTP_SIZE                                  0x1
#define _CM1CON1_INTP_LENGTH                                0x1
#define _CM1CON1_INTP_MASK                                  0x2
#define _CM1CON1_C1INTN_POSN                                0x0
#define _CM1CON1_C1INTN_POSITION                            0x0
#define _CM1CON1_C1INTN_SIZE                                0x1
#define _CM1CON1_C1INTN_LENGTH                              0x1
#define _CM1CON1_C1INTN_MASK                                0x1
#define _CM1CON1_C1INTP_POSN                                0x1
#define _CM1CON1_C1INTP_POSITION                            0x1
#define _CM1CON1_C1INTP_SIZE                                0x1
#define _CM1CON1_C1INTP_LENGTH                              0x1
#define _CM1CON1_C1INTP_MASK                                0x2

// Register: CM1NSEL
#define CM1NSEL CM1NSEL
extern volatile unsigned char           CM1NSEL             __at(0x114);
#ifndef _LIB_BUILD
asm("CM1NSEL equ 0114h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :4;
    };
    struct {
        unsigned C1NCH                  :4;
    };
    struct {
        unsigned C1NCH0                 :1;
        unsigned C1NCH1                 :1;
        unsigned C1NCH2                 :1;
        unsigned C1NCH3                 :1;
    };
} CM1NSELbits_t;
extern volatile CM1NSELbits_t CM1NSELbits __at(0x114);
// bitfield macros
#define _CM1NSEL_NCH_POSN                                   0x0
#define _CM1NSEL_NCH_POSITION                               0x0
#define _CM1NSEL_NCH_SIZE                                   0x4
#define _CM1NSEL_NCH_LENGTH                                 0x4
#define _CM1NSEL_NCH_MASK                                   0xF
#define _CM1NSEL_C1NCH_POSN                                 0x0
#define _CM1NSEL_C1NCH_POSITION                             0x0
#define _CM1NSEL_C1NCH_SIZE                                 0x4
#define _CM1NSEL_C1NCH_LENGTH                               0x4
#define _CM1NSEL_C1NCH_MASK                                 0xF
#define _CM1NSEL_C1NCH0_POSN                                0x0
#define _CM1NSEL_C1NCH0_POSITION                            0x0
#define _CM1NSEL_C1NCH0_SIZE                                0x1
#define _CM1NSEL_C1NCH0_LENGTH                              0x1
#define _CM1NSEL_C1NCH0_MASK                                0x1
#define _CM1NSEL_C1NCH1_POSN                                0x1
#define _CM1NSEL_C1NCH1_POSITION                            0x1
#define _CM1NSEL_C1NCH1_SIZE                                0x1
#define _CM1NSEL_C1NCH1_LENGTH                              0x1
#define _CM1NSEL_C1NCH1_MASK                                0x2
#define _CM1NSEL_C1NCH2_POSN                                0x2
#define _CM1NSEL_C1NCH2_POSITION                            0x2
#define _CM1NSEL_C1NCH2_SIZE                                0x1
#define _CM1NSEL_C1NCH2_LENGTH                              0x1
#define _CM1NSEL_C1NCH2_MASK                                0x4
#define _CM1NSEL_C1NCH3_POSN                                0x3
#define _CM1NSEL_C1NCH3_POSITION                            0x3
#define _CM1NSEL_C1NCH3_SIZE                                0x1
#define _CM1NSEL_C1NCH3_LENGTH                              0x1
#define _CM1NSEL_C1NCH3_MASK                                0x8

// Register: CM1PSEL
#define CM1PSEL CM1PSEL
extern volatile unsigned char           CM1PSEL             __at(0x115);
#ifndef _LIB_BUILD
asm("CM1PSEL equ 0115h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :4;
    };
    struct {
        unsigned PCH0                   :1;
        unsigned PCH1                   :1;
        unsigned PCH2                   :1;
        unsigned PCH3                   :1;
    };
    struct {
        unsigned C1PCH                  :4;
    };
    struct {
        unsigned C1PCH0                 :1;
        unsigned C1PCH1                 :1;
        unsigned C1PCH2                 :1;
        unsigned C1PCH3                 :1;
    };
} CM1PSELbits_t;
extern volatile CM1PSELbits_t CM1PSELbits __at(0x115);
// bitfield macros
#define _CM1PSEL_PCH_POSN                                   0x0
#define _CM1PSEL_PCH_POSITION                               0x0
#define _CM1PSEL_PCH_SIZE                                   0x4
#define _CM1PSEL_PCH_LENGTH                                 0x4
#define _CM1PSEL_PCH_MASK                                   0xF
#define _CM1PSEL_PCH0_POSN                                  0x0
#define _CM1PSEL_PCH0_POSITION                              0x0
#define _CM1PSEL_PCH0_SIZE                                  0x1
#define _CM1PSEL_PCH0_LENGTH                                0x1
#define _CM1PSEL_PCH0_MASK                                  0x1
#define _CM1PSEL_PCH1_POSN                                  0x1
#define _CM1PSEL_PCH1_POSITION                              0x1
#define _CM1PSEL_PCH1_SIZE                                  0x1
#define _CM1PSEL_PCH1_LENGTH                                0x1
#define _CM1PSEL_PCH1_MASK                                  0x2
#define _CM1PSEL_PCH2_POSN                                  0x2
#define _CM1PSEL_PCH2_POSITION                              0x2
#define _CM1PSEL_PCH2_SIZE                                  0x1
#define _CM1PSEL_PCH2_LENGTH                                0x1
#define _CM1PSEL_PCH2_MASK                                  0x4
#define _CM1PSEL_PCH3_POSN                                  0x3
#define _CM1PSEL_PCH3_POSITION                              0x3
#define _CM1PSEL_PCH3_SIZE                                  0x1
#define _CM1PSEL_PCH3_LENGTH                                0x1
#define _CM1PSEL_PCH3_MASK                                  0x8
#define _CM1PSEL_C1PCH_POSN                                 0x0
#define _CM1PSEL_C1PCH_POSITION                             0x0
#define _CM1PSEL_C1PCH_SIZE                                 0x4
#define _CM1PSEL_C1PCH_LENGTH                               0x4
#define _CM1PSEL_C1PCH_MASK                                 0xF
#define _CM1PSEL_C1PCH0_POSN                                0x0
#define _CM1PSEL_C1PCH0_POSITION                            0x0
#define _CM1PSEL_C1PCH0_SIZE                                0x1
#define _CM1PSEL_C1PCH0_LENGTH                              0x1
#define _CM1PSEL_C1PCH0_MASK                                0x1
#define _CM1PSEL_C1PCH1_POSN                                0x1
#define _CM1PSEL_C1PCH1_POSITION                            0x1
#define _CM1PSEL_C1PCH1_SIZE                                0x1
#define _CM1PSEL_C1PCH1_LENGTH                              0x1
#define _CM1PSEL_C1PCH1_MASK                                0x2
#define _CM1PSEL_C1PCH2_POSN                                0x2
#define _CM1PSEL_C1PCH2_POSITION                            0x2
#define _CM1PSEL_C1PCH2_SIZE                                0x1
#define _CM1PSEL_C1PCH2_LENGTH                              0x1
#define _CM1PSEL_C1PCH2_MASK                                0x4
#define _CM1PSEL_C1PCH3_POSN                                0x3
#define _CM1PSEL_C1PCH3_POSITION                            0x3
#define _CM1PSEL_C1PCH3_SIZE                                0x1
#define _CM1PSEL_C1PCH3_LENGTH                              0x1
#define _CM1PSEL_C1PCH3_MASK                                0x8

// Register: CM2CON0
#define CM2CON0 CM2CON0
extern volatile unsigned char           CM2CON0             __at(0x116);
#ifndef _LIB_BUILD
asm("CM2CON0 equ 0116h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SYNC                   :1;
        unsigned HYS                    :1;
        unsigned                        :1;
        unsigned ZLF                    :1;
        unsigned POL                    :1;
        unsigned                        :1;
        unsigned OUT                    :1;
        unsigned ON                     :1;
    };
    struct {
        unsigned C2SYNC                 :1;
        unsigned C2HYS                  :1;
        unsigned C2SP                   :1;
        unsigned C2ZLF                  :1;
        unsigned C2POL                  :1;
        unsigned                        :1;
        unsigned C2OUT                  :1;
        unsigned C2ON                   :1;
    };
} CM2CON0bits_t;
extern volatile CM2CON0bits_t CM2CON0bits __at(0x116);
// bitfield macros
#define _CM2CON0_SYNC_POSN                                  0x0
#define _CM2CON0_SYNC_POSITION                              0x0
#define _CM2CON0_SYNC_SIZE                                  0x1
#define _CM2CON0_SYNC_LENGTH                                0x1
#define _CM2CON0_SYNC_MASK                                  0x1
#define _CM2CON0_HYS_POSN                                   0x1
#define _CM2CON0_HYS_POSITION                               0x1
#define _CM2CON0_HYS_SIZE                                   0x1
#define _CM2CON0_HYS_LENGTH                                 0x1
#define _CM2CON0_HYS_MASK                                   0x2
#define _CM2CON0_ZLF_POSN                                   0x3
#define _CM2CON0_ZLF_POSITION                               0x3
#define _CM2CON0_ZLF_SIZE                                   0x1
#define _CM2CON0_ZLF_LENGTH                                 0x1
#define _CM2CON0_ZLF_MASK                                   0x8
#define _CM2CON0_POL_POSN                                   0x4
#define _CM2CON0_POL_POSITION                               0x4
#define _CM2CON0_POL_SIZE                                   0x1
#define _CM2CON0_POL_LENGTH                                 0x1
#define _CM2CON0_POL_MASK                                   0x10
#define _CM2CON0_OUT_POSN                                   0x6
#define _CM2CON0_OUT_POSITION                               0x6
#define _CM2CON0_OUT_SIZE                                   0x1
#define _CM2CON0_OUT_LENGTH                                 0x1
#define _CM2CON0_OUT_MASK                                   0x40
#define _CM2CON0_ON_POSN                                    0x7
#define _CM2CON0_ON_POSITION                                0x7
#define _CM2CON0_ON_SIZE                                    0x1
#define _CM2CON0_ON_LENGTH                                  0x1
#define _CM2CON0_ON_MASK                                    0x80
#define _CM2CON0_C2SYNC_POSN                                0x0
#define _CM2CON0_C2SYNC_POSITION                            0x0
#define _CM2CON0_C2SYNC_SIZE                                0x1
#define _CM2CON0_C2SYNC_LENGTH                              0x1
#define _CM2CON0_C2SYNC_MASK                                0x1
#define _CM2CON0_C2HYS_POSN                                 0x1
#define _CM2CON0_C2HYS_POSITION                             0x1
#define _CM2CON0_C2HYS_SIZE                                 0x1
#define _CM2CON0_C2HYS_LENGTH                               0x1
#define _CM2CON0_C2HYS_MASK                                 0x2
#define _CM2CON0_C2SP_POSN                                  0x2
#define _CM2CON0_C2SP_POSITION                              0x2
#define _CM2CON0_C2SP_SIZE                                  0x1
#define _CM2CON0_C2SP_LENGTH                                0x1
#define _CM2CON0_C2SP_MASK                                  0x4
#define _CM2CON0_C2ZLF_POSN                                 0x3
#define _CM2CON0_C2ZLF_POSITION                             0x3
#define _CM2CON0_C2ZLF_SIZE                                 0x1
#define _CM2CON0_C2ZLF_LENGTH                               0x1
#define _CM2CON0_C2ZLF_MASK                                 0x8
#define _CM2CON0_C2POL_POSN                                 0x4
#define _CM2CON0_C2POL_POSITION                             0x4
#define _CM2CON0_C2POL_SIZE                                 0x1
#define _CM2CON0_C2POL_LENGTH                               0x1
#define _CM2CON0_C2POL_MASK                                 0x10
#define _CM2CON0_C2OUT_POSN                                 0x6
#define _CM2CON0_C2OUT_POSITION                             0x6
#define _CM2CON0_C2OUT_SIZE                                 0x1
#define _CM2CON0_C2OUT_LENGTH                               0x1
#define _CM2CON0_C2OUT_MASK                                 0x40
#define _CM2CON0_C2ON_POSN                                  0x7
#define _CM2CON0_C2ON_POSITION                              0x7
#define _CM2CON0_C2ON_SIZE                                  0x1
#define _CM2CON0_C2ON_LENGTH                                0x1
#define _CM2CON0_C2ON_MASK                                  0x80

// Register: CM2CON1
#define CM2CON1 CM2CON1
extern volatile unsigned char           CM2CON1             __at(0x117);
#ifndef _LIB_BUILD
asm("CM2CON1 equ 0117h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTN                   :1;
        unsigned INTP                   :1;
    };
    struct {
        unsigned C2INTN                 :1;
        unsigned C2INTP                 :1;
    };
} CM2CON1bits_t;
extern volatile CM2CON1bits_t CM2CON1bits __at(0x117);
// bitfield macros
#define _CM2CON1_INTN_POSN                                  0x0
#define _CM2CON1_INTN_POSITION                              0x0
#define _CM2CON1_INTN_SIZE                                  0x1
#define _CM2CON1_INTN_LENGTH                                0x1
#define _CM2CON1_INTN_MASK                                  0x1
#define _CM2CON1_INTP_POSN                                  0x1
#define _CM2CON1_INTP_POSITION                              0x1
#define _CM2CON1_INTP_SIZE                                  0x1
#define _CM2CON1_INTP_LENGTH                                0x1
#define _CM2CON1_INTP_MASK                                  0x2
#define _CM2CON1_C2INTN_POSN                                0x0
#define _CM2CON1_C2INTN_POSITION                            0x0
#define _CM2CON1_C2INTN_SIZE                                0x1
#define _CM2CON1_C2INTN_LENGTH                              0x1
#define _CM2CON1_C2INTN_MASK                                0x1
#define _CM2CON1_C2INTP_POSN                                0x1
#define _CM2CON1_C2INTP_POSITION                            0x1
#define _CM2CON1_C2INTP_SIZE                                0x1
#define _CM2CON1_C2INTP_LENGTH                              0x1
#define _CM2CON1_C2INTP_MASK                                0x2

// Register: CM2NSEL
#define CM2NSEL CM2NSEL
extern volatile unsigned char           CM2NSEL             __at(0x118);
#ifndef _LIB_BUILD
asm("CM2NSEL equ 0118h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :4;
    };
    struct {
        unsigned C2NCH                  :4;
    };
    struct {
        unsigned C2NCH0                 :1;
        unsigned C2NCH1                 :1;
        unsigned C2NCH2                 :1;
        unsigned C2NCH3                 :1;
    };
} CM2NSELbits_t;
extern volatile CM2NSELbits_t CM2NSELbits __at(0x118);
// bitfield macros
#define _CM2NSEL_NCH_POSN                                   0x0
#define _CM2NSEL_NCH_POSITION                               0x0
#define _CM2NSEL_NCH_SIZE                                   0x4
#define _CM2NSEL_NCH_LENGTH                                 0x4
#define _CM2NSEL_NCH_MASK                                   0xF
#define _CM2NSEL_C2NCH_POSN                                 0x0
#define _CM2NSEL_C2NCH_POSITION                             0x0
#define _CM2NSEL_C2NCH_SIZE                                 0x4
#define _CM2NSEL_C2NCH_LENGTH                               0x4
#define _CM2NSEL_C2NCH_MASK                                 0xF
#define _CM2NSEL_C2NCH0_POSN                                0x0
#define _CM2NSEL_C2NCH0_POSITION                            0x0
#define _CM2NSEL_C2NCH0_SIZE                                0x1
#define _CM2NSEL_C2NCH0_LENGTH                              0x1
#define _CM2NSEL_C2NCH0_MASK                                0x1
#define _CM2NSEL_C2NCH1_POSN                                0x1
#define _CM2NSEL_C2NCH1_POSITION                            0x1
#define _CM2NSEL_C2NCH1_SIZE                                0x1
#define _CM2NSEL_C2NCH1_LENGTH                              0x1
#define _CM2NSEL_C2NCH1_MASK                                0x2
#define _CM2NSEL_C2NCH2_POSN                                0x2
#define _CM2NSEL_C2NCH2_POSITION                            0x2
#define _CM2NSEL_C2NCH2_SIZE                                0x1
#define _CM2NSEL_C2NCH2_LENGTH                              0x1
#define _CM2NSEL_C2NCH2_MASK                                0x4
#define _CM2NSEL_C2NCH3_POSN                                0x3
#define _CM2NSEL_C2NCH3_POSITION                            0x3
#define _CM2NSEL_C2NCH3_SIZE                                0x1
#define _CM2NSEL_C2NCH3_LENGTH                              0x1
#define _CM2NSEL_C2NCH3_MASK                                0x8

// Register: CM2PSEL
#define CM2PSEL CM2PSEL
extern volatile unsigned char           CM2PSEL             __at(0x119);
#ifndef _LIB_BUILD
asm("CM2PSEL equ 0119h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :4;
    };
    struct {
        unsigned PCH0                   :1;
        unsigned PCH1                   :1;
        unsigned PCH2                   :1;
        unsigned PCH3                   :1;
    };
    struct {
        unsigned C2PCH                  :4;
    };
    struct {
        unsigned C2PCH0                 :1;
        unsigned C2PCH1                 :1;
        unsigned C2PCH2                 :1;
        unsigned C2PCH3                 :1;
    };
} CM2PSELbits_t;
extern volatile CM2PSELbits_t CM2PSELbits __at(0x119);
// bitfield macros
#define _CM2PSEL_PCH_POSN                                   0x0
#define _CM2PSEL_PCH_POSITION                               0x0
#define _CM2PSEL_PCH_SIZE                                   0x4
#define _CM2PSEL_PCH_LENGTH                                 0x4
#define _CM2PSEL_PCH_MASK                                   0xF
#define _CM2PSEL_PCH0_POSN                                  0x0
#define _CM2PSEL_PCH0_POSITION                              0x0
#define _CM2PSEL_PCH0_SIZE                                  0x1
#define _CM2PSEL_PCH0_LENGTH                                0x1
#define _CM2PSEL_PCH0_MASK                                  0x1
#define _CM2PSEL_PCH1_POSN                                  0x1
#define _CM2PSEL_PCH1_POSITION                              0x1
#define _CM2PSEL_PCH1_SIZE                                  0x1
#define _CM2PSEL_PCH1_LENGTH                                0x1
#define _CM2PSEL_PCH1_MASK                                  0x2
#define _CM2PSEL_PCH2_POSN                                  0x2
#define _CM2PSEL_PCH2_POSITION                              0x2
#define _CM2PSEL_PCH2_SIZE                                  0x1
#define _CM2PSEL_PCH2_LENGTH                                0x1
#define _CM2PSEL_PCH2_MASK                                  0x4
#define _CM2PSEL_PCH3_POSN                                  0x3
#define _CM2PSEL_PCH3_POSITION                              0x3
#define _CM2PSEL_PCH3_SIZE                                  0x1
#define _CM2PSEL_PCH3_LENGTH                                0x1
#define _CM2PSEL_PCH3_MASK                                  0x8
#define _CM2PSEL_C2PCH_POSN                                 0x0
#define _CM2PSEL_C2PCH_POSITION                             0x0
#define _CM2PSEL_C2PCH_SIZE                                 0x4
#define _CM2PSEL_C2PCH_LENGTH                               0x4
#define _CM2PSEL_C2PCH_MASK                                 0xF
#define _CM2PSEL_C2PCH0_POSN                                0x0
#define _CM2PSEL_C2PCH0_POSITION                            0x0
#define _CM2PSEL_C2PCH0_SIZE                                0x1
#define _CM2PSEL_C2PCH0_LENGTH                              0x1
#define _CM2PSEL_C2PCH0_MASK                                0x1
#define _CM2PSEL_C2PCH1_POSN                                0x1
#define _CM2PSEL_C2PCH1_POSITION                            0x1
#define _CM2PSEL_C2PCH1_SIZE                                0x1
#define _CM2PSEL_C2PCH1_LENGTH                              0x1
#define _CM2PSEL_C2PCH1_MASK                                0x2
#define _CM2PSEL_C2PCH2_POSN                                0x2
#define _CM2PSEL_C2PCH2_POSITION                            0x2
#define _CM2PSEL_C2PCH2_SIZE                                0x1
#define _CM2PSEL_C2PCH2_LENGTH                              0x1
#define _CM2PSEL_C2PCH2_MASK                                0x4
#define _CM2PSEL_C2PCH3_POSN                                0x3
#define _CM2PSEL_C2PCH3_POSITION                            0x3
#define _CM2PSEL_C2PCH3_SIZE                                0x1
#define _CM2PSEL_C2PCH3_LENGTH                              0x1
#define _CM2PSEL_C2PCH3_MASK                                0x8

// Register: CM3CON0
#define CM3CON0 CM3CON0
extern volatile unsigned char           CM3CON0             __at(0x11A);
#ifndef _LIB_BUILD
asm("CM3CON0 equ 011Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SYNC                   :1;
        unsigned HYS                    :1;
        unsigned                        :1;
        unsigned ZLF                    :1;
        unsigned POL                    :1;
        unsigned                        :1;
        unsigned OUT                    :1;
        unsigned ON                     :1;
    };
    struct {
        unsigned C3SYNC                 :1;
        unsigned C3HYS                  :1;
        unsigned C3SP                   :1;
        unsigned C3ZLF                  :1;
        unsigned C3POL                  :1;
        unsigned                        :1;
        unsigned C3OUT                  :1;
        unsigned C3ON                   :1;
    };
} CM3CON0bits_t;
extern volatile CM3CON0bits_t CM3CON0bits __at(0x11A);
// bitfield macros
#define _CM3CON0_SYNC_POSN                                  0x0
#define _CM3CON0_SYNC_POSITION                              0x0
#define _CM3CON0_SYNC_SIZE                                  0x1
#define _CM3CON0_SYNC_LENGTH                                0x1
#define _CM3CON0_SYNC_MASK                                  0x1
#define _CM3CON0_HYS_POSN                                   0x1
#define _CM3CON0_HYS_POSITION                               0x1
#define _CM3CON0_HYS_SIZE                                   0x1
#define _CM3CON0_HYS_LENGTH                                 0x1
#define _CM3CON0_HYS_MASK                                   0x2
#define _CM3CON0_ZLF_POSN                                   0x3
#define _CM3CON0_ZLF_POSITION                               0x3
#define _CM3CON0_ZLF_SIZE                                   0x1
#define _CM3CON0_ZLF_LENGTH                                 0x1
#define _CM3CON0_ZLF_MASK                                   0x8
#define _CM3CON0_POL_POSN                                   0x4
#define _CM3CON0_POL_POSITION                               0x4
#define _CM3CON0_POL_SIZE                                   0x1
#define _CM3CON0_POL_LENGTH                                 0x1
#define _CM3CON0_POL_MASK                                   0x10
#define _CM3CON0_OUT_POSN                                   0x6
#define _CM3CON0_OUT_POSITION                               0x6
#define _CM3CON0_OUT_SIZE                                   0x1
#define _CM3CON0_OUT_LENGTH                                 0x1
#define _CM3CON0_OUT_MASK                                   0x40
#define _CM3CON0_ON_POSN                                    0x7
#define _CM3CON0_ON_POSITION                                0x7
#define _CM3CON0_ON_SIZE                                    0x1
#define _CM3CON0_ON_LENGTH                                  0x1
#define _CM3CON0_ON_MASK                                    0x80
#define _CM3CON0_C3SYNC_POSN                                0x0
#define _CM3CON0_C3SYNC_POSITION                            0x0
#define _CM3CON0_C3SYNC_SIZE                                0x1
#define _CM3CON0_C3SYNC_LENGTH                              0x1
#define _CM3CON0_C3SYNC_MASK                                0x1
#define _CM3CON0_C3HYS_POSN                                 0x1
#define _CM3CON0_C3HYS_POSITION                             0x1
#define _CM3CON0_C3HYS_SIZE                                 0x1
#define _CM3CON0_C3HYS_LENGTH                               0x1
#define _CM3CON0_C3HYS_MASK                                 0x2
#define _CM3CON0_C3SP_POSN                                  0x2
#define _CM3CON0_C3SP_POSITION                              0x2
#define _CM3CON0_C3SP_SIZE                                  0x1
#define _CM3CON0_C3SP_LENGTH                                0x1
#define _CM3CON0_C3SP_MASK                                  0x4
#define _CM3CON0_C3ZLF_POSN                                 0x3
#define _CM3CON0_C3ZLF_POSITION                             0x3
#define _CM3CON0_C3ZLF_SIZE                                 0x1
#define _CM3CON0_C3ZLF_LENGTH                               0x1
#define _CM3CON0_C3ZLF_MASK                                 0x8
#define _CM3CON0_C3POL_POSN                                 0x4
#define _CM3CON0_C3POL_POSITION                             0x4
#define _CM3CON0_C3POL_SIZE                                 0x1
#define _CM3CON0_C3POL_LENGTH                               0x1
#define _CM3CON0_C3POL_MASK                                 0x10
#define _CM3CON0_C3OUT_POSN                                 0x6
#define _CM3CON0_C3OUT_POSITION                             0x6
#define _CM3CON0_C3OUT_SIZE                                 0x1
#define _CM3CON0_C3OUT_LENGTH                               0x1
#define _CM3CON0_C3OUT_MASK                                 0x40
#define _CM3CON0_C3ON_POSN                                  0x7
#define _CM3CON0_C3ON_POSITION                              0x7
#define _CM3CON0_C3ON_SIZE                                  0x1
#define _CM3CON0_C3ON_LENGTH                                0x1
#define _CM3CON0_C3ON_MASK                                  0x80

// Register: CM3CON1
#define CM3CON1 CM3CON1
extern volatile unsigned char           CM3CON1             __at(0x11B);
#ifndef _LIB_BUILD
asm("CM3CON1 equ 011Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTN                   :1;
        unsigned INTP                   :1;
    };
    struct {
        unsigned C3INTN                 :1;
        unsigned C3INTP                 :1;
    };
} CM3CON1bits_t;
extern volatile CM3CON1bits_t CM3CON1bits __at(0x11B);
// bitfield macros
#define _CM3CON1_INTN_POSN                                  0x0
#define _CM3CON1_INTN_POSITION                              0x0
#define _CM3CON1_INTN_SIZE                                  0x1
#define _CM3CON1_INTN_LENGTH                                0x1
#define _CM3CON1_INTN_MASK                                  0x1
#define _CM3CON1_INTP_POSN                                  0x1
#define _CM3CON1_INTP_POSITION                              0x1
#define _CM3CON1_INTP_SIZE                                  0x1
#define _CM3CON1_INTP_LENGTH                                0x1
#define _CM3CON1_INTP_MASK                                  0x2
#define _CM3CON1_C3INTN_POSN                                0x0
#define _CM3CON1_C3INTN_POSITION                            0x0
#define _CM3CON1_C3INTN_SIZE                                0x1
#define _CM3CON1_C3INTN_LENGTH                              0x1
#define _CM3CON1_C3INTN_MASK                                0x1
#define _CM3CON1_C3INTP_POSN                                0x1
#define _CM3CON1_C3INTP_POSITION                            0x1
#define _CM3CON1_C3INTP_SIZE                                0x1
#define _CM3CON1_C3INTP_LENGTH                              0x1
#define _CM3CON1_C3INTP_MASK                                0x2

// Register: CM3NSEL
#define CM3NSEL CM3NSEL
extern volatile unsigned char           CM3NSEL             __at(0x11C);
#ifndef _LIB_BUILD
asm("CM3NSEL equ 011Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :4;
    };
    struct {
        unsigned C3NCH                  :4;
    };
    struct {
        unsigned C3NCH0                 :1;
        unsigned C3NCH1                 :1;
        unsigned C3NCH2                 :1;
        unsigned C3NCH3                 :1;
    };
} CM3NSELbits_t;
extern volatile CM3NSELbits_t CM3NSELbits __at(0x11C);
// bitfield macros
#define _CM3NSEL_NCH_POSN                                   0x0
#define _CM3NSEL_NCH_POSITION                               0x0
#define _CM3NSEL_NCH_SIZE                                   0x4
#define _CM3NSEL_NCH_LENGTH                                 0x4
#define _CM3NSEL_NCH_MASK                                   0xF
#define _CM3NSEL_C3NCH_POSN                                 0x0
#define _CM3NSEL_C3NCH_POSITION                             0x0
#define _CM3NSEL_C3NCH_SIZE                                 0x4
#define _CM3NSEL_C3NCH_LENGTH                               0x4
#define _CM3NSEL_C3NCH_MASK                                 0xF
#define _CM3NSEL_C3NCH0_POSN                                0x0
#define _CM3NSEL_C3NCH0_POSITION                            0x0
#define _CM3NSEL_C3NCH0_SIZE                                0x1
#define _CM3NSEL_C3NCH0_LENGTH                              0x1
#define _CM3NSEL_C3NCH0_MASK                                0x1
#define _CM3NSEL_C3NCH1_POSN                                0x1
#define _CM3NSEL_C3NCH1_POSITION                            0x1
#define _CM3NSEL_C3NCH1_SIZE                                0x1
#define _CM3NSEL_C3NCH1_LENGTH                              0x1
#define _CM3NSEL_C3NCH1_MASK                                0x2
#define _CM3NSEL_C3NCH2_POSN                                0x2
#define _CM3NSEL_C3NCH2_POSITION                            0x2
#define _CM3NSEL_C3NCH2_SIZE                                0x1
#define _CM3NSEL_C3NCH2_LENGTH                              0x1
#define _CM3NSEL_C3NCH2_MASK                                0x4
#define _CM3NSEL_C3NCH3_POSN                                0x3
#define _CM3NSEL_C3NCH3_POSITION                            0x3
#define _CM3NSEL_C3NCH3_SIZE                                0x1
#define _CM3NSEL_C3NCH3_LENGTH                              0x1
#define _CM3NSEL_C3NCH3_MASK                                0x8

// Register: CM3PSEL
#define CM3PSEL CM3PSEL
extern volatile unsigned char           CM3PSEL             __at(0x11D);
#ifndef _LIB_BUILD
asm("CM3PSEL equ 011Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :4;
    };
    struct {
        unsigned PCH0                   :1;
        unsigned PCH1                   :1;
        unsigned PCH2                   :1;
        unsigned PCH3                   :1;
    };
    struct {
        unsigned C3PCH                  :4;
    };
    struct {
        unsigned C3PCH0                 :1;
        unsigned C3PCH1                 :1;
        unsigned C3PCH2                 :1;
        unsigned C3PCH3                 :1;
    };
} CM3PSELbits_t;
extern volatile CM3PSELbits_t CM3PSELbits __at(0x11D);
// bitfield macros
#define _CM3PSEL_PCH_POSN                                   0x0
#define _CM3PSEL_PCH_POSITION                               0x0
#define _CM3PSEL_PCH_SIZE                                   0x4
#define _CM3PSEL_PCH_LENGTH                                 0x4
#define _CM3PSEL_PCH_MASK                                   0xF
#define _CM3PSEL_PCH0_POSN                                  0x0
#define _CM3PSEL_PCH0_POSITION                              0x0
#define _CM3PSEL_PCH0_SIZE                                  0x1
#define _CM3PSEL_PCH0_LENGTH                                0x1
#define _CM3PSEL_PCH0_MASK                                  0x1
#define _CM3PSEL_PCH1_POSN                                  0x1
#define _CM3PSEL_PCH1_POSITION                              0x1
#define _CM3PSEL_PCH1_SIZE                                  0x1
#define _CM3PSEL_PCH1_LENGTH                                0x1
#define _CM3PSEL_PCH1_MASK                                  0x2
#define _CM3PSEL_PCH2_POSN                                  0x2
#define _CM3PSEL_PCH2_POSITION                              0x2
#define _CM3PSEL_PCH2_SIZE                                  0x1
#define _CM3PSEL_PCH2_LENGTH                                0x1
#define _CM3PSEL_PCH2_MASK                                  0x4
#define _CM3PSEL_PCH3_POSN                                  0x3
#define _CM3PSEL_PCH3_POSITION                              0x3
#define _CM3PSEL_PCH3_SIZE                                  0x1
#define _CM3PSEL_PCH3_LENGTH                                0x1
#define _CM3PSEL_PCH3_MASK                                  0x8
#define _CM3PSEL_C3PCH_POSN                                 0x0
#define _CM3PSEL_C3PCH_POSITION                             0x0
#define _CM3PSEL_C3PCH_SIZE                                 0x4
#define _CM3PSEL_C3PCH_LENGTH                               0x4
#define _CM3PSEL_C3PCH_MASK                                 0xF
#define _CM3PSEL_C3PCH0_POSN                                0x0
#define _CM3PSEL_C3PCH0_POSITION                            0x0
#define _CM3PSEL_C3PCH0_SIZE                                0x1
#define _CM3PSEL_C3PCH0_LENGTH                              0x1
#define _CM3PSEL_C3PCH0_MASK                                0x1
#define _CM3PSEL_C3PCH1_POSN                                0x1
#define _CM3PSEL_C3PCH1_POSITION                            0x1
#define _CM3PSEL_C3PCH1_SIZE                                0x1
#define _CM3PSEL_C3PCH1_LENGTH                              0x1
#define _CM3PSEL_C3PCH1_MASK                                0x2
#define _CM3PSEL_C3PCH2_POSN                                0x2
#define _CM3PSEL_C3PCH2_POSITION                            0x2
#define _CM3PSEL_C3PCH2_SIZE                                0x1
#define _CM3PSEL_C3PCH2_LENGTH                              0x1
#define _CM3PSEL_C3PCH2_MASK                                0x4
#define _CM3PSEL_C3PCH3_POSN                                0x3
#define _CM3PSEL_C3PCH3_POSITION                            0x3
#define _CM3PSEL_C3PCH3_SIZE                                0x1
#define _CM3PSEL_C3PCH3_LENGTH                              0x1
#define _CM3PSEL_C3PCH3_MASK                                0x8

// Register: ANSELA
#define ANSELA ANSELA
extern volatile unsigned char           ANSELA              __at(0x18C);
#ifndef _LIB_BUILD
asm("ANSELA equ 018Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ANSA0                  :1;
        unsigned ANSA1                  :1;
        unsigned ANSA2                  :1;
        unsigned ANSA3                  :1;
        unsigned ANSA4                  :1;
        unsigned ANSA5                  :1;
    };
} ANSELAbits_t;
extern volatile ANSELAbits_t ANSELAbits __at(0x18C);
// bitfield macros
#define _ANSELA_ANSA0_POSN                                  0x0
#define _ANSELA_ANSA0_POSITION                              0x0
#define _ANSELA_ANSA0_SIZE                                  0x1
#define _ANSELA_ANSA0_LENGTH                                0x1
#define _ANSELA_ANSA0_MASK                                  0x1
#define _ANSELA_ANSA1_POSN                                  0x1
#define _ANSELA_ANSA1_POSITION                              0x1
#define _ANSELA_ANSA1_SIZE                                  0x1
#define _ANSELA_ANSA1_LENGTH                                0x1
#define _ANSELA_ANSA1_MASK                                  0x2
#define _ANSELA_ANSA2_POSN                                  0x2
#define _ANSELA_ANSA2_POSITION                              0x2
#define _ANSELA_ANSA2_SIZE                                  0x1
#define _ANSELA_ANSA2_LENGTH                                0x1
#define _ANSELA_ANSA2_MASK                                  0x4
#define _ANSELA_ANSA3_POSN                                  0x3
#define _ANSELA_ANSA3_POSITION                              0x3
#define _ANSELA_ANSA3_SIZE                                  0x1
#define _ANSELA_ANSA3_LENGTH                                0x1
#define _ANSELA_ANSA3_MASK                                  0x8
#define _ANSELA_ANSA4_POSN                                  0x4
#define _ANSELA_ANSA4_POSITION                              0x4
#define _ANSELA_ANSA4_SIZE                                  0x1
#define _ANSELA_ANSA4_LENGTH                                0x1
#define _ANSELA_ANSA4_MASK                                  0x10
#define _ANSELA_ANSA5_POSN                                  0x5
#define _ANSELA_ANSA5_POSITION                              0x5
#define _ANSELA_ANSA5_SIZE                                  0x1
#define _ANSELA_ANSA5_LENGTH                                0x1
#define _ANSELA_ANSA5_MASK                                  0x20

// Register: ANSELB
#define ANSELB ANSELB
extern volatile unsigned char           ANSELB              __at(0x18D);
#ifndef _LIB_BUILD
asm("ANSELB equ 018Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ANSB0                  :1;
        unsigned ANSB1                  :1;
        unsigned ANSB2                  :1;
        unsigned ANSB3                  :1;
        unsigned ANSB4                  :1;
        unsigned ANSB5                  :1;
    };
} ANSELBbits_t;
extern volatile ANSELBbits_t ANSELBbits __at(0x18D);
// bitfield macros
#define _ANSELB_ANSB0_POSN                                  0x0
#define _ANSELB_ANSB0_POSITION                              0x0
#define _ANSELB_ANSB0_SIZE                                  0x1
#define _ANSELB_ANSB0_LENGTH                                0x1
#define _ANSELB_ANSB0_MASK                                  0x1
#define _ANSELB_ANSB1_POSN                                  0x1
#define _ANSELB_ANSB1_POSITION                              0x1
#define _ANSELB_ANSB1_SIZE                                  0x1
#define _ANSELB_ANSB1_LENGTH                                0x1
#define _ANSELB_ANSB1_MASK                                  0x2
#define _ANSELB_ANSB2_POSN                                  0x2
#define _ANSELB_ANSB2_POSITION                              0x2
#define _ANSELB_ANSB2_SIZE                                  0x1
#define _ANSELB_ANSB2_LENGTH                                0x1
#define _ANSELB_ANSB2_MASK                                  0x4
#define _ANSELB_ANSB3_POSN                                  0x3
#define _ANSELB_ANSB3_POSITION                              0x3
#define _ANSELB_ANSB3_SIZE                                  0x1
#define _ANSELB_ANSB3_LENGTH                                0x1
#define _ANSELB_ANSB3_MASK                                  0x8
#define _ANSELB_ANSB4_POSN                                  0x4
#define _ANSELB_ANSB4_POSITION                              0x4
#define _ANSELB_ANSB4_SIZE                                  0x1
#define _ANSELB_ANSB4_LENGTH                                0x1
#define _ANSELB_ANSB4_MASK                                  0x10
#define _ANSELB_ANSB5_POSN                                  0x5
#define _ANSELB_ANSB5_POSITION                              0x5
#define _ANSELB_ANSB5_SIZE                                  0x1
#define _ANSELB_ANSB5_LENGTH                                0x1
#define _ANSELB_ANSB5_MASK                                  0x20

// Register: ANSELC
#define ANSELC ANSELC
extern volatile unsigned char           ANSELC              __at(0x18E);
#ifndef _LIB_BUILD
asm("ANSELC equ 018Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned ANSC2                  :1;
        unsigned ANSC3                  :1;
        unsigned ANSC4                  :1;
        unsigned ANSC5                  :1;
        unsigned ANSC6                  :1;
        unsigned ANSC7                  :1;
    };
} ANSELCbits_t;
extern volatile ANSELCbits_t ANSELCbits __at(0x18E);
// bitfield macros
#define _ANSELC_ANSC2_POSN                                  0x2
#define _ANSELC_ANSC2_POSITION                              0x2
#define _ANSELC_ANSC2_SIZE                                  0x1
#define _ANSELC_ANSC2_LENGTH                                0x1
#define _ANSELC_ANSC2_MASK                                  0x4
#define _ANSELC_ANSC3_POSN                                  0x3
#define _ANSELC_ANSC3_POSITION                              0x3
#define _ANSELC_ANSC3_SIZE                                  0x1
#define _ANSELC_ANSC3_LENGTH                                0x1
#define _ANSELC_ANSC3_MASK                                  0x8
#define _ANSELC_ANSC4_POSN                                  0x4
#define _ANSELC_ANSC4_POSITION                              0x4
#define _ANSELC_ANSC4_SIZE                                  0x1
#define _ANSELC_ANSC4_LENGTH                                0x1
#define _ANSELC_ANSC4_MASK                                  0x10
#define _ANSELC_ANSC5_POSN                                  0x5
#define _ANSELC_ANSC5_POSITION                              0x5
#define _ANSELC_ANSC5_SIZE                                  0x1
#define _ANSELC_ANSC5_LENGTH                                0x1
#define _ANSELC_ANSC5_MASK                                  0x20
#define _ANSELC_ANSC6_POSN                                  0x6
#define _ANSELC_ANSC6_POSITION                              0x6
#define _ANSELC_ANSC6_SIZE                                  0x1
#define _ANSELC_ANSC6_LENGTH                                0x1
#define _ANSELC_ANSC6_MASK                                  0x40
#define _ANSELC_ANSC7_POSN                                  0x7
#define _ANSELC_ANSC7_POSITION                              0x7
#define _ANSELC_ANSC7_SIZE                                  0x1
#define _ANSELC_ANSC7_LENGTH                                0x1
#define _ANSELC_ANSC7_MASK                                  0x80

// Register: ANSELD
#define ANSELD ANSELD
extern volatile unsigned char           ANSELD              __at(0x18F);
#ifndef _LIB_BUILD
asm("ANSELD equ 018Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ANSD0                  :1;
        unsigned ANSD1                  :1;
        unsigned ANSD2                  :1;
        unsigned ANSD3                  :1;
        unsigned ANSD4                  :1;
        unsigned ANSD5                  :1;
        unsigned ANSD6                  :1;
        unsigned ANSD7                  :1;
    };
} ANSELDbits_t;
extern volatile ANSELDbits_t ANSELDbits __at(0x18F);
// bitfield macros
#define _ANSELD_ANSD0_POSN                                  0x0
#define _ANSELD_ANSD0_POSITION                              0x0
#define _ANSELD_ANSD0_SIZE                                  0x1
#define _ANSELD_ANSD0_LENGTH                                0x1
#define _ANSELD_ANSD0_MASK                                  0x1
#define _ANSELD_ANSD1_POSN                                  0x1
#define _ANSELD_ANSD1_POSITION                              0x1
#define _ANSELD_ANSD1_SIZE                                  0x1
#define _ANSELD_ANSD1_LENGTH                                0x1
#define _ANSELD_ANSD1_MASK                                  0x2
#define _ANSELD_ANSD2_POSN                                  0x2
#define _ANSELD_ANSD2_POSITION                              0x2
#define _ANSELD_ANSD2_SIZE                                  0x1
#define _ANSELD_ANSD2_LENGTH                                0x1
#define _ANSELD_ANSD2_MASK                                  0x4
#define _ANSELD_ANSD3_POSN                                  0x3
#define _ANSELD_ANSD3_POSITION                              0x3
#define _ANSELD_ANSD3_SIZE                                  0x1
#define _ANSELD_ANSD3_LENGTH                                0x1
#define _ANSELD_ANSD3_MASK                                  0x8
#define _ANSELD_ANSD4_POSN                                  0x4
#define _ANSELD_ANSD4_POSITION                              0x4
#define _ANSELD_ANSD4_SIZE                                  0x1
#define _ANSELD_ANSD4_LENGTH                                0x1
#define _ANSELD_ANSD4_MASK                                  0x10
#define _ANSELD_ANSD5_POSN                                  0x5
#define _ANSELD_ANSD5_POSITION                              0x5
#define _ANSELD_ANSD5_SIZE                                  0x1
#define _ANSELD_ANSD5_LENGTH                                0x1
#define _ANSELD_ANSD5_MASK                                  0x20
#define _ANSELD_ANSD6_POSN                                  0x6
#define _ANSELD_ANSD6_POSITION                              0x6
#define _ANSELD_ANSD6_SIZE                                  0x1
#define _ANSELD_ANSD6_LENGTH                                0x1
#define _ANSELD_ANSD6_MASK                                  0x40
#define _ANSELD_ANSD7_POSN                                  0x7
#define _ANSELD_ANSD7_POSITION                              0x7
#define _ANSELD_ANSD7_SIZE                                  0x1
#define _ANSELD_ANSD7_LENGTH                                0x1
#define _ANSELD_ANSD7_MASK                                  0x80

// Register: ANSELE
#define ANSELE ANSELE
extern volatile unsigned char           ANSELE              __at(0x190);
#ifndef _LIB_BUILD
asm("ANSELE equ 0190h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ANSE0                  :1;
        unsigned ANSE1                  :1;
        unsigned ANSE2                  :1;
    };
} ANSELEbits_t;
extern volatile ANSELEbits_t ANSELEbits __at(0x190);
// bitfield macros
#define _ANSELE_ANSE0_POSN                                  0x0
#define _ANSELE_ANSE0_POSITION                              0x0
#define _ANSELE_ANSE0_SIZE                                  0x1
#define _ANSELE_ANSE0_LENGTH                                0x1
#define _ANSELE_ANSE0_MASK                                  0x1
#define _ANSELE_ANSE1_POSN                                  0x1
#define _ANSELE_ANSE1_POSITION                              0x1
#define _ANSELE_ANSE1_SIZE                                  0x1
#define _ANSELE_ANSE1_LENGTH                                0x1
#define _ANSELE_ANSE1_MASK                                  0x2
#define _ANSELE_ANSE2_POSN                                  0x2
#define _ANSELE_ANSE2_POSITION                              0x2
#define _ANSELE_ANSE2_SIZE                                  0x1
#define _ANSELE_ANSE2_LENGTH                                0x1
#define _ANSELE_ANSE2_MASK                                  0x4

// Register: PMADR
#define PMADR PMADR
extern volatile unsigned short          PMADR               __at(0x191);
#ifndef _LIB_BUILD
asm("PMADR equ 0191h");
#endif

// Register: PMADRL
#define PMADRL PMADRL
extern volatile unsigned char           PMADRL              __at(0x191);
#ifndef _LIB_BUILD
asm("PMADRL equ 0191h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PMADRL                 :8;
    };
} PMADRLbits_t;
extern volatile PMADRLbits_t PMADRLbits __at(0x191);
// bitfield macros
#define _PMADRL_PMADRL_POSN                                 0x0
#define _PMADRL_PMADRL_POSITION                             0x0
#define _PMADRL_PMADRL_SIZE                                 0x8
#define _PMADRL_PMADRL_LENGTH                               0x8
#define _PMADRL_PMADRL_MASK                                 0xFF

// Register: PMADRH
#define PMADRH PMADRH
extern volatile unsigned char           PMADRH              __at(0x192);
#ifndef _LIB_BUILD
asm("PMADRH equ 0192h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PMADRH                 :7;
    };
} PMADRHbits_t;
extern volatile PMADRHbits_t PMADRHbits __at(0x192);
// bitfield macros
#define _PMADRH_PMADRH_POSN                                 0x0
#define _PMADRH_PMADRH_POSITION                             0x0
#define _PMADRH_PMADRH_SIZE                                 0x7
#define _PMADRH_PMADRH_LENGTH                               0x7
#define _PMADRH_PMADRH_MASK                                 0x7F

// Register: PMDAT
#define PMDAT PMDAT
extern volatile unsigned short          PMDAT               __at(0x193);
#ifndef _LIB_BUILD
asm("PMDAT equ 0193h");
#endif

// Register: PMDATL
#define PMDATL PMDATL
extern volatile unsigned char           PMDATL              __at(0x193);
#ifndef _LIB_BUILD
asm("PMDATL equ 0193h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PMDATL                 :8;
    };
} PMDATLbits_t;
extern volatile PMDATLbits_t PMDATLbits __at(0x193);
// bitfield macros
#define _PMDATL_PMDATL_POSN                                 0x0
#define _PMDATL_PMDATL_POSITION                             0x0
#define _PMDATL_PMDATL_SIZE                                 0x8
#define _PMDATL_PMDATL_LENGTH                               0x8
#define _PMDATL_PMDATL_MASK                                 0xFF

// Register: PMDATH
#define PMDATH PMDATH
extern volatile unsigned char           PMDATH              __at(0x194);
#ifndef _LIB_BUILD
asm("PMDATH equ 0194h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PMDATH                 :6;
    };
} PMDATHbits_t;
extern volatile PMDATHbits_t PMDATHbits __at(0x194);
// bitfield macros
#define _PMDATH_PMDATH_POSN                                 0x0
#define _PMDATH_PMDATH_POSITION                             0x0
#define _PMDATH_PMDATH_SIZE                                 0x6
#define _PMDATH_PMDATH_LENGTH                               0x6
#define _PMDATH_PMDATH_MASK                                 0x3F

// Register: PMCON1
#define PMCON1 PMCON1
extern volatile unsigned char           PMCON1              __at(0x195);
#ifndef _LIB_BUILD
asm("PMCON1 equ 0195h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD                     :1;
        unsigned WR                     :1;
        unsigned WREN                   :1;
        unsigned WRERR                  :1;
        unsigned FREE                   :1;
        unsigned LWLO                   :1;
        unsigned CFGS                   :1;
    };
} PMCON1bits_t;
extern volatile PMCON1bits_t PMCON1bits __at(0x195);
// bitfield macros
#define _PMCON1_RD_POSN                                     0x0
#define _PMCON1_RD_POSITION                                 0x0
#define _PMCON1_RD_SIZE                                     0x1
#define _PMCON1_RD_LENGTH                                   0x1
#define _PMCON1_RD_MASK                                     0x1
#define _PMCON1_WR_POSN                                     0x1
#define _PMCON1_WR_POSITION                                 0x1
#define _PMCON1_WR_SIZE                                     0x1
#define _PMCON1_WR_LENGTH                                   0x1
#define _PMCON1_WR_MASK                                     0x2
#define _PMCON1_WREN_POSN                                   0x2
#define _PMCON1_WREN_POSITION                               0x2
#define _PMCON1_WREN_SIZE                                   0x1
#define _PMCON1_WREN_LENGTH                                 0x1
#define _PMCON1_WREN_MASK                                   0x4
#define _PMCON1_WRERR_POSN                                  0x3
#define _PMCON1_WRERR_POSITION                              0x3
#define _PMCON1_WRERR_SIZE                                  0x1
#define _PMCON1_WRERR_LENGTH                                0x1
#define _PMCON1_WRERR_MASK                                  0x8
#define _PMCON1_FREE_POSN                                   0x4
#define _PMCON1_FREE_POSITION                               0x4
#define _PMCON1_FREE_SIZE                                   0x1
#define _PMCON1_FREE_LENGTH                                 0x1
#define _PMCON1_FREE_MASK                                   0x10
#define _PMCON1_LWLO_POSN                                   0x5
#define _PMCON1_LWLO_POSITION                               0x5
#define _PMCON1_LWLO_SIZE                                   0x1
#define _PMCON1_LWLO_LENGTH                                 0x1
#define _PMCON1_LWLO_MASK                                   0x20
#define _PMCON1_CFGS_POSN                                   0x6
#define _PMCON1_CFGS_POSITION                               0x6
#define _PMCON1_CFGS_SIZE                                   0x1
#define _PMCON1_CFGS_LENGTH                                 0x1
#define _PMCON1_CFGS_MASK                                   0x40

// Register: PMCON2
#define PMCON2 PMCON2
extern volatile unsigned char           PMCON2              __at(0x196);
#ifndef _LIB_BUILD
asm("PMCON2 equ 0196h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PMCON2                 :8;
    };
} PMCON2bits_t;
extern volatile PMCON2bits_t PMCON2bits __at(0x196);
// bitfield macros
#define _PMCON2_PMCON2_POSN                                 0x0
#define _PMCON2_PMCON2_POSITION                             0x0
#define _PMCON2_PMCON2_SIZE                                 0x8
#define _PMCON2_PMCON2_LENGTH                               0x8
#define _PMCON2_PMCON2_MASK                                 0xFF

// Register: RC1REG
#define RC1REG RC1REG
extern volatile unsigned char           RC1REG              __at(0x199);
#ifndef _LIB_BUILD
asm("RC1REG equ 0199h");
#endif
// aliases
extern volatile unsigned char           RCREG               __at(0x199);
#ifndef _LIB_BUILD
asm("RCREG equ 0199h");
#endif
extern volatile unsigned char           RCREG1              __at(0x199);
#ifndef _LIB_BUILD
asm("RCREG1 equ 0199h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC1REG                 :8;
    };
} RC1REGbits_t;
extern volatile RC1REGbits_t RC1REGbits __at(0x199);
// bitfield macros
#define _RC1REG_RC1REG_POSN                                 0x0
#define _RC1REG_RC1REG_POSITION                             0x0
#define _RC1REG_RC1REG_SIZE                                 0x8
#define _RC1REG_RC1REG_LENGTH                               0x8
#define _RC1REG_RC1REG_MASK                                 0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned RC1REG                 :8;
    };
} RCREGbits_t;
extern volatile RCREGbits_t RCREGbits __at(0x199);
// bitfield macros
#define _RCREG_RC1REG_POSN                                  0x0
#define _RCREG_RC1REG_POSITION                              0x0
#define _RCREG_RC1REG_SIZE                                  0x8
#define _RCREG_RC1REG_LENGTH                                0x8
#define _RCREG_RC1REG_MASK                                  0xFF
typedef union {
    struct {
        unsigned RC1REG                 :8;
    };
} RCREG1bits_t;
extern volatile RCREG1bits_t RCREG1bits __at(0x199);
// bitfield macros
#define _RCREG1_RC1REG_POSN                                 0x0
#define _RCREG1_RC1REG_POSITION                             0x0
#define _RCREG1_RC1REG_SIZE                                 0x8
#define _RCREG1_RC1REG_LENGTH                               0x8
#define _RCREG1_RC1REG_MASK                                 0xFF

// Register: TX1REG
#define TX1REG TX1REG
extern volatile unsigned char           TX1REG              __at(0x19A);
#ifndef _LIB_BUILD
asm("TX1REG equ 019Ah");
#endif
// aliases
extern volatile unsigned char           TXREG1              __at(0x19A);
#ifndef _LIB_BUILD
asm("TXREG1 equ 019Ah");
#endif
extern volatile unsigned char           TXREG               __at(0x19A);
#ifndef _LIB_BUILD
asm("TXREG equ 019Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TX1REG                 :8;
    };
} TX1REGbits_t;
extern volatile TX1REGbits_t TX1REGbits __at(0x19A);
// bitfield macros
#define _TX1REG_TX1REG_POSN                                 0x0
#define _TX1REG_TX1REG_POSITION                             0x0
#define _TX1REG_TX1REG_SIZE                                 0x8
#define _TX1REG_TX1REG_LENGTH                               0x8
#define _TX1REG_TX1REG_MASK                                 0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned TX1REG                 :8;
    };
} TXREG1bits_t;
extern volatile TXREG1bits_t TXREG1bits __at(0x19A);
// bitfield macros
#define _TXREG1_TX1REG_POSN                                 0x0
#define _TXREG1_TX1REG_POSITION                             0x0
#define _TXREG1_TX1REG_SIZE                                 0x8
#define _TXREG1_TX1REG_LENGTH                               0x8
#define _TXREG1_TX1REG_MASK                                 0xFF
typedef union {
    struct {
        unsigned TX1REG                 :8;
    };
} TXREGbits_t;
extern volatile TXREGbits_t TXREGbits __at(0x19A);
// bitfield macros
#define _TXREG_TX1REG_POSN                                  0x0
#define _TXREG_TX1REG_POSITION                              0x0
#define _TXREG_TX1REG_SIZE                                  0x8
#define _TXREG_TX1REG_LENGTH                                0x8
#define _TXREG_TX1REG_MASK                                  0xFF

// Register: SP1BRG
#define SP1BRG SP1BRG
extern volatile unsigned short          SP1BRG              __at(0x19B);
#ifndef _LIB_BUILD
asm("SP1BRG equ 019Bh");
#endif

// Register: SP1BRGL
#define SP1BRGL SP1BRGL
extern volatile unsigned char           SP1BRGL             __at(0x19B);
#ifndef _LIB_BUILD
asm("SP1BRGL equ 019Bh");
#endif
// aliases
extern volatile unsigned char           SPBRG               __at(0x19B);
#ifndef _LIB_BUILD
asm("SPBRG equ 019Bh");
#endif
extern volatile unsigned char           SPBRG1              __at(0x19B);
#ifndef _LIB_BUILD
asm("SPBRG1 equ 019Bh");
#endif
extern volatile unsigned char           SPBRGL              __at(0x19B);
#ifndef _LIB_BUILD
asm("SPBRGL equ 019Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SP1BRGL                :8;
    };
} SP1BRGLbits_t;
extern volatile SP1BRGLbits_t SP1BRGLbits __at(0x19B);
// bitfield macros
#define _SP1BRGL_SP1BRGL_POSN                               0x0
#define _SP1BRGL_SP1BRGL_POSITION                           0x0
#define _SP1BRGL_SP1BRGL_SIZE                               0x8
#define _SP1BRGL_SP1BRGL_LENGTH                             0x8
#define _SP1BRGL_SP1BRGL_MASK                               0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SP1BRGL                :8;
    };
} SPBRGbits_t;
extern volatile SPBRGbits_t SPBRGbits __at(0x19B);
// bitfield macros
#define _SPBRG_SP1BRGL_POSN                                 0x0
#define _SPBRG_SP1BRGL_POSITION                             0x0
#define _SPBRG_SP1BRGL_SIZE                                 0x8
#define _SPBRG_SP1BRGL_LENGTH                               0x8
#define _SPBRG_SP1BRGL_MASK                                 0xFF
typedef union {
    struct {
        unsigned SP1BRGL                :8;
    };
} SPBRG1bits_t;
extern volatile SPBRG1bits_t SPBRG1bits __at(0x19B);
// bitfield macros
#define _SPBRG1_SP1BRGL_POSN                                0x0
#define _SPBRG1_SP1BRGL_POSITION                            0x0
#define _SPBRG1_SP1BRGL_SIZE                                0x8
#define _SPBRG1_SP1BRGL_LENGTH                              0x8
#define _SPBRG1_SP1BRGL_MASK                                0xFF
typedef union {
    struct {
        unsigned SP1BRGL                :8;
    };
} SPBRGLbits_t;
extern volatile SPBRGLbits_t SPBRGLbits __at(0x19B);
// bitfield macros
#define _SPBRGL_SP1BRGL_POSN                                0x0
#define _SPBRGL_SP1BRGL_POSITION                            0x0
#define _SPBRGL_SP1BRGL_SIZE                                0x8
#define _SPBRGL_SP1BRGL_LENGTH                              0x8
#define _SPBRGL_SP1BRGL_MASK                                0xFF

// Register: SP1BRGH
#define SP1BRGH SP1BRGH
extern volatile unsigned char           SP1BRGH             __at(0x19C);
#ifndef _LIB_BUILD
asm("SP1BRGH equ 019Ch");
#endif
// aliases
extern volatile unsigned char           SPBRGH              __at(0x19C);
#ifndef _LIB_BUILD
asm("SPBRGH equ 019Ch");
#endif
extern volatile unsigned char           SPBRGH1             __at(0x19C);
#ifndef _LIB_BUILD
asm("SPBRGH1 equ 019Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SP1BRGH                :8;
    };
} SP1BRGHbits_t;
extern volatile SP1BRGHbits_t SP1BRGHbits __at(0x19C);
// bitfield macros
#define _SP1BRGH_SP1BRGH_POSN                               0x0
#define _SP1BRGH_SP1BRGH_POSITION                           0x0
#define _SP1BRGH_SP1BRGH_SIZE                               0x8
#define _SP1BRGH_SP1BRGH_LENGTH                             0x8
#define _SP1BRGH_SP1BRGH_MASK                               0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SP1BRGH                :8;
    };
} SPBRGHbits_t;
extern volatile SPBRGHbits_t SPBRGHbits __at(0x19C);
// bitfield macros
#define _SPBRGH_SP1BRGH_POSN                                0x0
#define _SPBRGH_SP1BRGH_POSITION                            0x0
#define _SPBRGH_SP1BRGH_SIZE                                0x8
#define _SPBRGH_SP1BRGH_LENGTH                              0x8
#define _SPBRGH_SP1BRGH_MASK                                0xFF
typedef union {
    struct {
        unsigned SP1BRGH                :8;
    };
} SPBRGH1bits_t;
extern volatile SPBRGH1bits_t SPBRGH1bits __at(0x19C);
// bitfield macros
#define _SPBRGH1_SP1BRGH_POSN                               0x0
#define _SPBRGH1_SP1BRGH_POSITION                           0x0
#define _SPBRGH1_SP1BRGH_SIZE                               0x8
#define _SPBRGH1_SP1BRGH_LENGTH                             0x8
#define _SPBRGH1_SP1BRGH_MASK                               0xFF

// Register: RC1STA
#define RC1STA RC1STA
extern volatile unsigned char           RC1STA              __at(0x19D);
#ifndef _LIB_BUILD
asm("RC1STA equ 019Dh");
#endif
// aliases
extern volatile unsigned char           RCSTA1              __at(0x19D);
#ifndef _LIB_BUILD
asm("RCSTA1 equ 019Dh");
#endif
extern volatile unsigned char           RCSTA               __at(0x19D);
#ifndef _LIB_BUILD
asm("RCSTA equ 019Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
} RC1STAbits_t;
extern volatile RC1STAbits_t RC1STAbits __at(0x19D);
// bitfield macros
#define _RC1STA_RX9D_POSN                                   0x0
#define _RC1STA_RX9D_POSITION                               0x0
#define _RC1STA_RX9D_SIZE                                   0x1
#define _RC1STA_RX9D_LENGTH                                 0x1
#define _RC1STA_RX9D_MASK                                   0x1
#define _RC1STA_OERR_POSN                                   0x1
#define _RC1STA_OERR_POSITION                               0x1
#define _RC1STA_OERR_SIZE                                   0x1
#define _RC1STA_OERR_LENGTH                                 0x1
#define _RC1STA_OERR_MASK                                   0x2
#define _RC1STA_FERR_POSN                                   0x2
#define _RC1STA_FERR_POSITION                               0x2
#define _RC1STA_FERR_SIZE                                   0x1
#define _RC1STA_FERR_LENGTH                                 0x1
#define _RC1STA_FERR_MASK                                   0x4
#define _RC1STA_ADDEN_POSN                                  0x3
#define _RC1STA_ADDEN_POSITION                              0x3
#define _RC1STA_ADDEN_SIZE                                  0x1
#define _RC1STA_ADDEN_LENGTH                                0x1
#define _RC1STA_ADDEN_MASK                                  0x8
#define _RC1STA_CREN_POSN                                   0x4
#define _RC1STA_CREN_POSITION                               0x4
#define _RC1STA_CREN_SIZE                                   0x1
#define _RC1STA_CREN_LENGTH                                 0x1
#define _RC1STA_CREN_MASK                                   0x10
#define _RC1STA_SREN_POSN                                   0x5
#define _RC1STA_SREN_POSITION                               0x5
#define _RC1STA_SREN_SIZE                                   0x1
#define _RC1STA_SREN_LENGTH                                 0x1
#define _RC1STA_SREN_MASK                                   0x20
#define _RC1STA_RX9_POSN                                    0x6
#define _RC1STA_RX9_POSITION                                0x6
#define _RC1STA_RX9_SIZE                                    0x1
#define _RC1STA_RX9_LENGTH                                  0x1
#define _RC1STA_RX9_MASK                                    0x40
#define _RC1STA_SPEN_POSN                                   0x7
#define _RC1STA_SPEN_POSITION                               0x7
#define _RC1STA_SPEN_SIZE                                   0x1
#define _RC1STA_SPEN_LENGTH                                 0x1
#define _RC1STA_SPEN_MASK                                   0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
} RCSTA1bits_t;
extern volatile RCSTA1bits_t RCSTA1bits __at(0x19D);
// bitfield macros
#define _RCSTA1_RX9D_POSN                                   0x0
#define _RCSTA1_RX9D_POSITION                               0x0
#define _RCSTA1_RX9D_SIZE                                   0x1
#define _RCSTA1_RX9D_LENGTH                                 0x1
#define _RCSTA1_RX9D_MASK                                   0x1
#define _RCSTA1_OERR_POSN                                   0x1
#define _RCSTA1_OERR_POSITION                               0x1
#define _RCSTA1_OERR_SIZE                                   0x1
#define _RCSTA1_OERR_LENGTH                                 0x1
#define _RCSTA1_OERR_MASK                                   0x2
#define _RCSTA1_FERR_POSN                                   0x2
#define _RCSTA1_FERR_POSITION                               0x2
#define _RCSTA1_FERR_SIZE                                   0x1
#define _RCSTA1_FERR_LENGTH                                 0x1
#define _RCSTA1_FERR_MASK                                   0x4
#define _RCSTA1_ADDEN_POSN                                  0x3
#define _RCSTA1_ADDEN_POSITION                              0x3
#define _RCSTA1_ADDEN_SIZE                                  0x1
#define _RCSTA1_ADDEN_LENGTH                                0x1
#define _RCSTA1_ADDEN_MASK                                  0x8
#define _RCSTA1_CREN_POSN                                   0x4
#define _RCSTA1_CREN_POSITION                               0x4
#define _RCSTA1_CREN_SIZE                                   0x1
#define _RCSTA1_CREN_LENGTH                                 0x1
#define _RCSTA1_CREN_MASK                                   0x10
#define _RCSTA1_SREN_POSN                                   0x5
#define _RCSTA1_SREN_POSITION                               0x5
#define _RCSTA1_SREN_SIZE                                   0x1
#define _RCSTA1_SREN_LENGTH                                 0x1
#define _RCSTA1_SREN_MASK                                   0x20
#define _RCSTA1_RX9_POSN                                    0x6
#define _RCSTA1_RX9_POSITION                                0x6
#define _RCSTA1_RX9_SIZE                                    0x1
#define _RCSTA1_RX9_LENGTH                                  0x1
#define _RCSTA1_RX9_MASK                                    0x40
#define _RCSTA1_SPEN_POSN                                   0x7
#define _RCSTA1_SPEN_POSITION                               0x7
#define _RCSTA1_SPEN_SIZE                                   0x1
#define _RCSTA1_SPEN_LENGTH                                 0x1
#define _RCSTA1_SPEN_MASK                                   0x80
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
} RCSTAbits_t;
extern volatile RCSTAbits_t RCSTAbits __at(0x19D);
// bitfield macros
#define _RCSTA_RX9D_POSN                                    0x0
#define _RCSTA_RX9D_POSITION                                0x0
#define _RCSTA_RX9D_SIZE                                    0x1
#define _RCSTA_RX9D_LENGTH                                  0x1
#define _RCSTA_RX9D_MASK                                    0x1
#define _RCSTA_OERR_POSN                                    0x1
#define _RCSTA_OERR_POSITION                                0x1
#define _RCSTA_OERR_SIZE                                    0x1
#define _RCSTA_OERR_LENGTH                                  0x1
#define _RCSTA_OERR_MASK                                    0x2
#define _RCSTA_FERR_POSN                                    0x2
#define _RCSTA_FERR_POSITION                                0x2
#define _RCSTA_FERR_SIZE                                    0x1
#define _RCSTA_FERR_LENGTH                                  0x1
#define _RCSTA_FERR_MASK                                    0x4
#define _RCSTA_ADDEN_POSN                                   0x3
#define _RCSTA_ADDEN_POSITION                               0x3
#define _RCSTA_ADDEN_SIZE                                   0x1
#define _RCSTA_ADDEN_LENGTH                                 0x1
#define _RCSTA_ADDEN_MASK                                   0x8
#define _RCSTA_CREN_POSN                                    0x4
#define _RCSTA_CREN_POSITION                                0x4
#define _RCSTA_CREN_SIZE                                    0x1
#define _RCSTA_CREN_LENGTH                                  0x1
#define _RCSTA_CREN_MASK                                    0x10
#define _RCSTA_SREN_POSN                                    0x5
#define _RCSTA_SREN_POSITION                                0x5
#define _RCSTA_SREN_SIZE                                    0x1
#define _RCSTA_SREN_LENGTH                                  0x1
#define _RCSTA_SREN_MASK                                    0x20
#define _RCSTA_RX9_POSN                                     0x6
#define _RCSTA_RX9_POSITION                                 0x6
#define _RCSTA_RX9_SIZE                                     0x1
#define _RCSTA_RX9_LENGTH                                   0x1
#define _RCSTA_RX9_MASK                                     0x40
#define _RCSTA_SPEN_POSN                                    0x7
#define _RCSTA_SPEN_POSITION                                0x7
#define _RCSTA_SPEN_SIZE                                    0x1
#define _RCSTA_SPEN_LENGTH                                  0x1
#define _RCSTA_SPEN_MASK                                    0x80

// Register: TX1STA
#define TX1STA TX1STA
extern volatile unsigned char           TX1STA              __at(0x19E);
#ifndef _LIB_BUILD
asm("TX1STA equ 019Eh");
#endif
// aliases
extern volatile unsigned char           TXSTA1              __at(0x19E);
#ifndef _LIB_BUILD
asm("TXSTA1 equ 019Eh");
#endif
extern volatile unsigned char           TXSTA               __at(0x19E);
#ifndef _LIB_BUILD
asm("TXSTA equ 019Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
} TX1STAbits_t;
extern volatile TX1STAbits_t TX1STAbits __at(0x19E);
// bitfield macros
#define _TX1STA_TX9D_POSN                                   0x0
#define _TX1STA_TX9D_POSITION                               0x0
#define _TX1STA_TX9D_SIZE                                   0x1
#define _TX1STA_TX9D_LENGTH                                 0x1
#define _TX1STA_TX9D_MASK                                   0x1
#define _TX1STA_TRMT_POSN                                   0x1
#define _TX1STA_TRMT_POSITION                               0x1
#define _TX1STA_TRMT_SIZE                                   0x1
#define _TX1STA_TRMT_LENGTH                                 0x1
#define _TX1STA_TRMT_MASK                                   0x2
#define _TX1STA_BRGH_POSN                                   0x2
#define _TX1STA_BRGH_POSITION                               0x2
#define _TX1STA_BRGH_SIZE                                   0x1
#define _TX1STA_BRGH_LENGTH                                 0x1
#define _TX1STA_BRGH_MASK                                   0x4
#define _TX1STA_SENDB_POSN                                  0x3
#define _TX1STA_SENDB_POSITION                              0x3
#define _TX1STA_SENDB_SIZE                                  0x1
#define _TX1STA_SENDB_LENGTH                                0x1
#define _TX1STA_SENDB_MASK                                  0x8
#define _TX1STA_SYNC_POSN                                   0x4
#define _TX1STA_SYNC_POSITION                               0x4
#define _TX1STA_SYNC_SIZE                                   0x1
#define _TX1STA_SYNC_LENGTH                                 0x1
#define _TX1STA_SYNC_MASK                                   0x10
#define _TX1STA_TXEN_POSN                                   0x5
#define _TX1STA_TXEN_POSITION                               0x5
#define _TX1STA_TXEN_SIZE                                   0x1
#define _TX1STA_TXEN_LENGTH                                 0x1
#define _TX1STA_TXEN_MASK                                   0x20
#define _TX1STA_TX9_POSN                                    0x6
#define _TX1STA_TX9_POSITION                                0x6
#define _TX1STA_TX9_SIZE                                    0x1
#define _TX1STA_TX9_LENGTH                                  0x1
#define _TX1STA_TX9_MASK                                    0x40
#define _TX1STA_CSRC_POSN                                   0x7
#define _TX1STA_CSRC_POSITION                               0x7
#define _TX1STA_CSRC_SIZE                                   0x1
#define _TX1STA_CSRC_LENGTH                                 0x1
#define _TX1STA_CSRC_MASK                                   0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
} TXSTA1bits_t;
extern volatile TXSTA1bits_t TXSTA1bits __at(0x19E);
// bitfield macros
#define _TXSTA1_TX9D_POSN                                   0x0
#define _TXSTA1_TX9D_POSITION                               0x0
#define _TXSTA1_TX9D_SIZE                                   0x1
#define _TXSTA1_TX9D_LENGTH                                 0x1
#define _TXSTA1_TX9D_MASK                                   0x1
#define _TXSTA1_TRMT_POSN                                   0x1
#define _TXSTA1_TRMT_POSITION                               0x1
#define _TXSTA1_TRMT_SIZE                                   0x1
#define _TXSTA1_TRMT_LENGTH                                 0x1
#define _TXSTA1_TRMT_MASK                                   0x2
#define _TXSTA1_BRGH_POSN                                   0x2
#define _TXSTA1_BRGH_POSITION                               0x2
#define _TXSTA1_BRGH_SIZE                                   0x1
#define _TXSTA1_BRGH_LENGTH                                 0x1
#define _TXSTA1_BRGH_MASK                                   0x4
#define _TXSTA1_SENDB_POSN                                  0x3
#define _TXSTA1_SENDB_POSITION                              0x3
#define _TXSTA1_SENDB_SIZE                                  0x1
#define _TXSTA1_SENDB_LENGTH                                0x1
#define _TXSTA1_SENDB_MASK                                  0x8
#define _TXSTA1_SYNC_POSN                                   0x4
#define _TXSTA1_SYNC_POSITION                               0x4
#define _TXSTA1_SYNC_SIZE                                   0x1
#define _TXSTA1_SYNC_LENGTH                                 0x1
#define _TXSTA1_SYNC_MASK                                   0x10
#define _TXSTA1_TXEN_POSN                                   0x5
#define _TXSTA1_TXEN_POSITION                               0x5
#define _TXSTA1_TXEN_SIZE                                   0x1
#define _TXSTA1_TXEN_LENGTH                                 0x1
#define _TXSTA1_TXEN_MASK                                   0x20
#define _TXSTA1_TX9_POSN                                    0x6
#define _TXSTA1_TX9_POSITION                                0x6
#define _TXSTA1_TX9_SIZE                                    0x1
#define _TXSTA1_TX9_LENGTH                                  0x1
#define _TXSTA1_TX9_MASK                                    0x40
#define _TXSTA1_CSRC_POSN                                   0x7
#define _TXSTA1_CSRC_POSITION                               0x7
#define _TXSTA1_CSRC_SIZE                                   0x1
#define _TXSTA1_CSRC_LENGTH                                 0x1
#define _TXSTA1_CSRC_MASK                                   0x80
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
} TXSTAbits_t;
extern volatile TXSTAbits_t TXSTAbits __at(0x19E);
// bitfield macros
#define _TXSTA_TX9D_POSN                                    0x0
#define _TXSTA_TX9D_POSITION                                0x0
#define _TXSTA_TX9D_SIZE                                    0x1
#define _TXSTA_TX9D_LENGTH                                  0x1
#define _TXSTA_TX9D_MASK                                    0x1
#define _TXSTA_TRMT_POSN                                    0x1
#define _TXSTA_TRMT_POSITION                                0x1
#define _TXSTA_TRMT_SIZE                                    0x1
#define _TXSTA_TRMT_LENGTH                                  0x1
#define _TXSTA_TRMT_MASK                                    0x2
#define _TXSTA_BRGH_POSN                                    0x2
#define _TXSTA_BRGH_POSITION                                0x2
#define _TXSTA_BRGH_SIZE                                    0x1
#define _TXSTA_BRGH_LENGTH                                  0x1
#define _TXSTA_BRGH_MASK                                    0x4
#define _TXSTA_SENDB_POSN                                   0x3
#define _TXSTA_SENDB_POSITION                               0x3
#define _TXSTA_SENDB_SIZE                                   0x1
#define _TXSTA_SENDB_LENGTH                                 0x1
#define _TXSTA_SENDB_MASK                                   0x8
#define _TXSTA_SYNC_POSN                                    0x4
#define _TXSTA_SYNC_POSITION                                0x4
#define _TXSTA_SYNC_SIZE                                    0x1
#define _TXSTA_SYNC_LENGTH                                  0x1
#define _TXSTA_SYNC_MASK                                    0x10
#define _TXSTA_TXEN_POSN                                    0x5
#define _TXSTA_TXEN_POSITION                                0x5
#define _TXSTA_TXEN_SIZE                                    0x1
#define _TXSTA_TXEN_LENGTH                                  0x1
#define _TXSTA_TXEN_MASK                                    0x20
#define _TXSTA_TX9_POSN                                     0x6
#define _TXSTA_TX9_POSITION                                 0x6
#define _TXSTA_TX9_SIZE                                     0x1
#define _TXSTA_TX9_LENGTH                                   0x1
#define _TXSTA_TX9_MASK                                     0x40
#define _TXSTA_CSRC_POSN                                    0x7
#define _TXSTA_CSRC_POSITION                                0x7
#define _TXSTA_CSRC_SIZE                                    0x1
#define _TXSTA_CSRC_LENGTH                                  0x1
#define _TXSTA_CSRC_MASK                                    0x80

// Register: BAUD1CON
#define BAUD1CON BAUD1CON
extern volatile unsigned char           BAUD1CON            __at(0x19F);
#ifndef _LIB_BUILD
asm("BAUD1CON equ 019Fh");
#endif
// aliases
extern volatile unsigned char           BAUDCON1            __at(0x19F);
#ifndef _LIB_BUILD
asm("BAUDCON1 equ 019Fh");
#endif
extern volatile unsigned char           BAUDCTL1            __at(0x19F);
#ifndef _LIB_BUILD
asm("BAUDCTL1 equ 019Fh");
#endif
extern volatile unsigned char           BAUDCON             __at(0x19F);
#ifndef _LIB_BUILD
asm("BAUDCON equ 019Fh");
#endif
extern volatile unsigned char           BAUDCTL             __at(0x19F);
#ifndef _LIB_BUILD
asm("BAUDCTL equ 019Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
} BAUD1CONbits_t;
extern volatile BAUD1CONbits_t BAUD1CONbits __at(0x19F);
// bitfield macros
#define _BAUD1CON_ABDEN_POSN                                0x0
#define _BAUD1CON_ABDEN_POSITION                            0x0
#define _BAUD1CON_ABDEN_SIZE                                0x1
#define _BAUD1CON_ABDEN_LENGTH                              0x1
#define _BAUD1CON_ABDEN_MASK                                0x1
#define _BAUD1CON_WUE_POSN                                  0x1
#define _BAUD1CON_WUE_POSITION                              0x1
#define _BAUD1CON_WUE_SIZE                                  0x1
#define _BAUD1CON_WUE_LENGTH                                0x1
#define _BAUD1CON_WUE_MASK                                  0x2
#define _BAUD1CON_BRG16_POSN                                0x3
#define _BAUD1CON_BRG16_POSITION                            0x3
#define _BAUD1CON_BRG16_SIZE                                0x1
#define _BAUD1CON_BRG16_LENGTH                              0x1
#define _BAUD1CON_BRG16_MASK                                0x8
#define _BAUD1CON_SCKP_POSN                                 0x4
#define _BAUD1CON_SCKP_POSITION                             0x4
#define _BAUD1CON_SCKP_SIZE                                 0x1
#define _BAUD1CON_SCKP_LENGTH                               0x1
#define _BAUD1CON_SCKP_MASK                                 0x10
#define _BAUD1CON_RCIDL_POSN                                0x6
#define _BAUD1CON_RCIDL_POSITION                            0x6
#define _BAUD1CON_RCIDL_SIZE                                0x1
#define _BAUD1CON_RCIDL_LENGTH                              0x1
#define _BAUD1CON_RCIDL_MASK                                0x40
#define _BAUD1CON_ABDOVF_POSN                               0x7
#define _BAUD1CON_ABDOVF_POSITION                           0x7
#define _BAUD1CON_ABDOVF_SIZE                               0x1
#define _BAUD1CON_ABDOVF_LENGTH                             0x1
#define _BAUD1CON_ABDOVF_MASK                               0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
} BAUDCON1bits_t;
extern volatile BAUDCON1bits_t BAUDCON1bits __at(0x19F);
// bitfield macros
#define _BAUDCON1_ABDEN_POSN                                0x0
#define _BAUDCON1_ABDEN_POSITION                            0x0
#define _BAUDCON1_ABDEN_SIZE                                0x1
#define _BAUDCON1_ABDEN_LENGTH                              0x1
#define _BAUDCON1_ABDEN_MASK                                0x1
#define _BAUDCON1_WUE_POSN                                  0x1
#define _BAUDCON1_WUE_POSITION                              0x1
#define _BAUDCON1_WUE_SIZE                                  0x1
#define _BAUDCON1_WUE_LENGTH                                0x1
#define _BAUDCON1_WUE_MASK                                  0x2
#define _BAUDCON1_BRG16_POSN                                0x3
#define _BAUDCON1_BRG16_POSITION                            0x3
#define _BAUDCON1_BRG16_SIZE                                0x1
#define _BAUDCON1_BRG16_LENGTH                              0x1
#define _BAUDCON1_BRG16_MASK                                0x8
#define _BAUDCON1_SCKP_POSN                                 0x4
#define _BAUDCON1_SCKP_POSITION                             0x4
#define _BAUDCON1_SCKP_SIZE                                 0x1
#define _BAUDCON1_SCKP_LENGTH                               0x1
#define _BAUDCON1_SCKP_MASK                                 0x10
#define _BAUDCON1_RCIDL_POSN                                0x6
#define _BAUDCON1_RCIDL_POSITION                            0x6
#define _BAUDCON1_RCIDL_SIZE                                0x1
#define _BAUDCON1_RCIDL_LENGTH                              0x1
#define _BAUDCON1_RCIDL_MASK                                0x40
#define _BAUDCON1_ABDOVF_POSN                               0x7
#define _BAUDCON1_ABDOVF_POSITION                           0x7
#define _BAUDCON1_ABDOVF_SIZE                               0x1
#define _BAUDCON1_ABDOVF_LENGTH                             0x1
#define _BAUDCON1_ABDOVF_MASK                               0x80
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
} BAUDCTL1bits_t;
extern volatile BAUDCTL1bits_t BAUDCTL1bits __at(0x19F);
// bitfield macros
#define _BAUDCTL1_ABDEN_POSN                                0x0
#define _BAUDCTL1_ABDEN_POSITION                            0x0
#define _BAUDCTL1_ABDEN_SIZE                                0x1
#define _BAUDCTL1_ABDEN_LENGTH                              0x1
#define _BAUDCTL1_ABDEN_MASK                                0x1
#define _BAUDCTL1_WUE_POSN                                  0x1
#define _BAUDCTL1_WUE_POSITION                              0x1
#define _BAUDCTL1_WUE_SIZE                                  0x1
#define _BAUDCTL1_WUE_LENGTH                                0x1
#define _BAUDCTL1_WUE_MASK                                  0x2
#define _BAUDCTL1_BRG16_POSN                                0x3
#define _BAUDCTL1_BRG16_POSITION                            0x3
#define _BAUDCTL1_BRG16_SIZE                                0x1
#define _BAUDCTL1_BRG16_LENGTH                              0x1
#define _BAUDCTL1_BRG16_MASK                                0x8
#define _BAUDCTL1_SCKP_POSN                                 0x4
#define _BAUDCTL1_SCKP_POSITION                             0x4
#define _BAUDCTL1_SCKP_SIZE                                 0x1
#define _BAUDCTL1_SCKP_LENGTH                               0x1
#define _BAUDCTL1_SCKP_MASK                                 0x10
#define _BAUDCTL1_RCIDL_POSN                                0x6
#define _BAUDCTL1_RCIDL_POSITION                            0x6
#define _BAUDCTL1_RCIDL_SIZE                                0x1
#define _BAUDCTL1_RCIDL_LENGTH                              0x1
#define _BAUDCTL1_RCIDL_MASK                                0x40
#define _BAUDCTL1_ABDOVF_POSN                               0x7
#define _BAUDCTL1_ABDOVF_POSITION                           0x7
#define _BAUDCTL1_ABDOVF_SIZE                               0x1
#define _BAUDCTL1_ABDOVF_LENGTH                             0x1
#define _BAUDCTL1_ABDOVF_MASK                               0x80
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
} BAUDCONbits_t;
extern volatile BAUDCONbits_t BAUDCONbits __at(0x19F);
// bitfield macros
#define _BAUDCON_ABDEN_POSN                                 0x0
#define _BAUDCON_ABDEN_POSITION                             0x0
#define _BAUDCON_ABDEN_SIZE                                 0x1
#define _BAUDCON_ABDEN_LENGTH                               0x1
#define _BAUDCON_ABDEN_MASK                                 0x1
#define _BAUDCON_WUE_POSN                                   0x1
#define _BAUDCON_WUE_POSITION                               0x1
#define _BAUDCON_WUE_SIZE                                   0x1
#define _BAUDCON_WUE_LENGTH                                 0x1
#define _BAUDCON_WUE_MASK                                   0x2
#define _BAUDCON_BRG16_POSN                                 0x3
#define _BAUDCON_BRG16_POSITION                             0x3
#define _BAUDCON_BRG16_SIZE                                 0x1
#define _BAUDCON_BRG16_LENGTH                               0x1
#define _BAUDCON_BRG16_MASK                                 0x8
#define _BAUDCON_SCKP_POSN                                  0x4
#define _BAUDCON_SCKP_POSITION                              0x4
#define _BAUDCON_SCKP_SIZE                                  0x1
#define _BAUDCON_SCKP_LENGTH                                0x1
#define _BAUDCON_SCKP_MASK                                  0x10
#define _BAUDCON_RCIDL_POSN                                 0x6
#define _BAUDCON_RCIDL_POSITION                             0x6
#define _BAUDCON_RCIDL_SIZE                                 0x1
#define _BAUDCON_RCIDL_LENGTH                               0x1
#define _BAUDCON_RCIDL_MASK                                 0x40
#define _BAUDCON_ABDOVF_POSN                                0x7
#define _BAUDCON_ABDOVF_POSITION                            0x7
#define _BAUDCON_ABDOVF_SIZE                                0x1
#define _BAUDCON_ABDOVF_LENGTH                              0x1
#define _BAUDCON_ABDOVF_MASK                                0x80
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
} BAUDCTLbits_t;
extern volatile BAUDCTLbits_t BAUDCTLbits __at(0x19F);
// bitfield macros
#define _BAUDCTL_ABDEN_POSN                                 0x0
#define _BAUDCTL_ABDEN_POSITION                             0x0
#define _BAUDCTL_ABDEN_SIZE                                 0x1
#define _BAUDCTL_ABDEN_LENGTH                               0x1
#define _BAUDCTL_ABDEN_MASK                                 0x1
#define _BAUDCTL_WUE_POSN                                   0x1
#define _BAUDCTL_WUE_POSITION                               0x1
#define _BAUDCTL_WUE_SIZE                                   0x1
#define _BAUDCTL_WUE_LENGTH                                 0x1
#define _BAUDCTL_WUE_MASK                                   0x2
#define _BAUDCTL_BRG16_POSN                                 0x3
#define _BAUDCTL_BRG16_POSITION                             0x3
#define _BAUDCTL_BRG16_SIZE                                 0x1
#define _BAUDCTL_BRG16_LENGTH                               0x1
#define _BAUDCTL_BRG16_MASK                                 0x8
#define _BAUDCTL_SCKP_POSN                                  0x4
#define _BAUDCTL_SCKP_POSITION                              0x4
#define _BAUDCTL_SCKP_SIZE                                  0x1
#define _BAUDCTL_SCKP_LENGTH                                0x1
#define _BAUDCTL_SCKP_MASK                                  0x10
#define _BAUDCTL_RCIDL_POSN                                 0x6
#define _BAUDCTL_RCIDL_POSITION                             0x6
#define _BAUDCTL_RCIDL_SIZE                                 0x1
#define _BAUDCTL_RCIDL_LENGTH                               0x1
#define _BAUDCTL_RCIDL_MASK                                 0x40
#define _BAUDCTL_ABDOVF_POSN                                0x7
#define _BAUDCTL_ABDOVF_POSITION                            0x7
#define _BAUDCTL_ABDOVF_SIZE                                0x1
#define _BAUDCTL_ABDOVF_LENGTH                              0x1
#define _BAUDCTL_ABDOVF_MASK                                0x80

// Register: WPUA
#define WPUA WPUA
extern volatile unsigned char           WPUA                __at(0x20C);
#ifndef _LIB_BUILD
asm("WPUA equ 020Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WPUA0                  :1;
        unsigned WPUA1                  :1;
        unsigned WPUA2                  :1;
        unsigned WPUA3                  :1;
        unsigned WPUA4                  :1;
        unsigned WPUA5                  :1;
        unsigned WPUA6                  :1;
        unsigned WPUA7                  :1;
    };
} WPUAbits_t;
extern volatile WPUAbits_t WPUAbits __at(0x20C);
// bitfield macros
#define _WPUA_WPUA0_POSN                                    0x0
#define _WPUA_WPUA0_POSITION                                0x0
#define _WPUA_WPUA0_SIZE                                    0x1
#define _WPUA_WPUA0_LENGTH                                  0x1
#define _WPUA_WPUA0_MASK                                    0x1
#define _WPUA_WPUA1_POSN                                    0x1
#define _WPUA_WPUA1_POSITION                                0x1
#define _WPUA_WPUA1_SIZE                                    0x1
#define _WPUA_WPUA1_LENGTH                                  0x1
#define _WPUA_WPUA1_MASK                                    0x2
#define _WPUA_WPUA2_POSN                                    0x2
#define _WPUA_WPUA2_POSITION                                0x2
#define _WPUA_WPUA2_SIZE                                    0x1
#define _WPUA_WPUA2_LENGTH                                  0x1
#define _WPUA_WPUA2_MASK                                    0x4
#define _WPUA_WPUA3_POSN                                    0x3
#define _WPUA_WPUA3_POSITION                                0x3
#define _WPUA_WPUA3_SIZE                                    0x1
#define _WPUA_WPUA3_LENGTH                                  0x1
#define _WPUA_WPUA3_MASK                                    0x8
#define _WPUA_WPUA4_POSN                                    0x4
#define _WPUA_WPUA4_POSITION                                0x4
#define _WPUA_WPUA4_SIZE                                    0x1
#define _WPUA_WPUA4_LENGTH                                  0x1
#define _WPUA_WPUA4_MASK                                    0x10
#define _WPUA_WPUA5_POSN                                    0x5
#define _WPUA_WPUA5_POSITION                                0x5
#define _WPUA_WPUA5_SIZE                                    0x1
#define _WPUA_WPUA5_LENGTH                                  0x1
#define _WPUA_WPUA5_MASK                                    0x20
#define _WPUA_WPUA6_POSN                                    0x6
#define _WPUA_WPUA6_POSITION                                0x6
#define _WPUA_WPUA6_SIZE                                    0x1
#define _WPUA_WPUA6_LENGTH                                  0x1
#define _WPUA_WPUA6_MASK                                    0x40
#define _WPUA_WPUA7_POSN                                    0x7
#define _WPUA_WPUA7_POSITION                                0x7
#define _WPUA_WPUA7_SIZE                                    0x1
#define _WPUA_WPUA7_LENGTH                                  0x1
#define _WPUA_WPUA7_MASK                                    0x80

// Register: WPUB
#define WPUB WPUB
extern volatile unsigned char           WPUB                __at(0x20D);
#ifndef _LIB_BUILD
asm("WPUB equ 020Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WPUB0                  :1;
        unsigned WPUB1                  :1;
        unsigned WPUB2                  :1;
        unsigned WPUB3                  :1;
        unsigned WPUB4                  :1;
        unsigned WPUB5                  :1;
        unsigned WPUB6                  :1;
        unsigned WPUB7                  :1;
    };
} WPUBbits_t;
extern volatile WPUBbits_t WPUBbits __at(0x20D);
// bitfield macros
#define _WPUB_WPUB0_POSN                                    0x0
#define _WPUB_WPUB0_POSITION                                0x0
#define _WPUB_WPUB0_SIZE                                    0x1
#define _WPUB_WPUB0_LENGTH                                  0x1
#define _WPUB_WPUB0_MASK                                    0x1
#define _WPUB_WPUB1_POSN                                    0x1
#define _WPUB_WPUB1_POSITION                                0x1
#define _WPUB_WPUB1_SIZE                                    0x1
#define _WPUB_WPUB1_LENGTH                                  0x1
#define _WPUB_WPUB1_MASK                                    0x2
#define _WPUB_WPUB2_POSN                                    0x2
#define _WPUB_WPUB2_POSITION                                0x2
#define _WPUB_WPUB2_SIZE                                    0x1
#define _WPUB_WPUB2_LENGTH                                  0x1
#define _WPUB_WPUB2_MASK                                    0x4
#define _WPUB_WPUB3_POSN                                    0x3
#define _WPUB_WPUB3_POSITION                                0x3
#define _WPUB_WPUB3_SIZE                                    0x1
#define _WPUB_WPUB3_LENGTH                                  0x1
#define _WPUB_WPUB3_MASK                                    0x8
#define _WPUB_WPUB4_POSN                                    0x4
#define _WPUB_WPUB4_POSITION                                0x4
#define _WPUB_WPUB4_SIZE                                    0x1
#define _WPUB_WPUB4_LENGTH                                  0x1
#define _WPUB_WPUB4_MASK                                    0x10
#define _WPUB_WPUB5_POSN                                    0x5
#define _WPUB_WPUB5_POSITION                                0x5
#define _WPUB_WPUB5_SIZE                                    0x1
#define _WPUB_WPUB5_LENGTH                                  0x1
#define _WPUB_WPUB5_MASK                                    0x20
#define _WPUB_WPUB6_POSN                                    0x6
#define _WPUB_WPUB6_POSITION                                0x6
#define _WPUB_WPUB6_SIZE                                    0x1
#define _WPUB_WPUB6_LENGTH                                  0x1
#define _WPUB_WPUB6_MASK                                    0x40
#define _WPUB_WPUB7_POSN                                    0x7
#define _WPUB_WPUB7_POSITION                                0x7
#define _WPUB_WPUB7_SIZE                                    0x1
#define _WPUB_WPUB7_LENGTH                                  0x1
#define _WPUB_WPUB7_MASK                                    0x80

// Register: WPUC
#define WPUC WPUC
extern volatile unsigned char           WPUC                __at(0x20E);
#ifndef _LIB_BUILD
asm("WPUC equ 020Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WPUC0                  :1;
        unsigned WPUC1                  :1;
        unsigned WPUC2                  :1;
        unsigned WPUC3                  :1;
        unsigned WPUC4                  :1;
        unsigned WPUC5                  :1;
        unsigned WPUC6                  :1;
        unsigned WPUC7                  :1;
    };
} WPUCbits_t;
extern volatile WPUCbits_t WPUCbits __at(0x20E);
// bitfield macros
#define _WPUC_WPUC0_POSN                                    0x0
#define _WPUC_WPUC0_POSITION                                0x0
#define _WPUC_WPUC0_SIZE                                    0x1
#define _WPUC_WPUC0_LENGTH                                  0x1
#define _WPUC_WPUC0_MASK                                    0x1
#define _WPUC_WPUC1_POSN                                    0x1
#define _WPUC_WPUC1_POSITION                                0x1
#define _WPUC_WPUC1_SIZE                                    0x1
#define _WPUC_WPUC1_LENGTH                                  0x1
#define _WPUC_WPUC1_MASK                                    0x2
#define _WPUC_WPUC2_POSN                                    0x2
#define _WPUC_WPUC2_POSITION                                0x2
#define _WPUC_WPUC2_SIZE                                    0x1
#define _WPUC_WPUC2_LENGTH                                  0x1
#define _WPUC_WPUC2_MASK                                    0x4
#define _WPUC_WPUC3_POSN                                    0x3
#define _WPUC_WPUC3_POSITION                                0x3
#define _WPUC_WPUC3_SIZE                                    0x1
#define _WPUC_WPUC3_LENGTH                                  0x1
#define _WPUC_WPUC3_MASK                                    0x8
#define _WPUC_WPUC4_POSN                                    0x4
#define _WPUC_WPUC4_POSITION                                0x4
#define _WPUC_WPUC4_SIZE                                    0x1
#define _WPUC_WPUC4_LENGTH                                  0x1
#define _WPUC_WPUC4_MASK                                    0x10
#define _WPUC_WPUC5_POSN                                    0x5
#define _WPUC_WPUC5_POSITION                                0x5
#define _WPUC_WPUC5_SIZE                                    0x1
#define _WPUC_WPUC5_LENGTH                                  0x1
#define _WPUC_WPUC5_MASK                                    0x20
#define _WPUC_WPUC6_POSN                                    0x6
#define _WPUC_WPUC6_POSITION                                0x6
#define _WPUC_WPUC6_SIZE                                    0x1
#define _WPUC_WPUC6_LENGTH                                  0x1
#define _WPUC_WPUC6_MASK                                    0x40
#define _WPUC_WPUC7_POSN                                    0x7
#define _WPUC_WPUC7_POSITION                                0x7
#define _WPUC_WPUC7_SIZE                                    0x1
#define _WPUC_WPUC7_LENGTH                                  0x1
#define _WPUC_WPUC7_MASK                                    0x80

// Register: WPUD
#define WPUD WPUD
extern volatile unsigned char           WPUD                __at(0x20F);
#ifndef _LIB_BUILD
asm("WPUD equ 020Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WPUD0                  :1;
        unsigned WPUD1                  :1;
        unsigned WPUD2                  :1;
        unsigned WPUD3                  :1;
        unsigned WPUD4                  :1;
        unsigned WPUD5                  :1;
        unsigned WPUD6                  :1;
        unsigned WPUD7                  :1;
    };
} WPUDbits_t;
extern volatile WPUDbits_t WPUDbits __at(0x20F);
// bitfield macros
#define _WPUD_WPUD0_POSN                                    0x0
#define _WPUD_WPUD0_POSITION                                0x0
#define _WPUD_WPUD0_SIZE                                    0x1
#define _WPUD_WPUD0_LENGTH                                  0x1
#define _WPUD_WPUD0_MASK                                    0x1
#define _WPUD_WPUD1_POSN                                    0x1
#define _WPUD_WPUD1_POSITION                                0x1
#define _WPUD_WPUD1_SIZE                                    0x1
#define _WPUD_WPUD1_LENGTH                                  0x1
#define _WPUD_WPUD1_MASK                                    0x2
#define _WPUD_WPUD2_POSN                                    0x2
#define _WPUD_WPUD2_POSITION                                0x2
#define _WPUD_WPUD2_SIZE                                    0x1
#define _WPUD_WPUD2_LENGTH                                  0x1
#define _WPUD_WPUD2_MASK                                    0x4
#define _WPUD_WPUD3_POSN                                    0x3
#define _WPUD_WPUD3_POSITION                                0x3
#define _WPUD_WPUD3_SIZE                                    0x1
#define _WPUD_WPUD3_LENGTH                                  0x1
#define _WPUD_WPUD3_MASK                                    0x8
#define _WPUD_WPUD4_POSN                                    0x4
#define _WPUD_WPUD4_POSITION                                0x4
#define _WPUD_WPUD4_SIZE                                    0x1
#define _WPUD_WPUD4_LENGTH                                  0x1
#define _WPUD_WPUD4_MASK                                    0x10
#define _WPUD_WPUD5_POSN                                    0x5
#define _WPUD_WPUD5_POSITION                                0x5
#define _WPUD_WPUD5_SIZE                                    0x1
#define _WPUD_WPUD5_LENGTH                                  0x1
#define _WPUD_WPUD5_MASK                                    0x20
#define _WPUD_WPUD6_POSN                                    0x6
#define _WPUD_WPUD6_POSITION                                0x6
#define _WPUD_WPUD6_SIZE                                    0x1
#define _WPUD_WPUD6_LENGTH                                  0x1
#define _WPUD_WPUD6_MASK                                    0x40
#define _WPUD_WPUD7_POSN                                    0x7
#define _WPUD_WPUD7_POSITION                                0x7
#define _WPUD_WPUD7_SIZE                                    0x1
#define _WPUD_WPUD7_LENGTH                                  0x1
#define _WPUD_WPUD7_MASK                                    0x80

// Register: WPUE
#define WPUE WPUE
extern volatile unsigned char           WPUE                __at(0x210);
#ifndef _LIB_BUILD
asm("WPUE equ 0210h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WPUE0                  :1;
        unsigned WPUE1                  :1;
        unsigned WPUE2                  :1;
        unsigned WPUE3                  :1;
    };
} WPUEbits_t;
extern volatile WPUEbits_t WPUEbits __at(0x210);
// bitfield macros
#define _WPUE_WPUE0_POSN                                    0x0
#define _WPUE_WPUE0_POSITION                                0x0
#define _WPUE_WPUE0_SIZE                                    0x1
#define _WPUE_WPUE0_LENGTH                                  0x1
#define _WPUE_WPUE0_MASK                                    0x1
#define _WPUE_WPUE1_POSN                                    0x1
#define _WPUE_WPUE1_POSITION                                0x1
#define _WPUE_WPUE1_SIZE                                    0x1
#define _WPUE_WPUE1_LENGTH                                  0x1
#define _WPUE_WPUE1_MASK                                    0x2
#define _WPUE_WPUE2_POSN                                    0x2
#define _WPUE_WPUE2_POSITION                                0x2
#define _WPUE_WPUE2_SIZE                                    0x1
#define _WPUE_WPUE2_LENGTH                                  0x1
#define _WPUE_WPUE2_MASK                                    0x4
#define _WPUE_WPUE3_POSN                                    0x3
#define _WPUE_WPUE3_POSITION                                0x3
#define _WPUE_WPUE3_SIZE                                    0x1
#define _WPUE_WPUE3_LENGTH                                  0x1
#define _WPUE_WPUE3_MASK                                    0x8

// Register: SSP1BUF
#define SSP1BUF SSP1BUF
extern volatile unsigned char           SSP1BUF             __at(0x211);
#ifndef _LIB_BUILD
asm("SSP1BUF equ 0211h");
#endif
// aliases
extern volatile unsigned char           SSPBUF              __at(0x211);
#ifndef _LIB_BUILD
asm("SSPBUF equ 0211h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSP1BUF0               :1;
        unsigned SSP1BUF1               :1;
        unsigned SSP1BUF2               :1;
        unsigned SSP1BUF3               :1;
        unsigned SSP1BUF4               :1;
        unsigned SSP1BUF5               :1;
        unsigned SSP1BUF6               :1;
        unsigned SSP1BUF7               :1;
    };
    struct {
        unsigned BUF                    :8;
    };
    struct {
        unsigned BUF0                   :1;
        unsigned BUF1                   :1;
        unsigned BUF2                   :1;
        unsigned BUF3                   :1;
        unsigned BUF4                   :1;
        unsigned BUF5                   :1;
        unsigned BUF6                   :1;
        unsigned BUF7                   :1;
    };
    struct {
        unsigned SSP1BUF                :8;
    };
} SSP1BUFbits_t;
extern volatile SSP1BUFbits_t SSP1BUFbits __at(0x211);
// bitfield macros
#define _SSP1BUF_SSP1BUF0_POSN                              0x0
#define _SSP1BUF_SSP1BUF0_POSITION                          0x0
#define _SSP1BUF_SSP1BUF0_SIZE                              0x1
#define _SSP1BUF_SSP1BUF0_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF0_MASK                              0x1
#define _SSP1BUF_SSP1BUF1_POSN                              0x1
#define _SSP1BUF_SSP1BUF1_POSITION                          0x1
#define _SSP1BUF_SSP1BUF1_SIZE                              0x1
#define _SSP1BUF_SSP1BUF1_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF1_MASK                              0x2
#define _SSP1BUF_SSP1BUF2_POSN                              0x2
#define _SSP1BUF_SSP1BUF2_POSITION                          0x2
#define _SSP1BUF_SSP1BUF2_SIZE                              0x1
#define _SSP1BUF_SSP1BUF2_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF2_MASK                              0x4
#define _SSP1BUF_SSP1BUF3_POSN                              0x3
#define _SSP1BUF_SSP1BUF3_POSITION                          0x3
#define _SSP1BUF_SSP1BUF3_SIZE                              0x1
#define _SSP1BUF_SSP1BUF3_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF3_MASK                              0x8
#define _SSP1BUF_SSP1BUF4_POSN                              0x4
#define _SSP1BUF_SSP1BUF4_POSITION                          0x4
#define _SSP1BUF_SSP1BUF4_SIZE                              0x1
#define _SSP1BUF_SSP1BUF4_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF4_MASK                              0x10
#define _SSP1BUF_SSP1BUF5_POSN                              0x5
#define _SSP1BUF_SSP1BUF5_POSITION                          0x5
#define _SSP1BUF_SSP1BUF5_SIZE                              0x1
#define _SSP1BUF_SSP1BUF5_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF5_MASK                              0x20
#define _SSP1BUF_SSP1BUF6_POSN                              0x6
#define _SSP1BUF_SSP1BUF6_POSITION                          0x6
#define _SSP1BUF_SSP1BUF6_SIZE                              0x1
#define _SSP1BUF_SSP1BUF6_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF6_MASK                              0x40
#define _SSP1BUF_SSP1BUF7_POSN                              0x7
#define _SSP1BUF_SSP1BUF7_POSITION                          0x7
#define _SSP1BUF_SSP1BUF7_SIZE                              0x1
#define _SSP1BUF_SSP1BUF7_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF7_MASK                              0x80
#define _SSP1BUF_BUF_POSN                                   0x0
#define _SSP1BUF_BUF_POSITION                               0x0
#define _SSP1BUF_BUF_SIZE                                   0x8
#define _SSP1BUF_BUF_LENGTH                                 0x8
#define _SSP1BUF_BUF_MASK                                   0xFF
#define _SSP1BUF_BUF0_POSN                                  0x0
#define _SSP1BUF_BUF0_POSITION                              0x0
#define _SSP1BUF_BUF0_SIZE                                  0x1
#define _SSP1BUF_BUF0_LENGTH                                0x1
#define _SSP1BUF_BUF0_MASK                                  0x1
#define _SSP1BUF_BUF1_POSN                                  0x1
#define _SSP1BUF_BUF1_POSITION                              0x1
#define _SSP1BUF_BUF1_SIZE                                  0x1
#define _SSP1BUF_BUF1_LENGTH                                0x1
#define _SSP1BUF_BUF1_MASK                                  0x2
#define _SSP1BUF_BUF2_POSN                                  0x2
#define _SSP1BUF_BUF2_POSITION                              0x2
#define _SSP1BUF_BUF2_SIZE                                  0x1
#define _SSP1BUF_BUF2_LENGTH                                0x1
#define _SSP1BUF_BUF2_MASK                                  0x4
#define _SSP1BUF_BUF3_POSN                                  0x3
#define _SSP1BUF_BUF3_POSITION                              0x3
#define _SSP1BUF_BUF3_SIZE                                  0x1
#define _SSP1BUF_BUF3_LENGTH                                0x1
#define _SSP1BUF_BUF3_MASK                                  0x8
#define _SSP1BUF_BUF4_POSN                                  0x4
#define _SSP1BUF_BUF4_POSITION                              0x4
#define _SSP1BUF_BUF4_SIZE                                  0x1
#define _SSP1BUF_BUF4_LENGTH                                0x1
#define _SSP1BUF_BUF4_MASK                                  0x10
#define _SSP1BUF_BUF5_POSN                                  0x5
#define _SSP1BUF_BUF5_POSITION                              0x5
#define _SSP1BUF_BUF5_SIZE                                  0x1
#define _SSP1BUF_BUF5_LENGTH                                0x1
#define _SSP1BUF_BUF5_MASK                                  0x20
#define _SSP1BUF_BUF6_POSN                                  0x6
#define _SSP1BUF_BUF6_POSITION                              0x6
#define _SSP1BUF_BUF6_SIZE                                  0x1
#define _SSP1BUF_BUF6_LENGTH                                0x1
#define _SSP1BUF_BUF6_MASK                                  0x40
#define _SSP1BUF_BUF7_POSN                                  0x7
#define _SSP1BUF_BUF7_POSITION                              0x7
#define _SSP1BUF_BUF7_SIZE                                  0x1
#define _SSP1BUF_BUF7_LENGTH                                0x1
#define _SSP1BUF_BUF7_MASK                                  0x80
#define _SSP1BUF_SSP1BUF_POSN                               0x0
#define _SSP1BUF_SSP1BUF_POSITION                           0x0
#define _SSP1BUF_SSP1BUF_SIZE                               0x8
#define _SSP1BUF_SSP1BUF_LENGTH                             0x8
#define _SSP1BUF_SSP1BUF_MASK                               0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSP1BUF0               :1;
        unsigned SSP1BUF1               :1;
        unsigned SSP1BUF2               :1;
        unsigned SSP1BUF3               :1;
        unsigned SSP1BUF4               :1;
        unsigned SSP1BUF5               :1;
        unsigned SSP1BUF6               :1;
        unsigned SSP1BUF7               :1;
    };
    struct {
        unsigned BUF                    :8;
    };
    struct {
        unsigned BUF0                   :1;
        unsigned BUF1                   :1;
        unsigned BUF2                   :1;
        unsigned BUF3                   :1;
        unsigned BUF4                   :1;
        unsigned BUF5                   :1;
        unsigned BUF6                   :1;
        unsigned BUF7                   :1;
    };
    struct {
        unsigned SSP1BUF                :8;
    };
} SSPBUFbits_t;
extern volatile SSPBUFbits_t SSPBUFbits __at(0x211);
// bitfield macros
#define _SSPBUF_SSP1BUF0_POSN                               0x0
#define _SSPBUF_SSP1BUF0_POSITION                           0x0
#define _SSPBUF_SSP1BUF0_SIZE                               0x1
#define _SSPBUF_SSP1BUF0_LENGTH                             0x1
#define _SSPBUF_SSP1BUF0_MASK                               0x1
#define _SSPBUF_SSP1BUF1_POSN                               0x1
#define _SSPBUF_SSP1BUF1_POSITION                           0x1
#define _SSPBUF_SSP1BUF1_SIZE                               0x1
#define _SSPBUF_SSP1BUF1_LENGTH                             0x1
#define _SSPBUF_SSP1BUF1_MASK                               0x2
#define _SSPBUF_SSP1BUF2_POSN                               0x2
#define _SSPBUF_SSP1BUF2_POSITION                           0x2
#define _SSPBUF_SSP1BUF2_SIZE                               0x1
#define _SSPBUF_SSP1BUF2_LENGTH                             0x1
#define _SSPBUF_SSP1BUF2_MASK                               0x4
#define _SSPBUF_SSP1BUF3_POSN                               0x3
#define _SSPBUF_SSP1BUF3_POSITION                           0x3
#define _SSPBUF_SSP1BUF3_SIZE                               0x1
#define _SSPBUF_SSP1BUF3_LENGTH                             0x1
#define _SSPBUF_SSP1BUF3_MASK                               0x8
#define _SSPBUF_SSP1BUF4_POSN                               0x4
#define _SSPBUF_SSP1BUF4_POSITION                           0x4
#define _SSPBUF_SSP1BUF4_SIZE                               0x1
#define _SSPBUF_SSP1BUF4_LENGTH                             0x1
#define _SSPBUF_SSP1BUF4_MASK                               0x10
#define _SSPBUF_SSP1BUF5_POSN                               0x5
#define _SSPBUF_SSP1BUF5_POSITION                           0x5
#define _SSPBUF_SSP1BUF5_SIZE                               0x1
#define _SSPBUF_SSP1BUF5_LENGTH                             0x1
#define _SSPBUF_SSP1BUF5_MASK                               0x20
#define _SSPBUF_SSP1BUF6_POSN                               0x6
#define _SSPBUF_SSP1BUF6_POSITION                           0x6
#define _SSPBUF_SSP1BUF6_SIZE                               0x1
#define _SSPBUF_SSP1BUF6_LENGTH                             0x1
#define _SSPBUF_SSP1BUF6_MASK                               0x40
#define _SSPBUF_SSP1BUF7_POSN                               0x7
#define _SSPBUF_SSP1BUF7_POSITION                           0x7
#define _SSPBUF_SSP1BUF7_SIZE                               0x1
#define _SSPBUF_SSP1BUF7_LENGTH                             0x1
#define _SSPBUF_SSP1BUF7_MASK                               0x80
#define _SSPBUF_BUF_POSN                                    0x0
#define _SSPBUF_BUF_POSITION                                0x0
#define _SSPBUF_BUF_SIZE                                    0x8
#define _SSPBUF_BUF_LENGTH                                  0x8
#define _SSPBUF_BUF_MASK                                    0xFF
#define _SSPBUF_BUF0_POSN                                   0x0
#define _SSPBUF_BUF0_POSITION                               0x0
#define _SSPBUF_BUF0_SIZE                                   0x1
#define _SSPBUF_BUF0_LENGTH                                 0x1
#define _SSPBUF_BUF0_MASK                                   0x1
#define _SSPBUF_BUF1_POSN                                   0x1
#define _SSPBUF_BUF1_POSITION                               0x1
#define _SSPBUF_BUF1_SIZE                                   0x1
#define _SSPBUF_BUF1_LENGTH                                 0x1
#define _SSPBUF_BUF1_MASK                                   0x2
#define _SSPBUF_BUF2_POSN                                   0x2
#define _SSPBUF_BUF2_POSITION                               0x2
#define _SSPBUF_BUF2_SIZE                                   0x1
#define _SSPBUF_BUF2_LENGTH                                 0x1
#define _SSPBUF_BUF2_MASK                                   0x4
#define _SSPBUF_BUF3_POSN                                   0x3
#define _SSPBUF_BUF3_POSITION                               0x3
#define _SSPBUF_BUF3_SIZE                                   0x1
#define _SSPBUF_BUF3_LENGTH                                 0x1
#define _SSPBUF_BUF3_MASK                                   0x8
#define _SSPBUF_BUF4_POSN                                   0x4
#define _SSPBUF_BUF4_POSITION                               0x4
#define _SSPBUF_BUF4_SIZE                                   0x1
#define _SSPBUF_BUF4_LENGTH                                 0x1
#define _SSPBUF_BUF4_MASK                                   0x10
#define _SSPBUF_BUF5_POSN                                   0x5
#define _SSPBUF_BUF5_POSITION                               0x5
#define _SSPBUF_BUF5_SIZE                                   0x1
#define _SSPBUF_BUF5_LENGTH                                 0x1
#define _SSPBUF_BUF5_MASK                                   0x20
#define _SSPBUF_BUF6_POSN                                   0x6
#define _SSPBUF_BUF6_POSITION                               0x6
#define _SSPBUF_BUF6_SIZE                                   0x1
#define _SSPBUF_BUF6_LENGTH                                 0x1
#define _SSPBUF_BUF6_MASK                                   0x40
#define _SSPBUF_BUF7_POSN                                   0x7
#define _SSPBUF_BUF7_POSITION                               0x7
#define _SSPBUF_BUF7_SIZE                                   0x1
#define _SSPBUF_BUF7_LENGTH                                 0x1
#define _SSPBUF_BUF7_MASK                                   0x80
#define _SSPBUF_SSP1BUF_POSN                                0x0
#define _SSPBUF_SSP1BUF_POSITION                            0x0
#define _SSPBUF_SSP1BUF_SIZE                                0x8
#define _SSPBUF_SSP1BUF_LENGTH                              0x8
#define _SSPBUF_SSP1BUF_MASK                                0xFF

// Register: SSP1ADD
#define SSP1ADD SSP1ADD
extern volatile unsigned char           SSP1ADD             __at(0x212);
#ifndef _LIB_BUILD
asm("SSP1ADD equ 0212h");
#endif
// aliases
extern volatile unsigned char           SSPADD              __at(0x212);
#ifndef _LIB_BUILD
asm("SSPADD equ 0212h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSP1ADD0               :1;
        unsigned SSP1ADD1               :1;
        unsigned SSP1ADD2               :1;
        unsigned SSP1ADD3               :1;
        unsigned SSP1ADD4               :1;
        unsigned SSP1ADD5               :1;
        unsigned SSP1ADD6               :1;
        unsigned SSP1ADD7               :1;
    };
    struct {
        unsigned ADD                    :8;
    };
    struct {
        unsigned ADD0                   :1;
        unsigned ADD1                   :1;
        unsigned ADD2                   :1;
        unsigned ADD3                   :1;
        unsigned ADD4                   :1;
        unsigned ADD5                   :1;
        unsigned ADD6                   :1;
        unsigned ADD7                   :1;
    };
    struct {
        unsigned SSP1ADD                :8;
    };
} SSP1ADDbits_t;
extern volatile SSP1ADDbits_t SSP1ADDbits __at(0x212);
// bitfield macros
#define _SSP1ADD_SSP1ADD0_POSN                              0x0
#define _SSP1ADD_SSP1ADD0_POSITION                          0x0
#define _SSP1ADD_SSP1ADD0_SIZE                              0x1
#define _SSP1ADD_SSP1ADD0_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD0_MASK                              0x1
#define _SSP1ADD_SSP1ADD1_POSN                              0x1
#define _SSP1ADD_SSP1ADD1_POSITION                          0x1
#define _SSP1ADD_SSP1ADD1_SIZE                              0x1
#define _SSP1ADD_SSP1ADD1_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD1_MASK                              0x2
#define _SSP1ADD_SSP1ADD2_POSN                              0x2
#define _SSP1ADD_SSP1ADD2_POSITION                          0x2
#define _SSP1ADD_SSP1ADD2_SIZE                              0x1
#define _SSP1ADD_SSP1ADD2_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD2_MASK                              0x4
#define _SSP1ADD_SSP1ADD3_POSN                              0x3
#define _SSP1ADD_SSP1ADD3_POSITION                          0x3
#define _SSP1ADD_SSP1ADD3_SIZE                              0x1
#define _SSP1ADD_SSP1ADD3_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD3_MASK                              0x8
#define _SSP1ADD_SSP1ADD4_POSN                              0x4
#define _SSP1ADD_SSP1ADD4_POSITION                          0x4
#define _SSP1ADD_SSP1ADD4_SIZE                              0x1
#define _SSP1ADD_SSP1ADD4_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD4_MASK                              0x10
#define _SSP1ADD_SSP1ADD5_POSN                              0x5
#define _SSP1ADD_SSP1ADD5_POSITION                          0x5
#define _SSP1ADD_SSP1ADD5_SIZE                              0x1
#define _SSP1ADD_SSP1ADD5_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD5_MASK                              0x20
#define _SSP1ADD_SSP1ADD6_POSN                              0x6
#define _SSP1ADD_SSP1ADD6_POSITION                          0x6
#define _SSP1ADD_SSP1ADD6_SIZE                              0x1
#define _SSP1ADD_SSP1ADD6_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD6_MASK                              0x40
#define _SSP1ADD_SSP1ADD7_POSN                              0x7
#define _SSP1ADD_SSP1ADD7_POSITION                          0x7
#define _SSP1ADD_SSP1ADD7_SIZE                              0x1
#define _SSP1ADD_SSP1ADD7_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD7_MASK                              0x80
#define _SSP1ADD_ADD_POSN                                   0x0
#define _SSP1ADD_ADD_POSITION                               0x0
#define _SSP1ADD_ADD_SIZE                                   0x8
#define _SSP1ADD_ADD_LENGTH                                 0x8
#define _SSP1ADD_ADD_MASK                                   0xFF
#define _SSP1ADD_ADD0_POSN                                  0x0
#define _SSP1ADD_ADD0_POSITION                              0x0
#define _SSP1ADD_ADD0_SIZE                                  0x1
#define _SSP1ADD_ADD0_LENGTH                                0x1
#define _SSP1ADD_ADD0_MASK                                  0x1
#define _SSP1ADD_ADD1_POSN                                  0x1
#define _SSP1ADD_ADD1_POSITION                              0x1
#define _SSP1ADD_ADD1_SIZE                                  0x1
#define _SSP1ADD_ADD1_LENGTH                                0x1
#define _SSP1ADD_ADD1_MASK                                  0x2
#define _SSP1ADD_ADD2_POSN                                  0x2
#define _SSP1ADD_ADD2_POSITION                              0x2
#define _SSP1ADD_ADD2_SIZE                                  0x1
#define _SSP1ADD_ADD2_LENGTH                                0x1
#define _SSP1ADD_ADD2_MASK                                  0x4
#define _SSP1ADD_ADD3_POSN                                  0x3
#define _SSP1ADD_ADD3_POSITION                              0x3
#define _SSP1ADD_ADD3_SIZE                                  0x1
#define _SSP1ADD_ADD3_LENGTH                                0x1
#define _SSP1ADD_ADD3_MASK                                  0x8
#define _SSP1ADD_ADD4_POSN                                  0x4
#define _SSP1ADD_ADD4_POSITION                              0x4
#define _SSP1ADD_ADD4_SIZE                                  0x1
#define _SSP1ADD_ADD4_LENGTH                                0x1
#define _SSP1ADD_ADD4_MASK                                  0x10
#define _SSP1ADD_ADD5_POSN                                  0x5
#define _SSP1ADD_ADD5_POSITION                              0x5
#define _SSP1ADD_ADD5_SIZE                                  0x1
#define _SSP1ADD_ADD5_LENGTH                                0x1
#define _SSP1ADD_ADD5_MASK                                  0x20
#define _SSP1ADD_ADD6_POSN                                  0x6
#define _SSP1ADD_ADD6_POSITION                              0x6
#define _SSP1ADD_ADD6_SIZE                                  0x1
#define _SSP1ADD_ADD6_LENGTH                                0x1
#define _SSP1ADD_ADD6_MASK                                  0x40
#define _SSP1ADD_ADD7_POSN                                  0x7
#define _SSP1ADD_ADD7_POSITION                              0x7
#define _SSP1ADD_ADD7_SIZE                                  0x1
#define _SSP1ADD_ADD7_LENGTH                                0x1
#define _SSP1ADD_ADD7_MASK                                  0x80
#define _SSP1ADD_SSP1ADD_POSN                               0x0
#define _SSP1ADD_SSP1ADD_POSITION                           0x0
#define _SSP1ADD_SSP1ADD_SIZE                               0x8
#define _SSP1ADD_SSP1ADD_LENGTH                             0x8
#define _SSP1ADD_SSP1ADD_MASK                               0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSP1ADD0               :1;
        unsigned SSP1ADD1               :1;
        unsigned SSP1ADD2               :1;
        unsigned SSP1ADD3               :1;
        unsigned SSP1ADD4               :1;
        unsigned SSP1ADD5               :1;
        unsigned SSP1ADD6               :1;
        unsigned SSP1ADD7               :1;
    };
    struct {
        unsigned ADD                    :8;
    };
    struct {
        unsigned ADD0                   :1;
        unsigned ADD1                   :1;
        unsigned ADD2                   :1;
        unsigned ADD3                   :1;
        unsigned ADD4                   :1;
        unsigned ADD5                   :1;
        unsigned ADD6                   :1;
        unsigned ADD7                   :1;
    };
    struct {
        unsigned SSP1ADD                :8;
    };
} SSPADDbits_t;
extern volatile SSPADDbits_t SSPADDbits __at(0x212);
// bitfield macros
#define _SSPADD_SSP1ADD0_POSN                               0x0
#define _SSPADD_SSP1ADD0_POSITION                           0x0
#define _SSPADD_SSP1ADD0_SIZE                               0x1
#define _SSPADD_SSP1ADD0_LENGTH                             0x1
#define _SSPADD_SSP1ADD0_MASK                               0x1
#define _SSPADD_SSP1ADD1_POSN                               0x1
#define _SSPADD_SSP1ADD1_POSITION                           0x1
#define _SSPADD_SSP1ADD1_SIZE                               0x1
#define _SSPADD_SSP1ADD1_LENGTH                             0x1
#define _SSPADD_SSP1ADD1_MASK                               0x2
#define _SSPADD_SSP1ADD2_POSN                               0x2
#define _SSPADD_SSP1ADD2_POSITION                           0x2
#define _SSPADD_SSP1ADD2_SIZE                               0x1
#define _SSPADD_SSP1ADD2_LENGTH                             0x1
#define _SSPADD_SSP1ADD2_MASK                               0x4
#define _SSPADD_SSP1ADD3_POSN                               0x3
#define _SSPADD_SSP1ADD3_POSITION                           0x3
#define _SSPADD_SSP1ADD3_SIZE                               0x1
#define _SSPADD_SSP1ADD3_LENGTH                             0x1
#define _SSPADD_SSP1ADD3_MASK                               0x8
#define _SSPADD_SSP1ADD4_POSN                               0x4
#define _SSPADD_SSP1ADD4_POSITION                           0x4
#define _SSPADD_SSP1ADD4_SIZE                               0x1
#define _SSPADD_SSP1ADD4_LENGTH                             0x1
#define _SSPADD_SSP1ADD4_MASK                               0x10
#define _SSPADD_SSP1ADD5_POSN                               0x5
#define _SSPADD_SSP1ADD5_POSITION                           0x5
#define _SSPADD_SSP1ADD5_SIZE                               0x1
#define _SSPADD_SSP1ADD5_LENGTH                             0x1
#define _SSPADD_SSP1ADD5_MASK                               0x20
#define _SSPADD_SSP1ADD6_POSN                               0x6
#define _SSPADD_SSP1ADD6_POSITION                           0x6
#define _SSPADD_SSP1ADD6_SIZE                               0x1
#define _SSPADD_SSP1ADD6_LENGTH                             0x1
#define _SSPADD_SSP1ADD6_MASK                               0x40
#define _SSPADD_SSP1ADD7_POSN                               0x7
#define _SSPADD_SSP1ADD7_POSITION                           0x7
#define _SSPADD_SSP1ADD7_SIZE                               0x1
#define _SSPADD_SSP1ADD7_LENGTH                             0x1
#define _SSPADD_SSP1ADD7_MASK                               0x80
#define _SSPADD_ADD_POSN                                    0x0
#define _SSPADD_ADD_POSITION                                0x0
#define _SSPADD_ADD_SIZE                                    0x8
#define _SSPADD_ADD_LENGTH                                  0x8
#define _SSPADD_ADD_MASK                                    0xFF
#define _SSPADD_ADD0_POSN                                   0x0
#define _SSPADD_ADD0_POSITION                               0x0
#define _SSPADD_ADD0_SIZE                                   0x1
#define _SSPADD_ADD0_LENGTH                                 0x1
#define _SSPADD_ADD0_MASK                                   0x1
#define _SSPADD_ADD1_POSN                                   0x1
#define _SSPADD_ADD1_POSITION                               0x1
#define _SSPADD_ADD1_SIZE                                   0x1
#define _SSPADD_ADD1_LENGTH                                 0x1
#define _SSPADD_ADD1_MASK                                   0x2
#define _SSPADD_ADD2_POSN                                   0x2
#define _SSPADD_ADD2_POSITION                               0x2
#define _SSPADD_ADD2_SIZE                                   0x1
#define _SSPADD_ADD2_LENGTH                                 0x1
#define _SSPADD_ADD2_MASK                                   0x4
#define _SSPADD_ADD3_POSN                                   0x3
#define _SSPADD_ADD3_POSITION                               0x3
#define _SSPADD_ADD3_SIZE                                   0x1
#define _SSPADD_ADD3_LENGTH                                 0x1
#define _SSPADD_ADD3_MASK                                   0x8
#define _SSPADD_ADD4_POSN                                   0x4
#define _SSPADD_ADD4_POSITION                               0x4
#define _SSPADD_ADD4_SIZE                                   0x1
#define _SSPADD_ADD4_LENGTH                                 0x1
#define _SSPADD_ADD4_MASK                                   0x10
#define _SSPADD_ADD5_POSN                                   0x5
#define _SSPADD_ADD5_POSITION                               0x5
#define _SSPADD_ADD5_SIZE                                   0x1
#define _SSPADD_ADD5_LENGTH                                 0x1
#define _SSPADD_ADD5_MASK                                   0x20
#define _SSPADD_ADD6_POSN                                   0x6
#define _SSPADD_ADD6_POSITION                               0x6
#define _SSPADD_ADD6_SIZE                                   0x1
#define _SSPADD_ADD6_LENGTH                                 0x1
#define _SSPADD_ADD6_MASK                                   0x40
#define _SSPADD_ADD7_POSN                                   0x7
#define _SSPADD_ADD7_POSITION                               0x7
#define _SSPADD_ADD7_SIZE                                   0x1
#define _SSPADD_ADD7_LENGTH                                 0x1
#define _SSPADD_ADD7_MASK                                   0x80
#define _SSPADD_SSP1ADD_POSN                                0x0
#define _SSPADD_SSP1ADD_POSITION                            0x0
#define _SSPADD_SSP1ADD_SIZE                                0x8
#define _SSPADD_SSP1ADD_LENGTH                              0x8
#define _SSPADD_SSP1ADD_MASK                                0xFF

// Register: SSP1MSK
#define SSP1MSK SSP1MSK
extern volatile unsigned char           SSP1MSK             __at(0x213);
#ifndef _LIB_BUILD
asm("SSP1MSK equ 0213h");
#endif
// aliases
extern volatile unsigned char           SSPMSK              __at(0x213);
#ifndef _LIB_BUILD
asm("SSPMSK equ 0213h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSP1MSK0               :1;
        unsigned SSP1MSK1               :1;
        unsigned SSP1MSK2               :1;
        unsigned SSP1MSK3               :1;
        unsigned SSP1MSK4               :1;
        unsigned SSP1MSK5               :1;
        unsigned SSP1MSK6               :1;
        unsigned SSP1MSK7               :1;
    };
    struct {
        unsigned MSK                    :8;
    };
    struct {
        unsigned MSK0                   :1;
        unsigned MSK1                   :1;
        unsigned MSK2                   :1;
        unsigned MSK3                   :1;
        unsigned MSK4                   :1;
        unsigned MSK5                   :1;
        unsigned MSK6                   :1;
        unsigned MSK7                   :1;
    };
    struct {
        unsigned SSP1MSK                :8;
    };
} SSP1MSKbits_t;
extern volatile SSP1MSKbits_t SSP1MSKbits __at(0x213);
// bitfield macros
#define _SSP1MSK_SSP1MSK0_POSN                              0x0
#define _SSP1MSK_SSP1MSK0_POSITION                          0x0
#define _SSP1MSK_SSP1MSK0_SIZE                              0x1
#define _SSP1MSK_SSP1MSK0_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK0_MASK                              0x1
#define _SSP1MSK_SSP1MSK1_POSN                              0x1
#define _SSP1MSK_SSP1MSK1_POSITION                          0x1
#define _SSP1MSK_SSP1MSK1_SIZE                              0x1
#define _SSP1MSK_SSP1MSK1_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK1_MASK                              0x2
#define _SSP1MSK_SSP1MSK2_POSN                              0x2
#define _SSP1MSK_SSP1MSK2_POSITION                          0x2
#define _SSP1MSK_SSP1MSK2_SIZE                              0x1
#define _SSP1MSK_SSP1MSK2_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK2_MASK                              0x4
#define _SSP1MSK_SSP1MSK3_POSN                              0x3
#define _SSP1MSK_SSP1MSK3_POSITION                          0x3
#define _SSP1MSK_SSP1MSK3_SIZE                              0x1
#define _SSP1MSK_SSP1MSK3_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK3_MASK                              0x8
#define _SSP1MSK_SSP1MSK4_POSN                              0x4
#define _SSP1MSK_SSP1MSK4_POSITION                          0x4
#define _SSP1MSK_SSP1MSK4_SIZE                              0x1
#define _SSP1MSK_SSP1MSK4_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK4_MASK                              0x10
#define _SSP1MSK_SSP1MSK5_POSN                              0x5
#define _SSP1MSK_SSP1MSK5_POSITION                          0x5
#define _SSP1MSK_SSP1MSK5_SIZE                              0x1
#define _SSP1MSK_SSP1MSK5_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK5_MASK                              0x20
#define _SSP1MSK_SSP1MSK6_POSN                              0x6
#define _SSP1MSK_SSP1MSK6_POSITION                          0x6
#define _SSP1MSK_SSP1MSK6_SIZE                              0x1
#define _SSP1MSK_SSP1MSK6_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK6_MASK                              0x40
#define _SSP1MSK_SSP1MSK7_POSN                              0x7
#define _SSP1MSK_SSP1MSK7_POSITION                          0x7
#define _SSP1MSK_SSP1MSK7_SIZE                              0x1
#define _SSP1MSK_SSP1MSK7_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK7_MASK                              0x80
#define _SSP1MSK_MSK_POSN                                   0x0
#define _SSP1MSK_MSK_POSITION                               0x0
#define _SSP1MSK_MSK_SIZE                                   0x8
#define _SSP1MSK_MSK_LENGTH                                 0x8
#define _SSP1MSK_MSK_MASK                                   0xFF
#define _SSP1MSK_MSK0_POSN                                  0x0
#define _SSP1MSK_MSK0_POSITION                              0x0
#define _SSP1MSK_MSK0_SIZE                                  0x1
#define _SSP1MSK_MSK0_LENGTH                                0x1
#define _SSP1MSK_MSK0_MASK                                  0x1
#define _SSP1MSK_MSK1_POSN                                  0x1
#define _SSP1MSK_MSK1_POSITION                              0x1
#define _SSP1MSK_MSK1_SIZE                                  0x1
#define _SSP1MSK_MSK1_LENGTH                                0x1
#define _SSP1MSK_MSK1_MASK                                  0x2
#define _SSP1MSK_MSK2_POSN                                  0x2
#define _SSP1MSK_MSK2_POSITION                              0x2
#define _SSP1MSK_MSK2_SIZE                                  0x1
#define _SSP1MSK_MSK2_LENGTH                                0x1
#define _SSP1MSK_MSK2_MASK                                  0x4
#define _SSP1MSK_MSK3_POSN                                  0x3
#define _SSP1MSK_MSK3_POSITION                              0x3
#define _SSP1MSK_MSK3_SIZE                                  0x1
#define _SSP1MSK_MSK3_LENGTH                                0x1
#define _SSP1MSK_MSK3_MASK                                  0x8
#define _SSP1MSK_MSK4_POSN                                  0x4
#define _SSP1MSK_MSK4_POSITION                              0x4
#define _SSP1MSK_MSK4_SIZE                                  0x1
#define _SSP1MSK_MSK4_LENGTH                                0x1
#define _SSP1MSK_MSK4_MASK                                  0x10
#define _SSP1MSK_MSK5_POSN                                  0x5
#define _SSP1MSK_MSK5_POSITION                              0x5
#define _SSP1MSK_MSK5_SIZE                                  0x1
#define _SSP1MSK_MSK5_LENGTH                                0x1
#define _SSP1MSK_MSK5_MASK                                  0x20
#define _SSP1MSK_MSK6_POSN                                  0x6
#define _SSP1MSK_MSK6_POSITION                              0x6
#define _SSP1MSK_MSK6_SIZE                                  0x1
#define _SSP1MSK_MSK6_LENGTH                                0x1
#define _SSP1MSK_MSK6_MASK                                  0x40
#define _SSP1MSK_MSK7_POSN                                  0x7
#define _SSP1MSK_MSK7_POSITION                              0x7
#define _SSP1MSK_MSK7_SIZE                                  0x1
#define _SSP1MSK_MSK7_LENGTH                                0x1
#define _SSP1MSK_MSK7_MASK                                  0x80
#define _SSP1MSK_SSP1MSK_POSN                               0x0
#define _SSP1MSK_SSP1MSK_POSITION                           0x0
#define _SSP1MSK_SSP1MSK_SIZE                               0x8
#define _SSP1MSK_SSP1MSK_LENGTH                             0x8
#define _SSP1MSK_SSP1MSK_MASK                               0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSP1MSK0               :1;
        unsigned SSP1MSK1               :1;
        unsigned SSP1MSK2               :1;
        unsigned SSP1MSK3               :1;
        unsigned SSP1MSK4               :1;
        unsigned SSP1MSK5               :1;
        unsigned SSP1MSK6               :1;
        unsigned SSP1MSK7               :1;
    };
    struct {
        unsigned MSK                    :8;
    };
    struct {
        unsigned MSK0                   :1;
        unsigned MSK1                   :1;
        unsigned MSK2                   :1;
        unsigned MSK3                   :1;
        unsigned MSK4                   :1;
        unsigned MSK5                   :1;
        unsigned MSK6                   :1;
        unsigned MSK7                   :1;
    };
    struct {
        unsigned SSP1MSK                :8;
    };
} SSPMSKbits_t;
extern volatile SSPMSKbits_t SSPMSKbits __at(0x213);
// bitfield macros
#define _SSPMSK_SSP1MSK0_POSN                               0x0
#define _SSPMSK_SSP1MSK0_POSITION                           0x0
#define _SSPMSK_SSP1MSK0_SIZE                               0x1
#define _SSPMSK_SSP1MSK0_LENGTH                             0x1
#define _SSPMSK_SSP1MSK0_MASK                               0x1
#define _SSPMSK_SSP1MSK1_POSN                               0x1
#define _SSPMSK_SSP1MSK1_POSITION                           0x1
#define _SSPMSK_SSP1MSK1_SIZE                               0x1
#define _SSPMSK_SSP1MSK1_LENGTH                             0x1
#define _SSPMSK_SSP1MSK1_MASK                               0x2
#define _SSPMSK_SSP1MSK2_POSN                               0x2
#define _SSPMSK_SSP1MSK2_POSITION                           0x2
#define _SSPMSK_SSP1MSK2_SIZE                               0x1
#define _SSPMSK_SSP1MSK2_LENGTH                             0x1
#define _SSPMSK_SSP1MSK2_MASK                               0x4
#define _SSPMSK_SSP1MSK3_POSN                               0x3
#define _SSPMSK_SSP1MSK3_POSITION                           0x3
#define _SSPMSK_SSP1MSK3_SIZE                               0x1
#define _SSPMSK_SSP1MSK3_LENGTH                             0x1
#define _SSPMSK_SSP1MSK3_MASK                               0x8
#define _SSPMSK_SSP1MSK4_POSN                               0x4
#define _SSPMSK_SSP1MSK4_POSITION                           0x4
#define _SSPMSK_SSP1MSK4_SIZE                               0x1
#define _SSPMSK_SSP1MSK4_LENGTH                             0x1
#define _SSPMSK_SSP1MSK4_MASK                               0x10
#define _SSPMSK_SSP1MSK5_POSN                               0x5
#define _SSPMSK_SSP1MSK5_POSITION                           0x5
#define _SSPMSK_SSP1MSK5_SIZE                               0x1
#define _SSPMSK_SSP1MSK5_LENGTH                             0x1
#define _SSPMSK_SSP1MSK5_MASK                               0x20
#define _SSPMSK_SSP1MSK6_POSN                               0x6
#define _SSPMSK_SSP1MSK6_POSITION                           0x6
#define _SSPMSK_SSP1MSK6_SIZE                               0x1
#define _SSPMSK_SSP1MSK6_LENGTH                             0x1
#define _SSPMSK_SSP1MSK6_MASK                               0x40
#define _SSPMSK_SSP1MSK7_POSN                               0x7
#define _SSPMSK_SSP1MSK7_POSITION                           0x7
#define _SSPMSK_SSP1MSK7_SIZE                               0x1
#define _SSPMSK_SSP1MSK7_LENGTH                             0x1
#define _SSPMSK_SSP1MSK7_MASK                               0x80
#define _SSPMSK_MSK_POSN                                    0x0
#define _SSPMSK_MSK_POSITION                                0x0
#define _SSPMSK_MSK_SIZE                                    0x8
#define _SSPMSK_MSK_LENGTH                                  0x8
#define _SSPMSK_MSK_MASK                                    0xFF
#define _SSPMSK_MSK0_POSN                                   0x0
#define _SSPMSK_MSK0_POSITION                               0x0
#define _SSPMSK_MSK0_SIZE                                   0x1
#define _SSPMSK_MSK0_LENGTH                                 0x1
#define _SSPMSK_MSK0_MASK                                   0x1
#define _SSPMSK_MSK1_POSN                                   0x1
#define _SSPMSK_MSK1_POSITION                               0x1
#define _SSPMSK_MSK1_SIZE                                   0x1
#define _SSPMSK_MSK1_LENGTH                                 0x1
#define _SSPMSK_MSK1_MASK                                   0x2
#define _SSPMSK_MSK2_POSN                                   0x2
#define _SSPMSK_MSK2_POSITION                               0x2
#define _SSPMSK_MSK2_SIZE                                   0x1
#define _SSPMSK_MSK2_LENGTH                                 0x1
#define _SSPMSK_MSK2_MASK                                   0x4
#define _SSPMSK_MSK3_POSN                                   0x3
#define _SSPMSK_MSK3_POSITION                               0x3
#define _SSPMSK_MSK3_SIZE                                   0x1
#define _SSPMSK_MSK3_LENGTH                                 0x1
#define _SSPMSK_MSK3_MASK                                   0x8
#define _SSPMSK_MSK4_POSN                                   0x4
#define _SSPMSK_MSK4_POSITION                               0x4
#define _SSPMSK_MSK4_SIZE                                   0x1
#define _SSPMSK_MSK4_LENGTH                                 0x1
#define _SSPMSK_MSK4_MASK                                   0x10
#define _SSPMSK_MSK5_POSN                                   0x5
#define _SSPMSK_MSK5_POSITION                               0x5
#define _SSPMSK_MSK5_SIZE                                   0x1
#define _SSPMSK_MSK5_LENGTH                                 0x1
#define _SSPMSK_MSK5_MASK                                   0x20
#define _SSPMSK_MSK6_POSN                                   0x6
#define _SSPMSK_MSK6_POSITION                               0x6
#define _SSPMSK_MSK6_SIZE                                   0x1
#define _SSPMSK_MSK6_LENGTH                                 0x1
#define _SSPMSK_MSK6_MASK                                   0x40
#define _SSPMSK_MSK7_POSN                                   0x7
#define _SSPMSK_MSK7_POSITION                               0x7
#define _SSPMSK_MSK7_SIZE                                   0x1
#define _SSPMSK_MSK7_LENGTH                                 0x1
#define _SSPMSK_MSK7_MASK                                   0x80
#define _SSPMSK_SSP1MSK_POSN                                0x0
#define _SSPMSK_SSP1MSK_POSITION                            0x0
#define _SSPMSK_SSP1MSK_SIZE                                0x8
#define _SSPMSK_SSP1MSK_LENGTH                              0x8
#define _SSPMSK_SSP1MSK_MASK                                0xFF

// Register: SSP1STAT
#define SSP1STAT SSP1STAT
extern volatile unsigned char           SSP1STAT            __at(0x214);
#ifndef _LIB_BUILD
asm("SSP1STAT equ 0214h");
#endif
// aliases
extern volatile unsigned char           SSPSTAT             __at(0x214);
#ifndef _LIB_BUILD
asm("SSPSTAT equ 0214h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
} SSP1STATbits_t;
extern volatile SSP1STATbits_t SSP1STATbits __at(0x214);
// bitfield macros
#define _SSP1STAT_BF_POSN                                   0x0
#define _SSP1STAT_BF_POSITION                               0x0
#define _SSP1STAT_BF_SIZE                                   0x1
#define _SSP1STAT_BF_LENGTH                                 0x1
#define _SSP1STAT_BF_MASK                                   0x1
#define _SSP1STAT_UA_POSN                                   0x1
#define _SSP1STAT_UA_POSITION                               0x1
#define _SSP1STAT_UA_SIZE                                   0x1
#define _SSP1STAT_UA_LENGTH                                 0x1
#define _SSP1STAT_UA_MASK                                   0x2
#define _SSP1STAT_R_nW_POSN                                 0x2
#define _SSP1STAT_R_nW_POSITION                             0x2
#define _SSP1STAT_R_nW_SIZE                                 0x1
#define _SSP1STAT_R_nW_LENGTH                               0x1
#define _SSP1STAT_R_nW_MASK                                 0x4
#define _SSP1STAT_S_POSN                                    0x3
#define _SSP1STAT_S_POSITION                                0x3
#define _SSP1STAT_S_SIZE                                    0x1
#define _SSP1STAT_S_LENGTH                                  0x1
#define _SSP1STAT_S_MASK                                    0x8
#define _SSP1STAT_P_POSN                                    0x4
#define _SSP1STAT_P_POSITION                                0x4
#define _SSP1STAT_P_SIZE                                    0x1
#define _SSP1STAT_P_LENGTH                                  0x1
#define _SSP1STAT_P_MASK                                    0x10
#define _SSP1STAT_D_nA_POSN                                 0x5
#define _SSP1STAT_D_nA_POSITION                             0x5
#define _SSP1STAT_D_nA_SIZE                                 0x1
#define _SSP1STAT_D_nA_LENGTH                               0x1
#define _SSP1STAT_D_nA_MASK                                 0x20
#define _SSP1STAT_CKE_POSN                                  0x6
#define _SSP1STAT_CKE_POSITION                              0x6
#define _SSP1STAT_CKE_SIZE                                  0x1
#define _SSP1STAT_CKE_LENGTH                                0x1
#define _SSP1STAT_CKE_MASK                                  0x40
#define _SSP1STAT_SMP_POSN                                  0x7
#define _SSP1STAT_SMP_POSITION                              0x7
#define _SSP1STAT_SMP_SIZE                                  0x1
#define _SSP1STAT_SMP_LENGTH                                0x1
#define _SSP1STAT_SMP_MASK                                  0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
} SSPSTATbits_t;
extern volatile SSPSTATbits_t SSPSTATbits __at(0x214);
// bitfield macros
#define _SSPSTAT_BF_POSN                                    0x0
#define _SSPSTAT_BF_POSITION                                0x0
#define _SSPSTAT_BF_SIZE                                    0x1
#define _SSPSTAT_BF_LENGTH                                  0x1
#define _SSPSTAT_BF_MASK                                    0x1
#define _SSPSTAT_UA_POSN                                    0x1
#define _SSPSTAT_UA_POSITION                                0x1
#define _SSPSTAT_UA_SIZE                                    0x1
#define _SSPSTAT_UA_LENGTH                                  0x1
#define _SSPSTAT_UA_MASK                                    0x2
#define _SSPSTAT_R_nW_POSN                                  0x2
#define _SSPSTAT_R_nW_POSITION                              0x2
#define _SSPSTAT_R_nW_SIZE                                  0x1
#define _SSPSTAT_R_nW_LENGTH                                0x1
#define _SSPSTAT_R_nW_MASK                                  0x4
#define _SSPSTAT_S_POSN                                     0x3
#define _SSPSTAT_S_POSITION                                 0x3
#define _SSPSTAT_S_SIZE                                     0x1
#define _SSPSTAT_S_LENGTH                                   0x1
#define _SSPSTAT_S_MASK                                     0x8
#define _SSPSTAT_P_POSN                                     0x4
#define _SSPSTAT_P_POSITION                                 0x4
#define _SSPSTAT_P_SIZE                                     0x1
#define _SSPSTAT_P_LENGTH                                   0x1
#define _SSPSTAT_P_MASK                                     0x10
#define _SSPSTAT_D_nA_POSN                                  0x5
#define _SSPSTAT_D_nA_POSITION                              0x5
#define _SSPSTAT_D_nA_SIZE                                  0x1
#define _SSPSTAT_D_nA_LENGTH                                0x1
#define _SSPSTAT_D_nA_MASK                                  0x20
#define _SSPSTAT_CKE_POSN                                   0x6
#define _SSPSTAT_CKE_POSITION                               0x6
#define _SSPSTAT_CKE_SIZE                                   0x1
#define _SSPSTAT_CKE_LENGTH                                 0x1
#define _SSPSTAT_CKE_MASK                                   0x40
#define _SSPSTAT_SMP_POSN                                   0x7
#define _SSPSTAT_SMP_POSITION                               0x7
#define _SSPSTAT_SMP_SIZE                                   0x1
#define _SSPSTAT_SMP_LENGTH                                 0x1
#define _SSPSTAT_SMP_MASK                                   0x80

// Register: SSP1CON1
#define SSP1CON1 SSP1CON1
extern volatile unsigned char           SSP1CON1            __at(0x215);
#ifndef _LIB_BUILD
asm("SSP1CON1 equ 0215h");
#endif
// aliases
extern volatile unsigned char           SSPCON              __at(0x215);
#ifndef _LIB_BUILD
asm("SSPCON equ 0215h");
#endif
extern volatile unsigned char           SSPCON1             __at(0x215);
#ifndef _LIB_BUILD
asm("SSPCON1 equ 0215h");
#endif
extern volatile unsigned char           SSP1CON             __at(0x215);
#ifndef _LIB_BUILD
asm("SSP1CON equ 0215h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
} SSP1CON1bits_t;
extern volatile SSP1CON1bits_t SSP1CON1bits __at(0x215);
// bitfield macros
#define _SSP1CON1_SSPM_POSN                                 0x0
#define _SSP1CON1_SSPM_POSITION                             0x0
#define _SSP1CON1_SSPM_SIZE                                 0x4
#define _SSP1CON1_SSPM_LENGTH                               0x4
#define _SSP1CON1_SSPM_MASK                                 0xF
#define _SSP1CON1_CKP_POSN                                  0x4
#define _SSP1CON1_CKP_POSITION                              0x4
#define _SSP1CON1_CKP_SIZE                                  0x1
#define _SSP1CON1_CKP_LENGTH                                0x1
#define _SSP1CON1_CKP_MASK                                  0x10
#define _SSP1CON1_SSPEN_POSN                                0x5
#define _SSP1CON1_SSPEN_POSITION                            0x5
#define _SSP1CON1_SSPEN_SIZE                                0x1
#define _SSP1CON1_SSPEN_LENGTH                              0x1
#define _SSP1CON1_SSPEN_MASK                                0x20
#define _SSP1CON1_SSPOV_POSN                                0x6
#define _SSP1CON1_SSPOV_POSITION                            0x6
#define _SSP1CON1_SSPOV_SIZE                                0x1
#define _SSP1CON1_SSPOV_LENGTH                              0x1
#define _SSP1CON1_SSPOV_MASK                                0x40
#define _SSP1CON1_WCOL_POSN                                 0x7
#define _SSP1CON1_WCOL_POSITION                             0x7
#define _SSP1CON1_WCOL_SIZE                                 0x1
#define _SSP1CON1_WCOL_LENGTH                               0x1
#define _SSP1CON1_WCOL_MASK                                 0x80
#define _SSP1CON1_SSPM0_POSN                                0x0
#define _SSP1CON1_SSPM0_POSITION                            0x0
#define _SSP1CON1_SSPM0_SIZE                                0x1
#define _SSP1CON1_SSPM0_LENGTH                              0x1
#define _SSP1CON1_SSPM0_MASK                                0x1
#define _SSP1CON1_SSPM1_POSN                                0x1
#define _SSP1CON1_SSPM1_POSITION                            0x1
#define _SSP1CON1_SSPM1_SIZE                                0x1
#define _SSP1CON1_SSPM1_LENGTH                              0x1
#define _SSP1CON1_SSPM1_MASK                                0x2
#define _SSP1CON1_SSPM2_POSN                                0x2
#define _SSP1CON1_SSPM2_POSITION                            0x2
#define _SSP1CON1_SSPM2_SIZE                                0x1
#define _SSP1CON1_SSPM2_LENGTH                              0x1
#define _SSP1CON1_SSPM2_MASK                                0x4
#define _SSP1CON1_SSPM3_POSN                                0x3
#define _SSP1CON1_SSPM3_POSITION                            0x3
#define _SSP1CON1_SSPM3_SIZE                                0x1
#define _SSP1CON1_SSPM3_LENGTH                              0x1
#define _SSP1CON1_SSPM3_MASK                                0x8
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
} SSPCONbits_t;
extern volatile SSPCONbits_t SSPCONbits __at(0x215);
// bitfield macros
#define _SSPCON_SSPM_POSN                                   0x0
#define _SSPCON_SSPM_POSITION                               0x0
#define _SSPCON_SSPM_SIZE                                   0x4
#define _SSPCON_SSPM_LENGTH                                 0x4
#define _SSPCON_SSPM_MASK                                   0xF
#define _SSPCON_CKP_POSN                                    0x4
#define _SSPCON_CKP_POSITION                                0x4
#define _SSPCON_CKP_SIZE                                    0x1
#define _SSPCON_CKP_LENGTH                                  0x1
#define _SSPCON_CKP_MASK                                    0x10
#define _SSPCON_SSPEN_POSN                                  0x5
#define _SSPCON_SSPEN_POSITION                              0x5
#define _SSPCON_SSPEN_SIZE                                  0x1
#define _SSPCON_SSPEN_LENGTH                                0x1
#define _SSPCON_SSPEN_MASK                                  0x20
#define _SSPCON_SSPOV_POSN                                  0x6
#define _SSPCON_SSPOV_POSITION                              0x6
#define _SSPCON_SSPOV_SIZE                                  0x1
#define _SSPCON_SSPOV_LENGTH                                0x1
#define _SSPCON_SSPOV_MASK                                  0x40
#define _SSPCON_WCOL_POSN                                   0x7
#define _SSPCON_WCOL_POSITION                               0x7
#define _SSPCON_WCOL_SIZE                                   0x1
#define _SSPCON_WCOL_LENGTH                                 0x1
#define _SSPCON_WCOL_MASK                                   0x80
#define _SSPCON_SSPM0_POSN                                  0x0
#define _SSPCON_SSPM0_POSITION                              0x0
#define _SSPCON_SSPM0_SIZE                                  0x1
#define _SSPCON_SSPM0_LENGTH                                0x1
#define _SSPCON_SSPM0_MASK                                  0x1
#define _SSPCON_SSPM1_POSN                                  0x1
#define _SSPCON_SSPM1_POSITION                              0x1
#define _SSPCON_SSPM1_SIZE                                  0x1
#define _SSPCON_SSPM1_LENGTH                                0x1
#define _SSPCON_SSPM1_MASK                                  0x2
#define _SSPCON_SSPM2_POSN                                  0x2
#define _SSPCON_SSPM2_POSITION                              0x2
#define _SSPCON_SSPM2_SIZE                                  0x1
#define _SSPCON_SSPM2_LENGTH                                0x1
#define _SSPCON_SSPM2_MASK                                  0x4
#define _SSPCON_SSPM3_POSN                                  0x3
#define _SSPCON_SSPM3_POSITION                              0x3
#define _SSPCON_SSPM3_SIZE                                  0x1
#define _SSPCON_SSPM3_LENGTH                                0x1
#define _SSPCON_SSPM3_MASK                                  0x8
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
} SSPCON1bits_t;
extern volatile SSPCON1bits_t SSPCON1bits __at(0x215);
// bitfield macros
#define _SSPCON1_SSPM_POSN                                  0x0
#define _SSPCON1_SSPM_POSITION                              0x0
#define _SSPCON1_SSPM_SIZE                                  0x4
#define _SSPCON1_SSPM_LENGTH                                0x4
#define _SSPCON1_SSPM_MASK                                  0xF
#define _SSPCON1_CKP_POSN                                   0x4
#define _SSPCON1_CKP_POSITION                               0x4
#define _SSPCON1_CKP_SIZE                                   0x1
#define _SSPCON1_CKP_LENGTH                                 0x1
#define _SSPCON1_CKP_MASK                                   0x10
#define _SSPCON1_SSPEN_POSN                                 0x5
#define _SSPCON1_SSPEN_POSITION                             0x5
#define _SSPCON1_SSPEN_SIZE                                 0x1
#define _SSPCON1_SSPEN_LENGTH                               0x1
#define _SSPCON1_SSPEN_MASK                                 0x20
#define _SSPCON1_SSPOV_POSN                                 0x6
#define _SSPCON1_SSPOV_POSITION                             0x6
#define _SSPCON1_SSPOV_SIZE                                 0x1
#define _SSPCON1_SSPOV_LENGTH                               0x1
#define _SSPCON1_SSPOV_MASK                                 0x40
#define _SSPCON1_WCOL_POSN                                  0x7
#define _SSPCON1_WCOL_POSITION                              0x7
#define _SSPCON1_WCOL_SIZE                                  0x1
#define _SSPCON1_WCOL_LENGTH                                0x1
#define _SSPCON1_WCOL_MASK                                  0x80
#define _SSPCON1_SSPM0_POSN                                 0x0
#define _SSPCON1_SSPM0_POSITION                             0x0
#define _SSPCON1_SSPM0_SIZE                                 0x1
#define _SSPCON1_SSPM0_LENGTH                               0x1
#define _SSPCON1_SSPM0_MASK                                 0x1
#define _SSPCON1_SSPM1_POSN                                 0x1
#define _SSPCON1_SSPM1_POSITION                             0x1
#define _SSPCON1_SSPM1_SIZE                                 0x1
#define _SSPCON1_SSPM1_LENGTH                               0x1
#define _SSPCON1_SSPM1_MASK                                 0x2
#define _SSPCON1_SSPM2_POSN                                 0x2
#define _SSPCON1_SSPM2_POSITION                             0x2
#define _SSPCON1_SSPM2_SIZE                                 0x1
#define _SSPCON1_SSPM2_LENGTH                               0x1
#define _SSPCON1_SSPM2_MASK                                 0x4
#define _SSPCON1_SSPM3_POSN                                 0x3
#define _SSPCON1_SSPM3_POSITION                             0x3
#define _SSPCON1_SSPM3_SIZE                                 0x1
#define _SSPCON1_SSPM3_LENGTH                               0x1
#define _SSPCON1_SSPM3_MASK                                 0x8
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
} SSP1CONbits_t;
extern volatile SSP1CONbits_t SSP1CONbits __at(0x215);
// bitfield macros
#define _SSP1CON_SSPM_POSN                                  0x0
#define _SSP1CON_SSPM_POSITION                              0x0
#define _SSP1CON_SSPM_SIZE                                  0x4
#define _SSP1CON_SSPM_LENGTH                                0x4
#define _SSP1CON_SSPM_MASK                                  0xF
#define _SSP1CON_CKP_POSN                                   0x4
#define _SSP1CON_CKP_POSITION                               0x4
#define _SSP1CON_CKP_SIZE                                   0x1
#define _SSP1CON_CKP_LENGTH                                 0x1
#define _SSP1CON_CKP_MASK                                   0x10
#define _SSP1CON_SSPEN_POSN                                 0x5
#define _SSP1CON_SSPEN_POSITION                             0x5
#define _SSP1CON_SSPEN_SIZE                                 0x1
#define _SSP1CON_SSPEN_LENGTH                               0x1
#define _SSP1CON_SSPEN_MASK                                 0x20
#define _SSP1CON_SSPOV_POSN                                 0x6
#define _SSP1CON_SSPOV_POSITION                             0x6
#define _SSP1CON_SSPOV_SIZE                                 0x1
#define _SSP1CON_SSPOV_LENGTH                               0x1
#define _SSP1CON_SSPOV_MASK                                 0x40
#define _SSP1CON_WCOL_POSN                                  0x7
#define _SSP1CON_WCOL_POSITION                              0x7
#define _SSP1CON_WCOL_SIZE                                  0x1
#define _SSP1CON_WCOL_LENGTH                                0x1
#define _SSP1CON_WCOL_MASK                                  0x80
#define _SSP1CON_SSPM0_POSN                                 0x0
#define _SSP1CON_SSPM0_POSITION                             0x0
#define _SSP1CON_SSPM0_SIZE                                 0x1
#define _SSP1CON_SSPM0_LENGTH                               0x1
#define _SSP1CON_SSPM0_MASK                                 0x1
#define _SSP1CON_SSPM1_POSN                                 0x1
#define _SSP1CON_SSPM1_POSITION                             0x1
#define _SSP1CON_SSPM1_SIZE                                 0x1
#define _SSP1CON_SSPM1_LENGTH                               0x1
#define _SSP1CON_SSPM1_MASK                                 0x2
#define _SSP1CON_SSPM2_POSN                                 0x2
#define _SSP1CON_SSPM2_POSITION                             0x2
#define _SSP1CON_SSPM2_SIZE                                 0x1
#define _SSP1CON_SSPM2_LENGTH                               0x1
#define _SSP1CON_SSPM2_MASK                                 0x4
#define _SSP1CON_SSPM3_POSN                                 0x3
#define _SSP1CON_SSPM3_POSITION                             0x3
#define _SSP1CON_SSPM3_SIZE                                 0x1
#define _SSP1CON_SSPM3_LENGTH                               0x1
#define _SSP1CON_SSPM3_MASK                                 0x8

// Register: SSP1CON2
#define SSP1CON2 SSP1CON2
extern volatile unsigned char           SSP1CON2            __at(0x216);
#ifndef _LIB_BUILD
asm("SSP1CON2 equ 0216h");
#endif
// aliases
extern volatile unsigned char           SSPCON2             __at(0x216);
#ifndef _LIB_BUILD
asm("SSPCON2 equ 0216h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
} SSP1CON2bits_t;
extern volatile SSP1CON2bits_t SSP1CON2bits __at(0x216);
// bitfield macros
#define _SSP1CON2_SEN_POSN                                  0x0
#define _SSP1CON2_SEN_POSITION                              0x0
#define _SSP1CON2_SEN_SIZE                                  0x1
#define _SSP1CON2_SEN_LENGTH                                0x1
#define _SSP1CON2_SEN_MASK                                  0x1
#define _SSP1CON2_RSEN_POSN                                 0x1
#define _SSP1CON2_RSEN_POSITION                             0x1
#define _SSP1CON2_RSEN_SIZE                                 0x1
#define _SSP1CON2_RSEN_LENGTH                               0x1
#define _SSP1CON2_RSEN_MASK                                 0x2
#define _SSP1CON2_PEN_POSN                                  0x2
#define _SSP1CON2_PEN_POSITION                              0x2
#define _SSP1CON2_PEN_SIZE                                  0x1
#define _SSP1CON2_PEN_LENGTH                                0x1
#define _SSP1CON2_PEN_MASK                                  0x4
#define _SSP1CON2_RCEN_POSN                                 0x3
#define _SSP1CON2_RCEN_POSITION                             0x3
#define _SSP1CON2_RCEN_SIZE                                 0x1
#define _SSP1CON2_RCEN_LENGTH                               0x1
#define _SSP1CON2_RCEN_MASK                                 0x8
#define _SSP1CON2_ACKEN_POSN                                0x4
#define _SSP1CON2_ACKEN_POSITION                            0x4
#define _SSP1CON2_ACKEN_SIZE                                0x1
#define _SSP1CON2_ACKEN_LENGTH                              0x1
#define _SSP1CON2_ACKEN_MASK                                0x10
#define _SSP1CON2_ACKDT_POSN                                0x5
#define _SSP1CON2_ACKDT_POSITION                            0x5
#define _SSP1CON2_ACKDT_SIZE                                0x1
#define _SSP1CON2_ACKDT_LENGTH                              0x1
#define _SSP1CON2_ACKDT_MASK                                0x20
#define _SSP1CON2_ACKSTAT_POSN                              0x6
#define _SSP1CON2_ACKSTAT_POSITION                          0x6
#define _SSP1CON2_ACKSTAT_SIZE                              0x1
#define _SSP1CON2_ACKSTAT_LENGTH                            0x1
#define _SSP1CON2_ACKSTAT_MASK                              0x40
#define _SSP1CON2_GCEN_POSN                                 0x7
#define _SSP1CON2_GCEN_POSITION                             0x7
#define _SSP1CON2_GCEN_SIZE                                 0x1
#define _SSP1CON2_GCEN_LENGTH                               0x1
#define _SSP1CON2_GCEN_MASK                                 0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
} SSPCON2bits_t;
extern volatile SSPCON2bits_t SSPCON2bits __at(0x216);
// bitfield macros
#define _SSPCON2_SEN_POSN                                   0x0
#define _SSPCON2_SEN_POSITION                               0x0
#define _SSPCON2_SEN_SIZE                                   0x1
#define _SSPCON2_SEN_LENGTH                                 0x1
#define _SSPCON2_SEN_MASK                                   0x1
#define _SSPCON2_RSEN_POSN                                  0x1
#define _SSPCON2_RSEN_POSITION                              0x1
#define _SSPCON2_RSEN_SIZE                                  0x1
#define _SSPCON2_RSEN_LENGTH                                0x1
#define _SSPCON2_RSEN_MASK                                  0x2
#define _SSPCON2_PEN_POSN                                   0x2
#define _SSPCON2_PEN_POSITION                               0x2
#define _SSPCON2_PEN_SIZE                                   0x1
#define _SSPCON2_PEN_LENGTH                                 0x1
#define _SSPCON2_PEN_MASK                                   0x4
#define _SSPCON2_RCEN_POSN                                  0x3
#define _SSPCON2_RCEN_POSITION                              0x3
#define _SSPCON2_RCEN_SIZE                                  0x1
#define _SSPCON2_RCEN_LENGTH                                0x1
#define _SSPCON2_RCEN_MASK                                  0x8
#define _SSPCON2_ACKEN_POSN                                 0x4
#define _SSPCON2_ACKEN_POSITION                             0x4
#define _SSPCON2_ACKEN_SIZE                                 0x1
#define _SSPCON2_ACKEN_LENGTH                               0x1
#define _SSPCON2_ACKEN_MASK                                 0x10
#define _SSPCON2_ACKDT_POSN                                 0x5
#define _SSPCON2_ACKDT_POSITION                             0x5
#define _SSPCON2_ACKDT_SIZE                                 0x1
#define _SSPCON2_ACKDT_LENGTH                               0x1
#define _SSPCON2_ACKDT_MASK                                 0x20
#define _SSPCON2_ACKSTAT_POSN                               0x6
#define _SSPCON2_ACKSTAT_POSITION                           0x6
#define _SSPCON2_ACKSTAT_SIZE                               0x1
#define _SSPCON2_ACKSTAT_LENGTH                             0x1
#define _SSPCON2_ACKSTAT_MASK                               0x40
#define _SSPCON2_GCEN_POSN                                  0x7
#define _SSPCON2_GCEN_POSITION                              0x7
#define _SSPCON2_GCEN_SIZE                                  0x1
#define _SSPCON2_GCEN_LENGTH                                0x1
#define _SSPCON2_GCEN_MASK                                  0x80

// Register: SSP1CON3
#define SSP1CON3 SSP1CON3
extern volatile unsigned char           SSP1CON3            __at(0x217);
#ifndef _LIB_BUILD
asm("SSP1CON3 equ 0217h");
#endif
// aliases
extern volatile unsigned char           SSPCON3             __at(0x217);
#ifndef _LIB_BUILD
asm("SSPCON3 equ 0217h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DHEN                   :1;
        unsigned AHEN                   :1;
        unsigned SBCDE                  :1;
        unsigned SDAHT                  :1;
        unsigned BOEN                   :1;
        unsigned SCIE                   :1;
        unsigned PCIE                   :1;
        unsigned ACKTIM                 :1;
    };
} SSP1CON3bits_t;
extern volatile SSP1CON3bits_t SSP1CON3bits __at(0x217);
// bitfield macros
#define _SSP1CON3_DHEN_POSN                                 0x0
#define _SSP1CON3_DHEN_POSITION                             0x0
#define _SSP1CON3_DHEN_SIZE                                 0x1
#define _SSP1CON3_DHEN_LENGTH                               0x1
#define _SSP1CON3_DHEN_MASK                                 0x1
#define _SSP1CON3_AHEN_POSN                                 0x1
#define _SSP1CON3_AHEN_POSITION                             0x1
#define _SSP1CON3_AHEN_SIZE                                 0x1
#define _SSP1CON3_AHEN_LENGTH                               0x1
#define _SSP1CON3_AHEN_MASK                                 0x2
#define _SSP1CON3_SBCDE_POSN                                0x2
#define _SSP1CON3_SBCDE_POSITION                            0x2
#define _SSP1CON3_SBCDE_SIZE                                0x1
#define _SSP1CON3_SBCDE_LENGTH                              0x1
#define _SSP1CON3_SBCDE_MASK                                0x4
#define _SSP1CON3_SDAHT_POSN                                0x3
#define _SSP1CON3_SDAHT_POSITION                            0x3
#define _SSP1CON3_SDAHT_SIZE                                0x1
#define _SSP1CON3_SDAHT_LENGTH                              0x1
#define _SSP1CON3_SDAHT_MASK                                0x8
#define _SSP1CON3_BOEN_POSN                                 0x4
#define _SSP1CON3_BOEN_POSITION                             0x4
#define _SSP1CON3_BOEN_SIZE                                 0x1
#define _SSP1CON3_BOEN_LENGTH                               0x1
#define _SSP1CON3_BOEN_MASK                                 0x10
#define _SSP1CON3_SCIE_POSN                                 0x5
#define _SSP1CON3_SCIE_POSITION                             0x5
#define _SSP1CON3_SCIE_SIZE                                 0x1
#define _SSP1CON3_SCIE_LENGTH                               0x1
#define _SSP1CON3_SCIE_MASK                                 0x20
#define _SSP1CON3_PCIE_POSN                                 0x6
#define _SSP1CON3_PCIE_POSITION                             0x6
#define _SSP1CON3_PCIE_SIZE                                 0x1
#define _SSP1CON3_PCIE_LENGTH                               0x1
#define _SSP1CON3_PCIE_MASK                                 0x40
#define _SSP1CON3_ACKTIM_POSN                               0x7
#define _SSP1CON3_ACKTIM_POSITION                           0x7
#define _SSP1CON3_ACKTIM_SIZE                               0x1
#define _SSP1CON3_ACKTIM_LENGTH                             0x1
#define _SSP1CON3_ACKTIM_MASK                               0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned DHEN                   :1;
        unsigned AHEN                   :1;
        unsigned SBCDE                  :1;
        unsigned SDAHT                  :1;
        unsigned BOEN                   :1;
        unsigned SCIE                   :1;
        unsigned PCIE                   :1;
        unsigned ACKTIM                 :1;
    };
} SSPCON3bits_t;
extern volatile SSPCON3bits_t SSPCON3bits __at(0x217);
// bitfield macros
#define _SSPCON3_DHEN_POSN                                  0x0
#define _SSPCON3_DHEN_POSITION                              0x0
#define _SSPCON3_DHEN_SIZE                                  0x1
#define _SSPCON3_DHEN_LENGTH                                0x1
#define _SSPCON3_DHEN_MASK                                  0x1
#define _SSPCON3_AHEN_POSN                                  0x1
#define _SSPCON3_AHEN_POSITION                              0x1
#define _SSPCON3_AHEN_SIZE                                  0x1
#define _SSPCON3_AHEN_LENGTH                                0x1
#define _SSPCON3_AHEN_MASK                                  0x2
#define _SSPCON3_SBCDE_POSN                                 0x2
#define _SSPCON3_SBCDE_POSITION                             0x2
#define _SSPCON3_SBCDE_SIZE                                 0x1
#define _SSPCON3_SBCDE_LENGTH                               0x1
#define _SSPCON3_SBCDE_MASK                                 0x4
#define _SSPCON3_SDAHT_POSN                                 0x3
#define _SSPCON3_SDAHT_POSITION                             0x3
#define _SSPCON3_SDAHT_SIZE                                 0x1
#define _SSPCON3_SDAHT_LENGTH                               0x1
#define _SSPCON3_SDAHT_MASK                                 0x8
#define _SSPCON3_BOEN_POSN                                  0x4
#define _SSPCON3_BOEN_POSITION                              0x4
#define _SSPCON3_BOEN_SIZE                                  0x1
#define _SSPCON3_BOEN_LENGTH                                0x1
#define _SSPCON3_BOEN_MASK                                  0x10
#define _SSPCON3_SCIE_POSN                                  0x5
#define _SSPCON3_SCIE_POSITION                              0x5
#define _SSPCON3_SCIE_SIZE                                  0x1
#define _SSPCON3_SCIE_LENGTH                                0x1
#define _SSPCON3_SCIE_MASK                                  0x20
#define _SSPCON3_PCIE_POSN                                  0x6
#define _SSPCON3_PCIE_POSITION                              0x6
#define _SSPCON3_PCIE_SIZE                                  0x1
#define _SSPCON3_PCIE_LENGTH                                0x1
#define _SSPCON3_PCIE_MASK                                  0x40
#define _SSPCON3_ACKTIM_POSN                                0x7
#define _SSPCON3_ACKTIM_POSITION                            0x7
#define _SSPCON3_ACKTIM_SIZE                                0x1
#define _SSPCON3_ACKTIM_LENGTH                              0x1
#define _SSPCON3_ACKTIM_MASK                                0x80

// Register: MD3CON0
#define MD3CON0 MD3CON0
extern volatile unsigned char           MD3CON0             __at(0x21B);
#ifndef _LIB_BUILD
asm("MD3CON0 equ 021Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BIT                    :1;
        unsigned                        :3;
        unsigned OPOL                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MD3BIT                 :1;
        unsigned                        :3;
        unsigned MD3OPOL                :1;
        unsigned MD3OUT                 :1;
        unsigned                        :1;
        unsigned MD3EN                  :1;
    };
} MD3CON0bits_t;
extern volatile MD3CON0bits_t MD3CON0bits __at(0x21B);
// bitfield macros
#define _MD3CON0_BIT_POSN                                   0x0
#define _MD3CON0_BIT_POSITION                               0x0
#define _MD3CON0_BIT_SIZE                                   0x1
#define _MD3CON0_BIT_LENGTH                                 0x1
#define _MD3CON0_BIT_MASK                                   0x1
#define _MD3CON0_OPOL_POSN                                  0x4
#define _MD3CON0_OPOL_POSITION                              0x4
#define _MD3CON0_OPOL_SIZE                                  0x1
#define _MD3CON0_OPOL_LENGTH                                0x1
#define _MD3CON0_OPOL_MASK                                  0x10
#define _MD3CON0_OUT_POSN                                   0x5
#define _MD3CON0_OUT_POSITION                               0x5
#define _MD3CON0_OUT_SIZE                                   0x1
#define _MD3CON0_OUT_LENGTH                                 0x1
#define _MD3CON0_OUT_MASK                                   0x20
#define _MD3CON0_EN_POSN                                    0x7
#define _MD3CON0_EN_POSITION                                0x7
#define _MD3CON0_EN_SIZE                                    0x1
#define _MD3CON0_EN_LENGTH                                  0x1
#define _MD3CON0_EN_MASK                                    0x80
#define _MD3CON0_MD3BIT_POSN                                0x0
#define _MD3CON0_MD3BIT_POSITION                            0x0
#define _MD3CON0_MD3BIT_SIZE                                0x1
#define _MD3CON0_MD3BIT_LENGTH                              0x1
#define _MD3CON0_MD3BIT_MASK                                0x1
#define _MD3CON0_MD3OPOL_POSN                               0x4
#define _MD3CON0_MD3OPOL_POSITION                           0x4
#define _MD3CON0_MD3OPOL_SIZE                               0x1
#define _MD3CON0_MD3OPOL_LENGTH                             0x1
#define _MD3CON0_MD3OPOL_MASK                               0x10
#define _MD3CON0_MD3OUT_POSN                                0x5
#define _MD3CON0_MD3OUT_POSITION                            0x5
#define _MD3CON0_MD3OUT_SIZE                                0x1
#define _MD3CON0_MD3OUT_LENGTH                              0x1
#define _MD3CON0_MD3OUT_MASK                                0x20
#define _MD3CON0_MD3EN_POSN                                 0x7
#define _MD3CON0_MD3EN_POSITION                             0x7
#define _MD3CON0_MD3EN_SIZE                                 0x1
#define _MD3CON0_MD3EN_LENGTH                               0x1
#define _MD3CON0_MD3EN_MASK                                 0x80

// Register: MD3CON1
#define MD3CON1 MD3CON1
extern volatile unsigned char           MD3CON1             __at(0x21C);
#ifndef _LIB_BUILD
asm("MD3CON1 equ 021Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLSYNC                 :1;
        unsigned CLPOL                  :1;
        unsigned                        :2;
        unsigned CHSYNC                 :1;
        unsigned CHPOL                  :1;
    };
    struct {
        unsigned MD3CLSYNC              :1;
        unsigned MD3CLPOL               :1;
        unsigned                        :2;
        unsigned MD3CHSYNC              :1;
        unsigned MD3CHPOL               :1;
    };
} MD3CON1bits_t;
extern volatile MD3CON1bits_t MD3CON1bits __at(0x21C);
// bitfield macros
#define _MD3CON1_CLSYNC_POSN                                0x0
#define _MD3CON1_CLSYNC_POSITION                            0x0
#define _MD3CON1_CLSYNC_SIZE                                0x1
#define _MD3CON1_CLSYNC_LENGTH                              0x1
#define _MD3CON1_CLSYNC_MASK                                0x1
#define _MD3CON1_CLPOL_POSN                                 0x1
#define _MD3CON1_CLPOL_POSITION                             0x1
#define _MD3CON1_CLPOL_SIZE                                 0x1
#define _MD3CON1_CLPOL_LENGTH                               0x1
#define _MD3CON1_CLPOL_MASK                                 0x2
#define _MD3CON1_CHSYNC_POSN                                0x4
#define _MD3CON1_CHSYNC_POSITION                            0x4
#define _MD3CON1_CHSYNC_SIZE                                0x1
#define _MD3CON1_CHSYNC_LENGTH                              0x1
#define _MD3CON1_CHSYNC_MASK                                0x10
#define _MD3CON1_CHPOL_POSN                                 0x5
#define _MD3CON1_CHPOL_POSITION                             0x5
#define _MD3CON1_CHPOL_SIZE                                 0x1
#define _MD3CON1_CHPOL_LENGTH                               0x1
#define _MD3CON1_CHPOL_MASK                                 0x20
#define _MD3CON1_MD3CLSYNC_POSN                             0x0
#define _MD3CON1_MD3CLSYNC_POSITION                         0x0
#define _MD3CON1_MD3CLSYNC_SIZE                             0x1
#define _MD3CON1_MD3CLSYNC_LENGTH                           0x1
#define _MD3CON1_MD3CLSYNC_MASK                             0x1
#define _MD3CON1_MD3CLPOL_POSN                              0x1
#define _MD3CON1_MD3CLPOL_POSITION                          0x1
#define _MD3CON1_MD3CLPOL_SIZE                              0x1
#define _MD3CON1_MD3CLPOL_LENGTH                            0x1
#define _MD3CON1_MD3CLPOL_MASK                              0x2
#define _MD3CON1_MD3CHSYNC_POSN                             0x4
#define _MD3CON1_MD3CHSYNC_POSITION                         0x4
#define _MD3CON1_MD3CHSYNC_SIZE                             0x1
#define _MD3CON1_MD3CHSYNC_LENGTH                           0x1
#define _MD3CON1_MD3CHSYNC_MASK                             0x10
#define _MD3CON1_MD3CHPOL_POSN                              0x5
#define _MD3CON1_MD3CHPOL_POSITION                          0x5
#define _MD3CON1_MD3CHPOL_SIZE                              0x1
#define _MD3CON1_MD3CHPOL_LENGTH                            0x1
#define _MD3CON1_MD3CHPOL_MASK                              0x20

// Register: MD3SRC
#define MD3SRC MD3SRC
extern volatile unsigned char           MD3SRC              __at(0x21D);
#ifndef _LIB_BUILD
asm("MD3SRC equ 021Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MS                     :5;
    };
    struct {
        unsigned MS0                    :1;
        unsigned MS1                    :1;
        unsigned MS2                    :1;
        unsigned MS3                    :1;
        unsigned MS4                    :1;
    };
    struct {
        unsigned MD3MS                  :5;
    };
    struct {
        unsigned MD3MS0                 :1;
        unsigned MD3MS1                 :1;
        unsigned MD3MS2                 :1;
        unsigned MD3MS3                 :1;
        unsigned MD3MS4                 :1;
    };
} MD3SRCbits_t;
extern volatile MD3SRCbits_t MD3SRCbits __at(0x21D);
// bitfield macros
#define _MD3SRC_MS_POSN                                     0x0
#define _MD3SRC_MS_POSITION                                 0x0
#define _MD3SRC_MS_SIZE                                     0x5
#define _MD3SRC_MS_LENGTH                                   0x5
#define _MD3SRC_MS_MASK                                     0x1F
#define _MD3SRC_MS0_POSN                                    0x0
#define _MD3SRC_MS0_POSITION                                0x0
#define _MD3SRC_MS0_SIZE                                    0x1
#define _MD3SRC_MS0_LENGTH                                  0x1
#define _MD3SRC_MS0_MASK                                    0x1
#define _MD3SRC_MS1_POSN                                    0x1
#define _MD3SRC_MS1_POSITION                                0x1
#define _MD3SRC_MS1_SIZE                                    0x1
#define _MD3SRC_MS1_LENGTH                                  0x1
#define _MD3SRC_MS1_MASK                                    0x2
#define _MD3SRC_MS2_POSN                                    0x2
#define _MD3SRC_MS2_POSITION                                0x2
#define _MD3SRC_MS2_SIZE                                    0x1
#define _MD3SRC_MS2_LENGTH                                  0x1
#define _MD3SRC_MS2_MASK                                    0x4
#define _MD3SRC_MS3_POSN                                    0x3
#define _MD3SRC_MS3_POSITION                                0x3
#define _MD3SRC_MS3_SIZE                                    0x1
#define _MD3SRC_MS3_LENGTH                                  0x1
#define _MD3SRC_MS3_MASK                                    0x8
#define _MD3SRC_MS4_POSN                                    0x4
#define _MD3SRC_MS4_POSITION                                0x4
#define _MD3SRC_MS4_SIZE                                    0x1
#define _MD3SRC_MS4_LENGTH                                  0x1
#define _MD3SRC_MS4_MASK                                    0x10
#define _MD3SRC_MD3MS_POSN                                  0x0
#define _MD3SRC_MD3MS_POSITION                              0x0
#define _MD3SRC_MD3MS_SIZE                                  0x5
#define _MD3SRC_MD3MS_LENGTH                                0x5
#define _MD3SRC_MD3MS_MASK                                  0x1F
#define _MD3SRC_MD3MS0_POSN                                 0x0
#define _MD3SRC_MD3MS0_POSITION                             0x0
#define _MD3SRC_MD3MS0_SIZE                                 0x1
#define _MD3SRC_MD3MS0_LENGTH                               0x1
#define _MD3SRC_MD3MS0_MASK                                 0x1
#define _MD3SRC_MD3MS1_POSN                                 0x1
#define _MD3SRC_MD3MS1_POSITION                             0x1
#define _MD3SRC_MD3MS1_SIZE                                 0x1
#define _MD3SRC_MD3MS1_LENGTH                               0x1
#define _MD3SRC_MD3MS1_MASK                                 0x2
#define _MD3SRC_MD3MS2_POSN                                 0x2
#define _MD3SRC_MD3MS2_POSITION                             0x2
#define _MD3SRC_MD3MS2_SIZE                                 0x1
#define _MD3SRC_MD3MS2_LENGTH                               0x1
#define _MD3SRC_MD3MS2_MASK                                 0x4
#define _MD3SRC_MD3MS3_POSN                                 0x3
#define _MD3SRC_MD3MS3_POSITION                             0x3
#define _MD3SRC_MD3MS3_SIZE                                 0x1
#define _MD3SRC_MD3MS3_LENGTH                               0x1
#define _MD3SRC_MD3MS3_MASK                                 0x8
#define _MD3SRC_MD3MS4_POSN                                 0x4
#define _MD3SRC_MD3MS4_POSITION                             0x4
#define _MD3SRC_MD3MS4_SIZE                                 0x1
#define _MD3SRC_MD3MS4_LENGTH                               0x1
#define _MD3SRC_MD3MS4_MASK                                 0x10

// Register: MD3CARL
#define MD3CARL MD3CARL
extern volatile unsigned char           MD3CARL             __at(0x21E);
#ifndef _LIB_BUILD
asm("MD3CARL equ 021Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CL                     :5;
    };
    struct {
        unsigned CL0                    :1;
        unsigned CL1                    :1;
        unsigned CL2                    :1;
        unsigned CL3                    :1;
        unsigned CL4                    :1;
    };
    struct {
        unsigned MD3CL                  :5;
    };
    struct {
        unsigned MD3CL0                 :1;
        unsigned MD3CL1                 :1;
        unsigned MD3CL2                 :1;
        unsigned MD3CL3                 :1;
        unsigned MD3CL4                 :1;
    };
} MD3CARLbits_t;
extern volatile MD3CARLbits_t MD3CARLbits __at(0x21E);
// bitfield macros
#define _MD3CARL_CL_POSN                                    0x0
#define _MD3CARL_CL_POSITION                                0x0
#define _MD3CARL_CL_SIZE                                    0x5
#define _MD3CARL_CL_LENGTH                                  0x5
#define _MD3CARL_CL_MASK                                    0x1F
#define _MD3CARL_CL0_POSN                                   0x0
#define _MD3CARL_CL0_POSITION                               0x0
#define _MD3CARL_CL0_SIZE                                   0x1
#define _MD3CARL_CL0_LENGTH                                 0x1
#define _MD3CARL_CL0_MASK                                   0x1
#define _MD3CARL_CL1_POSN                                   0x1
#define _MD3CARL_CL1_POSITION                               0x1
#define _MD3CARL_CL1_SIZE                                   0x1
#define _MD3CARL_CL1_LENGTH                                 0x1
#define _MD3CARL_CL1_MASK                                   0x2
#define _MD3CARL_CL2_POSN                                   0x2
#define _MD3CARL_CL2_POSITION                               0x2
#define _MD3CARL_CL2_SIZE                                   0x1
#define _MD3CARL_CL2_LENGTH                                 0x1
#define _MD3CARL_CL2_MASK                                   0x4
#define _MD3CARL_CL3_POSN                                   0x3
#define _MD3CARL_CL3_POSITION                               0x3
#define _MD3CARL_CL3_SIZE                                   0x1
#define _MD3CARL_CL3_LENGTH                                 0x1
#define _MD3CARL_CL3_MASK                                   0x8
#define _MD3CARL_CL4_POSN                                   0x4
#define _MD3CARL_CL4_POSITION                               0x4
#define _MD3CARL_CL4_SIZE                                   0x1
#define _MD3CARL_CL4_LENGTH                                 0x1
#define _MD3CARL_CL4_MASK                                   0x10
#define _MD3CARL_MD3CL_POSN                                 0x0
#define _MD3CARL_MD3CL_POSITION                             0x0
#define _MD3CARL_MD3CL_SIZE                                 0x5
#define _MD3CARL_MD3CL_LENGTH                               0x5
#define _MD3CARL_MD3CL_MASK                                 0x1F
#define _MD3CARL_MD3CL0_POSN                                0x0
#define _MD3CARL_MD3CL0_POSITION                            0x0
#define _MD3CARL_MD3CL0_SIZE                                0x1
#define _MD3CARL_MD3CL0_LENGTH                              0x1
#define _MD3CARL_MD3CL0_MASK                                0x1
#define _MD3CARL_MD3CL1_POSN                                0x1
#define _MD3CARL_MD3CL1_POSITION                            0x1
#define _MD3CARL_MD3CL1_SIZE                                0x1
#define _MD3CARL_MD3CL1_LENGTH                              0x1
#define _MD3CARL_MD3CL1_MASK                                0x2
#define _MD3CARL_MD3CL2_POSN                                0x2
#define _MD3CARL_MD3CL2_POSITION                            0x2
#define _MD3CARL_MD3CL2_SIZE                                0x1
#define _MD3CARL_MD3CL2_LENGTH                              0x1
#define _MD3CARL_MD3CL2_MASK                                0x4
#define _MD3CARL_MD3CL3_POSN                                0x3
#define _MD3CARL_MD3CL3_POSITION                            0x3
#define _MD3CARL_MD3CL3_SIZE                                0x1
#define _MD3CARL_MD3CL3_LENGTH                              0x1
#define _MD3CARL_MD3CL3_MASK                                0x8
#define _MD3CARL_MD3CL4_POSN                                0x4
#define _MD3CARL_MD3CL4_POSITION                            0x4
#define _MD3CARL_MD3CL4_SIZE                                0x1
#define _MD3CARL_MD3CL4_LENGTH                              0x1
#define _MD3CARL_MD3CL4_MASK                                0x10

// Register: MD3CARH
#define MD3CARH MD3CARH
extern volatile unsigned char           MD3CARH             __at(0x21F);
#ifndef _LIB_BUILD
asm("MD3CARH equ 021Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CH                     :5;
    };
    struct {
        unsigned CH0                    :1;
        unsigned CH1                    :1;
        unsigned CH2                    :1;
        unsigned CH3                    :1;
        unsigned CH4                    :1;
    };
    struct {
        unsigned MD3CH                  :5;
    };
    struct {
        unsigned MD3CH0                 :1;
        unsigned MD3CH1                 :1;
        unsigned MD3CH2                 :1;
        unsigned MD3CH3                 :1;
        unsigned MD3CH4                 :1;
    };
} MD3CARHbits_t;
extern volatile MD3CARHbits_t MD3CARHbits __at(0x21F);
// bitfield macros
#define _MD3CARH_CH_POSN                                    0x0
#define _MD3CARH_CH_POSITION                                0x0
#define _MD3CARH_CH_SIZE                                    0x5
#define _MD3CARH_CH_LENGTH                                  0x5
#define _MD3CARH_CH_MASK                                    0x1F
#define _MD3CARH_CH0_POSN                                   0x0
#define _MD3CARH_CH0_POSITION                               0x0
#define _MD3CARH_CH0_SIZE                                   0x1
#define _MD3CARH_CH0_LENGTH                                 0x1
#define _MD3CARH_CH0_MASK                                   0x1
#define _MD3CARH_CH1_POSN                                   0x1
#define _MD3CARH_CH1_POSITION                               0x1
#define _MD3CARH_CH1_SIZE                                   0x1
#define _MD3CARH_CH1_LENGTH                                 0x1
#define _MD3CARH_CH1_MASK                                   0x2
#define _MD3CARH_CH2_POSN                                   0x2
#define _MD3CARH_CH2_POSITION                               0x2
#define _MD3CARH_CH2_SIZE                                   0x1
#define _MD3CARH_CH2_LENGTH                                 0x1
#define _MD3CARH_CH2_MASK                                   0x4
#define _MD3CARH_CH3_POSN                                   0x3
#define _MD3CARH_CH3_POSITION                               0x3
#define _MD3CARH_CH3_SIZE                                   0x1
#define _MD3CARH_CH3_LENGTH                                 0x1
#define _MD3CARH_CH3_MASK                                   0x8
#define _MD3CARH_CH4_POSN                                   0x4
#define _MD3CARH_CH4_POSITION                               0x4
#define _MD3CARH_CH4_SIZE                                   0x1
#define _MD3CARH_CH4_LENGTH                                 0x1
#define _MD3CARH_CH4_MASK                                   0x10
#define _MD3CARH_MD3CH_POSN                                 0x0
#define _MD3CARH_MD3CH_POSITION                             0x0
#define _MD3CARH_MD3CH_SIZE                                 0x5
#define _MD3CARH_MD3CH_LENGTH                               0x5
#define _MD3CARH_MD3CH_MASK                                 0x1F
#define _MD3CARH_MD3CH0_POSN                                0x0
#define _MD3CARH_MD3CH0_POSITION                            0x0
#define _MD3CARH_MD3CH0_SIZE                                0x1
#define _MD3CARH_MD3CH0_LENGTH                              0x1
#define _MD3CARH_MD3CH0_MASK                                0x1
#define _MD3CARH_MD3CH1_POSN                                0x1
#define _MD3CARH_MD3CH1_POSITION                            0x1
#define _MD3CARH_MD3CH1_SIZE                                0x1
#define _MD3CARH_MD3CH1_LENGTH                              0x1
#define _MD3CARH_MD3CH1_MASK                                0x2
#define _MD3CARH_MD3CH2_POSN                                0x2
#define _MD3CARH_MD3CH2_POSITION                            0x2
#define _MD3CARH_MD3CH2_SIZE                                0x1
#define _MD3CARH_MD3CH2_LENGTH                              0x1
#define _MD3CARH_MD3CH2_MASK                                0x4
#define _MD3CARH_MD3CH3_POSN                                0x3
#define _MD3CARH_MD3CH3_POSITION                            0x3
#define _MD3CARH_MD3CH3_SIZE                                0x1
#define _MD3CARH_MD3CH3_LENGTH                              0x1
#define _MD3CARH_MD3CH3_MASK                                0x8
#define _MD3CARH_MD3CH4_POSN                                0x4
#define _MD3CARH_MD3CH4_POSITION                            0x4
#define _MD3CARH_MD3CH4_SIZE                                0x1
#define _MD3CARH_MD3CH4_LENGTH                              0x1
#define _MD3CARH_MD3CH4_MASK                                0x10

// Register: ODCONA
#define ODCONA ODCONA
extern volatile unsigned char           ODCONA              __at(0x28C);
#ifndef _LIB_BUILD
asm("ODCONA equ 028Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ODA0                   :1;
        unsigned ODA1                   :1;
        unsigned ODA2                   :1;
        unsigned ODA3                   :1;
        unsigned ODA4                   :1;
        unsigned ODA5                   :1;
        unsigned ODA6                   :1;
        unsigned ODA7                   :1;
    };
} ODCONAbits_t;
extern volatile ODCONAbits_t ODCONAbits __at(0x28C);
// bitfield macros
#define _ODCONA_ODA0_POSN                                   0x0
#define _ODCONA_ODA0_POSITION                               0x0
#define _ODCONA_ODA0_SIZE                                   0x1
#define _ODCONA_ODA0_LENGTH                                 0x1
#define _ODCONA_ODA0_MASK                                   0x1
#define _ODCONA_ODA1_POSN                                   0x1
#define _ODCONA_ODA1_POSITION                               0x1
#define _ODCONA_ODA1_SIZE                                   0x1
#define _ODCONA_ODA1_LENGTH                                 0x1
#define _ODCONA_ODA1_MASK                                   0x2
#define _ODCONA_ODA2_POSN                                   0x2
#define _ODCONA_ODA2_POSITION                               0x2
#define _ODCONA_ODA2_SIZE                                   0x1
#define _ODCONA_ODA2_LENGTH                                 0x1
#define _ODCONA_ODA2_MASK                                   0x4
#define _ODCONA_ODA3_POSN                                   0x3
#define _ODCONA_ODA3_POSITION                               0x3
#define _ODCONA_ODA3_SIZE                                   0x1
#define _ODCONA_ODA3_LENGTH                                 0x1
#define _ODCONA_ODA3_MASK                                   0x8
#define _ODCONA_ODA4_POSN                                   0x4
#define _ODCONA_ODA4_POSITION                               0x4
#define _ODCONA_ODA4_SIZE                                   0x1
#define _ODCONA_ODA4_LENGTH                                 0x1
#define _ODCONA_ODA4_MASK                                   0x10
#define _ODCONA_ODA5_POSN                                   0x5
#define _ODCONA_ODA5_POSITION                               0x5
#define _ODCONA_ODA5_SIZE                                   0x1
#define _ODCONA_ODA5_LENGTH                                 0x1
#define _ODCONA_ODA5_MASK                                   0x20
#define _ODCONA_ODA6_POSN                                   0x6
#define _ODCONA_ODA6_POSITION                               0x6
#define _ODCONA_ODA6_SIZE                                   0x1
#define _ODCONA_ODA6_LENGTH                                 0x1
#define _ODCONA_ODA6_MASK                                   0x40
#define _ODCONA_ODA7_POSN                                   0x7
#define _ODCONA_ODA7_POSITION                               0x7
#define _ODCONA_ODA7_SIZE                                   0x1
#define _ODCONA_ODA7_LENGTH                                 0x1
#define _ODCONA_ODA7_MASK                                   0x80

// Register: ODCONB
#define ODCONB ODCONB
extern volatile unsigned char           ODCONB              __at(0x28D);
#ifndef _LIB_BUILD
asm("ODCONB equ 028Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ODB0                   :1;
        unsigned ODB1                   :1;
        unsigned ODB2                   :1;
        unsigned ODB3                   :1;
        unsigned ODB4                   :1;
        unsigned ODB5                   :1;
        unsigned ODB6                   :1;
        unsigned ODB7                   :1;
    };
} ODCONBbits_t;
extern volatile ODCONBbits_t ODCONBbits __at(0x28D);
// bitfield macros
#define _ODCONB_ODB0_POSN                                   0x0
#define _ODCONB_ODB0_POSITION                               0x0
#define _ODCONB_ODB0_SIZE                                   0x1
#define _ODCONB_ODB0_LENGTH                                 0x1
#define _ODCONB_ODB0_MASK                                   0x1
#define _ODCONB_ODB1_POSN                                   0x1
#define _ODCONB_ODB1_POSITION                               0x1
#define _ODCONB_ODB1_SIZE                                   0x1
#define _ODCONB_ODB1_LENGTH                                 0x1
#define _ODCONB_ODB1_MASK                                   0x2
#define _ODCONB_ODB2_POSN                                   0x2
#define _ODCONB_ODB2_POSITION                               0x2
#define _ODCONB_ODB2_SIZE                                   0x1
#define _ODCONB_ODB2_LENGTH                                 0x1
#define _ODCONB_ODB2_MASK                                   0x4
#define _ODCONB_ODB3_POSN                                   0x3
#define _ODCONB_ODB3_POSITION                               0x3
#define _ODCONB_ODB3_SIZE                                   0x1
#define _ODCONB_ODB3_LENGTH                                 0x1
#define _ODCONB_ODB3_MASK                                   0x8
#define _ODCONB_ODB4_POSN                                   0x4
#define _ODCONB_ODB4_POSITION                               0x4
#define _ODCONB_ODB4_SIZE                                   0x1
#define _ODCONB_ODB4_LENGTH                                 0x1
#define _ODCONB_ODB4_MASK                                   0x10
#define _ODCONB_ODB5_POSN                                   0x5
#define _ODCONB_ODB5_POSITION                               0x5
#define _ODCONB_ODB5_SIZE                                   0x1
#define _ODCONB_ODB5_LENGTH                                 0x1
#define _ODCONB_ODB5_MASK                                   0x20
#define _ODCONB_ODB6_POSN                                   0x6
#define _ODCONB_ODB6_POSITION                               0x6
#define _ODCONB_ODB6_SIZE                                   0x1
#define _ODCONB_ODB6_LENGTH                                 0x1
#define _ODCONB_ODB6_MASK                                   0x40
#define _ODCONB_ODB7_POSN                                   0x7
#define _ODCONB_ODB7_POSITION                               0x7
#define _ODCONB_ODB7_SIZE                                   0x1
#define _ODCONB_ODB7_LENGTH                                 0x1
#define _ODCONB_ODB7_MASK                                   0x80

// Register: ODCONC
#define ODCONC ODCONC
extern volatile unsigned char           ODCONC              __at(0x28E);
#ifndef _LIB_BUILD
asm("ODCONC equ 028Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ODC0                   :1;
        unsigned ODC1                   :1;
        unsigned ODC2                   :1;
        unsigned ODC3                   :1;
        unsigned ODC4                   :1;
        unsigned ODC5                   :1;
        unsigned ODC6                   :1;
        unsigned ODC7                   :1;
    };
} ODCONCbits_t;
extern volatile ODCONCbits_t ODCONCbits __at(0x28E);
// bitfield macros
#define _ODCONC_ODC0_POSN                                   0x0
#define _ODCONC_ODC0_POSITION                               0x0
#define _ODCONC_ODC0_SIZE                                   0x1
#define _ODCONC_ODC0_LENGTH                                 0x1
#define _ODCONC_ODC0_MASK                                   0x1
#define _ODCONC_ODC1_POSN                                   0x1
#define _ODCONC_ODC1_POSITION                               0x1
#define _ODCONC_ODC1_SIZE                                   0x1
#define _ODCONC_ODC1_LENGTH                                 0x1
#define _ODCONC_ODC1_MASK                                   0x2
#define _ODCONC_ODC2_POSN                                   0x2
#define _ODCONC_ODC2_POSITION                               0x2
#define _ODCONC_ODC2_SIZE                                   0x1
#define _ODCONC_ODC2_LENGTH                                 0x1
#define _ODCONC_ODC2_MASK                                   0x4
#define _ODCONC_ODC3_POSN                                   0x3
#define _ODCONC_ODC3_POSITION                               0x3
#define _ODCONC_ODC3_SIZE                                   0x1
#define _ODCONC_ODC3_LENGTH                                 0x1
#define _ODCONC_ODC3_MASK                                   0x8
#define _ODCONC_ODC4_POSN                                   0x4
#define _ODCONC_ODC4_POSITION                               0x4
#define _ODCONC_ODC4_SIZE                                   0x1
#define _ODCONC_ODC4_LENGTH                                 0x1
#define _ODCONC_ODC4_MASK                                   0x10
#define _ODCONC_ODC5_POSN                                   0x5
#define _ODCONC_ODC5_POSITION                               0x5
#define _ODCONC_ODC5_SIZE                                   0x1
#define _ODCONC_ODC5_LENGTH                                 0x1
#define _ODCONC_ODC5_MASK                                   0x20
#define _ODCONC_ODC6_POSN                                   0x6
#define _ODCONC_ODC6_POSITION                               0x6
#define _ODCONC_ODC6_SIZE                                   0x1
#define _ODCONC_ODC6_LENGTH                                 0x1
#define _ODCONC_ODC6_MASK                                   0x40
#define _ODCONC_ODC7_POSN                                   0x7
#define _ODCONC_ODC7_POSITION                               0x7
#define _ODCONC_ODC7_SIZE                                   0x1
#define _ODCONC_ODC7_LENGTH                                 0x1
#define _ODCONC_ODC7_MASK                                   0x80

// Register: ODCOND
#define ODCOND ODCOND
extern volatile unsigned char           ODCOND              __at(0x28F);
#ifndef _LIB_BUILD
asm("ODCOND equ 028Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ODD0                   :1;
        unsigned ODD1                   :1;
        unsigned ODD2                   :1;
        unsigned ODD3                   :1;
        unsigned ODD4                   :1;
        unsigned ODD5                   :1;
        unsigned ODD6                   :1;
        unsigned ODD7                   :1;
    };
} ODCONDbits_t;
extern volatile ODCONDbits_t ODCONDbits __at(0x28F);
// bitfield macros
#define _ODCOND_ODD0_POSN                                   0x0
#define _ODCOND_ODD0_POSITION                               0x0
#define _ODCOND_ODD0_SIZE                                   0x1
#define _ODCOND_ODD0_LENGTH                                 0x1
#define _ODCOND_ODD0_MASK                                   0x1
#define _ODCOND_ODD1_POSN                                   0x1
#define _ODCOND_ODD1_POSITION                               0x1
#define _ODCOND_ODD1_SIZE                                   0x1
#define _ODCOND_ODD1_LENGTH                                 0x1
#define _ODCOND_ODD1_MASK                                   0x2
#define _ODCOND_ODD2_POSN                                   0x2
#define _ODCOND_ODD2_POSITION                               0x2
#define _ODCOND_ODD2_SIZE                                   0x1
#define _ODCOND_ODD2_LENGTH                                 0x1
#define _ODCOND_ODD2_MASK                                   0x4
#define _ODCOND_ODD3_POSN                                   0x3
#define _ODCOND_ODD3_POSITION                               0x3
#define _ODCOND_ODD3_SIZE                                   0x1
#define _ODCOND_ODD3_LENGTH                                 0x1
#define _ODCOND_ODD3_MASK                                   0x8
#define _ODCOND_ODD4_POSN                                   0x4
#define _ODCOND_ODD4_POSITION                               0x4
#define _ODCOND_ODD4_SIZE                                   0x1
#define _ODCOND_ODD4_LENGTH                                 0x1
#define _ODCOND_ODD4_MASK                                   0x10
#define _ODCOND_ODD5_POSN                                   0x5
#define _ODCOND_ODD5_POSITION                               0x5
#define _ODCOND_ODD5_SIZE                                   0x1
#define _ODCOND_ODD5_LENGTH                                 0x1
#define _ODCOND_ODD5_MASK                                   0x20
#define _ODCOND_ODD6_POSN                                   0x6
#define _ODCOND_ODD6_POSITION                               0x6
#define _ODCOND_ODD6_SIZE                                   0x1
#define _ODCOND_ODD6_LENGTH                                 0x1
#define _ODCOND_ODD6_MASK                                   0x40
#define _ODCOND_ODD7_POSN                                   0x7
#define _ODCOND_ODD7_POSITION                               0x7
#define _ODCOND_ODD7_SIZE                                   0x1
#define _ODCOND_ODD7_LENGTH                                 0x1
#define _ODCOND_ODD7_MASK                                   0x80

// Register: ODCONE
#define ODCONE ODCONE
extern volatile unsigned char           ODCONE              __at(0x290);
#ifndef _LIB_BUILD
asm("ODCONE equ 0290h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ODE0                   :1;
        unsigned ODE1                   :1;
        unsigned ODE2                   :1;
    };
} ODCONEbits_t;
extern volatile ODCONEbits_t ODCONEbits __at(0x290);
// bitfield macros
#define _ODCONE_ODE0_POSN                                   0x0
#define _ODCONE_ODE0_POSITION                               0x0
#define _ODCONE_ODE0_SIZE                                   0x1
#define _ODCONE_ODE0_LENGTH                                 0x1
#define _ODCONE_ODE0_MASK                                   0x1
#define _ODCONE_ODE1_POSN                                   0x1
#define _ODCONE_ODE1_POSITION                               0x1
#define _ODCONE_ODE1_SIZE                                   0x1
#define _ODCONE_ODE1_LENGTH                                 0x1
#define _ODCONE_ODE1_MASK                                   0x2
#define _ODCONE_ODE2_POSN                                   0x2
#define _ODCONE_ODE2_POSITION                               0x2
#define _ODCONE_ODE2_SIZE                                   0x1
#define _ODCONE_ODE2_LENGTH                                 0x1
#define _ODCONE_ODE2_MASK                                   0x4

// Register: CCPR1
#define CCPR1 CCPR1
extern volatile unsigned short          CCPR1               __at(0x291);
#ifndef _LIB_BUILD
asm("CCPR1 equ 0291h");
#endif

// Register: CCPR1L
#define CCPR1L CCPR1L
extern volatile unsigned char           CCPR1L              __at(0x291);
#ifndef _LIB_BUILD
asm("CCPR1L equ 0291h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RL                     :8;
    };
} CCPR1Lbits_t;
extern volatile CCPR1Lbits_t CCPR1Lbits __at(0x291);
// bitfield macros
#define _CCPR1L_RL_POSN                                     0x0
#define _CCPR1L_RL_POSITION                                 0x0
#define _CCPR1L_RL_SIZE                                     0x8
#define _CCPR1L_RL_LENGTH                                   0x8
#define _CCPR1L_RL_MASK                                     0xFF

// Register: CCPR1H
#define CCPR1H CCPR1H
extern volatile unsigned char           CCPR1H              __at(0x292);
#ifndef _LIB_BUILD
asm("CCPR1H equ 0292h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RH                     :8;
    };
} CCPR1Hbits_t;
extern volatile CCPR1Hbits_t CCPR1Hbits __at(0x292);
// bitfield macros
#define _CCPR1H_RH_POSN                                     0x0
#define _CCPR1H_RH_POSITION                                 0x0
#define _CCPR1H_RH_SIZE                                     0x8
#define _CCPR1H_RH_LENGTH                                   0x8
#define _CCPR1H_RH_MASK                                     0xFF

// Register: CCP1CON
#define CCP1CON CCP1CON
extern volatile unsigned char           CCP1CON             __at(0x293);
#ifndef _LIB_BUILD
asm("CCP1CON equ 0293h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MODE                   :4;
        unsigned FMT                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
        unsigned MODE3                  :1;
    };
    struct {
        unsigned CCP1MODE               :4;
        unsigned CCP1FMT                :1;
        unsigned CCP1OUT                :1;
        unsigned                        :1;
        unsigned CCP1EN                 :1;
    };
    struct {
        unsigned CCP1MODE0              :1;
        unsigned CCP1MODE1              :1;
        unsigned CCP1MODE2              :1;
        unsigned CCP1MODE3              :1;
    };
} CCP1CONbits_t;
extern volatile CCP1CONbits_t CCP1CONbits __at(0x293);
// bitfield macros
#define _CCP1CON_MODE_POSN                                  0x0
#define _CCP1CON_MODE_POSITION                              0x0
#define _CCP1CON_MODE_SIZE                                  0x4
#define _CCP1CON_MODE_LENGTH                                0x4
#define _CCP1CON_MODE_MASK                                  0xF
#define _CCP1CON_FMT_POSN                                   0x4
#define _CCP1CON_FMT_POSITION                               0x4
#define _CCP1CON_FMT_SIZE                                   0x1
#define _CCP1CON_FMT_LENGTH                                 0x1
#define _CCP1CON_FMT_MASK                                   0x10
#define _CCP1CON_OUT_POSN                                   0x5
#define _CCP1CON_OUT_POSITION                               0x5
#define _CCP1CON_OUT_SIZE                                   0x1
#define _CCP1CON_OUT_LENGTH                                 0x1
#define _CCP1CON_OUT_MASK                                   0x20
#define _CCP1CON_EN_POSN                                    0x7
#define _CCP1CON_EN_POSITION                                0x7
#define _CCP1CON_EN_SIZE                                    0x1
#define _CCP1CON_EN_LENGTH                                  0x1
#define _CCP1CON_EN_MASK                                    0x80
#define _CCP1CON_MODE0_POSN                                 0x0
#define _CCP1CON_MODE0_POSITION                             0x0
#define _CCP1CON_MODE0_SIZE                                 0x1
#define _CCP1CON_MODE0_LENGTH                               0x1
#define _CCP1CON_MODE0_MASK                                 0x1
#define _CCP1CON_MODE1_POSN                                 0x1
#define _CCP1CON_MODE1_POSITION                             0x1
#define _CCP1CON_MODE1_SIZE                                 0x1
#define _CCP1CON_MODE1_LENGTH                               0x1
#define _CCP1CON_MODE1_MASK                                 0x2
#define _CCP1CON_MODE2_POSN                                 0x2
#define _CCP1CON_MODE2_POSITION                             0x2
#define _CCP1CON_MODE2_SIZE                                 0x1
#define _CCP1CON_MODE2_LENGTH                               0x1
#define _CCP1CON_MODE2_MASK                                 0x4
#define _CCP1CON_MODE3_POSN                                 0x3
#define _CCP1CON_MODE3_POSITION                             0x3
#define _CCP1CON_MODE3_SIZE                                 0x1
#define _CCP1CON_MODE3_LENGTH                               0x1
#define _CCP1CON_MODE3_MASK                                 0x8
#define _CCP1CON_CCP1MODE_POSN                              0x0
#define _CCP1CON_CCP1MODE_POSITION                          0x0
#define _CCP1CON_CCP1MODE_SIZE                              0x4
#define _CCP1CON_CCP1MODE_LENGTH                            0x4
#define _CCP1CON_CCP1MODE_MASK                              0xF
#define _CCP1CON_CCP1FMT_POSN                               0x4
#define _CCP1CON_CCP1FMT_POSITION                           0x4
#define _CCP1CON_CCP1FMT_SIZE                               0x1
#define _CCP1CON_CCP1FMT_LENGTH                             0x1
#define _CCP1CON_CCP1FMT_MASK                               0x10
#define _CCP1CON_CCP1OUT_POSN                               0x5
#define _CCP1CON_CCP1OUT_POSITION                           0x5
#define _CCP1CON_CCP1OUT_SIZE                               0x1
#define _CCP1CON_CCP1OUT_LENGTH                             0x1
#define _CCP1CON_CCP1OUT_MASK                               0x20
#define _CCP1CON_CCP1EN_POSN                                0x7
#define _CCP1CON_CCP1EN_POSITION                            0x7
#define _CCP1CON_CCP1EN_SIZE                                0x1
#define _CCP1CON_CCP1EN_LENGTH                              0x1
#define _CCP1CON_CCP1EN_MASK                                0x80
#define _CCP1CON_CCP1MODE0_POSN                             0x0
#define _CCP1CON_CCP1MODE0_POSITION                         0x0
#define _CCP1CON_CCP1MODE0_SIZE                             0x1
#define _CCP1CON_CCP1MODE0_LENGTH                           0x1
#define _CCP1CON_CCP1MODE0_MASK                             0x1
#define _CCP1CON_CCP1MODE1_POSN                             0x1
#define _CCP1CON_CCP1MODE1_POSITION                         0x1
#define _CCP1CON_CCP1MODE1_SIZE                             0x1
#define _CCP1CON_CCP1MODE1_LENGTH                           0x1
#define _CCP1CON_CCP1MODE1_MASK                             0x2
#define _CCP1CON_CCP1MODE2_POSN                             0x2
#define _CCP1CON_CCP1MODE2_POSITION                         0x2
#define _CCP1CON_CCP1MODE2_SIZE                             0x1
#define _CCP1CON_CCP1MODE2_LENGTH                           0x1
#define _CCP1CON_CCP1MODE2_MASK                             0x4
#define _CCP1CON_CCP1MODE3_POSN                             0x3
#define _CCP1CON_CCP1MODE3_POSITION                         0x3
#define _CCP1CON_CCP1MODE3_SIZE                             0x1
#define _CCP1CON_CCP1MODE3_LENGTH                           0x1
#define _CCP1CON_CCP1MODE3_MASK                             0x8

// Register: CCP1CAP
#define CCP1CAP CCP1CAP
extern volatile unsigned char           CCP1CAP             __at(0x294);
#ifndef _LIB_BUILD
asm("CCP1CAP equ 0294h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CTS                    :8;
    };
    struct {
        unsigned CTS0                   :1;
        unsigned CTS1                   :1;
        unsigned CTS2                   :1;
        unsigned CTS3                   :1;
    };
    struct {
        unsigned CCP1CTS                :8;
    };
    struct {
        unsigned CCP1CTS0               :1;
        unsigned CCP1CTS1               :1;
        unsigned CCP1CTS2               :1;
        unsigned CCP1CTS3               :1;
    };
} CCP1CAPbits_t;
extern volatile CCP1CAPbits_t CCP1CAPbits __at(0x294);
// bitfield macros
#define _CCP1CAP_CTS_POSN                                   0x0
#define _CCP1CAP_CTS_POSITION                               0x0
#define _CCP1CAP_CTS_SIZE                                   0x8
#define _CCP1CAP_CTS_LENGTH                                 0x8
#define _CCP1CAP_CTS_MASK                                   0xFF
#define _CCP1CAP_CTS0_POSN                                  0x0
#define _CCP1CAP_CTS0_POSITION                              0x0
#define _CCP1CAP_CTS0_SIZE                                  0x1
#define _CCP1CAP_CTS0_LENGTH                                0x1
#define _CCP1CAP_CTS0_MASK                                  0x1
#define _CCP1CAP_CTS1_POSN                                  0x1
#define _CCP1CAP_CTS1_POSITION                              0x1
#define _CCP1CAP_CTS1_SIZE                                  0x1
#define _CCP1CAP_CTS1_LENGTH                                0x1
#define _CCP1CAP_CTS1_MASK                                  0x2
#define _CCP1CAP_CTS2_POSN                                  0x2
#define _CCP1CAP_CTS2_POSITION                              0x2
#define _CCP1CAP_CTS2_SIZE                                  0x1
#define _CCP1CAP_CTS2_LENGTH                                0x1
#define _CCP1CAP_CTS2_MASK                                  0x4
#define _CCP1CAP_CTS3_POSN                                  0x3
#define _CCP1CAP_CTS3_POSITION                              0x3
#define _CCP1CAP_CTS3_SIZE                                  0x1
#define _CCP1CAP_CTS3_LENGTH                                0x1
#define _CCP1CAP_CTS3_MASK                                  0x8
#define _CCP1CAP_CCP1CTS_POSN                               0x0
#define _CCP1CAP_CCP1CTS_POSITION                           0x0
#define _CCP1CAP_CCP1CTS_SIZE                               0x8
#define _CCP1CAP_CCP1CTS_LENGTH                             0x8
#define _CCP1CAP_CCP1CTS_MASK                               0xFF
#define _CCP1CAP_CCP1CTS0_POSN                              0x0
#define _CCP1CAP_CCP1CTS0_POSITION                          0x0
#define _CCP1CAP_CCP1CTS0_SIZE                              0x1
#define _CCP1CAP_CCP1CTS0_LENGTH                            0x1
#define _CCP1CAP_CCP1CTS0_MASK                              0x1
#define _CCP1CAP_CCP1CTS1_POSN                              0x1
#define _CCP1CAP_CCP1CTS1_POSITION                          0x1
#define _CCP1CAP_CCP1CTS1_SIZE                              0x1
#define _CCP1CAP_CCP1CTS1_LENGTH                            0x1
#define _CCP1CAP_CCP1CTS1_MASK                              0x2
#define _CCP1CAP_CCP1CTS2_POSN                              0x2
#define _CCP1CAP_CCP1CTS2_POSITION                          0x2
#define _CCP1CAP_CCP1CTS2_SIZE                              0x1
#define _CCP1CAP_CCP1CTS2_LENGTH                            0x1
#define _CCP1CAP_CCP1CTS2_MASK                              0x4
#define _CCP1CAP_CCP1CTS3_POSN                              0x3
#define _CCP1CAP_CCP1CTS3_POSITION                          0x3
#define _CCP1CAP_CCP1CTS3_SIZE                              0x1
#define _CCP1CAP_CCP1CTS3_LENGTH                            0x1
#define _CCP1CAP_CCP1CTS3_MASK                              0x8

// Register: CCPR2
#define CCPR2 CCPR2
extern volatile unsigned short          CCPR2               __at(0x295);
#ifndef _LIB_BUILD
asm("CCPR2 equ 0295h");
#endif

// Register: CCPR2L
#define CCPR2L CCPR2L
extern volatile unsigned char           CCPR2L              __at(0x295);
#ifndef _LIB_BUILD
asm("CCPR2L equ 0295h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RL                     :8;
    };
} CCPR2Lbits_t;
extern volatile CCPR2Lbits_t CCPR2Lbits __at(0x295);
// bitfield macros
#define _CCPR2L_RL_POSN                                     0x0
#define _CCPR2L_RL_POSITION                                 0x0
#define _CCPR2L_RL_SIZE                                     0x8
#define _CCPR2L_RL_LENGTH                                   0x8
#define _CCPR2L_RL_MASK                                     0xFF

// Register: CCPR2H
#define CCPR2H CCPR2H
extern volatile unsigned char           CCPR2H              __at(0x296);
#ifndef _LIB_BUILD
asm("CCPR2H equ 0296h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RH                     :8;
    };
} CCPR2Hbits_t;
extern volatile CCPR2Hbits_t CCPR2Hbits __at(0x296);
// bitfield macros
#define _CCPR2H_RH_POSN                                     0x0
#define _CCPR2H_RH_POSITION                                 0x0
#define _CCPR2H_RH_SIZE                                     0x8
#define _CCPR2H_RH_LENGTH                                   0x8
#define _CCPR2H_RH_MASK                                     0xFF

// Register: CCP2CON
#define CCP2CON CCP2CON
extern volatile unsigned char           CCP2CON             __at(0x297);
#ifndef _LIB_BUILD
asm("CCP2CON equ 0297h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MODE                   :4;
        unsigned FMT                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
        unsigned MODE3                  :1;
    };
    struct {
        unsigned CCP2MODE               :4;
        unsigned CCP2FMT                :1;
        unsigned CCP2OUT                :1;
        unsigned                        :1;
        unsigned CCP2EN                 :1;
    };
    struct {
        unsigned CCP2MODE0              :1;
        unsigned CCP2MODE1              :1;
        unsigned CCP2MODE2              :1;
        unsigned CCP2MODE3              :1;
    };
} CCP2CONbits_t;
extern volatile CCP2CONbits_t CCP2CONbits __at(0x297);
// bitfield macros
#define _CCP2CON_MODE_POSN                                  0x0
#define _CCP2CON_MODE_POSITION                              0x0
#define _CCP2CON_MODE_SIZE                                  0x4
#define _CCP2CON_MODE_LENGTH                                0x4
#define _CCP2CON_MODE_MASK                                  0xF
#define _CCP2CON_FMT_POSN                                   0x4
#define _CCP2CON_FMT_POSITION                               0x4
#define _CCP2CON_FMT_SIZE                                   0x1
#define _CCP2CON_FMT_LENGTH                                 0x1
#define _CCP2CON_FMT_MASK                                   0x10
#define _CCP2CON_OUT_POSN                                   0x5
#define _CCP2CON_OUT_POSITION                               0x5
#define _CCP2CON_OUT_SIZE                                   0x1
#define _CCP2CON_OUT_LENGTH                                 0x1
#define _CCP2CON_OUT_MASK                                   0x20
#define _CCP2CON_EN_POSN                                    0x7
#define _CCP2CON_EN_POSITION                                0x7
#define _CCP2CON_EN_SIZE                                    0x1
#define _CCP2CON_EN_LENGTH                                  0x1
#define _CCP2CON_EN_MASK                                    0x80
#define _CCP2CON_MODE0_POSN                                 0x0
#define _CCP2CON_MODE0_POSITION                             0x0
#define _CCP2CON_MODE0_SIZE                                 0x1
#define _CCP2CON_MODE0_LENGTH                               0x1
#define _CCP2CON_MODE0_MASK                                 0x1
#define _CCP2CON_MODE1_POSN                                 0x1
#define _CCP2CON_MODE1_POSITION                             0x1
#define _CCP2CON_MODE1_SIZE                                 0x1
#define _CCP2CON_MODE1_LENGTH                               0x1
#define _CCP2CON_MODE1_MASK                                 0x2
#define _CCP2CON_MODE2_POSN                                 0x2
#define _CCP2CON_MODE2_POSITION                             0x2
#define _CCP2CON_MODE2_SIZE                                 0x1
#define _CCP2CON_MODE2_LENGTH                               0x1
#define _CCP2CON_MODE2_MASK                                 0x4
#define _CCP2CON_MODE3_POSN                                 0x3
#define _CCP2CON_MODE3_POSITION                             0x3
#define _CCP2CON_MODE3_SIZE                                 0x1
#define _CCP2CON_MODE3_LENGTH                               0x1
#define _CCP2CON_MODE3_MASK                                 0x8
#define _CCP2CON_CCP2MODE_POSN                              0x0
#define _CCP2CON_CCP2MODE_POSITION                          0x0
#define _CCP2CON_CCP2MODE_SIZE                              0x4
#define _CCP2CON_CCP2MODE_LENGTH                            0x4
#define _CCP2CON_CCP2MODE_MASK                              0xF
#define _CCP2CON_CCP2FMT_POSN                               0x4
#define _CCP2CON_CCP2FMT_POSITION                           0x4
#define _CCP2CON_CCP2FMT_SIZE                               0x1
#define _CCP2CON_CCP2FMT_LENGTH                             0x1
#define _CCP2CON_CCP2FMT_MASK                               0x10
#define _CCP2CON_CCP2OUT_POSN                               0x5
#define _CCP2CON_CCP2OUT_POSITION                           0x5
#define _CCP2CON_CCP2OUT_SIZE                               0x1
#define _CCP2CON_CCP2OUT_LENGTH                             0x1
#define _CCP2CON_CCP2OUT_MASK                               0x20
#define _CCP2CON_CCP2EN_POSN                                0x7
#define _CCP2CON_CCP2EN_POSITION                            0x7
#define _CCP2CON_CCP2EN_SIZE                                0x1
#define _CCP2CON_CCP2EN_LENGTH                              0x1
#define _CCP2CON_CCP2EN_MASK                                0x80
#define _CCP2CON_CCP2MODE0_POSN                             0x0
#define _CCP2CON_CCP2MODE0_POSITION                         0x0
#define _CCP2CON_CCP2MODE0_SIZE                             0x1
#define _CCP2CON_CCP2MODE0_LENGTH                           0x1
#define _CCP2CON_CCP2MODE0_MASK                             0x1
#define _CCP2CON_CCP2MODE1_POSN                             0x1
#define _CCP2CON_CCP2MODE1_POSITION                         0x1
#define _CCP2CON_CCP2MODE1_SIZE                             0x1
#define _CCP2CON_CCP2MODE1_LENGTH                           0x1
#define _CCP2CON_CCP2MODE1_MASK                             0x2
#define _CCP2CON_CCP2MODE2_POSN                             0x2
#define _CCP2CON_CCP2MODE2_POSITION                         0x2
#define _CCP2CON_CCP2MODE2_SIZE                             0x1
#define _CCP2CON_CCP2MODE2_LENGTH                           0x1
#define _CCP2CON_CCP2MODE2_MASK                             0x4
#define _CCP2CON_CCP2MODE3_POSN                             0x3
#define _CCP2CON_CCP2MODE3_POSITION                         0x3
#define _CCP2CON_CCP2MODE3_SIZE                             0x1
#define _CCP2CON_CCP2MODE3_LENGTH                           0x1
#define _CCP2CON_CCP2MODE3_MASK                             0x8

// Register: CCP2CAP
#define CCP2CAP CCP2CAP
extern volatile unsigned char           CCP2CAP             __at(0x298);
#ifndef _LIB_BUILD
asm("CCP2CAP equ 0298h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CTS                    :8;
    };
    struct {
        unsigned CTS0                   :1;
        unsigned CTS1                   :1;
        unsigned CTS2                   :1;
        unsigned CTS3                   :1;
    };
    struct {
        unsigned CCP2CTS                :8;
    };
    struct {
        unsigned CCP2CTS0               :1;
        unsigned CCP2CTS1               :1;
        unsigned CCP2CTS2               :1;
        unsigned CCP2CTS3               :1;
    };
} CCP2CAPbits_t;
extern volatile CCP2CAPbits_t CCP2CAPbits __at(0x298);
// bitfield macros
#define _CCP2CAP_CTS_POSN                                   0x0
#define _CCP2CAP_CTS_POSITION                               0x0
#define _CCP2CAP_CTS_SIZE                                   0x8
#define _CCP2CAP_CTS_LENGTH                                 0x8
#define _CCP2CAP_CTS_MASK                                   0xFF
#define _CCP2CAP_CTS0_POSN                                  0x0
#define _CCP2CAP_CTS0_POSITION                              0x0
#define _CCP2CAP_CTS0_SIZE                                  0x1
#define _CCP2CAP_CTS0_LENGTH                                0x1
#define _CCP2CAP_CTS0_MASK                                  0x1
#define _CCP2CAP_CTS1_POSN                                  0x1
#define _CCP2CAP_CTS1_POSITION                              0x1
#define _CCP2CAP_CTS1_SIZE                                  0x1
#define _CCP2CAP_CTS1_LENGTH                                0x1
#define _CCP2CAP_CTS1_MASK                                  0x2
#define _CCP2CAP_CTS2_POSN                                  0x2
#define _CCP2CAP_CTS2_POSITION                              0x2
#define _CCP2CAP_CTS2_SIZE                                  0x1
#define _CCP2CAP_CTS2_LENGTH                                0x1
#define _CCP2CAP_CTS2_MASK                                  0x4
#define _CCP2CAP_CTS3_POSN                                  0x3
#define _CCP2CAP_CTS3_POSITION                              0x3
#define _CCP2CAP_CTS3_SIZE                                  0x1
#define _CCP2CAP_CTS3_LENGTH                                0x1
#define _CCP2CAP_CTS3_MASK                                  0x8
#define _CCP2CAP_CCP2CTS_POSN                               0x0
#define _CCP2CAP_CCP2CTS_POSITION                           0x0
#define _CCP2CAP_CCP2CTS_SIZE                               0x8
#define _CCP2CAP_CCP2CTS_LENGTH                             0x8
#define _CCP2CAP_CCP2CTS_MASK                               0xFF
#define _CCP2CAP_CCP2CTS0_POSN                              0x0
#define _CCP2CAP_CCP2CTS0_POSITION                          0x0
#define _CCP2CAP_CCP2CTS0_SIZE                              0x1
#define _CCP2CAP_CCP2CTS0_LENGTH                            0x1
#define _CCP2CAP_CCP2CTS0_MASK                              0x1
#define _CCP2CAP_CCP2CTS1_POSN                              0x1
#define _CCP2CAP_CCP2CTS1_POSITION                          0x1
#define _CCP2CAP_CCP2CTS1_SIZE                              0x1
#define _CCP2CAP_CCP2CTS1_LENGTH                            0x1
#define _CCP2CAP_CCP2CTS1_MASK                              0x2
#define _CCP2CAP_CCP2CTS2_POSN                              0x2
#define _CCP2CAP_CCP2CTS2_POSITION                          0x2
#define _CCP2CAP_CCP2CTS2_SIZE                              0x1
#define _CCP2CAP_CCP2CTS2_LENGTH                            0x1
#define _CCP2CAP_CCP2CTS2_MASK                              0x4
#define _CCP2CAP_CCP2CTS3_POSN                              0x3
#define _CCP2CAP_CCP2CTS3_POSITION                          0x3
#define _CCP2CAP_CCP2CTS3_SIZE                              0x1
#define _CCP2CAP_CCP2CTS3_LENGTH                            0x1
#define _CCP2CAP_CCP2CTS3_MASK                              0x8

// Register: CCPR7
#define CCPR7 CCPR7
extern volatile unsigned short          CCPR7               __at(0x299);
#ifndef _LIB_BUILD
asm("CCPR7 equ 0299h");
#endif

// Register: CCPR7L
#define CCPR7L CCPR7L
extern volatile unsigned char           CCPR7L              __at(0x299);
#ifndef _LIB_BUILD
asm("CCPR7L equ 0299h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RL                     :8;
    };
} CCPR7Lbits_t;
extern volatile CCPR7Lbits_t CCPR7Lbits __at(0x299);
// bitfield macros
#define _CCPR7L_RL_POSN                                     0x0
#define _CCPR7L_RL_POSITION                                 0x0
#define _CCPR7L_RL_SIZE                                     0x8
#define _CCPR7L_RL_LENGTH                                   0x8
#define _CCPR7L_RL_MASK                                     0xFF

// Register: CCPR7H
#define CCPR7H CCPR7H
extern volatile unsigned char           CCPR7H              __at(0x29A);
#ifndef _LIB_BUILD
asm("CCPR7H equ 029Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RH                     :8;
    };
} CCPR7Hbits_t;
extern volatile CCPR7Hbits_t CCPR7Hbits __at(0x29A);
// bitfield macros
#define _CCPR7H_RH_POSN                                     0x0
#define _CCPR7H_RH_POSITION                                 0x0
#define _CCPR7H_RH_SIZE                                     0x8
#define _CCPR7H_RH_LENGTH                                   0x8
#define _CCPR7H_RH_MASK                                     0xFF

// Register: CCP7CON
#define CCP7CON CCP7CON
extern volatile unsigned char           CCP7CON             __at(0x29B);
#ifndef _LIB_BUILD
asm("CCP7CON equ 029Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MODE                   :4;
        unsigned FMT                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
        unsigned MODE3                  :1;
    };
    struct {
        unsigned CCP7MODE               :4;
        unsigned CCP7FMT                :1;
        unsigned CCP7OUT                :1;
        unsigned                        :1;
        unsigned CCP7EN                 :1;
    };
    struct {
        unsigned CCP7MODE0              :1;
        unsigned CCP7MODE1              :1;
        unsigned CCP7MODE2              :1;
        unsigned CCP7MODE3              :1;
    };
} CCP7CONbits_t;
extern volatile CCP7CONbits_t CCP7CONbits __at(0x29B);
// bitfield macros
#define _CCP7CON_MODE_POSN                                  0x0
#define _CCP7CON_MODE_POSITION                              0x0
#define _CCP7CON_MODE_SIZE                                  0x4
#define _CCP7CON_MODE_LENGTH                                0x4
#define _CCP7CON_MODE_MASK                                  0xF
#define _CCP7CON_FMT_POSN                                   0x4
#define _CCP7CON_FMT_POSITION                               0x4
#define _CCP7CON_FMT_SIZE                                   0x1
#define _CCP7CON_FMT_LENGTH                                 0x1
#define _CCP7CON_FMT_MASK                                   0x10
#define _CCP7CON_OUT_POSN                                   0x5
#define _CCP7CON_OUT_POSITION                               0x5
#define _CCP7CON_OUT_SIZE                                   0x1
#define _CCP7CON_OUT_LENGTH                                 0x1
#define _CCP7CON_OUT_MASK                                   0x20
#define _CCP7CON_EN_POSN                                    0x7
#define _CCP7CON_EN_POSITION                                0x7
#define _CCP7CON_EN_SIZE                                    0x1
#define _CCP7CON_EN_LENGTH                                  0x1
#define _CCP7CON_EN_MASK                                    0x80
#define _CCP7CON_MODE0_POSN                                 0x0
#define _CCP7CON_MODE0_POSITION                             0x0
#define _CCP7CON_MODE0_SIZE                                 0x1
#define _CCP7CON_MODE0_LENGTH                               0x1
#define _CCP7CON_MODE0_MASK                                 0x1
#define _CCP7CON_MODE1_POSN                                 0x1
#define _CCP7CON_MODE1_POSITION                             0x1
#define _CCP7CON_MODE1_SIZE                                 0x1
#define _CCP7CON_MODE1_LENGTH                               0x1
#define _CCP7CON_MODE1_MASK                                 0x2
#define _CCP7CON_MODE2_POSN                                 0x2
#define _CCP7CON_MODE2_POSITION                             0x2
#define _CCP7CON_MODE2_SIZE                                 0x1
#define _CCP7CON_MODE2_LENGTH                               0x1
#define _CCP7CON_MODE2_MASK                                 0x4
#define _CCP7CON_MODE3_POSN                                 0x3
#define _CCP7CON_MODE3_POSITION                             0x3
#define _CCP7CON_MODE3_SIZE                                 0x1
#define _CCP7CON_MODE3_LENGTH                               0x1
#define _CCP7CON_MODE3_MASK                                 0x8
#define _CCP7CON_CCP7MODE_POSN                              0x0
#define _CCP7CON_CCP7MODE_POSITION                          0x0
#define _CCP7CON_CCP7MODE_SIZE                              0x4
#define _CCP7CON_CCP7MODE_LENGTH                            0x4
#define _CCP7CON_CCP7MODE_MASK                              0xF
#define _CCP7CON_CCP7FMT_POSN                               0x4
#define _CCP7CON_CCP7FMT_POSITION                           0x4
#define _CCP7CON_CCP7FMT_SIZE                               0x1
#define _CCP7CON_CCP7FMT_LENGTH                             0x1
#define _CCP7CON_CCP7FMT_MASK                               0x10
#define _CCP7CON_CCP7OUT_POSN                               0x5
#define _CCP7CON_CCP7OUT_POSITION                           0x5
#define _CCP7CON_CCP7OUT_SIZE                               0x1
#define _CCP7CON_CCP7OUT_LENGTH                             0x1
#define _CCP7CON_CCP7OUT_MASK                               0x20
#define _CCP7CON_CCP7EN_POSN                                0x7
#define _CCP7CON_CCP7EN_POSITION                            0x7
#define _CCP7CON_CCP7EN_SIZE                                0x1
#define _CCP7CON_CCP7EN_LENGTH                              0x1
#define _CCP7CON_CCP7EN_MASK                                0x80
#define _CCP7CON_CCP7MODE0_POSN                             0x0
#define _CCP7CON_CCP7MODE0_POSITION                         0x0
#define _CCP7CON_CCP7MODE0_SIZE                             0x1
#define _CCP7CON_CCP7MODE0_LENGTH                           0x1
#define _CCP7CON_CCP7MODE0_MASK                             0x1
#define _CCP7CON_CCP7MODE1_POSN                             0x1
#define _CCP7CON_CCP7MODE1_POSITION                         0x1
#define _CCP7CON_CCP7MODE1_SIZE                             0x1
#define _CCP7CON_CCP7MODE1_LENGTH                           0x1
#define _CCP7CON_CCP7MODE1_MASK                             0x2
#define _CCP7CON_CCP7MODE2_POSN                             0x2
#define _CCP7CON_CCP7MODE2_POSITION                         0x2
#define _CCP7CON_CCP7MODE2_SIZE                             0x1
#define _CCP7CON_CCP7MODE2_LENGTH                           0x1
#define _CCP7CON_CCP7MODE2_MASK                             0x4
#define _CCP7CON_CCP7MODE3_POSN                             0x3
#define _CCP7CON_CCP7MODE3_POSITION                         0x3
#define _CCP7CON_CCP7MODE3_SIZE                             0x1
#define _CCP7CON_CCP7MODE3_LENGTH                           0x1
#define _CCP7CON_CCP7MODE3_MASK                             0x8

// Register: CCP7CAP
#define CCP7CAP CCP7CAP
extern volatile unsigned char           CCP7CAP             __at(0x29C);
#ifndef _LIB_BUILD
asm("CCP7CAP equ 029Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CTS                    :8;
    };
    struct {
        unsigned CTS0                   :1;
        unsigned CTS1                   :1;
        unsigned CTS2                   :1;
        unsigned CTS3                   :1;
    };
    struct {
        unsigned CCP7CTS                :8;
    };
    struct {
        unsigned CCP7CTS0               :1;
        unsigned CCP7CTS1               :1;
        unsigned CCP7CTS2               :1;
        unsigned CCP7CTS3               :1;
    };
} CCP7CAPbits_t;
extern volatile CCP7CAPbits_t CCP7CAPbits __at(0x29C);
// bitfield macros
#define _CCP7CAP_CTS_POSN                                   0x0
#define _CCP7CAP_CTS_POSITION                               0x0
#define _CCP7CAP_CTS_SIZE                                   0x8
#define _CCP7CAP_CTS_LENGTH                                 0x8
#define _CCP7CAP_CTS_MASK                                   0xFF
#define _CCP7CAP_CTS0_POSN                                  0x0
#define _CCP7CAP_CTS0_POSITION                              0x0
#define _CCP7CAP_CTS0_SIZE                                  0x1
#define _CCP7CAP_CTS0_LENGTH                                0x1
#define _CCP7CAP_CTS0_MASK                                  0x1
#define _CCP7CAP_CTS1_POSN                                  0x1
#define _CCP7CAP_CTS1_POSITION                              0x1
#define _CCP7CAP_CTS1_SIZE                                  0x1
#define _CCP7CAP_CTS1_LENGTH                                0x1
#define _CCP7CAP_CTS1_MASK                                  0x2
#define _CCP7CAP_CTS2_POSN                                  0x2
#define _CCP7CAP_CTS2_POSITION                              0x2
#define _CCP7CAP_CTS2_SIZE                                  0x1
#define _CCP7CAP_CTS2_LENGTH                                0x1
#define _CCP7CAP_CTS2_MASK                                  0x4
#define _CCP7CAP_CTS3_POSN                                  0x3
#define _CCP7CAP_CTS3_POSITION                              0x3
#define _CCP7CAP_CTS3_SIZE                                  0x1
#define _CCP7CAP_CTS3_LENGTH                                0x1
#define _CCP7CAP_CTS3_MASK                                  0x8
#define _CCP7CAP_CCP7CTS_POSN                               0x0
#define _CCP7CAP_CCP7CTS_POSITION                           0x0
#define _CCP7CAP_CCP7CTS_SIZE                               0x8
#define _CCP7CAP_CCP7CTS_LENGTH                             0x8
#define _CCP7CAP_CCP7CTS_MASK                               0xFF
#define _CCP7CAP_CCP7CTS0_POSN                              0x0
#define _CCP7CAP_CCP7CTS0_POSITION                          0x0
#define _CCP7CAP_CCP7CTS0_SIZE                              0x1
#define _CCP7CAP_CCP7CTS0_LENGTH                            0x1
#define _CCP7CAP_CCP7CTS0_MASK                              0x1
#define _CCP7CAP_CCP7CTS1_POSN                              0x1
#define _CCP7CAP_CCP7CTS1_POSITION                          0x1
#define _CCP7CAP_CCP7CTS1_SIZE                              0x1
#define _CCP7CAP_CCP7CTS1_LENGTH                            0x1
#define _CCP7CAP_CCP7CTS1_MASK                              0x2
#define _CCP7CAP_CCP7CTS2_POSN                              0x2
#define _CCP7CAP_CCP7CTS2_POSITION                          0x2
#define _CCP7CAP_CCP7CTS2_SIZE                              0x1
#define _CCP7CAP_CCP7CTS2_LENGTH                            0x1
#define _CCP7CAP_CCP7CTS2_MASK                              0x4
#define _CCP7CAP_CCP7CTS3_POSN                              0x3
#define _CCP7CAP_CCP7CTS3_POSITION                          0x3
#define _CCP7CAP_CCP7CTS3_SIZE                              0x1
#define _CCP7CAP_CCP7CTS3_LENGTH                            0x1
#define _CCP7CAP_CCP7CTS3_MASK                              0x8

// Register: CCPTMRS1
#define CCPTMRS1 CCPTMRS1
extern volatile unsigned char           CCPTMRS1            __at(0x29E);
#ifndef _LIB_BUILD
asm("CCPTMRS1 equ 029Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C1TSEL                 :2;
        unsigned C2TSEL                 :2;
        unsigned C7TSEL                 :2;
        unsigned C8TSEL                 :2;
    };
    struct {
        unsigned C1TSEL0                :1;
        unsigned C1TSEL1                :1;
        unsigned C2TSEL0                :1;
        unsigned C2TSEL1                :1;
        unsigned C7TSEL0                :1;
        unsigned C7TSEL1                :1;
    };
} CCPTMRS1bits_t;
extern volatile CCPTMRS1bits_t CCPTMRS1bits __at(0x29E);
// bitfield macros
#define _CCPTMRS1_C1TSEL_POSN                               0x0
#define _CCPTMRS1_C1TSEL_POSITION                           0x0
#define _CCPTMRS1_C1TSEL_SIZE                               0x2
#define _CCPTMRS1_C1TSEL_LENGTH                             0x2
#define _CCPTMRS1_C1TSEL_MASK                               0x3
#define _CCPTMRS1_C2TSEL_POSN                               0x2
#define _CCPTMRS1_C2TSEL_POSITION                           0x2
#define _CCPTMRS1_C2TSEL_SIZE                               0x2
#define _CCPTMRS1_C2TSEL_LENGTH                             0x2
#define _CCPTMRS1_C2TSEL_MASK                               0xC
#define _CCPTMRS1_C7TSEL_POSN                               0x4
#define _CCPTMRS1_C7TSEL_POSITION                           0x4
#define _CCPTMRS1_C7TSEL_SIZE                               0x2
#define _CCPTMRS1_C7TSEL_LENGTH                             0x2
#define _CCPTMRS1_C7TSEL_MASK                               0x30
#define _CCPTMRS1_C8TSEL_POSN                               0x6
#define _CCPTMRS1_C8TSEL_POSITION                           0x6
#define _CCPTMRS1_C8TSEL_SIZE                               0x2
#define _CCPTMRS1_C8TSEL_LENGTH                             0x2
#define _CCPTMRS1_C8TSEL_MASK                               0xC0
#define _CCPTMRS1_C1TSEL0_POSN                              0x0
#define _CCPTMRS1_C1TSEL0_POSITION                          0x0
#define _CCPTMRS1_C1TSEL0_SIZE                              0x1
#define _CCPTMRS1_C1TSEL0_LENGTH                            0x1
#define _CCPTMRS1_C1TSEL0_MASK                              0x1
#define _CCPTMRS1_C1TSEL1_POSN                              0x1
#define _CCPTMRS1_C1TSEL1_POSITION                          0x1
#define _CCPTMRS1_C1TSEL1_SIZE                              0x1
#define _CCPTMRS1_C1TSEL1_LENGTH                            0x1
#define _CCPTMRS1_C1TSEL1_MASK                              0x2
#define _CCPTMRS1_C2TSEL0_POSN                              0x2
#define _CCPTMRS1_C2TSEL0_POSITION                          0x2
#define _CCPTMRS1_C2TSEL0_SIZE                              0x1
#define _CCPTMRS1_C2TSEL0_LENGTH                            0x1
#define _CCPTMRS1_C2TSEL0_MASK                              0x4
#define _CCPTMRS1_C2TSEL1_POSN                              0x3
#define _CCPTMRS1_C2TSEL1_POSITION                          0x3
#define _CCPTMRS1_C2TSEL1_SIZE                              0x1
#define _CCPTMRS1_C2TSEL1_LENGTH                            0x1
#define _CCPTMRS1_C2TSEL1_MASK                              0x8
#define _CCPTMRS1_C7TSEL0_POSN                              0x4
#define _CCPTMRS1_C7TSEL0_POSITION                          0x4
#define _CCPTMRS1_C7TSEL0_SIZE                              0x1
#define _CCPTMRS1_C7TSEL0_LENGTH                            0x1
#define _CCPTMRS1_C7TSEL0_MASK                              0x10
#define _CCPTMRS1_C7TSEL1_POSN                              0x5
#define _CCPTMRS1_C7TSEL1_POSITION                          0x5
#define _CCPTMRS1_C7TSEL1_SIZE                              0x1
#define _CCPTMRS1_C7TSEL1_LENGTH                            0x1
#define _CCPTMRS1_C7TSEL1_MASK                              0x20

// Register: CCPTMRS2
#define CCPTMRS2 CCPTMRS2
extern volatile unsigned char           CCPTMRS2            __at(0x29F);
#ifndef _LIB_BUILD
asm("CCPTMRS2 equ 029Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned P3TSEL                 :2;
        unsigned P4TSEL                 :2;
        unsigned P9TSEL                 :2;
        unsigned P10TSEL                :2;
    };
    struct {
        unsigned P3TSEL0                :1;
        unsigned P3TSEL1                :1;
        unsigned P4TSEL0                :1;
        unsigned P4TSEL1                :1;
        unsigned P9TSEL0                :1;
        unsigned P9TSEL1                :1;
    };
} CCPTMRS2bits_t;
extern volatile CCPTMRS2bits_t CCPTMRS2bits __at(0x29F);
// bitfield macros
#define _CCPTMRS2_P3TSEL_POSN                               0x0
#define _CCPTMRS2_P3TSEL_POSITION                           0x0
#define _CCPTMRS2_P3TSEL_SIZE                               0x2
#define _CCPTMRS2_P3TSEL_LENGTH                             0x2
#define _CCPTMRS2_P3TSEL_MASK                               0x3
#define _CCPTMRS2_P4TSEL_POSN                               0x2
#define _CCPTMRS2_P4TSEL_POSITION                           0x2
#define _CCPTMRS2_P4TSEL_SIZE                               0x2
#define _CCPTMRS2_P4TSEL_LENGTH                             0x2
#define _CCPTMRS2_P4TSEL_MASK                               0xC
#define _CCPTMRS2_P9TSEL_POSN                               0x4
#define _CCPTMRS2_P9TSEL_POSITION                           0x4
#define _CCPTMRS2_P9TSEL_SIZE                               0x2
#define _CCPTMRS2_P9TSEL_LENGTH                             0x2
#define _CCPTMRS2_P9TSEL_MASK                               0x30
#define _CCPTMRS2_P10TSEL_POSN                              0x6
#define _CCPTMRS2_P10TSEL_POSITION                          0x6
#define _CCPTMRS2_P10TSEL_SIZE                              0x2
#define _CCPTMRS2_P10TSEL_LENGTH                            0x2
#define _CCPTMRS2_P10TSEL_MASK                              0xC0
#define _CCPTMRS2_P3TSEL0_POSN                              0x0
#define _CCPTMRS2_P3TSEL0_POSITION                          0x0
#define _CCPTMRS2_P3TSEL0_SIZE                              0x1
#define _CCPTMRS2_P3TSEL0_LENGTH                            0x1
#define _CCPTMRS2_P3TSEL0_MASK                              0x1
#define _CCPTMRS2_P3TSEL1_POSN                              0x1
#define _CCPTMRS2_P3TSEL1_POSITION                          0x1
#define _CCPTMRS2_P3TSEL1_SIZE                              0x1
#define _CCPTMRS2_P3TSEL1_LENGTH                            0x1
#define _CCPTMRS2_P3TSEL1_MASK                              0x2
#define _CCPTMRS2_P4TSEL0_POSN                              0x2
#define _CCPTMRS2_P4TSEL0_POSITION                          0x2
#define _CCPTMRS2_P4TSEL0_SIZE                              0x1
#define _CCPTMRS2_P4TSEL0_LENGTH                            0x1
#define _CCPTMRS2_P4TSEL0_MASK                              0x4
#define _CCPTMRS2_P4TSEL1_POSN                              0x3
#define _CCPTMRS2_P4TSEL1_POSITION                          0x3
#define _CCPTMRS2_P4TSEL1_SIZE                              0x1
#define _CCPTMRS2_P4TSEL1_LENGTH                            0x1
#define _CCPTMRS2_P4TSEL1_MASK                              0x8
#define _CCPTMRS2_P9TSEL0_POSN                              0x4
#define _CCPTMRS2_P9TSEL0_POSITION                          0x4
#define _CCPTMRS2_P9TSEL0_SIZE                              0x1
#define _CCPTMRS2_P9TSEL0_LENGTH                            0x1
#define _CCPTMRS2_P9TSEL0_MASK                              0x10
#define _CCPTMRS2_P9TSEL1_POSN                              0x5
#define _CCPTMRS2_P9TSEL1_POSITION                          0x5
#define _CCPTMRS2_P9TSEL1_SIZE                              0x1
#define _CCPTMRS2_P9TSEL1_LENGTH                            0x1
#define _CCPTMRS2_P9TSEL1_MASK                              0x20

// Register: SLRCONA
#define SLRCONA SLRCONA
extern volatile unsigned char           SLRCONA             __at(0x30C);
#ifndef _LIB_BUILD
asm("SLRCONA equ 030Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SLRA0                  :1;
        unsigned SLRA1                  :1;
        unsigned SLRA2                  :1;
        unsigned SLRA3                  :1;
        unsigned SLRA4                  :1;
        unsigned SLRA5                  :1;
        unsigned SLRA6                  :1;
        unsigned SLRA7                  :1;
    };
} SLRCONAbits_t;
extern volatile SLRCONAbits_t SLRCONAbits __at(0x30C);
// bitfield macros
#define _SLRCONA_SLRA0_POSN                                 0x0
#define _SLRCONA_SLRA0_POSITION                             0x0
#define _SLRCONA_SLRA0_SIZE                                 0x1
#define _SLRCONA_SLRA0_LENGTH                               0x1
#define _SLRCONA_SLRA0_MASK                                 0x1
#define _SLRCONA_SLRA1_POSN                                 0x1
#define _SLRCONA_SLRA1_POSITION                             0x1
#define _SLRCONA_SLRA1_SIZE                                 0x1
#define _SLRCONA_SLRA1_LENGTH                               0x1
#define _SLRCONA_SLRA1_MASK                                 0x2
#define _SLRCONA_SLRA2_POSN                                 0x2
#define _SLRCONA_SLRA2_POSITION                             0x2
#define _SLRCONA_SLRA2_SIZE                                 0x1
#define _SLRCONA_SLRA2_LENGTH                               0x1
#define _SLRCONA_SLRA2_MASK                                 0x4
#define _SLRCONA_SLRA3_POSN                                 0x3
#define _SLRCONA_SLRA3_POSITION                             0x3
#define _SLRCONA_SLRA3_SIZE                                 0x1
#define _SLRCONA_SLRA3_LENGTH                               0x1
#define _SLRCONA_SLRA3_MASK                                 0x8
#define _SLRCONA_SLRA4_POSN                                 0x4
#define _SLRCONA_SLRA4_POSITION                             0x4
#define _SLRCONA_SLRA4_SIZE                                 0x1
#define _SLRCONA_SLRA4_LENGTH                               0x1
#define _SLRCONA_SLRA4_MASK                                 0x10
#define _SLRCONA_SLRA5_POSN                                 0x5
#define _SLRCONA_SLRA5_POSITION                             0x5
#define _SLRCONA_SLRA5_SIZE                                 0x1
#define _SLRCONA_SLRA5_LENGTH                               0x1
#define _SLRCONA_SLRA5_MASK                                 0x20
#define _SLRCONA_SLRA6_POSN                                 0x6
#define _SLRCONA_SLRA6_POSITION                             0x6
#define _SLRCONA_SLRA6_SIZE                                 0x1
#define _SLRCONA_SLRA6_LENGTH                               0x1
#define _SLRCONA_SLRA6_MASK                                 0x40
#define _SLRCONA_SLRA7_POSN                                 0x7
#define _SLRCONA_SLRA7_POSITION                             0x7
#define _SLRCONA_SLRA7_SIZE                                 0x1
#define _SLRCONA_SLRA7_LENGTH                               0x1
#define _SLRCONA_SLRA7_MASK                                 0x80

// Register: SLRCONB
#define SLRCONB SLRCONB
extern volatile unsigned char           SLRCONB             __at(0x30D);
#ifndef _LIB_BUILD
asm("SLRCONB equ 030Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SLRB0                  :1;
        unsigned SLRB1                  :1;
        unsigned SLRB2                  :1;
        unsigned SLRB3                  :1;
        unsigned SLRB4                  :1;
        unsigned SLRB5                  :1;
        unsigned SLRB6                  :1;
        unsigned SLRB7                  :1;
    };
} SLRCONBbits_t;
extern volatile SLRCONBbits_t SLRCONBbits __at(0x30D);
// bitfield macros
#define _SLRCONB_SLRB0_POSN                                 0x0
#define _SLRCONB_SLRB0_POSITION                             0x0
#define _SLRCONB_SLRB0_SIZE                                 0x1
#define _SLRCONB_SLRB0_LENGTH                               0x1
#define _SLRCONB_SLRB0_MASK                                 0x1
#define _SLRCONB_SLRB1_POSN                                 0x1
#define _SLRCONB_SLRB1_POSITION                             0x1
#define _SLRCONB_SLRB1_SIZE                                 0x1
#define _SLRCONB_SLRB1_LENGTH                               0x1
#define _SLRCONB_SLRB1_MASK                                 0x2
#define _SLRCONB_SLRB2_POSN                                 0x2
#define _SLRCONB_SLRB2_POSITION                             0x2
#define _SLRCONB_SLRB2_SIZE                                 0x1
#define _SLRCONB_SLRB2_LENGTH                               0x1
#define _SLRCONB_SLRB2_MASK                                 0x4
#define _SLRCONB_SLRB3_POSN                                 0x3
#define _SLRCONB_SLRB3_POSITION                             0x3
#define _SLRCONB_SLRB3_SIZE                                 0x1
#define _SLRCONB_SLRB3_LENGTH                               0x1
#define _SLRCONB_SLRB3_MASK                                 0x8
#define _SLRCONB_SLRB4_POSN                                 0x4
#define _SLRCONB_SLRB4_POSITION                             0x4
#define _SLRCONB_SLRB4_SIZE                                 0x1
#define _SLRCONB_SLRB4_LENGTH                               0x1
#define _SLRCONB_SLRB4_MASK                                 0x10
#define _SLRCONB_SLRB5_POSN                                 0x5
#define _SLRCONB_SLRB5_POSITION                             0x5
#define _SLRCONB_SLRB5_SIZE                                 0x1
#define _SLRCONB_SLRB5_LENGTH                               0x1
#define _SLRCONB_SLRB5_MASK                                 0x20
#define _SLRCONB_SLRB6_POSN                                 0x6
#define _SLRCONB_SLRB6_POSITION                             0x6
#define _SLRCONB_SLRB6_SIZE                                 0x1
#define _SLRCONB_SLRB6_LENGTH                               0x1
#define _SLRCONB_SLRB6_MASK                                 0x40
#define _SLRCONB_SLRB7_POSN                                 0x7
#define _SLRCONB_SLRB7_POSITION                             0x7
#define _SLRCONB_SLRB7_SIZE                                 0x1
#define _SLRCONB_SLRB7_LENGTH                               0x1
#define _SLRCONB_SLRB7_MASK                                 0x80

// Register: SLRCONC
#define SLRCONC SLRCONC
extern volatile unsigned char           SLRCONC             __at(0x30E);
#ifndef _LIB_BUILD
asm("SLRCONC equ 030Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SLRC0                  :1;
        unsigned SLRC1                  :1;
        unsigned SLRC2                  :1;
        unsigned SLRC3                  :1;
        unsigned SLRC4                  :1;
        unsigned SLRC5                  :1;
        unsigned SLRC6                  :1;
        unsigned SLRC7                  :1;
    };
} SLRCONCbits_t;
extern volatile SLRCONCbits_t SLRCONCbits __at(0x30E);
// bitfield macros
#define _SLRCONC_SLRC0_POSN                                 0x0
#define _SLRCONC_SLRC0_POSITION                             0x0
#define _SLRCONC_SLRC0_SIZE                                 0x1
#define _SLRCONC_SLRC0_LENGTH                               0x1
#define _SLRCONC_SLRC0_MASK                                 0x1
#define _SLRCONC_SLRC1_POSN                                 0x1
#define _SLRCONC_SLRC1_POSITION                             0x1
#define _SLRCONC_SLRC1_SIZE                                 0x1
#define _SLRCONC_SLRC1_LENGTH                               0x1
#define _SLRCONC_SLRC1_MASK                                 0x2
#define _SLRCONC_SLRC2_POSN                                 0x2
#define _SLRCONC_SLRC2_POSITION                             0x2
#define _SLRCONC_SLRC2_SIZE                                 0x1
#define _SLRCONC_SLRC2_LENGTH                               0x1
#define _SLRCONC_SLRC2_MASK                                 0x4
#define _SLRCONC_SLRC3_POSN                                 0x3
#define _SLRCONC_SLRC3_POSITION                             0x3
#define _SLRCONC_SLRC3_SIZE                                 0x1
#define _SLRCONC_SLRC3_LENGTH                               0x1
#define _SLRCONC_SLRC3_MASK                                 0x8
#define _SLRCONC_SLRC4_POSN                                 0x4
#define _SLRCONC_SLRC4_POSITION                             0x4
#define _SLRCONC_SLRC4_SIZE                                 0x1
#define _SLRCONC_SLRC4_LENGTH                               0x1
#define _SLRCONC_SLRC4_MASK                                 0x10
#define _SLRCONC_SLRC5_POSN                                 0x5
#define _SLRCONC_SLRC5_POSITION                             0x5
#define _SLRCONC_SLRC5_SIZE                                 0x1
#define _SLRCONC_SLRC5_LENGTH                               0x1
#define _SLRCONC_SLRC5_MASK                                 0x20
#define _SLRCONC_SLRC6_POSN                                 0x6
#define _SLRCONC_SLRC6_POSITION                             0x6
#define _SLRCONC_SLRC6_SIZE                                 0x1
#define _SLRCONC_SLRC6_LENGTH                               0x1
#define _SLRCONC_SLRC6_MASK                                 0x40
#define _SLRCONC_SLRC7_POSN                                 0x7
#define _SLRCONC_SLRC7_POSITION                             0x7
#define _SLRCONC_SLRC7_SIZE                                 0x1
#define _SLRCONC_SLRC7_LENGTH                               0x1
#define _SLRCONC_SLRC7_MASK                                 0x80

// Register: SLRCOND
#define SLRCOND SLRCOND
extern volatile unsigned char           SLRCOND             __at(0x30F);
#ifndef _LIB_BUILD
asm("SLRCOND equ 030Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SLRD0                  :1;
        unsigned SLRD1                  :1;
        unsigned SLRD2                  :1;
        unsigned SLRD3                  :1;
        unsigned SLRD4                  :1;
        unsigned SLRD5                  :1;
        unsigned SLRD6                  :1;
        unsigned SLRD7                  :1;
    };
} SLRCONDbits_t;
extern volatile SLRCONDbits_t SLRCONDbits __at(0x30F);
// bitfield macros
#define _SLRCOND_SLRD0_POSN                                 0x0
#define _SLRCOND_SLRD0_POSITION                             0x0
#define _SLRCOND_SLRD0_SIZE                                 0x1
#define _SLRCOND_SLRD0_LENGTH                               0x1
#define _SLRCOND_SLRD0_MASK                                 0x1
#define _SLRCOND_SLRD1_POSN                                 0x1
#define _SLRCOND_SLRD1_POSITION                             0x1
#define _SLRCOND_SLRD1_SIZE                                 0x1
#define _SLRCOND_SLRD1_LENGTH                               0x1
#define _SLRCOND_SLRD1_MASK                                 0x2
#define _SLRCOND_SLRD2_POSN                                 0x2
#define _SLRCOND_SLRD2_POSITION                             0x2
#define _SLRCOND_SLRD2_SIZE                                 0x1
#define _SLRCOND_SLRD2_LENGTH                               0x1
#define _SLRCOND_SLRD2_MASK                                 0x4
#define _SLRCOND_SLRD3_POSN                                 0x3
#define _SLRCOND_SLRD3_POSITION                             0x3
#define _SLRCOND_SLRD3_SIZE                                 0x1
#define _SLRCOND_SLRD3_LENGTH                               0x1
#define _SLRCOND_SLRD3_MASK                                 0x8
#define _SLRCOND_SLRD4_POSN                                 0x4
#define _SLRCOND_SLRD4_POSITION                             0x4
#define _SLRCOND_SLRD4_SIZE                                 0x1
#define _SLRCOND_SLRD4_LENGTH                               0x1
#define _SLRCOND_SLRD4_MASK                                 0x10
#define _SLRCOND_SLRD5_POSN                                 0x5
#define _SLRCOND_SLRD5_POSITION                             0x5
#define _SLRCOND_SLRD5_SIZE                                 0x1
#define _SLRCOND_SLRD5_LENGTH                               0x1
#define _SLRCOND_SLRD5_MASK                                 0x20
#define _SLRCOND_SLRD6_POSN                                 0x6
#define _SLRCOND_SLRD6_POSITION                             0x6
#define _SLRCOND_SLRD6_SIZE                                 0x1
#define _SLRCOND_SLRD6_LENGTH                               0x1
#define _SLRCOND_SLRD6_MASK                                 0x40
#define _SLRCOND_SLRD7_POSN                                 0x7
#define _SLRCOND_SLRD7_POSITION                             0x7
#define _SLRCOND_SLRD7_SIZE                                 0x1
#define _SLRCOND_SLRD7_LENGTH                               0x1
#define _SLRCOND_SLRD7_MASK                                 0x80

// Register: SLRCONE
#define SLRCONE SLRCONE
extern volatile unsigned char           SLRCONE             __at(0x310);
#ifndef _LIB_BUILD
asm("SLRCONE equ 0310h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SLRE0                  :1;
        unsigned SLRE1                  :1;
        unsigned SLRE2                  :1;
    };
} SLRCONEbits_t;
extern volatile SLRCONEbits_t SLRCONEbits __at(0x310);
// bitfield macros
#define _SLRCONE_SLRE0_POSN                                 0x0
#define _SLRCONE_SLRE0_POSITION                             0x0
#define _SLRCONE_SLRE0_SIZE                                 0x1
#define _SLRCONE_SLRE0_LENGTH                               0x1
#define _SLRCONE_SLRE0_MASK                                 0x1
#define _SLRCONE_SLRE1_POSN                                 0x1
#define _SLRCONE_SLRE1_POSITION                             0x1
#define _SLRCONE_SLRE1_SIZE                                 0x1
#define _SLRCONE_SLRE1_LENGTH                               0x1
#define _SLRCONE_SLRE1_MASK                                 0x2
#define _SLRCONE_SLRE2_POSN                                 0x2
#define _SLRCONE_SLRE2_POSITION                             0x2
#define _SLRCONE_SLRE2_SIZE                                 0x1
#define _SLRCONE_SLRE2_LENGTH                               0x1
#define _SLRCONE_SLRE2_MASK                                 0x4

// Register: CCPR8
#define CCPR8 CCPR8
extern volatile unsigned short          CCPR8               __at(0x311);
#ifndef _LIB_BUILD
asm("CCPR8 equ 0311h");
#endif

// Register: CCPR8L
#define CCPR8L CCPR8L
extern volatile unsigned char           CCPR8L              __at(0x311);
#ifndef _LIB_BUILD
asm("CCPR8L equ 0311h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RL                     :8;
    };
} CCPR8Lbits_t;
extern volatile CCPR8Lbits_t CCPR8Lbits __at(0x311);
// bitfield macros
#define _CCPR8L_RL_POSN                                     0x0
#define _CCPR8L_RL_POSITION                                 0x0
#define _CCPR8L_RL_SIZE                                     0x8
#define _CCPR8L_RL_LENGTH                                   0x8
#define _CCPR8L_RL_MASK                                     0xFF

// Register: CCPR8H
#define CCPR8H CCPR8H
extern volatile unsigned char           CCPR8H              __at(0x312);
#ifndef _LIB_BUILD
asm("CCPR8H equ 0312h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RH                     :8;
    };
} CCPR8Hbits_t;
extern volatile CCPR8Hbits_t CCPR8Hbits __at(0x312);
// bitfield macros
#define _CCPR8H_RH_POSN                                     0x0
#define _CCPR8H_RH_POSITION                                 0x0
#define _CCPR8H_RH_SIZE                                     0x8
#define _CCPR8H_RH_LENGTH                                   0x8
#define _CCPR8H_RH_MASK                                     0xFF

// Register: CCP8CON
#define CCP8CON CCP8CON
extern volatile unsigned char           CCP8CON             __at(0x313);
#ifndef _LIB_BUILD
asm("CCP8CON equ 0313h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MODE                   :4;
        unsigned FMT                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
        unsigned MODE3                  :1;
    };
    struct {
        unsigned CCP8MODE               :4;
        unsigned CCP8FMT                :1;
        unsigned CCP8OUT                :1;
        unsigned                        :1;
        unsigned CCP8EN                 :1;
    };
    struct {
        unsigned CCP8MODE0              :1;
        unsigned CCP8MODE1              :1;
        unsigned CCP8MODE2              :1;
        unsigned CCP8MODE3              :1;
    };
} CCP8CONbits_t;
extern volatile CCP8CONbits_t CCP8CONbits __at(0x313);
// bitfield macros
#define _CCP8CON_MODE_POSN                                  0x0
#define _CCP8CON_MODE_POSITION                              0x0
#define _CCP8CON_MODE_SIZE                                  0x4
#define _CCP8CON_MODE_LENGTH                                0x4
#define _CCP8CON_MODE_MASK                                  0xF
#define _CCP8CON_FMT_POSN                                   0x4
#define _CCP8CON_FMT_POSITION                               0x4
#define _CCP8CON_FMT_SIZE                                   0x1
#define _CCP8CON_FMT_LENGTH                                 0x1
#define _CCP8CON_FMT_MASK                                   0x10
#define _CCP8CON_OUT_POSN                                   0x5
#define _CCP8CON_OUT_POSITION                               0x5
#define _CCP8CON_OUT_SIZE                                   0x1
#define _CCP8CON_OUT_LENGTH                                 0x1
#define _CCP8CON_OUT_MASK                                   0x20
#define _CCP8CON_EN_POSN                                    0x7
#define _CCP8CON_EN_POSITION                                0x7
#define _CCP8CON_EN_SIZE                                    0x1
#define _CCP8CON_EN_LENGTH                                  0x1
#define _CCP8CON_EN_MASK                                    0x80
#define _CCP8CON_MODE0_POSN                                 0x0
#define _CCP8CON_MODE0_POSITION                             0x0
#define _CCP8CON_MODE0_SIZE                                 0x1
#define _CCP8CON_MODE0_LENGTH                               0x1
#define _CCP8CON_MODE0_MASK                                 0x1
#define _CCP8CON_MODE1_POSN                                 0x1
#define _CCP8CON_MODE1_POSITION                             0x1
#define _CCP8CON_MODE1_SIZE                                 0x1
#define _CCP8CON_MODE1_LENGTH                               0x1
#define _CCP8CON_MODE1_MASK                                 0x2
#define _CCP8CON_MODE2_POSN                                 0x2
#define _CCP8CON_MODE2_POSITION                             0x2
#define _CCP8CON_MODE2_SIZE                                 0x1
#define _CCP8CON_MODE2_LENGTH                               0x1
#define _CCP8CON_MODE2_MASK                                 0x4
#define _CCP8CON_MODE3_POSN                                 0x3
#define _CCP8CON_MODE3_POSITION                             0x3
#define _CCP8CON_MODE3_SIZE                                 0x1
#define _CCP8CON_MODE3_LENGTH                               0x1
#define _CCP8CON_MODE3_MASK                                 0x8
#define _CCP8CON_CCP8MODE_POSN                              0x0
#define _CCP8CON_CCP8MODE_POSITION                          0x0
#define _CCP8CON_CCP8MODE_SIZE                              0x4
#define _CCP8CON_CCP8MODE_LENGTH                            0x4
#define _CCP8CON_CCP8MODE_MASK                              0xF
#define _CCP8CON_CCP8FMT_POSN                               0x4
#define _CCP8CON_CCP8FMT_POSITION                           0x4
#define _CCP8CON_CCP8FMT_SIZE                               0x1
#define _CCP8CON_CCP8FMT_LENGTH                             0x1
#define _CCP8CON_CCP8FMT_MASK                               0x10
#define _CCP8CON_CCP8OUT_POSN                               0x5
#define _CCP8CON_CCP8OUT_POSITION                           0x5
#define _CCP8CON_CCP8OUT_SIZE                               0x1
#define _CCP8CON_CCP8OUT_LENGTH                             0x1
#define _CCP8CON_CCP8OUT_MASK                               0x20
#define _CCP8CON_CCP8EN_POSN                                0x7
#define _CCP8CON_CCP8EN_POSITION                            0x7
#define _CCP8CON_CCP8EN_SIZE                                0x1
#define _CCP8CON_CCP8EN_LENGTH                              0x1
#define _CCP8CON_CCP8EN_MASK                                0x80
#define _CCP8CON_CCP8MODE0_POSN                             0x0
#define _CCP8CON_CCP8MODE0_POSITION                         0x0
#define _CCP8CON_CCP8MODE0_SIZE                             0x1
#define _CCP8CON_CCP8MODE0_LENGTH                           0x1
#define _CCP8CON_CCP8MODE0_MASK                             0x1
#define _CCP8CON_CCP8MODE1_POSN                             0x1
#define _CCP8CON_CCP8MODE1_POSITION                         0x1
#define _CCP8CON_CCP8MODE1_SIZE                             0x1
#define _CCP8CON_CCP8MODE1_LENGTH                           0x1
#define _CCP8CON_CCP8MODE1_MASK                             0x2
#define _CCP8CON_CCP8MODE2_POSN                             0x2
#define _CCP8CON_CCP8MODE2_POSITION                         0x2
#define _CCP8CON_CCP8MODE2_SIZE                             0x1
#define _CCP8CON_CCP8MODE2_LENGTH                           0x1
#define _CCP8CON_CCP8MODE2_MASK                             0x4
#define _CCP8CON_CCP8MODE3_POSN                             0x3
#define _CCP8CON_CCP8MODE3_POSITION                         0x3
#define _CCP8CON_CCP8MODE3_SIZE                             0x1
#define _CCP8CON_CCP8MODE3_LENGTH                           0x1
#define _CCP8CON_CCP8MODE3_MASK                             0x8

// Register: CCP8CAP
#define CCP8CAP CCP8CAP
extern volatile unsigned char           CCP8CAP             __at(0x314);
#ifndef _LIB_BUILD
asm("CCP8CAP equ 0314h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CTS                    :8;
    };
    struct {
        unsigned CTS0                   :1;
        unsigned CTS1                   :1;
        unsigned CTS2                   :1;
        unsigned CTS3                   :1;
    };
    struct {
        unsigned CCP8CTS                :8;
    };
    struct {
        unsigned CCP8CTS0               :1;
        unsigned CCP8CTS1               :1;
        unsigned CCP8CTS2               :1;
        unsigned CCP8CTS3               :1;
    };
} CCP8CAPbits_t;
extern volatile CCP8CAPbits_t CCP8CAPbits __at(0x314);
// bitfield macros
#define _CCP8CAP_CTS_POSN                                   0x0
#define _CCP8CAP_CTS_POSITION                               0x0
#define _CCP8CAP_CTS_SIZE                                   0x8
#define _CCP8CAP_CTS_LENGTH                                 0x8
#define _CCP8CAP_CTS_MASK                                   0xFF
#define _CCP8CAP_CTS0_POSN                                  0x0
#define _CCP8CAP_CTS0_POSITION                              0x0
#define _CCP8CAP_CTS0_SIZE                                  0x1
#define _CCP8CAP_CTS0_LENGTH                                0x1
#define _CCP8CAP_CTS0_MASK                                  0x1
#define _CCP8CAP_CTS1_POSN                                  0x1
#define _CCP8CAP_CTS1_POSITION                              0x1
#define _CCP8CAP_CTS1_SIZE                                  0x1
#define _CCP8CAP_CTS1_LENGTH                                0x1
#define _CCP8CAP_CTS1_MASK                                  0x2
#define _CCP8CAP_CTS2_POSN                                  0x2
#define _CCP8CAP_CTS2_POSITION                              0x2
#define _CCP8CAP_CTS2_SIZE                                  0x1
#define _CCP8CAP_CTS2_LENGTH                                0x1
#define _CCP8CAP_CTS2_MASK                                  0x4
#define _CCP8CAP_CTS3_POSN                                  0x3
#define _CCP8CAP_CTS3_POSITION                              0x3
#define _CCP8CAP_CTS3_SIZE                                  0x1
#define _CCP8CAP_CTS3_LENGTH                                0x1
#define _CCP8CAP_CTS3_MASK                                  0x8
#define _CCP8CAP_CCP8CTS_POSN                               0x0
#define _CCP8CAP_CCP8CTS_POSITION                           0x0
#define _CCP8CAP_CCP8CTS_SIZE                               0x8
#define _CCP8CAP_CCP8CTS_LENGTH                             0x8
#define _CCP8CAP_CCP8CTS_MASK                               0xFF
#define _CCP8CAP_CCP8CTS0_POSN                              0x0
#define _CCP8CAP_CCP8CTS0_POSITION                          0x0
#define _CCP8CAP_CCP8CTS0_SIZE                              0x1
#define _CCP8CAP_CCP8CTS0_LENGTH                            0x1
#define _CCP8CAP_CCP8CTS0_MASK                              0x1
#define _CCP8CAP_CCP8CTS1_POSN                              0x1
#define _CCP8CAP_CCP8CTS1_POSITION                          0x1
#define _CCP8CAP_CCP8CTS1_SIZE                              0x1
#define _CCP8CAP_CCP8CTS1_LENGTH                            0x1
#define _CCP8CAP_CCP8CTS1_MASK                              0x2
#define _CCP8CAP_CCP8CTS2_POSN                              0x2
#define _CCP8CAP_CCP8CTS2_POSITION                          0x2
#define _CCP8CAP_CCP8CTS2_SIZE                              0x1
#define _CCP8CAP_CCP8CTS2_LENGTH                            0x1
#define _CCP8CAP_CCP8CTS2_MASK                              0x4
#define _CCP8CAP_CCP8CTS3_POSN                              0x3
#define _CCP8CAP_CCP8CTS3_POSITION                          0x3
#define _CCP8CAP_CCP8CTS3_SIZE                              0x1
#define _CCP8CAP_CCP8CTS3_LENGTH                            0x1
#define _CCP8CAP_CCP8CTS3_MASK                              0x8

// Register: MD1CON0
#define MD1CON0 MD1CON0
extern volatile unsigned char           MD1CON0             __at(0x315);
#ifndef _LIB_BUILD
asm("MD1CON0 equ 0315h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BIT                    :1;
        unsigned                        :3;
        unsigned OPOL                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MD1BIT                 :1;
        unsigned                        :3;
        unsigned MD1OPOL                :1;
        unsigned MD1OUT                 :1;
        unsigned                        :1;
        unsigned MD1EN                  :1;
    };
} MD1CON0bits_t;
extern volatile MD1CON0bits_t MD1CON0bits __at(0x315);
// bitfield macros
#define _MD1CON0_BIT_POSN                                   0x0
#define _MD1CON0_BIT_POSITION                               0x0
#define _MD1CON0_BIT_SIZE                                   0x1
#define _MD1CON0_BIT_LENGTH                                 0x1
#define _MD1CON0_BIT_MASK                                   0x1
#define _MD1CON0_OPOL_POSN                                  0x4
#define _MD1CON0_OPOL_POSITION                              0x4
#define _MD1CON0_OPOL_SIZE                                  0x1
#define _MD1CON0_OPOL_LENGTH                                0x1
#define _MD1CON0_OPOL_MASK                                  0x10
#define _MD1CON0_OUT_POSN                                   0x5
#define _MD1CON0_OUT_POSITION                               0x5
#define _MD1CON0_OUT_SIZE                                   0x1
#define _MD1CON0_OUT_LENGTH                                 0x1
#define _MD1CON0_OUT_MASK                                   0x20
#define _MD1CON0_EN_POSN                                    0x7
#define _MD1CON0_EN_POSITION                                0x7
#define _MD1CON0_EN_SIZE                                    0x1
#define _MD1CON0_EN_LENGTH                                  0x1
#define _MD1CON0_EN_MASK                                    0x80
#define _MD1CON0_MD1BIT_POSN                                0x0
#define _MD1CON0_MD1BIT_POSITION                            0x0
#define _MD1CON0_MD1BIT_SIZE                                0x1
#define _MD1CON0_MD1BIT_LENGTH                              0x1
#define _MD1CON0_MD1BIT_MASK                                0x1
#define _MD1CON0_MD1OPOL_POSN                               0x4
#define _MD1CON0_MD1OPOL_POSITION                           0x4
#define _MD1CON0_MD1OPOL_SIZE                               0x1
#define _MD1CON0_MD1OPOL_LENGTH                             0x1
#define _MD1CON0_MD1OPOL_MASK                               0x10
#define _MD1CON0_MD1OUT_POSN                                0x5
#define _MD1CON0_MD1OUT_POSITION                            0x5
#define _MD1CON0_MD1OUT_SIZE                                0x1
#define _MD1CON0_MD1OUT_LENGTH                              0x1
#define _MD1CON0_MD1OUT_MASK                                0x20
#define _MD1CON0_MD1EN_POSN                                 0x7
#define _MD1CON0_MD1EN_POSITION                             0x7
#define _MD1CON0_MD1EN_SIZE                                 0x1
#define _MD1CON0_MD1EN_LENGTH                               0x1
#define _MD1CON0_MD1EN_MASK                                 0x80

// Register: MD1CON1
#define MD1CON1 MD1CON1
extern volatile unsigned char           MD1CON1             __at(0x316);
#ifndef _LIB_BUILD
asm("MD1CON1 equ 0316h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLSYNC                 :1;
        unsigned CLPOL                  :1;
        unsigned                        :2;
        unsigned CHSYNC                 :1;
        unsigned CHPOL                  :1;
    };
    struct {
        unsigned MD1CLSYNC              :1;
        unsigned MD1CLPOL               :1;
        unsigned                        :2;
        unsigned MD1CHSYNC              :1;
        unsigned MD1CHPOL               :1;
    };
} MD1CON1bits_t;
extern volatile MD1CON1bits_t MD1CON1bits __at(0x316);
// bitfield macros
#define _MD1CON1_CLSYNC_POSN                                0x0
#define _MD1CON1_CLSYNC_POSITION                            0x0
#define _MD1CON1_CLSYNC_SIZE                                0x1
#define _MD1CON1_CLSYNC_LENGTH                              0x1
#define _MD1CON1_CLSYNC_MASK                                0x1
#define _MD1CON1_CLPOL_POSN                                 0x1
#define _MD1CON1_CLPOL_POSITION                             0x1
#define _MD1CON1_CLPOL_SIZE                                 0x1
#define _MD1CON1_CLPOL_LENGTH                               0x1
#define _MD1CON1_CLPOL_MASK                                 0x2
#define _MD1CON1_CHSYNC_POSN                                0x4
#define _MD1CON1_CHSYNC_POSITION                            0x4
#define _MD1CON1_CHSYNC_SIZE                                0x1
#define _MD1CON1_CHSYNC_LENGTH                              0x1
#define _MD1CON1_CHSYNC_MASK                                0x10
#define _MD1CON1_CHPOL_POSN                                 0x5
#define _MD1CON1_CHPOL_POSITION                             0x5
#define _MD1CON1_CHPOL_SIZE                                 0x1
#define _MD1CON1_CHPOL_LENGTH                               0x1
#define _MD1CON1_CHPOL_MASK                                 0x20
#define _MD1CON1_MD1CLSYNC_POSN                             0x0
#define _MD1CON1_MD1CLSYNC_POSITION                         0x0
#define _MD1CON1_MD1CLSYNC_SIZE                             0x1
#define _MD1CON1_MD1CLSYNC_LENGTH                           0x1
#define _MD1CON1_MD1CLSYNC_MASK                             0x1
#define _MD1CON1_MD1CLPOL_POSN                              0x1
#define _MD1CON1_MD1CLPOL_POSITION                          0x1
#define _MD1CON1_MD1CLPOL_SIZE                              0x1
#define _MD1CON1_MD1CLPOL_LENGTH                            0x1
#define _MD1CON1_MD1CLPOL_MASK                              0x2
#define _MD1CON1_MD1CHSYNC_POSN                             0x4
#define _MD1CON1_MD1CHSYNC_POSITION                         0x4
#define _MD1CON1_MD1CHSYNC_SIZE                             0x1
#define _MD1CON1_MD1CHSYNC_LENGTH                           0x1
#define _MD1CON1_MD1CHSYNC_MASK                             0x10
#define _MD1CON1_MD1CHPOL_POSN                              0x5
#define _MD1CON1_MD1CHPOL_POSITION                          0x5
#define _MD1CON1_MD1CHPOL_SIZE                              0x1
#define _MD1CON1_MD1CHPOL_LENGTH                            0x1
#define _MD1CON1_MD1CHPOL_MASK                              0x20

// Register: MD1SRC
#define MD1SRC MD1SRC
extern volatile unsigned char           MD1SRC              __at(0x317);
#ifndef _LIB_BUILD
asm("MD1SRC equ 0317h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MS                     :5;
    };
    struct {
        unsigned MS0                    :1;
        unsigned MS1                    :1;
        unsigned MS2                    :1;
        unsigned MS3                    :1;
        unsigned MS4                    :1;
    };
    struct {
        unsigned MD1MS                  :5;
    };
    struct {
        unsigned MD1MS0                 :1;
        unsigned MD1MS1                 :1;
        unsigned MD1MS2                 :1;
        unsigned MD1MS3                 :1;
        unsigned MD1MS4                 :1;
    };
} MD1SRCbits_t;
extern volatile MD1SRCbits_t MD1SRCbits __at(0x317);
// bitfield macros
#define _MD1SRC_MS_POSN                                     0x0
#define _MD1SRC_MS_POSITION                                 0x0
#define _MD1SRC_MS_SIZE                                     0x5
#define _MD1SRC_MS_LENGTH                                   0x5
#define _MD1SRC_MS_MASK                                     0x1F
#define _MD1SRC_MS0_POSN                                    0x0
#define _MD1SRC_MS0_POSITION                                0x0
#define _MD1SRC_MS0_SIZE                                    0x1
#define _MD1SRC_MS0_LENGTH                                  0x1
#define _MD1SRC_MS0_MASK                                    0x1
#define _MD1SRC_MS1_POSN                                    0x1
#define _MD1SRC_MS1_POSITION                                0x1
#define _MD1SRC_MS1_SIZE                                    0x1
#define _MD1SRC_MS1_LENGTH                                  0x1
#define _MD1SRC_MS1_MASK                                    0x2
#define _MD1SRC_MS2_POSN                                    0x2
#define _MD1SRC_MS2_POSITION                                0x2
#define _MD1SRC_MS2_SIZE                                    0x1
#define _MD1SRC_MS2_LENGTH                                  0x1
#define _MD1SRC_MS2_MASK                                    0x4
#define _MD1SRC_MS3_POSN                                    0x3
#define _MD1SRC_MS3_POSITION                                0x3
#define _MD1SRC_MS3_SIZE                                    0x1
#define _MD1SRC_MS3_LENGTH                                  0x1
#define _MD1SRC_MS3_MASK                                    0x8
#define _MD1SRC_MS4_POSN                                    0x4
#define _MD1SRC_MS4_POSITION                                0x4
#define _MD1SRC_MS4_SIZE                                    0x1
#define _MD1SRC_MS4_LENGTH                                  0x1
#define _MD1SRC_MS4_MASK                                    0x10
#define _MD1SRC_MD1MS_POSN                                  0x0
#define _MD1SRC_MD1MS_POSITION                              0x0
#define _MD1SRC_MD1MS_SIZE                                  0x5
#define _MD1SRC_MD1MS_LENGTH                                0x5
#define _MD1SRC_MD1MS_MASK                                  0x1F
#define _MD1SRC_MD1MS0_POSN                                 0x0
#define _MD1SRC_MD1MS0_POSITION                             0x0
#define _MD1SRC_MD1MS0_SIZE                                 0x1
#define _MD1SRC_MD1MS0_LENGTH                               0x1
#define _MD1SRC_MD1MS0_MASK                                 0x1
#define _MD1SRC_MD1MS1_POSN                                 0x1
#define _MD1SRC_MD1MS1_POSITION                             0x1
#define _MD1SRC_MD1MS1_SIZE                                 0x1
#define _MD1SRC_MD1MS1_LENGTH                               0x1
#define _MD1SRC_MD1MS1_MASK                                 0x2
#define _MD1SRC_MD1MS2_POSN                                 0x2
#define _MD1SRC_MD1MS2_POSITION                             0x2
#define _MD1SRC_MD1MS2_SIZE                                 0x1
#define _MD1SRC_MD1MS2_LENGTH                               0x1
#define _MD1SRC_MD1MS2_MASK                                 0x4
#define _MD1SRC_MD1MS3_POSN                                 0x3
#define _MD1SRC_MD1MS3_POSITION                             0x3
#define _MD1SRC_MD1MS3_SIZE                                 0x1
#define _MD1SRC_MD1MS3_LENGTH                               0x1
#define _MD1SRC_MD1MS3_MASK                                 0x8
#define _MD1SRC_MD1MS4_POSN                                 0x4
#define _MD1SRC_MD1MS4_POSITION                             0x4
#define _MD1SRC_MD1MS4_SIZE                                 0x1
#define _MD1SRC_MD1MS4_LENGTH                               0x1
#define _MD1SRC_MD1MS4_MASK                                 0x10

// Register: MD1CARL
#define MD1CARL MD1CARL
extern volatile unsigned char           MD1CARL             __at(0x318);
#ifndef _LIB_BUILD
asm("MD1CARL equ 0318h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CL                     :5;
    };
    struct {
        unsigned CL0                    :1;
        unsigned CL1                    :1;
        unsigned CL2                    :1;
        unsigned CL3                    :1;
        unsigned CL4                    :1;
    };
    struct {
        unsigned MD1CL                  :5;
    };
    struct {
        unsigned MD1CL0                 :1;
        unsigned MD1CL1                 :1;
        unsigned MD1CL2                 :1;
        unsigned MD1CL3                 :1;
        unsigned MD1CL4                 :1;
    };
} MD1CARLbits_t;
extern volatile MD1CARLbits_t MD1CARLbits __at(0x318);
// bitfield macros
#define _MD1CARL_CL_POSN                                    0x0
#define _MD1CARL_CL_POSITION                                0x0
#define _MD1CARL_CL_SIZE                                    0x5
#define _MD1CARL_CL_LENGTH                                  0x5
#define _MD1CARL_CL_MASK                                    0x1F
#define _MD1CARL_CL0_POSN                                   0x0
#define _MD1CARL_CL0_POSITION                               0x0
#define _MD1CARL_CL0_SIZE                                   0x1
#define _MD1CARL_CL0_LENGTH                                 0x1
#define _MD1CARL_CL0_MASK                                   0x1
#define _MD1CARL_CL1_POSN                                   0x1
#define _MD1CARL_CL1_POSITION                               0x1
#define _MD1CARL_CL1_SIZE                                   0x1
#define _MD1CARL_CL1_LENGTH                                 0x1
#define _MD1CARL_CL1_MASK                                   0x2
#define _MD1CARL_CL2_POSN                                   0x2
#define _MD1CARL_CL2_POSITION                               0x2
#define _MD1CARL_CL2_SIZE                                   0x1
#define _MD1CARL_CL2_LENGTH                                 0x1
#define _MD1CARL_CL2_MASK                                   0x4
#define _MD1CARL_CL3_POSN                                   0x3
#define _MD1CARL_CL3_POSITION                               0x3
#define _MD1CARL_CL3_SIZE                                   0x1
#define _MD1CARL_CL3_LENGTH                                 0x1
#define _MD1CARL_CL3_MASK                                   0x8
#define _MD1CARL_CL4_POSN                                   0x4
#define _MD1CARL_CL4_POSITION                               0x4
#define _MD1CARL_CL4_SIZE                                   0x1
#define _MD1CARL_CL4_LENGTH                                 0x1
#define _MD1CARL_CL4_MASK                                   0x10
#define _MD1CARL_MD1CL_POSN                                 0x0
#define _MD1CARL_MD1CL_POSITION                             0x0
#define _MD1CARL_MD1CL_SIZE                                 0x5
#define _MD1CARL_MD1CL_LENGTH                               0x5
#define _MD1CARL_MD1CL_MASK                                 0x1F
#define _MD1CARL_MD1CL0_POSN                                0x0
#define _MD1CARL_MD1CL0_POSITION                            0x0
#define _MD1CARL_MD1CL0_SIZE                                0x1
#define _MD1CARL_MD1CL0_LENGTH                              0x1
#define _MD1CARL_MD1CL0_MASK                                0x1
#define _MD1CARL_MD1CL1_POSN                                0x1
#define _MD1CARL_MD1CL1_POSITION                            0x1
#define _MD1CARL_MD1CL1_SIZE                                0x1
#define _MD1CARL_MD1CL1_LENGTH                              0x1
#define _MD1CARL_MD1CL1_MASK                                0x2
#define _MD1CARL_MD1CL2_POSN                                0x2
#define _MD1CARL_MD1CL2_POSITION                            0x2
#define _MD1CARL_MD1CL2_SIZE                                0x1
#define _MD1CARL_MD1CL2_LENGTH                              0x1
#define _MD1CARL_MD1CL2_MASK                                0x4
#define _MD1CARL_MD1CL3_POSN                                0x3
#define _MD1CARL_MD1CL3_POSITION                            0x3
#define _MD1CARL_MD1CL3_SIZE                                0x1
#define _MD1CARL_MD1CL3_LENGTH                              0x1
#define _MD1CARL_MD1CL3_MASK                                0x8
#define _MD1CARL_MD1CL4_POSN                                0x4
#define _MD1CARL_MD1CL4_POSITION                            0x4
#define _MD1CARL_MD1CL4_SIZE                                0x1
#define _MD1CARL_MD1CL4_LENGTH                              0x1
#define _MD1CARL_MD1CL4_MASK                                0x10

// Register: MD1CARH
#define MD1CARH MD1CARH
extern volatile unsigned char           MD1CARH             __at(0x319);
#ifndef _LIB_BUILD
asm("MD1CARH equ 0319h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CH                     :5;
    };
    struct {
        unsigned CH0                    :1;
        unsigned CH1                    :1;
        unsigned CH2                    :1;
        unsigned CH3                    :1;
        unsigned CH4                    :1;
    };
    struct {
        unsigned MD1CH                  :5;
    };
    struct {
        unsigned MD1CH0                 :1;
        unsigned MD1CH1                 :1;
        unsigned MD1CH2                 :1;
        unsigned MD1CH3                 :1;
        unsigned MD1CH4                 :1;
    };
} MD1CARHbits_t;
extern volatile MD1CARHbits_t MD1CARHbits __at(0x319);
// bitfield macros
#define _MD1CARH_CH_POSN                                    0x0
#define _MD1CARH_CH_POSITION                                0x0
#define _MD1CARH_CH_SIZE                                    0x5
#define _MD1CARH_CH_LENGTH                                  0x5
#define _MD1CARH_CH_MASK                                    0x1F
#define _MD1CARH_CH0_POSN                                   0x0
#define _MD1CARH_CH0_POSITION                               0x0
#define _MD1CARH_CH0_SIZE                                   0x1
#define _MD1CARH_CH0_LENGTH                                 0x1
#define _MD1CARH_CH0_MASK                                   0x1
#define _MD1CARH_CH1_POSN                                   0x1
#define _MD1CARH_CH1_POSITION                               0x1
#define _MD1CARH_CH1_SIZE                                   0x1
#define _MD1CARH_CH1_LENGTH                                 0x1
#define _MD1CARH_CH1_MASK                                   0x2
#define _MD1CARH_CH2_POSN                                   0x2
#define _MD1CARH_CH2_POSITION                               0x2
#define _MD1CARH_CH2_SIZE                                   0x1
#define _MD1CARH_CH2_LENGTH                                 0x1
#define _MD1CARH_CH2_MASK                                   0x4
#define _MD1CARH_CH3_POSN                                   0x3
#define _MD1CARH_CH3_POSITION                               0x3
#define _MD1CARH_CH3_SIZE                                   0x1
#define _MD1CARH_CH3_LENGTH                                 0x1
#define _MD1CARH_CH3_MASK                                   0x8
#define _MD1CARH_CH4_POSN                                   0x4
#define _MD1CARH_CH4_POSITION                               0x4
#define _MD1CARH_CH4_SIZE                                   0x1
#define _MD1CARH_CH4_LENGTH                                 0x1
#define _MD1CARH_CH4_MASK                                   0x10
#define _MD1CARH_MD1CH_POSN                                 0x0
#define _MD1CARH_MD1CH_POSITION                             0x0
#define _MD1CARH_MD1CH_SIZE                                 0x5
#define _MD1CARH_MD1CH_LENGTH                               0x5
#define _MD1CARH_MD1CH_MASK                                 0x1F
#define _MD1CARH_MD1CH0_POSN                                0x0
#define _MD1CARH_MD1CH0_POSITION                            0x0
#define _MD1CARH_MD1CH0_SIZE                                0x1
#define _MD1CARH_MD1CH0_LENGTH                              0x1
#define _MD1CARH_MD1CH0_MASK                                0x1
#define _MD1CARH_MD1CH1_POSN                                0x1
#define _MD1CARH_MD1CH1_POSITION                            0x1
#define _MD1CARH_MD1CH1_SIZE                                0x1
#define _MD1CARH_MD1CH1_LENGTH                              0x1
#define _MD1CARH_MD1CH1_MASK                                0x2
#define _MD1CARH_MD1CH2_POSN                                0x2
#define _MD1CARH_MD1CH2_POSITION                            0x2
#define _MD1CARH_MD1CH2_SIZE                                0x1
#define _MD1CARH_MD1CH2_LENGTH                              0x1
#define _MD1CARH_MD1CH2_MASK                                0x4
#define _MD1CARH_MD1CH3_POSN                                0x3
#define _MD1CARH_MD1CH3_POSITION                            0x3
#define _MD1CARH_MD1CH3_SIZE                                0x1
#define _MD1CARH_MD1CH3_LENGTH                              0x1
#define _MD1CARH_MD1CH3_MASK                                0x8
#define _MD1CARH_MD1CH4_POSN                                0x4
#define _MD1CARH_MD1CH4_POSITION                            0x4
#define _MD1CARH_MD1CH4_SIZE                                0x1
#define _MD1CARH_MD1CH4_LENGTH                              0x1
#define _MD1CARH_MD1CH4_MASK                                0x10

// Register: MD2CON0
#define MD2CON0 MD2CON0
extern volatile unsigned char           MD2CON0             __at(0x31B);
#ifndef _LIB_BUILD
asm("MD2CON0 equ 031Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BIT                    :1;
        unsigned                        :3;
        unsigned OPOL                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MD2BIT                 :1;
        unsigned                        :3;
        unsigned MD2OPOL                :1;
        unsigned MD2OUT                 :1;
        unsigned                        :1;
        unsigned MD2EN                  :1;
    };
} MD2CON0bits_t;
extern volatile MD2CON0bits_t MD2CON0bits __at(0x31B);
// bitfield macros
#define _MD2CON0_BIT_POSN                                   0x0
#define _MD2CON0_BIT_POSITION                               0x0
#define _MD2CON0_BIT_SIZE                                   0x1
#define _MD2CON0_BIT_LENGTH                                 0x1
#define _MD2CON0_BIT_MASK                                   0x1
#define _MD2CON0_OPOL_POSN                                  0x4
#define _MD2CON0_OPOL_POSITION                              0x4
#define _MD2CON0_OPOL_SIZE                                  0x1
#define _MD2CON0_OPOL_LENGTH                                0x1
#define _MD2CON0_OPOL_MASK                                  0x10
#define _MD2CON0_OUT_POSN                                   0x5
#define _MD2CON0_OUT_POSITION                               0x5
#define _MD2CON0_OUT_SIZE                                   0x1
#define _MD2CON0_OUT_LENGTH                                 0x1
#define _MD2CON0_OUT_MASK                                   0x20
#define _MD2CON0_EN_POSN                                    0x7
#define _MD2CON0_EN_POSITION                                0x7
#define _MD2CON0_EN_SIZE                                    0x1
#define _MD2CON0_EN_LENGTH                                  0x1
#define _MD2CON0_EN_MASK                                    0x80
#define _MD2CON0_MD2BIT_POSN                                0x0
#define _MD2CON0_MD2BIT_POSITION                            0x0
#define _MD2CON0_MD2BIT_SIZE                                0x1
#define _MD2CON0_MD2BIT_LENGTH                              0x1
#define _MD2CON0_MD2BIT_MASK                                0x1
#define _MD2CON0_MD2OPOL_POSN                               0x4
#define _MD2CON0_MD2OPOL_POSITION                           0x4
#define _MD2CON0_MD2OPOL_SIZE                               0x1
#define _MD2CON0_MD2OPOL_LENGTH                             0x1
#define _MD2CON0_MD2OPOL_MASK                               0x10
#define _MD2CON0_MD2OUT_POSN                                0x5
#define _MD2CON0_MD2OUT_POSITION                            0x5
#define _MD2CON0_MD2OUT_SIZE                                0x1
#define _MD2CON0_MD2OUT_LENGTH                              0x1
#define _MD2CON0_MD2OUT_MASK                                0x20
#define _MD2CON0_MD2EN_POSN                                 0x7
#define _MD2CON0_MD2EN_POSITION                             0x7
#define _MD2CON0_MD2EN_SIZE                                 0x1
#define _MD2CON0_MD2EN_LENGTH                               0x1
#define _MD2CON0_MD2EN_MASK                                 0x80

// Register: MD2CON1
#define MD2CON1 MD2CON1
extern volatile unsigned char           MD2CON1             __at(0x31C);
#ifndef _LIB_BUILD
asm("MD2CON1 equ 031Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLSYNC                 :1;
        unsigned CLPOL                  :1;
        unsigned                        :2;
        unsigned CHSYNC                 :1;
        unsigned CHPOL                  :1;
    };
    struct {
        unsigned MD2CLSYNC              :1;
        unsigned MD2CLPOL               :1;
        unsigned                        :2;
        unsigned MD2CHSYNC              :1;
        unsigned MD2CHPOL               :1;
    };
} MD2CON1bits_t;
extern volatile MD2CON1bits_t MD2CON1bits __at(0x31C);
// bitfield macros
#define _MD2CON1_CLSYNC_POSN                                0x0
#define _MD2CON1_CLSYNC_POSITION                            0x0
#define _MD2CON1_CLSYNC_SIZE                                0x1
#define _MD2CON1_CLSYNC_LENGTH                              0x1
#define _MD2CON1_CLSYNC_MASK                                0x1
#define _MD2CON1_CLPOL_POSN                                 0x1
#define _MD2CON1_CLPOL_POSITION                             0x1
#define _MD2CON1_CLPOL_SIZE                                 0x1
#define _MD2CON1_CLPOL_LENGTH                               0x1
#define _MD2CON1_CLPOL_MASK                                 0x2
#define _MD2CON1_CHSYNC_POSN                                0x4
#define _MD2CON1_CHSYNC_POSITION                            0x4
#define _MD2CON1_CHSYNC_SIZE                                0x1
#define _MD2CON1_CHSYNC_LENGTH                              0x1
#define _MD2CON1_CHSYNC_MASK                                0x10
#define _MD2CON1_CHPOL_POSN                                 0x5
#define _MD2CON1_CHPOL_POSITION                             0x5
#define _MD2CON1_CHPOL_SIZE                                 0x1
#define _MD2CON1_CHPOL_LENGTH                               0x1
#define _MD2CON1_CHPOL_MASK                                 0x20
#define _MD2CON1_MD2CLSYNC_POSN                             0x0
#define _MD2CON1_MD2CLSYNC_POSITION                         0x0
#define _MD2CON1_MD2CLSYNC_SIZE                             0x1
#define _MD2CON1_MD2CLSYNC_LENGTH                           0x1
#define _MD2CON1_MD2CLSYNC_MASK                             0x1
#define _MD2CON1_MD2CLPOL_POSN                              0x1
#define _MD2CON1_MD2CLPOL_POSITION                          0x1
#define _MD2CON1_MD2CLPOL_SIZE                              0x1
#define _MD2CON1_MD2CLPOL_LENGTH                            0x1
#define _MD2CON1_MD2CLPOL_MASK                              0x2
#define _MD2CON1_MD2CHSYNC_POSN                             0x4
#define _MD2CON1_MD2CHSYNC_POSITION                         0x4
#define _MD2CON1_MD2CHSYNC_SIZE                             0x1
#define _MD2CON1_MD2CHSYNC_LENGTH                           0x1
#define _MD2CON1_MD2CHSYNC_MASK                             0x10
#define _MD2CON1_MD2CHPOL_POSN                              0x5
#define _MD2CON1_MD2CHPOL_POSITION                          0x5
#define _MD2CON1_MD2CHPOL_SIZE                              0x1
#define _MD2CON1_MD2CHPOL_LENGTH                            0x1
#define _MD2CON1_MD2CHPOL_MASK                              0x20

// Register: MD2SRC
#define MD2SRC MD2SRC
extern volatile unsigned char           MD2SRC              __at(0x31D);
#ifndef _LIB_BUILD
asm("MD2SRC equ 031Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MS                     :5;
    };
    struct {
        unsigned MS0                    :1;
        unsigned MS1                    :1;
        unsigned MS2                    :1;
        unsigned MS3                    :1;
        unsigned MS4                    :1;
    };
    struct {
        unsigned MD2MS                  :5;
    };
    struct {
        unsigned MD2MS0                 :1;
        unsigned MD2MS1                 :1;
        unsigned MD2MS2                 :1;
        unsigned MD2MS3                 :1;
        unsigned MD2MS4                 :1;
    };
} MD2SRCbits_t;
extern volatile MD2SRCbits_t MD2SRCbits __at(0x31D);
// bitfield macros
#define _MD2SRC_MS_POSN                                     0x0
#define _MD2SRC_MS_POSITION                                 0x0
#define _MD2SRC_MS_SIZE                                     0x5
#define _MD2SRC_MS_LENGTH                                   0x5
#define _MD2SRC_MS_MASK                                     0x1F
#define _MD2SRC_MS0_POSN                                    0x0
#define _MD2SRC_MS0_POSITION                                0x0
#define _MD2SRC_MS0_SIZE                                    0x1
#define _MD2SRC_MS0_LENGTH                                  0x1
#define _MD2SRC_MS0_MASK                                    0x1
#define _MD2SRC_MS1_POSN                                    0x1
#define _MD2SRC_MS1_POSITION                                0x1
#define _MD2SRC_MS1_SIZE                                    0x1
#define _MD2SRC_MS1_LENGTH                                  0x1
#define _MD2SRC_MS1_MASK                                    0x2
#define _MD2SRC_MS2_POSN                                    0x2
#define _MD2SRC_MS2_POSITION                                0x2
#define _MD2SRC_MS2_SIZE                                    0x1
#define _MD2SRC_MS2_LENGTH                                  0x1
#define _MD2SRC_MS2_MASK                                    0x4
#define _MD2SRC_MS3_POSN                                    0x3
#define _MD2SRC_MS3_POSITION                                0x3
#define _MD2SRC_MS3_SIZE                                    0x1
#define _MD2SRC_MS3_LENGTH                                  0x1
#define _MD2SRC_MS3_MASK                                    0x8
#define _MD2SRC_MS4_POSN                                    0x4
#define _MD2SRC_MS4_POSITION                                0x4
#define _MD2SRC_MS4_SIZE                                    0x1
#define _MD2SRC_MS4_LENGTH                                  0x1
#define _MD2SRC_MS4_MASK                                    0x10
#define _MD2SRC_MD2MS_POSN                                  0x0
#define _MD2SRC_MD2MS_POSITION                              0x0
#define _MD2SRC_MD2MS_SIZE                                  0x5
#define _MD2SRC_MD2MS_LENGTH                                0x5
#define _MD2SRC_MD2MS_MASK                                  0x1F
#define _MD2SRC_MD2MS0_POSN                                 0x0
#define _MD2SRC_MD2MS0_POSITION                             0x0
#define _MD2SRC_MD2MS0_SIZE                                 0x1
#define _MD2SRC_MD2MS0_LENGTH                               0x1
#define _MD2SRC_MD2MS0_MASK                                 0x1
#define _MD2SRC_MD2MS1_POSN                                 0x1
#define _MD2SRC_MD2MS1_POSITION                             0x1
#define _MD2SRC_MD2MS1_SIZE                                 0x1
#define _MD2SRC_MD2MS1_LENGTH                               0x1
#define _MD2SRC_MD2MS1_MASK                                 0x2
#define _MD2SRC_MD2MS2_POSN                                 0x2
#define _MD2SRC_MD2MS2_POSITION                             0x2
#define _MD2SRC_MD2MS2_SIZE                                 0x1
#define _MD2SRC_MD2MS2_LENGTH                               0x1
#define _MD2SRC_MD2MS2_MASK                                 0x4
#define _MD2SRC_MD2MS3_POSN                                 0x3
#define _MD2SRC_MD2MS3_POSITION                             0x3
#define _MD2SRC_MD2MS3_SIZE                                 0x1
#define _MD2SRC_MD2MS3_LENGTH                               0x1
#define _MD2SRC_MD2MS3_MASK                                 0x8
#define _MD2SRC_MD2MS4_POSN                                 0x4
#define _MD2SRC_MD2MS4_POSITION                             0x4
#define _MD2SRC_MD2MS4_SIZE                                 0x1
#define _MD2SRC_MD2MS4_LENGTH                               0x1
#define _MD2SRC_MD2MS4_MASK                                 0x10

// Register: MD2CARL
#define MD2CARL MD2CARL
extern volatile unsigned char           MD2CARL             __at(0x31E);
#ifndef _LIB_BUILD
asm("MD2CARL equ 031Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CL                     :5;
    };
    struct {
        unsigned CL0                    :1;
        unsigned CL1                    :1;
        unsigned CL2                    :1;
        unsigned CL3                    :1;
        unsigned CL4                    :1;
    };
    struct {
        unsigned MD2CL                  :5;
    };
    struct {
        unsigned MD2CL0                 :1;
        unsigned MD2CL1                 :1;
        unsigned MD2CL2                 :1;
        unsigned MD2CL3                 :1;
        unsigned MD2CL4                 :1;
    };
} MD2CARLbits_t;
extern volatile MD2CARLbits_t MD2CARLbits __at(0x31E);
// bitfield macros
#define _MD2CARL_CL_POSN                                    0x0
#define _MD2CARL_CL_POSITION                                0x0
#define _MD2CARL_CL_SIZE                                    0x5
#define _MD2CARL_CL_LENGTH                                  0x5
#define _MD2CARL_CL_MASK                                    0x1F
#define _MD2CARL_CL0_POSN                                   0x0
#define _MD2CARL_CL0_POSITION                               0x0
#define _MD2CARL_CL0_SIZE                                   0x1
#define _MD2CARL_CL0_LENGTH                                 0x1
#define _MD2CARL_CL0_MASK                                   0x1
#define _MD2CARL_CL1_POSN                                   0x1
#define _MD2CARL_CL1_POSITION                               0x1
#define _MD2CARL_CL1_SIZE                                   0x1
#define _MD2CARL_CL1_LENGTH                                 0x1
#define _MD2CARL_CL1_MASK                                   0x2
#define _MD2CARL_CL2_POSN                                   0x2
#define _MD2CARL_CL2_POSITION                               0x2
#define _MD2CARL_CL2_SIZE                                   0x1
#define _MD2CARL_CL2_LENGTH                                 0x1
#define _MD2CARL_CL2_MASK                                   0x4
#define _MD2CARL_CL3_POSN                                   0x3
#define _MD2CARL_CL3_POSITION                               0x3
#define _MD2CARL_CL3_SIZE                                   0x1
#define _MD2CARL_CL3_LENGTH                                 0x1
#define _MD2CARL_CL3_MASK                                   0x8
#define _MD2CARL_CL4_POSN                                   0x4
#define _MD2CARL_CL4_POSITION                               0x4
#define _MD2CARL_CL4_SIZE                                   0x1
#define _MD2CARL_CL4_LENGTH                                 0x1
#define _MD2CARL_CL4_MASK                                   0x10
#define _MD2CARL_MD2CL_POSN                                 0x0
#define _MD2CARL_MD2CL_POSITION                             0x0
#define _MD2CARL_MD2CL_SIZE                                 0x5
#define _MD2CARL_MD2CL_LENGTH                               0x5
#define _MD2CARL_MD2CL_MASK                                 0x1F
#define _MD2CARL_MD2CL0_POSN                                0x0
#define _MD2CARL_MD2CL0_POSITION                            0x0
#define _MD2CARL_MD2CL0_SIZE                                0x1
#define _MD2CARL_MD2CL0_LENGTH                              0x1
#define _MD2CARL_MD2CL0_MASK                                0x1
#define _MD2CARL_MD2CL1_POSN                                0x1
#define _MD2CARL_MD2CL1_POSITION                            0x1
#define _MD2CARL_MD2CL1_SIZE                                0x1
#define _MD2CARL_MD2CL1_LENGTH                              0x1
#define _MD2CARL_MD2CL1_MASK                                0x2
#define _MD2CARL_MD2CL2_POSN                                0x2
#define _MD2CARL_MD2CL2_POSITION                            0x2
#define _MD2CARL_MD2CL2_SIZE                                0x1
#define _MD2CARL_MD2CL2_LENGTH                              0x1
#define _MD2CARL_MD2CL2_MASK                                0x4
#define _MD2CARL_MD2CL3_POSN                                0x3
#define _MD2CARL_MD2CL3_POSITION                            0x3
#define _MD2CARL_MD2CL3_SIZE                                0x1
#define _MD2CARL_MD2CL3_LENGTH                              0x1
#define _MD2CARL_MD2CL3_MASK                                0x8
#define _MD2CARL_MD2CL4_POSN                                0x4
#define _MD2CARL_MD2CL4_POSITION                            0x4
#define _MD2CARL_MD2CL4_SIZE                                0x1
#define _MD2CARL_MD2CL4_LENGTH                              0x1
#define _MD2CARL_MD2CL4_MASK                                0x10

// Register: MD2CARH
#define MD2CARH MD2CARH
extern volatile unsigned char           MD2CARH             __at(0x31F);
#ifndef _LIB_BUILD
asm("MD2CARH equ 031Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CH                     :5;
    };
    struct {
        unsigned CH0                    :1;
        unsigned CH1                    :1;
        unsigned CH2                    :1;
        unsigned CH3                    :1;
        unsigned CH4                    :1;
    };
    struct {
        unsigned MD2CH                  :5;
    };
    struct {
        unsigned MD2CH0                 :1;
        unsigned MD2CH1                 :1;
        unsigned MD2CH2                 :1;
        unsigned MD2CH3                 :1;
        unsigned MD2CH4                 :1;
    };
} MD2CARHbits_t;
extern volatile MD2CARHbits_t MD2CARHbits __at(0x31F);
// bitfield macros
#define _MD2CARH_CH_POSN                                    0x0
#define _MD2CARH_CH_POSITION                                0x0
#define _MD2CARH_CH_SIZE                                    0x5
#define _MD2CARH_CH_LENGTH                                  0x5
#define _MD2CARH_CH_MASK                                    0x1F
#define _MD2CARH_CH0_POSN                                   0x0
#define _MD2CARH_CH0_POSITION                               0x0
#define _MD2CARH_CH0_SIZE                                   0x1
#define _MD2CARH_CH0_LENGTH                                 0x1
#define _MD2CARH_CH0_MASK                                   0x1
#define _MD2CARH_CH1_POSN                                   0x1
#define _MD2CARH_CH1_POSITION                               0x1
#define _MD2CARH_CH1_SIZE                                   0x1
#define _MD2CARH_CH1_LENGTH                                 0x1
#define _MD2CARH_CH1_MASK                                   0x2
#define _MD2CARH_CH2_POSN                                   0x2
#define _MD2CARH_CH2_POSITION                               0x2
#define _MD2CARH_CH2_SIZE                                   0x1
#define _MD2CARH_CH2_LENGTH                                 0x1
#define _MD2CARH_CH2_MASK                                   0x4
#define _MD2CARH_CH3_POSN                                   0x3
#define _MD2CARH_CH3_POSITION                               0x3
#define _MD2CARH_CH3_SIZE                                   0x1
#define _MD2CARH_CH3_LENGTH                                 0x1
#define _MD2CARH_CH3_MASK                                   0x8
#define _MD2CARH_CH4_POSN                                   0x4
#define _MD2CARH_CH4_POSITION                               0x4
#define _MD2CARH_CH4_SIZE                                   0x1
#define _MD2CARH_CH4_LENGTH                                 0x1
#define _MD2CARH_CH4_MASK                                   0x10
#define _MD2CARH_MD2CH_POSN                                 0x0
#define _MD2CARH_MD2CH_POSITION                             0x0
#define _MD2CARH_MD2CH_SIZE                                 0x5
#define _MD2CARH_MD2CH_LENGTH                               0x5
#define _MD2CARH_MD2CH_MASK                                 0x1F
#define _MD2CARH_MD2CH0_POSN                                0x0
#define _MD2CARH_MD2CH0_POSITION                            0x0
#define _MD2CARH_MD2CH0_SIZE                                0x1
#define _MD2CARH_MD2CH0_LENGTH                              0x1
#define _MD2CARH_MD2CH0_MASK                                0x1
#define _MD2CARH_MD2CH1_POSN                                0x1
#define _MD2CARH_MD2CH1_POSITION                            0x1
#define _MD2CARH_MD2CH1_SIZE                                0x1
#define _MD2CARH_MD2CH1_LENGTH                              0x1
#define _MD2CARH_MD2CH1_MASK                                0x2
#define _MD2CARH_MD2CH2_POSN                                0x2
#define _MD2CARH_MD2CH2_POSITION                            0x2
#define _MD2CARH_MD2CH2_SIZE                                0x1
#define _MD2CARH_MD2CH2_LENGTH                              0x1
#define _MD2CARH_MD2CH2_MASK                                0x4
#define _MD2CARH_MD2CH3_POSN                                0x3
#define _MD2CARH_MD2CH3_POSITION                            0x3
#define _MD2CARH_MD2CH3_SIZE                                0x1
#define _MD2CARH_MD2CH3_LENGTH                              0x1
#define _MD2CARH_MD2CH3_MASK                                0x8
#define _MD2CARH_MD2CH4_POSN                                0x4
#define _MD2CARH_MD2CH4_POSITION                            0x4
#define _MD2CARH_MD2CH4_SIZE                                0x1
#define _MD2CARH_MD2CH4_LENGTH                              0x1
#define _MD2CARH_MD2CH4_MASK                                0x10

// Register: INLVLA
#define INLVLA INLVLA
extern volatile unsigned char           INLVLA              __at(0x38C);
#ifndef _LIB_BUILD
asm("INLVLA equ 038Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INLVLA0                :1;
        unsigned INLVLA1                :1;
        unsigned INLVLA2                :1;
        unsigned INLVLA3                :1;
        unsigned INLVLA4                :1;
        unsigned INLVLA5                :1;
        unsigned INLVA6                 :1;
        unsigned INLVA7                 :1;
    };
} INLVLAbits_t;
extern volatile INLVLAbits_t INLVLAbits __at(0x38C);
// bitfield macros
#define _INLVLA_INLVLA0_POSN                                0x0
#define _INLVLA_INLVLA0_POSITION                            0x0
#define _INLVLA_INLVLA0_SIZE                                0x1
#define _INLVLA_INLVLA0_LENGTH                              0x1
#define _INLVLA_INLVLA0_MASK                                0x1
#define _INLVLA_INLVLA1_POSN                                0x1
#define _INLVLA_INLVLA1_POSITION                            0x1
#define _INLVLA_INLVLA1_SIZE                                0x1
#define _INLVLA_INLVLA1_LENGTH                              0x1
#define _INLVLA_INLVLA1_MASK                                0x2
#define _INLVLA_INLVLA2_POSN                                0x2
#define _INLVLA_INLVLA2_POSITION                            0x2
#define _INLVLA_INLVLA2_SIZE                                0x1
#define _INLVLA_INLVLA2_LENGTH                              0x1
#define _INLVLA_INLVLA2_MASK                                0x4
#define _INLVLA_INLVLA3_POSN                                0x3
#define _INLVLA_INLVLA3_POSITION                            0x3
#define _INLVLA_INLVLA3_SIZE                                0x1
#define _INLVLA_INLVLA3_LENGTH                              0x1
#define _INLVLA_INLVLA3_MASK                                0x8
#define _INLVLA_INLVLA4_POSN                                0x4
#define _INLVLA_INLVLA4_POSITION                            0x4
#define _INLVLA_INLVLA4_SIZE                                0x1
#define _INLVLA_INLVLA4_LENGTH                              0x1
#define _INLVLA_INLVLA4_MASK                                0x10
#define _INLVLA_INLVLA5_POSN                                0x5
#define _INLVLA_INLVLA5_POSITION                            0x5
#define _INLVLA_INLVLA5_SIZE                                0x1
#define _INLVLA_INLVLA5_LENGTH                              0x1
#define _INLVLA_INLVLA5_MASK                                0x20
#define _INLVLA_INLVA6_POSN                                 0x6
#define _INLVLA_INLVA6_POSITION                             0x6
#define _INLVLA_INLVA6_SIZE                                 0x1
#define _INLVLA_INLVA6_LENGTH                               0x1
#define _INLVLA_INLVA6_MASK                                 0x40
#define _INLVLA_INLVA7_POSN                                 0x7
#define _INLVLA_INLVA7_POSITION                             0x7
#define _INLVLA_INLVA7_SIZE                                 0x1
#define _INLVLA_INLVA7_LENGTH                               0x1
#define _INLVLA_INLVA7_MASK                                 0x80

// Register: INLVLB
#define INLVLB INLVLB
extern volatile unsigned char           INLVLB              __at(0x38D);
#ifndef _LIB_BUILD
asm("INLVLB equ 038Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INLVB0                 :1;
        unsigned INLVB1                 :1;
        unsigned INLVB2                 :1;
        unsigned INLVB3                 :1;
        unsigned INLVLB4                :1;
        unsigned INLVLB5                :1;
        unsigned INLVLB6                :1;
        unsigned INLVLB7                :1;
    };
} INLVLBbits_t;
extern volatile INLVLBbits_t INLVLBbits __at(0x38D);
// bitfield macros
#define _INLVLB_INLVB0_POSN                                 0x0
#define _INLVLB_INLVB0_POSITION                             0x0
#define _INLVLB_INLVB0_SIZE                                 0x1
#define _INLVLB_INLVB0_LENGTH                               0x1
#define _INLVLB_INLVB0_MASK                                 0x1
#define _INLVLB_INLVB1_POSN                                 0x1
#define _INLVLB_INLVB1_POSITION                             0x1
#define _INLVLB_INLVB1_SIZE                                 0x1
#define _INLVLB_INLVB1_LENGTH                               0x1
#define _INLVLB_INLVB1_MASK                                 0x2
#define _INLVLB_INLVB2_POSN                                 0x2
#define _INLVLB_INLVB2_POSITION                             0x2
#define _INLVLB_INLVB2_SIZE                                 0x1
#define _INLVLB_INLVB2_LENGTH                               0x1
#define _INLVLB_INLVB2_MASK                                 0x4
#define _INLVLB_INLVB3_POSN                                 0x3
#define _INLVLB_INLVB3_POSITION                             0x3
#define _INLVLB_INLVB3_SIZE                                 0x1
#define _INLVLB_INLVB3_LENGTH                               0x1
#define _INLVLB_INLVB3_MASK                                 0x8
#define _INLVLB_INLVLB4_POSN                                0x4
#define _INLVLB_INLVLB4_POSITION                            0x4
#define _INLVLB_INLVLB4_SIZE                                0x1
#define _INLVLB_INLVLB4_LENGTH                              0x1
#define _INLVLB_INLVLB4_MASK                                0x10
#define _INLVLB_INLVLB5_POSN                                0x5
#define _INLVLB_INLVLB5_POSITION                            0x5
#define _INLVLB_INLVLB5_SIZE                                0x1
#define _INLVLB_INLVLB5_LENGTH                              0x1
#define _INLVLB_INLVLB5_MASK                                0x20
#define _INLVLB_INLVLB6_POSN                                0x6
#define _INLVLB_INLVLB6_POSITION                            0x6
#define _INLVLB_INLVLB6_SIZE                                0x1
#define _INLVLB_INLVLB6_LENGTH                              0x1
#define _INLVLB_INLVLB6_MASK                                0x40
#define _INLVLB_INLVLB7_POSN                                0x7
#define _INLVLB_INLVLB7_POSITION                            0x7
#define _INLVLB_INLVLB7_SIZE                                0x1
#define _INLVLB_INLVLB7_LENGTH                              0x1
#define _INLVLB_INLVLB7_MASK                                0x80

// Register: INLVLC
#define INLVLC INLVLC
extern volatile unsigned char           INLVLC              __at(0x38E);
#ifndef _LIB_BUILD
asm("INLVLC equ 038Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INLVLC0                :1;
        unsigned INLVLC1                :1;
        unsigned INLVLC2                :1;
        unsigned INLVLC3                :1;
        unsigned INLVLC4                :1;
        unsigned INLVLC5                :1;
        unsigned INLVLC6                :1;
        unsigned INLVLC7                :1;
    };
} INLVLCbits_t;
extern volatile INLVLCbits_t INLVLCbits __at(0x38E);
// bitfield macros
#define _INLVLC_INLVLC0_POSN                                0x0
#define _INLVLC_INLVLC0_POSITION                            0x0
#define _INLVLC_INLVLC0_SIZE                                0x1
#define _INLVLC_INLVLC0_LENGTH                              0x1
#define _INLVLC_INLVLC0_MASK                                0x1
#define _INLVLC_INLVLC1_POSN                                0x1
#define _INLVLC_INLVLC1_POSITION                            0x1
#define _INLVLC_INLVLC1_SIZE                                0x1
#define _INLVLC_INLVLC1_LENGTH                              0x1
#define _INLVLC_INLVLC1_MASK                                0x2
#define _INLVLC_INLVLC2_POSN                                0x2
#define _INLVLC_INLVLC2_POSITION                            0x2
#define _INLVLC_INLVLC2_SIZE                                0x1
#define _INLVLC_INLVLC2_LENGTH                              0x1
#define _INLVLC_INLVLC2_MASK                                0x4
#define _INLVLC_INLVLC3_POSN                                0x3
#define _INLVLC_INLVLC3_POSITION                            0x3
#define _INLVLC_INLVLC3_SIZE                                0x1
#define _INLVLC_INLVLC3_LENGTH                              0x1
#define _INLVLC_INLVLC3_MASK                                0x8
#define _INLVLC_INLVLC4_POSN                                0x4
#define _INLVLC_INLVLC4_POSITION                            0x4
#define _INLVLC_INLVLC4_SIZE                                0x1
#define _INLVLC_INLVLC4_LENGTH                              0x1
#define _INLVLC_INLVLC4_MASK                                0x10
#define _INLVLC_INLVLC5_POSN                                0x5
#define _INLVLC_INLVLC5_POSITION                            0x5
#define _INLVLC_INLVLC5_SIZE                                0x1
#define _INLVLC_INLVLC5_LENGTH                              0x1
#define _INLVLC_INLVLC5_MASK                                0x20
#define _INLVLC_INLVLC6_POSN                                0x6
#define _INLVLC_INLVLC6_POSITION                            0x6
#define _INLVLC_INLVLC6_SIZE                                0x1
#define _INLVLC_INLVLC6_LENGTH                              0x1
#define _INLVLC_INLVLC6_MASK                                0x40
#define _INLVLC_INLVLC7_POSN                                0x7
#define _INLVLC_INLVLC7_POSITION                            0x7
#define _INLVLC_INLVLC7_SIZE                                0x1
#define _INLVLC_INLVLC7_LENGTH                              0x1
#define _INLVLC_INLVLC7_MASK                                0x80

// Register: INLVLD
#define INLVLD INLVLD
extern volatile unsigned char           INLVLD              __at(0x38F);
#ifndef _LIB_BUILD
asm("INLVLD equ 038Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INLVLD0                :1;
        unsigned INLVLD1                :1;
        unsigned INLVLD2                :1;
        unsigned INLVLD3                :1;
        unsigned INLVLD4                :1;
        unsigned INLVLD5                :1;
        unsigned INLVLD6                :1;
        unsigned INLVLD7                :1;
    };
} INLVLDbits_t;
extern volatile INLVLDbits_t INLVLDbits __at(0x38F);
// bitfield macros
#define _INLVLD_INLVLD0_POSN                                0x0
#define _INLVLD_INLVLD0_POSITION                            0x0
#define _INLVLD_INLVLD0_SIZE                                0x1
#define _INLVLD_INLVLD0_LENGTH                              0x1
#define _INLVLD_INLVLD0_MASK                                0x1
#define _INLVLD_INLVLD1_POSN                                0x1
#define _INLVLD_INLVLD1_POSITION                            0x1
#define _INLVLD_INLVLD1_SIZE                                0x1
#define _INLVLD_INLVLD1_LENGTH                              0x1
#define _INLVLD_INLVLD1_MASK                                0x2
#define _INLVLD_INLVLD2_POSN                                0x2
#define _INLVLD_INLVLD2_POSITION                            0x2
#define _INLVLD_INLVLD2_SIZE                                0x1
#define _INLVLD_INLVLD2_LENGTH                              0x1
#define _INLVLD_INLVLD2_MASK                                0x4
#define _INLVLD_INLVLD3_POSN                                0x3
#define _INLVLD_INLVLD3_POSITION                            0x3
#define _INLVLD_INLVLD3_SIZE                                0x1
#define _INLVLD_INLVLD3_LENGTH                              0x1
#define _INLVLD_INLVLD3_MASK                                0x8
#define _INLVLD_INLVLD4_POSN                                0x4
#define _INLVLD_INLVLD4_POSITION                            0x4
#define _INLVLD_INLVLD4_SIZE                                0x1
#define _INLVLD_INLVLD4_LENGTH                              0x1
#define _INLVLD_INLVLD4_MASK                                0x10
#define _INLVLD_INLVLD5_POSN                                0x5
#define _INLVLD_INLVLD5_POSITION                            0x5
#define _INLVLD_INLVLD5_SIZE                                0x1
#define _INLVLD_INLVLD5_LENGTH                              0x1
#define _INLVLD_INLVLD5_MASK                                0x20
#define _INLVLD_INLVLD6_POSN                                0x6
#define _INLVLD_INLVLD6_POSITION                            0x6
#define _INLVLD_INLVLD6_SIZE                                0x1
#define _INLVLD_INLVLD6_LENGTH                              0x1
#define _INLVLD_INLVLD6_MASK                                0x40
#define _INLVLD_INLVLD7_POSN                                0x7
#define _INLVLD_INLVLD7_POSITION                            0x7
#define _INLVLD_INLVLD7_SIZE                                0x1
#define _INLVLD_INLVLD7_LENGTH                              0x1
#define _INLVLD_INLVLD7_MASK                                0x80

// Register: INLVLE
#define INLVLE INLVLE
extern volatile unsigned char           INLVLE              __at(0x390);
#ifndef _LIB_BUILD
asm("INLVLE equ 0390h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INLVLE0                :1;
        unsigned INLVLE1                :1;
        unsigned INLVLE2                :1;
        unsigned INLVLE3                :1;
    };
} INLVLEbits_t;
extern volatile INLVLEbits_t INLVLEbits __at(0x390);
// bitfield macros
#define _INLVLE_INLVLE0_POSN                                0x0
#define _INLVLE_INLVLE0_POSITION                            0x0
#define _INLVLE_INLVLE0_SIZE                                0x1
#define _INLVLE_INLVLE0_LENGTH                              0x1
#define _INLVLE_INLVLE0_MASK                                0x1
#define _INLVLE_INLVLE1_POSN                                0x1
#define _INLVLE_INLVLE1_POSITION                            0x1
#define _INLVLE_INLVLE1_SIZE                                0x1
#define _INLVLE_INLVLE1_LENGTH                              0x1
#define _INLVLE_INLVLE1_MASK                                0x2
#define _INLVLE_INLVLE2_POSN                                0x2
#define _INLVLE_INLVLE2_POSITION                            0x2
#define _INLVLE_INLVLE2_SIZE                                0x1
#define _INLVLE_INLVLE2_LENGTH                              0x1
#define _INLVLE_INLVLE2_MASK                                0x4
#define _INLVLE_INLVLE3_POSN                                0x3
#define _INLVLE_INLVLE3_POSITION                            0x3
#define _INLVLE_INLVLE3_SIZE                                0x1
#define _INLVLE_INLVLE3_LENGTH                              0x1
#define _INLVLE_INLVLE3_MASK                                0x8

// Register: IOCAP
#define IOCAP IOCAP
extern volatile unsigned char           IOCAP               __at(0x391);
#ifndef _LIB_BUILD
asm("IOCAP equ 0391h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCAP0                 :1;
        unsigned IOCAP1                 :1;
        unsigned IOCAP2                 :1;
        unsigned IOCAP3                 :1;
        unsigned IOCAP4                 :1;
        unsigned IOCAP5                 :1;
        unsigned IOCAP6                 :1;
        unsigned IOCAP7                 :1;
    };
} IOCAPbits_t;
extern volatile IOCAPbits_t IOCAPbits __at(0x391);
// bitfield macros
#define _IOCAP_IOCAP0_POSN                                  0x0
#define _IOCAP_IOCAP0_POSITION                              0x0
#define _IOCAP_IOCAP0_SIZE                                  0x1
#define _IOCAP_IOCAP0_LENGTH                                0x1
#define _IOCAP_IOCAP0_MASK                                  0x1
#define _IOCAP_IOCAP1_POSN                                  0x1
#define _IOCAP_IOCAP1_POSITION                              0x1
#define _IOCAP_IOCAP1_SIZE                                  0x1
#define _IOCAP_IOCAP1_LENGTH                                0x1
#define _IOCAP_IOCAP1_MASK                                  0x2
#define _IOCAP_IOCAP2_POSN                                  0x2
#define _IOCAP_IOCAP2_POSITION                              0x2
#define _IOCAP_IOCAP2_SIZE                                  0x1
#define _IOCAP_IOCAP2_LENGTH                                0x1
#define _IOCAP_IOCAP2_MASK                                  0x4
#define _IOCAP_IOCAP3_POSN                                  0x3
#define _IOCAP_IOCAP3_POSITION                              0x3
#define _IOCAP_IOCAP3_SIZE                                  0x1
#define _IOCAP_IOCAP3_LENGTH                                0x1
#define _IOCAP_IOCAP3_MASK                                  0x8
#define _IOCAP_IOCAP4_POSN                                  0x4
#define _IOCAP_IOCAP4_POSITION                              0x4
#define _IOCAP_IOCAP4_SIZE                                  0x1
#define _IOCAP_IOCAP4_LENGTH                                0x1
#define _IOCAP_IOCAP4_MASK                                  0x10
#define _IOCAP_IOCAP5_POSN                                  0x5
#define _IOCAP_IOCAP5_POSITION                              0x5
#define _IOCAP_IOCAP5_SIZE                                  0x1
#define _IOCAP_IOCAP5_LENGTH                                0x1
#define _IOCAP_IOCAP5_MASK                                  0x20
#define _IOCAP_IOCAP6_POSN                                  0x6
#define _IOCAP_IOCAP6_POSITION                              0x6
#define _IOCAP_IOCAP6_SIZE                                  0x1
#define _IOCAP_IOCAP6_LENGTH                                0x1
#define _IOCAP_IOCAP6_MASK                                  0x40
#define _IOCAP_IOCAP7_POSN                                  0x7
#define _IOCAP_IOCAP7_POSITION                              0x7
#define _IOCAP_IOCAP7_SIZE                                  0x1
#define _IOCAP_IOCAP7_LENGTH                                0x1
#define _IOCAP_IOCAP7_MASK                                  0x80

// Register: IOCAN
#define IOCAN IOCAN
extern volatile unsigned char           IOCAN               __at(0x392);
#ifndef _LIB_BUILD
asm("IOCAN equ 0392h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCAN0                 :1;
        unsigned IOCAN1                 :1;
        unsigned IOCAN2                 :1;
        unsigned IOCAN3                 :1;
        unsigned IOCAN4                 :1;
        unsigned IOCAN5                 :1;
        unsigned IOCAN6                 :1;
        unsigned IOCAN7                 :1;
    };
} IOCANbits_t;
extern volatile IOCANbits_t IOCANbits __at(0x392);
// bitfield macros
#define _IOCAN_IOCAN0_POSN                                  0x0
#define _IOCAN_IOCAN0_POSITION                              0x0
#define _IOCAN_IOCAN0_SIZE                                  0x1
#define _IOCAN_IOCAN0_LENGTH                                0x1
#define _IOCAN_IOCAN0_MASK                                  0x1
#define _IOCAN_IOCAN1_POSN                                  0x1
#define _IOCAN_IOCAN1_POSITION                              0x1
#define _IOCAN_IOCAN1_SIZE                                  0x1
#define _IOCAN_IOCAN1_LENGTH                                0x1
#define _IOCAN_IOCAN1_MASK                                  0x2
#define _IOCAN_IOCAN2_POSN                                  0x2
#define _IOCAN_IOCAN2_POSITION                              0x2
#define _IOCAN_IOCAN2_SIZE                                  0x1
#define _IOCAN_IOCAN2_LENGTH                                0x1
#define _IOCAN_IOCAN2_MASK                                  0x4
#define _IOCAN_IOCAN3_POSN                                  0x3
#define _IOCAN_IOCAN3_POSITION                              0x3
#define _IOCAN_IOCAN3_SIZE                                  0x1
#define _IOCAN_IOCAN3_LENGTH                                0x1
#define _IOCAN_IOCAN3_MASK                                  0x8
#define _IOCAN_IOCAN4_POSN                                  0x4
#define _IOCAN_IOCAN4_POSITION                              0x4
#define _IOCAN_IOCAN4_SIZE                                  0x1
#define _IOCAN_IOCAN4_LENGTH                                0x1
#define _IOCAN_IOCAN4_MASK                                  0x10
#define _IOCAN_IOCAN5_POSN                                  0x5
#define _IOCAN_IOCAN5_POSITION                              0x5
#define _IOCAN_IOCAN5_SIZE                                  0x1
#define _IOCAN_IOCAN5_LENGTH                                0x1
#define _IOCAN_IOCAN5_MASK                                  0x20
#define _IOCAN_IOCAN6_POSN                                  0x6
#define _IOCAN_IOCAN6_POSITION                              0x6
#define _IOCAN_IOCAN6_SIZE                                  0x1
#define _IOCAN_IOCAN6_LENGTH                                0x1
#define _IOCAN_IOCAN6_MASK                                  0x40
#define _IOCAN_IOCAN7_POSN                                  0x7
#define _IOCAN_IOCAN7_POSITION                              0x7
#define _IOCAN_IOCAN7_SIZE                                  0x1
#define _IOCAN_IOCAN7_LENGTH                                0x1
#define _IOCAN_IOCAN7_MASK                                  0x80

// Register: IOCAF
#define IOCAF IOCAF
extern volatile unsigned char           IOCAF               __at(0x393);
#ifndef _LIB_BUILD
asm("IOCAF equ 0393h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCAF0                 :1;
        unsigned IOCAF1                 :1;
        unsigned IOCAF2                 :1;
        unsigned IOCAF3                 :1;
        unsigned IOCAF4                 :1;
        unsigned IOCAF5                 :1;
        unsigned IOCAF6                 :1;
        unsigned IOCAF7                 :1;
    };
} IOCAFbits_t;
extern volatile IOCAFbits_t IOCAFbits __at(0x393);
// bitfield macros
#define _IOCAF_IOCAF0_POSN                                  0x0
#define _IOCAF_IOCAF0_POSITION                              0x0
#define _IOCAF_IOCAF0_SIZE                                  0x1
#define _IOCAF_IOCAF0_LENGTH                                0x1
#define _IOCAF_IOCAF0_MASK                                  0x1
#define _IOCAF_IOCAF1_POSN                                  0x1
#define _IOCAF_IOCAF1_POSITION                              0x1
#define _IOCAF_IOCAF1_SIZE                                  0x1
#define _IOCAF_IOCAF1_LENGTH                                0x1
#define _IOCAF_IOCAF1_MASK                                  0x2
#define _IOCAF_IOCAF2_POSN                                  0x2
#define _IOCAF_IOCAF2_POSITION                              0x2
#define _IOCAF_IOCAF2_SIZE                                  0x1
#define _IOCAF_IOCAF2_LENGTH                                0x1
#define _IOCAF_IOCAF2_MASK                                  0x4
#define _IOCAF_IOCAF3_POSN                                  0x3
#define _IOCAF_IOCAF3_POSITION                              0x3
#define _IOCAF_IOCAF3_SIZE                                  0x1
#define _IOCAF_IOCAF3_LENGTH                                0x1
#define _IOCAF_IOCAF3_MASK                                  0x8
#define _IOCAF_IOCAF4_POSN                                  0x4
#define _IOCAF_IOCAF4_POSITION                              0x4
#define _IOCAF_IOCAF4_SIZE                                  0x1
#define _IOCAF_IOCAF4_LENGTH                                0x1
#define _IOCAF_IOCAF4_MASK                                  0x10
#define _IOCAF_IOCAF5_POSN                                  0x5
#define _IOCAF_IOCAF5_POSITION                              0x5
#define _IOCAF_IOCAF5_SIZE                                  0x1
#define _IOCAF_IOCAF5_LENGTH                                0x1
#define _IOCAF_IOCAF5_MASK                                  0x20
#define _IOCAF_IOCAF6_POSN                                  0x6
#define _IOCAF_IOCAF6_POSITION                              0x6
#define _IOCAF_IOCAF6_SIZE                                  0x1
#define _IOCAF_IOCAF6_LENGTH                                0x1
#define _IOCAF_IOCAF6_MASK                                  0x40
#define _IOCAF_IOCAF7_POSN                                  0x7
#define _IOCAF_IOCAF7_POSITION                              0x7
#define _IOCAF_IOCAF7_SIZE                                  0x1
#define _IOCAF_IOCAF7_LENGTH                                0x1
#define _IOCAF_IOCAF7_MASK                                  0x80

// Register: IOCBP
#define IOCBP IOCBP
extern volatile unsigned char           IOCBP               __at(0x394);
#ifndef _LIB_BUILD
asm("IOCBP equ 0394h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCBP0                 :1;
        unsigned IOCBP1                 :1;
        unsigned IOCBP2                 :1;
        unsigned IOCBP3                 :1;
        unsigned IOCBP4                 :1;
        unsigned IOCBP5                 :1;
        unsigned IOCBP6                 :1;
        unsigned IOCBP7                 :1;
    };
} IOCBPbits_t;
extern volatile IOCBPbits_t IOCBPbits __at(0x394);
// bitfield macros
#define _IOCBP_IOCBP0_POSN                                  0x0
#define _IOCBP_IOCBP0_POSITION                              0x0
#define _IOCBP_IOCBP0_SIZE                                  0x1
#define _IOCBP_IOCBP0_LENGTH                                0x1
#define _IOCBP_IOCBP0_MASK                                  0x1
#define _IOCBP_IOCBP1_POSN                                  0x1
#define _IOCBP_IOCBP1_POSITION                              0x1
#define _IOCBP_IOCBP1_SIZE                                  0x1
#define _IOCBP_IOCBP1_LENGTH                                0x1
#define _IOCBP_IOCBP1_MASK                                  0x2
#define _IOCBP_IOCBP2_POSN                                  0x2
#define _IOCBP_IOCBP2_POSITION                              0x2
#define _IOCBP_IOCBP2_SIZE                                  0x1
#define _IOCBP_IOCBP2_LENGTH                                0x1
#define _IOCBP_IOCBP2_MASK                                  0x4
#define _IOCBP_IOCBP3_POSN                                  0x3
#define _IOCBP_IOCBP3_POSITION                              0x3
#define _IOCBP_IOCBP3_SIZE                                  0x1
#define _IOCBP_IOCBP3_LENGTH                                0x1
#define _IOCBP_IOCBP3_MASK                                  0x8
#define _IOCBP_IOCBP4_POSN                                  0x4
#define _IOCBP_IOCBP4_POSITION                              0x4
#define _IOCBP_IOCBP4_SIZE                                  0x1
#define _IOCBP_IOCBP4_LENGTH                                0x1
#define _IOCBP_IOCBP4_MASK                                  0x10
#define _IOCBP_IOCBP5_POSN                                  0x5
#define _IOCBP_IOCBP5_POSITION                              0x5
#define _IOCBP_IOCBP5_SIZE                                  0x1
#define _IOCBP_IOCBP5_LENGTH                                0x1
#define _IOCBP_IOCBP5_MASK                                  0x20
#define _IOCBP_IOCBP6_POSN                                  0x6
#define _IOCBP_IOCBP6_POSITION                              0x6
#define _IOCBP_IOCBP6_SIZE                                  0x1
#define _IOCBP_IOCBP6_LENGTH                                0x1
#define _IOCBP_IOCBP6_MASK                                  0x40
#define _IOCBP_IOCBP7_POSN                                  0x7
#define _IOCBP_IOCBP7_POSITION                              0x7
#define _IOCBP_IOCBP7_SIZE                                  0x1
#define _IOCBP_IOCBP7_LENGTH                                0x1
#define _IOCBP_IOCBP7_MASK                                  0x80

// Register: IOCBN
#define IOCBN IOCBN
extern volatile unsigned char           IOCBN               __at(0x395);
#ifndef _LIB_BUILD
asm("IOCBN equ 0395h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCBN0                 :1;
        unsigned IOCBN1                 :1;
        unsigned IOCBN2                 :1;
        unsigned IOCBN3                 :1;
        unsigned IOCBN4                 :1;
        unsigned IOCBN5                 :1;
        unsigned IOCBN6                 :1;
        unsigned IOCBN7                 :1;
    };
} IOCBNbits_t;
extern volatile IOCBNbits_t IOCBNbits __at(0x395);
// bitfield macros
#define _IOCBN_IOCBN0_POSN                                  0x0
#define _IOCBN_IOCBN0_POSITION                              0x0
#define _IOCBN_IOCBN0_SIZE                                  0x1
#define _IOCBN_IOCBN0_LENGTH                                0x1
#define _IOCBN_IOCBN0_MASK                                  0x1
#define _IOCBN_IOCBN1_POSN                                  0x1
#define _IOCBN_IOCBN1_POSITION                              0x1
#define _IOCBN_IOCBN1_SIZE                                  0x1
#define _IOCBN_IOCBN1_LENGTH                                0x1
#define _IOCBN_IOCBN1_MASK                                  0x2
#define _IOCBN_IOCBN2_POSN                                  0x2
#define _IOCBN_IOCBN2_POSITION                              0x2
#define _IOCBN_IOCBN2_SIZE                                  0x1
#define _IOCBN_IOCBN2_LENGTH                                0x1
#define _IOCBN_IOCBN2_MASK                                  0x4
#define _IOCBN_IOCBN3_POSN                                  0x3
#define _IOCBN_IOCBN3_POSITION                              0x3
#define _IOCBN_IOCBN3_SIZE                                  0x1
#define _IOCBN_IOCBN3_LENGTH                                0x1
#define _IOCBN_IOCBN3_MASK                                  0x8
#define _IOCBN_IOCBN4_POSN                                  0x4
#define _IOCBN_IOCBN4_POSITION                              0x4
#define _IOCBN_IOCBN4_SIZE                                  0x1
#define _IOCBN_IOCBN4_LENGTH                                0x1
#define _IOCBN_IOCBN4_MASK                                  0x10
#define _IOCBN_IOCBN5_POSN                                  0x5
#define _IOCBN_IOCBN5_POSITION                              0x5
#define _IOCBN_IOCBN5_SIZE                                  0x1
#define _IOCBN_IOCBN5_LENGTH                                0x1
#define _IOCBN_IOCBN5_MASK                                  0x20
#define _IOCBN_IOCBN6_POSN                                  0x6
#define _IOCBN_IOCBN6_POSITION                              0x6
#define _IOCBN_IOCBN6_SIZE                                  0x1
#define _IOCBN_IOCBN6_LENGTH                                0x1
#define _IOCBN_IOCBN6_MASK                                  0x40
#define _IOCBN_IOCBN7_POSN                                  0x7
#define _IOCBN_IOCBN7_POSITION                              0x7
#define _IOCBN_IOCBN7_SIZE                                  0x1
#define _IOCBN_IOCBN7_LENGTH                                0x1
#define _IOCBN_IOCBN7_MASK                                  0x80

// Register: IOCBF
#define IOCBF IOCBF
extern volatile unsigned char           IOCBF               __at(0x396);
#ifndef _LIB_BUILD
asm("IOCBF equ 0396h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCBF0                 :1;
        unsigned IOCBF1                 :1;
        unsigned IOCBF2                 :1;
        unsigned IOCBF3                 :1;
        unsigned IOCBF4                 :1;
        unsigned IOCBF5                 :1;
        unsigned IOCBF6                 :1;
        unsigned IOCBF7                 :1;
    };
} IOCBFbits_t;
extern volatile IOCBFbits_t IOCBFbits __at(0x396);
// bitfield macros
#define _IOCBF_IOCBF0_POSN                                  0x0
#define _IOCBF_IOCBF0_POSITION                              0x0
#define _IOCBF_IOCBF0_SIZE                                  0x1
#define _IOCBF_IOCBF0_LENGTH                                0x1
#define _IOCBF_IOCBF0_MASK                                  0x1
#define _IOCBF_IOCBF1_POSN                                  0x1
#define _IOCBF_IOCBF1_POSITION                              0x1
#define _IOCBF_IOCBF1_SIZE                                  0x1
#define _IOCBF_IOCBF1_LENGTH                                0x1
#define _IOCBF_IOCBF1_MASK                                  0x2
#define _IOCBF_IOCBF2_POSN                                  0x2
#define _IOCBF_IOCBF2_POSITION                              0x2
#define _IOCBF_IOCBF2_SIZE                                  0x1
#define _IOCBF_IOCBF2_LENGTH                                0x1
#define _IOCBF_IOCBF2_MASK                                  0x4
#define _IOCBF_IOCBF3_POSN                                  0x3
#define _IOCBF_IOCBF3_POSITION                              0x3
#define _IOCBF_IOCBF3_SIZE                                  0x1
#define _IOCBF_IOCBF3_LENGTH                                0x1
#define _IOCBF_IOCBF3_MASK                                  0x8
#define _IOCBF_IOCBF4_POSN                                  0x4
#define _IOCBF_IOCBF4_POSITION                              0x4
#define _IOCBF_IOCBF4_SIZE                                  0x1
#define _IOCBF_IOCBF4_LENGTH                                0x1
#define _IOCBF_IOCBF4_MASK                                  0x10
#define _IOCBF_IOCBF5_POSN                                  0x5
#define _IOCBF_IOCBF5_POSITION                              0x5
#define _IOCBF_IOCBF5_SIZE                                  0x1
#define _IOCBF_IOCBF5_LENGTH                                0x1
#define _IOCBF_IOCBF5_MASK                                  0x20
#define _IOCBF_IOCBF6_POSN                                  0x6
#define _IOCBF_IOCBF6_POSITION                              0x6
#define _IOCBF_IOCBF6_SIZE                                  0x1
#define _IOCBF_IOCBF6_LENGTH                                0x1
#define _IOCBF_IOCBF6_MASK                                  0x40
#define _IOCBF_IOCBF7_POSN                                  0x7
#define _IOCBF_IOCBF7_POSITION                              0x7
#define _IOCBF_IOCBF7_SIZE                                  0x1
#define _IOCBF_IOCBF7_LENGTH                                0x1
#define _IOCBF_IOCBF7_MASK                                  0x80

// Register: IOCCP
#define IOCCP IOCCP
extern volatile unsigned char           IOCCP               __at(0x397);
#ifndef _LIB_BUILD
asm("IOCCP equ 0397h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCCP0                 :1;
        unsigned IOCCP1                 :1;
        unsigned IOCCP2                 :1;
        unsigned IOCCP3                 :1;
        unsigned IOCCP4                 :1;
        unsigned IOCCP5                 :1;
        unsigned IOCCP6                 :1;
        unsigned IOCCP7                 :1;
    };
} IOCCPbits_t;
extern volatile IOCCPbits_t IOCCPbits __at(0x397);
// bitfield macros
#define _IOCCP_IOCCP0_POSN                                  0x0
#define _IOCCP_IOCCP0_POSITION                              0x0
#define _IOCCP_IOCCP0_SIZE                                  0x1
#define _IOCCP_IOCCP0_LENGTH                                0x1
#define _IOCCP_IOCCP0_MASK                                  0x1
#define _IOCCP_IOCCP1_POSN                                  0x1
#define _IOCCP_IOCCP1_POSITION                              0x1
#define _IOCCP_IOCCP1_SIZE                                  0x1
#define _IOCCP_IOCCP1_LENGTH                                0x1
#define _IOCCP_IOCCP1_MASK                                  0x2
#define _IOCCP_IOCCP2_POSN                                  0x2
#define _IOCCP_IOCCP2_POSITION                              0x2
#define _IOCCP_IOCCP2_SIZE                                  0x1
#define _IOCCP_IOCCP2_LENGTH                                0x1
#define _IOCCP_IOCCP2_MASK                                  0x4
#define _IOCCP_IOCCP3_POSN                                  0x3
#define _IOCCP_IOCCP3_POSITION                              0x3
#define _IOCCP_IOCCP3_SIZE                                  0x1
#define _IOCCP_IOCCP3_LENGTH                                0x1
#define _IOCCP_IOCCP3_MASK                                  0x8
#define _IOCCP_IOCCP4_POSN                                  0x4
#define _IOCCP_IOCCP4_POSITION                              0x4
#define _IOCCP_IOCCP4_SIZE                                  0x1
#define _IOCCP_IOCCP4_LENGTH                                0x1
#define _IOCCP_IOCCP4_MASK                                  0x10
#define _IOCCP_IOCCP5_POSN                                  0x5
#define _IOCCP_IOCCP5_POSITION                              0x5
#define _IOCCP_IOCCP5_SIZE                                  0x1
#define _IOCCP_IOCCP5_LENGTH                                0x1
#define _IOCCP_IOCCP5_MASK                                  0x20
#define _IOCCP_IOCCP6_POSN                                  0x6
#define _IOCCP_IOCCP6_POSITION                              0x6
#define _IOCCP_IOCCP6_SIZE                                  0x1
#define _IOCCP_IOCCP6_LENGTH                                0x1
#define _IOCCP_IOCCP6_MASK                                  0x40
#define _IOCCP_IOCCP7_POSN                                  0x7
#define _IOCCP_IOCCP7_POSITION                              0x7
#define _IOCCP_IOCCP7_SIZE                                  0x1
#define _IOCCP_IOCCP7_LENGTH                                0x1
#define _IOCCP_IOCCP7_MASK                                  0x80

// Register: IOCCN
#define IOCCN IOCCN
extern volatile unsigned char           IOCCN               __at(0x398);
#ifndef _LIB_BUILD
asm("IOCCN equ 0398h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCCN0                 :1;
        unsigned IOCCN1                 :1;
        unsigned IOCCN2                 :1;
        unsigned IOCCN3                 :1;
        unsigned IOCCN4                 :1;
        unsigned IOCCN5                 :1;
        unsigned IOCCN6                 :1;
        unsigned IOCCN7                 :1;
    };
} IOCCNbits_t;
extern volatile IOCCNbits_t IOCCNbits __at(0x398);
// bitfield macros
#define _IOCCN_IOCCN0_POSN                                  0x0
#define _IOCCN_IOCCN0_POSITION                              0x0
#define _IOCCN_IOCCN0_SIZE                                  0x1
#define _IOCCN_IOCCN0_LENGTH                                0x1
#define _IOCCN_IOCCN0_MASK                                  0x1
#define _IOCCN_IOCCN1_POSN                                  0x1
#define _IOCCN_IOCCN1_POSITION                              0x1
#define _IOCCN_IOCCN1_SIZE                                  0x1
#define _IOCCN_IOCCN1_LENGTH                                0x1
#define _IOCCN_IOCCN1_MASK                                  0x2
#define _IOCCN_IOCCN2_POSN                                  0x2
#define _IOCCN_IOCCN2_POSITION                              0x2
#define _IOCCN_IOCCN2_SIZE                                  0x1
#define _IOCCN_IOCCN2_LENGTH                                0x1
#define _IOCCN_IOCCN2_MASK                                  0x4
#define _IOCCN_IOCCN3_POSN                                  0x3
#define _IOCCN_IOCCN3_POSITION                              0x3
#define _IOCCN_IOCCN3_SIZE                                  0x1
#define _IOCCN_IOCCN3_LENGTH                                0x1
#define _IOCCN_IOCCN3_MASK                                  0x8
#define _IOCCN_IOCCN4_POSN                                  0x4
#define _IOCCN_IOCCN4_POSITION                              0x4
#define _IOCCN_IOCCN4_SIZE                                  0x1
#define _IOCCN_IOCCN4_LENGTH                                0x1
#define _IOCCN_IOCCN4_MASK                                  0x10
#define _IOCCN_IOCCN5_POSN                                  0x5
#define _IOCCN_IOCCN5_POSITION                              0x5
#define _IOCCN_IOCCN5_SIZE                                  0x1
#define _IOCCN_IOCCN5_LENGTH                                0x1
#define _IOCCN_IOCCN5_MASK                                  0x20
#define _IOCCN_IOCCN6_POSN                                  0x6
#define _IOCCN_IOCCN6_POSITION                              0x6
#define _IOCCN_IOCCN6_SIZE                                  0x1
#define _IOCCN_IOCCN6_LENGTH                                0x1
#define _IOCCN_IOCCN6_MASK                                  0x40
#define _IOCCN_IOCCN7_POSN                                  0x7
#define _IOCCN_IOCCN7_POSITION                              0x7
#define _IOCCN_IOCCN7_SIZE                                  0x1
#define _IOCCN_IOCCN7_LENGTH                                0x1
#define _IOCCN_IOCCN7_MASK                                  0x80

// Register: IOCCF
#define IOCCF IOCCF
extern volatile unsigned char           IOCCF               __at(0x399);
#ifndef _LIB_BUILD
asm("IOCCF equ 0399h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCCF0                 :1;
        unsigned IOCCF1                 :1;
        unsigned IOCCF2                 :1;
        unsigned IOCCF3                 :1;
        unsigned IOCCF4                 :1;
        unsigned IOCCF5                 :1;
        unsigned IOCCF6                 :1;
        unsigned IOCCF7                 :1;
    };
} IOCCFbits_t;
extern volatile IOCCFbits_t IOCCFbits __at(0x399);
// bitfield macros
#define _IOCCF_IOCCF0_POSN                                  0x0
#define _IOCCF_IOCCF0_POSITION                              0x0
#define _IOCCF_IOCCF0_SIZE                                  0x1
#define _IOCCF_IOCCF0_LENGTH                                0x1
#define _IOCCF_IOCCF0_MASK                                  0x1
#define _IOCCF_IOCCF1_POSN                                  0x1
#define _IOCCF_IOCCF1_POSITION                              0x1
#define _IOCCF_IOCCF1_SIZE                                  0x1
#define _IOCCF_IOCCF1_LENGTH                                0x1
#define _IOCCF_IOCCF1_MASK                                  0x2
#define _IOCCF_IOCCF2_POSN                                  0x2
#define _IOCCF_IOCCF2_POSITION                              0x2
#define _IOCCF_IOCCF2_SIZE                                  0x1
#define _IOCCF_IOCCF2_LENGTH                                0x1
#define _IOCCF_IOCCF2_MASK                                  0x4
#define _IOCCF_IOCCF3_POSN                                  0x3
#define _IOCCF_IOCCF3_POSITION                              0x3
#define _IOCCF_IOCCF3_SIZE                                  0x1
#define _IOCCF_IOCCF3_LENGTH                                0x1
#define _IOCCF_IOCCF3_MASK                                  0x8
#define _IOCCF_IOCCF4_POSN                                  0x4
#define _IOCCF_IOCCF4_POSITION                              0x4
#define _IOCCF_IOCCF4_SIZE                                  0x1
#define _IOCCF_IOCCF4_LENGTH                                0x1
#define _IOCCF_IOCCF4_MASK                                  0x10
#define _IOCCF_IOCCF5_POSN                                  0x5
#define _IOCCF_IOCCF5_POSITION                              0x5
#define _IOCCF_IOCCF5_SIZE                                  0x1
#define _IOCCF_IOCCF5_LENGTH                                0x1
#define _IOCCF_IOCCF5_MASK                                  0x20
#define _IOCCF_IOCCF6_POSN                                  0x6
#define _IOCCF_IOCCF6_POSITION                              0x6
#define _IOCCF_IOCCF6_SIZE                                  0x1
#define _IOCCF_IOCCF6_LENGTH                                0x1
#define _IOCCF_IOCCF6_MASK                                  0x40
#define _IOCCF_IOCCF7_POSN                                  0x7
#define _IOCCF_IOCCF7_POSITION                              0x7
#define _IOCCF_IOCCF7_SIZE                                  0x1
#define _IOCCF_IOCCF7_LENGTH                                0x1
#define _IOCCF_IOCCF7_MASK                                  0x80

// Register: IOCEP
#define IOCEP IOCEP
extern volatile unsigned char           IOCEP               __at(0x39D);
#ifndef _LIB_BUILD
asm("IOCEP equ 039Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :3;
        unsigned IOCEP3                 :1;
    };
} IOCEPbits_t;
extern volatile IOCEPbits_t IOCEPbits __at(0x39D);
// bitfield macros
#define _IOCEP_IOCEP3_POSN                                  0x3
#define _IOCEP_IOCEP3_POSITION                              0x3
#define _IOCEP_IOCEP3_SIZE                                  0x1
#define _IOCEP_IOCEP3_LENGTH                                0x1
#define _IOCEP_IOCEP3_MASK                                  0x8

// Register: IOCEN
#define IOCEN IOCEN
extern volatile unsigned char           IOCEN               __at(0x39E);
#ifndef _LIB_BUILD
asm("IOCEN equ 039Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :3;
        unsigned IOCEN3                 :1;
    };
} IOCENbits_t;
extern volatile IOCENbits_t IOCENbits __at(0x39E);
// bitfield macros
#define _IOCEN_IOCEN3_POSN                                  0x3
#define _IOCEN_IOCEN3_POSITION                              0x3
#define _IOCEN_IOCEN3_SIZE                                  0x1
#define _IOCEN_IOCEN3_LENGTH                                0x1
#define _IOCEN_IOCEN3_MASK                                  0x8

// Register: IOCEF
#define IOCEF IOCEF
extern volatile unsigned char           IOCEF               __at(0x39F);
#ifndef _LIB_BUILD
asm("IOCEF equ 039Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :3;
        unsigned IOCEF3                 :1;
    };
} IOCEFbits_t;
extern volatile IOCEFbits_t IOCEFbits __at(0x39F);
// bitfield macros
#define _IOCEF_IOCEF3_POSN                                  0x3
#define _IOCEF_IOCEF3_POSITION                              0x3
#define _IOCEF_IOCEF3_SIZE                                  0x1
#define _IOCEF_IOCEF3_LENGTH                                0x1
#define _IOCEF_IOCEF3_MASK                                  0x8

// Register: HIDRVB
#define HIDRVB HIDRVB
extern volatile unsigned char           HIDRVB              __at(0x40D);
#ifndef _LIB_BUILD
asm("HIDRVB equ 040Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned HIDB0                  :1;
        unsigned HIDB1                  :1;
    };
} HIDRVBbits_t;
extern volatile HIDRVBbits_t HIDRVBbits __at(0x40D);
// bitfield macros
#define _HIDRVB_HIDB0_POSN                                  0x0
#define _HIDRVB_HIDB0_POSITION                              0x0
#define _HIDRVB_HIDB0_SIZE                                  0x1
#define _HIDRVB_HIDB0_LENGTH                                0x1
#define _HIDRVB_HIDB0_MASK                                  0x1
#define _HIDRVB_HIDB1_POSN                                  0x1
#define _HIDRVB_HIDB1_POSITION                              0x1
#define _HIDRVB_HIDB1_SIZE                                  0x1
#define _HIDRVB_HIDB1_LENGTH                                0x1
#define _HIDRVB_HIDB1_MASK                                  0x2

// Register: TMR5
#define TMR5 TMR5
extern volatile unsigned short          TMR5                __at(0x40F);
#ifndef _LIB_BUILD
asm("TMR5 equ 040Fh");
#endif

// Register: TMR5L
#define TMR5L TMR5L
extern volatile unsigned char           TMR5L               __at(0x40F);
#ifndef _LIB_BUILD
asm("TMR5L equ 040Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
} TMR5Lbits_t;
extern volatile TMR5Lbits_t TMR5Lbits __at(0x40F);
// bitfield macros
#define _TMR5L_TMR_POSN                                     0x0
#define _TMR5L_TMR_POSITION                                 0x0
#define _TMR5L_TMR_SIZE                                     0x8
#define _TMR5L_TMR_LENGTH                                   0x8
#define _TMR5L_TMR_MASK                                     0xFF

// Register: TMR5H
#define TMR5H TMR5H
extern volatile unsigned char           TMR5H               __at(0x410);
#ifndef _LIB_BUILD
asm("TMR5H equ 0410h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
} TMR5Hbits_t;
extern volatile TMR5Hbits_t TMR5Hbits __at(0x410);
// bitfield macros
#define _TMR5H_TMR_POSN                                     0x0
#define _TMR5H_TMR_POSITION                                 0x0
#define _TMR5H_TMR_SIZE                                     0x8
#define _TMR5H_TMR_LENGTH                                   0x8
#define _TMR5H_TMR_MASK                                     0xFF

// Register: T5CON
#define T5CON T5CON
extern volatile unsigned char           T5CON               __at(0x411);
#ifndef _LIB_BUILD
asm("T5CON equ 0411h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ON                     :1;
        unsigned                        :1;
        unsigned nSYNC                  :1;
        unsigned OSCEN                  :1;
        unsigned CKPS                   :2;
        unsigned CS                     :2;
    };
    struct {
        unsigned TMRON                  :1;
        unsigned                        :1;
        unsigned SYNC                   :1;
        unsigned SOSCEN                 :1;
        unsigned CKPS0                  :1;
        unsigned CKPS1                  :1;
        unsigned CS0                    :1;
        unsigned CS1                    :1;
    };
    struct {
        unsigned TMR5ON                 :1;
        unsigned                        :1;
        unsigned nT5SYNC                :1;
        unsigned T5OSCEN                :1;
        unsigned                        :2;
        unsigned T5CS0                  :1;
        unsigned T5CS1                  :1;
    };
    struct {
        unsigned T5ON                   :1;
        unsigned                        :3;
        unsigned T5CKPS0                :1;
        unsigned T5CKPS1                :1;
        unsigned TMR5CS0                :1;
        unsigned TMR5CS1                :1;
    };
} T5CONbits_t;
extern volatile T5CONbits_t T5CONbits __at(0x411);
// bitfield macros
#define _T5CON_ON_POSN                                      0x0
#define _T5CON_ON_POSITION                                  0x0
#define _T5CON_ON_SIZE                                      0x1
#define _T5CON_ON_LENGTH                                    0x1
#define _T5CON_ON_MASK                                      0x1
#define _T5CON_nSYNC_POSN                                   0x2
#define _T5CON_nSYNC_POSITION                               0x2
#define _T5CON_nSYNC_SIZE                                   0x1
#define _T5CON_nSYNC_LENGTH                                 0x1
#define _T5CON_nSYNC_MASK                                   0x4
#define _T5CON_OSCEN_POSN                                   0x3
#define _T5CON_OSCEN_POSITION                               0x3
#define _T5CON_OSCEN_SIZE                                   0x1
#define _T5CON_OSCEN_LENGTH                                 0x1
#define _T5CON_OSCEN_MASK                                   0x8
#define _T5CON_CKPS_POSN                                    0x4
#define _T5CON_CKPS_POSITION                                0x4
#define _T5CON_CKPS_SIZE                                    0x2
#define _T5CON_CKPS_LENGTH                                  0x2
#define _T5CON_CKPS_MASK                                    0x30
#define _T5CON_CS_POSN                                      0x6
#define _T5CON_CS_POSITION                                  0x6
#define _T5CON_CS_SIZE                                      0x2
#define _T5CON_CS_LENGTH                                    0x2
#define _T5CON_CS_MASK                                      0xC0
#define _T5CON_TMRON_POSN                                   0x0
#define _T5CON_TMRON_POSITION                               0x0
#define _T5CON_TMRON_SIZE                                   0x1
#define _T5CON_TMRON_LENGTH                                 0x1
#define _T5CON_TMRON_MASK                                   0x1
#define _T5CON_SYNC_POSN                                    0x2
#define _T5CON_SYNC_POSITION                                0x2
#define _T5CON_SYNC_SIZE                                    0x1
#define _T5CON_SYNC_LENGTH                                  0x1
#define _T5CON_SYNC_MASK                                    0x4
#define _T5CON_SOSCEN_POSN                                  0x3
#define _T5CON_SOSCEN_POSITION                              0x3
#define _T5CON_SOSCEN_SIZE                                  0x1
#define _T5CON_SOSCEN_LENGTH                                0x1
#define _T5CON_SOSCEN_MASK                                  0x8
#define _T5CON_CKPS0_POSN                                   0x4
#define _T5CON_CKPS0_POSITION                               0x4
#define _T5CON_CKPS0_SIZE                                   0x1
#define _T5CON_CKPS0_LENGTH                                 0x1
#define _T5CON_CKPS0_MASK                                   0x10
#define _T5CON_CKPS1_POSN                                   0x5
#define _T5CON_CKPS1_POSITION                               0x5
#define _T5CON_CKPS1_SIZE                                   0x1
#define _T5CON_CKPS1_LENGTH                                 0x1
#define _T5CON_CKPS1_MASK                                   0x20
#define _T5CON_CS0_POSN                                     0x6
#define _T5CON_CS0_POSITION                                 0x6
#define _T5CON_CS0_SIZE                                     0x1
#define _T5CON_CS0_LENGTH                                   0x1
#define _T5CON_CS0_MASK                                     0x40
#define _T5CON_CS1_POSN                                     0x7
#define _T5CON_CS1_POSITION                                 0x7
#define _T5CON_CS1_SIZE                                     0x1
#define _T5CON_CS1_LENGTH                                   0x1
#define _T5CON_CS1_MASK                                     0x80
#define _T5CON_TMR5ON_POSN                                  0x0
#define _T5CON_TMR5ON_POSITION                              0x0
#define _T5CON_TMR5ON_SIZE                                  0x1
#define _T5CON_TMR5ON_LENGTH                                0x1
#define _T5CON_TMR5ON_MASK                                  0x1
#define _T5CON_nT5SYNC_POSN                                 0x2
#define _T5CON_nT5SYNC_POSITION                             0x2
#define _T5CON_nT5SYNC_SIZE                                 0x1
#define _T5CON_nT5SYNC_LENGTH                               0x1
#define _T5CON_nT5SYNC_MASK                                 0x4
#define _T5CON_T5OSCEN_POSN                                 0x3
#define _T5CON_T5OSCEN_POSITION                             0x3
#define _T5CON_T5OSCEN_SIZE                                 0x1
#define _T5CON_T5OSCEN_LENGTH                               0x1
#define _T5CON_T5OSCEN_MASK                                 0x8
#define _T5CON_T5CS0_POSN                                   0x6
#define _T5CON_T5CS0_POSITION                               0x6
#define _T5CON_T5CS0_SIZE                                   0x1
#define _T5CON_T5CS0_LENGTH                                 0x1
#define _T5CON_T5CS0_MASK                                   0x40
#define _T5CON_T5CS1_POSN                                   0x7
#define _T5CON_T5CS1_POSITION                               0x7
#define _T5CON_T5CS1_SIZE                                   0x1
#define _T5CON_T5CS1_LENGTH                                 0x1
#define _T5CON_T5CS1_MASK                                   0x80
#define _T5CON_T5ON_POSN                                    0x0
#define _T5CON_T5ON_POSITION                                0x0
#define _T5CON_T5ON_SIZE                                    0x1
#define _T5CON_T5ON_LENGTH                                  0x1
#define _T5CON_T5ON_MASK                                    0x1
#define _T5CON_T5CKPS0_POSN                                 0x4
#define _T5CON_T5CKPS0_POSITION                             0x4
#define _T5CON_T5CKPS0_SIZE                                 0x1
#define _T5CON_T5CKPS0_LENGTH                               0x1
#define _T5CON_T5CKPS0_MASK                                 0x10
#define _T5CON_T5CKPS1_POSN                                 0x5
#define _T5CON_T5CKPS1_POSITION                             0x5
#define _T5CON_T5CKPS1_SIZE                                 0x1
#define _T5CON_T5CKPS1_LENGTH                               0x1
#define _T5CON_T5CKPS1_MASK                                 0x20
#define _T5CON_TMR5CS0_POSN                                 0x6
#define _T5CON_TMR5CS0_POSITION                             0x6
#define _T5CON_TMR5CS0_SIZE                                 0x1
#define _T5CON_TMR5CS0_LENGTH                               0x1
#define _T5CON_TMR5CS0_MASK                                 0x40
#define _T5CON_TMR5CS1_POSN                                 0x7
#define _T5CON_TMR5CS1_POSITION                             0x7
#define _T5CON_TMR5CS1_SIZE                                 0x1
#define _T5CON_TMR5CS1_LENGTH                               0x1
#define _T5CON_TMR5CS1_MASK                                 0x80

// Register: T5GCON
#define T5GCON T5GCON
extern volatile unsigned char           T5GCON              __at(0x412);
#ifndef _LIB_BUILD
asm("T5GCON equ 0412h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned GSS                    :2;
        unsigned GVAL                   :1;
        unsigned GGO_nDONE              :1;
        unsigned GSPM                   :1;
        unsigned GTM                    :1;
        unsigned GPOL                   :1;
        unsigned GE                     :1;
    };
    struct {
        unsigned GSS0                   :1;
        unsigned GSS1                   :1;
        unsigned                        :5;
        unsigned T5GE                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned T5GVAL                 :1;
        unsigned T5GGO_nDONE            :1;
        unsigned T5GSPM                 :1;
        unsigned T5GTM                  :1;
        unsigned T5GPOL                 :1;
        unsigned TMR5GE                 :1;
    };
    struct {
        unsigned T5GSS0                 :1;
        unsigned T5GSS1                 :1;
    };
} T5GCONbits_t;
extern volatile T5GCONbits_t T5GCONbits __at(0x412);
// bitfield macros
#define _T5GCON_GSS_POSN                                    0x0
#define _T5GCON_GSS_POSITION                                0x0
#define _T5GCON_GSS_SIZE                                    0x2
#define _T5GCON_GSS_LENGTH                                  0x2
#define _T5GCON_GSS_MASK                                    0x3
#define _T5GCON_GVAL_POSN                                   0x2
#define _T5GCON_GVAL_POSITION                               0x2
#define _T5GCON_GVAL_SIZE                                   0x1
#define _T5GCON_GVAL_LENGTH                                 0x1
#define _T5GCON_GVAL_MASK                                   0x4
#define _T5GCON_GGO_nDONE_POSN                              0x3
#define _T5GCON_GGO_nDONE_POSITION                          0x3
#define _T5GCON_GGO_nDONE_SIZE                              0x1
#define _T5GCON_GGO_nDONE_LENGTH                            0x1
#define _T5GCON_GGO_nDONE_MASK                              0x8
#define _T5GCON_GSPM_POSN                                   0x4
#define _T5GCON_GSPM_POSITION                               0x4
#define _T5GCON_GSPM_SIZE                                   0x1
#define _T5GCON_GSPM_LENGTH                                 0x1
#define _T5GCON_GSPM_MASK                                   0x10
#define _T5GCON_GTM_POSN                                    0x5
#define _T5GCON_GTM_POSITION                                0x5
#define _T5GCON_GTM_SIZE                                    0x1
#define _T5GCON_GTM_LENGTH                                  0x1
#define _T5GCON_GTM_MASK                                    0x20
#define _T5GCON_GPOL_POSN                                   0x6
#define _T5GCON_GPOL_POSITION                               0x6
#define _T5GCON_GPOL_SIZE                                   0x1
#define _T5GCON_GPOL_LENGTH                                 0x1
#define _T5GCON_GPOL_MASK                                   0x40
#define _T5GCON_GE_POSN                                     0x7
#define _T5GCON_GE_POSITION                                 0x7
#define _T5GCON_GE_SIZE                                     0x1
#define _T5GCON_GE_LENGTH                                   0x1
#define _T5GCON_GE_MASK                                     0x80
#define _T5GCON_GSS0_POSN                                   0x0
#define _T5GCON_GSS0_POSITION                               0x0
#define _T5GCON_GSS0_SIZE                                   0x1
#define _T5GCON_GSS0_LENGTH                                 0x1
#define _T5GCON_GSS0_MASK                                   0x1
#define _T5GCON_GSS1_POSN                                   0x1
#define _T5GCON_GSS1_POSITION                               0x1
#define _T5GCON_GSS1_SIZE                                   0x1
#define _T5GCON_GSS1_LENGTH                                 0x1
#define _T5GCON_GSS1_MASK                                   0x2
#define _T5GCON_T5GE_POSN                                   0x7
#define _T5GCON_T5GE_POSITION                               0x7
#define _T5GCON_T5GE_SIZE                                   0x1
#define _T5GCON_T5GE_LENGTH                                 0x1
#define _T5GCON_T5GE_MASK                                   0x80
#define _T5GCON_T5GVAL_POSN                                 0x2
#define _T5GCON_T5GVAL_POSITION                             0x2
#define _T5GCON_T5GVAL_SIZE                                 0x1
#define _T5GCON_T5GVAL_LENGTH                               0x1
#define _T5GCON_T5GVAL_MASK                                 0x4
#define _T5GCON_T5GGO_nDONE_POSN                            0x3
#define _T5GCON_T5GGO_nDONE_POSITION                        0x3
#define _T5GCON_T5GGO_nDONE_SIZE                            0x1
#define _T5GCON_T5GGO_nDONE_LENGTH                          0x1
#define _T5GCON_T5GGO_nDONE_MASK                            0x8
#define _T5GCON_T5GSPM_POSN                                 0x4
#define _T5GCON_T5GSPM_POSITION                             0x4
#define _T5GCON_T5GSPM_SIZE                                 0x1
#define _T5GCON_T5GSPM_LENGTH                               0x1
#define _T5GCON_T5GSPM_MASK                                 0x10
#define _T5GCON_T5GTM_POSN                                  0x5
#define _T5GCON_T5GTM_POSITION                              0x5
#define _T5GCON_T5GTM_SIZE                                  0x1
#define _T5GCON_T5GTM_LENGTH                                0x1
#define _T5GCON_T5GTM_MASK                                  0x20
#define _T5GCON_T5GPOL_POSN                                 0x6
#define _T5GCON_T5GPOL_POSITION                             0x6
#define _T5GCON_T5GPOL_SIZE                                 0x1
#define _T5GCON_T5GPOL_LENGTH                               0x1
#define _T5GCON_T5GPOL_MASK                                 0x40
#define _T5GCON_TMR5GE_POSN                                 0x7
#define _T5GCON_TMR5GE_POSITION                             0x7
#define _T5GCON_TMR5GE_SIZE                                 0x1
#define _T5GCON_TMR5GE_LENGTH                               0x1
#define _T5GCON_TMR5GE_MASK                                 0x80
#define _T5GCON_T5GSS0_POSN                                 0x0
#define _T5GCON_T5GSS0_POSITION                             0x0
#define _T5GCON_T5GSS0_SIZE                                 0x1
#define _T5GCON_T5GSS0_LENGTH                               0x1
#define _T5GCON_T5GSS0_MASK                                 0x1
#define _T5GCON_T5GSS1_POSN                                 0x1
#define _T5GCON_T5GSS1_POSITION                             0x1
#define _T5GCON_T5GSS1_SIZE                                 0x1
#define _T5GCON_T5GSS1_LENGTH                               0x1
#define _T5GCON_T5GSS1_MASK                                 0x2

// Register: T4TMR
#define T4TMR T4TMR
extern volatile unsigned char           T4TMR               __at(0x413);
#ifndef _LIB_BUILD
asm("T4TMR equ 0413h");
#endif
// aliases
extern volatile unsigned char           TMR4                __at(0x413);
#ifndef _LIB_BUILD
asm("TMR4 equ 0413h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned TMR4                   :8;
    };
} T4TMRbits_t;
extern volatile T4TMRbits_t T4TMRbits __at(0x413);
// bitfield macros
#define _T4TMR_TMR_POSN                                     0x0
#define _T4TMR_TMR_POSITION                                 0x0
#define _T4TMR_TMR_SIZE                                     0x8
#define _T4TMR_TMR_LENGTH                                   0x8
#define _T4TMR_TMR_MASK                                     0xFF
#define _T4TMR_TMR4_POSN                                    0x0
#define _T4TMR_TMR4_POSITION                                0x0
#define _T4TMR_TMR4_SIZE                                    0x8
#define _T4TMR_TMR4_LENGTH                                  0x8
#define _T4TMR_TMR4_MASK                                    0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned TMR4                   :8;
    };
} TMR4bits_t;
extern volatile TMR4bits_t TMR4bits __at(0x413);
// bitfield macros
#define _TMR4_TMR_POSN                                      0x0
#define _TMR4_TMR_POSITION                                  0x0
#define _TMR4_TMR_SIZE                                      0x8
#define _TMR4_TMR_LENGTH                                    0x8
#define _TMR4_TMR_MASK                                      0xFF
#define _TMR4_TMR4_POSN                                     0x0
#define _TMR4_TMR4_POSITION                                 0x0
#define _TMR4_TMR4_SIZE                                     0x8
#define _TMR4_TMR4_LENGTH                                   0x8
#define _TMR4_TMR4_MASK                                     0xFF

// Register: T4PR
#define T4PR T4PR
extern volatile unsigned char           T4PR                __at(0x414);
#ifndef _LIB_BUILD
asm("T4PR equ 0414h");
#endif
// aliases
extern volatile unsigned char           PR4                 __at(0x414);
#ifndef _LIB_BUILD
asm("PR4 equ 0414h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned T4PR                   :8;
    };
} T4PRbits_t;
extern volatile T4PRbits_t T4PRbits __at(0x414);
// bitfield macros
#define _T4PR_PR_POSN                                       0x0
#define _T4PR_PR_POSITION                                   0x0
#define _T4PR_PR_SIZE                                       0x8
#define _T4PR_PR_LENGTH                                     0x8
#define _T4PR_PR_MASK                                       0xFF
#define _T4PR_T4PR_POSN                                     0x0
#define _T4PR_T4PR_POSITION                                 0x0
#define _T4PR_T4PR_SIZE                                     0x8
#define _T4PR_T4PR_LENGTH                                   0x8
#define _T4PR_T4PR_MASK                                     0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned T4PR                   :8;
    };
} PR4bits_t;
extern volatile PR4bits_t PR4bits __at(0x414);
// bitfield macros
#define _PR4_PR_POSN                                        0x0
#define _PR4_PR_POSITION                                    0x0
#define _PR4_PR_SIZE                                        0x8
#define _PR4_PR_LENGTH                                      0x8
#define _PR4_PR_MASK                                        0xFF
#define _PR4_T4PR_POSN                                      0x0
#define _PR4_T4PR_POSITION                                  0x0
#define _PR4_T4PR_SIZE                                      0x8
#define _PR4_T4PR_LENGTH                                    0x8
#define _PR4_T4PR_MASK                                      0xFF

// Register: T4CON
#define T4CON T4CON
extern volatile unsigned char           T4CON               __at(0x415);
#ifndef _LIB_BUILD
asm("T4CON equ 0415h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OUTPS                  :4;
        unsigned CKPS                   :3;
        unsigned ON                     :1;
    };
    struct {
        unsigned OUTPS0                 :1;
        unsigned OUTPS1                 :1;
        unsigned OUTPS2                 :1;
        unsigned OUTPS3                 :1;
        unsigned CKPS0                  :1;
        unsigned CKPS1                  :1;
        unsigned CKPS2                  :1;
    };
    struct {
        unsigned T4OUTPS                :4;
        unsigned T4CKPS                 :3;
        unsigned T4ON                   :1;
    };
    struct {
        unsigned T4OUTPS0               :1;
        unsigned T4OUTPS1               :1;
        unsigned T4OUTPS2               :1;
        unsigned T4OUTPS3               :1;
        unsigned T4CKPS0                :1;
        unsigned T4CKPS1                :1;
        unsigned T4CKPS2                :1;
        unsigned TMR4ON                 :1;
    };
} T4CONbits_t;
extern volatile T4CONbits_t T4CONbits __at(0x415);
// bitfield macros
#define _T4CON_OUTPS_POSN                                   0x0
#define _T4CON_OUTPS_POSITION                               0x0
#define _T4CON_OUTPS_SIZE                                   0x4
#define _T4CON_OUTPS_LENGTH                                 0x4
#define _T4CON_OUTPS_MASK                                   0xF
#define _T4CON_CKPS_POSN                                    0x4
#define _T4CON_CKPS_POSITION                                0x4
#define _T4CON_CKPS_SIZE                                    0x3
#define _T4CON_CKPS_LENGTH                                  0x3
#define _T4CON_CKPS_MASK                                    0x70
#define _T4CON_ON_POSN                                      0x7
#define _T4CON_ON_POSITION                                  0x7
#define _T4CON_ON_SIZE                                      0x1
#define _T4CON_ON_LENGTH                                    0x1
#define _T4CON_ON_MASK                                      0x80
#define _T4CON_OUTPS0_POSN                                  0x0
#define _T4CON_OUTPS0_POSITION                              0x0
#define _T4CON_OUTPS0_SIZE                                  0x1
#define _T4CON_OUTPS0_LENGTH                                0x1
#define _T4CON_OUTPS0_MASK                                  0x1
#define _T4CON_OUTPS1_POSN                                  0x1
#define _T4CON_OUTPS1_POSITION                              0x1
#define _T4CON_OUTPS1_SIZE                                  0x1
#define _T4CON_OUTPS1_LENGTH                                0x1
#define _T4CON_OUTPS1_MASK                                  0x2
#define _T4CON_OUTPS2_POSN                                  0x2
#define _T4CON_OUTPS2_POSITION                              0x2
#define _T4CON_OUTPS2_SIZE                                  0x1
#define _T4CON_OUTPS2_LENGTH                                0x1
#define _T4CON_OUTPS2_MASK                                  0x4
#define _T4CON_OUTPS3_POSN                                  0x3
#define _T4CON_OUTPS3_POSITION                              0x3
#define _T4CON_OUTPS3_SIZE                                  0x1
#define _T4CON_OUTPS3_LENGTH                                0x1
#define _T4CON_OUTPS3_MASK                                  0x8
#define _T4CON_CKPS0_POSN                                   0x4
#define _T4CON_CKPS0_POSITION                               0x4
#define _T4CON_CKPS0_SIZE                                   0x1
#define _T4CON_CKPS0_LENGTH                                 0x1
#define _T4CON_CKPS0_MASK                                   0x10
#define _T4CON_CKPS1_POSN                                   0x5
#define _T4CON_CKPS1_POSITION                               0x5
#define _T4CON_CKPS1_SIZE                                   0x1
#define _T4CON_CKPS1_LENGTH                                 0x1
#define _T4CON_CKPS1_MASK                                   0x20
#define _T4CON_CKPS2_POSN                                   0x6
#define _T4CON_CKPS2_POSITION                               0x6
#define _T4CON_CKPS2_SIZE                                   0x1
#define _T4CON_CKPS2_LENGTH                                 0x1
#define _T4CON_CKPS2_MASK                                   0x40
#define _T4CON_T4OUTPS_POSN                                 0x0
#define _T4CON_T4OUTPS_POSITION                             0x0
#define _T4CON_T4OUTPS_SIZE                                 0x4
#define _T4CON_T4OUTPS_LENGTH                               0x4
#define _T4CON_T4OUTPS_MASK                                 0xF
#define _T4CON_T4CKPS_POSN                                  0x4
#define _T4CON_T4CKPS_POSITION                              0x4
#define _T4CON_T4CKPS_SIZE                                  0x3
#define _T4CON_T4CKPS_LENGTH                                0x3
#define _T4CON_T4CKPS_MASK                                  0x70
#define _T4CON_T4ON_POSN                                    0x7
#define _T4CON_T4ON_POSITION                                0x7
#define _T4CON_T4ON_SIZE                                    0x1
#define _T4CON_T4ON_LENGTH                                  0x1
#define _T4CON_T4ON_MASK                                    0x80
#define _T4CON_T4OUTPS0_POSN                                0x0
#define _T4CON_T4OUTPS0_POSITION                            0x0
#define _T4CON_T4OUTPS0_SIZE                                0x1
#define _T4CON_T4OUTPS0_LENGTH                              0x1
#define _T4CON_T4OUTPS0_MASK                                0x1
#define _T4CON_T4OUTPS1_POSN                                0x1
#define _T4CON_T4OUTPS1_POSITION                            0x1
#define _T4CON_T4OUTPS1_SIZE                                0x1
#define _T4CON_T4OUTPS1_LENGTH                              0x1
#define _T4CON_T4OUTPS1_MASK                                0x2
#define _T4CON_T4OUTPS2_POSN                                0x2
#define _T4CON_T4OUTPS2_POSITION                            0x2
#define _T4CON_T4OUTPS2_SIZE                                0x1
#define _T4CON_T4OUTPS2_LENGTH                              0x1
#define _T4CON_T4OUTPS2_MASK                                0x4
#define _T4CON_T4OUTPS3_POSN                                0x3
#define _T4CON_T4OUTPS3_POSITION                            0x3
#define _T4CON_T4OUTPS3_SIZE                                0x1
#define _T4CON_T4OUTPS3_LENGTH                              0x1
#define _T4CON_T4OUTPS3_MASK                                0x8
#define _T4CON_T4CKPS0_POSN                                 0x4
#define _T4CON_T4CKPS0_POSITION                             0x4
#define _T4CON_T4CKPS0_SIZE                                 0x1
#define _T4CON_T4CKPS0_LENGTH                               0x1
#define _T4CON_T4CKPS0_MASK                                 0x10
#define _T4CON_T4CKPS1_POSN                                 0x5
#define _T4CON_T4CKPS1_POSITION                             0x5
#define _T4CON_T4CKPS1_SIZE                                 0x1
#define _T4CON_T4CKPS1_LENGTH                               0x1
#define _T4CON_T4CKPS1_MASK                                 0x20
#define _T4CON_T4CKPS2_POSN                                 0x6
#define _T4CON_T4CKPS2_POSITION                             0x6
#define _T4CON_T4CKPS2_SIZE                                 0x1
#define _T4CON_T4CKPS2_LENGTH                               0x1
#define _T4CON_T4CKPS2_MASK                                 0x40
#define _T4CON_TMR4ON_POSN                                  0x7
#define _T4CON_TMR4ON_POSITION                              0x7
#define _T4CON_TMR4ON_SIZE                                  0x1
#define _T4CON_TMR4ON_LENGTH                                0x1
#define _T4CON_TMR4ON_MASK                                  0x80

// Register: T4HLT
#define T4HLT T4HLT
extern volatile unsigned char           T4HLT               __at(0x416);
#ifndef _LIB_BUILD
asm("T4HLT equ 0416h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MODE                   :5;
        unsigned CKSYNC                 :1;
        unsigned CKPOL                  :1;
        unsigned PSYNC                  :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
        unsigned MODE3                  :1;
        unsigned MODE4                  :1;
    };
    struct {
        unsigned T4MODE                 :5;
        unsigned T4CKSYNC               :1;
        unsigned T4CKPOL                :1;
        unsigned T4PSYNC                :1;
    };
    struct {
        unsigned T4MODE0                :1;
        unsigned T4MODE1                :1;
        unsigned T4MODE2                :1;
        unsigned T4MODE3                :1;
        unsigned T4MODE4                :1;
    };
} T4HLTbits_t;
extern volatile T4HLTbits_t T4HLTbits __at(0x416);
// bitfield macros
#define _T4HLT_MODE_POSN                                    0x0
#define _T4HLT_MODE_POSITION                                0x0
#define _T4HLT_MODE_SIZE                                    0x5
#define _T4HLT_MODE_LENGTH                                  0x5
#define _T4HLT_MODE_MASK                                    0x1F
#define _T4HLT_CKSYNC_POSN                                  0x5
#define _T4HLT_CKSYNC_POSITION                              0x5
#define _T4HLT_CKSYNC_SIZE                                  0x1
#define _T4HLT_CKSYNC_LENGTH                                0x1
#define _T4HLT_CKSYNC_MASK                                  0x20
#define _T4HLT_CKPOL_POSN                                   0x6
#define _T4HLT_CKPOL_POSITION                               0x6
#define _T4HLT_CKPOL_SIZE                                   0x1
#define _T4HLT_CKPOL_LENGTH                                 0x1
#define _T4HLT_CKPOL_MASK                                   0x40
#define _T4HLT_PSYNC_POSN                                   0x7
#define _T4HLT_PSYNC_POSITION                               0x7
#define _T4HLT_PSYNC_SIZE                                   0x1
#define _T4HLT_PSYNC_LENGTH                                 0x1
#define _T4HLT_PSYNC_MASK                                   0x80
#define _T4HLT_MODE0_POSN                                   0x0
#define _T4HLT_MODE0_POSITION                               0x0
#define _T4HLT_MODE0_SIZE                                   0x1
#define _T4HLT_MODE0_LENGTH                                 0x1
#define _T4HLT_MODE0_MASK                                   0x1
#define _T4HLT_MODE1_POSN                                   0x1
#define _T4HLT_MODE1_POSITION                               0x1
#define _T4HLT_MODE1_SIZE                                   0x1
#define _T4HLT_MODE1_LENGTH                                 0x1
#define _T4HLT_MODE1_MASK                                   0x2
#define _T4HLT_MODE2_POSN                                   0x2
#define _T4HLT_MODE2_POSITION                               0x2
#define _T4HLT_MODE2_SIZE                                   0x1
#define _T4HLT_MODE2_LENGTH                                 0x1
#define _T4HLT_MODE2_MASK                                   0x4
#define _T4HLT_MODE3_POSN                                   0x3
#define _T4HLT_MODE3_POSITION                               0x3
#define _T4HLT_MODE3_SIZE                                   0x1
#define _T4HLT_MODE3_LENGTH                                 0x1
#define _T4HLT_MODE3_MASK                                   0x8
#define _T4HLT_MODE4_POSN                                   0x4
#define _T4HLT_MODE4_POSITION                               0x4
#define _T4HLT_MODE4_SIZE                                   0x1
#define _T4HLT_MODE4_LENGTH                                 0x1
#define _T4HLT_MODE4_MASK                                   0x10
#define _T4HLT_T4MODE_POSN                                  0x0
#define _T4HLT_T4MODE_POSITION                              0x0
#define _T4HLT_T4MODE_SIZE                                  0x5
#define _T4HLT_T4MODE_LENGTH                                0x5
#define _T4HLT_T4MODE_MASK                                  0x1F
#define _T4HLT_T4CKSYNC_POSN                                0x5
#define _T4HLT_T4CKSYNC_POSITION                            0x5
#define _T4HLT_T4CKSYNC_SIZE                                0x1
#define _T4HLT_T4CKSYNC_LENGTH                              0x1
#define _T4HLT_T4CKSYNC_MASK                                0x20
#define _T4HLT_T4CKPOL_POSN                                 0x6
#define _T4HLT_T4CKPOL_POSITION                             0x6
#define _T4HLT_T4CKPOL_SIZE                                 0x1
#define _T4HLT_T4CKPOL_LENGTH                               0x1
#define _T4HLT_T4CKPOL_MASK                                 0x40
#define _T4HLT_T4PSYNC_POSN                                 0x7
#define _T4HLT_T4PSYNC_POSITION                             0x7
#define _T4HLT_T4PSYNC_SIZE                                 0x1
#define _T4HLT_T4PSYNC_LENGTH                               0x1
#define _T4HLT_T4PSYNC_MASK                                 0x80
#define _T4HLT_T4MODE0_POSN                                 0x0
#define _T4HLT_T4MODE0_POSITION                             0x0
#define _T4HLT_T4MODE0_SIZE                                 0x1
#define _T4HLT_T4MODE0_LENGTH                               0x1
#define _T4HLT_T4MODE0_MASK                                 0x1
#define _T4HLT_T4MODE1_POSN                                 0x1
#define _T4HLT_T4MODE1_POSITION                             0x1
#define _T4HLT_T4MODE1_SIZE                                 0x1
#define _T4HLT_T4MODE1_LENGTH                               0x1
#define _T4HLT_T4MODE1_MASK                                 0x2
#define _T4HLT_T4MODE2_POSN                                 0x2
#define _T4HLT_T4MODE2_POSITION                             0x2
#define _T4HLT_T4MODE2_SIZE                                 0x1
#define _T4HLT_T4MODE2_LENGTH                               0x1
#define _T4HLT_T4MODE2_MASK                                 0x4
#define _T4HLT_T4MODE3_POSN                                 0x3
#define _T4HLT_T4MODE3_POSITION                             0x3
#define _T4HLT_T4MODE3_SIZE                                 0x1
#define _T4HLT_T4MODE3_LENGTH                               0x1
#define _T4HLT_T4MODE3_MASK                                 0x8
#define _T4HLT_T4MODE4_POSN                                 0x4
#define _T4HLT_T4MODE4_POSITION                             0x4
#define _T4HLT_T4MODE4_SIZE                                 0x1
#define _T4HLT_T4MODE4_LENGTH                               0x1
#define _T4HLT_T4MODE4_MASK                                 0x10

// Register: T4CLKCON
#define T4CLKCON T4CLKCON
extern volatile unsigned char           T4CLKCON            __at(0x417);
#ifndef _LIB_BUILD
asm("T4CLKCON equ 0417h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CS                     :4;
    };
    struct {
        unsigned CS0                    :1;
        unsigned CS1                    :1;
        unsigned CS2                    :1;
        unsigned CS3                    :1;
    };
    struct {
        unsigned T4CS                   :4;
    };
    struct {
        unsigned T4CS0                  :1;
        unsigned T4CS1                  :1;
        unsigned T4CS2                  :1;
        unsigned T4CS3                  :1;
    };
} T4CLKCONbits_t;
extern volatile T4CLKCONbits_t T4CLKCONbits __at(0x417);
// bitfield macros
#define _T4CLKCON_CS_POSN                                   0x0
#define _T4CLKCON_CS_POSITION                               0x0
#define _T4CLKCON_CS_SIZE                                   0x4
#define _T4CLKCON_CS_LENGTH                                 0x4
#define _T4CLKCON_CS_MASK                                   0xF
#define _T4CLKCON_CS0_POSN                                  0x0
#define _T4CLKCON_CS0_POSITION                              0x0
#define _T4CLKCON_CS0_SIZE                                  0x1
#define _T4CLKCON_CS0_LENGTH                                0x1
#define _T4CLKCON_CS0_MASK                                  0x1
#define _T4CLKCON_CS1_POSN                                  0x1
#define _T4CLKCON_CS1_POSITION                              0x1
#define _T4CLKCON_CS1_SIZE                                  0x1
#define _T4CLKCON_CS1_LENGTH                                0x1
#define _T4CLKCON_CS1_MASK                                  0x2
#define _T4CLKCON_CS2_POSN                                  0x2
#define _T4CLKCON_CS2_POSITION                              0x2
#define _T4CLKCON_CS2_SIZE                                  0x1
#define _T4CLKCON_CS2_LENGTH                                0x1
#define _T4CLKCON_CS2_MASK                                  0x4
#define _T4CLKCON_CS3_POSN                                  0x3
#define _T4CLKCON_CS3_POSITION                              0x3
#define _T4CLKCON_CS3_SIZE                                  0x1
#define _T4CLKCON_CS3_LENGTH                                0x1
#define _T4CLKCON_CS3_MASK                                  0x8
#define _T4CLKCON_T4CS_POSN                                 0x0
#define _T4CLKCON_T4CS_POSITION                             0x0
#define _T4CLKCON_T4CS_SIZE                                 0x4
#define _T4CLKCON_T4CS_LENGTH                               0x4
#define _T4CLKCON_T4CS_MASK                                 0xF
#define _T4CLKCON_T4CS0_POSN                                0x0
#define _T4CLKCON_T4CS0_POSITION                            0x0
#define _T4CLKCON_T4CS0_SIZE                                0x1
#define _T4CLKCON_T4CS0_LENGTH                              0x1
#define _T4CLKCON_T4CS0_MASK                                0x1
#define _T4CLKCON_T4CS1_POSN                                0x1
#define _T4CLKCON_T4CS1_POSITION                            0x1
#define _T4CLKCON_T4CS1_SIZE                                0x1
#define _T4CLKCON_T4CS1_LENGTH                              0x1
#define _T4CLKCON_T4CS1_MASK                                0x2
#define _T4CLKCON_T4CS2_POSN                                0x2
#define _T4CLKCON_T4CS2_POSITION                            0x2
#define _T4CLKCON_T4CS2_SIZE                                0x1
#define _T4CLKCON_T4CS2_LENGTH                              0x1
#define _T4CLKCON_T4CS2_MASK                                0x4
#define _T4CLKCON_T4CS3_POSN                                0x3
#define _T4CLKCON_T4CS3_POSITION                            0x3
#define _T4CLKCON_T4CS3_SIZE                                0x1
#define _T4CLKCON_T4CS3_LENGTH                              0x1
#define _T4CLKCON_T4CS3_MASK                                0x8

// Register: T4RST
#define T4RST T4RST
extern volatile unsigned char           T4RST               __at(0x418);
#ifndef _LIB_BUILD
asm("T4RST equ 0418h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RSEL                   :5;
    };
    struct {
        unsigned RSEL0                  :1;
        unsigned RSEL1                  :1;
        unsigned RSEL2                  :1;
        unsigned RSEL3                  :1;
        unsigned RSEL4                  :1;
    };
    struct {
        unsigned T4RSEL                 :5;
    };
    struct {
        unsigned T4RSEL0                :1;
        unsigned T4RSEL1                :1;
        unsigned T4RSEL2                :1;
        unsigned T4RSEL3                :1;
        unsigned T4RSEL4                :1;
    };
} T4RSTbits_t;
extern volatile T4RSTbits_t T4RSTbits __at(0x418);
// bitfield macros
#define _T4RST_RSEL_POSN                                    0x0
#define _T4RST_RSEL_POSITION                                0x0
#define _T4RST_RSEL_SIZE                                    0x5
#define _T4RST_RSEL_LENGTH                                  0x5
#define _T4RST_RSEL_MASK                                    0x1F
#define _T4RST_RSEL0_POSN                                   0x0
#define _T4RST_RSEL0_POSITION                               0x0
#define _T4RST_RSEL0_SIZE                                   0x1
#define _T4RST_RSEL0_LENGTH                                 0x1
#define _T4RST_RSEL0_MASK                                   0x1
#define _T4RST_RSEL1_POSN                                   0x1
#define _T4RST_RSEL1_POSITION                               0x1
#define _T4RST_RSEL1_SIZE                                   0x1
#define _T4RST_RSEL1_LENGTH                                 0x1
#define _T4RST_RSEL1_MASK                                   0x2
#define _T4RST_RSEL2_POSN                                   0x2
#define _T4RST_RSEL2_POSITION                               0x2
#define _T4RST_RSEL2_SIZE                                   0x1
#define _T4RST_RSEL2_LENGTH                                 0x1
#define _T4RST_RSEL2_MASK                                   0x4
#define _T4RST_RSEL3_POSN                                   0x3
#define _T4RST_RSEL3_POSITION                               0x3
#define _T4RST_RSEL3_SIZE                                   0x1
#define _T4RST_RSEL3_LENGTH                                 0x1
#define _T4RST_RSEL3_MASK                                   0x8
#define _T4RST_RSEL4_POSN                                   0x4
#define _T4RST_RSEL4_POSITION                               0x4
#define _T4RST_RSEL4_SIZE                                   0x1
#define _T4RST_RSEL4_LENGTH                                 0x1
#define _T4RST_RSEL4_MASK                                   0x10
#define _T4RST_T4RSEL_POSN                                  0x0
#define _T4RST_T4RSEL_POSITION                              0x0
#define _T4RST_T4RSEL_SIZE                                  0x5
#define _T4RST_T4RSEL_LENGTH                                0x5
#define _T4RST_T4RSEL_MASK                                  0x1F
#define _T4RST_T4RSEL0_POSN                                 0x0
#define _T4RST_T4RSEL0_POSITION                             0x0
#define _T4RST_T4RSEL0_SIZE                                 0x1
#define _T4RST_T4RSEL0_LENGTH                               0x1
#define _T4RST_T4RSEL0_MASK                                 0x1
#define _T4RST_T4RSEL1_POSN                                 0x1
#define _T4RST_T4RSEL1_POSITION                             0x1
#define _T4RST_T4RSEL1_SIZE                                 0x1
#define _T4RST_T4RSEL1_LENGTH                               0x1
#define _T4RST_T4RSEL1_MASK                                 0x2
#define _T4RST_T4RSEL2_POSN                                 0x2
#define _T4RST_T4RSEL2_POSITION                             0x2
#define _T4RST_T4RSEL2_SIZE                                 0x1
#define _T4RST_T4RSEL2_LENGTH                               0x1
#define _T4RST_T4RSEL2_MASK                                 0x4
#define _T4RST_T4RSEL3_POSN                                 0x3
#define _T4RST_T4RSEL3_POSITION                             0x3
#define _T4RST_T4RSEL3_SIZE                                 0x1
#define _T4RST_T4RSEL3_LENGTH                               0x1
#define _T4RST_T4RSEL3_MASK                                 0x8
#define _T4RST_T4RSEL4_POSN                                 0x4
#define _T4RST_T4RSEL4_POSITION                             0x4
#define _T4RST_T4RSEL4_SIZE                                 0x1
#define _T4RST_T4RSEL4_LENGTH                               0x1
#define _T4RST_T4RSEL4_MASK                                 0x10

// Register: T6TMR
#define T6TMR T6TMR
extern volatile unsigned char           T6TMR               __at(0x41A);
#ifndef _LIB_BUILD
asm("T6TMR equ 041Ah");
#endif
// aliases
extern volatile unsigned char           TMR6                __at(0x41A);
#ifndef _LIB_BUILD
asm("TMR6 equ 041Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned TMR6                   :8;
    };
} T6TMRbits_t;
extern volatile T6TMRbits_t T6TMRbits __at(0x41A);
// bitfield macros
#define _T6TMR_TMR_POSN                                     0x0
#define _T6TMR_TMR_POSITION                                 0x0
#define _T6TMR_TMR_SIZE                                     0x8
#define _T6TMR_TMR_LENGTH                                   0x8
#define _T6TMR_TMR_MASK                                     0xFF
#define _T6TMR_TMR6_POSN                                    0x0
#define _T6TMR_TMR6_POSITION                                0x0
#define _T6TMR_TMR6_SIZE                                    0x8
#define _T6TMR_TMR6_LENGTH                                  0x8
#define _T6TMR_TMR6_MASK                                    0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned TMR6                   :8;
    };
} TMR6bits_t;
extern volatile TMR6bits_t TMR6bits __at(0x41A);
// bitfield macros
#define _TMR6_TMR_POSN                                      0x0
#define _TMR6_TMR_POSITION                                  0x0
#define _TMR6_TMR_SIZE                                      0x8
#define _TMR6_TMR_LENGTH                                    0x8
#define _TMR6_TMR_MASK                                      0xFF
#define _TMR6_TMR6_POSN                                     0x0
#define _TMR6_TMR6_POSITION                                 0x0
#define _TMR6_TMR6_SIZE                                     0x8
#define _TMR6_TMR6_LENGTH                                   0x8
#define _TMR6_TMR6_MASK                                     0xFF

// Register: T6PR
#define T6PR T6PR
extern volatile unsigned char           T6PR                __at(0x41B);
#ifndef _LIB_BUILD
asm("T6PR equ 041Bh");
#endif
// aliases
extern volatile unsigned char           PR6                 __at(0x41B);
#ifndef _LIB_BUILD
asm("PR6 equ 041Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned T6PR                   :8;
    };
} T6PRbits_t;
extern volatile T6PRbits_t T6PRbits __at(0x41B);
// bitfield macros
#define _T6PR_PR_POSN                                       0x0
#define _T6PR_PR_POSITION                                   0x0
#define _T6PR_PR_SIZE                                       0x8
#define _T6PR_PR_LENGTH                                     0x8
#define _T6PR_PR_MASK                                       0xFF
#define _T6PR_T6PR_POSN                                     0x0
#define _T6PR_T6PR_POSITION                                 0x0
#define _T6PR_T6PR_SIZE                                     0x8
#define _T6PR_T6PR_LENGTH                                   0x8
#define _T6PR_T6PR_MASK                                     0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned T6PR                   :8;
    };
} PR6bits_t;
extern volatile PR6bits_t PR6bits __at(0x41B);
// bitfield macros
#define _PR6_PR_POSN                                        0x0
#define _PR6_PR_POSITION                                    0x0
#define _PR6_PR_SIZE                                        0x8
#define _PR6_PR_LENGTH                                      0x8
#define _PR6_PR_MASK                                        0xFF
#define _PR6_T6PR_POSN                                      0x0
#define _PR6_T6PR_POSITION                                  0x0
#define _PR6_T6PR_SIZE                                      0x8
#define _PR6_T6PR_LENGTH                                    0x8
#define _PR6_T6PR_MASK                                      0xFF

// Register: T6CON
#define T6CON T6CON
extern volatile unsigned char           T6CON               __at(0x41C);
#ifndef _LIB_BUILD
asm("T6CON equ 041Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OUTPS                  :4;
        unsigned CKPS                   :3;
        unsigned ON                     :1;
    };
    struct {
        unsigned OUTPS0                 :1;
        unsigned OUTPS1                 :1;
        unsigned OUTPS2                 :1;
        unsigned OUTPS3                 :1;
        unsigned CKPS0                  :1;
        unsigned CKPS1                  :1;
        unsigned CKPS2                  :1;
    };
    struct {
        unsigned T6OUTPS                :4;
        unsigned T6CKPS                 :3;
        unsigned T6ON                   :1;
    };
    struct {
        unsigned T6OUTPS0               :1;
        unsigned T6OUTPS1               :1;
        unsigned T6OUTPS2               :1;
        unsigned T6OUTPS3               :1;
        unsigned T6CKPS0                :1;
        unsigned T6CKPS1                :1;
        unsigned T6CKPS2                :1;
        unsigned TMR6ON                 :1;
    };
} T6CONbits_t;
extern volatile T6CONbits_t T6CONbits __at(0x41C);
// bitfield macros
#define _T6CON_OUTPS_POSN                                   0x0
#define _T6CON_OUTPS_POSITION                               0x0
#define _T6CON_OUTPS_SIZE                                   0x4
#define _T6CON_OUTPS_LENGTH                                 0x4
#define _T6CON_OUTPS_MASK                                   0xF
#define _T6CON_CKPS_POSN                                    0x4
#define _T6CON_CKPS_POSITION                                0x4
#define _T6CON_CKPS_SIZE                                    0x3
#define _T6CON_CKPS_LENGTH                                  0x3
#define _T6CON_CKPS_MASK                                    0x70
#define _T6CON_ON_POSN                                      0x7
#define _T6CON_ON_POSITION                                  0x7
#define _T6CON_ON_SIZE                                      0x1
#define _T6CON_ON_LENGTH                                    0x1
#define _T6CON_ON_MASK                                      0x80
#define _T6CON_OUTPS0_POSN                                  0x0
#define _T6CON_OUTPS0_POSITION                              0x0
#define _T6CON_OUTPS0_SIZE                                  0x1
#define _T6CON_OUTPS0_LENGTH                                0x1
#define _T6CON_OUTPS0_MASK                                  0x1
#define _T6CON_OUTPS1_POSN                                  0x1
#define _T6CON_OUTPS1_POSITION                              0x1
#define _T6CON_OUTPS1_SIZE                                  0x1
#define _T6CON_OUTPS1_LENGTH                                0x1
#define _T6CON_OUTPS1_MASK                                  0x2
#define _T6CON_OUTPS2_POSN                                  0x2
#define _T6CON_OUTPS2_POSITION                              0x2
#define _T6CON_OUTPS2_SIZE                                  0x1
#define _T6CON_OUTPS2_LENGTH                                0x1
#define _T6CON_OUTPS2_MASK                                  0x4
#define _T6CON_OUTPS3_POSN                                  0x3
#define _T6CON_OUTPS3_POSITION                              0x3
#define _T6CON_OUTPS3_SIZE                                  0x1
#define _T6CON_OUTPS3_LENGTH                                0x1
#define _T6CON_OUTPS3_MASK                                  0x8
#define _T6CON_CKPS0_POSN                                   0x4
#define _T6CON_CKPS0_POSITION                               0x4
#define _T6CON_CKPS0_SIZE                                   0x1
#define _T6CON_CKPS0_LENGTH                                 0x1
#define _T6CON_CKPS0_MASK                                   0x10
#define _T6CON_CKPS1_POSN                                   0x5
#define _T6CON_CKPS1_POSITION                               0x5
#define _T6CON_CKPS1_SIZE                                   0x1
#define _T6CON_CKPS1_LENGTH                                 0x1
#define _T6CON_CKPS1_MASK                                   0x20
#define _T6CON_CKPS2_POSN                                   0x6
#define _T6CON_CKPS2_POSITION                               0x6
#define _T6CON_CKPS2_SIZE                                   0x1
#define _T6CON_CKPS2_LENGTH                                 0x1
#define _T6CON_CKPS2_MASK                                   0x40
#define _T6CON_T6OUTPS_POSN                                 0x0
#define _T6CON_T6OUTPS_POSITION                             0x0
#define _T6CON_T6OUTPS_SIZE                                 0x4
#define _T6CON_T6OUTPS_LENGTH                               0x4
#define _T6CON_T6OUTPS_MASK                                 0xF
#define _T6CON_T6CKPS_POSN                                  0x4
#define _T6CON_T6CKPS_POSITION                              0x4
#define _T6CON_T6CKPS_SIZE                                  0x3
#define _T6CON_T6CKPS_LENGTH                                0x3
#define _T6CON_T6CKPS_MASK                                  0x70
#define _T6CON_T6ON_POSN                                    0x7
#define _T6CON_T6ON_POSITION                                0x7
#define _T6CON_T6ON_SIZE                                    0x1
#define _T6CON_T6ON_LENGTH                                  0x1
#define _T6CON_T6ON_MASK                                    0x80
#define _T6CON_T6OUTPS0_POSN                                0x0
#define _T6CON_T6OUTPS0_POSITION                            0x0
#define _T6CON_T6OUTPS0_SIZE                                0x1
#define _T6CON_T6OUTPS0_LENGTH                              0x1
#define _T6CON_T6OUTPS0_MASK                                0x1
#define _T6CON_T6OUTPS1_POSN                                0x1
#define _T6CON_T6OUTPS1_POSITION                            0x1
#define _T6CON_T6OUTPS1_SIZE                                0x1
#define _T6CON_T6OUTPS1_LENGTH                              0x1
#define _T6CON_T6OUTPS1_MASK                                0x2
#define _T6CON_T6OUTPS2_POSN                                0x2
#define _T6CON_T6OUTPS2_POSITION                            0x2
#define _T6CON_T6OUTPS2_SIZE                                0x1
#define _T6CON_T6OUTPS2_LENGTH                              0x1
#define _T6CON_T6OUTPS2_MASK                                0x4
#define _T6CON_T6OUTPS3_POSN                                0x3
#define _T6CON_T6OUTPS3_POSITION                            0x3
#define _T6CON_T6OUTPS3_SIZE                                0x1
#define _T6CON_T6OUTPS3_LENGTH                              0x1
#define _T6CON_T6OUTPS3_MASK                                0x8
#define _T6CON_T6CKPS0_POSN                                 0x4
#define _T6CON_T6CKPS0_POSITION                             0x4
#define _T6CON_T6CKPS0_SIZE                                 0x1
#define _T6CON_T6CKPS0_LENGTH                               0x1
#define _T6CON_T6CKPS0_MASK                                 0x10
#define _T6CON_T6CKPS1_POSN                                 0x5
#define _T6CON_T6CKPS1_POSITION                             0x5
#define _T6CON_T6CKPS1_SIZE                                 0x1
#define _T6CON_T6CKPS1_LENGTH                               0x1
#define _T6CON_T6CKPS1_MASK                                 0x20
#define _T6CON_T6CKPS2_POSN                                 0x6
#define _T6CON_T6CKPS2_POSITION                             0x6
#define _T6CON_T6CKPS2_SIZE                                 0x1
#define _T6CON_T6CKPS2_LENGTH                               0x1
#define _T6CON_T6CKPS2_MASK                                 0x40
#define _T6CON_TMR6ON_POSN                                  0x7
#define _T6CON_TMR6ON_POSITION                              0x7
#define _T6CON_TMR6ON_SIZE                                  0x1
#define _T6CON_TMR6ON_LENGTH                                0x1
#define _T6CON_TMR6ON_MASK                                  0x80

// Register: T6HLT
#define T6HLT T6HLT
extern volatile unsigned char           T6HLT               __at(0x41D);
#ifndef _LIB_BUILD
asm("T6HLT equ 041Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MODE                   :5;
        unsigned CKSYNC                 :1;
        unsigned CKPOL                  :1;
        unsigned PSYNC                  :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
        unsigned MODE3                  :1;
        unsigned MODE4                  :1;
    };
    struct {
        unsigned T6MODE                 :5;
        unsigned T6CKSYNC               :1;
        unsigned T6CKPOL                :1;
        unsigned T6PSYNC                :1;
    };
    struct {
        unsigned T6MODE0                :1;
        unsigned T6MODE1                :1;
        unsigned T6MODE2                :1;
        unsigned T6MODE3                :1;
        unsigned T6MODE4                :1;
    };
} T6HLTbits_t;
extern volatile T6HLTbits_t T6HLTbits __at(0x41D);
// bitfield macros
#define _T6HLT_MODE_POSN                                    0x0
#define _T6HLT_MODE_POSITION                                0x0
#define _T6HLT_MODE_SIZE                                    0x5
#define _T6HLT_MODE_LENGTH                                  0x5
#define _T6HLT_MODE_MASK                                    0x1F
#define _T6HLT_CKSYNC_POSN                                  0x5
#define _T6HLT_CKSYNC_POSITION                              0x5
#define _T6HLT_CKSYNC_SIZE                                  0x1
#define _T6HLT_CKSYNC_LENGTH                                0x1
#define _T6HLT_CKSYNC_MASK                                  0x20
#define _T6HLT_CKPOL_POSN                                   0x6
#define _T6HLT_CKPOL_POSITION                               0x6
#define _T6HLT_CKPOL_SIZE                                   0x1
#define _T6HLT_CKPOL_LENGTH                                 0x1
#define _T6HLT_CKPOL_MASK                                   0x40
#define _T6HLT_PSYNC_POSN                                   0x7
#define _T6HLT_PSYNC_POSITION                               0x7
#define _T6HLT_PSYNC_SIZE                                   0x1
#define _T6HLT_PSYNC_LENGTH                                 0x1
#define _T6HLT_PSYNC_MASK                                   0x80
#define _T6HLT_MODE0_POSN                                   0x0
#define _T6HLT_MODE0_POSITION                               0x0
#define _T6HLT_MODE0_SIZE                                   0x1
#define _T6HLT_MODE0_LENGTH                                 0x1
#define _T6HLT_MODE0_MASK                                   0x1
#define _T6HLT_MODE1_POSN                                   0x1
#define _T6HLT_MODE1_POSITION                               0x1
#define _T6HLT_MODE1_SIZE                                   0x1
#define _T6HLT_MODE1_LENGTH                                 0x1
#define _T6HLT_MODE1_MASK                                   0x2
#define _T6HLT_MODE2_POSN                                   0x2
#define _T6HLT_MODE2_POSITION                               0x2
#define _T6HLT_MODE2_SIZE                                   0x1
#define _T6HLT_MODE2_LENGTH                                 0x1
#define _T6HLT_MODE2_MASK                                   0x4
#define _T6HLT_MODE3_POSN                                   0x3
#define _T6HLT_MODE3_POSITION                               0x3
#define _T6HLT_MODE3_SIZE                                   0x1
#define _T6HLT_MODE3_LENGTH                                 0x1
#define _T6HLT_MODE3_MASK                                   0x8
#define _T6HLT_MODE4_POSN                                   0x4
#define _T6HLT_MODE4_POSITION                               0x4
#define _T6HLT_MODE4_SIZE                                   0x1
#define _T6HLT_MODE4_LENGTH                                 0x1
#define _T6HLT_MODE4_MASK                                   0x10
#define _T6HLT_T6MODE_POSN                                  0x0
#define _T6HLT_T6MODE_POSITION                              0x0
#define _T6HLT_T6MODE_SIZE                                  0x5
#define _T6HLT_T6MODE_LENGTH                                0x5
#define _T6HLT_T6MODE_MASK                                  0x1F
#define _T6HLT_T6CKSYNC_POSN                                0x5
#define _T6HLT_T6CKSYNC_POSITION                            0x5
#define _T6HLT_T6CKSYNC_SIZE                                0x1
#define _T6HLT_T6CKSYNC_LENGTH                              0x1
#define _T6HLT_T6CKSYNC_MASK                                0x20
#define _T6HLT_T6CKPOL_POSN                                 0x6
#define _T6HLT_T6CKPOL_POSITION                             0x6
#define _T6HLT_T6CKPOL_SIZE                                 0x1
#define _T6HLT_T6CKPOL_LENGTH                               0x1
#define _T6HLT_T6CKPOL_MASK                                 0x40
#define _T6HLT_T6PSYNC_POSN                                 0x7
#define _T6HLT_T6PSYNC_POSITION                             0x7
#define _T6HLT_T6PSYNC_SIZE                                 0x1
#define _T6HLT_T6PSYNC_LENGTH                               0x1
#define _T6HLT_T6PSYNC_MASK                                 0x80
#define _T6HLT_T6MODE0_POSN                                 0x0
#define _T6HLT_T6MODE0_POSITION                             0x0
#define _T6HLT_T6MODE0_SIZE                                 0x1
#define _T6HLT_T6MODE0_LENGTH                               0x1
#define _T6HLT_T6MODE0_MASK                                 0x1
#define _T6HLT_T6MODE1_POSN                                 0x1
#define _T6HLT_T6MODE1_POSITION                             0x1
#define _T6HLT_T6MODE1_SIZE                                 0x1
#define _T6HLT_T6MODE1_LENGTH                               0x1
#define _T6HLT_T6MODE1_MASK                                 0x2
#define _T6HLT_T6MODE2_POSN                                 0x2
#define _T6HLT_T6MODE2_POSITION                             0x2
#define _T6HLT_T6MODE2_SIZE                                 0x1
#define _T6HLT_T6MODE2_LENGTH                               0x1
#define _T6HLT_T6MODE2_MASK                                 0x4
#define _T6HLT_T6MODE3_POSN                                 0x3
#define _T6HLT_T6MODE3_POSITION                             0x3
#define _T6HLT_T6MODE3_SIZE                                 0x1
#define _T6HLT_T6MODE3_LENGTH                               0x1
#define _T6HLT_T6MODE3_MASK                                 0x8
#define _T6HLT_T6MODE4_POSN                                 0x4
#define _T6HLT_T6MODE4_POSITION                             0x4
#define _T6HLT_T6MODE4_SIZE                                 0x1
#define _T6HLT_T6MODE4_LENGTH                               0x1
#define _T6HLT_T6MODE4_MASK                                 0x10

// Register: T6CLKCON
#define T6CLKCON T6CLKCON
extern volatile unsigned char           T6CLKCON            __at(0x41E);
#ifndef _LIB_BUILD
asm("T6CLKCON equ 041Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CS                     :4;
    };
    struct {
        unsigned CS0                    :1;
        unsigned CS1                    :1;
        unsigned CS2                    :1;
        unsigned CS3                    :1;
    };
    struct {
        unsigned T6CS                   :4;
    };
    struct {
        unsigned T6CS0                  :1;
        unsigned T6CS1                  :1;
        unsigned T6CS2                  :1;
        unsigned T6CS3                  :1;
    };
} T6CLKCONbits_t;
extern volatile T6CLKCONbits_t T6CLKCONbits __at(0x41E);
// bitfield macros
#define _T6CLKCON_CS_POSN                                   0x0
#define _T6CLKCON_CS_POSITION                               0x0
#define _T6CLKCON_CS_SIZE                                   0x4
#define _T6CLKCON_CS_LENGTH                                 0x4
#define _T6CLKCON_CS_MASK                                   0xF
#define _T6CLKCON_CS0_POSN                                  0x0
#define _T6CLKCON_CS0_POSITION                              0x0
#define _T6CLKCON_CS0_SIZE                                  0x1
#define _T6CLKCON_CS0_LENGTH                                0x1
#define _T6CLKCON_CS0_MASK                                  0x1
#define _T6CLKCON_CS1_POSN                                  0x1
#define _T6CLKCON_CS1_POSITION                              0x1
#define _T6CLKCON_CS1_SIZE                                  0x1
#define _T6CLKCON_CS1_LENGTH                                0x1
#define _T6CLKCON_CS1_MASK                                  0x2
#define _T6CLKCON_CS2_POSN                                  0x2
#define _T6CLKCON_CS2_POSITION                              0x2
#define _T6CLKCON_CS2_SIZE                                  0x1
#define _T6CLKCON_CS2_LENGTH                                0x1
#define _T6CLKCON_CS2_MASK                                  0x4
#define _T6CLKCON_CS3_POSN                                  0x3
#define _T6CLKCON_CS3_POSITION                              0x3
#define _T6CLKCON_CS3_SIZE                                  0x1
#define _T6CLKCON_CS3_LENGTH                                0x1
#define _T6CLKCON_CS3_MASK                                  0x8
#define _T6CLKCON_T6CS_POSN                                 0x0
#define _T6CLKCON_T6CS_POSITION                             0x0
#define _T6CLKCON_T6CS_SIZE                                 0x4
#define _T6CLKCON_T6CS_LENGTH                               0x4
#define _T6CLKCON_T6CS_MASK                                 0xF
#define _T6CLKCON_T6CS0_POSN                                0x0
#define _T6CLKCON_T6CS0_POSITION                            0x0
#define _T6CLKCON_T6CS0_SIZE                                0x1
#define _T6CLKCON_T6CS0_LENGTH                              0x1
#define _T6CLKCON_T6CS0_MASK                                0x1
#define _T6CLKCON_T6CS1_POSN                                0x1
#define _T6CLKCON_T6CS1_POSITION                            0x1
#define _T6CLKCON_T6CS1_SIZE                                0x1
#define _T6CLKCON_T6CS1_LENGTH                              0x1
#define _T6CLKCON_T6CS1_MASK                                0x2
#define _T6CLKCON_T6CS2_POSN                                0x2
#define _T6CLKCON_T6CS2_POSITION                            0x2
#define _T6CLKCON_T6CS2_SIZE                                0x1
#define _T6CLKCON_T6CS2_LENGTH                              0x1
#define _T6CLKCON_T6CS2_MASK                                0x4
#define _T6CLKCON_T6CS3_POSN                                0x3
#define _T6CLKCON_T6CS3_POSITION                            0x3
#define _T6CLKCON_T6CS3_SIZE                                0x1
#define _T6CLKCON_T6CS3_LENGTH                              0x1
#define _T6CLKCON_T6CS3_MASK                                0x8

// Register: T6RST
#define T6RST T6RST
extern volatile unsigned char           T6RST               __at(0x41F);
#ifndef _LIB_BUILD
asm("T6RST equ 041Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RSEL                   :5;
    };
    struct {
        unsigned RSEL0                  :1;
        unsigned RSEL1                  :1;
        unsigned RSEL2                  :1;
        unsigned RSEL3                  :1;
        unsigned RSEL4                  :1;
    };
    struct {
        unsigned T6RSEL                 :5;
    };
    struct {
        unsigned T6RSEL0                :1;
        unsigned T6RSEL1                :1;
        unsigned T6RSEL2                :1;
        unsigned T6RSEL3                :1;
        unsigned T6RSEL4                :1;
    };
} T6RSTbits_t;
extern volatile T6RSTbits_t T6RSTbits __at(0x41F);
// bitfield macros
#define _T6RST_RSEL_POSN                                    0x0
#define _T6RST_RSEL_POSITION                                0x0
#define _T6RST_RSEL_SIZE                                    0x5
#define _T6RST_RSEL_LENGTH                                  0x5
#define _T6RST_RSEL_MASK                                    0x1F
#define _T6RST_RSEL0_POSN                                   0x0
#define _T6RST_RSEL0_POSITION                               0x0
#define _T6RST_RSEL0_SIZE                                   0x1
#define _T6RST_RSEL0_LENGTH                                 0x1
#define _T6RST_RSEL0_MASK                                   0x1
#define _T6RST_RSEL1_POSN                                   0x1
#define _T6RST_RSEL1_POSITION                               0x1
#define _T6RST_RSEL1_SIZE                                   0x1
#define _T6RST_RSEL1_LENGTH                                 0x1
#define _T6RST_RSEL1_MASK                                   0x2
#define _T6RST_RSEL2_POSN                                   0x2
#define _T6RST_RSEL2_POSITION                               0x2
#define _T6RST_RSEL2_SIZE                                   0x1
#define _T6RST_RSEL2_LENGTH                                 0x1
#define _T6RST_RSEL2_MASK                                   0x4
#define _T6RST_RSEL3_POSN                                   0x3
#define _T6RST_RSEL3_POSITION                               0x3
#define _T6RST_RSEL3_SIZE                                   0x1
#define _T6RST_RSEL3_LENGTH                                 0x1
#define _T6RST_RSEL3_MASK                                   0x8
#define _T6RST_RSEL4_POSN                                   0x4
#define _T6RST_RSEL4_POSITION                               0x4
#define _T6RST_RSEL4_SIZE                                   0x1
#define _T6RST_RSEL4_LENGTH                                 0x1
#define _T6RST_RSEL4_MASK                                   0x10
#define _T6RST_T6RSEL_POSN                                  0x0
#define _T6RST_T6RSEL_POSITION                              0x0
#define _T6RST_T6RSEL_SIZE                                  0x5
#define _T6RST_T6RSEL_LENGTH                                0x5
#define _T6RST_T6RSEL_MASK                                  0x1F
#define _T6RST_T6RSEL0_POSN                                 0x0
#define _T6RST_T6RSEL0_POSITION                             0x0
#define _T6RST_T6RSEL0_SIZE                                 0x1
#define _T6RST_T6RSEL0_LENGTH                               0x1
#define _T6RST_T6RSEL0_MASK                                 0x1
#define _T6RST_T6RSEL1_POSN                                 0x1
#define _T6RST_T6RSEL1_POSITION                             0x1
#define _T6RST_T6RSEL1_SIZE                                 0x1
#define _T6RST_T6RSEL1_LENGTH                               0x1
#define _T6RST_T6RSEL1_MASK                                 0x2
#define _T6RST_T6RSEL2_POSN                                 0x2
#define _T6RST_T6RSEL2_POSITION                             0x2
#define _T6RST_T6RSEL2_SIZE                                 0x1
#define _T6RST_T6RSEL2_LENGTH                               0x1
#define _T6RST_T6RSEL2_MASK                                 0x4
#define _T6RST_T6RSEL3_POSN                                 0x3
#define _T6RST_T6RSEL3_POSITION                             0x3
#define _T6RST_T6RSEL3_SIZE                                 0x1
#define _T6RST_T6RSEL3_LENGTH                               0x1
#define _T6RST_T6RSEL3_MASK                                 0x8
#define _T6RST_T6RSEL4_POSN                                 0x4
#define _T6RST_T6RSEL4_POSITION                             0x4
#define _T6RST_T6RSEL4_SIZE                                 0x1
#define _T6RST_T6RSEL4_LENGTH                               0x1
#define _T6RST_T6RSEL4_MASK                                 0x10

// Register: ADRES
#define ADRES ADRES
extern volatile unsigned short          ADRES               __at(0x48E);
#ifndef _LIB_BUILD
asm("ADRES equ 048Eh");
#endif

// Register: ADRESL
#define ADRESL ADRESL
extern volatile unsigned char           ADRESL              __at(0x48E);
#ifndef _LIB_BUILD
asm("ADRESL equ 048Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADRES                  :8;
    };
} ADRESLbits_t;
extern volatile ADRESLbits_t ADRESLbits __at(0x48E);
// bitfield macros
#define _ADRESL_ADRES_POSN                                  0x0
#define _ADRESL_ADRES_POSITION                              0x0
#define _ADRESL_ADRES_SIZE                                  0x8
#define _ADRESL_ADRES_LENGTH                                0x8
#define _ADRESL_ADRES_MASK                                  0xFF

// Register: ADRESH
#define ADRESH ADRESH
extern volatile unsigned char           ADRESH              __at(0x48F);
#ifndef _LIB_BUILD
asm("ADRESH equ 048Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADRES                  :8;
    };
} ADRESHbits_t;
extern volatile ADRESHbits_t ADRESHbits __at(0x48F);
// bitfield macros
#define _ADRESH_ADRES_POSN                                  0x0
#define _ADRESH_ADRES_POSITION                              0x0
#define _ADRESH_ADRES_SIZE                                  0x8
#define _ADRESH_ADRES_LENGTH                                0x8
#define _ADRESH_ADRES_MASK                                  0xFF

// Register: ADCON0
#define ADCON0 ADCON0
extern volatile unsigned char           ADCON0              __at(0x490);
#ifndef _LIB_BUILD
asm("ADCON0 equ 0490h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADON                   :1;
        unsigned GO                     :1;
        unsigned CHS                    :6;
    };
} ADCON0bits_t;
extern volatile ADCON0bits_t ADCON0bits __at(0x490);
// bitfield macros
#define _ADCON0_ADON_POSN                                   0x0
#define _ADCON0_ADON_POSITION                               0x0
#define _ADCON0_ADON_SIZE                                   0x1
#define _ADCON0_ADON_LENGTH                                 0x1
#define _ADCON0_ADON_MASK                                   0x1
#define _ADCON0_GO_POSN                                     0x1
#define _ADCON0_GO_POSITION                                 0x1
#define _ADCON0_GO_SIZE                                     0x1
#define _ADCON0_GO_LENGTH                                   0x1
#define _ADCON0_GO_MASK                                     0x2
#define _ADCON0_CHS_POSN                                    0x2
#define _ADCON0_CHS_POSITION                                0x2
#define _ADCON0_CHS_SIZE                                    0x6
#define _ADCON0_CHS_LENGTH                                  0x6
#define _ADCON0_CHS_MASK                                    0xFC

// Register: ADCON1
#define ADCON1 ADCON1
extern volatile unsigned char           ADCON1              __at(0x491);
#ifndef _LIB_BUILD
asm("ADCON1 equ 0491h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADPREF                 :2;
        unsigned ADNREF                 :1;
        unsigned                        :1;
        unsigned ADCS                   :3;
        unsigned ADFM                   :1;
    };
} ADCON1bits_t;
extern volatile ADCON1bits_t ADCON1bits __at(0x491);
// bitfield macros
#define _ADCON1_ADPREF_POSN                                 0x0
#define _ADCON1_ADPREF_POSITION                             0x0
#define _ADCON1_ADPREF_SIZE                                 0x2
#define _ADCON1_ADPREF_LENGTH                               0x2
#define _ADCON1_ADPREF_MASK                                 0x3
#define _ADCON1_ADNREF_POSN                                 0x2
#define _ADCON1_ADNREF_POSITION                             0x2
#define _ADCON1_ADNREF_SIZE                                 0x1
#define _ADCON1_ADNREF_LENGTH                               0x1
#define _ADCON1_ADNREF_MASK                                 0x4
#define _ADCON1_ADCS_POSN                                   0x4
#define _ADCON1_ADCS_POSITION                               0x4
#define _ADCON1_ADCS_SIZE                                   0x3
#define _ADCON1_ADCS_LENGTH                                 0x3
#define _ADCON1_ADCS_MASK                                   0x70
#define _ADCON1_ADFM_POSN                                   0x7
#define _ADCON1_ADFM_POSITION                               0x7
#define _ADCON1_ADFM_SIZE                                   0x1
#define _ADCON1_ADFM_LENGTH                                 0x1
#define _ADCON1_ADFM_MASK                                   0x80

// Register: ADCON2
#define ADCON2 ADCON2
extern volatile unsigned char           ADCON2              __at(0x492);
#ifndef _LIB_BUILD
asm("ADCON2 equ 0492h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRIGSEL                :6;
    };
} ADCON2bits_t;
extern volatile ADCON2bits_t ADCON2bits __at(0x492);
// bitfield macros
#define _ADCON2_TRIGSEL_POSN                                0x0
#define _ADCON2_TRIGSEL_POSITION                            0x0
#define _ADCON2_TRIGSEL_SIZE                                0x6
#define _ADCON2_TRIGSEL_LENGTH                              0x6
#define _ADCON2_TRIGSEL_MASK                                0x3F

// Register: T2TMR
#define T2TMR T2TMR
extern volatile unsigned char           T2TMR               __at(0x493);
#ifndef _LIB_BUILD
asm("T2TMR equ 0493h");
#endif
// aliases
extern volatile unsigned char           TMR2                __at(0x493);
#ifndef _LIB_BUILD
asm("TMR2 equ 0493h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned TMR2                   :8;
    };
} T2TMRbits_t;
extern volatile T2TMRbits_t T2TMRbits __at(0x493);
// bitfield macros
#define _T2TMR_TMR_POSN                                     0x0
#define _T2TMR_TMR_POSITION                                 0x0
#define _T2TMR_TMR_SIZE                                     0x8
#define _T2TMR_TMR_LENGTH                                   0x8
#define _T2TMR_TMR_MASK                                     0xFF
#define _T2TMR_TMR2_POSN                                    0x0
#define _T2TMR_TMR2_POSITION                                0x0
#define _T2TMR_TMR2_SIZE                                    0x8
#define _T2TMR_TMR2_LENGTH                                  0x8
#define _T2TMR_TMR2_MASK                                    0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned TMR2                   :8;
    };
} TMR2bits_t;
extern volatile TMR2bits_t TMR2bits __at(0x493);
// bitfield macros
#define _TMR2_TMR_POSN                                      0x0
#define _TMR2_TMR_POSITION                                  0x0
#define _TMR2_TMR_SIZE                                      0x8
#define _TMR2_TMR_LENGTH                                    0x8
#define _TMR2_TMR_MASK                                      0xFF
#define _TMR2_TMR2_POSN                                     0x0
#define _TMR2_TMR2_POSITION                                 0x0
#define _TMR2_TMR2_SIZE                                     0x8
#define _TMR2_TMR2_LENGTH                                   0x8
#define _TMR2_TMR2_MASK                                     0xFF

// Register: T2PR
#define T2PR T2PR
extern volatile unsigned char           T2PR                __at(0x494);
#ifndef _LIB_BUILD
asm("T2PR equ 0494h");
#endif
// aliases
extern volatile unsigned char           PR2                 __at(0x494);
#ifndef _LIB_BUILD
asm("PR2 equ 0494h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned T2PR                   :8;
    };
} T2PRbits_t;
extern volatile T2PRbits_t T2PRbits __at(0x494);
// bitfield macros
#define _T2PR_PR_POSN                                       0x0
#define _T2PR_PR_POSITION                                   0x0
#define _T2PR_PR_SIZE                                       0x8
#define _T2PR_PR_LENGTH                                     0x8
#define _T2PR_PR_MASK                                       0xFF
#define _T2PR_T2PR_POSN                                     0x0
#define _T2PR_T2PR_POSITION                                 0x0
#define _T2PR_T2PR_SIZE                                     0x8
#define _T2PR_T2PR_LENGTH                                   0x8
#define _T2PR_T2PR_MASK                                     0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned T2PR                   :8;
    };
} PR2bits_t;
extern volatile PR2bits_t PR2bits __at(0x494);
// bitfield macros
#define _PR2_PR_POSN                                        0x0
#define _PR2_PR_POSITION                                    0x0
#define _PR2_PR_SIZE                                        0x8
#define _PR2_PR_LENGTH                                      0x8
#define _PR2_PR_MASK                                        0xFF
#define _PR2_T2PR_POSN                                      0x0
#define _PR2_T2PR_POSITION                                  0x0
#define _PR2_T2PR_SIZE                                      0x8
#define _PR2_T2PR_LENGTH                                    0x8
#define _PR2_T2PR_MASK                                      0xFF

// Register: T2CON
#define T2CON T2CON
extern volatile unsigned char           T2CON               __at(0x495);
#ifndef _LIB_BUILD
asm("T2CON equ 0495h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OUTPS                  :4;
        unsigned CKPS                   :3;
        unsigned ON                     :1;
    };
    struct {
        unsigned OUTPS0                 :1;
        unsigned OUTPS1                 :1;
        unsigned OUTPS2                 :1;
        unsigned OUTPS3                 :1;
        unsigned CKPS0                  :1;
        unsigned CKPS1                  :1;
        unsigned CKPS2                  :1;
    };
    struct {
        unsigned T2OUTPS                :4;
        unsigned T2CKPS                 :3;
        unsigned T2ON                   :1;
    };
    struct {
        unsigned T2OUTPS0               :1;
        unsigned T2OUTPS1               :1;
        unsigned T2OUTPS2               :1;
        unsigned T2OUTPS3               :1;
        unsigned T2CKPS0                :1;
        unsigned T2CKPS1                :1;
        unsigned T2CKPS2                :1;
        unsigned TMR2ON                 :1;
    };
} T2CONbits_t;
extern volatile T2CONbits_t T2CONbits __at(0x495);
// bitfield macros
#define _T2CON_OUTPS_POSN                                   0x0
#define _T2CON_OUTPS_POSITION                               0x0
#define _T2CON_OUTPS_SIZE                                   0x4
#define _T2CON_OUTPS_LENGTH                                 0x4
#define _T2CON_OUTPS_MASK                                   0xF
#define _T2CON_CKPS_POSN                                    0x4
#define _T2CON_CKPS_POSITION                                0x4
#define _T2CON_CKPS_SIZE                                    0x3
#define _T2CON_CKPS_LENGTH                                  0x3
#define _T2CON_CKPS_MASK                                    0x70
#define _T2CON_ON_POSN                                      0x7
#define _T2CON_ON_POSITION                                  0x7
#define _T2CON_ON_SIZE                                      0x1
#define _T2CON_ON_LENGTH                                    0x1
#define _T2CON_ON_MASK                                      0x80
#define _T2CON_OUTPS0_POSN                                  0x0
#define _T2CON_OUTPS0_POSITION                              0x0
#define _T2CON_OUTPS0_SIZE                                  0x1
#define _T2CON_OUTPS0_LENGTH                                0x1
#define _T2CON_OUTPS0_MASK                                  0x1
#define _T2CON_OUTPS1_POSN                                  0x1
#define _T2CON_OUTPS1_POSITION                              0x1
#define _T2CON_OUTPS1_SIZE                                  0x1
#define _T2CON_OUTPS1_LENGTH                                0x1
#define _T2CON_OUTPS1_MASK                                  0x2
#define _T2CON_OUTPS2_POSN                                  0x2
#define _T2CON_OUTPS2_POSITION                              0x2
#define _T2CON_OUTPS2_SIZE                                  0x1
#define _T2CON_OUTPS2_LENGTH                                0x1
#define _T2CON_OUTPS2_MASK                                  0x4
#define _T2CON_OUTPS3_POSN                                  0x3
#define _T2CON_OUTPS3_POSITION                              0x3
#define _T2CON_OUTPS3_SIZE                                  0x1
#define _T2CON_OUTPS3_LENGTH                                0x1
#define _T2CON_OUTPS3_MASK                                  0x8
#define _T2CON_CKPS0_POSN                                   0x4
#define _T2CON_CKPS0_POSITION                               0x4
#define _T2CON_CKPS0_SIZE                                   0x1
#define _T2CON_CKPS0_LENGTH                                 0x1
#define _T2CON_CKPS0_MASK                                   0x10
#define _T2CON_CKPS1_POSN                                   0x5
#define _T2CON_CKPS1_POSITION                               0x5
#define _T2CON_CKPS1_SIZE                                   0x1
#define _T2CON_CKPS1_LENGTH                                 0x1
#define _T2CON_CKPS1_MASK                                   0x20
#define _T2CON_CKPS2_POSN                                   0x6
#define _T2CON_CKPS2_POSITION                               0x6
#define _T2CON_CKPS2_SIZE                                   0x1
#define _T2CON_CKPS2_LENGTH                                 0x1
#define _T2CON_CKPS2_MASK                                   0x40
#define _T2CON_T2OUTPS_POSN                                 0x0
#define _T2CON_T2OUTPS_POSITION                             0x0
#define _T2CON_T2OUTPS_SIZE                                 0x4
#define _T2CON_T2OUTPS_LENGTH                               0x4
#define _T2CON_T2OUTPS_MASK                                 0xF
#define _T2CON_T2CKPS_POSN                                  0x4
#define _T2CON_T2CKPS_POSITION                              0x4
#define _T2CON_T2CKPS_SIZE                                  0x3
#define _T2CON_T2CKPS_LENGTH                                0x3
#define _T2CON_T2CKPS_MASK                                  0x70
#define _T2CON_T2ON_POSN                                    0x7
#define _T2CON_T2ON_POSITION                                0x7
#define _T2CON_T2ON_SIZE                                    0x1
#define _T2CON_T2ON_LENGTH                                  0x1
#define _T2CON_T2ON_MASK                                    0x80
#define _T2CON_T2OUTPS0_POSN                                0x0
#define _T2CON_T2OUTPS0_POSITION                            0x0
#define _T2CON_T2OUTPS0_SIZE                                0x1
#define _T2CON_T2OUTPS0_LENGTH                              0x1
#define _T2CON_T2OUTPS0_MASK                                0x1
#define _T2CON_T2OUTPS1_POSN                                0x1
#define _T2CON_T2OUTPS1_POSITION                            0x1
#define _T2CON_T2OUTPS1_SIZE                                0x1
#define _T2CON_T2OUTPS1_LENGTH                              0x1
#define _T2CON_T2OUTPS1_MASK                                0x2
#define _T2CON_T2OUTPS2_POSN                                0x2
#define _T2CON_T2OUTPS2_POSITION                            0x2
#define _T2CON_T2OUTPS2_SIZE                                0x1
#define _T2CON_T2OUTPS2_LENGTH                              0x1
#define _T2CON_T2OUTPS2_MASK                                0x4
#define _T2CON_T2OUTPS3_POSN                                0x3
#define _T2CON_T2OUTPS3_POSITION                            0x3
#define _T2CON_T2OUTPS3_SIZE                                0x1
#define _T2CON_T2OUTPS3_LENGTH                              0x1
#define _T2CON_T2OUTPS3_MASK                                0x8
#define _T2CON_T2CKPS0_POSN                                 0x4
#define _T2CON_T2CKPS0_POSITION                             0x4
#define _T2CON_T2CKPS0_SIZE                                 0x1
#define _T2CON_T2CKPS0_LENGTH                               0x1
#define _T2CON_T2CKPS0_MASK                                 0x10
#define _T2CON_T2CKPS1_POSN                                 0x5
#define _T2CON_T2CKPS1_POSITION                             0x5
#define _T2CON_T2CKPS1_SIZE                                 0x1
#define _T2CON_T2CKPS1_LENGTH                               0x1
#define _T2CON_T2CKPS1_MASK                                 0x20
#define _T2CON_T2CKPS2_POSN                                 0x6
#define _T2CON_T2CKPS2_POSITION                             0x6
#define _T2CON_T2CKPS2_SIZE                                 0x1
#define _T2CON_T2CKPS2_LENGTH                               0x1
#define _T2CON_T2CKPS2_MASK                                 0x40
#define _T2CON_TMR2ON_POSN                                  0x7
#define _T2CON_TMR2ON_POSITION                              0x7
#define _T2CON_TMR2ON_SIZE                                  0x1
#define _T2CON_TMR2ON_LENGTH                                0x1
#define _T2CON_TMR2ON_MASK                                  0x80

// Register: T2HLT
#define T2HLT T2HLT
extern volatile unsigned char           T2HLT               __at(0x496);
#ifndef _LIB_BUILD
asm("T2HLT equ 0496h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MODE                   :5;
        unsigned CKSYNC                 :1;
        unsigned CKPOL                  :1;
        unsigned PSYNC                  :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
        unsigned MODE3                  :1;
        unsigned MODE4                  :1;
    };
    struct {
        unsigned T2MODE                 :5;
        unsigned T2CKSYNC               :1;
        unsigned T2CKPOL                :1;
        unsigned T2PSYNC                :1;
    };
    struct {
        unsigned T2MODE0                :1;
        unsigned T2MODE1                :1;
        unsigned T2MODE2                :1;
        unsigned T2MODE3                :1;
        unsigned T2MODE4                :1;
    };
} T2HLTbits_t;
extern volatile T2HLTbits_t T2HLTbits __at(0x496);
// bitfield macros
#define _T2HLT_MODE_POSN                                    0x0
#define _T2HLT_MODE_POSITION                                0x0
#define _T2HLT_MODE_SIZE                                    0x5
#define _T2HLT_MODE_LENGTH                                  0x5
#define _T2HLT_MODE_MASK                                    0x1F
#define _T2HLT_CKSYNC_POSN                                  0x5
#define _T2HLT_CKSYNC_POSITION                              0x5
#define _T2HLT_CKSYNC_SIZE                                  0x1
#define _T2HLT_CKSYNC_LENGTH                                0x1
#define _T2HLT_CKSYNC_MASK                                  0x20
#define _T2HLT_CKPOL_POSN                                   0x6
#define _T2HLT_CKPOL_POSITION                               0x6
#define _T2HLT_CKPOL_SIZE                                   0x1
#define _T2HLT_CKPOL_LENGTH                                 0x1
#define _T2HLT_CKPOL_MASK                                   0x40
#define _T2HLT_PSYNC_POSN                                   0x7
#define _T2HLT_PSYNC_POSITION                               0x7
#define _T2HLT_PSYNC_SIZE                                   0x1
#define _T2HLT_PSYNC_LENGTH                                 0x1
#define _T2HLT_PSYNC_MASK                                   0x80
#define _T2HLT_MODE0_POSN                                   0x0
#define _T2HLT_MODE0_POSITION                               0x0
#define _T2HLT_MODE0_SIZE                                   0x1
#define _T2HLT_MODE0_LENGTH                                 0x1
#define _T2HLT_MODE0_MASK                                   0x1
#define _T2HLT_MODE1_POSN                                   0x1
#define _T2HLT_MODE1_POSITION                               0x1
#define _T2HLT_MODE1_SIZE                                   0x1
#define _T2HLT_MODE1_LENGTH                                 0x1
#define _T2HLT_MODE1_MASK                                   0x2
#define _T2HLT_MODE2_POSN                                   0x2
#define _T2HLT_MODE2_POSITION                               0x2
#define _T2HLT_MODE2_SIZE                                   0x1
#define _T2HLT_MODE2_LENGTH                                 0x1
#define _T2HLT_MODE2_MASK                                   0x4
#define _T2HLT_MODE3_POSN                                   0x3
#define _T2HLT_MODE3_POSITION                               0x3
#define _T2HLT_MODE3_SIZE                                   0x1
#define _T2HLT_MODE3_LENGTH                                 0x1
#define _T2HLT_MODE3_MASK                                   0x8
#define _T2HLT_MODE4_POSN                                   0x4
#define _T2HLT_MODE4_POSITION                               0x4
#define _T2HLT_MODE4_SIZE                                   0x1
#define _T2HLT_MODE4_LENGTH                                 0x1
#define _T2HLT_MODE4_MASK                                   0x10
#define _T2HLT_T2MODE_POSN                                  0x0
#define _T2HLT_T2MODE_POSITION                              0x0
#define _T2HLT_T2MODE_SIZE                                  0x5
#define _T2HLT_T2MODE_LENGTH                                0x5
#define _T2HLT_T2MODE_MASK                                  0x1F
#define _T2HLT_T2CKSYNC_POSN                                0x5
#define _T2HLT_T2CKSYNC_POSITION                            0x5
#define _T2HLT_T2CKSYNC_SIZE                                0x1
#define _T2HLT_T2CKSYNC_LENGTH                              0x1
#define _T2HLT_T2CKSYNC_MASK                                0x20
#define _T2HLT_T2CKPOL_POSN                                 0x6
#define _T2HLT_T2CKPOL_POSITION                             0x6
#define _T2HLT_T2CKPOL_SIZE                                 0x1
#define _T2HLT_T2CKPOL_LENGTH                               0x1
#define _T2HLT_T2CKPOL_MASK                                 0x40
#define _T2HLT_T2PSYNC_POSN                                 0x7
#define _T2HLT_T2PSYNC_POSITION                             0x7
#define _T2HLT_T2PSYNC_SIZE                                 0x1
#define _T2HLT_T2PSYNC_LENGTH                               0x1
#define _T2HLT_T2PSYNC_MASK                                 0x80
#define _T2HLT_T2MODE0_POSN                                 0x0
#define _T2HLT_T2MODE0_POSITION                             0x0
#define _T2HLT_T2MODE0_SIZE                                 0x1
#define _T2HLT_T2MODE0_LENGTH                               0x1
#define _T2HLT_T2MODE0_MASK                                 0x1
#define _T2HLT_T2MODE1_POSN                                 0x1
#define _T2HLT_T2MODE1_POSITION                             0x1
#define _T2HLT_T2MODE1_SIZE                                 0x1
#define _T2HLT_T2MODE1_LENGTH                               0x1
#define _T2HLT_T2MODE1_MASK                                 0x2
#define _T2HLT_T2MODE2_POSN                                 0x2
#define _T2HLT_T2MODE2_POSITION                             0x2
#define _T2HLT_T2MODE2_SIZE                                 0x1
#define _T2HLT_T2MODE2_LENGTH                               0x1
#define _T2HLT_T2MODE2_MASK                                 0x4
#define _T2HLT_T2MODE3_POSN                                 0x3
#define _T2HLT_T2MODE3_POSITION                             0x3
#define _T2HLT_T2MODE3_SIZE                                 0x1
#define _T2HLT_T2MODE3_LENGTH                               0x1
#define _T2HLT_T2MODE3_MASK                                 0x8
#define _T2HLT_T2MODE4_POSN                                 0x4
#define _T2HLT_T2MODE4_POSITION                             0x4
#define _T2HLT_T2MODE4_SIZE                                 0x1
#define _T2HLT_T2MODE4_LENGTH                               0x1
#define _T2HLT_T2MODE4_MASK                                 0x10

// Register: T2CLKCON
#define T2CLKCON T2CLKCON
extern volatile unsigned char           T2CLKCON            __at(0x497);
#ifndef _LIB_BUILD
asm("T2CLKCON equ 0497h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CS                     :4;
    };
    struct {
        unsigned CS0                    :1;
        unsigned CS1                    :1;
        unsigned CS2                    :1;
        unsigned CS3                    :1;
    };
    struct {
        unsigned T2CS                   :4;
    };
    struct {
        unsigned T2CS0                  :1;
        unsigned T2CS1                  :1;
        unsigned T2CS2                  :1;
        unsigned T2CS3                  :1;
    };
} T2CLKCONbits_t;
extern volatile T2CLKCONbits_t T2CLKCONbits __at(0x497);
// bitfield macros
#define _T2CLKCON_CS_POSN                                   0x0
#define _T2CLKCON_CS_POSITION                               0x0
#define _T2CLKCON_CS_SIZE                                   0x4
#define _T2CLKCON_CS_LENGTH                                 0x4
#define _T2CLKCON_CS_MASK                                   0xF
#define _T2CLKCON_CS0_POSN                                  0x0
#define _T2CLKCON_CS0_POSITION                              0x0
#define _T2CLKCON_CS0_SIZE                                  0x1
#define _T2CLKCON_CS0_LENGTH                                0x1
#define _T2CLKCON_CS0_MASK                                  0x1
#define _T2CLKCON_CS1_POSN                                  0x1
#define _T2CLKCON_CS1_POSITION                              0x1
#define _T2CLKCON_CS1_SIZE                                  0x1
#define _T2CLKCON_CS1_LENGTH                                0x1
#define _T2CLKCON_CS1_MASK                                  0x2
#define _T2CLKCON_CS2_POSN                                  0x2
#define _T2CLKCON_CS2_POSITION                              0x2
#define _T2CLKCON_CS2_SIZE                                  0x1
#define _T2CLKCON_CS2_LENGTH                                0x1
#define _T2CLKCON_CS2_MASK                                  0x4
#define _T2CLKCON_CS3_POSN                                  0x3
#define _T2CLKCON_CS3_POSITION                              0x3
#define _T2CLKCON_CS3_SIZE                                  0x1
#define _T2CLKCON_CS3_LENGTH                                0x1
#define _T2CLKCON_CS3_MASK                                  0x8
#define _T2CLKCON_T2CS_POSN                                 0x0
#define _T2CLKCON_T2CS_POSITION                             0x0
#define _T2CLKCON_T2CS_SIZE                                 0x4
#define _T2CLKCON_T2CS_LENGTH                               0x4
#define _T2CLKCON_T2CS_MASK                                 0xF
#define _T2CLKCON_T2CS0_POSN                                0x0
#define _T2CLKCON_T2CS0_POSITION                            0x0
#define _T2CLKCON_T2CS0_SIZE                                0x1
#define _T2CLKCON_T2CS0_LENGTH                              0x1
#define _T2CLKCON_T2CS0_MASK                                0x1
#define _T2CLKCON_T2CS1_POSN                                0x1
#define _T2CLKCON_T2CS1_POSITION                            0x1
#define _T2CLKCON_T2CS1_SIZE                                0x1
#define _T2CLKCON_T2CS1_LENGTH                              0x1
#define _T2CLKCON_T2CS1_MASK                                0x2
#define _T2CLKCON_T2CS2_POSN                                0x2
#define _T2CLKCON_T2CS2_POSITION                            0x2
#define _T2CLKCON_T2CS2_SIZE                                0x1
#define _T2CLKCON_T2CS2_LENGTH                              0x1
#define _T2CLKCON_T2CS2_MASK                                0x4
#define _T2CLKCON_T2CS3_POSN                                0x3
#define _T2CLKCON_T2CS3_POSITION                            0x3
#define _T2CLKCON_T2CS3_SIZE                                0x1
#define _T2CLKCON_T2CS3_LENGTH                              0x1
#define _T2CLKCON_T2CS3_MASK                                0x8

// Register: T2RST
#define T2RST T2RST
extern volatile unsigned char           T2RST               __at(0x498);
#ifndef _LIB_BUILD
asm("T2RST equ 0498h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RSEL                   :5;
    };
    struct {
        unsigned RSEL0                  :1;
        unsigned RSEL1                  :1;
        unsigned RSEL2                  :1;
        unsigned RSEL3                  :1;
        unsigned RSEL4                  :1;
    };
    struct {
        unsigned T2RSEL                 :5;
    };
    struct {
        unsigned T2RSEL0                :1;
        unsigned T2RSEL1                :1;
        unsigned T2RSEL2                :1;
        unsigned T2RSEL3                :1;
        unsigned T2RSEL4                :1;
    };
} T2RSTbits_t;
extern volatile T2RSTbits_t T2RSTbits __at(0x498);
// bitfield macros
#define _T2RST_RSEL_POSN                                    0x0
#define _T2RST_RSEL_POSITION                                0x0
#define _T2RST_RSEL_SIZE                                    0x5
#define _T2RST_RSEL_LENGTH                                  0x5
#define _T2RST_RSEL_MASK                                    0x1F
#define _T2RST_RSEL0_POSN                                   0x0
#define _T2RST_RSEL0_POSITION                               0x0
#define _T2RST_RSEL0_SIZE                                   0x1
#define _T2RST_RSEL0_LENGTH                                 0x1
#define _T2RST_RSEL0_MASK                                   0x1
#define _T2RST_RSEL1_POSN                                   0x1
#define _T2RST_RSEL1_POSITION                               0x1
#define _T2RST_RSEL1_SIZE                                   0x1
#define _T2RST_RSEL1_LENGTH                                 0x1
#define _T2RST_RSEL1_MASK                                   0x2
#define _T2RST_RSEL2_POSN                                   0x2
#define _T2RST_RSEL2_POSITION                               0x2
#define _T2RST_RSEL2_SIZE                                   0x1
#define _T2RST_RSEL2_LENGTH                                 0x1
#define _T2RST_RSEL2_MASK                                   0x4
#define _T2RST_RSEL3_POSN                                   0x3
#define _T2RST_RSEL3_POSITION                               0x3
#define _T2RST_RSEL3_SIZE                                   0x1
#define _T2RST_RSEL3_LENGTH                                 0x1
#define _T2RST_RSEL3_MASK                                   0x8
#define _T2RST_RSEL4_POSN                                   0x4
#define _T2RST_RSEL4_POSITION                               0x4
#define _T2RST_RSEL4_SIZE                                   0x1
#define _T2RST_RSEL4_LENGTH                                 0x1
#define _T2RST_RSEL4_MASK                                   0x10
#define _T2RST_T2RSEL_POSN                                  0x0
#define _T2RST_T2RSEL_POSITION                              0x0
#define _T2RST_T2RSEL_SIZE                                  0x5
#define _T2RST_T2RSEL_LENGTH                                0x5
#define _T2RST_T2RSEL_MASK                                  0x1F
#define _T2RST_T2RSEL0_POSN                                 0x0
#define _T2RST_T2RSEL0_POSITION                             0x0
#define _T2RST_T2RSEL0_SIZE                                 0x1
#define _T2RST_T2RSEL0_LENGTH                               0x1
#define _T2RST_T2RSEL0_MASK                                 0x1
#define _T2RST_T2RSEL1_POSN                                 0x1
#define _T2RST_T2RSEL1_POSITION                             0x1
#define _T2RST_T2RSEL1_SIZE                                 0x1
#define _T2RST_T2RSEL1_LENGTH                               0x1
#define _T2RST_T2RSEL1_MASK                                 0x2
#define _T2RST_T2RSEL2_POSN                                 0x2
#define _T2RST_T2RSEL2_POSITION                             0x2
#define _T2RST_T2RSEL2_SIZE                                 0x1
#define _T2RST_T2RSEL2_LENGTH                               0x1
#define _T2RST_T2RSEL2_MASK                                 0x4
#define _T2RST_T2RSEL3_POSN                                 0x3
#define _T2RST_T2RSEL3_POSITION                             0x3
#define _T2RST_T2RSEL3_SIZE                                 0x1
#define _T2RST_T2RSEL3_LENGTH                               0x1
#define _T2RST_T2RSEL3_MASK                                 0x8
#define _T2RST_T2RSEL4_POSN                                 0x4
#define _T2RST_T2RSEL4_POSITION                             0x4
#define _T2RST_T2RSEL4_SIZE                                 0x1
#define _T2RST_T2RSEL4_LENGTH                               0x1
#define _T2RST_T2RSEL4_MASK                                 0x10

// Register: T8TMR
#define T8TMR T8TMR
extern volatile unsigned char           T8TMR               __at(0x49A);
#ifndef _LIB_BUILD
asm("T8TMR equ 049Ah");
#endif
// aliases
extern volatile unsigned char           TMR8                __at(0x49A);
#ifndef _LIB_BUILD
asm("TMR8 equ 049Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned TMR8                   :8;
    };
} T8TMRbits_t;
extern volatile T8TMRbits_t T8TMRbits __at(0x49A);
// bitfield macros
#define _T8TMR_TMR_POSN                                     0x0
#define _T8TMR_TMR_POSITION                                 0x0
#define _T8TMR_TMR_SIZE                                     0x8
#define _T8TMR_TMR_LENGTH                                   0x8
#define _T8TMR_TMR_MASK                                     0xFF
#define _T8TMR_TMR8_POSN                                    0x0
#define _T8TMR_TMR8_POSITION                                0x0
#define _T8TMR_TMR8_SIZE                                    0x8
#define _T8TMR_TMR8_LENGTH                                  0x8
#define _T8TMR_TMR8_MASK                                    0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned TMR8                   :8;
    };
} TMR8bits_t;
extern volatile TMR8bits_t TMR8bits __at(0x49A);
// bitfield macros
#define _TMR8_TMR_POSN                                      0x0
#define _TMR8_TMR_POSITION                                  0x0
#define _TMR8_TMR_SIZE                                      0x8
#define _TMR8_TMR_LENGTH                                    0x8
#define _TMR8_TMR_MASK                                      0xFF
#define _TMR8_TMR8_POSN                                     0x0
#define _TMR8_TMR8_POSITION                                 0x0
#define _TMR8_TMR8_SIZE                                     0x8
#define _TMR8_TMR8_LENGTH                                   0x8
#define _TMR8_TMR8_MASK                                     0xFF

// Register: T8PR
#define T8PR T8PR
extern volatile unsigned char           T8PR                __at(0x49B);
#ifndef _LIB_BUILD
asm("T8PR equ 049Bh");
#endif
// aliases
extern volatile unsigned char           PR8                 __at(0x49B);
#ifndef _LIB_BUILD
asm("PR8 equ 049Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned T8PR                   :8;
    };
} T8PRbits_t;
extern volatile T8PRbits_t T8PRbits __at(0x49B);
// bitfield macros
#define _T8PR_PR_POSN                                       0x0
#define _T8PR_PR_POSITION                                   0x0
#define _T8PR_PR_SIZE                                       0x8
#define _T8PR_PR_LENGTH                                     0x8
#define _T8PR_PR_MASK                                       0xFF
#define _T8PR_T8PR_POSN                                     0x0
#define _T8PR_T8PR_POSITION                                 0x0
#define _T8PR_T8PR_SIZE                                     0x8
#define _T8PR_T8PR_LENGTH                                   0x8
#define _T8PR_T8PR_MASK                                     0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned T8PR                   :8;
    };
} PR8bits_t;
extern volatile PR8bits_t PR8bits __at(0x49B);
// bitfield macros
#define _PR8_PR_POSN                                        0x0
#define _PR8_PR_POSITION                                    0x0
#define _PR8_PR_SIZE                                        0x8
#define _PR8_PR_LENGTH                                      0x8
#define _PR8_PR_MASK                                        0xFF
#define _PR8_T8PR_POSN                                      0x0
#define _PR8_T8PR_POSITION                                  0x0
#define _PR8_T8PR_SIZE                                      0x8
#define _PR8_T8PR_LENGTH                                    0x8
#define _PR8_T8PR_MASK                                      0xFF

// Register: T8CON
#define T8CON T8CON
extern volatile unsigned char           T8CON               __at(0x49C);
#ifndef _LIB_BUILD
asm("T8CON equ 049Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OUTPS                  :4;
        unsigned CKPS                   :3;
        unsigned ON                     :1;
    };
    struct {
        unsigned OUTPS0                 :1;
        unsigned OUTPS1                 :1;
        unsigned OUTPS2                 :1;
        unsigned OUTPS3                 :1;
        unsigned CKPS0                  :1;
        unsigned CKPS1                  :1;
        unsigned CKPS2                  :1;
    };
    struct {
        unsigned T8OUTPS                :4;
        unsigned T8CKPS                 :3;
        unsigned T8ON                   :1;
    };
    struct {
        unsigned T8OUTPS0               :1;
        unsigned T8OUTPS1               :1;
        unsigned T8OUTPS2               :1;
        unsigned T8OUTPS3               :1;
        unsigned T8CKPS0                :1;
        unsigned T8CKPS1                :1;
        unsigned T8CKPS2                :1;
        unsigned TMR8ON                 :1;
    };
} T8CONbits_t;
extern volatile T8CONbits_t T8CONbits __at(0x49C);
// bitfield macros
#define _T8CON_OUTPS_POSN                                   0x0
#define _T8CON_OUTPS_POSITION                               0x0
#define _T8CON_OUTPS_SIZE                                   0x4
#define _T8CON_OUTPS_LENGTH                                 0x4
#define _T8CON_OUTPS_MASK                                   0xF
#define _T8CON_CKPS_POSN                                    0x4
#define _T8CON_CKPS_POSITION                                0x4
#define _T8CON_CKPS_SIZE                                    0x3
#define _T8CON_CKPS_LENGTH                                  0x3
#define _T8CON_CKPS_MASK                                    0x70
#define _T8CON_ON_POSN                                      0x7
#define _T8CON_ON_POSITION                                  0x7
#define _T8CON_ON_SIZE                                      0x1
#define _T8CON_ON_LENGTH                                    0x1
#define _T8CON_ON_MASK                                      0x80
#define _T8CON_OUTPS0_POSN                                  0x0
#define _T8CON_OUTPS0_POSITION                              0x0
#define _T8CON_OUTPS0_SIZE                                  0x1
#define _T8CON_OUTPS0_LENGTH                                0x1
#define _T8CON_OUTPS0_MASK                                  0x1
#define _T8CON_OUTPS1_POSN                                  0x1
#define _T8CON_OUTPS1_POSITION                              0x1
#define _T8CON_OUTPS1_SIZE                                  0x1
#define _T8CON_OUTPS1_LENGTH                                0x1
#define _T8CON_OUTPS1_MASK                                  0x2
#define _T8CON_OUTPS2_POSN                                  0x2
#define _T8CON_OUTPS2_POSITION                              0x2
#define _T8CON_OUTPS2_SIZE                                  0x1
#define _T8CON_OUTPS2_LENGTH                                0x1
#define _T8CON_OUTPS2_MASK                                  0x4
#define _T8CON_OUTPS3_POSN                                  0x3
#define _T8CON_OUTPS3_POSITION                              0x3
#define _T8CON_OUTPS3_SIZE                                  0x1
#define _T8CON_OUTPS3_LENGTH                                0x1
#define _T8CON_OUTPS3_MASK                                  0x8
#define _T8CON_CKPS0_POSN                                   0x4
#define _T8CON_CKPS0_POSITION                               0x4
#define _T8CON_CKPS0_SIZE                                   0x1
#define _T8CON_CKPS0_LENGTH                                 0x1
#define _T8CON_CKPS0_MASK                                   0x10
#define _T8CON_CKPS1_POSN                                   0x5
#define _T8CON_CKPS1_POSITION                               0x5
#define _T8CON_CKPS1_SIZE                                   0x1
#define _T8CON_CKPS1_LENGTH                                 0x1
#define _T8CON_CKPS1_MASK                                   0x20
#define _T8CON_CKPS2_POSN                                   0x6
#define _T8CON_CKPS2_POSITION                               0x6
#define _T8CON_CKPS2_SIZE                                   0x1
#define _T8CON_CKPS2_LENGTH                                 0x1
#define _T8CON_CKPS2_MASK                                   0x40
#define _T8CON_T8OUTPS_POSN                                 0x0
#define _T8CON_T8OUTPS_POSITION                             0x0
#define _T8CON_T8OUTPS_SIZE                                 0x4
#define _T8CON_T8OUTPS_LENGTH                               0x4
#define _T8CON_T8OUTPS_MASK                                 0xF
#define _T8CON_T8CKPS_POSN                                  0x4
#define _T8CON_T8CKPS_POSITION                              0x4
#define _T8CON_T8CKPS_SIZE                                  0x3
#define _T8CON_T8CKPS_LENGTH                                0x3
#define _T8CON_T8CKPS_MASK                                  0x70
#define _T8CON_T8ON_POSN                                    0x7
#define _T8CON_T8ON_POSITION                                0x7
#define _T8CON_T8ON_SIZE                                    0x1
#define _T8CON_T8ON_LENGTH                                  0x1
#define _T8CON_T8ON_MASK                                    0x80
#define _T8CON_T8OUTPS0_POSN                                0x0
#define _T8CON_T8OUTPS0_POSITION                            0x0
#define _T8CON_T8OUTPS0_SIZE                                0x1
#define _T8CON_T8OUTPS0_LENGTH                              0x1
#define _T8CON_T8OUTPS0_MASK                                0x1
#define _T8CON_T8OUTPS1_POSN                                0x1
#define _T8CON_T8OUTPS1_POSITION                            0x1
#define _T8CON_T8OUTPS1_SIZE                                0x1
#define _T8CON_T8OUTPS1_LENGTH                              0x1
#define _T8CON_T8OUTPS1_MASK                                0x2
#define _T8CON_T8OUTPS2_POSN                                0x2
#define _T8CON_T8OUTPS2_POSITION                            0x2
#define _T8CON_T8OUTPS2_SIZE                                0x1
#define _T8CON_T8OUTPS2_LENGTH                              0x1
#define _T8CON_T8OUTPS2_MASK                                0x4
#define _T8CON_T8OUTPS3_POSN                                0x3
#define _T8CON_T8OUTPS3_POSITION                            0x3
#define _T8CON_T8OUTPS3_SIZE                                0x1
#define _T8CON_T8OUTPS3_LENGTH                              0x1
#define _T8CON_T8OUTPS3_MASK                                0x8
#define _T8CON_T8CKPS0_POSN                                 0x4
#define _T8CON_T8CKPS0_POSITION                             0x4
#define _T8CON_T8CKPS0_SIZE                                 0x1
#define _T8CON_T8CKPS0_LENGTH                               0x1
#define _T8CON_T8CKPS0_MASK                                 0x10
#define _T8CON_T8CKPS1_POSN                                 0x5
#define _T8CON_T8CKPS1_POSITION                             0x5
#define _T8CON_T8CKPS1_SIZE                                 0x1
#define _T8CON_T8CKPS1_LENGTH                               0x1
#define _T8CON_T8CKPS1_MASK                                 0x20
#define _T8CON_T8CKPS2_POSN                                 0x6
#define _T8CON_T8CKPS2_POSITION                             0x6
#define _T8CON_T8CKPS2_SIZE                                 0x1
#define _T8CON_T8CKPS2_LENGTH                               0x1
#define _T8CON_T8CKPS2_MASK                                 0x40
#define _T8CON_TMR8ON_POSN                                  0x7
#define _T8CON_TMR8ON_POSITION                              0x7
#define _T8CON_TMR8ON_SIZE                                  0x1
#define _T8CON_TMR8ON_LENGTH                                0x1
#define _T8CON_TMR8ON_MASK                                  0x80

// Register: T8HLT
#define T8HLT T8HLT
extern volatile unsigned char           T8HLT               __at(0x49D);
#ifndef _LIB_BUILD
asm("T8HLT equ 049Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MODE                   :5;
        unsigned CKSYNC                 :1;
        unsigned CKPOL                  :1;
        unsigned PSYNC                  :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
        unsigned MODE3                  :1;
        unsigned MODE4                  :1;
    };
    struct {
        unsigned T8MODE                 :5;
        unsigned T8CKSYNC               :1;
        unsigned T8CKPOL                :1;
        unsigned T8PSYNC                :1;
    };
    struct {
        unsigned T8MODE0                :1;
        unsigned T8MODE1                :1;
        unsigned T8MODE2                :1;
        unsigned T8MODE3                :1;
        unsigned T8MODE4                :1;
    };
} T8HLTbits_t;
extern volatile T8HLTbits_t T8HLTbits __at(0x49D);
// bitfield macros
#define _T8HLT_MODE_POSN                                    0x0
#define _T8HLT_MODE_POSITION                                0x0
#define _T8HLT_MODE_SIZE                                    0x5
#define _T8HLT_MODE_LENGTH                                  0x5
#define _T8HLT_MODE_MASK                                    0x1F
#define _T8HLT_CKSYNC_POSN                                  0x5
#define _T8HLT_CKSYNC_POSITION                              0x5
#define _T8HLT_CKSYNC_SIZE                                  0x1
#define _T8HLT_CKSYNC_LENGTH                                0x1
#define _T8HLT_CKSYNC_MASK                                  0x20
#define _T8HLT_CKPOL_POSN                                   0x6
#define _T8HLT_CKPOL_POSITION                               0x6
#define _T8HLT_CKPOL_SIZE                                   0x1
#define _T8HLT_CKPOL_LENGTH                                 0x1
#define _T8HLT_CKPOL_MASK                                   0x40
#define _T8HLT_PSYNC_POSN                                   0x7
#define _T8HLT_PSYNC_POSITION                               0x7
#define _T8HLT_PSYNC_SIZE                                   0x1
#define _T8HLT_PSYNC_LENGTH                                 0x1
#define _T8HLT_PSYNC_MASK                                   0x80
#define _T8HLT_MODE0_POSN                                   0x0
#define _T8HLT_MODE0_POSITION                               0x0
#define _T8HLT_MODE0_SIZE                                   0x1
#define _T8HLT_MODE0_LENGTH                                 0x1
#define _T8HLT_MODE0_MASK                                   0x1
#define _T8HLT_MODE1_POSN                                   0x1
#define _T8HLT_MODE1_POSITION                               0x1
#define _T8HLT_MODE1_SIZE                                   0x1
#define _T8HLT_MODE1_LENGTH                                 0x1
#define _T8HLT_MODE1_MASK                                   0x2
#define _T8HLT_MODE2_POSN                                   0x2
#define _T8HLT_MODE2_POSITION                               0x2
#define _T8HLT_MODE2_SIZE                                   0x1
#define _T8HLT_MODE2_LENGTH                                 0x1
#define _T8HLT_MODE2_MASK                                   0x4
#define _T8HLT_MODE3_POSN                                   0x3
#define _T8HLT_MODE3_POSITION                               0x3
#define _T8HLT_MODE3_SIZE                                   0x1
#define _T8HLT_MODE3_LENGTH                                 0x1
#define _T8HLT_MODE3_MASK                                   0x8
#define _T8HLT_MODE4_POSN                                   0x4
#define _T8HLT_MODE4_POSITION                               0x4
#define _T8HLT_MODE4_SIZE                                   0x1
#define _T8HLT_MODE4_LENGTH                                 0x1
#define _T8HLT_MODE4_MASK                                   0x10
#define _T8HLT_T8MODE_POSN                                  0x0
#define _T8HLT_T8MODE_POSITION                              0x0
#define _T8HLT_T8MODE_SIZE                                  0x5
#define _T8HLT_T8MODE_LENGTH                                0x5
#define _T8HLT_T8MODE_MASK                                  0x1F
#define _T8HLT_T8CKSYNC_POSN                                0x5
#define _T8HLT_T8CKSYNC_POSITION                            0x5
#define _T8HLT_T8CKSYNC_SIZE                                0x1
#define _T8HLT_T8CKSYNC_LENGTH                              0x1
#define _T8HLT_T8CKSYNC_MASK                                0x20
#define _T8HLT_T8CKPOL_POSN                                 0x6
#define _T8HLT_T8CKPOL_POSITION                             0x6
#define _T8HLT_T8CKPOL_SIZE                                 0x1
#define _T8HLT_T8CKPOL_LENGTH                               0x1
#define _T8HLT_T8CKPOL_MASK                                 0x40
#define _T8HLT_T8PSYNC_POSN                                 0x7
#define _T8HLT_T8PSYNC_POSITION                             0x7
#define _T8HLT_T8PSYNC_SIZE                                 0x1
#define _T8HLT_T8PSYNC_LENGTH                               0x1
#define _T8HLT_T8PSYNC_MASK                                 0x80
#define _T8HLT_T8MODE0_POSN                                 0x0
#define _T8HLT_T8MODE0_POSITION                             0x0
#define _T8HLT_T8MODE0_SIZE                                 0x1
#define _T8HLT_T8MODE0_LENGTH                               0x1
#define _T8HLT_T8MODE0_MASK                                 0x1
#define _T8HLT_T8MODE1_POSN                                 0x1
#define _T8HLT_T8MODE1_POSITION                             0x1
#define _T8HLT_T8MODE1_SIZE                                 0x1
#define _T8HLT_T8MODE1_LENGTH                               0x1
#define _T8HLT_T8MODE1_MASK                                 0x2
#define _T8HLT_T8MODE2_POSN                                 0x2
#define _T8HLT_T8MODE2_POSITION                             0x2
#define _T8HLT_T8MODE2_SIZE                                 0x1
#define _T8HLT_T8MODE2_LENGTH                               0x1
#define _T8HLT_T8MODE2_MASK                                 0x4
#define _T8HLT_T8MODE3_POSN                                 0x3
#define _T8HLT_T8MODE3_POSITION                             0x3
#define _T8HLT_T8MODE3_SIZE                                 0x1
#define _T8HLT_T8MODE3_LENGTH                               0x1
#define _T8HLT_T8MODE3_MASK                                 0x8
#define _T8HLT_T8MODE4_POSN                                 0x4
#define _T8HLT_T8MODE4_POSITION                             0x4
#define _T8HLT_T8MODE4_SIZE                                 0x1
#define _T8HLT_T8MODE4_LENGTH                               0x1
#define _T8HLT_T8MODE4_MASK                                 0x10

// Register: T8CLKCON
#define T8CLKCON T8CLKCON
extern volatile unsigned char           T8CLKCON            __at(0x49E);
#ifndef _LIB_BUILD
asm("T8CLKCON equ 049Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CS                     :4;
    };
    struct {
        unsigned CS0                    :1;
        unsigned CS1                    :1;
        unsigned CS2                    :1;
        unsigned CS3                    :1;
    };
    struct {
        unsigned T8CS                   :4;
    };
    struct {
        unsigned T8CS0                  :1;
        unsigned T8CS1                  :1;
        unsigned T8CS2                  :1;
        unsigned T8CS3                  :1;
    };
} T8CLKCONbits_t;
extern volatile T8CLKCONbits_t T8CLKCONbits __at(0x49E);
// bitfield macros
#define _T8CLKCON_CS_POSN                                   0x0
#define _T8CLKCON_CS_POSITION                               0x0
#define _T8CLKCON_CS_SIZE                                   0x4
#define _T8CLKCON_CS_LENGTH                                 0x4
#define _T8CLKCON_CS_MASK                                   0xF
#define _T8CLKCON_CS0_POSN                                  0x0
#define _T8CLKCON_CS0_POSITION                              0x0
#define _T8CLKCON_CS0_SIZE                                  0x1
#define _T8CLKCON_CS0_LENGTH                                0x1
#define _T8CLKCON_CS0_MASK                                  0x1
#define _T8CLKCON_CS1_POSN                                  0x1
#define _T8CLKCON_CS1_POSITION                              0x1
#define _T8CLKCON_CS1_SIZE                                  0x1
#define _T8CLKCON_CS1_LENGTH                                0x1
#define _T8CLKCON_CS1_MASK                                  0x2
#define _T8CLKCON_CS2_POSN                                  0x2
#define _T8CLKCON_CS2_POSITION                              0x2
#define _T8CLKCON_CS2_SIZE                                  0x1
#define _T8CLKCON_CS2_LENGTH                                0x1
#define _T8CLKCON_CS2_MASK                                  0x4
#define _T8CLKCON_CS3_POSN                                  0x3
#define _T8CLKCON_CS3_POSITION                              0x3
#define _T8CLKCON_CS3_SIZE                                  0x1
#define _T8CLKCON_CS3_LENGTH                                0x1
#define _T8CLKCON_CS3_MASK                                  0x8
#define _T8CLKCON_T8CS_POSN                                 0x0
#define _T8CLKCON_T8CS_POSITION                             0x0
#define _T8CLKCON_T8CS_SIZE                                 0x4
#define _T8CLKCON_T8CS_LENGTH                               0x4
#define _T8CLKCON_T8CS_MASK                                 0xF
#define _T8CLKCON_T8CS0_POSN                                0x0
#define _T8CLKCON_T8CS0_POSITION                            0x0
#define _T8CLKCON_T8CS0_SIZE                                0x1
#define _T8CLKCON_T8CS0_LENGTH                              0x1
#define _T8CLKCON_T8CS0_MASK                                0x1
#define _T8CLKCON_T8CS1_POSN                                0x1
#define _T8CLKCON_T8CS1_POSITION                            0x1
#define _T8CLKCON_T8CS1_SIZE                                0x1
#define _T8CLKCON_T8CS1_LENGTH                              0x1
#define _T8CLKCON_T8CS1_MASK                                0x2
#define _T8CLKCON_T8CS2_POSN                                0x2
#define _T8CLKCON_T8CS2_POSITION                            0x2
#define _T8CLKCON_T8CS2_SIZE                                0x1
#define _T8CLKCON_T8CS2_LENGTH                              0x1
#define _T8CLKCON_T8CS2_MASK                                0x4
#define _T8CLKCON_T8CS3_POSN                                0x3
#define _T8CLKCON_T8CS3_POSITION                            0x3
#define _T8CLKCON_T8CS3_SIZE                                0x1
#define _T8CLKCON_T8CS3_LENGTH                              0x1
#define _T8CLKCON_T8CS3_MASK                                0x8

// Register: T8RST
#define T8RST T8RST
extern volatile unsigned char           T8RST               __at(0x49F);
#ifndef _LIB_BUILD
asm("T8RST equ 049Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RSEL                   :5;
    };
    struct {
        unsigned RSEL0                  :1;
        unsigned RSEL1                  :1;
        unsigned RSEL2                  :1;
        unsigned RSEL3                  :1;
        unsigned RSEL4                  :1;
    };
    struct {
        unsigned T8RSEL                 :5;
    };
    struct {
        unsigned T8RSEL0                :1;
        unsigned T8RSEL1                :1;
        unsigned T8RSEL2                :1;
        unsigned T8RSEL3                :1;
        unsigned T8RSEL4                :1;
    };
} T8RSTbits_t;
extern volatile T8RSTbits_t T8RSTbits __at(0x49F);
// bitfield macros
#define _T8RST_RSEL_POSN                                    0x0
#define _T8RST_RSEL_POSITION                                0x0
#define _T8RST_RSEL_SIZE                                    0x5
#define _T8RST_RSEL_LENGTH                                  0x5
#define _T8RST_RSEL_MASK                                    0x1F
#define _T8RST_RSEL0_POSN                                   0x0
#define _T8RST_RSEL0_POSITION                               0x0
#define _T8RST_RSEL0_SIZE                                   0x1
#define _T8RST_RSEL0_LENGTH                                 0x1
#define _T8RST_RSEL0_MASK                                   0x1
#define _T8RST_RSEL1_POSN                                   0x1
#define _T8RST_RSEL1_POSITION                               0x1
#define _T8RST_RSEL1_SIZE                                   0x1
#define _T8RST_RSEL1_LENGTH                                 0x1
#define _T8RST_RSEL1_MASK                                   0x2
#define _T8RST_RSEL2_POSN                                   0x2
#define _T8RST_RSEL2_POSITION                               0x2
#define _T8RST_RSEL2_SIZE                                   0x1
#define _T8RST_RSEL2_LENGTH                                 0x1
#define _T8RST_RSEL2_MASK                                   0x4
#define _T8RST_RSEL3_POSN                                   0x3
#define _T8RST_RSEL3_POSITION                               0x3
#define _T8RST_RSEL3_SIZE                                   0x1
#define _T8RST_RSEL3_LENGTH                                 0x1
#define _T8RST_RSEL3_MASK                                   0x8
#define _T8RST_RSEL4_POSN                                   0x4
#define _T8RST_RSEL4_POSITION                               0x4
#define _T8RST_RSEL4_SIZE                                   0x1
#define _T8RST_RSEL4_LENGTH                                 0x1
#define _T8RST_RSEL4_MASK                                   0x10
#define _T8RST_T8RSEL_POSN                                  0x0
#define _T8RST_T8RSEL_POSITION                              0x0
#define _T8RST_T8RSEL_SIZE                                  0x5
#define _T8RST_T8RSEL_LENGTH                                0x5
#define _T8RST_T8RSEL_MASK                                  0x1F
#define _T8RST_T8RSEL0_POSN                                 0x0
#define _T8RST_T8RSEL0_POSITION                             0x0
#define _T8RST_T8RSEL0_SIZE                                 0x1
#define _T8RST_T8RSEL0_LENGTH                               0x1
#define _T8RST_T8RSEL0_MASK                                 0x1
#define _T8RST_T8RSEL1_POSN                                 0x1
#define _T8RST_T8RSEL1_POSITION                             0x1
#define _T8RST_T8RSEL1_SIZE                                 0x1
#define _T8RST_T8RSEL1_LENGTH                               0x1
#define _T8RST_T8RSEL1_MASK                                 0x2
#define _T8RST_T8RSEL2_POSN                                 0x2
#define _T8RST_T8RSEL2_POSITION                             0x2
#define _T8RST_T8RSEL2_SIZE                                 0x1
#define _T8RST_T8RSEL2_LENGTH                               0x1
#define _T8RST_T8RSEL2_MASK                                 0x4
#define _T8RST_T8RSEL3_POSN                                 0x3
#define _T8RST_T8RSEL3_POSITION                             0x3
#define _T8RST_T8RSEL3_SIZE                                 0x1
#define _T8RST_T8RSEL3_LENGTH                               0x1
#define _T8RST_T8RSEL3_MASK                                 0x8
#define _T8RST_T8RSEL4_POSN                                 0x4
#define _T8RST_T8RSEL4_POSITION                             0x4
#define _T8RST_T8RSEL4_SIZE                                 0x1
#define _T8RST_T8RSEL4_LENGTH                               0x1
#define _T8RST_T8RSEL4_MASK                                 0x10

// Register: OPA1NCHS
#define OPA1NCHS OPA1NCHS
extern volatile unsigned char           OPA1NCHS            __at(0x50F);
#ifndef _LIB_BUILD
asm("OPA1NCHS equ 050Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :8;
    };
    struct {
        unsigned OPA1NCH                :8;
    };
} OPA1NCHSbits_t;
extern volatile OPA1NCHSbits_t OPA1NCHSbits __at(0x50F);
// bitfield macros
#define _OPA1NCHS_NCH_POSN                                  0x0
#define _OPA1NCHS_NCH_POSITION                              0x0
#define _OPA1NCHS_NCH_SIZE                                  0x8
#define _OPA1NCHS_NCH_LENGTH                                0x8
#define _OPA1NCHS_NCH_MASK                                  0xFF
#define _OPA1NCHS_OPA1NCH_POSN                              0x0
#define _OPA1NCHS_OPA1NCH_POSITION                          0x0
#define _OPA1NCHS_OPA1NCH_SIZE                              0x8
#define _OPA1NCHS_OPA1NCH_LENGTH                            0x8
#define _OPA1NCHS_OPA1NCH_MASK                              0xFF

// Register: OPA1PCHS
#define OPA1PCHS OPA1PCHS
extern volatile unsigned char           OPA1PCHS            __at(0x510);
#ifndef _LIB_BUILD
asm("OPA1PCHS equ 0510h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :8;
    };
    struct {
        unsigned OPA1PCH                :8;
    };
} OPA1PCHSbits_t;
extern volatile OPA1PCHSbits_t OPA1PCHSbits __at(0x510);
// bitfield macros
#define _OPA1PCHS_PCH_POSN                                  0x0
#define _OPA1PCHS_PCH_POSITION                              0x0
#define _OPA1PCHS_PCH_SIZE                                  0x8
#define _OPA1PCHS_PCH_LENGTH                                0x8
#define _OPA1PCHS_PCH_MASK                                  0xFF
#define _OPA1PCHS_OPA1PCH_POSN                              0x0
#define _OPA1PCHS_OPA1PCH_POSITION                          0x0
#define _OPA1PCHS_OPA1PCH_SIZE                              0x8
#define _OPA1PCHS_OPA1PCH_LENGTH                            0x8
#define _OPA1PCHS_OPA1PCH_MASK                              0xFF

// Register: OPA1CON
#define OPA1CON OPA1CON
extern volatile unsigned char           OPA1CON             __at(0x511);
#ifndef _LIB_BUILD
asm("OPA1CON equ 0511h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ORM                    :2;
        unsigned ORPOL                  :1;
        unsigned                        :1;
        unsigned UG                     :1;
        unsigned                        :2;
        unsigned EN                     :1;
    };
    struct {
        unsigned ORM0                   :1;
        unsigned ORM1                   :1;
    };
    struct {
        unsigned OPA1ORM                :2;
        unsigned OPA1ORPOL              :1;
        unsigned                        :1;
        unsigned OPA1UG                 :1;
        unsigned                        :2;
        unsigned OPA1EN                 :1;
    };
    struct {
        unsigned OPA1ORM0               :1;
        unsigned OPA1ORM1               :1;
    };
} OPA1CONbits_t;
extern volatile OPA1CONbits_t OPA1CONbits __at(0x511);
// bitfield macros
#define _OPA1CON_ORM_POSN                                   0x0
#define _OPA1CON_ORM_POSITION                               0x0
#define _OPA1CON_ORM_SIZE                                   0x2
#define _OPA1CON_ORM_LENGTH                                 0x2
#define _OPA1CON_ORM_MASK                                   0x3
#define _OPA1CON_ORPOL_POSN                                 0x2
#define _OPA1CON_ORPOL_POSITION                             0x2
#define _OPA1CON_ORPOL_SIZE                                 0x1
#define _OPA1CON_ORPOL_LENGTH                               0x1
#define _OPA1CON_ORPOL_MASK                                 0x4
#define _OPA1CON_UG_POSN                                    0x4
#define _OPA1CON_UG_POSITION                                0x4
#define _OPA1CON_UG_SIZE                                    0x1
#define _OPA1CON_UG_LENGTH                                  0x1
#define _OPA1CON_UG_MASK                                    0x10
#define _OPA1CON_EN_POSN                                    0x7
#define _OPA1CON_EN_POSITION                                0x7
#define _OPA1CON_EN_SIZE                                    0x1
#define _OPA1CON_EN_LENGTH                                  0x1
#define _OPA1CON_EN_MASK                                    0x80
#define _OPA1CON_ORM0_POSN                                  0x0
#define _OPA1CON_ORM0_POSITION                              0x0
#define _OPA1CON_ORM0_SIZE                                  0x1
#define _OPA1CON_ORM0_LENGTH                                0x1
#define _OPA1CON_ORM0_MASK                                  0x1
#define _OPA1CON_ORM1_POSN                                  0x1
#define _OPA1CON_ORM1_POSITION                              0x1
#define _OPA1CON_ORM1_SIZE                                  0x1
#define _OPA1CON_ORM1_LENGTH                                0x1
#define _OPA1CON_ORM1_MASK                                  0x2
#define _OPA1CON_OPA1ORM_POSN                               0x0
#define _OPA1CON_OPA1ORM_POSITION                           0x0
#define _OPA1CON_OPA1ORM_SIZE                               0x2
#define _OPA1CON_OPA1ORM_LENGTH                             0x2
#define _OPA1CON_OPA1ORM_MASK                               0x3
#define _OPA1CON_OPA1ORPOL_POSN                             0x2
#define _OPA1CON_OPA1ORPOL_POSITION                         0x2
#define _OPA1CON_OPA1ORPOL_SIZE                             0x1
#define _OPA1CON_OPA1ORPOL_LENGTH                           0x1
#define _OPA1CON_OPA1ORPOL_MASK                             0x4
#define _OPA1CON_OPA1UG_POSN                                0x4
#define _OPA1CON_OPA1UG_POSITION                            0x4
#define _OPA1CON_OPA1UG_SIZE                                0x1
#define _OPA1CON_OPA1UG_LENGTH                              0x1
#define _OPA1CON_OPA1UG_MASK                                0x10
#define _OPA1CON_OPA1EN_POSN                                0x7
#define _OPA1CON_OPA1EN_POSITION                            0x7
#define _OPA1CON_OPA1EN_SIZE                                0x1
#define _OPA1CON_OPA1EN_LENGTH                              0x1
#define _OPA1CON_OPA1EN_MASK                                0x80
#define _OPA1CON_OPA1ORM0_POSN                              0x0
#define _OPA1CON_OPA1ORM0_POSITION                          0x0
#define _OPA1CON_OPA1ORM0_SIZE                              0x1
#define _OPA1CON_OPA1ORM0_LENGTH                            0x1
#define _OPA1CON_OPA1ORM0_MASK                              0x1
#define _OPA1CON_OPA1ORM1_POSN                              0x1
#define _OPA1CON_OPA1ORM1_POSITION                          0x1
#define _OPA1CON_OPA1ORM1_SIZE                              0x1
#define _OPA1CON_OPA1ORM1_LENGTH                            0x1
#define _OPA1CON_OPA1ORM1_MASK                              0x2

// Register: OPA1ORS
#define OPA1ORS OPA1ORS
extern volatile unsigned char           OPA1ORS             __at(0x512);
#ifndef _LIB_BUILD
asm("OPA1ORS equ 0512h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ORS                    :8;
    };
} OPA1ORSbits_t;
extern volatile OPA1ORSbits_t OPA1ORSbits __at(0x512);
// bitfield macros
#define _OPA1ORS_ORS_POSN                                   0x0
#define _OPA1ORS_ORS_POSITION                               0x0
#define _OPA1ORS_ORS_SIZE                                   0x8
#define _OPA1ORS_ORS_LENGTH                                 0x8
#define _OPA1ORS_ORS_MASK                                   0xFF

// Register: OPA2NCHS
#define OPA2NCHS OPA2NCHS
extern volatile unsigned char           OPA2NCHS            __at(0x513);
#ifndef _LIB_BUILD
asm("OPA2NCHS equ 0513h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :8;
    };
    struct {
        unsigned OPA2NCH                :8;
    };
} OPA2NCHSbits_t;
extern volatile OPA2NCHSbits_t OPA2NCHSbits __at(0x513);
// bitfield macros
#define _OPA2NCHS_NCH_POSN                                  0x0
#define _OPA2NCHS_NCH_POSITION                              0x0
#define _OPA2NCHS_NCH_SIZE                                  0x8
#define _OPA2NCHS_NCH_LENGTH                                0x8
#define _OPA2NCHS_NCH_MASK                                  0xFF
#define _OPA2NCHS_OPA2NCH_POSN                              0x0
#define _OPA2NCHS_OPA2NCH_POSITION                          0x0
#define _OPA2NCHS_OPA2NCH_SIZE                              0x8
#define _OPA2NCHS_OPA2NCH_LENGTH                            0x8
#define _OPA2NCHS_OPA2NCH_MASK                              0xFF

// Register: OPA2PCHS
#define OPA2PCHS OPA2PCHS
extern volatile unsigned char           OPA2PCHS            __at(0x514);
#ifndef _LIB_BUILD
asm("OPA2PCHS equ 0514h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :8;
    };
    struct {
        unsigned OPA2PCH                :8;
    };
} OPA2PCHSbits_t;
extern volatile OPA2PCHSbits_t OPA2PCHSbits __at(0x514);
// bitfield macros
#define _OPA2PCHS_PCH_POSN                                  0x0
#define _OPA2PCHS_PCH_POSITION                              0x0
#define _OPA2PCHS_PCH_SIZE                                  0x8
#define _OPA2PCHS_PCH_LENGTH                                0x8
#define _OPA2PCHS_PCH_MASK                                  0xFF
#define _OPA2PCHS_OPA2PCH_POSN                              0x0
#define _OPA2PCHS_OPA2PCH_POSITION                          0x0
#define _OPA2PCHS_OPA2PCH_SIZE                              0x8
#define _OPA2PCHS_OPA2PCH_LENGTH                            0x8
#define _OPA2PCHS_OPA2PCH_MASK                              0xFF

// Register: OPA2CON
#define OPA2CON OPA2CON
extern volatile unsigned char           OPA2CON             __at(0x515);
#ifndef _LIB_BUILD
asm("OPA2CON equ 0515h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ORM                    :2;
        unsigned ORPOL                  :1;
        unsigned                        :1;
        unsigned UG                     :1;
        unsigned                        :2;
        unsigned EN                     :1;
    };
    struct {
        unsigned ORM0                   :1;
        unsigned ORM1                   :1;
    };
    struct {
        unsigned OPA2ORM                :2;
        unsigned OPA2ORPOL              :1;
        unsigned                        :1;
        unsigned OPA2UG                 :1;
        unsigned                        :2;
        unsigned OPA2EN                 :1;
    };
    struct {
        unsigned OPA2ORM0               :1;
        unsigned OPA2ORM1               :1;
    };
} OPA2CONbits_t;
extern volatile OPA2CONbits_t OPA2CONbits __at(0x515);
// bitfield macros
#define _OPA2CON_ORM_POSN                                   0x0
#define _OPA2CON_ORM_POSITION                               0x0
#define _OPA2CON_ORM_SIZE                                   0x2
#define _OPA2CON_ORM_LENGTH                                 0x2
#define _OPA2CON_ORM_MASK                                   0x3
#define _OPA2CON_ORPOL_POSN                                 0x2
#define _OPA2CON_ORPOL_POSITION                             0x2
#define _OPA2CON_ORPOL_SIZE                                 0x1
#define _OPA2CON_ORPOL_LENGTH                               0x1
#define _OPA2CON_ORPOL_MASK                                 0x4
#define _OPA2CON_UG_POSN                                    0x4
#define _OPA2CON_UG_POSITION                                0x4
#define _OPA2CON_UG_SIZE                                    0x1
#define _OPA2CON_UG_LENGTH                                  0x1
#define _OPA2CON_UG_MASK                                    0x10
#define _OPA2CON_EN_POSN                                    0x7
#define _OPA2CON_EN_POSITION                                0x7
#define _OPA2CON_EN_SIZE                                    0x1
#define _OPA2CON_EN_LENGTH                                  0x1
#define _OPA2CON_EN_MASK                                    0x80
#define _OPA2CON_ORM0_POSN                                  0x0
#define _OPA2CON_ORM0_POSITION                              0x0
#define _OPA2CON_ORM0_SIZE                                  0x1
#define _OPA2CON_ORM0_LENGTH                                0x1
#define _OPA2CON_ORM0_MASK                                  0x1
#define _OPA2CON_ORM1_POSN                                  0x1
#define _OPA2CON_ORM1_POSITION                              0x1
#define _OPA2CON_ORM1_SIZE                                  0x1
#define _OPA2CON_ORM1_LENGTH                                0x1
#define _OPA2CON_ORM1_MASK                                  0x2
#define _OPA2CON_OPA2ORM_POSN                               0x0
#define _OPA2CON_OPA2ORM_POSITION                           0x0
#define _OPA2CON_OPA2ORM_SIZE                               0x2
#define _OPA2CON_OPA2ORM_LENGTH                             0x2
#define _OPA2CON_OPA2ORM_MASK                               0x3
#define _OPA2CON_OPA2ORPOL_POSN                             0x2
#define _OPA2CON_OPA2ORPOL_POSITION                         0x2
#define _OPA2CON_OPA2ORPOL_SIZE                             0x1
#define _OPA2CON_OPA2ORPOL_LENGTH                           0x1
#define _OPA2CON_OPA2ORPOL_MASK                             0x4
#define _OPA2CON_OPA2UG_POSN                                0x4
#define _OPA2CON_OPA2UG_POSITION                            0x4
#define _OPA2CON_OPA2UG_SIZE                                0x1
#define _OPA2CON_OPA2UG_LENGTH                              0x1
#define _OPA2CON_OPA2UG_MASK                                0x10
#define _OPA2CON_OPA2EN_POSN                                0x7
#define _OPA2CON_OPA2EN_POSITION                            0x7
#define _OPA2CON_OPA2EN_SIZE                                0x1
#define _OPA2CON_OPA2EN_LENGTH                              0x1
#define _OPA2CON_OPA2EN_MASK                                0x80
#define _OPA2CON_OPA2ORM0_POSN                              0x0
#define _OPA2CON_OPA2ORM0_POSITION                          0x0
#define _OPA2CON_OPA2ORM0_SIZE                              0x1
#define _OPA2CON_OPA2ORM0_LENGTH                            0x1
#define _OPA2CON_OPA2ORM0_MASK                              0x1
#define _OPA2CON_OPA2ORM1_POSN                              0x1
#define _OPA2CON_OPA2ORM1_POSITION                          0x1
#define _OPA2CON_OPA2ORM1_SIZE                              0x1
#define _OPA2CON_OPA2ORM1_LENGTH                            0x1
#define _OPA2CON_OPA2ORM1_MASK                              0x2

// Register: OPA2ORS
#define OPA2ORS OPA2ORS
extern volatile unsigned char           OPA2ORS             __at(0x516);
#ifndef _LIB_BUILD
asm("OPA2ORS equ 0516h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ORS                    :8;
    };
} OPA2ORSbits_t;
extern volatile OPA2ORSbits_t OPA2ORSbits __at(0x516);
// bitfield macros
#define _OPA2ORS_ORS_POSN                                   0x0
#define _OPA2ORS_ORS_POSITION                               0x0
#define _OPA2ORS_ORS_SIZE                                   0x8
#define _OPA2ORS_ORS_LENGTH                                 0x8
#define _OPA2ORS_ORS_MASK                                   0xFF

// Register: OPA3NCHS
#define OPA3NCHS OPA3NCHS
extern volatile unsigned char           OPA3NCHS            __at(0x517);
#ifndef _LIB_BUILD
asm("OPA3NCHS equ 0517h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :8;
    };
    struct {
        unsigned OPA3NCH                :8;
    };
} OPA3NCHSbits_t;
extern volatile OPA3NCHSbits_t OPA3NCHSbits __at(0x517);
// bitfield macros
#define _OPA3NCHS_NCH_POSN                                  0x0
#define _OPA3NCHS_NCH_POSITION                              0x0
#define _OPA3NCHS_NCH_SIZE                                  0x8
#define _OPA3NCHS_NCH_LENGTH                                0x8
#define _OPA3NCHS_NCH_MASK                                  0xFF
#define _OPA3NCHS_OPA3NCH_POSN                              0x0
#define _OPA3NCHS_OPA3NCH_POSITION                          0x0
#define _OPA3NCHS_OPA3NCH_SIZE                              0x8
#define _OPA3NCHS_OPA3NCH_LENGTH                            0x8
#define _OPA3NCHS_OPA3NCH_MASK                              0xFF

// Register: OPA3PCHS
#define OPA3PCHS OPA3PCHS
extern volatile unsigned char           OPA3PCHS            __at(0x518);
#ifndef _LIB_BUILD
asm("OPA3PCHS equ 0518h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :8;
    };
    struct {
        unsigned OPA3PCH                :8;
    };
} OPA3PCHSbits_t;
extern volatile OPA3PCHSbits_t OPA3PCHSbits __at(0x518);
// bitfield macros
#define _OPA3PCHS_PCH_POSN                                  0x0
#define _OPA3PCHS_PCH_POSITION                              0x0
#define _OPA3PCHS_PCH_SIZE                                  0x8
#define _OPA3PCHS_PCH_LENGTH                                0x8
#define _OPA3PCHS_PCH_MASK                                  0xFF
#define _OPA3PCHS_OPA3PCH_POSN                              0x0
#define _OPA3PCHS_OPA3PCH_POSITION                          0x0
#define _OPA3PCHS_OPA3PCH_SIZE                              0x8
#define _OPA3PCHS_OPA3PCH_LENGTH                            0x8
#define _OPA3PCHS_OPA3PCH_MASK                              0xFF

// Register: OPA3CON
#define OPA3CON OPA3CON
extern volatile unsigned char           OPA3CON             __at(0x519);
#ifndef _LIB_BUILD
asm("OPA3CON equ 0519h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ORM                    :2;
        unsigned ORPOL                  :1;
        unsigned                        :1;
        unsigned UG                     :1;
        unsigned                        :1;
        unsigned SP                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned ORM0                   :1;
        unsigned ORM1                   :1;
    };
    struct {
        unsigned OPA3ORM                :2;
        unsigned OPA3ORPOL              :1;
        unsigned                        :1;
        unsigned OPA3UG                 :1;
        unsigned                        :1;
        unsigned OPA3SP                 :1;
        unsigned OPA3EN                 :1;
    };
    struct {
        unsigned OPA3ORM0               :1;
        unsigned OPA3ORM1               :1;
    };
} OPA3CONbits_t;
extern volatile OPA3CONbits_t OPA3CONbits __at(0x519);
// bitfield macros
#define _OPA3CON_ORM_POSN                                   0x0
#define _OPA3CON_ORM_POSITION                               0x0
#define _OPA3CON_ORM_SIZE                                   0x2
#define _OPA3CON_ORM_LENGTH                                 0x2
#define _OPA3CON_ORM_MASK                                   0x3
#define _OPA3CON_ORPOL_POSN                                 0x2
#define _OPA3CON_ORPOL_POSITION                             0x2
#define _OPA3CON_ORPOL_SIZE                                 0x1
#define _OPA3CON_ORPOL_LENGTH                               0x1
#define _OPA3CON_ORPOL_MASK                                 0x4
#define _OPA3CON_UG_POSN                                    0x4
#define _OPA3CON_UG_POSITION                                0x4
#define _OPA3CON_UG_SIZE                                    0x1
#define _OPA3CON_UG_LENGTH                                  0x1
#define _OPA3CON_UG_MASK                                    0x10
#define _OPA3CON_SP_POSN                                    0x6
#define _OPA3CON_SP_POSITION                                0x6
#define _OPA3CON_SP_SIZE                                    0x1
#define _OPA3CON_SP_LENGTH                                  0x1
#define _OPA3CON_SP_MASK                                    0x40
#define _OPA3CON_EN_POSN                                    0x7
#define _OPA3CON_EN_POSITION                                0x7
#define _OPA3CON_EN_SIZE                                    0x1
#define _OPA3CON_EN_LENGTH                                  0x1
#define _OPA3CON_EN_MASK                                    0x80
#define _OPA3CON_ORM0_POSN                                  0x0
#define _OPA3CON_ORM0_POSITION                              0x0
#define _OPA3CON_ORM0_SIZE                                  0x1
#define _OPA3CON_ORM0_LENGTH                                0x1
#define _OPA3CON_ORM0_MASK                                  0x1
#define _OPA3CON_ORM1_POSN                                  0x1
#define _OPA3CON_ORM1_POSITION                              0x1
#define _OPA3CON_ORM1_SIZE                                  0x1
#define _OPA3CON_ORM1_LENGTH                                0x1
#define _OPA3CON_ORM1_MASK                                  0x2
#define _OPA3CON_OPA3ORM_POSN                               0x0
#define _OPA3CON_OPA3ORM_POSITION                           0x0
#define _OPA3CON_OPA3ORM_SIZE                               0x2
#define _OPA3CON_OPA3ORM_LENGTH                             0x2
#define _OPA3CON_OPA3ORM_MASK                               0x3
#define _OPA3CON_OPA3ORPOL_POSN                             0x2
#define _OPA3CON_OPA3ORPOL_POSITION                         0x2
#define _OPA3CON_OPA3ORPOL_SIZE                             0x1
#define _OPA3CON_OPA3ORPOL_LENGTH                           0x1
#define _OPA3CON_OPA3ORPOL_MASK                             0x4
#define _OPA3CON_OPA3UG_POSN                                0x4
#define _OPA3CON_OPA3UG_POSITION                            0x4
#define _OPA3CON_OPA3UG_SIZE                                0x1
#define _OPA3CON_OPA3UG_LENGTH                              0x1
#define _OPA3CON_OPA3UG_MASK                                0x10
#define _OPA3CON_OPA3SP_POSN                                0x6
#define _OPA3CON_OPA3SP_POSITION                            0x6
#define _OPA3CON_OPA3SP_SIZE                                0x1
#define _OPA3CON_OPA3SP_LENGTH                              0x1
#define _OPA3CON_OPA3SP_MASK                                0x40
#define _OPA3CON_OPA3EN_POSN                                0x7
#define _OPA3CON_OPA3EN_POSITION                            0x7
#define _OPA3CON_OPA3EN_SIZE                                0x1
#define _OPA3CON_OPA3EN_LENGTH                              0x1
#define _OPA3CON_OPA3EN_MASK                                0x80
#define _OPA3CON_OPA3ORM0_POSN                              0x0
#define _OPA3CON_OPA3ORM0_POSITION                          0x0
#define _OPA3CON_OPA3ORM0_SIZE                              0x1
#define _OPA3CON_OPA3ORM0_LENGTH                            0x1
#define _OPA3CON_OPA3ORM0_MASK                              0x1
#define _OPA3CON_OPA3ORM1_POSN                              0x1
#define _OPA3CON_OPA3ORM1_POSITION                          0x1
#define _OPA3CON_OPA3ORM1_SIZE                              0x1
#define _OPA3CON_OPA3ORM1_LENGTH                            0x1
#define _OPA3CON_OPA3ORM1_MASK                              0x2

// Register: OPA3ORS
#define OPA3ORS OPA3ORS
extern volatile unsigned char           OPA3ORS             __at(0x51A);
#ifndef _LIB_BUILD
asm("OPA3ORS equ 051Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ORS                    :8;
    };
} OPA3ORSbits_t;
extern volatile OPA3ORSbits_t OPA3ORSbits __at(0x51A);
// bitfield macros
#define _OPA3ORS_ORS_POSN                                   0x0
#define _OPA3ORS_ORS_POSITION                               0x0
#define _OPA3ORS_ORS_SIZE                                   0x8
#define _OPA3ORS_ORS_LENGTH                                 0x8
#define _OPA3ORS_ORS_MASK                                   0xFF

// Register: OPA4NCHS
#define OPA4NCHS OPA4NCHS
extern volatile unsigned char           OPA4NCHS            __at(0x51B);
#ifndef _LIB_BUILD
asm("OPA4NCHS equ 051Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :8;
    };
    struct {
        unsigned OPA4NCH                :8;
    };
} OPA4NCHSbits_t;
extern volatile OPA4NCHSbits_t OPA4NCHSbits __at(0x51B);
// bitfield macros
#define _OPA4NCHS_NCH_POSN                                  0x0
#define _OPA4NCHS_NCH_POSITION                              0x0
#define _OPA4NCHS_NCH_SIZE                                  0x8
#define _OPA4NCHS_NCH_LENGTH                                0x8
#define _OPA4NCHS_NCH_MASK                                  0xFF
#define _OPA4NCHS_OPA4NCH_POSN                              0x0
#define _OPA4NCHS_OPA4NCH_POSITION                          0x0
#define _OPA4NCHS_OPA4NCH_SIZE                              0x8
#define _OPA4NCHS_OPA4NCH_LENGTH                            0x8
#define _OPA4NCHS_OPA4NCH_MASK                              0xFF

// Register: OPA4PCHS
#define OPA4PCHS OPA4PCHS
extern volatile unsigned char           OPA4PCHS            __at(0x51C);
#ifndef _LIB_BUILD
asm("OPA4PCHS equ 051Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :8;
    };
    struct {
        unsigned OPA4PCH                :8;
    };
} OPA4PCHSbits_t;
extern volatile OPA4PCHSbits_t OPA4PCHSbits __at(0x51C);
// bitfield macros
#define _OPA4PCHS_PCH_POSN                                  0x0
#define _OPA4PCHS_PCH_POSITION                              0x0
#define _OPA4PCHS_PCH_SIZE                                  0x8
#define _OPA4PCHS_PCH_LENGTH                                0x8
#define _OPA4PCHS_PCH_MASK                                  0xFF
#define _OPA4PCHS_OPA4PCH_POSN                              0x0
#define _OPA4PCHS_OPA4PCH_POSITION                          0x0
#define _OPA4PCHS_OPA4PCH_SIZE                              0x8
#define _OPA4PCHS_OPA4PCH_LENGTH                            0x8
#define _OPA4PCHS_OPA4PCH_MASK                              0xFF

// Register: OPA4CON
#define OPA4CON OPA4CON
extern volatile unsigned char           OPA4CON             __at(0x51D);
#ifndef _LIB_BUILD
asm("OPA4CON equ 051Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ORM                    :2;
        unsigned ORPOL                  :1;
        unsigned                        :1;
        unsigned UG                     :1;
        unsigned                        :1;
        unsigned SP                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned ORM0                   :1;
        unsigned ORM1                   :1;
    };
    struct {
        unsigned OPA4ORM                :2;
        unsigned OPA4ORPOL              :1;
        unsigned                        :1;
        unsigned OPA4UG                 :1;
        unsigned                        :1;
        unsigned OPA4SP                 :1;
        unsigned OPA4EN                 :1;
    };
    struct {
        unsigned OPA4ORM0               :1;
        unsigned OPA4ORM1               :1;
    };
} OPA4CONbits_t;
extern volatile OPA4CONbits_t OPA4CONbits __at(0x51D);
// bitfield macros
#define _OPA4CON_ORM_POSN                                   0x0
#define _OPA4CON_ORM_POSITION                               0x0
#define _OPA4CON_ORM_SIZE                                   0x2
#define _OPA4CON_ORM_LENGTH                                 0x2
#define _OPA4CON_ORM_MASK                                   0x3
#define _OPA4CON_ORPOL_POSN                                 0x2
#define _OPA4CON_ORPOL_POSITION                             0x2
#define _OPA4CON_ORPOL_SIZE                                 0x1
#define _OPA4CON_ORPOL_LENGTH                               0x1
#define _OPA4CON_ORPOL_MASK                                 0x4
#define _OPA4CON_UG_POSN                                    0x4
#define _OPA4CON_UG_POSITION                                0x4
#define _OPA4CON_UG_SIZE                                    0x1
#define _OPA4CON_UG_LENGTH                                  0x1
#define _OPA4CON_UG_MASK                                    0x10
#define _OPA4CON_SP_POSN                                    0x6
#define _OPA4CON_SP_POSITION                                0x6
#define _OPA4CON_SP_SIZE                                    0x1
#define _OPA4CON_SP_LENGTH                                  0x1
#define _OPA4CON_SP_MASK                                    0x40
#define _OPA4CON_EN_POSN                                    0x7
#define _OPA4CON_EN_POSITION                                0x7
#define _OPA4CON_EN_SIZE                                    0x1
#define _OPA4CON_EN_LENGTH                                  0x1
#define _OPA4CON_EN_MASK                                    0x80
#define _OPA4CON_ORM0_POSN                                  0x0
#define _OPA4CON_ORM0_POSITION                              0x0
#define _OPA4CON_ORM0_SIZE                                  0x1
#define _OPA4CON_ORM0_LENGTH                                0x1
#define _OPA4CON_ORM0_MASK                                  0x1
#define _OPA4CON_ORM1_POSN                                  0x1
#define _OPA4CON_ORM1_POSITION                              0x1
#define _OPA4CON_ORM1_SIZE                                  0x1
#define _OPA4CON_ORM1_LENGTH                                0x1
#define _OPA4CON_ORM1_MASK                                  0x2
#define _OPA4CON_OPA4ORM_POSN                               0x0
#define _OPA4CON_OPA4ORM_POSITION                           0x0
#define _OPA4CON_OPA4ORM_SIZE                               0x2
#define _OPA4CON_OPA4ORM_LENGTH                             0x2
#define _OPA4CON_OPA4ORM_MASK                               0x3
#define _OPA4CON_OPA4ORPOL_POSN                             0x2
#define _OPA4CON_OPA4ORPOL_POSITION                         0x2
#define _OPA4CON_OPA4ORPOL_SIZE                             0x1
#define _OPA4CON_OPA4ORPOL_LENGTH                           0x1
#define _OPA4CON_OPA4ORPOL_MASK                             0x4
#define _OPA4CON_OPA4UG_POSN                                0x4
#define _OPA4CON_OPA4UG_POSITION                            0x4
#define _OPA4CON_OPA4UG_SIZE                                0x1
#define _OPA4CON_OPA4UG_LENGTH                              0x1
#define _OPA4CON_OPA4UG_MASK                                0x10
#define _OPA4CON_OPA4SP_POSN                                0x6
#define _OPA4CON_OPA4SP_POSITION                            0x6
#define _OPA4CON_OPA4SP_SIZE                                0x1
#define _OPA4CON_OPA4SP_LENGTH                              0x1
#define _OPA4CON_OPA4SP_MASK                                0x40
#define _OPA4CON_OPA4EN_POSN                                0x7
#define _OPA4CON_OPA4EN_POSITION                            0x7
#define _OPA4CON_OPA4EN_SIZE                                0x1
#define _OPA4CON_OPA4EN_LENGTH                              0x1
#define _OPA4CON_OPA4EN_MASK                                0x80
#define _OPA4CON_OPA4ORM0_POSN                              0x0
#define _OPA4CON_OPA4ORM0_POSITION                          0x0
#define _OPA4CON_OPA4ORM0_SIZE                              0x1
#define _OPA4CON_OPA4ORM0_LENGTH                            0x1
#define _OPA4CON_OPA4ORM0_MASK                              0x1
#define _OPA4CON_OPA4ORM1_POSN                              0x1
#define _OPA4CON_OPA4ORM1_POSITION                          0x1
#define _OPA4CON_OPA4ORM1_SIZE                              0x1
#define _OPA4CON_OPA4ORM1_LENGTH                            0x1
#define _OPA4CON_OPA4ORM1_MASK                              0x2

// Register: OPA4ORS
#define OPA4ORS OPA4ORS
extern volatile unsigned char           OPA4ORS             __at(0x51E);
#ifndef _LIB_BUILD
asm("OPA4ORS equ 051Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ORS                    :8;
    };
} OPA4ORSbits_t;
extern volatile OPA4ORSbits_t OPA4ORSbits __at(0x51E);
// bitfield macros
#define _OPA4ORS_ORS_POSN                                   0x0
#define _OPA4ORS_ORS_POSITION                               0x0
#define _OPA4ORS_ORS_SIZE                                   0x8
#define _OPA4ORS_ORS_LENGTH                                 0x8
#define _OPA4ORS_ORS_MASK                                   0xFF

// Register: DACLD
#define DACLD DACLD
extern volatile unsigned char           DACLD               __at(0x58D);
#ifndef _LIB_BUILD
asm("DACLD equ 058Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DAC1LD                 :1;
        unsigned DAC2LD                 :1;
        unsigned                        :2;
        unsigned DAC5LD                 :1;
        unsigned DAC6LD                 :1;
    };
} DACLDbits_t;
extern volatile DACLDbits_t DACLDbits __at(0x58D);
// bitfield macros
#define _DACLD_DAC1LD_POSN                                  0x0
#define _DACLD_DAC1LD_POSITION                              0x0
#define _DACLD_DAC1LD_SIZE                                  0x1
#define _DACLD_DAC1LD_LENGTH                                0x1
#define _DACLD_DAC1LD_MASK                                  0x1
#define _DACLD_DAC2LD_POSN                                  0x1
#define _DACLD_DAC2LD_POSITION                              0x1
#define _DACLD_DAC2LD_SIZE                                  0x1
#define _DACLD_DAC2LD_LENGTH                                0x1
#define _DACLD_DAC2LD_MASK                                  0x2
#define _DACLD_DAC5LD_POSN                                  0x4
#define _DACLD_DAC5LD_POSITION                              0x4
#define _DACLD_DAC5LD_SIZE                                  0x1
#define _DACLD_DAC5LD_LENGTH                                0x1
#define _DACLD_DAC5LD_MASK                                  0x10
#define _DACLD_DAC6LD_POSN                                  0x5
#define _DACLD_DAC6LD_POSITION                              0x5
#define _DACLD_DAC6LD_SIZE                                  0x1
#define _DACLD_DAC6LD_LENGTH                                0x1
#define _DACLD_DAC6LD_MASK                                  0x20

// Register: DAC1CON0
#define DAC1CON0 DAC1CON0
extern volatile unsigned char           DAC1CON0            __at(0x58E);
#ifndef _LIB_BUILD
asm("DAC1CON0 equ 058Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NSS                    :2;
        unsigned PSS                    :2;
        unsigned OE2                    :1;
        unsigned OE1                    :1;
        unsigned FM                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned NSS0                   :1;
        unsigned NSS1                   :1;
        unsigned PSS0                   :1;
        unsigned PSS1                   :1;
        unsigned                        :1;
        unsigned OE                     :1;
    };
    struct {
        unsigned DACNSS                 :2;
        unsigned DACPSS                 :2;
        unsigned DACOE2                 :1;
        unsigned DACOE1                 :1;
        unsigned DACFM                  :1;
        unsigned DACEN                  :1;
    };
    struct {
        unsigned DACNSS0                :1;
        unsigned DACNSS1                :1;
        unsigned DACPSS0                :1;
        unsigned DACPSS1                :1;
        unsigned                        :1;
        unsigned DACOE                  :1;
    };
    struct {
        unsigned DAC1NSS                :2;
        unsigned DAC1PSS                :2;
        unsigned DAC1OE2                :1;
        unsigned DAC1OE1                :1;
        unsigned DAC1FM                 :1;
        unsigned DAC1EN                 :1;
    };
    struct {
        unsigned DAC1NSS0               :1;
        unsigned DAC1NSS1               :1;
        unsigned DAC1PSS0               :1;
        unsigned DAC1PSS1               :1;
    };
} DAC1CON0bits_t;
extern volatile DAC1CON0bits_t DAC1CON0bits __at(0x58E);
// bitfield macros
#define _DAC1CON0_NSS_POSN                                  0x0
#define _DAC1CON0_NSS_POSITION                              0x0
#define _DAC1CON0_NSS_SIZE                                  0x2
#define _DAC1CON0_NSS_LENGTH                                0x2
#define _DAC1CON0_NSS_MASK                                  0x3
#define _DAC1CON0_PSS_POSN                                  0x2
#define _DAC1CON0_PSS_POSITION                              0x2
#define _DAC1CON0_PSS_SIZE                                  0x2
#define _DAC1CON0_PSS_LENGTH                                0x2
#define _DAC1CON0_PSS_MASK                                  0xC
#define _DAC1CON0_OE2_POSN                                  0x4
#define _DAC1CON0_OE2_POSITION                              0x4
#define _DAC1CON0_OE2_SIZE                                  0x1
#define _DAC1CON0_OE2_LENGTH                                0x1
#define _DAC1CON0_OE2_MASK                                  0x10
#define _DAC1CON0_OE1_POSN                                  0x5
#define _DAC1CON0_OE1_POSITION                              0x5
#define _DAC1CON0_OE1_SIZE                                  0x1
#define _DAC1CON0_OE1_LENGTH                                0x1
#define _DAC1CON0_OE1_MASK                                  0x20
#define _DAC1CON0_FM_POSN                                   0x6
#define _DAC1CON0_FM_POSITION                               0x6
#define _DAC1CON0_FM_SIZE                                   0x1
#define _DAC1CON0_FM_LENGTH                                 0x1
#define _DAC1CON0_FM_MASK                                   0x40
#define _DAC1CON0_EN_POSN                                   0x7
#define _DAC1CON0_EN_POSITION                               0x7
#define _DAC1CON0_EN_SIZE                                   0x1
#define _DAC1CON0_EN_LENGTH                                 0x1
#define _DAC1CON0_EN_MASK                                   0x80
#define _DAC1CON0_NSS0_POSN                                 0x0
#define _DAC1CON0_NSS0_POSITION                             0x0
#define _DAC1CON0_NSS0_SIZE                                 0x1
#define _DAC1CON0_NSS0_LENGTH                               0x1
#define _DAC1CON0_NSS0_MASK                                 0x1
#define _DAC1CON0_NSS1_POSN                                 0x1
#define _DAC1CON0_NSS1_POSITION                             0x1
#define _DAC1CON0_NSS1_SIZE                                 0x1
#define _DAC1CON0_NSS1_LENGTH                               0x1
#define _DAC1CON0_NSS1_MASK                                 0x2
#define _DAC1CON0_PSS0_POSN                                 0x2
#define _DAC1CON0_PSS0_POSITION                             0x2
#define _DAC1CON0_PSS0_SIZE                                 0x1
#define _DAC1CON0_PSS0_LENGTH                               0x1
#define _DAC1CON0_PSS0_MASK                                 0x4
#define _DAC1CON0_PSS1_POSN                                 0x3
#define _DAC1CON0_PSS1_POSITION                             0x3
#define _DAC1CON0_PSS1_SIZE                                 0x1
#define _DAC1CON0_PSS1_LENGTH                               0x1
#define _DAC1CON0_PSS1_MASK                                 0x8
#define _DAC1CON0_OE_POSN                                   0x5
#define _DAC1CON0_OE_POSITION                               0x5
#define _DAC1CON0_OE_SIZE                                   0x1
#define _DAC1CON0_OE_LENGTH                                 0x1
#define _DAC1CON0_OE_MASK                                   0x20
#define _DAC1CON0_DACNSS_POSN                               0x0
#define _DAC1CON0_DACNSS_POSITION                           0x0
#define _DAC1CON0_DACNSS_SIZE                               0x2
#define _DAC1CON0_DACNSS_LENGTH                             0x2
#define _DAC1CON0_DACNSS_MASK                               0x3
#define _DAC1CON0_DACPSS_POSN                               0x2
#define _DAC1CON0_DACPSS_POSITION                           0x2
#define _DAC1CON0_DACPSS_SIZE                               0x2
#define _DAC1CON0_DACPSS_LENGTH                             0x2
#define _DAC1CON0_DACPSS_MASK                               0xC
#define _DAC1CON0_DACOE2_POSN                               0x4
#define _DAC1CON0_DACOE2_POSITION                           0x4
#define _DAC1CON0_DACOE2_SIZE                               0x1
#define _DAC1CON0_DACOE2_LENGTH                             0x1
#define _DAC1CON0_DACOE2_MASK                               0x10
#define _DAC1CON0_DACOE1_POSN                               0x5
#define _DAC1CON0_DACOE1_POSITION                           0x5
#define _DAC1CON0_DACOE1_SIZE                               0x1
#define _DAC1CON0_DACOE1_LENGTH                             0x1
#define _DAC1CON0_DACOE1_MASK                               0x20
#define _DAC1CON0_DACFM_POSN                                0x6
#define _DAC1CON0_DACFM_POSITION                            0x6
#define _DAC1CON0_DACFM_SIZE                                0x1
#define _DAC1CON0_DACFM_LENGTH                              0x1
#define _DAC1CON0_DACFM_MASK                                0x40
#define _DAC1CON0_DACEN_POSN                                0x7
#define _DAC1CON0_DACEN_POSITION                            0x7
#define _DAC1CON0_DACEN_SIZE                                0x1
#define _DAC1CON0_DACEN_LENGTH                              0x1
#define _DAC1CON0_DACEN_MASK                                0x80
#define _DAC1CON0_DACNSS0_POSN                              0x0
#define _DAC1CON0_DACNSS0_POSITION                          0x0
#define _DAC1CON0_DACNSS0_SIZE                              0x1
#define _DAC1CON0_DACNSS0_LENGTH                            0x1
#define _DAC1CON0_DACNSS0_MASK                              0x1
#define _DAC1CON0_DACNSS1_POSN                              0x1
#define _DAC1CON0_DACNSS1_POSITION                          0x1
#define _DAC1CON0_DACNSS1_SIZE                              0x1
#define _DAC1CON0_DACNSS1_LENGTH                            0x1
#define _DAC1CON0_DACNSS1_MASK                              0x2
#define _DAC1CON0_DACPSS0_POSN                              0x2
#define _DAC1CON0_DACPSS0_POSITION                          0x2
#define _DAC1CON0_DACPSS0_SIZE                              0x1
#define _DAC1CON0_DACPSS0_LENGTH                            0x1
#define _DAC1CON0_DACPSS0_MASK                              0x4
#define _DAC1CON0_DACPSS1_POSN                              0x3
#define _DAC1CON0_DACPSS1_POSITION                          0x3
#define _DAC1CON0_DACPSS1_SIZE                              0x1
#define _DAC1CON0_DACPSS1_LENGTH                            0x1
#define _DAC1CON0_DACPSS1_MASK                              0x8
#define _DAC1CON0_DACOE_POSN                                0x5
#define _DAC1CON0_DACOE_POSITION                            0x5
#define _DAC1CON0_DACOE_SIZE                                0x1
#define _DAC1CON0_DACOE_LENGTH                              0x1
#define _DAC1CON0_DACOE_MASK                                0x20
#define _DAC1CON0_DAC1NSS_POSN                              0x0
#define _DAC1CON0_DAC1NSS_POSITION                          0x0
#define _DAC1CON0_DAC1NSS_SIZE                              0x2
#define _DAC1CON0_DAC1NSS_LENGTH                            0x2
#define _DAC1CON0_DAC1NSS_MASK                              0x3
#define _DAC1CON0_DAC1PSS_POSN                              0x2
#define _DAC1CON0_DAC1PSS_POSITION                          0x2
#define _DAC1CON0_DAC1PSS_SIZE                              0x2
#define _DAC1CON0_DAC1PSS_LENGTH                            0x2
#define _DAC1CON0_DAC1PSS_MASK                              0xC
#define _DAC1CON0_DAC1OE2_POSN                              0x4
#define _DAC1CON0_DAC1OE2_POSITION                          0x4
#define _DAC1CON0_DAC1OE2_SIZE                              0x1
#define _DAC1CON0_DAC1OE2_LENGTH                            0x1
#define _DAC1CON0_DAC1OE2_MASK                              0x10
#define _DAC1CON0_DAC1OE1_POSN                              0x5
#define _DAC1CON0_DAC1OE1_POSITION                          0x5
#define _DAC1CON0_DAC1OE1_SIZE                              0x1
#define _DAC1CON0_DAC1OE1_LENGTH                            0x1
#define _DAC1CON0_DAC1OE1_MASK                              0x20
#define _DAC1CON0_DAC1FM_POSN                               0x6
#define _DAC1CON0_DAC1FM_POSITION                           0x6
#define _DAC1CON0_DAC1FM_SIZE                               0x1
#define _DAC1CON0_DAC1FM_LENGTH                             0x1
#define _DAC1CON0_DAC1FM_MASK                               0x40
#define _DAC1CON0_DAC1EN_POSN                               0x7
#define _DAC1CON0_DAC1EN_POSITION                           0x7
#define _DAC1CON0_DAC1EN_SIZE                               0x1
#define _DAC1CON0_DAC1EN_LENGTH                             0x1
#define _DAC1CON0_DAC1EN_MASK                               0x80
#define _DAC1CON0_DAC1NSS0_POSN                             0x0
#define _DAC1CON0_DAC1NSS0_POSITION                         0x0
#define _DAC1CON0_DAC1NSS0_SIZE                             0x1
#define _DAC1CON0_DAC1NSS0_LENGTH                           0x1
#define _DAC1CON0_DAC1NSS0_MASK                             0x1
#define _DAC1CON0_DAC1NSS1_POSN                             0x1
#define _DAC1CON0_DAC1NSS1_POSITION                         0x1
#define _DAC1CON0_DAC1NSS1_SIZE                             0x1
#define _DAC1CON0_DAC1NSS1_LENGTH                           0x1
#define _DAC1CON0_DAC1NSS1_MASK                             0x2
#define _DAC1CON0_DAC1PSS0_POSN                             0x2
#define _DAC1CON0_DAC1PSS0_POSITION                         0x2
#define _DAC1CON0_DAC1PSS0_SIZE                             0x1
#define _DAC1CON0_DAC1PSS0_LENGTH                           0x1
#define _DAC1CON0_DAC1PSS0_MASK                             0x4
#define _DAC1CON0_DAC1PSS1_POSN                             0x3
#define _DAC1CON0_DAC1PSS1_POSITION                         0x3
#define _DAC1CON0_DAC1PSS1_SIZE                             0x1
#define _DAC1CON0_DAC1PSS1_LENGTH                           0x1
#define _DAC1CON0_DAC1PSS1_MASK                             0x8

// Register: DAC1REF
#define DAC1REF DAC1REF
extern volatile unsigned short          DAC1REF             __at(0x58F);
#ifndef _LIB_BUILD
asm("DAC1REF equ 058Fh");
#endif

// Register: DAC1REFL
#define DAC1REFL DAC1REFL
extern volatile unsigned char           DAC1REFL            __at(0x58F);
#ifndef _LIB_BUILD
asm("DAC1REFL equ 058Fh");
#endif
// aliases
extern volatile unsigned char           DAC1CON1            __at(0x58F);
#ifndef _LIB_BUILD
asm("DAC1CON1 equ 058Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
        unsigned REF5                   :1;
        unsigned REF6                   :1;
        unsigned REF7                   :1;
    };
    struct {
        unsigned DAC1REF0               :1;
        unsigned DAC1REF1               :1;
        unsigned DAC1REF2               :1;
        unsigned DAC1REF3               :1;
        unsigned DAC1REF4               :1;
        unsigned DAC1REF5               :1;
        unsigned DAC1REF6               :1;
        unsigned DAC1REF7               :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
        unsigned R5                     :1;
        unsigned R6                     :1;
        unsigned R7                     :1;
    };
    struct {
        unsigned DAC1R0                 :1;
        unsigned DAC1R1                 :1;
        unsigned DAC1R2                 :1;
        unsigned DAC1R3                 :1;
        unsigned DAC1R4                 :1;
        unsigned DAC1R5                 :1;
        unsigned DAC1R6                 :1;
        unsigned DAC1R7                 :1;
    };
} DAC1REFLbits_t;
extern volatile DAC1REFLbits_t DAC1REFLbits __at(0x58F);
// bitfield macros
#define _DAC1REFL_REF0_POSN                                 0x0
#define _DAC1REFL_REF0_POSITION                             0x0
#define _DAC1REFL_REF0_SIZE                                 0x1
#define _DAC1REFL_REF0_LENGTH                               0x1
#define _DAC1REFL_REF0_MASK                                 0x1
#define _DAC1REFL_REF1_POSN                                 0x1
#define _DAC1REFL_REF1_POSITION                             0x1
#define _DAC1REFL_REF1_SIZE                                 0x1
#define _DAC1REFL_REF1_LENGTH                               0x1
#define _DAC1REFL_REF1_MASK                                 0x2
#define _DAC1REFL_REF2_POSN                                 0x2
#define _DAC1REFL_REF2_POSITION                             0x2
#define _DAC1REFL_REF2_SIZE                                 0x1
#define _DAC1REFL_REF2_LENGTH                               0x1
#define _DAC1REFL_REF2_MASK                                 0x4
#define _DAC1REFL_REF3_POSN                                 0x3
#define _DAC1REFL_REF3_POSITION                             0x3
#define _DAC1REFL_REF3_SIZE                                 0x1
#define _DAC1REFL_REF3_LENGTH                               0x1
#define _DAC1REFL_REF3_MASK                                 0x8
#define _DAC1REFL_REF4_POSN                                 0x4
#define _DAC1REFL_REF4_POSITION                             0x4
#define _DAC1REFL_REF4_SIZE                                 0x1
#define _DAC1REFL_REF4_LENGTH                               0x1
#define _DAC1REFL_REF4_MASK                                 0x10
#define _DAC1REFL_REF5_POSN                                 0x5
#define _DAC1REFL_REF5_POSITION                             0x5
#define _DAC1REFL_REF5_SIZE                                 0x1
#define _DAC1REFL_REF5_LENGTH                               0x1
#define _DAC1REFL_REF5_MASK                                 0x20
#define _DAC1REFL_REF6_POSN                                 0x6
#define _DAC1REFL_REF6_POSITION                             0x6
#define _DAC1REFL_REF6_SIZE                                 0x1
#define _DAC1REFL_REF6_LENGTH                               0x1
#define _DAC1REFL_REF6_MASK                                 0x40
#define _DAC1REFL_REF7_POSN                                 0x7
#define _DAC1REFL_REF7_POSITION                             0x7
#define _DAC1REFL_REF7_SIZE                                 0x1
#define _DAC1REFL_REF7_LENGTH                               0x1
#define _DAC1REFL_REF7_MASK                                 0x80
#define _DAC1REFL_DAC1REF0_POSN                             0x0
#define _DAC1REFL_DAC1REF0_POSITION                         0x0
#define _DAC1REFL_DAC1REF0_SIZE                             0x1
#define _DAC1REFL_DAC1REF0_LENGTH                           0x1
#define _DAC1REFL_DAC1REF0_MASK                             0x1
#define _DAC1REFL_DAC1REF1_POSN                             0x1
#define _DAC1REFL_DAC1REF1_POSITION                         0x1
#define _DAC1REFL_DAC1REF1_SIZE                             0x1
#define _DAC1REFL_DAC1REF1_LENGTH                           0x1
#define _DAC1REFL_DAC1REF1_MASK                             0x2
#define _DAC1REFL_DAC1REF2_POSN                             0x2
#define _DAC1REFL_DAC1REF2_POSITION                         0x2
#define _DAC1REFL_DAC1REF2_SIZE                             0x1
#define _DAC1REFL_DAC1REF2_LENGTH                           0x1
#define _DAC1REFL_DAC1REF2_MASK                             0x4
#define _DAC1REFL_DAC1REF3_POSN                             0x3
#define _DAC1REFL_DAC1REF3_POSITION                         0x3
#define _DAC1REFL_DAC1REF3_SIZE                             0x1
#define _DAC1REFL_DAC1REF3_LENGTH                           0x1
#define _DAC1REFL_DAC1REF3_MASK                             0x8
#define _DAC1REFL_DAC1REF4_POSN                             0x4
#define _DAC1REFL_DAC1REF4_POSITION                         0x4
#define _DAC1REFL_DAC1REF4_SIZE                             0x1
#define _DAC1REFL_DAC1REF4_LENGTH                           0x1
#define _DAC1REFL_DAC1REF4_MASK                             0x10
#define _DAC1REFL_DAC1REF5_POSN                             0x5
#define _DAC1REFL_DAC1REF5_POSITION                         0x5
#define _DAC1REFL_DAC1REF5_SIZE                             0x1
#define _DAC1REFL_DAC1REF5_LENGTH                           0x1
#define _DAC1REFL_DAC1REF5_MASK                             0x20
#define _DAC1REFL_DAC1REF6_POSN                             0x6
#define _DAC1REFL_DAC1REF6_POSITION                         0x6
#define _DAC1REFL_DAC1REF6_SIZE                             0x1
#define _DAC1REFL_DAC1REF6_LENGTH                           0x1
#define _DAC1REFL_DAC1REF6_MASK                             0x40
#define _DAC1REFL_DAC1REF7_POSN                             0x7
#define _DAC1REFL_DAC1REF7_POSITION                         0x7
#define _DAC1REFL_DAC1REF7_SIZE                             0x1
#define _DAC1REFL_DAC1REF7_LENGTH                           0x1
#define _DAC1REFL_DAC1REF7_MASK                             0x80
#define _DAC1REFL_R0_POSN                                   0x0
#define _DAC1REFL_R0_POSITION                               0x0
#define _DAC1REFL_R0_SIZE                                   0x1
#define _DAC1REFL_R0_LENGTH                                 0x1
#define _DAC1REFL_R0_MASK                                   0x1
#define _DAC1REFL_R1_POSN                                   0x1
#define _DAC1REFL_R1_POSITION                               0x1
#define _DAC1REFL_R1_SIZE                                   0x1
#define _DAC1REFL_R1_LENGTH                                 0x1
#define _DAC1REFL_R1_MASK                                   0x2
#define _DAC1REFL_R2_POSN                                   0x2
#define _DAC1REFL_R2_POSITION                               0x2
#define _DAC1REFL_R2_SIZE                                   0x1
#define _DAC1REFL_R2_LENGTH                                 0x1
#define _DAC1REFL_R2_MASK                                   0x4
#define _DAC1REFL_R3_POSN                                   0x3
#define _DAC1REFL_R3_POSITION                               0x3
#define _DAC1REFL_R3_SIZE                                   0x1
#define _DAC1REFL_R3_LENGTH                                 0x1
#define _DAC1REFL_R3_MASK                                   0x8
#define _DAC1REFL_R4_POSN                                   0x4
#define _DAC1REFL_R4_POSITION                               0x4
#define _DAC1REFL_R4_SIZE                                   0x1
#define _DAC1REFL_R4_LENGTH                                 0x1
#define _DAC1REFL_R4_MASK                                   0x10
#define _DAC1REFL_R5_POSN                                   0x5
#define _DAC1REFL_R5_POSITION                               0x5
#define _DAC1REFL_R5_SIZE                                   0x1
#define _DAC1REFL_R5_LENGTH                                 0x1
#define _DAC1REFL_R5_MASK                                   0x20
#define _DAC1REFL_R6_POSN                                   0x6
#define _DAC1REFL_R6_POSITION                               0x6
#define _DAC1REFL_R6_SIZE                                   0x1
#define _DAC1REFL_R6_LENGTH                                 0x1
#define _DAC1REFL_R6_MASK                                   0x40
#define _DAC1REFL_R7_POSN                                   0x7
#define _DAC1REFL_R7_POSITION                               0x7
#define _DAC1REFL_R7_SIZE                                   0x1
#define _DAC1REFL_R7_LENGTH                                 0x1
#define _DAC1REFL_R7_MASK                                   0x80
#define _DAC1REFL_DAC1R0_POSN                               0x0
#define _DAC1REFL_DAC1R0_POSITION                           0x0
#define _DAC1REFL_DAC1R0_SIZE                               0x1
#define _DAC1REFL_DAC1R0_LENGTH                             0x1
#define _DAC1REFL_DAC1R0_MASK                               0x1
#define _DAC1REFL_DAC1R1_POSN                               0x1
#define _DAC1REFL_DAC1R1_POSITION                           0x1
#define _DAC1REFL_DAC1R1_SIZE                               0x1
#define _DAC1REFL_DAC1R1_LENGTH                             0x1
#define _DAC1REFL_DAC1R1_MASK                               0x2
#define _DAC1REFL_DAC1R2_POSN                               0x2
#define _DAC1REFL_DAC1R2_POSITION                           0x2
#define _DAC1REFL_DAC1R2_SIZE                               0x1
#define _DAC1REFL_DAC1R2_LENGTH                             0x1
#define _DAC1REFL_DAC1R2_MASK                               0x4
#define _DAC1REFL_DAC1R3_POSN                               0x3
#define _DAC1REFL_DAC1R3_POSITION                           0x3
#define _DAC1REFL_DAC1R3_SIZE                               0x1
#define _DAC1REFL_DAC1R3_LENGTH                             0x1
#define _DAC1REFL_DAC1R3_MASK                               0x8
#define _DAC1REFL_DAC1R4_POSN                               0x4
#define _DAC1REFL_DAC1R4_POSITION                           0x4
#define _DAC1REFL_DAC1R4_SIZE                               0x1
#define _DAC1REFL_DAC1R4_LENGTH                             0x1
#define _DAC1REFL_DAC1R4_MASK                               0x10
#define _DAC1REFL_DAC1R5_POSN                               0x5
#define _DAC1REFL_DAC1R5_POSITION                           0x5
#define _DAC1REFL_DAC1R5_SIZE                               0x1
#define _DAC1REFL_DAC1R5_LENGTH                             0x1
#define _DAC1REFL_DAC1R5_MASK                               0x20
#define _DAC1REFL_DAC1R6_POSN                               0x6
#define _DAC1REFL_DAC1R6_POSITION                           0x6
#define _DAC1REFL_DAC1R6_SIZE                               0x1
#define _DAC1REFL_DAC1R6_LENGTH                             0x1
#define _DAC1REFL_DAC1R6_MASK                               0x40
#define _DAC1REFL_DAC1R7_POSN                               0x7
#define _DAC1REFL_DAC1R7_POSITION                           0x7
#define _DAC1REFL_DAC1R7_SIZE                               0x1
#define _DAC1REFL_DAC1R7_LENGTH                             0x1
#define _DAC1REFL_DAC1R7_MASK                               0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
        unsigned REF5                   :1;
        unsigned REF6                   :1;
        unsigned REF7                   :1;
    };
    struct {
        unsigned DAC1REF0               :1;
        unsigned DAC1REF1               :1;
        unsigned DAC1REF2               :1;
        unsigned DAC1REF3               :1;
        unsigned DAC1REF4               :1;
        unsigned DAC1REF5               :1;
        unsigned DAC1REF6               :1;
        unsigned DAC1REF7               :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
        unsigned R5                     :1;
        unsigned R6                     :1;
        unsigned R7                     :1;
    };
    struct {
        unsigned DAC1R0                 :1;
        unsigned DAC1R1                 :1;
        unsigned DAC1R2                 :1;
        unsigned DAC1R3                 :1;
        unsigned DAC1R4                 :1;
        unsigned DAC1R5                 :1;
        unsigned DAC1R6                 :1;
        unsigned DAC1R7                 :1;
    };
} DAC1CON1bits_t;
extern volatile DAC1CON1bits_t DAC1CON1bits __at(0x58F);
// bitfield macros
#define _DAC1CON1_REF0_POSN                                 0x0
#define _DAC1CON1_REF0_POSITION                             0x0
#define _DAC1CON1_REF0_SIZE                                 0x1
#define _DAC1CON1_REF0_LENGTH                               0x1
#define _DAC1CON1_REF0_MASK                                 0x1
#define _DAC1CON1_REF1_POSN                                 0x1
#define _DAC1CON1_REF1_POSITION                             0x1
#define _DAC1CON1_REF1_SIZE                                 0x1
#define _DAC1CON1_REF1_LENGTH                               0x1
#define _DAC1CON1_REF1_MASK                                 0x2
#define _DAC1CON1_REF2_POSN                                 0x2
#define _DAC1CON1_REF2_POSITION                             0x2
#define _DAC1CON1_REF2_SIZE                                 0x1
#define _DAC1CON1_REF2_LENGTH                               0x1
#define _DAC1CON1_REF2_MASK                                 0x4
#define _DAC1CON1_REF3_POSN                                 0x3
#define _DAC1CON1_REF3_POSITION                             0x3
#define _DAC1CON1_REF3_SIZE                                 0x1
#define _DAC1CON1_REF3_LENGTH                               0x1
#define _DAC1CON1_REF3_MASK                                 0x8
#define _DAC1CON1_REF4_POSN                                 0x4
#define _DAC1CON1_REF4_POSITION                             0x4
#define _DAC1CON1_REF4_SIZE                                 0x1
#define _DAC1CON1_REF4_LENGTH                               0x1
#define _DAC1CON1_REF4_MASK                                 0x10
#define _DAC1CON1_REF5_POSN                                 0x5
#define _DAC1CON1_REF5_POSITION                             0x5
#define _DAC1CON1_REF5_SIZE                                 0x1
#define _DAC1CON1_REF5_LENGTH                               0x1
#define _DAC1CON1_REF5_MASK                                 0x20
#define _DAC1CON1_REF6_POSN                                 0x6
#define _DAC1CON1_REF6_POSITION                             0x6
#define _DAC1CON1_REF6_SIZE                                 0x1
#define _DAC1CON1_REF6_LENGTH                               0x1
#define _DAC1CON1_REF6_MASK                                 0x40
#define _DAC1CON1_REF7_POSN                                 0x7
#define _DAC1CON1_REF7_POSITION                             0x7
#define _DAC1CON1_REF7_SIZE                                 0x1
#define _DAC1CON1_REF7_LENGTH                               0x1
#define _DAC1CON1_REF7_MASK                                 0x80
#define _DAC1CON1_DAC1REF0_POSN                             0x0
#define _DAC1CON1_DAC1REF0_POSITION                         0x0
#define _DAC1CON1_DAC1REF0_SIZE                             0x1
#define _DAC1CON1_DAC1REF0_LENGTH                           0x1
#define _DAC1CON1_DAC1REF0_MASK                             0x1
#define _DAC1CON1_DAC1REF1_POSN                             0x1
#define _DAC1CON1_DAC1REF1_POSITION                         0x1
#define _DAC1CON1_DAC1REF1_SIZE                             0x1
#define _DAC1CON1_DAC1REF1_LENGTH                           0x1
#define _DAC1CON1_DAC1REF1_MASK                             0x2
#define _DAC1CON1_DAC1REF2_POSN                             0x2
#define _DAC1CON1_DAC1REF2_POSITION                         0x2
#define _DAC1CON1_DAC1REF2_SIZE                             0x1
#define _DAC1CON1_DAC1REF2_LENGTH                           0x1
#define _DAC1CON1_DAC1REF2_MASK                             0x4
#define _DAC1CON1_DAC1REF3_POSN                             0x3
#define _DAC1CON1_DAC1REF3_POSITION                         0x3
#define _DAC1CON1_DAC1REF3_SIZE                             0x1
#define _DAC1CON1_DAC1REF3_LENGTH                           0x1
#define _DAC1CON1_DAC1REF3_MASK                             0x8
#define _DAC1CON1_DAC1REF4_POSN                             0x4
#define _DAC1CON1_DAC1REF4_POSITION                         0x4
#define _DAC1CON1_DAC1REF4_SIZE                             0x1
#define _DAC1CON1_DAC1REF4_LENGTH                           0x1
#define _DAC1CON1_DAC1REF4_MASK                             0x10
#define _DAC1CON1_DAC1REF5_POSN                             0x5
#define _DAC1CON1_DAC1REF5_POSITION                         0x5
#define _DAC1CON1_DAC1REF5_SIZE                             0x1
#define _DAC1CON1_DAC1REF5_LENGTH                           0x1
#define _DAC1CON1_DAC1REF5_MASK                             0x20
#define _DAC1CON1_DAC1REF6_POSN                             0x6
#define _DAC1CON1_DAC1REF6_POSITION                         0x6
#define _DAC1CON1_DAC1REF6_SIZE                             0x1
#define _DAC1CON1_DAC1REF6_LENGTH                           0x1
#define _DAC1CON1_DAC1REF6_MASK                             0x40
#define _DAC1CON1_DAC1REF7_POSN                             0x7
#define _DAC1CON1_DAC1REF7_POSITION                         0x7
#define _DAC1CON1_DAC1REF7_SIZE                             0x1
#define _DAC1CON1_DAC1REF7_LENGTH                           0x1
#define _DAC1CON1_DAC1REF7_MASK                             0x80
#define _DAC1CON1_R0_POSN                                   0x0
#define _DAC1CON1_R0_POSITION                               0x0
#define _DAC1CON1_R0_SIZE                                   0x1
#define _DAC1CON1_R0_LENGTH                                 0x1
#define _DAC1CON1_R0_MASK                                   0x1
#define _DAC1CON1_R1_POSN                                   0x1
#define _DAC1CON1_R1_POSITION                               0x1
#define _DAC1CON1_R1_SIZE                                   0x1
#define _DAC1CON1_R1_LENGTH                                 0x1
#define _DAC1CON1_R1_MASK                                   0x2
#define _DAC1CON1_R2_POSN                                   0x2
#define _DAC1CON1_R2_POSITION                               0x2
#define _DAC1CON1_R2_SIZE                                   0x1
#define _DAC1CON1_R2_LENGTH                                 0x1
#define _DAC1CON1_R2_MASK                                   0x4
#define _DAC1CON1_R3_POSN                                   0x3
#define _DAC1CON1_R3_POSITION                               0x3
#define _DAC1CON1_R3_SIZE                                   0x1
#define _DAC1CON1_R3_LENGTH                                 0x1
#define _DAC1CON1_R3_MASK                                   0x8
#define _DAC1CON1_R4_POSN                                   0x4
#define _DAC1CON1_R4_POSITION                               0x4
#define _DAC1CON1_R4_SIZE                                   0x1
#define _DAC1CON1_R4_LENGTH                                 0x1
#define _DAC1CON1_R4_MASK                                   0x10
#define _DAC1CON1_R5_POSN                                   0x5
#define _DAC1CON1_R5_POSITION                               0x5
#define _DAC1CON1_R5_SIZE                                   0x1
#define _DAC1CON1_R5_LENGTH                                 0x1
#define _DAC1CON1_R5_MASK                                   0x20
#define _DAC1CON1_R6_POSN                                   0x6
#define _DAC1CON1_R6_POSITION                               0x6
#define _DAC1CON1_R6_SIZE                                   0x1
#define _DAC1CON1_R6_LENGTH                                 0x1
#define _DAC1CON1_R6_MASK                                   0x40
#define _DAC1CON1_R7_POSN                                   0x7
#define _DAC1CON1_R7_POSITION                               0x7
#define _DAC1CON1_R7_SIZE                                   0x1
#define _DAC1CON1_R7_LENGTH                                 0x1
#define _DAC1CON1_R7_MASK                                   0x80
#define _DAC1CON1_DAC1R0_POSN                               0x0
#define _DAC1CON1_DAC1R0_POSITION                           0x0
#define _DAC1CON1_DAC1R0_SIZE                               0x1
#define _DAC1CON1_DAC1R0_LENGTH                             0x1
#define _DAC1CON1_DAC1R0_MASK                               0x1
#define _DAC1CON1_DAC1R1_POSN                               0x1
#define _DAC1CON1_DAC1R1_POSITION                           0x1
#define _DAC1CON1_DAC1R1_SIZE                               0x1
#define _DAC1CON1_DAC1R1_LENGTH                             0x1
#define _DAC1CON1_DAC1R1_MASK                               0x2
#define _DAC1CON1_DAC1R2_POSN                               0x2
#define _DAC1CON1_DAC1R2_POSITION                           0x2
#define _DAC1CON1_DAC1R2_SIZE                               0x1
#define _DAC1CON1_DAC1R2_LENGTH                             0x1
#define _DAC1CON1_DAC1R2_MASK                               0x4
#define _DAC1CON1_DAC1R3_POSN                               0x3
#define _DAC1CON1_DAC1R3_POSITION                           0x3
#define _DAC1CON1_DAC1R3_SIZE                               0x1
#define _DAC1CON1_DAC1R3_LENGTH                             0x1
#define _DAC1CON1_DAC1R3_MASK                               0x8
#define _DAC1CON1_DAC1R4_POSN                               0x4
#define _DAC1CON1_DAC1R4_POSITION                           0x4
#define _DAC1CON1_DAC1R4_SIZE                               0x1
#define _DAC1CON1_DAC1R4_LENGTH                             0x1
#define _DAC1CON1_DAC1R4_MASK                               0x10
#define _DAC1CON1_DAC1R5_POSN                               0x5
#define _DAC1CON1_DAC1R5_POSITION                           0x5
#define _DAC1CON1_DAC1R5_SIZE                               0x1
#define _DAC1CON1_DAC1R5_LENGTH                             0x1
#define _DAC1CON1_DAC1R5_MASK                               0x20
#define _DAC1CON1_DAC1R6_POSN                               0x6
#define _DAC1CON1_DAC1R6_POSITION                           0x6
#define _DAC1CON1_DAC1R6_SIZE                               0x1
#define _DAC1CON1_DAC1R6_LENGTH                             0x1
#define _DAC1CON1_DAC1R6_MASK                               0x40
#define _DAC1CON1_DAC1R7_POSN                               0x7
#define _DAC1CON1_DAC1R7_POSITION                           0x7
#define _DAC1CON1_DAC1R7_SIZE                               0x1
#define _DAC1CON1_DAC1R7_LENGTH                             0x1
#define _DAC1CON1_DAC1R7_MASK                               0x80

// Register: DAC1REFH
#define DAC1REFH DAC1REFH
extern volatile unsigned char           DAC1REFH            __at(0x590);
#ifndef _LIB_BUILD
asm("DAC1REFH equ 0590h");
#endif
// aliases
extern volatile unsigned char           DAC1CON2            __at(0x590);
#ifndef _LIB_BUILD
asm("DAC1CON2 equ 0590h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned REF8                   :1;
        unsigned REF9                   :1;
        unsigned REF10                  :1;
        unsigned REF11                  :1;
        unsigned REF12                  :1;
        unsigned REF13                  :1;
        unsigned REF14                  :1;
        unsigned REF15                  :1;
    };
    struct {
        unsigned DAC1REF8               :1;
        unsigned DAC1REF9               :1;
        unsigned DAC1REF10              :1;
        unsigned DAC1REF11              :1;
        unsigned DAC1REF12              :1;
        unsigned DAC1REF13              :1;
        unsigned DAC1REF14              :1;
        unsigned DAC1REF15              :1;
    };
    struct {
        unsigned R8                     :1;
        unsigned R9                     :1;
        unsigned R10                    :1;
        unsigned R11                    :1;
        unsigned R12                    :1;
        unsigned R13                    :1;
        unsigned R14                    :1;
        unsigned R15                    :1;
    };
    struct {
        unsigned DAC1R8                 :1;
        unsigned DAC1R9                 :1;
        unsigned DAC1R10                :1;
        unsigned DAC1R11                :1;
        unsigned DAC1R12                :1;
        unsigned DAC1R13                :1;
        unsigned DAC1R14                :1;
        unsigned DAC1R15                :1;
    };
} DAC1REFHbits_t;
extern volatile DAC1REFHbits_t DAC1REFHbits __at(0x590);
// bitfield macros
#define _DAC1REFH_REF8_POSN                                 0x0
#define _DAC1REFH_REF8_POSITION                             0x0
#define _DAC1REFH_REF8_SIZE                                 0x1
#define _DAC1REFH_REF8_LENGTH                               0x1
#define _DAC1REFH_REF8_MASK                                 0x1
#define _DAC1REFH_REF9_POSN                                 0x1
#define _DAC1REFH_REF9_POSITION                             0x1
#define _DAC1REFH_REF9_SIZE                                 0x1
#define _DAC1REFH_REF9_LENGTH                               0x1
#define _DAC1REFH_REF9_MASK                                 0x2
#define _DAC1REFH_REF10_POSN                                0x2
#define _DAC1REFH_REF10_POSITION                            0x2
#define _DAC1REFH_REF10_SIZE                                0x1
#define _DAC1REFH_REF10_LENGTH                              0x1
#define _DAC1REFH_REF10_MASK                                0x4
#define _DAC1REFH_REF11_POSN                                0x3
#define _DAC1REFH_REF11_POSITION                            0x3
#define _DAC1REFH_REF11_SIZE                                0x1
#define _DAC1REFH_REF11_LENGTH                              0x1
#define _DAC1REFH_REF11_MASK                                0x8
#define _DAC1REFH_REF12_POSN                                0x4
#define _DAC1REFH_REF12_POSITION                            0x4
#define _DAC1REFH_REF12_SIZE                                0x1
#define _DAC1REFH_REF12_LENGTH                              0x1
#define _DAC1REFH_REF12_MASK                                0x10
#define _DAC1REFH_REF13_POSN                                0x5
#define _DAC1REFH_REF13_POSITION                            0x5
#define _DAC1REFH_REF13_SIZE                                0x1
#define _DAC1REFH_REF13_LENGTH                              0x1
#define _DAC1REFH_REF13_MASK                                0x20
#define _DAC1REFH_REF14_POSN                                0x6
#define _DAC1REFH_REF14_POSITION                            0x6
#define _DAC1REFH_REF14_SIZE                                0x1
#define _DAC1REFH_REF14_LENGTH                              0x1
#define _DAC1REFH_REF14_MASK                                0x40
#define _DAC1REFH_REF15_POSN                                0x7
#define _DAC1REFH_REF15_POSITION                            0x7
#define _DAC1REFH_REF15_SIZE                                0x1
#define _DAC1REFH_REF15_LENGTH                              0x1
#define _DAC1REFH_REF15_MASK                                0x80
#define _DAC1REFH_DAC1REF8_POSN                             0x0
#define _DAC1REFH_DAC1REF8_POSITION                         0x0
#define _DAC1REFH_DAC1REF8_SIZE                             0x1
#define _DAC1REFH_DAC1REF8_LENGTH                           0x1
#define _DAC1REFH_DAC1REF8_MASK                             0x1
#define _DAC1REFH_DAC1REF9_POSN                             0x1
#define _DAC1REFH_DAC1REF9_POSITION                         0x1
#define _DAC1REFH_DAC1REF9_SIZE                             0x1
#define _DAC1REFH_DAC1REF9_LENGTH                           0x1
#define _DAC1REFH_DAC1REF9_MASK                             0x2
#define _DAC1REFH_DAC1REF10_POSN                            0x2
#define _DAC1REFH_DAC1REF10_POSITION                        0x2
#define _DAC1REFH_DAC1REF10_SIZE                            0x1
#define _DAC1REFH_DAC1REF10_LENGTH                          0x1
#define _DAC1REFH_DAC1REF10_MASK                            0x4
#define _DAC1REFH_DAC1REF11_POSN                            0x3
#define _DAC1REFH_DAC1REF11_POSITION                        0x3
#define _DAC1REFH_DAC1REF11_SIZE                            0x1
#define _DAC1REFH_DAC1REF11_LENGTH                          0x1
#define _DAC1REFH_DAC1REF11_MASK                            0x8
#define _DAC1REFH_DAC1REF12_POSN                            0x4
#define _DAC1REFH_DAC1REF12_POSITION                        0x4
#define _DAC1REFH_DAC1REF12_SIZE                            0x1
#define _DAC1REFH_DAC1REF12_LENGTH                          0x1
#define _DAC1REFH_DAC1REF12_MASK                            0x10
#define _DAC1REFH_DAC1REF13_POSN                            0x5
#define _DAC1REFH_DAC1REF13_POSITION                        0x5
#define _DAC1REFH_DAC1REF13_SIZE                            0x1
#define _DAC1REFH_DAC1REF13_LENGTH                          0x1
#define _DAC1REFH_DAC1REF13_MASK                            0x20
#define _DAC1REFH_DAC1REF14_POSN                            0x6
#define _DAC1REFH_DAC1REF14_POSITION                        0x6
#define _DAC1REFH_DAC1REF14_SIZE                            0x1
#define _DAC1REFH_DAC1REF14_LENGTH                          0x1
#define _DAC1REFH_DAC1REF14_MASK                            0x40
#define _DAC1REFH_DAC1REF15_POSN                            0x7
#define _DAC1REFH_DAC1REF15_POSITION                        0x7
#define _DAC1REFH_DAC1REF15_SIZE                            0x1
#define _DAC1REFH_DAC1REF15_LENGTH                          0x1
#define _DAC1REFH_DAC1REF15_MASK                            0x80
#define _DAC1REFH_R8_POSN                                   0x0
#define _DAC1REFH_R8_POSITION                               0x0
#define _DAC1REFH_R8_SIZE                                   0x1
#define _DAC1REFH_R8_LENGTH                                 0x1
#define _DAC1REFH_R8_MASK                                   0x1
#define _DAC1REFH_R9_POSN                                   0x1
#define _DAC1REFH_R9_POSITION                               0x1
#define _DAC1REFH_R9_SIZE                                   0x1
#define _DAC1REFH_R9_LENGTH                                 0x1
#define _DAC1REFH_R9_MASK                                   0x2
#define _DAC1REFH_R10_POSN                                  0x2
#define _DAC1REFH_R10_POSITION                              0x2
#define _DAC1REFH_R10_SIZE                                  0x1
#define _DAC1REFH_R10_LENGTH                                0x1
#define _DAC1REFH_R10_MASK                                  0x4
#define _DAC1REFH_R11_POSN                                  0x3
#define _DAC1REFH_R11_POSITION                              0x3
#define _DAC1REFH_R11_SIZE                                  0x1
#define _DAC1REFH_R11_LENGTH                                0x1
#define _DAC1REFH_R11_MASK                                  0x8
#define _DAC1REFH_R12_POSN                                  0x4
#define _DAC1REFH_R12_POSITION                              0x4
#define _DAC1REFH_R12_SIZE                                  0x1
#define _DAC1REFH_R12_LENGTH                                0x1
#define _DAC1REFH_R12_MASK                                  0x10
#define _DAC1REFH_R13_POSN                                  0x5
#define _DAC1REFH_R13_POSITION                              0x5
#define _DAC1REFH_R13_SIZE                                  0x1
#define _DAC1REFH_R13_LENGTH                                0x1
#define _DAC1REFH_R13_MASK                                  0x20
#define _DAC1REFH_R14_POSN                                  0x6
#define _DAC1REFH_R14_POSITION                              0x6
#define _DAC1REFH_R14_SIZE                                  0x1
#define _DAC1REFH_R14_LENGTH                                0x1
#define _DAC1REFH_R14_MASK                                  0x40
#define _DAC1REFH_R15_POSN                                  0x7
#define _DAC1REFH_R15_POSITION                              0x7
#define _DAC1REFH_R15_SIZE                                  0x1
#define _DAC1REFH_R15_LENGTH                                0x1
#define _DAC1REFH_R15_MASK                                  0x80
#define _DAC1REFH_DAC1R8_POSN                               0x0
#define _DAC1REFH_DAC1R8_POSITION                           0x0
#define _DAC1REFH_DAC1R8_SIZE                               0x1
#define _DAC1REFH_DAC1R8_LENGTH                             0x1
#define _DAC1REFH_DAC1R8_MASK                               0x1
#define _DAC1REFH_DAC1R9_POSN                               0x1
#define _DAC1REFH_DAC1R9_POSITION                           0x1
#define _DAC1REFH_DAC1R9_SIZE                               0x1
#define _DAC1REFH_DAC1R9_LENGTH                             0x1
#define _DAC1REFH_DAC1R9_MASK                               0x2
#define _DAC1REFH_DAC1R10_POSN                              0x2
#define _DAC1REFH_DAC1R10_POSITION                          0x2
#define _DAC1REFH_DAC1R10_SIZE                              0x1
#define _DAC1REFH_DAC1R10_LENGTH                            0x1
#define _DAC1REFH_DAC1R10_MASK                              0x4
#define _DAC1REFH_DAC1R11_POSN                              0x3
#define _DAC1REFH_DAC1R11_POSITION                          0x3
#define _DAC1REFH_DAC1R11_SIZE                              0x1
#define _DAC1REFH_DAC1R11_LENGTH                            0x1
#define _DAC1REFH_DAC1R11_MASK                              0x8
#define _DAC1REFH_DAC1R12_POSN                              0x4
#define _DAC1REFH_DAC1R12_POSITION                          0x4
#define _DAC1REFH_DAC1R12_SIZE                              0x1
#define _DAC1REFH_DAC1R12_LENGTH                            0x1
#define _DAC1REFH_DAC1R12_MASK                              0x10
#define _DAC1REFH_DAC1R13_POSN                              0x5
#define _DAC1REFH_DAC1R13_POSITION                          0x5
#define _DAC1REFH_DAC1R13_SIZE                              0x1
#define _DAC1REFH_DAC1R13_LENGTH                            0x1
#define _DAC1REFH_DAC1R13_MASK                              0x20
#define _DAC1REFH_DAC1R14_POSN                              0x6
#define _DAC1REFH_DAC1R14_POSITION                          0x6
#define _DAC1REFH_DAC1R14_SIZE                              0x1
#define _DAC1REFH_DAC1R14_LENGTH                            0x1
#define _DAC1REFH_DAC1R14_MASK                              0x40
#define _DAC1REFH_DAC1R15_POSN                              0x7
#define _DAC1REFH_DAC1R15_POSITION                          0x7
#define _DAC1REFH_DAC1R15_SIZE                              0x1
#define _DAC1REFH_DAC1R15_LENGTH                            0x1
#define _DAC1REFH_DAC1R15_MASK                              0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned REF8                   :1;
        unsigned REF9                   :1;
        unsigned REF10                  :1;
        unsigned REF11                  :1;
        unsigned REF12                  :1;
        unsigned REF13                  :1;
        unsigned REF14                  :1;
        unsigned REF15                  :1;
    };
    struct {
        unsigned DAC1REF8               :1;
        unsigned DAC1REF9               :1;
        unsigned DAC1REF10              :1;
        unsigned DAC1REF11              :1;
        unsigned DAC1REF12              :1;
        unsigned DAC1REF13              :1;
        unsigned DAC1REF14              :1;
        unsigned DAC1REF15              :1;
    };
    struct {
        unsigned R8                     :1;
        unsigned R9                     :1;
        unsigned R10                    :1;
        unsigned R11                    :1;
        unsigned R12                    :1;
        unsigned R13                    :1;
        unsigned R14                    :1;
        unsigned R15                    :1;
    };
    struct {
        unsigned DAC1R8                 :1;
        unsigned DAC1R9                 :1;
        unsigned DAC1R10                :1;
        unsigned DAC1R11                :1;
        unsigned DAC1R12                :1;
        unsigned DAC1R13                :1;
        unsigned DAC1R14                :1;
        unsigned DAC1R15                :1;
    };
} DAC1CON2bits_t;
extern volatile DAC1CON2bits_t DAC1CON2bits __at(0x590);
// bitfield macros
#define _DAC1CON2_REF8_POSN                                 0x0
#define _DAC1CON2_REF8_POSITION                             0x0
#define _DAC1CON2_REF8_SIZE                                 0x1
#define _DAC1CON2_REF8_LENGTH                               0x1
#define _DAC1CON2_REF8_MASK                                 0x1
#define _DAC1CON2_REF9_POSN                                 0x1
#define _DAC1CON2_REF9_POSITION                             0x1
#define _DAC1CON2_REF9_SIZE                                 0x1
#define _DAC1CON2_REF9_LENGTH                               0x1
#define _DAC1CON2_REF9_MASK                                 0x2
#define _DAC1CON2_REF10_POSN                                0x2
#define _DAC1CON2_REF10_POSITION                            0x2
#define _DAC1CON2_REF10_SIZE                                0x1
#define _DAC1CON2_REF10_LENGTH                              0x1
#define _DAC1CON2_REF10_MASK                                0x4
#define _DAC1CON2_REF11_POSN                                0x3
#define _DAC1CON2_REF11_POSITION                            0x3
#define _DAC1CON2_REF11_SIZE                                0x1
#define _DAC1CON2_REF11_LENGTH                              0x1
#define _DAC1CON2_REF11_MASK                                0x8
#define _DAC1CON2_REF12_POSN                                0x4
#define _DAC1CON2_REF12_POSITION                            0x4
#define _DAC1CON2_REF12_SIZE                                0x1
#define _DAC1CON2_REF12_LENGTH                              0x1
#define _DAC1CON2_REF12_MASK                                0x10
#define _DAC1CON2_REF13_POSN                                0x5
#define _DAC1CON2_REF13_POSITION                            0x5
#define _DAC1CON2_REF13_SIZE                                0x1
#define _DAC1CON2_REF13_LENGTH                              0x1
#define _DAC1CON2_REF13_MASK                                0x20
#define _DAC1CON2_REF14_POSN                                0x6
#define _DAC1CON2_REF14_POSITION                            0x6
#define _DAC1CON2_REF14_SIZE                                0x1
#define _DAC1CON2_REF14_LENGTH                              0x1
#define _DAC1CON2_REF14_MASK                                0x40
#define _DAC1CON2_REF15_POSN                                0x7
#define _DAC1CON2_REF15_POSITION                            0x7
#define _DAC1CON2_REF15_SIZE                                0x1
#define _DAC1CON2_REF15_LENGTH                              0x1
#define _DAC1CON2_REF15_MASK                                0x80
#define _DAC1CON2_DAC1REF8_POSN                             0x0
#define _DAC1CON2_DAC1REF8_POSITION                         0x0
#define _DAC1CON2_DAC1REF8_SIZE                             0x1
#define _DAC1CON2_DAC1REF8_LENGTH                           0x1
#define _DAC1CON2_DAC1REF8_MASK                             0x1
#define _DAC1CON2_DAC1REF9_POSN                             0x1
#define _DAC1CON2_DAC1REF9_POSITION                         0x1
#define _DAC1CON2_DAC1REF9_SIZE                             0x1
#define _DAC1CON2_DAC1REF9_LENGTH                           0x1
#define _DAC1CON2_DAC1REF9_MASK                             0x2
#define _DAC1CON2_DAC1REF10_POSN                            0x2
#define _DAC1CON2_DAC1REF10_POSITION                        0x2
#define _DAC1CON2_DAC1REF10_SIZE                            0x1
#define _DAC1CON2_DAC1REF10_LENGTH                          0x1
#define _DAC1CON2_DAC1REF10_MASK                            0x4
#define _DAC1CON2_DAC1REF11_POSN                            0x3
#define _DAC1CON2_DAC1REF11_POSITION                        0x3
#define _DAC1CON2_DAC1REF11_SIZE                            0x1
#define _DAC1CON2_DAC1REF11_LENGTH                          0x1
#define _DAC1CON2_DAC1REF11_MASK                            0x8
#define _DAC1CON2_DAC1REF12_POSN                            0x4
#define _DAC1CON2_DAC1REF12_POSITION                        0x4
#define _DAC1CON2_DAC1REF12_SIZE                            0x1
#define _DAC1CON2_DAC1REF12_LENGTH                          0x1
#define _DAC1CON2_DAC1REF12_MASK                            0x10
#define _DAC1CON2_DAC1REF13_POSN                            0x5
#define _DAC1CON2_DAC1REF13_POSITION                        0x5
#define _DAC1CON2_DAC1REF13_SIZE                            0x1
#define _DAC1CON2_DAC1REF13_LENGTH                          0x1
#define _DAC1CON2_DAC1REF13_MASK                            0x20
#define _DAC1CON2_DAC1REF14_POSN                            0x6
#define _DAC1CON2_DAC1REF14_POSITION                        0x6
#define _DAC1CON2_DAC1REF14_SIZE                            0x1
#define _DAC1CON2_DAC1REF14_LENGTH                          0x1
#define _DAC1CON2_DAC1REF14_MASK                            0x40
#define _DAC1CON2_DAC1REF15_POSN                            0x7
#define _DAC1CON2_DAC1REF15_POSITION                        0x7
#define _DAC1CON2_DAC1REF15_SIZE                            0x1
#define _DAC1CON2_DAC1REF15_LENGTH                          0x1
#define _DAC1CON2_DAC1REF15_MASK                            0x80
#define _DAC1CON2_R8_POSN                                   0x0
#define _DAC1CON2_R8_POSITION                               0x0
#define _DAC1CON2_R8_SIZE                                   0x1
#define _DAC1CON2_R8_LENGTH                                 0x1
#define _DAC1CON2_R8_MASK                                   0x1
#define _DAC1CON2_R9_POSN                                   0x1
#define _DAC1CON2_R9_POSITION                               0x1
#define _DAC1CON2_R9_SIZE                                   0x1
#define _DAC1CON2_R9_LENGTH                                 0x1
#define _DAC1CON2_R9_MASK                                   0x2
#define _DAC1CON2_R10_POSN                                  0x2
#define _DAC1CON2_R10_POSITION                              0x2
#define _DAC1CON2_R10_SIZE                                  0x1
#define _DAC1CON2_R10_LENGTH                                0x1
#define _DAC1CON2_R10_MASK                                  0x4
#define _DAC1CON2_R11_POSN                                  0x3
#define _DAC1CON2_R11_POSITION                              0x3
#define _DAC1CON2_R11_SIZE                                  0x1
#define _DAC1CON2_R11_LENGTH                                0x1
#define _DAC1CON2_R11_MASK                                  0x8
#define _DAC1CON2_R12_POSN                                  0x4
#define _DAC1CON2_R12_POSITION                              0x4
#define _DAC1CON2_R12_SIZE                                  0x1
#define _DAC1CON2_R12_LENGTH                                0x1
#define _DAC1CON2_R12_MASK                                  0x10
#define _DAC1CON2_R13_POSN                                  0x5
#define _DAC1CON2_R13_POSITION                              0x5
#define _DAC1CON2_R13_SIZE                                  0x1
#define _DAC1CON2_R13_LENGTH                                0x1
#define _DAC1CON2_R13_MASK                                  0x20
#define _DAC1CON2_R14_POSN                                  0x6
#define _DAC1CON2_R14_POSITION                              0x6
#define _DAC1CON2_R14_SIZE                                  0x1
#define _DAC1CON2_R14_LENGTH                                0x1
#define _DAC1CON2_R14_MASK                                  0x40
#define _DAC1CON2_R15_POSN                                  0x7
#define _DAC1CON2_R15_POSITION                              0x7
#define _DAC1CON2_R15_SIZE                                  0x1
#define _DAC1CON2_R15_LENGTH                                0x1
#define _DAC1CON2_R15_MASK                                  0x80
#define _DAC1CON2_DAC1R8_POSN                               0x0
#define _DAC1CON2_DAC1R8_POSITION                           0x0
#define _DAC1CON2_DAC1R8_SIZE                               0x1
#define _DAC1CON2_DAC1R8_LENGTH                             0x1
#define _DAC1CON2_DAC1R8_MASK                               0x1
#define _DAC1CON2_DAC1R9_POSN                               0x1
#define _DAC1CON2_DAC1R9_POSITION                           0x1
#define _DAC1CON2_DAC1R9_SIZE                               0x1
#define _DAC1CON2_DAC1R9_LENGTH                             0x1
#define _DAC1CON2_DAC1R9_MASK                               0x2
#define _DAC1CON2_DAC1R10_POSN                              0x2
#define _DAC1CON2_DAC1R10_POSITION                          0x2
#define _DAC1CON2_DAC1R10_SIZE                              0x1
#define _DAC1CON2_DAC1R10_LENGTH                            0x1
#define _DAC1CON2_DAC1R10_MASK                              0x4
#define _DAC1CON2_DAC1R11_POSN                              0x3
#define _DAC1CON2_DAC1R11_POSITION                          0x3
#define _DAC1CON2_DAC1R11_SIZE                              0x1
#define _DAC1CON2_DAC1R11_LENGTH                            0x1
#define _DAC1CON2_DAC1R11_MASK                              0x8
#define _DAC1CON2_DAC1R12_POSN                              0x4
#define _DAC1CON2_DAC1R12_POSITION                          0x4
#define _DAC1CON2_DAC1R12_SIZE                              0x1
#define _DAC1CON2_DAC1R12_LENGTH                            0x1
#define _DAC1CON2_DAC1R12_MASK                              0x10
#define _DAC1CON2_DAC1R13_POSN                              0x5
#define _DAC1CON2_DAC1R13_POSITION                          0x5
#define _DAC1CON2_DAC1R13_SIZE                              0x1
#define _DAC1CON2_DAC1R13_LENGTH                            0x1
#define _DAC1CON2_DAC1R13_MASK                              0x20
#define _DAC1CON2_DAC1R14_POSN                              0x6
#define _DAC1CON2_DAC1R14_POSITION                          0x6
#define _DAC1CON2_DAC1R14_SIZE                              0x1
#define _DAC1CON2_DAC1R14_LENGTH                            0x1
#define _DAC1CON2_DAC1R14_MASK                              0x40
#define _DAC1CON2_DAC1R15_POSN                              0x7
#define _DAC1CON2_DAC1R15_POSITION                          0x7
#define _DAC1CON2_DAC1R15_SIZE                              0x1
#define _DAC1CON2_DAC1R15_LENGTH                            0x1
#define _DAC1CON2_DAC1R15_MASK                              0x80

// Register: DAC2CON0
#define DAC2CON0 DAC2CON0
extern volatile unsigned char           DAC2CON0            __at(0x591);
#ifndef _LIB_BUILD
asm("DAC2CON0 equ 0591h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NSS                    :2;
        unsigned PSS                    :2;
        unsigned OE2                    :1;
        unsigned OE1                    :1;
        unsigned FM                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned NSS0                   :1;
        unsigned NSS1                   :1;
        unsigned PSS0                   :1;
        unsigned PSS1                   :1;
        unsigned                        :1;
        unsigned OE                     :1;
    };
    struct {
        unsigned DACNSS                 :2;
        unsigned DACPSS                 :2;
        unsigned DACOE2                 :1;
        unsigned DACOE1                 :1;
        unsigned DACFM                  :1;
        unsigned DACEN                  :1;
    };
    struct {
        unsigned DACNSS0                :1;
        unsigned DACNSS1                :1;
        unsigned DACPSS0                :1;
        unsigned DACPSS1                :1;
        unsigned                        :1;
        unsigned DACOE                  :1;
    };
    struct {
        unsigned DAC2NSS                :2;
        unsigned DAC2PSS                :2;
        unsigned DAC2OE2                :1;
        unsigned DAC2OE1                :1;
        unsigned DAC2FM                 :1;
        unsigned DAC2EN                 :1;
    };
    struct {
        unsigned DAC2NSS0               :1;
        unsigned DAC2NSS1               :1;
        unsigned DAC2PSS0               :1;
        unsigned DAC2PSS1               :1;
    };
} DAC2CON0bits_t;
extern volatile DAC2CON0bits_t DAC2CON0bits __at(0x591);
// bitfield macros
#define _DAC2CON0_NSS_POSN                                  0x0
#define _DAC2CON0_NSS_POSITION                              0x0
#define _DAC2CON0_NSS_SIZE                                  0x2
#define _DAC2CON0_NSS_LENGTH                                0x2
#define _DAC2CON0_NSS_MASK                                  0x3
#define _DAC2CON0_PSS_POSN                                  0x2
#define _DAC2CON0_PSS_POSITION                              0x2
#define _DAC2CON0_PSS_SIZE                                  0x2
#define _DAC2CON0_PSS_LENGTH                                0x2
#define _DAC2CON0_PSS_MASK                                  0xC
#define _DAC2CON0_OE2_POSN                                  0x4
#define _DAC2CON0_OE2_POSITION                              0x4
#define _DAC2CON0_OE2_SIZE                                  0x1
#define _DAC2CON0_OE2_LENGTH                                0x1
#define _DAC2CON0_OE2_MASK                                  0x10
#define _DAC2CON0_OE1_POSN                                  0x5
#define _DAC2CON0_OE1_POSITION                              0x5
#define _DAC2CON0_OE1_SIZE                                  0x1
#define _DAC2CON0_OE1_LENGTH                                0x1
#define _DAC2CON0_OE1_MASK                                  0x20
#define _DAC2CON0_FM_POSN                                   0x6
#define _DAC2CON0_FM_POSITION                               0x6
#define _DAC2CON0_FM_SIZE                                   0x1
#define _DAC2CON0_FM_LENGTH                                 0x1
#define _DAC2CON0_FM_MASK                                   0x40
#define _DAC2CON0_EN_POSN                                   0x7
#define _DAC2CON0_EN_POSITION                               0x7
#define _DAC2CON0_EN_SIZE                                   0x1
#define _DAC2CON0_EN_LENGTH                                 0x1
#define _DAC2CON0_EN_MASK                                   0x80
#define _DAC2CON0_NSS0_POSN                                 0x0
#define _DAC2CON0_NSS0_POSITION                             0x0
#define _DAC2CON0_NSS0_SIZE                                 0x1
#define _DAC2CON0_NSS0_LENGTH                               0x1
#define _DAC2CON0_NSS0_MASK                                 0x1
#define _DAC2CON0_NSS1_POSN                                 0x1
#define _DAC2CON0_NSS1_POSITION                             0x1
#define _DAC2CON0_NSS1_SIZE                                 0x1
#define _DAC2CON0_NSS1_LENGTH                               0x1
#define _DAC2CON0_NSS1_MASK                                 0x2
#define _DAC2CON0_PSS0_POSN                                 0x2
#define _DAC2CON0_PSS0_POSITION                             0x2
#define _DAC2CON0_PSS0_SIZE                                 0x1
#define _DAC2CON0_PSS0_LENGTH                               0x1
#define _DAC2CON0_PSS0_MASK                                 0x4
#define _DAC2CON0_PSS1_POSN                                 0x3
#define _DAC2CON0_PSS1_POSITION                             0x3
#define _DAC2CON0_PSS1_SIZE                                 0x1
#define _DAC2CON0_PSS1_LENGTH                               0x1
#define _DAC2CON0_PSS1_MASK                                 0x8
#define _DAC2CON0_OE_POSN                                   0x5
#define _DAC2CON0_OE_POSITION                               0x5
#define _DAC2CON0_OE_SIZE                                   0x1
#define _DAC2CON0_OE_LENGTH                                 0x1
#define _DAC2CON0_OE_MASK                                   0x20
#define _DAC2CON0_DACNSS_POSN                               0x0
#define _DAC2CON0_DACNSS_POSITION                           0x0
#define _DAC2CON0_DACNSS_SIZE                               0x2
#define _DAC2CON0_DACNSS_LENGTH                             0x2
#define _DAC2CON0_DACNSS_MASK                               0x3
#define _DAC2CON0_DACPSS_POSN                               0x2
#define _DAC2CON0_DACPSS_POSITION                           0x2
#define _DAC2CON0_DACPSS_SIZE                               0x2
#define _DAC2CON0_DACPSS_LENGTH                             0x2
#define _DAC2CON0_DACPSS_MASK                               0xC
#define _DAC2CON0_DACOE2_POSN                               0x4
#define _DAC2CON0_DACOE2_POSITION                           0x4
#define _DAC2CON0_DACOE2_SIZE                               0x1
#define _DAC2CON0_DACOE2_LENGTH                             0x1
#define _DAC2CON0_DACOE2_MASK                               0x10
#define _DAC2CON0_DACOE1_POSN                               0x5
#define _DAC2CON0_DACOE1_POSITION                           0x5
#define _DAC2CON0_DACOE1_SIZE                               0x1
#define _DAC2CON0_DACOE1_LENGTH                             0x1
#define _DAC2CON0_DACOE1_MASK                               0x20
#define _DAC2CON0_DACFM_POSN                                0x6
#define _DAC2CON0_DACFM_POSITION                            0x6
#define _DAC2CON0_DACFM_SIZE                                0x1
#define _DAC2CON0_DACFM_LENGTH                              0x1
#define _DAC2CON0_DACFM_MASK                                0x40
#define _DAC2CON0_DACEN_POSN                                0x7
#define _DAC2CON0_DACEN_POSITION                            0x7
#define _DAC2CON0_DACEN_SIZE                                0x1
#define _DAC2CON0_DACEN_LENGTH                              0x1
#define _DAC2CON0_DACEN_MASK                                0x80
#define _DAC2CON0_DACNSS0_POSN                              0x0
#define _DAC2CON0_DACNSS0_POSITION                          0x0
#define _DAC2CON0_DACNSS0_SIZE                              0x1
#define _DAC2CON0_DACNSS0_LENGTH                            0x1
#define _DAC2CON0_DACNSS0_MASK                              0x1
#define _DAC2CON0_DACNSS1_POSN                              0x1
#define _DAC2CON0_DACNSS1_POSITION                          0x1
#define _DAC2CON0_DACNSS1_SIZE                              0x1
#define _DAC2CON0_DACNSS1_LENGTH                            0x1
#define _DAC2CON0_DACNSS1_MASK                              0x2
#define _DAC2CON0_DACPSS0_POSN                              0x2
#define _DAC2CON0_DACPSS0_POSITION                          0x2
#define _DAC2CON0_DACPSS0_SIZE                              0x1
#define _DAC2CON0_DACPSS0_LENGTH                            0x1
#define _DAC2CON0_DACPSS0_MASK                              0x4
#define _DAC2CON0_DACPSS1_POSN                              0x3
#define _DAC2CON0_DACPSS1_POSITION                          0x3
#define _DAC2CON0_DACPSS1_SIZE                              0x1
#define _DAC2CON0_DACPSS1_LENGTH                            0x1
#define _DAC2CON0_DACPSS1_MASK                              0x8
#define _DAC2CON0_DACOE_POSN                                0x5
#define _DAC2CON0_DACOE_POSITION                            0x5
#define _DAC2CON0_DACOE_SIZE                                0x1
#define _DAC2CON0_DACOE_LENGTH                              0x1
#define _DAC2CON0_DACOE_MASK                                0x20
#define _DAC2CON0_DAC2NSS_POSN                              0x0
#define _DAC2CON0_DAC2NSS_POSITION                          0x0
#define _DAC2CON0_DAC2NSS_SIZE                              0x2
#define _DAC2CON0_DAC2NSS_LENGTH                            0x2
#define _DAC2CON0_DAC2NSS_MASK                              0x3
#define _DAC2CON0_DAC2PSS_POSN                              0x2
#define _DAC2CON0_DAC2PSS_POSITION                          0x2
#define _DAC2CON0_DAC2PSS_SIZE                              0x2
#define _DAC2CON0_DAC2PSS_LENGTH                            0x2
#define _DAC2CON0_DAC2PSS_MASK                              0xC
#define _DAC2CON0_DAC2OE2_POSN                              0x4
#define _DAC2CON0_DAC2OE2_POSITION                          0x4
#define _DAC2CON0_DAC2OE2_SIZE                              0x1
#define _DAC2CON0_DAC2OE2_LENGTH                            0x1
#define _DAC2CON0_DAC2OE2_MASK                              0x10
#define _DAC2CON0_DAC2OE1_POSN                              0x5
#define _DAC2CON0_DAC2OE1_POSITION                          0x5
#define _DAC2CON0_DAC2OE1_SIZE                              0x1
#define _DAC2CON0_DAC2OE1_LENGTH                            0x1
#define _DAC2CON0_DAC2OE1_MASK                              0x20
#define _DAC2CON0_DAC2FM_POSN                               0x6
#define _DAC2CON0_DAC2FM_POSITION                           0x6
#define _DAC2CON0_DAC2FM_SIZE                               0x1
#define _DAC2CON0_DAC2FM_LENGTH                             0x1
#define _DAC2CON0_DAC2FM_MASK                               0x40
#define _DAC2CON0_DAC2EN_POSN                               0x7
#define _DAC2CON0_DAC2EN_POSITION                           0x7
#define _DAC2CON0_DAC2EN_SIZE                               0x1
#define _DAC2CON0_DAC2EN_LENGTH                             0x1
#define _DAC2CON0_DAC2EN_MASK                               0x80
#define _DAC2CON0_DAC2NSS0_POSN                             0x0
#define _DAC2CON0_DAC2NSS0_POSITION                         0x0
#define _DAC2CON0_DAC2NSS0_SIZE                             0x1
#define _DAC2CON0_DAC2NSS0_LENGTH                           0x1
#define _DAC2CON0_DAC2NSS0_MASK                             0x1
#define _DAC2CON0_DAC2NSS1_POSN                             0x1
#define _DAC2CON0_DAC2NSS1_POSITION                         0x1
#define _DAC2CON0_DAC2NSS1_SIZE                             0x1
#define _DAC2CON0_DAC2NSS1_LENGTH                           0x1
#define _DAC2CON0_DAC2NSS1_MASK                             0x2
#define _DAC2CON0_DAC2PSS0_POSN                             0x2
#define _DAC2CON0_DAC2PSS0_POSITION                         0x2
#define _DAC2CON0_DAC2PSS0_SIZE                             0x1
#define _DAC2CON0_DAC2PSS0_LENGTH                           0x1
#define _DAC2CON0_DAC2PSS0_MASK                             0x4
#define _DAC2CON0_DAC2PSS1_POSN                             0x3
#define _DAC2CON0_DAC2PSS1_POSITION                         0x3
#define _DAC2CON0_DAC2PSS1_SIZE                             0x1
#define _DAC2CON0_DAC2PSS1_LENGTH                           0x1
#define _DAC2CON0_DAC2PSS1_MASK                             0x8

// Register: DAC2REF
#define DAC2REF DAC2REF
extern volatile unsigned short          DAC2REF             __at(0x592);
#ifndef _LIB_BUILD
asm("DAC2REF equ 0592h");
#endif

// Register: DAC2REFL
#define DAC2REFL DAC2REFL
extern volatile unsigned char           DAC2REFL            __at(0x592);
#ifndef _LIB_BUILD
asm("DAC2REFL equ 0592h");
#endif
// aliases
extern volatile unsigned char           DAC2CON1            __at(0x592);
#ifndef _LIB_BUILD
asm("DAC2CON1 equ 0592h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
        unsigned REF5                   :1;
        unsigned REF6                   :1;
        unsigned REF7                   :1;
    };
    struct {
        unsigned DAC2REF0               :1;
        unsigned DAC2REF1               :1;
        unsigned DAC2REF2               :1;
        unsigned DAC2REF3               :1;
        unsigned DAC2REF4               :1;
        unsigned DAC2REF5               :1;
        unsigned DAC2REF6               :1;
        unsigned DAC2REF7               :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
        unsigned R5                     :1;
        unsigned R6                     :1;
        unsigned R7                     :1;
    };
    struct {
        unsigned DAC2R0                 :1;
        unsigned DAC2R1                 :1;
        unsigned DAC2R2                 :1;
        unsigned DAC2R3                 :1;
        unsigned DAC2R4                 :1;
        unsigned DAC2R5                 :1;
        unsigned DAC2R6                 :1;
        unsigned DAC2R7                 :1;
    };
} DAC2REFLbits_t;
extern volatile DAC2REFLbits_t DAC2REFLbits __at(0x592);
// bitfield macros
#define _DAC2REFL_REF0_POSN                                 0x0
#define _DAC2REFL_REF0_POSITION                             0x0
#define _DAC2REFL_REF0_SIZE                                 0x1
#define _DAC2REFL_REF0_LENGTH                               0x1
#define _DAC2REFL_REF0_MASK                                 0x1
#define _DAC2REFL_REF1_POSN                                 0x1
#define _DAC2REFL_REF1_POSITION                             0x1
#define _DAC2REFL_REF1_SIZE                                 0x1
#define _DAC2REFL_REF1_LENGTH                               0x1
#define _DAC2REFL_REF1_MASK                                 0x2
#define _DAC2REFL_REF2_POSN                                 0x2
#define _DAC2REFL_REF2_POSITION                             0x2
#define _DAC2REFL_REF2_SIZE                                 0x1
#define _DAC2REFL_REF2_LENGTH                               0x1
#define _DAC2REFL_REF2_MASK                                 0x4
#define _DAC2REFL_REF3_POSN                                 0x3
#define _DAC2REFL_REF3_POSITION                             0x3
#define _DAC2REFL_REF3_SIZE                                 0x1
#define _DAC2REFL_REF3_LENGTH                               0x1
#define _DAC2REFL_REF3_MASK                                 0x8
#define _DAC2REFL_REF4_POSN                                 0x4
#define _DAC2REFL_REF4_POSITION                             0x4
#define _DAC2REFL_REF4_SIZE                                 0x1
#define _DAC2REFL_REF4_LENGTH                               0x1
#define _DAC2REFL_REF4_MASK                                 0x10
#define _DAC2REFL_REF5_POSN                                 0x5
#define _DAC2REFL_REF5_POSITION                             0x5
#define _DAC2REFL_REF5_SIZE                                 0x1
#define _DAC2REFL_REF5_LENGTH                               0x1
#define _DAC2REFL_REF5_MASK                                 0x20
#define _DAC2REFL_REF6_POSN                                 0x6
#define _DAC2REFL_REF6_POSITION                             0x6
#define _DAC2REFL_REF6_SIZE                                 0x1
#define _DAC2REFL_REF6_LENGTH                               0x1
#define _DAC2REFL_REF6_MASK                                 0x40
#define _DAC2REFL_REF7_POSN                                 0x7
#define _DAC2REFL_REF7_POSITION                             0x7
#define _DAC2REFL_REF7_SIZE                                 0x1
#define _DAC2REFL_REF7_LENGTH                               0x1
#define _DAC2REFL_REF7_MASK                                 0x80
#define _DAC2REFL_DAC2REF0_POSN                             0x0
#define _DAC2REFL_DAC2REF0_POSITION                         0x0
#define _DAC2REFL_DAC2REF0_SIZE                             0x1
#define _DAC2REFL_DAC2REF0_LENGTH                           0x1
#define _DAC2REFL_DAC2REF0_MASK                             0x1
#define _DAC2REFL_DAC2REF1_POSN                             0x1
#define _DAC2REFL_DAC2REF1_POSITION                         0x1
#define _DAC2REFL_DAC2REF1_SIZE                             0x1
#define _DAC2REFL_DAC2REF1_LENGTH                           0x1
#define _DAC2REFL_DAC2REF1_MASK                             0x2
#define _DAC2REFL_DAC2REF2_POSN                             0x2
#define _DAC2REFL_DAC2REF2_POSITION                         0x2
#define _DAC2REFL_DAC2REF2_SIZE                             0x1
#define _DAC2REFL_DAC2REF2_LENGTH                           0x1
#define _DAC2REFL_DAC2REF2_MASK                             0x4
#define _DAC2REFL_DAC2REF3_POSN                             0x3
#define _DAC2REFL_DAC2REF3_POSITION                         0x3
#define _DAC2REFL_DAC2REF3_SIZE                             0x1
#define _DAC2REFL_DAC2REF3_LENGTH                           0x1
#define _DAC2REFL_DAC2REF3_MASK                             0x8
#define _DAC2REFL_DAC2REF4_POSN                             0x4
#define _DAC2REFL_DAC2REF4_POSITION                         0x4
#define _DAC2REFL_DAC2REF4_SIZE                             0x1
#define _DAC2REFL_DAC2REF4_LENGTH                           0x1
#define _DAC2REFL_DAC2REF4_MASK                             0x10
#define _DAC2REFL_DAC2REF5_POSN                             0x5
#define _DAC2REFL_DAC2REF5_POSITION                         0x5
#define _DAC2REFL_DAC2REF5_SIZE                             0x1
#define _DAC2REFL_DAC2REF5_LENGTH                           0x1
#define _DAC2REFL_DAC2REF5_MASK                             0x20
#define _DAC2REFL_DAC2REF6_POSN                             0x6
#define _DAC2REFL_DAC2REF6_POSITION                         0x6
#define _DAC2REFL_DAC2REF6_SIZE                             0x1
#define _DAC2REFL_DAC2REF6_LENGTH                           0x1
#define _DAC2REFL_DAC2REF6_MASK                             0x40
#define _DAC2REFL_DAC2REF7_POSN                             0x7
#define _DAC2REFL_DAC2REF7_POSITION                         0x7
#define _DAC2REFL_DAC2REF7_SIZE                             0x1
#define _DAC2REFL_DAC2REF7_LENGTH                           0x1
#define _DAC2REFL_DAC2REF7_MASK                             0x80
#define _DAC2REFL_R0_POSN                                   0x0
#define _DAC2REFL_R0_POSITION                               0x0
#define _DAC2REFL_R0_SIZE                                   0x1
#define _DAC2REFL_R0_LENGTH                                 0x1
#define _DAC2REFL_R0_MASK                                   0x1
#define _DAC2REFL_R1_POSN                                   0x1
#define _DAC2REFL_R1_POSITION                               0x1
#define _DAC2REFL_R1_SIZE                                   0x1
#define _DAC2REFL_R1_LENGTH                                 0x1
#define _DAC2REFL_R1_MASK                                   0x2
#define _DAC2REFL_R2_POSN                                   0x2
#define _DAC2REFL_R2_POSITION                               0x2
#define _DAC2REFL_R2_SIZE                                   0x1
#define _DAC2REFL_R2_LENGTH                                 0x1
#define _DAC2REFL_R2_MASK                                   0x4
#define _DAC2REFL_R3_POSN                                   0x3
#define _DAC2REFL_R3_POSITION                               0x3
#define _DAC2REFL_R3_SIZE                                   0x1
#define _DAC2REFL_R3_LENGTH                                 0x1
#define _DAC2REFL_R3_MASK                                   0x8
#define _DAC2REFL_R4_POSN                                   0x4
#define _DAC2REFL_R4_POSITION                               0x4
#define _DAC2REFL_R4_SIZE                                   0x1
#define _DAC2REFL_R4_LENGTH                                 0x1
#define _DAC2REFL_R4_MASK                                   0x10
#define _DAC2REFL_R5_POSN                                   0x5
#define _DAC2REFL_R5_POSITION                               0x5
#define _DAC2REFL_R5_SIZE                                   0x1
#define _DAC2REFL_R5_LENGTH                                 0x1
#define _DAC2REFL_R5_MASK                                   0x20
#define _DAC2REFL_R6_POSN                                   0x6
#define _DAC2REFL_R6_POSITION                               0x6
#define _DAC2REFL_R6_SIZE                                   0x1
#define _DAC2REFL_R6_LENGTH                                 0x1
#define _DAC2REFL_R6_MASK                                   0x40
#define _DAC2REFL_R7_POSN                                   0x7
#define _DAC2REFL_R7_POSITION                               0x7
#define _DAC2REFL_R7_SIZE                                   0x1
#define _DAC2REFL_R7_LENGTH                                 0x1
#define _DAC2REFL_R7_MASK                                   0x80
#define _DAC2REFL_DAC2R0_POSN                               0x0
#define _DAC2REFL_DAC2R0_POSITION                           0x0
#define _DAC2REFL_DAC2R0_SIZE                               0x1
#define _DAC2REFL_DAC2R0_LENGTH                             0x1
#define _DAC2REFL_DAC2R0_MASK                               0x1
#define _DAC2REFL_DAC2R1_POSN                               0x1
#define _DAC2REFL_DAC2R1_POSITION                           0x1
#define _DAC2REFL_DAC2R1_SIZE                               0x1
#define _DAC2REFL_DAC2R1_LENGTH                             0x1
#define _DAC2REFL_DAC2R1_MASK                               0x2
#define _DAC2REFL_DAC2R2_POSN                               0x2
#define _DAC2REFL_DAC2R2_POSITION                           0x2
#define _DAC2REFL_DAC2R2_SIZE                               0x1
#define _DAC2REFL_DAC2R2_LENGTH                             0x1
#define _DAC2REFL_DAC2R2_MASK                               0x4
#define _DAC2REFL_DAC2R3_POSN                               0x3
#define _DAC2REFL_DAC2R3_POSITION                           0x3
#define _DAC2REFL_DAC2R3_SIZE                               0x1
#define _DAC2REFL_DAC2R3_LENGTH                             0x1
#define _DAC2REFL_DAC2R3_MASK                               0x8
#define _DAC2REFL_DAC2R4_POSN                               0x4
#define _DAC2REFL_DAC2R4_POSITION                           0x4
#define _DAC2REFL_DAC2R4_SIZE                               0x1
#define _DAC2REFL_DAC2R4_LENGTH                             0x1
#define _DAC2REFL_DAC2R4_MASK                               0x10
#define _DAC2REFL_DAC2R5_POSN                               0x5
#define _DAC2REFL_DAC2R5_POSITION                           0x5
#define _DAC2REFL_DAC2R5_SIZE                               0x1
#define _DAC2REFL_DAC2R5_LENGTH                             0x1
#define _DAC2REFL_DAC2R5_MASK                               0x20
#define _DAC2REFL_DAC2R6_POSN                               0x6
#define _DAC2REFL_DAC2R6_POSITION                           0x6
#define _DAC2REFL_DAC2R6_SIZE                               0x1
#define _DAC2REFL_DAC2R6_LENGTH                             0x1
#define _DAC2REFL_DAC2R6_MASK                               0x40
#define _DAC2REFL_DAC2R7_POSN                               0x7
#define _DAC2REFL_DAC2R7_POSITION                           0x7
#define _DAC2REFL_DAC2R7_SIZE                               0x1
#define _DAC2REFL_DAC2R7_LENGTH                             0x1
#define _DAC2REFL_DAC2R7_MASK                               0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
        unsigned REF5                   :1;
        unsigned REF6                   :1;
        unsigned REF7                   :1;
    };
    struct {
        unsigned DAC2REF0               :1;
        unsigned DAC2REF1               :1;
        unsigned DAC2REF2               :1;
        unsigned DAC2REF3               :1;
        unsigned DAC2REF4               :1;
        unsigned DAC2REF5               :1;
        unsigned DAC2REF6               :1;
        unsigned DAC2REF7               :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
        unsigned R5                     :1;
        unsigned R6                     :1;
        unsigned R7                     :1;
    };
    struct {
        unsigned DAC2R0                 :1;
        unsigned DAC2R1                 :1;
        unsigned DAC2R2                 :1;
        unsigned DAC2R3                 :1;
        unsigned DAC2R4                 :1;
        unsigned DAC2R5                 :1;
        unsigned DAC2R6                 :1;
        unsigned DAC2R7                 :1;
    };
} DAC2CON1bits_t;
extern volatile DAC2CON1bits_t DAC2CON1bits __at(0x592);
// bitfield macros
#define _DAC2CON1_REF0_POSN                                 0x0
#define _DAC2CON1_REF0_POSITION                             0x0
#define _DAC2CON1_REF0_SIZE                                 0x1
#define _DAC2CON1_REF0_LENGTH                               0x1
#define _DAC2CON1_REF0_MASK                                 0x1
#define _DAC2CON1_REF1_POSN                                 0x1
#define _DAC2CON1_REF1_POSITION                             0x1
#define _DAC2CON1_REF1_SIZE                                 0x1
#define _DAC2CON1_REF1_LENGTH                               0x1
#define _DAC2CON1_REF1_MASK                                 0x2
#define _DAC2CON1_REF2_POSN                                 0x2
#define _DAC2CON1_REF2_POSITION                             0x2
#define _DAC2CON1_REF2_SIZE                                 0x1
#define _DAC2CON1_REF2_LENGTH                               0x1
#define _DAC2CON1_REF2_MASK                                 0x4
#define _DAC2CON1_REF3_POSN                                 0x3
#define _DAC2CON1_REF3_POSITION                             0x3
#define _DAC2CON1_REF3_SIZE                                 0x1
#define _DAC2CON1_REF3_LENGTH                               0x1
#define _DAC2CON1_REF3_MASK                                 0x8
#define _DAC2CON1_REF4_POSN                                 0x4
#define _DAC2CON1_REF4_POSITION                             0x4
#define _DAC2CON1_REF4_SIZE                                 0x1
#define _DAC2CON1_REF4_LENGTH                               0x1
#define _DAC2CON1_REF4_MASK                                 0x10
#define _DAC2CON1_REF5_POSN                                 0x5
#define _DAC2CON1_REF5_POSITION                             0x5
#define _DAC2CON1_REF5_SIZE                                 0x1
#define _DAC2CON1_REF5_LENGTH                               0x1
#define _DAC2CON1_REF5_MASK                                 0x20
#define _DAC2CON1_REF6_POSN                                 0x6
#define _DAC2CON1_REF6_POSITION                             0x6
#define _DAC2CON1_REF6_SIZE                                 0x1
#define _DAC2CON1_REF6_LENGTH                               0x1
#define _DAC2CON1_REF6_MASK                                 0x40
#define _DAC2CON1_REF7_POSN                                 0x7
#define _DAC2CON1_REF7_POSITION                             0x7
#define _DAC2CON1_REF7_SIZE                                 0x1
#define _DAC2CON1_REF7_LENGTH                               0x1
#define _DAC2CON1_REF7_MASK                                 0x80
#define _DAC2CON1_DAC2REF0_POSN                             0x0
#define _DAC2CON1_DAC2REF0_POSITION                         0x0
#define _DAC2CON1_DAC2REF0_SIZE                             0x1
#define _DAC2CON1_DAC2REF0_LENGTH                           0x1
#define _DAC2CON1_DAC2REF0_MASK                             0x1
#define _DAC2CON1_DAC2REF1_POSN                             0x1
#define _DAC2CON1_DAC2REF1_POSITION                         0x1
#define _DAC2CON1_DAC2REF1_SIZE                             0x1
#define _DAC2CON1_DAC2REF1_LENGTH                           0x1
#define _DAC2CON1_DAC2REF1_MASK                             0x2
#define _DAC2CON1_DAC2REF2_POSN                             0x2
#define _DAC2CON1_DAC2REF2_POSITION                         0x2
#define _DAC2CON1_DAC2REF2_SIZE                             0x1
#define _DAC2CON1_DAC2REF2_LENGTH                           0x1
#define _DAC2CON1_DAC2REF2_MASK                             0x4
#define _DAC2CON1_DAC2REF3_POSN                             0x3
#define _DAC2CON1_DAC2REF3_POSITION                         0x3
#define _DAC2CON1_DAC2REF3_SIZE                             0x1
#define _DAC2CON1_DAC2REF3_LENGTH                           0x1
#define _DAC2CON1_DAC2REF3_MASK                             0x8
#define _DAC2CON1_DAC2REF4_POSN                             0x4
#define _DAC2CON1_DAC2REF4_POSITION                         0x4
#define _DAC2CON1_DAC2REF4_SIZE                             0x1
#define _DAC2CON1_DAC2REF4_LENGTH                           0x1
#define _DAC2CON1_DAC2REF4_MASK                             0x10
#define _DAC2CON1_DAC2REF5_POSN                             0x5
#define _DAC2CON1_DAC2REF5_POSITION                         0x5
#define _DAC2CON1_DAC2REF5_SIZE                             0x1
#define _DAC2CON1_DAC2REF5_LENGTH                           0x1
#define _DAC2CON1_DAC2REF5_MASK                             0x20
#define _DAC2CON1_DAC2REF6_POSN                             0x6
#define _DAC2CON1_DAC2REF6_POSITION                         0x6
#define _DAC2CON1_DAC2REF6_SIZE                             0x1
#define _DAC2CON1_DAC2REF6_LENGTH                           0x1
#define _DAC2CON1_DAC2REF6_MASK                             0x40
#define _DAC2CON1_DAC2REF7_POSN                             0x7
#define _DAC2CON1_DAC2REF7_POSITION                         0x7
#define _DAC2CON1_DAC2REF7_SIZE                             0x1
#define _DAC2CON1_DAC2REF7_LENGTH                           0x1
#define _DAC2CON1_DAC2REF7_MASK                             0x80
#define _DAC2CON1_R0_POSN                                   0x0
#define _DAC2CON1_R0_POSITION                               0x0
#define _DAC2CON1_R0_SIZE                                   0x1
#define _DAC2CON1_R0_LENGTH                                 0x1
#define _DAC2CON1_R0_MASK                                   0x1
#define _DAC2CON1_R1_POSN                                   0x1
#define _DAC2CON1_R1_POSITION                               0x1
#define _DAC2CON1_R1_SIZE                                   0x1
#define _DAC2CON1_R1_LENGTH                                 0x1
#define _DAC2CON1_R1_MASK                                   0x2
#define _DAC2CON1_R2_POSN                                   0x2
#define _DAC2CON1_R2_POSITION                               0x2
#define _DAC2CON1_R2_SIZE                                   0x1
#define _DAC2CON1_R2_LENGTH                                 0x1
#define _DAC2CON1_R2_MASK                                   0x4
#define _DAC2CON1_R3_POSN                                   0x3
#define _DAC2CON1_R3_POSITION                               0x3
#define _DAC2CON1_R3_SIZE                                   0x1
#define _DAC2CON1_R3_LENGTH                                 0x1
#define _DAC2CON1_R3_MASK                                   0x8
#define _DAC2CON1_R4_POSN                                   0x4
#define _DAC2CON1_R4_POSITION                               0x4
#define _DAC2CON1_R4_SIZE                                   0x1
#define _DAC2CON1_R4_LENGTH                                 0x1
#define _DAC2CON1_R4_MASK                                   0x10
#define _DAC2CON1_R5_POSN                                   0x5
#define _DAC2CON1_R5_POSITION                               0x5
#define _DAC2CON1_R5_SIZE                                   0x1
#define _DAC2CON1_R5_LENGTH                                 0x1
#define _DAC2CON1_R5_MASK                                   0x20
#define _DAC2CON1_R6_POSN                                   0x6
#define _DAC2CON1_R6_POSITION                               0x6
#define _DAC2CON1_R6_SIZE                                   0x1
#define _DAC2CON1_R6_LENGTH                                 0x1
#define _DAC2CON1_R6_MASK                                   0x40
#define _DAC2CON1_R7_POSN                                   0x7
#define _DAC2CON1_R7_POSITION                               0x7
#define _DAC2CON1_R7_SIZE                                   0x1
#define _DAC2CON1_R7_LENGTH                                 0x1
#define _DAC2CON1_R7_MASK                                   0x80
#define _DAC2CON1_DAC2R0_POSN                               0x0
#define _DAC2CON1_DAC2R0_POSITION                           0x0
#define _DAC2CON1_DAC2R0_SIZE                               0x1
#define _DAC2CON1_DAC2R0_LENGTH                             0x1
#define _DAC2CON1_DAC2R0_MASK                               0x1
#define _DAC2CON1_DAC2R1_POSN                               0x1
#define _DAC2CON1_DAC2R1_POSITION                           0x1
#define _DAC2CON1_DAC2R1_SIZE                               0x1
#define _DAC2CON1_DAC2R1_LENGTH                             0x1
#define _DAC2CON1_DAC2R1_MASK                               0x2
#define _DAC2CON1_DAC2R2_POSN                               0x2
#define _DAC2CON1_DAC2R2_POSITION                           0x2
#define _DAC2CON1_DAC2R2_SIZE                               0x1
#define _DAC2CON1_DAC2R2_LENGTH                             0x1
#define _DAC2CON1_DAC2R2_MASK                               0x4
#define _DAC2CON1_DAC2R3_POSN                               0x3
#define _DAC2CON1_DAC2R3_POSITION                           0x3
#define _DAC2CON1_DAC2R3_SIZE                               0x1
#define _DAC2CON1_DAC2R3_LENGTH                             0x1
#define _DAC2CON1_DAC2R3_MASK                               0x8
#define _DAC2CON1_DAC2R4_POSN                               0x4
#define _DAC2CON1_DAC2R4_POSITION                           0x4
#define _DAC2CON1_DAC2R4_SIZE                               0x1
#define _DAC2CON1_DAC2R4_LENGTH                             0x1
#define _DAC2CON1_DAC2R4_MASK                               0x10
#define _DAC2CON1_DAC2R5_POSN                               0x5
#define _DAC2CON1_DAC2R5_POSITION                           0x5
#define _DAC2CON1_DAC2R5_SIZE                               0x1
#define _DAC2CON1_DAC2R5_LENGTH                             0x1
#define _DAC2CON1_DAC2R5_MASK                               0x20
#define _DAC2CON1_DAC2R6_POSN                               0x6
#define _DAC2CON1_DAC2R6_POSITION                           0x6
#define _DAC2CON1_DAC2R6_SIZE                               0x1
#define _DAC2CON1_DAC2R6_LENGTH                             0x1
#define _DAC2CON1_DAC2R6_MASK                               0x40
#define _DAC2CON1_DAC2R7_POSN                               0x7
#define _DAC2CON1_DAC2R7_POSITION                           0x7
#define _DAC2CON1_DAC2R7_SIZE                               0x1
#define _DAC2CON1_DAC2R7_LENGTH                             0x1
#define _DAC2CON1_DAC2R7_MASK                               0x80

// Register: DAC2REFH
#define DAC2REFH DAC2REFH
extern volatile unsigned char           DAC2REFH            __at(0x593);
#ifndef _LIB_BUILD
asm("DAC2REFH equ 0593h");
#endif
// aliases
extern volatile unsigned char           DAC2CON2            __at(0x593);
#ifndef _LIB_BUILD
asm("DAC2CON2 equ 0593h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned REF8                   :1;
        unsigned REF9                   :1;
        unsigned REF10                  :1;
        unsigned REF11                  :1;
        unsigned REF12                  :1;
        unsigned REF13                  :1;
        unsigned REF14                  :1;
        unsigned REF15                  :1;
    };
    struct {
        unsigned DAC2REF8               :1;
        unsigned DAC2REF9               :1;
        unsigned DAC2REF10              :1;
        unsigned DAC2REF11              :1;
        unsigned DAC2REF12              :1;
        unsigned DAC2REF13              :1;
        unsigned DAC2REF14              :1;
        unsigned DAC2REF15              :1;
    };
    struct {
        unsigned R8                     :1;
        unsigned R9                     :1;
        unsigned R10                    :1;
        unsigned R11                    :1;
        unsigned R12                    :1;
        unsigned R13                    :1;
        unsigned R14                    :1;
        unsigned R15                    :1;
    };
    struct {
        unsigned DAC2R8                 :1;
        unsigned DAC2R9                 :1;
        unsigned DAC2R10                :1;
        unsigned DAC2R11                :1;
        unsigned DAC2R12                :1;
        unsigned DAC2R13                :1;
        unsigned DAC2R14                :1;
        unsigned DAC2R15                :1;
    };
} DAC2REFHbits_t;
extern volatile DAC2REFHbits_t DAC2REFHbits __at(0x593);
// bitfield macros
#define _DAC2REFH_REF8_POSN                                 0x0
#define _DAC2REFH_REF8_POSITION                             0x0
#define _DAC2REFH_REF8_SIZE                                 0x1
#define _DAC2REFH_REF8_LENGTH                               0x1
#define _DAC2REFH_REF8_MASK                                 0x1
#define _DAC2REFH_REF9_POSN                                 0x1
#define _DAC2REFH_REF9_POSITION                             0x1
#define _DAC2REFH_REF9_SIZE                                 0x1
#define _DAC2REFH_REF9_LENGTH                               0x1
#define _DAC2REFH_REF9_MASK                                 0x2
#define _DAC2REFH_REF10_POSN                                0x2
#define _DAC2REFH_REF10_POSITION                            0x2
#define _DAC2REFH_REF10_SIZE                                0x1
#define _DAC2REFH_REF10_LENGTH                              0x1
#define _DAC2REFH_REF10_MASK                                0x4
#define _DAC2REFH_REF11_POSN                                0x3
#define _DAC2REFH_REF11_POSITION                            0x3
#define _DAC2REFH_REF11_SIZE                                0x1
#define _DAC2REFH_REF11_LENGTH                              0x1
#define _DAC2REFH_REF11_MASK                                0x8
#define _DAC2REFH_REF12_POSN                                0x4
#define _DAC2REFH_REF12_POSITION                            0x4
#define _DAC2REFH_REF12_SIZE                                0x1
#define _DAC2REFH_REF12_LENGTH                              0x1
#define _DAC2REFH_REF12_MASK                                0x10
#define _DAC2REFH_REF13_POSN                                0x5
#define _DAC2REFH_REF13_POSITION                            0x5
#define _DAC2REFH_REF13_SIZE                                0x1
#define _DAC2REFH_REF13_LENGTH                              0x1
#define _DAC2REFH_REF13_MASK                                0x20
#define _DAC2REFH_REF14_POSN                                0x6
#define _DAC2REFH_REF14_POSITION                            0x6
#define _DAC2REFH_REF14_SIZE                                0x1
#define _DAC2REFH_REF14_LENGTH                              0x1
#define _DAC2REFH_REF14_MASK                                0x40
#define _DAC2REFH_REF15_POSN                                0x7
#define _DAC2REFH_REF15_POSITION                            0x7
#define _DAC2REFH_REF15_SIZE                                0x1
#define _DAC2REFH_REF15_LENGTH                              0x1
#define _DAC2REFH_REF15_MASK                                0x80
#define _DAC2REFH_DAC2REF8_POSN                             0x0
#define _DAC2REFH_DAC2REF8_POSITION                         0x0
#define _DAC2REFH_DAC2REF8_SIZE                             0x1
#define _DAC2REFH_DAC2REF8_LENGTH                           0x1
#define _DAC2REFH_DAC2REF8_MASK                             0x1
#define _DAC2REFH_DAC2REF9_POSN                             0x1
#define _DAC2REFH_DAC2REF9_POSITION                         0x1
#define _DAC2REFH_DAC2REF9_SIZE                             0x1
#define _DAC2REFH_DAC2REF9_LENGTH                           0x1
#define _DAC2REFH_DAC2REF9_MASK                             0x2
#define _DAC2REFH_DAC2REF10_POSN                            0x2
#define _DAC2REFH_DAC2REF10_POSITION                        0x2
#define _DAC2REFH_DAC2REF10_SIZE                            0x1
#define _DAC2REFH_DAC2REF10_LENGTH                          0x1
#define _DAC2REFH_DAC2REF10_MASK                            0x4
#define _DAC2REFH_DAC2REF11_POSN                            0x3
#define _DAC2REFH_DAC2REF11_POSITION                        0x3
#define _DAC2REFH_DAC2REF11_SIZE                            0x1
#define _DAC2REFH_DAC2REF11_LENGTH                          0x1
#define _DAC2REFH_DAC2REF11_MASK                            0x8
#define _DAC2REFH_DAC2REF12_POSN                            0x4
#define _DAC2REFH_DAC2REF12_POSITION                        0x4
#define _DAC2REFH_DAC2REF12_SIZE                            0x1
#define _DAC2REFH_DAC2REF12_LENGTH                          0x1
#define _DAC2REFH_DAC2REF12_MASK                            0x10
#define _DAC2REFH_DAC2REF13_POSN                            0x5
#define _DAC2REFH_DAC2REF13_POSITION                        0x5
#define _DAC2REFH_DAC2REF13_SIZE                            0x1
#define _DAC2REFH_DAC2REF13_LENGTH                          0x1
#define _DAC2REFH_DAC2REF13_MASK                            0x20
#define _DAC2REFH_DAC2REF14_POSN                            0x6
#define _DAC2REFH_DAC2REF14_POSITION                        0x6
#define _DAC2REFH_DAC2REF14_SIZE                            0x1
#define _DAC2REFH_DAC2REF14_LENGTH                          0x1
#define _DAC2REFH_DAC2REF14_MASK                            0x40
#define _DAC2REFH_DAC2REF15_POSN                            0x7
#define _DAC2REFH_DAC2REF15_POSITION                        0x7
#define _DAC2REFH_DAC2REF15_SIZE                            0x1
#define _DAC2REFH_DAC2REF15_LENGTH                          0x1
#define _DAC2REFH_DAC2REF15_MASK                            0x80
#define _DAC2REFH_R8_POSN                                   0x0
#define _DAC2REFH_R8_POSITION                               0x0
#define _DAC2REFH_R8_SIZE                                   0x1
#define _DAC2REFH_R8_LENGTH                                 0x1
#define _DAC2REFH_R8_MASK                                   0x1
#define _DAC2REFH_R9_POSN                                   0x1
#define _DAC2REFH_R9_POSITION                               0x1
#define _DAC2REFH_R9_SIZE                                   0x1
#define _DAC2REFH_R9_LENGTH                                 0x1
#define _DAC2REFH_R9_MASK                                   0x2
#define _DAC2REFH_R10_POSN                                  0x2
#define _DAC2REFH_R10_POSITION                              0x2
#define _DAC2REFH_R10_SIZE                                  0x1
#define _DAC2REFH_R10_LENGTH                                0x1
#define _DAC2REFH_R10_MASK                                  0x4
#define _DAC2REFH_R11_POSN                                  0x3
#define _DAC2REFH_R11_POSITION                              0x3
#define _DAC2REFH_R11_SIZE                                  0x1
#define _DAC2REFH_R11_LENGTH                                0x1
#define _DAC2REFH_R11_MASK                                  0x8
#define _DAC2REFH_R12_POSN                                  0x4
#define _DAC2REFH_R12_POSITION                              0x4
#define _DAC2REFH_R12_SIZE                                  0x1
#define _DAC2REFH_R12_LENGTH                                0x1
#define _DAC2REFH_R12_MASK                                  0x10
#define _DAC2REFH_R13_POSN                                  0x5
#define _DAC2REFH_R13_POSITION                              0x5
#define _DAC2REFH_R13_SIZE                                  0x1
#define _DAC2REFH_R13_LENGTH                                0x1
#define _DAC2REFH_R13_MASK                                  0x20
#define _DAC2REFH_R14_POSN                                  0x6
#define _DAC2REFH_R14_POSITION                              0x6
#define _DAC2REFH_R14_SIZE                                  0x1
#define _DAC2REFH_R14_LENGTH                                0x1
#define _DAC2REFH_R14_MASK                                  0x40
#define _DAC2REFH_R15_POSN                                  0x7
#define _DAC2REFH_R15_POSITION                              0x7
#define _DAC2REFH_R15_SIZE                                  0x1
#define _DAC2REFH_R15_LENGTH                                0x1
#define _DAC2REFH_R15_MASK                                  0x80
#define _DAC2REFH_DAC2R8_POSN                               0x0
#define _DAC2REFH_DAC2R8_POSITION                           0x0
#define _DAC2REFH_DAC2R8_SIZE                               0x1
#define _DAC2REFH_DAC2R8_LENGTH                             0x1
#define _DAC2REFH_DAC2R8_MASK                               0x1
#define _DAC2REFH_DAC2R9_POSN                               0x1
#define _DAC2REFH_DAC2R9_POSITION                           0x1
#define _DAC2REFH_DAC2R9_SIZE                               0x1
#define _DAC2REFH_DAC2R9_LENGTH                             0x1
#define _DAC2REFH_DAC2R9_MASK                               0x2
#define _DAC2REFH_DAC2R10_POSN                              0x2
#define _DAC2REFH_DAC2R10_POSITION                          0x2
#define _DAC2REFH_DAC2R10_SIZE                              0x1
#define _DAC2REFH_DAC2R10_LENGTH                            0x1
#define _DAC2REFH_DAC2R10_MASK                              0x4
#define _DAC2REFH_DAC2R11_POSN                              0x3
#define _DAC2REFH_DAC2R11_POSITION                          0x3
#define _DAC2REFH_DAC2R11_SIZE                              0x1
#define _DAC2REFH_DAC2R11_LENGTH                            0x1
#define _DAC2REFH_DAC2R11_MASK                              0x8
#define _DAC2REFH_DAC2R12_POSN                              0x4
#define _DAC2REFH_DAC2R12_POSITION                          0x4
#define _DAC2REFH_DAC2R12_SIZE                              0x1
#define _DAC2REFH_DAC2R12_LENGTH                            0x1
#define _DAC2REFH_DAC2R12_MASK                              0x10
#define _DAC2REFH_DAC2R13_POSN                              0x5
#define _DAC2REFH_DAC2R13_POSITION                          0x5
#define _DAC2REFH_DAC2R13_SIZE                              0x1
#define _DAC2REFH_DAC2R13_LENGTH                            0x1
#define _DAC2REFH_DAC2R13_MASK                              0x20
#define _DAC2REFH_DAC2R14_POSN                              0x6
#define _DAC2REFH_DAC2R14_POSITION                          0x6
#define _DAC2REFH_DAC2R14_SIZE                              0x1
#define _DAC2REFH_DAC2R14_LENGTH                            0x1
#define _DAC2REFH_DAC2R14_MASK                              0x40
#define _DAC2REFH_DAC2R15_POSN                              0x7
#define _DAC2REFH_DAC2R15_POSITION                          0x7
#define _DAC2REFH_DAC2R15_SIZE                              0x1
#define _DAC2REFH_DAC2R15_LENGTH                            0x1
#define _DAC2REFH_DAC2R15_MASK                              0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned REF8                   :1;
        unsigned REF9                   :1;
        unsigned REF10                  :1;
        unsigned REF11                  :1;
        unsigned REF12                  :1;
        unsigned REF13                  :1;
        unsigned REF14                  :1;
        unsigned REF15                  :1;
    };
    struct {
        unsigned DAC2REF8               :1;
        unsigned DAC2REF9               :1;
        unsigned DAC2REF10              :1;
        unsigned DAC2REF11              :1;
        unsigned DAC2REF12              :1;
        unsigned DAC2REF13              :1;
        unsigned DAC2REF14              :1;
        unsigned DAC2REF15              :1;
    };
    struct {
        unsigned R8                     :1;
        unsigned R9                     :1;
        unsigned R10                    :1;
        unsigned R11                    :1;
        unsigned R12                    :1;
        unsigned R13                    :1;
        unsigned R14                    :1;
        unsigned R15                    :1;
    };
    struct {
        unsigned DAC2R8                 :1;
        unsigned DAC2R9                 :1;
        unsigned DAC2R10                :1;
        unsigned DAC2R11                :1;
        unsigned DAC2R12                :1;
        unsigned DAC2R13                :1;
        unsigned DAC2R14                :1;
        unsigned DAC2R15                :1;
    };
} DAC2CON2bits_t;
extern volatile DAC2CON2bits_t DAC2CON2bits __at(0x593);
// bitfield macros
#define _DAC2CON2_REF8_POSN                                 0x0
#define _DAC2CON2_REF8_POSITION                             0x0
#define _DAC2CON2_REF8_SIZE                                 0x1
#define _DAC2CON2_REF8_LENGTH                               0x1
#define _DAC2CON2_REF8_MASK                                 0x1
#define _DAC2CON2_REF9_POSN                                 0x1
#define _DAC2CON2_REF9_POSITION                             0x1
#define _DAC2CON2_REF9_SIZE                                 0x1
#define _DAC2CON2_REF9_LENGTH                               0x1
#define _DAC2CON2_REF9_MASK                                 0x2
#define _DAC2CON2_REF10_POSN                                0x2
#define _DAC2CON2_REF10_POSITION                            0x2
#define _DAC2CON2_REF10_SIZE                                0x1
#define _DAC2CON2_REF10_LENGTH                              0x1
#define _DAC2CON2_REF10_MASK                                0x4
#define _DAC2CON2_REF11_POSN                                0x3
#define _DAC2CON2_REF11_POSITION                            0x3
#define _DAC2CON2_REF11_SIZE                                0x1
#define _DAC2CON2_REF11_LENGTH                              0x1
#define _DAC2CON2_REF11_MASK                                0x8
#define _DAC2CON2_REF12_POSN                                0x4
#define _DAC2CON2_REF12_POSITION                            0x4
#define _DAC2CON2_REF12_SIZE                                0x1
#define _DAC2CON2_REF12_LENGTH                              0x1
#define _DAC2CON2_REF12_MASK                                0x10
#define _DAC2CON2_REF13_POSN                                0x5
#define _DAC2CON2_REF13_POSITION                            0x5
#define _DAC2CON2_REF13_SIZE                                0x1
#define _DAC2CON2_REF13_LENGTH                              0x1
#define _DAC2CON2_REF13_MASK                                0x20
#define _DAC2CON2_REF14_POSN                                0x6
#define _DAC2CON2_REF14_POSITION                            0x6
#define _DAC2CON2_REF14_SIZE                                0x1
#define _DAC2CON2_REF14_LENGTH                              0x1
#define _DAC2CON2_REF14_MASK                                0x40
#define _DAC2CON2_REF15_POSN                                0x7
#define _DAC2CON2_REF15_POSITION                            0x7
#define _DAC2CON2_REF15_SIZE                                0x1
#define _DAC2CON2_REF15_LENGTH                              0x1
#define _DAC2CON2_REF15_MASK                                0x80
#define _DAC2CON2_DAC2REF8_POSN                             0x0
#define _DAC2CON2_DAC2REF8_POSITION                         0x0
#define _DAC2CON2_DAC2REF8_SIZE                             0x1
#define _DAC2CON2_DAC2REF8_LENGTH                           0x1
#define _DAC2CON2_DAC2REF8_MASK                             0x1
#define _DAC2CON2_DAC2REF9_POSN                             0x1
#define _DAC2CON2_DAC2REF9_POSITION                         0x1
#define _DAC2CON2_DAC2REF9_SIZE                             0x1
#define _DAC2CON2_DAC2REF9_LENGTH                           0x1
#define _DAC2CON2_DAC2REF9_MASK                             0x2
#define _DAC2CON2_DAC2REF10_POSN                            0x2
#define _DAC2CON2_DAC2REF10_POSITION                        0x2
#define _DAC2CON2_DAC2REF10_SIZE                            0x1
#define _DAC2CON2_DAC2REF10_LENGTH                          0x1
#define _DAC2CON2_DAC2REF10_MASK                            0x4
#define _DAC2CON2_DAC2REF11_POSN                            0x3
#define _DAC2CON2_DAC2REF11_POSITION                        0x3
#define _DAC2CON2_DAC2REF11_SIZE                            0x1
#define _DAC2CON2_DAC2REF11_LENGTH                          0x1
#define _DAC2CON2_DAC2REF11_MASK                            0x8
#define _DAC2CON2_DAC2REF12_POSN                            0x4
#define _DAC2CON2_DAC2REF12_POSITION                        0x4
#define _DAC2CON2_DAC2REF12_SIZE                            0x1
#define _DAC2CON2_DAC2REF12_LENGTH                          0x1
#define _DAC2CON2_DAC2REF12_MASK                            0x10
#define _DAC2CON2_DAC2REF13_POSN                            0x5
#define _DAC2CON2_DAC2REF13_POSITION                        0x5
#define _DAC2CON2_DAC2REF13_SIZE                            0x1
#define _DAC2CON2_DAC2REF13_LENGTH                          0x1
#define _DAC2CON2_DAC2REF13_MASK                            0x20
#define _DAC2CON2_DAC2REF14_POSN                            0x6
#define _DAC2CON2_DAC2REF14_POSITION                        0x6
#define _DAC2CON2_DAC2REF14_SIZE                            0x1
#define _DAC2CON2_DAC2REF14_LENGTH                          0x1
#define _DAC2CON2_DAC2REF14_MASK                            0x40
#define _DAC2CON2_DAC2REF15_POSN                            0x7
#define _DAC2CON2_DAC2REF15_POSITION                        0x7
#define _DAC2CON2_DAC2REF15_SIZE                            0x1
#define _DAC2CON2_DAC2REF15_LENGTH                          0x1
#define _DAC2CON2_DAC2REF15_MASK                            0x80
#define _DAC2CON2_R8_POSN                                   0x0
#define _DAC2CON2_R8_POSITION                               0x0
#define _DAC2CON2_R8_SIZE                                   0x1
#define _DAC2CON2_R8_LENGTH                                 0x1
#define _DAC2CON2_R8_MASK                                   0x1
#define _DAC2CON2_R9_POSN                                   0x1
#define _DAC2CON2_R9_POSITION                               0x1
#define _DAC2CON2_R9_SIZE                                   0x1
#define _DAC2CON2_R9_LENGTH                                 0x1
#define _DAC2CON2_R9_MASK                                   0x2
#define _DAC2CON2_R10_POSN                                  0x2
#define _DAC2CON2_R10_POSITION                              0x2
#define _DAC2CON2_R10_SIZE                                  0x1
#define _DAC2CON2_R10_LENGTH                                0x1
#define _DAC2CON2_R10_MASK                                  0x4
#define _DAC2CON2_R11_POSN                                  0x3
#define _DAC2CON2_R11_POSITION                              0x3
#define _DAC2CON2_R11_SIZE                                  0x1
#define _DAC2CON2_R11_LENGTH                                0x1
#define _DAC2CON2_R11_MASK                                  0x8
#define _DAC2CON2_R12_POSN                                  0x4
#define _DAC2CON2_R12_POSITION                              0x4
#define _DAC2CON2_R12_SIZE                                  0x1
#define _DAC2CON2_R12_LENGTH                                0x1
#define _DAC2CON2_R12_MASK                                  0x10
#define _DAC2CON2_R13_POSN                                  0x5
#define _DAC2CON2_R13_POSITION                              0x5
#define _DAC2CON2_R13_SIZE                                  0x1
#define _DAC2CON2_R13_LENGTH                                0x1
#define _DAC2CON2_R13_MASK                                  0x20
#define _DAC2CON2_R14_POSN                                  0x6
#define _DAC2CON2_R14_POSITION                              0x6
#define _DAC2CON2_R14_SIZE                                  0x1
#define _DAC2CON2_R14_LENGTH                                0x1
#define _DAC2CON2_R14_MASK                                  0x40
#define _DAC2CON2_R15_POSN                                  0x7
#define _DAC2CON2_R15_POSITION                              0x7
#define _DAC2CON2_R15_SIZE                                  0x1
#define _DAC2CON2_R15_LENGTH                                0x1
#define _DAC2CON2_R15_MASK                                  0x80
#define _DAC2CON2_DAC2R8_POSN                               0x0
#define _DAC2CON2_DAC2R8_POSITION                           0x0
#define _DAC2CON2_DAC2R8_SIZE                               0x1
#define _DAC2CON2_DAC2R8_LENGTH                             0x1
#define _DAC2CON2_DAC2R8_MASK                               0x1
#define _DAC2CON2_DAC2R9_POSN                               0x1
#define _DAC2CON2_DAC2R9_POSITION                           0x1
#define _DAC2CON2_DAC2R9_SIZE                               0x1
#define _DAC2CON2_DAC2R9_LENGTH                             0x1
#define _DAC2CON2_DAC2R9_MASK                               0x2
#define _DAC2CON2_DAC2R10_POSN                              0x2
#define _DAC2CON2_DAC2R10_POSITION                          0x2
#define _DAC2CON2_DAC2R10_SIZE                              0x1
#define _DAC2CON2_DAC2R10_LENGTH                            0x1
#define _DAC2CON2_DAC2R10_MASK                              0x4
#define _DAC2CON2_DAC2R11_POSN                              0x3
#define _DAC2CON2_DAC2R11_POSITION                          0x3
#define _DAC2CON2_DAC2R11_SIZE                              0x1
#define _DAC2CON2_DAC2R11_LENGTH                            0x1
#define _DAC2CON2_DAC2R11_MASK                              0x8
#define _DAC2CON2_DAC2R12_POSN                              0x4
#define _DAC2CON2_DAC2R12_POSITION                          0x4
#define _DAC2CON2_DAC2R12_SIZE                              0x1
#define _DAC2CON2_DAC2R12_LENGTH                            0x1
#define _DAC2CON2_DAC2R12_MASK                              0x10
#define _DAC2CON2_DAC2R13_POSN                              0x5
#define _DAC2CON2_DAC2R13_POSITION                          0x5
#define _DAC2CON2_DAC2R13_SIZE                              0x1
#define _DAC2CON2_DAC2R13_LENGTH                            0x1
#define _DAC2CON2_DAC2R13_MASK                              0x20
#define _DAC2CON2_DAC2R14_POSN                              0x6
#define _DAC2CON2_DAC2R14_POSITION                          0x6
#define _DAC2CON2_DAC2R14_SIZE                              0x1
#define _DAC2CON2_DAC2R14_LENGTH                            0x1
#define _DAC2CON2_DAC2R14_MASK                              0x40
#define _DAC2CON2_DAC2R15_POSN                              0x7
#define _DAC2CON2_DAC2R15_POSITION                          0x7
#define _DAC2CON2_DAC2R15_SIZE                              0x1
#define _DAC2CON2_DAC2R15_LENGTH                            0x1
#define _DAC2CON2_DAC2R15_MASK                              0x80

// Register: DAC3CON0
#define DAC3CON0 DAC3CON0
extern volatile unsigned char           DAC3CON0            __at(0x594);
#ifndef _LIB_BUILD
asm("DAC3CON0 equ 0594h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NSS                    :2;
        unsigned PSS                    :2;
        unsigned OE2                    :1;
        unsigned OE1                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned NSS0                   :1;
        unsigned NSS1                   :1;
        unsigned PSS0                   :1;
        unsigned PSS1                   :1;
    };
    struct {
        unsigned DACNSS                 :2;
        unsigned DACPSS                 :2;
        unsigned DACOE2                 :1;
        unsigned DACOE1                 :1;
        unsigned                        :1;
        unsigned DACEN                  :1;
    };
    struct {
        unsigned DACNSS0                :1;
        unsigned DACNSS1                :1;
        unsigned DACPSS0                :1;
        unsigned DACPSS1                :1;
    };
    struct {
        unsigned DAC3NSS                :2;
        unsigned DAC3PSS                :2;
        unsigned DAC3OE2                :1;
        unsigned DAC3OE1                :1;
        unsigned                        :1;
        unsigned DAC3EN                 :1;
    };
    struct {
        unsigned DAC3NSS0               :1;
        unsigned DAC3NSS1               :1;
        unsigned DAC3PSS0               :1;
        unsigned DAC3PSS1               :1;
    };
} DAC3CON0bits_t;
extern volatile DAC3CON0bits_t DAC3CON0bits __at(0x594);
// bitfield macros
#define _DAC3CON0_NSS_POSN                                  0x0
#define _DAC3CON0_NSS_POSITION                              0x0
#define _DAC3CON0_NSS_SIZE                                  0x2
#define _DAC3CON0_NSS_LENGTH                                0x2
#define _DAC3CON0_NSS_MASK                                  0x3
#define _DAC3CON0_PSS_POSN                                  0x2
#define _DAC3CON0_PSS_POSITION                              0x2
#define _DAC3CON0_PSS_SIZE                                  0x2
#define _DAC3CON0_PSS_LENGTH                                0x2
#define _DAC3CON0_PSS_MASK                                  0xC
#define _DAC3CON0_OE2_POSN                                  0x4
#define _DAC3CON0_OE2_POSITION                              0x4
#define _DAC3CON0_OE2_SIZE                                  0x1
#define _DAC3CON0_OE2_LENGTH                                0x1
#define _DAC3CON0_OE2_MASK                                  0x10
#define _DAC3CON0_OE1_POSN                                  0x5
#define _DAC3CON0_OE1_POSITION                              0x5
#define _DAC3CON0_OE1_SIZE                                  0x1
#define _DAC3CON0_OE1_LENGTH                                0x1
#define _DAC3CON0_OE1_MASK                                  0x20
#define _DAC3CON0_EN_POSN                                   0x7
#define _DAC3CON0_EN_POSITION                               0x7
#define _DAC3CON0_EN_SIZE                                   0x1
#define _DAC3CON0_EN_LENGTH                                 0x1
#define _DAC3CON0_EN_MASK                                   0x80
#define _DAC3CON0_NSS0_POSN                                 0x0
#define _DAC3CON0_NSS0_POSITION                             0x0
#define _DAC3CON0_NSS0_SIZE                                 0x1
#define _DAC3CON0_NSS0_LENGTH                               0x1
#define _DAC3CON0_NSS0_MASK                                 0x1
#define _DAC3CON0_NSS1_POSN                                 0x1
#define _DAC3CON0_NSS1_POSITION                             0x1
#define _DAC3CON0_NSS1_SIZE                                 0x1
#define _DAC3CON0_NSS1_LENGTH                               0x1
#define _DAC3CON0_NSS1_MASK                                 0x2
#define _DAC3CON0_PSS0_POSN                                 0x2
#define _DAC3CON0_PSS0_POSITION                             0x2
#define _DAC3CON0_PSS0_SIZE                                 0x1
#define _DAC3CON0_PSS0_LENGTH                               0x1
#define _DAC3CON0_PSS0_MASK                                 0x4
#define _DAC3CON0_PSS1_POSN                                 0x3
#define _DAC3CON0_PSS1_POSITION                             0x3
#define _DAC3CON0_PSS1_SIZE                                 0x1
#define _DAC3CON0_PSS1_LENGTH                               0x1
#define _DAC3CON0_PSS1_MASK                                 0x8
#define _DAC3CON0_DACNSS_POSN                               0x0
#define _DAC3CON0_DACNSS_POSITION                           0x0
#define _DAC3CON0_DACNSS_SIZE                               0x2
#define _DAC3CON0_DACNSS_LENGTH                             0x2
#define _DAC3CON0_DACNSS_MASK                               0x3
#define _DAC3CON0_DACPSS_POSN                               0x2
#define _DAC3CON0_DACPSS_POSITION                           0x2
#define _DAC3CON0_DACPSS_SIZE                               0x2
#define _DAC3CON0_DACPSS_LENGTH                             0x2
#define _DAC3CON0_DACPSS_MASK                               0xC
#define _DAC3CON0_DACOE2_POSN                               0x4
#define _DAC3CON0_DACOE2_POSITION                           0x4
#define _DAC3CON0_DACOE2_SIZE                               0x1
#define _DAC3CON0_DACOE2_LENGTH                             0x1
#define _DAC3CON0_DACOE2_MASK                               0x10
#define _DAC3CON0_DACOE1_POSN                               0x5
#define _DAC3CON0_DACOE1_POSITION                           0x5
#define _DAC3CON0_DACOE1_SIZE                               0x1
#define _DAC3CON0_DACOE1_LENGTH                             0x1
#define _DAC3CON0_DACOE1_MASK                               0x20
#define _DAC3CON0_DACEN_POSN                                0x7
#define _DAC3CON0_DACEN_POSITION                            0x7
#define _DAC3CON0_DACEN_SIZE                                0x1
#define _DAC3CON0_DACEN_LENGTH                              0x1
#define _DAC3CON0_DACEN_MASK                                0x80
#define _DAC3CON0_DACNSS0_POSN                              0x0
#define _DAC3CON0_DACNSS0_POSITION                          0x0
#define _DAC3CON0_DACNSS0_SIZE                              0x1
#define _DAC3CON0_DACNSS0_LENGTH                            0x1
#define _DAC3CON0_DACNSS0_MASK                              0x1
#define _DAC3CON0_DACNSS1_POSN                              0x1
#define _DAC3CON0_DACNSS1_POSITION                          0x1
#define _DAC3CON0_DACNSS1_SIZE                              0x1
#define _DAC3CON0_DACNSS1_LENGTH                            0x1
#define _DAC3CON0_DACNSS1_MASK                              0x2
#define _DAC3CON0_DACPSS0_POSN                              0x2
#define _DAC3CON0_DACPSS0_POSITION                          0x2
#define _DAC3CON0_DACPSS0_SIZE                              0x1
#define _DAC3CON0_DACPSS0_LENGTH                            0x1
#define _DAC3CON0_DACPSS0_MASK                              0x4
#define _DAC3CON0_DACPSS1_POSN                              0x3
#define _DAC3CON0_DACPSS1_POSITION                          0x3
#define _DAC3CON0_DACPSS1_SIZE                              0x1
#define _DAC3CON0_DACPSS1_LENGTH                            0x1
#define _DAC3CON0_DACPSS1_MASK                              0x8
#define _DAC3CON0_DAC3NSS_POSN                              0x0
#define _DAC3CON0_DAC3NSS_POSITION                          0x0
#define _DAC3CON0_DAC3NSS_SIZE                              0x2
#define _DAC3CON0_DAC3NSS_LENGTH                            0x2
#define _DAC3CON0_DAC3NSS_MASK                              0x3
#define _DAC3CON0_DAC3PSS_POSN                              0x2
#define _DAC3CON0_DAC3PSS_POSITION                          0x2
#define _DAC3CON0_DAC3PSS_SIZE                              0x2
#define _DAC3CON0_DAC3PSS_LENGTH                            0x2
#define _DAC3CON0_DAC3PSS_MASK                              0xC
#define _DAC3CON0_DAC3OE2_POSN                              0x4
#define _DAC3CON0_DAC3OE2_POSITION                          0x4
#define _DAC3CON0_DAC3OE2_SIZE                              0x1
#define _DAC3CON0_DAC3OE2_LENGTH                            0x1
#define _DAC3CON0_DAC3OE2_MASK                              0x10
#define _DAC3CON0_DAC3OE1_POSN                              0x5
#define _DAC3CON0_DAC3OE1_POSITION                          0x5
#define _DAC3CON0_DAC3OE1_SIZE                              0x1
#define _DAC3CON0_DAC3OE1_LENGTH                            0x1
#define _DAC3CON0_DAC3OE1_MASK                              0x20
#define _DAC3CON0_DAC3EN_POSN                               0x7
#define _DAC3CON0_DAC3EN_POSITION                           0x7
#define _DAC3CON0_DAC3EN_SIZE                               0x1
#define _DAC3CON0_DAC3EN_LENGTH                             0x1
#define _DAC3CON0_DAC3EN_MASK                               0x80
#define _DAC3CON0_DAC3NSS0_POSN                             0x0
#define _DAC3CON0_DAC3NSS0_POSITION                         0x0
#define _DAC3CON0_DAC3NSS0_SIZE                             0x1
#define _DAC3CON0_DAC3NSS0_LENGTH                           0x1
#define _DAC3CON0_DAC3NSS0_MASK                             0x1
#define _DAC3CON0_DAC3NSS1_POSN                             0x1
#define _DAC3CON0_DAC3NSS1_POSITION                         0x1
#define _DAC3CON0_DAC3NSS1_SIZE                             0x1
#define _DAC3CON0_DAC3NSS1_LENGTH                           0x1
#define _DAC3CON0_DAC3NSS1_MASK                             0x2
#define _DAC3CON0_DAC3PSS0_POSN                             0x2
#define _DAC3CON0_DAC3PSS0_POSITION                         0x2
#define _DAC3CON0_DAC3PSS0_SIZE                             0x1
#define _DAC3CON0_DAC3PSS0_LENGTH                           0x1
#define _DAC3CON0_DAC3PSS0_MASK                             0x4
#define _DAC3CON0_DAC3PSS1_POSN                             0x3
#define _DAC3CON0_DAC3PSS1_POSITION                         0x3
#define _DAC3CON0_DAC3PSS1_SIZE                             0x1
#define _DAC3CON0_DAC3PSS1_LENGTH                           0x1
#define _DAC3CON0_DAC3PSS1_MASK                             0x8

// Register: DAC3REF
#define DAC3REF DAC3REF
extern volatile unsigned char           DAC3REF             __at(0x595);
#ifndef _LIB_BUILD
asm("DAC3REF equ 0595h");
#endif
// aliases
extern volatile unsigned char           DAC3CON1            __at(0x595);
#ifndef _LIB_BUILD
asm("DAC3CON1 equ 0595h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DACR                   :5;
    };
    struct {
        unsigned DACR0                  :1;
        unsigned DACR1                  :1;
        unsigned DACR2                  :1;
        unsigned DACR3                  :1;
        unsigned DACR4                  :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
    };
    struct {
        unsigned DAC3R                  :5;
    };
    struct {
        unsigned DAC3R0                 :1;
        unsigned DAC3R1                 :1;
        unsigned DAC3R2                 :1;
        unsigned DAC3R3                 :1;
        unsigned DAC3R4                 :1;
    };
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
    };
    struct {
        unsigned DAC3REF0               :1;
        unsigned DAC3REF1               :1;
        unsigned DAC3REF2               :1;
        unsigned DAC3REF3               :1;
        unsigned DAC3REF4               :1;
    };
} DAC3REFbits_t;
extern volatile DAC3REFbits_t DAC3REFbits __at(0x595);
// bitfield macros
#define _DAC3REF_DACR_POSN                                  0x0
#define _DAC3REF_DACR_POSITION                              0x0
#define _DAC3REF_DACR_SIZE                                  0x5
#define _DAC3REF_DACR_LENGTH                                0x5
#define _DAC3REF_DACR_MASK                                  0x1F
#define _DAC3REF_DACR0_POSN                                 0x0
#define _DAC3REF_DACR0_POSITION                             0x0
#define _DAC3REF_DACR0_SIZE                                 0x1
#define _DAC3REF_DACR0_LENGTH                               0x1
#define _DAC3REF_DACR0_MASK                                 0x1
#define _DAC3REF_DACR1_POSN                                 0x1
#define _DAC3REF_DACR1_POSITION                             0x1
#define _DAC3REF_DACR1_SIZE                                 0x1
#define _DAC3REF_DACR1_LENGTH                               0x1
#define _DAC3REF_DACR1_MASK                                 0x2
#define _DAC3REF_DACR2_POSN                                 0x2
#define _DAC3REF_DACR2_POSITION                             0x2
#define _DAC3REF_DACR2_SIZE                                 0x1
#define _DAC3REF_DACR2_LENGTH                               0x1
#define _DAC3REF_DACR2_MASK                                 0x4
#define _DAC3REF_DACR3_POSN                                 0x3
#define _DAC3REF_DACR3_POSITION                             0x3
#define _DAC3REF_DACR3_SIZE                                 0x1
#define _DAC3REF_DACR3_LENGTH                               0x1
#define _DAC3REF_DACR3_MASK                                 0x8
#define _DAC3REF_DACR4_POSN                                 0x4
#define _DAC3REF_DACR4_POSITION                             0x4
#define _DAC3REF_DACR4_SIZE                                 0x1
#define _DAC3REF_DACR4_LENGTH                               0x1
#define _DAC3REF_DACR4_MASK                                 0x10
#define _DAC3REF_R0_POSN                                    0x0
#define _DAC3REF_R0_POSITION                                0x0
#define _DAC3REF_R0_SIZE                                    0x1
#define _DAC3REF_R0_LENGTH                                  0x1
#define _DAC3REF_R0_MASK                                    0x1
#define _DAC3REF_R1_POSN                                    0x1
#define _DAC3REF_R1_POSITION                                0x1
#define _DAC3REF_R1_SIZE                                    0x1
#define _DAC3REF_R1_LENGTH                                  0x1
#define _DAC3REF_R1_MASK                                    0x2
#define _DAC3REF_R2_POSN                                    0x2
#define _DAC3REF_R2_POSITION                                0x2
#define _DAC3REF_R2_SIZE                                    0x1
#define _DAC3REF_R2_LENGTH                                  0x1
#define _DAC3REF_R2_MASK                                    0x4
#define _DAC3REF_R3_POSN                                    0x3
#define _DAC3REF_R3_POSITION                                0x3
#define _DAC3REF_R3_SIZE                                    0x1
#define _DAC3REF_R3_LENGTH                                  0x1
#define _DAC3REF_R3_MASK                                    0x8
#define _DAC3REF_R4_POSN                                    0x4
#define _DAC3REF_R4_POSITION                                0x4
#define _DAC3REF_R4_SIZE                                    0x1
#define _DAC3REF_R4_LENGTH                                  0x1
#define _DAC3REF_R4_MASK                                    0x10
#define _DAC3REF_DAC3R_POSN                                 0x0
#define _DAC3REF_DAC3R_POSITION                             0x0
#define _DAC3REF_DAC3R_SIZE                                 0x5
#define _DAC3REF_DAC3R_LENGTH                               0x5
#define _DAC3REF_DAC3R_MASK                                 0x1F
#define _DAC3REF_DAC3R0_POSN                                0x0
#define _DAC3REF_DAC3R0_POSITION                            0x0
#define _DAC3REF_DAC3R0_SIZE                                0x1
#define _DAC3REF_DAC3R0_LENGTH                              0x1
#define _DAC3REF_DAC3R0_MASK                                0x1
#define _DAC3REF_DAC3R1_POSN                                0x1
#define _DAC3REF_DAC3R1_POSITION                            0x1
#define _DAC3REF_DAC3R1_SIZE                                0x1
#define _DAC3REF_DAC3R1_LENGTH                              0x1
#define _DAC3REF_DAC3R1_MASK                                0x2
#define _DAC3REF_DAC3R2_POSN                                0x2
#define _DAC3REF_DAC3R2_POSITION                            0x2
#define _DAC3REF_DAC3R2_SIZE                                0x1
#define _DAC3REF_DAC3R2_LENGTH                              0x1
#define _DAC3REF_DAC3R2_MASK                                0x4
#define _DAC3REF_DAC3R3_POSN                                0x3
#define _DAC3REF_DAC3R3_POSITION                            0x3
#define _DAC3REF_DAC3R3_SIZE                                0x1
#define _DAC3REF_DAC3R3_LENGTH                              0x1
#define _DAC3REF_DAC3R3_MASK                                0x8
#define _DAC3REF_DAC3R4_POSN                                0x4
#define _DAC3REF_DAC3R4_POSITION                            0x4
#define _DAC3REF_DAC3R4_SIZE                                0x1
#define _DAC3REF_DAC3R4_LENGTH                              0x1
#define _DAC3REF_DAC3R4_MASK                                0x10
#define _DAC3REF_REF0_POSN                                  0x0
#define _DAC3REF_REF0_POSITION                              0x0
#define _DAC3REF_REF0_SIZE                                  0x1
#define _DAC3REF_REF0_LENGTH                                0x1
#define _DAC3REF_REF0_MASK                                  0x1
#define _DAC3REF_REF1_POSN                                  0x1
#define _DAC3REF_REF1_POSITION                              0x1
#define _DAC3REF_REF1_SIZE                                  0x1
#define _DAC3REF_REF1_LENGTH                                0x1
#define _DAC3REF_REF1_MASK                                  0x2
#define _DAC3REF_REF2_POSN                                  0x2
#define _DAC3REF_REF2_POSITION                              0x2
#define _DAC3REF_REF2_SIZE                                  0x1
#define _DAC3REF_REF2_LENGTH                                0x1
#define _DAC3REF_REF2_MASK                                  0x4
#define _DAC3REF_REF3_POSN                                  0x3
#define _DAC3REF_REF3_POSITION                              0x3
#define _DAC3REF_REF3_SIZE                                  0x1
#define _DAC3REF_REF3_LENGTH                                0x1
#define _DAC3REF_REF3_MASK                                  0x8
#define _DAC3REF_REF4_POSN                                  0x4
#define _DAC3REF_REF4_POSITION                              0x4
#define _DAC3REF_REF4_SIZE                                  0x1
#define _DAC3REF_REF4_LENGTH                                0x1
#define _DAC3REF_REF4_MASK                                  0x10
#define _DAC3REF_DAC3REF0_POSN                              0x0
#define _DAC3REF_DAC3REF0_POSITION                          0x0
#define _DAC3REF_DAC3REF0_SIZE                              0x1
#define _DAC3REF_DAC3REF0_LENGTH                            0x1
#define _DAC3REF_DAC3REF0_MASK                              0x1
#define _DAC3REF_DAC3REF1_POSN                              0x1
#define _DAC3REF_DAC3REF1_POSITION                          0x1
#define _DAC3REF_DAC3REF1_SIZE                              0x1
#define _DAC3REF_DAC3REF1_LENGTH                            0x1
#define _DAC3REF_DAC3REF1_MASK                              0x2
#define _DAC3REF_DAC3REF2_POSN                              0x2
#define _DAC3REF_DAC3REF2_POSITION                          0x2
#define _DAC3REF_DAC3REF2_SIZE                              0x1
#define _DAC3REF_DAC3REF2_LENGTH                            0x1
#define _DAC3REF_DAC3REF2_MASK                              0x4
#define _DAC3REF_DAC3REF3_POSN                              0x3
#define _DAC3REF_DAC3REF3_POSITION                          0x3
#define _DAC3REF_DAC3REF3_SIZE                              0x1
#define _DAC3REF_DAC3REF3_LENGTH                            0x1
#define _DAC3REF_DAC3REF3_MASK                              0x8
#define _DAC3REF_DAC3REF4_POSN                              0x4
#define _DAC3REF_DAC3REF4_POSITION                          0x4
#define _DAC3REF_DAC3REF4_SIZE                              0x1
#define _DAC3REF_DAC3REF4_LENGTH                            0x1
#define _DAC3REF_DAC3REF4_MASK                              0x10
// alias bitfield definitions
typedef union {
    struct {
        unsigned DACR                   :5;
    };
    struct {
        unsigned DACR0                  :1;
        unsigned DACR1                  :1;
        unsigned DACR2                  :1;
        unsigned DACR3                  :1;
        unsigned DACR4                  :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
    };
    struct {
        unsigned DAC3R                  :5;
    };
    struct {
        unsigned DAC3R0                 :1;
        unsigned DAC3R1                 :1;
        unsigned DAC3R2                 :1;
        unsigned DAC3R3                 :1;
        unsigned DAC3R4                 :1;
    };
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
    };
    struct {
        unsigned DAC3REF0               :1;
        unsigned DAC3REF1               :1;
        unsigned DAC3REF2               :1;
        unsigned DAC3REF3               :1;
        unsigned DAC3REF4               :1;
    };
} DAC3CON1bits_t;
extern volatile DAC3CON1bits_t DAC3CON1bits __at(0x595);
// bitfield macros
#define _DAC3CON1_DACR_POSN                                 0x0
#define _DAC3CON1_DACR_POSITION                             0x0
#define _DAC3CON1_DACR_SIZE                                 0x5
#define _DAC3CON1_DACR_LENGTH                               0x5
#define _DAC3CON1_DACR_MASK                                 0x1F
#define _DAC3CON1_DACR0_POSN                                0x0
#define _DAC3CON1_DACR0_POSITION                            0x0
#define _DAC3CON1_DACR0_SIZE                                0x1
#define _DAC3CON1_DACR0_LENGTH                              0x1
#define _DAC3CON1_DACR0_MASK                                0x1
#define _DAC3CON1_DACR1_POSN                                0x1
#define _DAC3CON1_DACR1_POSITION                            0x1
#define _DAC3CON1_DACR1_SIZE                                0x1
#define _DAC3CON1_DACR1_LENGTH                              0x1
#define _DAC3CON1_DACR1_MASK                                0x2
#define _DAC3CON1_DACR2_POSN                                0x2
#define _DAC3CON1_DACR2_POSITION                            0x2
#define _DAC3CON1_DACR2_SIZE                                0x1
#define _DAC3CON1_DACR2_LENGTH                              0x1
#define _DAC3CON1_DACR2_MASK                                0x4
#define _DAC3CON1_DACR3_POSN                                0x3
#define _DAC3CON1_DACR3_POSITION                            0x3
#define _DAC3CON1_DACR3_SIZE                                0x1
#define _DAC3CON1_DACR3_LENGTH                              0x1
#define _DAC3CON1_DACR3_MASK                                0x8
#define _DAC3CON1_DACR4_POSN                                0x4
#define _DAC3CON1_DACR4_POSITION                            0x4
#define _DAC3CON1_DACR4_SIZE                                0x1
#define _DAC3CON1_DACR4_LENGTH                              0x1
#define _DAC3CON1_DACR4_MASK                                0x10
#define _DAC3CON1_R0_POSN                                   0x0
#define _DAC3CON1_R0_POSITION                               0x0
#define _DAC3CON1_R0_SIZE                                   0x1
#define _DAC3CON1_R0_LENGTH                                 0x1
#define _DAC3CON1_R0_MASK                                   0x1
#define _DAC3CON1_R1_POSN                                   0x1
#define _DAC3CON1_R1_POSITION                               0x1
#define _DAC3CON1_R1_SIZE                                   0x1
#define _DAC3CON1_R1_LENGTH                                 0x1
#define _DAC3CON1_R1_MASK                                   0x2
#define _DAC3CON1_R2_POSN                                   0x2
#define _DAC3CON1_R2_POSITION                               0x2
#define _DAC3CON1_R2_SIZE                                   0x1
#define _DAC3CON1_R2_LENGTH                                 0x1
#define _DAC3CON1_R2_MASK                                   0x4
#define _DAC3CON1_R3_POSN                                   0x3
#define _DAC3CON1_R3_POSITION                               0x3
#define _DAC3CON1_R3_SIZE                                   0x1
#define _DAC3CON1_R3_LENGTH                                 0x1
#define _DAC3CON1_R3_MASK                                   0x8
#define _DAC3CON1_R4_POSN                                   0x4
#define _DAC3CON1_R4_POSITION                               0x4
#define _DAC3CON1_R4_SIZE                                   0x1
#define _DAC3CON1_R4_LENGTH                                 0x1
#define _DAC3CON1_R4_MASK                                   0x10
#define _DAC3CON1_DAC3R_POSN                                0x0
#define _DAC3CON1_DAC3R_POSITION                            0x0
#define _DAC3CON1_DAC3R_SIZE                                0x5
#define _DAC3CON1_DAC3R_LENGTH                              0x5
#define _DAC3CON1_DAC3R_MASK                                0x1F
#define _DAC3CON1_DAC3R0_POSN                               0x0
#define _DAC3CON1_DAC3R0_POSITION                           0x0
#define _DAC3CON1_DAC3R0_SIZE                               0x1
#define _DAC3CON1_DAC3R0_LENGTH                             0x1
#define _DAC3CON1_DAC3R0_MASK                               0x1
#define _DAC3CON1_DAC3R1_POSN                               0x1
#define _DAC3CON1_DAC3R1_POSITION                           0x1
#define _DAC3CON1_DAC3R1_SIZE                               0x1
#define _DAC3CON1_DAC3R1_LENGTH                             0x1
#define _DAC3CON1_DAC3R1_MASK                               0x2
#define _DAC3CON1_DAC3R2_POSN                               0x2
#define _DAC3CON1_DAC3R2_POSITION                           0x2
#define _DAC3CON1_DAC3R2_SIZE                               0x1
#define _DAC3CON1_DAC3R2_LENGTH                             0x1
#define _DAC3CON1_DAC3R2_MASK                               0x4
#define _DAC3CON1_DAC3R3_POSN                               0x3
#define _DAC3CON1_DAC3R3_POSITION                           0x3
#define _DAC3CON1_DAC3R3_SIZE                               0x1
#define _DAC3CON1_DAC3R3_LENGTH                             0x1
#define _DAC3CON1_DAC3R3_MASK                               0x8
#define _DAC3CON1_DAC3R4_POSN                               0x4
#define _DAC3CON1_DAC3R4_POSITION                           0x4
#define _DAC3CON1_DAC3R4_SIZE                               0x1
#define _DAC3CON1_DAC3R4_LENGTH                             0x1
#define _DAC3CON1_DAC3R4_MASK                               0x10
#define _DAC3CON1_REF0_POSN                                 0x0
#define _DAC3CON1_REF0_POSITION                             0x0
#define _DAC3CON1_REF0_SIZE                                 0x1
#define _DAC3CON1_REF0_LENGTH                               0x1
#define _DAC3CON1_REF0_MASK                                 0x1
#define _DAC3CON1_REF1_POSN                                 0x1
#define _DAC3CON1_REF1_POSITION                             0x1
#define _DAC3CON1_REF1_SIZE                                 0x1
#define _DAC3CON1_REF1_LENGTH                               0x1
#define _DAC3CON1_REF1_MASK                                 0x2
#define _DAC3CON1_REF2_POSN                                 0x2
#define _DAC3CON1_REF2_POSITION                             0x2
#define _DAC3CON1_REF2_SIZE                                 0x1
#define _DAC3CON1_REF2_LENGTH                               0x1
#define _DAC3CON1_REF2_MASK                                 0x4
#define _DAC3CON1_REF3_POSN                                 0x3
#define _DAC3CON1_REF3_POSITION                             0x3
#define _DAC3CON1_REF3_SIZE                                 0x1
#define _DAC3CON1_REF3_LENGTH                               0x1
#define _DAC3CON1_REF3_MASK                                 0x8
#define _DAC3CON1_REF4_POSN                                 0x4
#define _DAC3CON1_REF4_POSITION                             0x4
#define _DAC3CON1_REF4_SIZE                                 0x1
#define _DAC3CON1_REF4_LENGTH                               0x1
#define _DAC3CON1_REF4_MASK                                 0x10
#define _DAC3CON1_DAC3REF0_POSN                             0x0
#define _DAC3CON1_DAC3REF0_POSITION                         0x0
#define _DAC3CON1_DAC3REF0_SIZE                             0x1
#define _DAC3CON1_DAC3REF0_LENGTH                           0x1
#define _DAC3CON1_DAC3REF0_MASK                             0x1
#define _DAC3CON1_DAC3REF1_POSN                             0x1
#define _DAC3CON1_DAC3REF1_POSITION                         0x1
#define _DAC3CON1_DAC3REF1_SIZE                             0x1
#define _DAC3CON1_DAC3REF1_LENGTH                           0x1
#define _DAC3CON1_DAC3REF1_MASK                             0x2
#define _DAC3CON1_DAC3REF2_POSN                             0x2
#define _DAC3CON1_DAC3REF2_POSITION                         0x2
#define _DAC3CON1_DAC3REF2_SIZE                             0x1
#define _DAC3CON1_DAC3REF2_LENGTH                           0x1
#define _DAC3CON1_DAC3REF2_MASK                             0x4
#define _DAC3CON1_DAC3REF3_POSN                             0x3
#define _DAC3CON1_DAC3REF3_POSITION                         0x3
#define _DAC3CON1_DAC3REF3_SIZE                             0x1
#define _DAC3CON1_DAC3REF3_LENGTH                           0x1
#define _DAC3CON1_DAC3REF3_MASK                             0x8
#define _DAC3CON1_DAC3REF4_POSN                             0x4
#define _DAC3CON1_DAC3REF4_POSITION                         0x4
#define _DAC3CON1_DAC3REF4_SIZE                             0x1
#define _DAC3CON1_DAC3REF4_LENGTH                           0x1
#define _DAC3CON1_DAC3REF4_MASK                             0x10

// Register: DAC4CON0
#define DAC4CON0 DAC4CON0
extern volatile unsigned char           DAC4CON0            __at(0x596);
#ifndef _LIB_BUILD
asm("DAC4CON0 equ 0596h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NSS                    :2;
        unsigned PSS                    :2;
        unsigned OE2                    :1;
        unsigned OE1                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned NSS0                   :1;
        unsigned NSS1                   :1;
        unsigned PSS0                   :1;
        unsigned PSS1                   :1;
    };
    struct {
        unsigned DACNSS                 :2;
        unsigned DACPSS                 :2;
        unsigned DACOE2                 :1;
        unsigned DACOE1                 :1;
        unsigned                        :1;
        unsigned DACEN                  :1;
    };
    struct {
        unsigned DACNSS0                :1;
        unsigned DACNSS1                :1;
        unsigned DACPSS0                :1;
        unsigned DACPSS1                :1;
    };
    struct {
        unsigned DAC4NSS                :2;
        unsigned DAC4PSS                :2;
        unsigned DAC4OE2                :1;
        unsigned DAC4OE1                :1;
        unsigned                        :1;
        unsigned DAC4EN                 :1;
    };
    struct {
        unsigned DAC4NSS0               :1;
        unsigned DAC4NSS1               :1;
        unsigned DAC4PSS0               :1;
        unsigned DAC4PSS1               :1;
    };
} DAC4CON0bits_t;
extern volatile DAC4CON0bits_t DAC4CON0bits __at(0x596);
// bitfield macros
#define _DAC4CON0_NSS_POSN                                  0x0
#define _DAC4CON0_NSS_POSITION                              0x0
#define _DAC4CON0_NSS_SIZE                                  0x2
#define _DAC4CON0_NSS_LENGTH                                0x2
#define _DAC4CON0_NSS_MASK                                  0x3
#define _DAC4CON0_PSS_POSN                                  0x2
#define _DAC4CON0_PSS_POSITION                              0x2
#define _DAC4CON0_PSS_SIZE                                  0x2
#define _DAC4CON0_PSS_LENGTH                                0x2
#define _DAC4CON0_PSS_MASK                                  0xC
#define _DAC4CON0_OE2_POSN                                  0x4
#define _DAC4CON0_OE2_POSITION                              0x4
#define _DAC4CON0_OE2_SIZE                                  0x1
#define _DAC4CON0_OE2_LENGTH                                0x1
#define _DAC4CON0_OE2_MASK                                  0x10
#define _DAC4CON0_OE1_POSN                                  0x5
#define _DAC4CON0_OE1_POSITION                              0x5
#define _DAC4CON0_OE1_SIZE                                  0x1
#define _DAC4CON0_OE1_LENGTH                                0x1
#define _DAC4CON0_OE1_MASK                                  0x20
#define _DAC4CON0_EN_POSN                                   0x7
#define _DAC4CON0_EN_POSITION                               0x7
#define _DAC4CON0_EN_SIZE                                   0x1
#define _DAC4CON0_EN_LENGTH                                 0x1
#define _DAC4CON0_EN_MASK                                   0x80
#define _DAC4CON0_NSS0_POSN                                 0x0
#define _DAC4CON0_NSS0_POSITION                             0x0
#define _DAC4CON0_NSS0_SIZE                                 0x1
#define _DAC4CON0_NSS0_LENGTH                               0x1
#define _DAC4CON0_NSS0_MASK                                 0x1
#define _DAC4CON0_NSS1_POSN                                 0x1
#define _DAC4CON0_NSS1_POSITION                             0x1
#define _DAC4CON0_NSS1_SIZE                                 0x1
#define _DAC4CON0_NSS1_LENGTH                               0x1
#define _DAC4CON0_NSS1_MASK                                 0x2
#define _DAC4CON0_PSS0_POSN                                 0x2
#define _DAC4CON0_PSS0_POSITION                             0x2
#define _DAC4CON0_PSS0_SIZE                                 0x1
#define _DAC4CON0_PSS0_LENGTH                               0x1
#define _DAC4CON0_PSS0_MASK                                 0x4
#define _DAC4CON0_PSS1_POSN                                 0x3
#define _DAC4CON0_PSS1_POSITION                             0x3
#define _DAC4CON0_PSS1_SIZE                                 0x1
#define _DAC4CON0_PSS1_LENGTH                               0x1
#define _DAC4CON0_PSS1_MASK                                 0x8
#define _DAC4CON0_DACNSS_POSN                               0x0
#define _DAC4CON0_DACNSS_POSITION                           0x0
#define _DAC4CON0_DACNSS_SIZE                               0x2
#define _DAC4CON0_DACNSS_LENGTH                             0x2
#define _DAC4CON0_DACNSS_MASK                               0x3
#define _DAC4CON0_DACPSS_POSN                               0x2
#define _DAC4CON0_DACPSS_POSITION                           0x2
#define _DAC4CON0_DACPSS_SIZE                               0x2
#define _DAC4CON0_DACPSS_LENGTH                             0x2
#define _DAC4CON0_DACPSS_MASK                               0xC
#define _DAC4CON0_DACOE2_POSN                               0x4
#define _DAC4CON0_DACOE2_POSITION                           0x4
#define _DAC4CON0_DACOE2_SIZE                               0x1
#define _DAC4CON0_DACOE2_LENGTH                             0x1
#define _DAC4CON0_DACOE2_MASK                               0x10
#define _DAC4CON0_DACOE1_POSN                               0x5
#define _DAC4CON0_DACOE1_POSITION                           0x5
#define _DAC4CON0_DACOE1_SIZE                               0x1
#define _DAC4CON0_DACOE1_LENGTH                             0x1
#define _DAC4CON0_DACOE1_MASK                               0x20
#define _DAC4CON0_DACEN_POSN                                0x7
#define _DAC4CON0_DACEN_POSITION                            0x7
#define _DAC4CON0_DACEN_SIZE                                0x1
#define _DAC4CON0_DACEN_LENGTH                              0x1
#define _DAC4CON0_DACEN_MASK                                0x80
#define _DAC4CON0_DACNSS0_POSN                              0x0
#define _DAC4CON0_DACNSS0_POSITION                          0x0
#define _DAC4CON0_DACNSS0_SIZE                              0x1
#define _DAC4CON0_DACNSS0_LENGTH                            0x1
#define _DAC4CON0_DACNSS0_MASK                              0x1
#define _DAC4CON0_DACNSS1_POSN                              0x1
#define _DAC4CON0_DACNSS1_POSITION                          0x1
#define _DAC4CON0_DACNSS1_SIZE                              0x1
#define _DAC4CON0_DACNSS1_LENGTH                            0x1
#define _DAC4CON0_DACNSS1_MASK                              0x2
#define _DAC4CON0_DACPSS0_POSN                              0x2
#define _DAC4CON0_DACPSS0_POSITION                          0x2
#define _DAC4CON0_DACPSS0_SIZE                              0x1
#define _DAC4CON0_DACPSS0_LENGTH                            0x1
#define _DAC4CON0_DACPSS0_MASK                              0x4
#define _DAC4CON0_DACPSS1_POSN                              0x3
#define _DAC4CON0_DACPSS1_POSITION                          0x3
#define _DAC4CON0_DACPSS1_SIZE                              0x1
#define _DAC4CON0_DACPSS1_LENGTH                            0x1
#define _DAC4CON0_DACPSS1_MASK                              0x8
#define _DAC4CON0_DAC4NSS_POSN                              0x0
#define _DAC4CON0_DAC4NSS_POSITION                          0x0
#define _DAC4CON0_DAC4NSS_SIZE                              0x2
#define _DAC4CON0_DAC4NSS_LENGTH                            0x2
#define _DAC4CON0_DAC4NSS_MASK                              0x3
#define _DAC4CON0_DAC4PSS_POSN                              0x2
#define _DAC4CON0_DAC4PSS_POSITION                          0x2
#define _DAC4CON0_DAC4PSS_SIZE                              0x2
#define _DAC4CON0_DAC4PSS_LENGTH                            0x2
#define _DAC4CON0_DAC4PSS_MASK                              0xC
#define _DAC4CON0_DAC4OE2_POSN                              0x4
#define _DAC4CON0_DAC4OE2_POSITION                          0x4
#define _DAC4CON0_DAC4OE2_SIZE                              0x1
#define _DAC4CON0_DAC4OE2_LENGTH                            0x1
#define _DAC4CON0_DAC4OE2_MASK                              0x10
#define _DAC4CON0_DAC4OE1_POSN                              0x5
#define _DAC4CON0_DAC4OE1_POSITION                          0x5
#define _DAC4CON0_DAC4OE1_SIZE                              0x1
#define _DAC4CON0_DAC4OE1_LENGTH                            0x1
#define _DAC4CON0_DAC4OE1_MASK                              0x20
#define _DAC4CON0_DAC4EN_POSN                               0x7
#define _DAC4CON0_DAC4EN_POSITION                           0x7
#define _DAC4CON0_DAC4EN_SIZE                               0x1
#define _DAC4CON0_DAC4EN_LENGTH                             0x1
#define _DAC4CON0_DAC4EN_MASK                               0x80
#define _DAC4CON0_DAC4NSS0_POSN                             0x0
#define _DAC4CON0_DAC4NSS0_POSITION                         0x0
#define _DAC4CON0_DAC4NSS0_SIZE                             0x1
#define _DAC4CON0_DAC4NSS0_LENGTH                           0x1
#define _DAC4CON0_DAC4NSS0_MASK                             0x1
#define _DAC4CON0_DAC4NSS1_POSN                             0x1
#define _DAC4CON0_DAC4NSS1_POSITION                         0x1
#define _DAC4CON0_DAC4NSS1_SIZE                             0x1
#define _DAC4CON0_DAC4NSS1_LENGTH                           0x1
#define _DAC4CON0_DAC4NSS1_MASK                             0x2
#define _DAC4CON0_DAC4PSS0_POSN                             0x2
#define _DAC4CON0_DAC4PSS0_POSITION                         0x2
#define _DAC4CON0_DAC4PSS0_SIZE                             0x1
#define _DAC4CON0_DAC4PSS0_LENGTH                           0x1
#define _DAC4CON0_DAC4PSS0_MASK                             0x4
#define _DAC4CON0_DAC4PSS1_POSN                             0x3
#define _DAC4CON0_DAC4PSS1_POSITION                         0x3
#define _DAC4CON0_DAC4PSS1_SIZE                             0x1
#define _DAC4CON0_DAC4PSS1_LENGTH                           0x1
#define _DAC4CON0_DAC4PSS1_MASK                             0x8

// Register: DAC4REF
#define DAC4REF DAC4REF
extern volatile unsigned char           DAC4REF             __at(0x597);
#ifndef _LIB_BUILD
asm("DAC4REF equ 0597h");
#endif
// aliases
extern volatile unsigned char           DAC4CON1            __at(0x597);
#ifndef _LIB_BUILD
asm("DAC4CON1 equ 0597h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DACR                   :5;
    };
    struct {
        unsigned DACR0                  :1;
        unsigned DACR1                  :1;
        unsigned DACR2                  :1;
        unsigned DACR3                  :1;
        unsigned DACR4                  :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
    };
    struct {
        unsigned DAC4R                  :5;
    };
    struct {
        unsigned DAC4R0                 :1;
        unsigned DAC4R1                 :1;
        unsigned DAC4R2                 :1;
        unsigned DAC4R3                 :1;
        unsigned DAC4R4                 :1;
    };
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
    };
    struct {
        unsigned DAC4REF0               :1;
        unsigned DAC4REF1               :1;
        unsigned DAC4REF2               :1;
        unsigned DAC4REF3               :1;
        unsigned DAC4REF4               :1;
    };
} DAC4REFbits_t;
extern volatile DAC4REFbits_t DAC4REFbits __at(0x597);
// bitfield macros
#define _DAC4REF_DACR_POSN                                  0x0
#define _DAC4REF_DACR_POSITION                              0x0
#define _DAC4REF_DACR_SIZE                                  0x5
#define _DAC4REF_DACR_LENGTH                                0x5
#define _DAC4REF_DACR_MASK                                  0x1F
#define _DAC4REF_DACR0_POSN                                 0x0
#define _DAC4REF_DACR0_POSITION                             0x0
#define _DAC4REF_DACR0_SIZE                                 0x1
#define _DAC4REF_DACR0_LENGTH                               0x1
#define _DAC4REF_DACR0_MASK                                 0x1
#define _DAC4REF_DACR1_POSN                                 0x1
#define _DAC4REF_DACR1_POSITION                             0x1
#define _DAC4REF_DACR1_SIZE                                 0x1
#define _DAC4REF_DACR1_LENGTH                               0x1
#define _DAC4REF_DACR1_MASK                                 0x2
#define _DAC4REF_DACR2_POSN                                 0x2
#define _DAC4REF_DACR2_POSITION                             0x2
#define _DAC4REF_DACR2_SIZE                                 0x1
#define _DAC4REF_DACR2_LENGTH                               0x1
#define _DAC4REF_DACR2_MASK                                 0x4
#define _DAC4REF_DACR3_POSN                                 0x3
#define _DAC4REF_DACR3_POSITION                             0x3
#define _DAC4REF_DACR3_SIZE                                 0x1
#define _DAC4REF_DACR3_LENGTH                               0x1
#define _DAC4REF_DACR3_MASK                                 0x8
#define _DAC4REF_DACR4_POSN                                 0x4
#define _DAC4REF_DACR4_POSITION                             0x4
#define _DAC4REF_DACR4_SIZE                                 0x1
#define _DAC4REF_DACR4_LENGTH                               0x1
#define _DAC4REF_DACR4_MASK                                 0x10
#define _DAC4REF_R0_POSN                                    0x0
#define _DAC4REF_R0_POSITION                                0x0
#define _DAC4REF_R0_SIZE                                    0x1
#define _DAC4REF_R0_LENGTH                                  0x1
#define _DAC4REF_R0_MASK                                    0x1
#define _DAC4REF_R1_POSN                                    0x1
#define _DAC4REF_R1_POSITION                                0x1
#define _DAC4REF_R1_SIZE                                    0x1
#define _DAC4REF_R1_LENGTH                                  0x1
#define _DAC4REF_R1_MASK                                    0x2
#define _DAC4REF_R2_POSN                                    0x2
#define _DAC4REF_R2_POSITION                                0x2
#define _DAC4REF_R2_SIZE                                    0x1
#define _DAC4REF_R2_LENGTH                                  0x1
#define _DAC4REF_R2_MASK                                    0x4
#define _DAC4REF_R3_POSN                                    0x3
#define _DAC4REF_R3_POSITION                                0x3
#define _DAC4REF_R3_SIZE                                    0x1
#define _DAC4REF_R3_LENGTH                                  0x1
#define _DAC4REF_R3_MASK                                    0x8
#define _DAC4REF_R4_POSN                                    0x4
#define _DAC4REF_R4_POSITION                                0x4
#define _DAC4REF_R4_SIZE                                    0x1
#define _DAC4REF_R4_LENGTH                                  0x1
#define _DAC4REF_R4_MASK                                    0x10
#define _DAC4REF_DAC4R_POSN                                 0x0
#define _DAC4REF_DAC4R_POSITION                             0x0
#define _DAC4REF_DAC4R_SIZE                                 0x5
#define _DAC4REF_DAC4R_LENGTH                               0x5
#define _DAC4REF_DAC4R_MASK                                 0x1F
#define _DAC4REF_DAC4R0_POSN                                0x0
#define _DAC4REF_DAC4R0_POSITION                            0x0
#define _DAC4REF_DAC4R0_SIZE                                0x1
#define _DAC4REF_DAC4R0_LENGTH                              0x1
#define _DAC4REF_DAC4R0_MASK                                0x1
#define _DAC4REF_DAC4R1_POSN                                0x1
#define _DAC4REF_DAC4R1_POSITION                            0x1
#define _DAC4REF_DAC4R1_SIZE                                0x1
#define _DAC4REF_DAC4R1_LENGTH                              0x1
#define _DAC4REF_DAC4R1_MASK                                0x2
#define _DAC4REF_DAC4R2_POSN                                0x2
#define _DAC4REF_DAC4R2_POSITION                            0x2
#define _DAC4REF_DAC4R2_SIZE                                0x1
#define _DAC4REF_DAC4R2_LENGTH                              0x1
#define _DAC4REF_DAC4R2_MASK                                0x4
#define _DAC4REF_DAC4R3_POSN                                0x3
#define _DAC4REF_DAC4R3_POSITION                            0x3
#define _DAC4REF_DAC4R3_SIZE                                0x1
#define _DAC4REF_DAC4R3_LENGTH                              0x1
#define _DAC4REF_DAC4R3_MASK                                0x8
#define _DAC4REF_DAC4R4_POSN                                0x4
#define _DAC4REF_DAC4R4_POSITION                            0x4
#define _DAC4REF_DAC4R4_SIZE                                0x1
#define _DAC4REF_DAC4R4_LENGTH                              0x1
#define _DAC4REF_DAC4R4_MASK                                0x10
#define _DAC4REF_REF0_POSN                                  0x0
#define _DAC4REF_REF0_POSITION                              0x0
#define _DAC4REF_REF0_SIZE                                  0x1
#define _DAC4REF_REF0_LENGTH                                0x1
#define _DAC4REF_REF0_MASK                                  0x1
#define _DAC4REF_REF1_POSN                                  0x1
#define _DAC4REF_REF1_POSITION                              0x1
#define _DAC4REF_REF1_SIZE                                  0x1
#define _DAC4REF_REF1_LENGTH                                0x1
#define _DAC4REF_REF1_MASK                                  0x2
#define _DAC4REF_REF2_POSN                                  0x2
#define _DAC4REF_REF2_POSITION                              0x2
#define _DAC4REF_REF2_SIZE                                  0x1
#define _DAC4REF_REF2_LENGTH                                0x1
#define _DAC4REF_REF2_MASK                                  0x4
#define _DAC4REF_REF3_POSN                                  0x3
#define _DAC4REF_REF3_POSITION                              0x3
#define _DAC4REF_REF3_SIZE                                  0x1
#define _DAC4REF_REF3_LENGTH                                0x1
#define _DAC4REF_REF3_MASK                                  0x8
#define _DAC4REF_REF4_POSN                                  0x4
#define _DAC4REF_REF4_POSITION                              0x4
#define _DAC4REF_REF4_SIZE                                  0x1
#define _DAC4REF_REF4_LENGTH                                0x1
#define _DAC4REF_REF4_MASK                                  0x10
#define _DAC4REF_DAC4REF0_POSN                              0x0
#define _DAC4REF_DAC4REF0_POSITION                          0x0
#define _DAC4REF_DAC4REF0_SIZE                              0x1
#define _DAC4REF_DAC4REF0_LENGTH                            0x1
#define _DAC4REF_DAC4REF0_MASK                              0x1
#define _DAC4REF_DAC4REF1_POSN                              0x1
#define _DAC4REF_DAC4REF1_POSITION                          0x1
#define _DAC4REF_DAC4REF1_SIZE                              0x1
#define _DAC4REF_DAC4REF1_LENGTH                            0x1
#define _DAC4REF_DAC4REF1_MASK                              0x2
#define _DAC4REF_DAC4REF2_POSN                              0x2
#define _DAC4REF_DAC4REF2_POSITION                          0x2
#define _DAC4REF_DAC4REF2_SIZE                              0x1
#define _DAC4REF_DAC4REF2_LENGTH                            0x1
#define _DAC4REF_DAC4REF2_MASK                              0x4
#define _DAC4REF_DAC4REF3_POSN                              0x3
#define _DAC4REF_DAC4REF3_POSITION                          0x3
#define _DAC4REF_DAC4REF3_SIZE                              0x1
#define _DAC4REF_DAC4REF3_LENGTH                            0x1
#define _DAC4REF_DAC4REF3_MASK                              0x8
#define _DAC4REF_DAC4REF4_POSN                              0x4
#define _DAC4REF_DAC4REF4_POSITION                          0x4
#define _DAC4REF_DAC4REF4_SIZE                              0x1
#define _DAC4REF_DAC4REF4_LENGTH                            0x1
#define _DAC4REF_DAC4REF4_MASK                              0x10
// alias bitfield definitions
typedef union {
    struct {
        unsigned DACR                   :5;
    };
    struct {
        unsigned DACR0                  :1;
        unsigned DACR1                  :1;
        unsigned DACR2                  :1;
        unsigned DACR3                  :1;
        unsigned DACR4                  :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
    };
    struct {
        unsigned DAC4R                  :5;
    };
    struct {
        unsigned DAC4R0                 :1;
        unsigned DAC4R1                 :1;
        unsigned DAC4R2                 :1;
        unsigned DAC4R3                 :1;
        unsigned DAC4R4                 :1;
    };
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
    };
    struct {
        unsigned DAC4REF0               :1;
        unsigned DAC4REF1               :1;
        unsigned DAC4REF2               :1;
        unsigned DAC4REF3               :1;
        unsigned DAC4REF4               :1;
    };
} DAC4CON1bits_t;
extern volatile DAC4CON1bits_t DAC4CON1bits __at(0x597);
// bitfield macros
#define _DAC4CON1_DACR_POSN                                 0x0
#define _DAC4CON1_DACR_POSITION                             0x0
#define _DAC4CON1_DACR_SIZE                                 0x5
#define _DAC4CON1_DACR_LENGTH                               0x5
#define _DAC4CON1_DACR_MASK                                 0x1F
#define _DAC4CON1_DACR0_POSN                                0x0
#define _DAC4CON1_DACR0_POSITION                            0x0
#define _DAC4CON1_DACR0_SIZE                                0x1
#define _DAC4CON1_DACR0_LENGTH                              0x1
#define _DAC4CON1_DACR0_MASK                                0x1
#define _DAC4CON1_DACR1_POSN                                0x1
#define _DAC4CON1_DACR1_POSITION                            0x1
#define _DAC4CON1_DACR1_SIZE                                0x1
#define _DAC4CON1_DACR1_LENGTH                              0x1
#define _DAC4CON1_DACR1_MASK                                0x2
#define _DAC4CON1_DACR2_POSN                                0x2
#define _DAC4CON1_DACR2_POSITION                            0x2
#define _DAC4CON1_DACR2_SIZE                                0x1
#define _DAC4CON1_DACR2_LENGTH                              0x1
#define _DAC4CON1_DACR2_MASK                                0x4
#define _DAC4CON1_DACR3_POSN                                0x3
#define _DAC4CON1_DACR3_POSITION                            0x3
#define _DAC4CON1_DACR3_SIZE                                0x1
#define _DAC4CON1_DACR3_LENGTH                              0x1
#define _DAC4CON1_DACR3_MASK                                0x8
#define _DAC4CON1_DACR4_POSN                                0x4
#define _DAC4CON1_DACR4_POSITION                            0x4
#define _DAC4CON1_DACR4_SIZE                                0x1
#define _DAC4CON1_DACR4_LENGTH                              0x1
#define _DAC4CON1_DACR4_MASK                                0x10
#define _DAC4CON1_R0_POSN                                   0x0
#define _DAC4CON1_R0_POSITION                               0x0
#define _DAC4CON1_R0_SIZE                                   0x1
#define _DAC4CON1_R0_LENGTH                                 0x1
#define _DAC4CON1_R0_MASK                                   0x1
#define _DAC4CON1_R1_POSN                                   0x1
#define _DAC4CON1_R1_POSITION                               0x1
#define _DAC4CON1_R1_SIZE                                   0x1
#define _DAC4CON1_R1_LENGTH                                 0x1
#define _DAC4CON1_R1_MASK                                   0x2
#define _DAC4CON1_R2_POSN                                   0x2
#define _DAC4CON1_R2_POSITION                               0x2
#define _DAC4CON1_R2_SIZE                                   0x1
#define _DAC4CON1_R2_LENGTH                                 0x1
#define _DAC4CON1_R2_MASK                                   0x4
#define _DAC4CON1_R3_POSN                                   0x3
#define _DAC4CON1_R3_POSITION                               0x3
#define _DAC4CON1_R3_SIZE                                   0x1
#define _DAC4CON1_R3_LENGTH                                 0x1
#define _DAC4CON1_R3_MASK                                   0x8
#define _DAC4CON1_R4_POSN                                   0x4
#define _DAC4CON1_R4_POSITION                               0x4
#define _DAC4CON1_R4_SIZE                                   0x1
#define _DAC4CON1_R4_LENGTH                                 0x1
#define _DAC4CON1_R4_MASK                                   0x10
#define _DAC4CON1_DAC4R_POSN                                0x0
#define _DAC4CON1_DAC4R_POSITION                            0x0
#define _DAC4CON1_DAC4R_SIZE                                0x5
#define _DAC4CON1_DAC4R_LENGTH                              0x5
#define _DAC4CON1_DAC4R_MASK                                0x1F
#define _DAC4CON1_DAC4R0_POSN                               0x0
#define _DAC4CON1_DAC4R0_POSITION                           0x0
#define _DAC4CON1_DAC4R0_SIZE                               0x1
#define _DAC4CON1_DAC4R0_LENGTH                             0x1
#define _DAC4CON1_DAC4R0_MASK                               0x1
#define _DAC4CON1_DAC4R1_POSN                               0x1
#define _DAC4CON1_DAC4R1_POSITION                           0x1
#define _DAC4CON1_DAC4R1_SIZE                               0x1
#define _DAC4CON1_DAC4R1_LENGTH                             0x1
#define _DAC4CON1_DAC4R1_MASK                               0x2
#define _DAC4CON1_DAC4R2_POSN                               0x2
#define _DAC4CON1_DAC4R2_POSITION                           0x2
#define _DAC4CON1_DAC4R2_SIZE                               0x1
#define _DAC4CON1_DAC4R2_LENGTH                             0x1
#define _DAC4CON1_DAC4R2_MASK                               0x4
#define _DAC4CON1_DAC4R3_POSN                               0x3
#define _DAC4CON1_DAC4R3_POSITION                           0x3
#define _DAC4CON1_DAC4R3_SIZE                               0x1
#define _DAC4CON1_DAC4R3_LENGTH                             0x1
#define _DAC4CON1_DAC4R3_MASK                               0x8
#define _DAC4CON1_DAC4R4_POSN                               0x4
#define _DAC4CON1_DAC4R4_POSITION                           0x4
#define _DAC4CON1_DAC4R4_SIZE                               0x1
#define _DAC4CON1_DAC4R4_LENGTH                             0x1
#define _DAC4CON1_DAC4R4_MASK                               0x10
#define _DAC4CON1_REF0_POSN                                 0x0
#define _DAC4CON1_REF0_POSITION                             0x0
#define _DAC4CON1_REF0_SIZE                                 0x1
#define _DAC4CON1_REF0_LENGTH                               0x1
#define _DAC4CON1_REF0_MASK                                 0x1
#define _DAC4CON1_REF1_POSN                                 0x1
#define _DAC4CON1_REF1_POSITION                             0x1
#define _DAC4CON1_REF1_SIZE                                 0x1
#define _DAC4CON1_REF1_LENGTH                               0x1
#define _DAC4CON1_REF1_MASK                                 0x2
#define _DAC4CON1_REF2_POSN                                 0x2
#define _DAC4CON1_REF2_POSITION                             0x2
#define _DAC4CON1_REF2_SIZE                                 0x1
#define _DAC4CON1_REF2_LENGTH                               0x1
#define _DAC4CON1_REF2_MASK                                 0x4
#define _DAC4CON1_REF3_POSN                                 0x3
#define _DAC4CON1_REF3_POSITION                             0x3
#define _DAC4CON1_REF3_SIZE                                 0x1
#define _DAC4CON1_REF3_LENGTH                               0x1
#define _DAC4CON1_REF3_MASK                                 0x8
#define _DAC4CON1_REF4_POSN                                 0x4
#define _DAC4CON1_REF4_POSITION                             0x4
#define _DAC4CON1_REF4_SIZE                                 0x1
#define _DAC4CON1_REF4_LENGTH                               0x1
#define _DAC4CON1_REF4_MASK                                 0x10
#define _DAC4CON1_DAC4REF0_POSN                             0x0
#define _DAC4CON1_DAC4REF0_POSITION                         0x0
#define _DAC4CON1_DAC4REF0_SIZE                             0x1
#define _DAC4CON1_DAC4REF0_LENGTH                           0x1
#define _DAC4CON1_DAC4REF0_MASK                             0x1
#define _DAC4CON1_DAC4REF1_POSN                             0x1
#define _DAC4CON1_DAC4REF1_POSITION                         0x1
#define _DAC4CON1_DAC4REF1_SIZE                             0x1
#define _DAC4CON1_DAC4REF1_LENGTH                           0x1
#define _DAC4CON1_DAC4REF1_MASK                             0x2
#define _DAC4CON1_DAC4REF2_POSN                             0x2
#define _DAC4CON1_DAC4REF2_POSITION                         0x2
#define _DAC4CON1_DAC4REF2_SIZE                             0x1
#define _DAC4CON1_DAC4REF2_LENGTH                           0x1
#define _DAC4CON1_DAC4REF2_MASK                             0x4
#define _DAC4CON1_DAC4REF3_POSN                             0x3
#define _DAC4CON1_DAC4REF3_POSITION                         0x3
#define _DAC4CON1_DAC4REF3_SIZE                             0x1
#define _DAC4CON1_DAC4REF3_LENGTH                           0x1
#define _DAC4CON1_DAC4REF3_MASK                             0x8
#define _DAC4CON1_DAC4REF4_POSN                             0x4
#define _DAC4CON1_DAC4REF4_POSITION                         0x4
#define _DAC4CON1_DAC4REF4_SIZE                             0x1
#define _DAC4CON1_DAC4REF4_LENGTH                           0x1
#define _DAC4CON1_DAC4REF4_MASK                             0x10

// Register: DAC5CON0
#define DAC5CON0 DAC5CON0
extern volatile unsigned char           DAC5CON0            __at(0x598);
#ifndef _LIB_BUILD
asm("DAC5CON0 equ 0598h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NSS                    :2;
        unsigned PSS                    :2;
        unsigned OE2                    :1;
        unsigned OE1                    :1;
        unsigned FM                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned NSS0                   :1;
        unsigned NSS1                   :1;
        unsigned PSS0                   :1;
        unsigned PSS1                   :1;
        unsigned                        :1;
        unsigned OE                     :1;
    };
    struct {
        unsigned DACNSS                 :2;
        unsigned DACPSS                 :2;
        unsigned DACOE2                 :1;
        unsigned DACOE1                 :1;
        unsigned DACFM                  :1;
        unsigned DACEN                  :1;
    };
    struct {
        unsigned DACNSS0                :1;
        unsigned DACNSS1                :1;
        unsigned DACPSS0                :1;
        unsigned DACPSS1                :1;
        unsigned                        :1;
        unsigned DACOE                  :1;
    };
    struct {
        unsigned DAC5NSS                :2;
        unsigned DAC5PSS                :2;
        unsigned DAC5OE2                :1;
        unsigned DAC5OE1                :1;
        unsigned DAC5FM                 :1;
        unsigned DAC5EN                 :1;
    };
    struct {
        unsigned DAC5NSS0               :1;
        unsigned DAC5NSS1               :1;
        unsigned DAC5PSS0               :1;
        unsigned DAC5PSS1               :1;
    };
} DAC5CON0bits_t;
extern volatile DAC5CON0bits_t DAC5CON0bits __at(0x598);
// bitfield macros
#define _DAC5CON0_NSS_POSN                                  0x0
#define _DAC5CON0_NSS_POSITION                              0x0
#define _DAC5CON0_NSS_SIZE                                  0x2
#define _DAC5CON0_NSS_LENGTH                                0x2
#define _DAC5CON0_NSS_MASK                                  0x3
#define _DAC5CON0_PSS_POSN                                  0x2
#define _DAC5CON0_PSS_POSITION                              0x2
#define _DAC5CON0_PSS_SIZE                                  0x2
#define _DAC5CON0_PSS_LENGTH                                0x2
#define _DAC5CON0_PSS_MASK                                  0xC
#define _DAC5CON0_OE2_POSN                                  0x4
#define _DAC5CON0_OE2_POSITION                              0x4
#define _DAC5CON0_OE2_SIZE                                  0x1
#define _DAC5CON0_OE2_LENGTH                                0x1
#define _DAC5CON0_OE2_MASK                                  0x10
#define _DAC5CON0_OE1_POSN                                  0x5
#define _DAC5CON0_OE1_POSITION                              0x5
#define _DAC5CON0_OE1_SIZE                                  0x1
#define _DAC5CON0_OE1_LENGTH                                0x1
#define _DAC5CON0_OE1_MASK                                  0x20
#define _DAC5CON0_FM_POSN                                   0x6
#define _DAC5CON0_FM_POSITION                               0x6
#define _DAC5CON0_FM_SIZE                                   0x1
#define _DAC5CON0_FM_LENGTH                                 0x1
#define _DAC5CON0_FM_MASK                                   0x40
#define _DAC5CON0_EN_POSN                                   0x7
#define _DAC5CON0_EN_POSITION                               0x7
#define _DAC5CON0_EN_SIZE                                   0x1
#define _DAC5CON0_EN_LENGTH                                 0x1
#define _DAC5CON0_EN_MASK                                   0x80
#define _DAC5CON0_NSS0_POSN                                 0x0
#define _DAC5CON0_NSS0_POSITION                             0x0
#define _DAC5CON0_NSS0_SIZE                                 0x1
#define _DAC5CON0_NSS0_LENGTH                               0x1
#define _DAC5CON0_NSS0_MASK                                 0x1
#define _DAC5CON0_NSS1_POSN                                 0x1
#define _DAC5CON0_NSS1_POSITION                             0x1
#define _DAC5CON0_NSS1_SIZE                                 0x1
#define _DAC5CON0_NSS1_LENGTH                               0x1
#define _DAC5CON0_NSS1_MASK                                 0x2
#define _DAC5CON0_PSS0_POSN                                 0x2
#define _DAC5CON0_PSS0_POSITION                             0x2
#define _DAC5CON0_PSS0_SIZE                                 0x1
#define _DAC5CON0_PSS0_LENGTH                               0x1
#define _DAC5CON0_PSS0_MASK                                 0x4
#define _DAC5CON0_PSS1_POSN                                 0x3
#define _DAC5CON0_PSS1_POSITION                             0x3
#define _DAC5CON0_PSS1_SIZE                                 0x1
#define _DAC5CON0_PSS1_LENGTH                               0x1
#define _DAC5CON0_PSS1_MASK                                 0x8
#define _DAC5CON0_OE_POSN                                   0x5
#define _DAC5CON0_OE_POSITION                               0x5
#define _DAC5CON0_OE_SIZE                                   0x1
#define _DAC5CON0_OE_LENGTH                                 0x1
#define _DAC5CON0_OE_MASK                                   0x20
#define _DAC5CON0_DACNSS_POSN                               0x0
#define _DAC5CON0_DACNSS_POSITION                           0x0
#define _DAC5CON0_DACNSS_SIZE                               0x2
#define _DAC5CON0_DACNSS_LENGTH                             0x2
#define _DAC5CON0_DACNSS_MASK                               0x3
#define _DAC5CON0_DACPSS_POSN                               0x2
#define _DAC5CON0_DACPSS_POSITION                           0x2
#define _DAC5CON0_DACPSS_SIZE                               0x2
#define _DAC5CON0_DACPSS_LENGTH                             0x2
#define _DAC5CON0_DACPSS_MASK                               0xC
#define _DAC5CON0_DACOE2_POSN                               0x4
#define _DAC5CON0_DACOE2_POSITION                           0x4
#define _DAC5CON0_DACOE2_SIZE                               0x1
#define _DAC5CON0_DACOE2_LENGTH                             0x1
#define _DAC5CON0_DACOE2_MASK                               0x10
#define _DAC5CON0_DACOE1_POSN                               0x5
#define _DAC5CON0_DACOE1_POSITION                           0x5
#define _DAC5CON0_DACOE1_SIZE                               0x1
#define _DAC5CON0_DACOE1_LENGTH                             0x1
#define _DAC5CON0_DACOE1_MASK                               0x20
#define _DAC5CON0_DACFM_POSN                                0x6
#define _DAC5CON0_DACFM_POSITION                            0x6
#define _DAC5CON0_DACFM_SIZE                                0x1
#define _DAC5CON0_DACFM_LENGTH                              0x1
#define _DAC5CON0_DACFM_MASK                                0x40
#define _DAC5CON0_DACEN_POSN                                0x7
#define _DAC5CON0_DACEN_POSITION                            0x7
#define _DAC5CON0_DACEN_SIZE                                0x1
#define _DAC5CON0_DACEN_LENGTH                              0x1
#define _DAC5CON0_DACEN_MASK                                0x80
#define _DAC5CON0_DACNSS0_POSN                              0x0
#define _DAC5CON0_DACNSS0_POSITION                          0x0
#define _DAC5CON0_DACNSS0_SIZE                              0x1
#define _DAC5CON0_DACNSS0_LENGTH                            0x1
#define _DAC5CON0_DACNSS0_MASK                              0x1
#define _DAC5CON0_DACNSS1_POSN                              0x1
#define _DAC5CON0_DACNSS1_POSITION                          0x1
#define _DAC5CON0_DACNSS1_SIZE                              0x1
#define _DAC5CON0_DACNSS1_LENGTH                            0x1
#define _DAC5CON0_DACNSS1_MASK                              0x2
#define _DAC5CON0_DACPSS0_POSN                              0x2
#define _DAC5CON0_DACPSS0_POSITION                          0x2
#define _DAC5CON0_DACPSS0_SIZE                              0x1
#define _DAC5CON0_DACPSS0_LENGTH                            0x1
#define _DAC5CON0_DACPSS0_MASK                              0x4
#define _DAC5CON0_DACPSS1_POSN                              0x3
#define _DAC5CON0_DACPSS1_POSITION                          0x3
#define _DAC5CON0_DACPSS1_SIZE                              0x1
#define _DAC5CON0_DACPSS1_LENGTH                            0x1
#define _DAC5CON0_DACPSS1_MASK                              0x8
#define _DAC5CON0_DACOE_POSN                                0x5
#define _DAC5CON0_DACOE_POSITION                            0x5
#define _DAC5CON0_DACOE_SIZE                                0x1
#define _DAC5CON0_DACOE_LENGTH                              0x1
#define _DAC5CON0_DACOE_MASK                                0x20
#define _DAC5CON0_DAC5NSS_POSN                              0x0
#define _DAC5CON0_DAC5NSS_POSITION                          0x0
#define _DAC5CON0_DAC5NSS_SIZE                              0x2
#define _DAC5CON0_DAC5NSS_LENGTH                            0x2
#define _DAC5CON0_DAC5NSS_MASK                              0x3
#define _DAC5CON0_DAC5PSS_POSN                              0x2
#define _DAC5CON0_DAC5PSS_POSITION                          0x2
#define _DAC5CON0_DAC5PSS_SIZE                              0x2
#define _DAC5CON0_DAC5PSS_LENGTH                            0x2
#define _DAC5CON0_DAC5PSS_MASK                              0xC
#define _DAC5CON0_DAC5OE2_POSN                              0x4
#define _DAC5CON0_DAC5OE2_POSITION                          0x4
#define _DAC5CON0_DAC5OE2_SIZE                              0x1
#define _DAC5CON0_DAC5OE2_LENGTH                            0x1
#define _DAC5CON0_DAC5OE2_MASK                              0x10
#define _DAC5CON0_DAC5OE1_POSN                              0x5
#define _DAC5CON0_DAC5OE1_POSITION                          0x5
#define _DAC5CON0_DAC5OE1_SIZE                              0x1
#define _DAC5CON0_DAC5OE1_LENGTH                            0x1
#define _DAC5CON0_DAC5OE1_MASK                              0x20
#define _DAC5CON0_DAC5FM_POSN                               0x6
#define _DAC5CON0_DAC5FM_POSITION                           0x6
#define _DAC5CON0_DAC5FM_SIZE                               0x1
#define _DAC5CON0_DAC5FM_LENGTH                             0x1
#define _DAC5CON0_DAC5FM_MASK                               0x40
#define _DAC5CON0_DAC5EN_POSN                               0x7
#define _DAC5CON0_DAC5EN_POSITION                           0x7
#define _DAC5CON0_DAC5EN_SIZE                               0x1
#define _DAC5CON0_DAC5EN_LENGTH                             0x1
#define _DAC5CON0_DAC5EN_MASK                               0x80
#define _DAC5CON0_DAC5NSS0_POSN                             0x0
#define _DAC5CON0_DAC5NSS0_POSITION                         0x0
#define _DAC5CON0_DAC5NSS0_SIZE                             0x1
#define _DAC5CON0_DAC5NSS0_LENGTH                           0x1
#define _DAC5CON0_DAC5NSS0_MASK                             0x1
#define _DAC5CON0_DAC5NSS1_POSN                             0x1
#define _DAC5CON0_DAC5NSS1_POSITION                         0x1
#define _DAC5CON0_DAC5NSS1_SIZE                             0x1
#define _DAC5CON0_DAC5NSS1_LENGTH                           0x1
#define _DAC5CON0_DAC5NSS1_MASK                             0x2
#define _DAC5CON0_DAC5PSS0_POSN                             0x2
#define _DAC5CON0_DAC5PSS0_POSITION                         0x2
#define _DAC5CON0_DAC5PSS0_SIZE                             0x1
#define _DAC5CON0_DAC5PSS0_LENGTH                           0x1
#define _DAC5CON0_DAC5PSS0_MASK                             0x4
#define _DAC5CON0_DAC5PSS1_POSN                             0x3
#define _DAC5CON0_DAC5PSS1_POSITION                         0x3
#define _DAC5CON0_DAC5PSS1_SIZE                             0x1
#define _DAC5CON0_DAC5PSS1_LENGTH                           0x1
#define _DAC5CON0_DAC5PSS1_MASK                             0x8

// Register: DAC5REF
#define DAC5REF DAC5REF
extern volatile unsigned short          DAC5REF             __at(0x599);
#ifndef _LIB_BUILD
asm("DAC5REF equ 0599h");
#endif

// Register: DAC5REFL
#define DAC5REFL DAC5REFL
extern volatile unsigned char           DAC5REFL            __at(0x599);
#ifndef _LIB_BUILD
asm("DAC5REFL equ 0599h");
#endif
// aliases
extern volatile unsigned char           DAC5CON1            __at(0x599);
#ifndef _LIB_BUILD
asm("DAC5CON1 equ 0599h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
        unsigned REF5                   :1;
        unsigned REF6                   :1;
        unsigned REF7                   :1;
    };
    struct {
        unsigned DAC5REF0               :1;
        unsigned DAC5REF1               :1;
        unsigned DAC5REF2               :1;
        unsigned DAC5REF3               :1;
        unsigned DAC5REF4               :1;
        unsigned DAC5REF5               :1;
        unsigned DAC5REF6               :1;
        unsigned DAC5REF7               :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
        unsigned R5                     :1;
        unsigned R6                     :1;
        unsigned R7                     :1;
    };
    struct {
        unsigned DAC5R0                 :1;
        unsigned DAC5R1                 :1;
        unsigned DAC5R2                 :1;
        unsigned DAC5R3                 :1;
        unsigned DAC5R4                 :1;
        unsigned DAC5R5                 :1;
        unsigned DAC5R6                 :1;
        unsigned DAC5R7                 :1;
    };
} DAC5REFLbits_t;
extern volatile DAC5REFLbits_t DAC5REFLbits __at(0x599);
// bitfield macros
#define _DAC5REFL_REF0_POSN                                 0x0
#define _DAC5REFL_REF0_POSITION                             0x0
#define _DAC5REFL_REF0_SIZE                                 0x1
#define _DAC5REFL_REF0_LENGTH                               0x1
#define _DAC5REFL_REF0_MASK                                 0x1
#define _DAC5REFL_REF1_POSN                                 0x1
#define _DAC5REFL_REF1_POSITION                             0x1
#define _DAC5REFL_REF1_SIZE                                 0x1
#define _DAC5REFL_REF1_LENGTH                               0x1
#define _DAC5REFL_REF1_MASK                                 0x2
#define _DAC5REFL_REF2_POSN                                 0x2
#define _DAC5REFL_REF2_POSITION                             0x2
#define _DAC5REFL_REF2_SIZE                                 0x1
#define _DAC5REFL_REF2_LENGTH                               0x1
#define _DAC5REFL_REF2_MASK                                 0x4
#define _DAC5REFL_REF3_POSN                                 0x3
#define _DAC5REFL_REF3_POSITION                             0x3
#define _DAC5REFL_REF3_SIZE                                 0x1
#define _DAC5REFL_REF3_LENGTH                               0x1
#define _DAC5REFL_REF3_MASK                                 0x8
#define _DAC5REFL_REF4_POSN                                 0x4
#define _DAC5REFL_REF4_POSITION                             0x4
#define _DAC5REFL_REF4_SIZE                                 0x1
#define _DAC5REFL_REF4_LENGTH                               0x1
#define _DAC5REFL_REF4_MASK                                 0x10
#define _DAC5REFL_REF5_POSN                                 0x5
#define _DAC5REFL_REF5_POSITION                             0x5
#define _DAC5REFL_REF5_SIZE                                 0x1
#define _DAC5REFL_REF5_LENGTH                               0x1
#define _DAC5REFL_REF5_MASK                                 0x20
#define _DAC5REFL_REF6_POSN                                 0x6
#define _DAC5REFL_REF6_POSITION                             0x6
#define _DAC5REFL_REF6_SIZE                                 0x1
#define _DAC5REFL_REF6_LENGTH                               0x1
#define _DAC5REFL_REF6_MASK                                 0x40
#define _DAC5REFL_REF7_POSN                                 0x7
#define _DAC5REFL_REF7_POSITION                             0x7
#define _DAC5REFL_REF7_SIZE                                 0x1
#define _DAC5REFL_REF7_LENGTH                               0x1
#define _DAC5REFL_REF7_MASK                                 0x80
#define _DAC5REFL_DAC5REF0_POSN                             0x0
#define _DAC5REFL_DAC5REF0_POSITION                         0x0
#define _DAC5REFL_DAC5REF0_SIZE                             0x1
#define _DAC5REFL_DAC5REF0_LENGTH                           0x1
#define _DAC5REFL_DAC5REF0_MASK                             0x1
#define _DAC5REFL_DAC5REF1_POSN                             0x1
#define _DAC5REFL_DAC5REF1_POSITION                         0x1
#define _DAC5REFL_DAC5REF1_SIZE                             0x1
#define _DAC5REFL_DAC5REF1_LENGTH                           0x1
#define _DAC5REFL_DAC5REF1_MASK                             0x2
#define _DAC5REFL_DAC5REF2_POSN                             0x2
#define _DAC5REFL_DAC5REF2_POSITION                         0x2
#define _DAC5REFL_DAC5REF2_SIZE                             0x1
#define _DAC5REFL_DAC5REF2_LENGTH                           0x1
#define _DAC5REFL_DAC5REF2_MASK                             0x4
#define _DAC5REFL_DAC5REF3_POSN                             0x3
#define _DAC5REFL_DAC5REF3_POSITION                         0x3
#define _DAC5REFL_DAC5REF3_SIZE                             0x1
#define _DAC5REFL_DAC5REF3_LENGTH                           0x1
#define _DAC5REFL_DAC5REF3_MASK                             0x8
#define _DAC5REFL_DAC5REF4_POSN                             0x4
#define _DAC5REFL_DAC5REF4_POSITION                         0x4
#define _DAC5REFL_DAC5REF4_SIZE                             0x1
#define _DAC5REFL_DAC5REF4_LENGTH                           0x1
#define _DAC5REFL_DAC5REF4_MASK                             0x10
#define _DAC5REFL_DAC5REF5_POSN                             0x5
#define _DAC5REFL_DAC5REF5_POSITION                         0x5
#define _DAC5REFL_DAC5REF5_SIZE                             0x1
#define _DAC5REFL_DAC5REF5_LENGTH                           0x1
#define _DAC5REFL_DAC5REF5_MASK                             0x20
#define _DAC5REFL_DAC5REF6_POSN                             0x6
#define _DAC5REFL_DAC5REF6_POSITION                         0x6
#define _DAC5REFL_DAC5REF6_SIZE                             0x1
#define _DAC5REFL_DAC5REF6_LENGTH                           0x1
#define _DAC5REFL_DAC5REF6_MASK                             0x40
#define _DAC5REFL_DAC5REF7_POSN                             0x7
#define _DAC5REFL_DAC5REF7_POSITION                         0x7
#define _DAC5REFL_DAC5REF7_SIZE                             0x1
#define _DAC5REFL_DAC5REF7_LENGTH                           0x1
#define _DAC5REFL_DAC5REF7_MASK                             0x80
#define _DAC5REFL_R0_POSN                                   0x0
#define _DAC5REFL_R0_POSITION                               0x0
#define _DAC5REFL_R0_SIZE                                   0x1
#define _DAC5REFL_R0_LENGTH                                 0x1
#define _DAC5REFL_R0_MASK                                   0x1
#define _DAC5REFL_R1_POSN                                   0x1
#define _DAC5REFL_R1_POSITION                               0x1
#define _DAC5REFL_R1_SIZE                                   0x1
#define _DAC5REFL_R1_LENGTH                                 0x1
#define _DAC5REFL_R1_MASK                                   0x2
#define _DAC5REFL_R2_POSN                                   0x2
#define _DAC5REFL_R2_POSITION                               0x2
#define _DAC5REFL_R2_SIZE                                   0x1
#define _DAC5REFL_R2_LENGTH                                 0x1
#define _DAC5REFL_R2_MASK                                   0x4
#define _DAC5REFL_R3_POSN                                   0x3
#define _DAC5REFL_R3_POSITION                               0x3
#define _DAC5REFL_R3_SIZE                                   0x1
#define _DAC5REFL_R3_LENGTH                                 0x1
#define _DAC5REFL_R3_MASK                                   0x8
#define _DAC5REFL_R4_POSN                                   0x4
#define _DAC5REFL_R4_POSITION                               0x4
#define _DAC5REFL_R4_SIZE                                   0x1
#define _DAC5REFL_R4_LENGTH                                 0x1
#define _DAC5REFL_R4_MASK                                   0x10
#define _DAC5REFL_R5_POSN                                   0x5
#define _DAC5REFL_R5_POSITION                               0x5
#define _DAC5REFL_R5_SIZE                                   0x1
#define _DAC5REFL_R5_LENGTH                                 0x1
#define _DAC5REFL_R5_MASK                                   0x20
#define _DAC5REFL_R6_POSN                                   0x6
#define _DAC5REFL_R6_POSITION                               0x6
#define _DAC5REFL_R6_SIZE                                   0x1
#define _DAC5REFL_R6_LENGTH                                 0x1
#define _DAC5REFL_R6_MASK                                   0x40
#define _DAC5REFL_R7_POSN                                   0x7
#define _DAC5REFL_R7_POSITION                               0x7
#define _DAC5REFL_R7_SIZE                                   0x1
#define _DAC5REFL_R7_LENGTH                                 0x1
#define _DAC5REFL_R7_MASK                                   0x80
#define _DAC5REFL_DAC5R0_POSN                               0x0
#define _DAC5REFL_DAC5R0_POSITION                           0x0
#define _DAC5REFL_DAC5R0_SIZE                               0x1
#define _DAC5REFL_DAC5R0_LENGTH                             0x1
#define _DAC5REFL_DAC5R0_MASK                               0x1
#define _DAC5REFL_DAC5R1_POSN                               0x1
#define _DAC5REFL_DAC5R1_POSITION                           0x1
#define _DAC5REFL_DAC5R1_SIZE                               0x1
#define _DAC5REFL_DAC5R1_LENGTH                             0x1
#define _DAC5REFL_DAC5R1_MASK                               0x2
#define _DAC5REFL_DAC5R2_POSN                               0x2
#define _DAC5REFL_DAC5R2_POSITION                           0x2
#define _DAC5REFL_DAC5R2_SIZE                               0x1
#define _DAC5REFL_DAC5R2_LENGTH                             0x1
#define _DAC5REFL_DAC5R2_MASK                               0x4
#define _DAC5REFL_DAC5R3_POSN                               0x3
#define _DAC5REFL_DAC5R3_POSITION                           0x3
#define _DAC5REFL_DAC5R3_SIZE                               0x1
#define _DAC5REFL_DAC5R3_LENGTH                             0x1
#define _DAC5REFL_DAC5R3_MASK                               0x8
#define _DAC5REFL_DAC5R4_POSN                               0x4
#define _DAC5REFL_DAC5R4_POSITION                           0x4
#define _DAC5REFL_DAC5R4_SIZE                               0x1
#define _DAC5REFL_DAC5R4_LENGTH                             0x1
#define _DAC5REFL_DAC5R4_MASK                               0x10
#define _DAC5REFL_DAC5R5_POSN                               0x5
#define _DAC5REFL_DAC5R5_POSITION                           0x5
#define _DAC5REFL_DAC5R5_SIZE                               0x1
#define _DAC5REFL_DAC5R5_LENGTH                             0x1
#define _DAC5REFL_DAC5R5_MASK                               0x20
#define _DAC5REFL_DAC5R6_POSN                               0x6
#define _DAC5REFL_DAC5R6_POSITION                           0x6
#define _DAC5REFL_DAC5R6_SIZE                               0x1
#define _DAC5REFL_DAC5R6_LENGTH                             0x1
#define _DAC5REFL_DAC5R6_MASK                               0x40
#define _DAC5REFL_DAC5R7_POSN                               0x7
#define _DAC5REFL_DAC5R7_POSITION                           0x7
#define _DAC5REFL_DAC5R7_SIZE                               0x1
#define _DAC5REFL_DAC5R7_LENGTH                             0x1
#define _DAC5REFL_DAC5R7_MASK                               0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
        unsigned REF5                   :1;
        unsigned REF6                   :1;
        unsigned REF7                   :1;
    };
    struct {
        unsigned DAC5REF0               :1;
        unsigned DAC5REF1               :1;
        unsigned DAC5REF2               :1;
        unsigned DAC5REF3               :1;
        unsigned DAC5REF4               :1;
        unsigned DAC5REF5               :1;
        unsigned DAC5REF6               :1;
        unsigned DAC5REF7               :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
        unsigned R5                     :1;
        unsigned R6                     :1;
        unsigned R7                     :1;
    };
    struct {
        unsigned DAC5R0                 :1;
        unsigned DAC5R1                 :1;
        unsigned DAC5R2                 :1;
        unsigned DAC5R3                 :1;
        unsigned DAC5R4                 :1;
        unsigned DAC5R5                 :1;
        unsigned DAC5R6                 :1;
        unsigned DAC5R7                 :1;
    };
} DAC5CON1bits_t;
extern volatile DAC5CON1bits_t DAC5CON1bits __at(0x599);
// bitfield macros
#define _DAC5CON1_REF0_POSN                                 0x0
#define _DAC5CON1_REF0_POSITION                             0x0
#define _DAC5CON1_REF0_SIZE                                 0x1
#define _DAC5CON1_REF0_LENGTH                               0x1
#define _DAC5CON1_REF0_MASK                                 0x1
#define _DAC5CON1_REF1_POSN                                 0x1
#define _DAC5CON1_REF1_POSITION                             0x1
#define _DAC5CON1_REF1_SIZE                                 0x1
#define _DAC5CON1_REF1_LENGTH                               0x1
#define _DAC5CON1_REF1_MASK                                 0x2
#define _DAC5CON1_REF2_POSN                                 0x2
#define _DAC5CON1_REF2_POSITION                             0x2
#define _DAC5CON1_REF2_SIZE                                 0x1
#define _DAC5CON1_REF2_LENGTH                               0x1
#define _DAC5CON1_REF2_MASK                                 0x4
#define _DAC5CON1_REF3_POSN                                 0x3
#define _DAC5CON1_REF3_POSITION                             0x3
#define _DAC5CON1_REF3_SIZE                                 0x1
#define _DAC5CON1_REF3_LENGTH                               0x1
#define _DAC5CON1_REF3_MASK                                 0x8
#define _DAC5CON1_REF4_POSN                                 0x4
#define _DAC5CON1_REF4_POSITION                             0x4
#define _DAC5CON1_REF4_SIZE                                 0x1
#define _DAC5CON1_REF4_LENGTH                               0x1
#define _DAC5CON1_REF4_MASK                                 0x10
#define _DAC5CON1_REF5_POSN                                 0x5
#define _DAC5CON1_REF5_POSITION                             0x5
#define _DAC5CON1_REF5_SIZE                                 0x1
#define _DAC5CON1_REF5_LENGTH                               0x1
#define _DAC5CON1_REF5_MASK                                 0x20
#define _DAC5CON1_REF6_POSN                                 0x6
#define _DAC5CON1_REF6_POSITION                             0x6
#define _DAC5CON1_REF6_SIZE                                 0x1
#define _DAC5CON1_REF6_LENGTH                               0x1
#define _DAC5CON1_REF6_MASK                                 0x40
#define _DAC5CON1_REF7_POSN                                 0x7
#define _DAC5CON1_REF7_POSITION                             0x7
#define _DAC5CON1_REF7_SIZE                                 0x1
#define _DAC5CON1_REF7_LENGTH                               0x1
#define _DAC5CON1_REF7_MASK                                 0x80
#define _DAC5CON1_DAC5REF0_POSN                             0x0
#define _DAC5CON1_DAC5REF0_POSITION                         0x0
#define _DAC5CON1_DAC5REF0_SIZE                             0x1
#define _DAC5CON1_DAC5REF0_LENGTH                           0x1
#define _DAC5CON1_DAC5REF0_MASK                             0x1
#define _DAC5CON1_DAC5REF1_POSN                             0x1
#define _DAC5CON1_DAC5REF1_POSITION                         0x1
#define _DAC5CON1_DAC5REF1_SIZE                             0x1
#define _DAC5CON1_DAC5REF1_LENGTH                           0x1
#define _DAC5CON1_DAC5REF1_MASK                             0x2
#define _DAC5CON1_DAC5REF2_POSN                             0x2
#define _DAC5CON1_DAC5REF2_POSITION                         0x2
#define _DAC5CON1_DAC5REF2_SIZE                             0x1
#define _DAC5CON1_DAC5REF2_LENGTH                           0x1
#define _DAC5CON1_DAC5REF2_MASK                             0x4
#define _DAC5CON1_DAC5REF3_POSN                             0x3
#define _DAC5CON1_DAC5REF3_POSITION                         0x3
#define _DAC5CON1_DAC5REF3_SIZE                             0x1
#define _DAC5CON1_DAC5REF3_LENGTH                           0x1
#define _DAC5CON1_DAC5REF3_MASK                             0x8
#define _DAC5CON1_DAC5REF4_POSN                             0x4
#define _DAC5CON1_DAC5REF4_POSITION                         0x4
#define _DAC5CON1_DAC5REF4_SIZE                             0x1
#define _DAC5CON1_DAC5REF4_LENGTH                           0x1
#define _DAC5CON1_DAC5REF4_MASK                             0x10
#define _DAC5CON1_DAC5REF5_POSN                             0x5
#define _DAC5CON1_DAC5REF5_POSITION                         0x5
#define _DAC5CON1_DAC5REF5_SIZE                             0x1
#define _DAC5CON1_DAC5REF5_LENGTH                           0x1
#define _DAC5CON1_DAC5REF5_MASK                             0x20
#define _DAC5CON1_DAC5REF6_POSN                             0x6
#define _DAC5CON1_DAC5REF6_POSITION                         0x6
#define _DAC5CON1_DAC5REF6_SIZE                             0x1
#define _DAC5CON1_DAC5REF6_LENGTH                           0x1
#define _DAC5CON1_DAC5REF6_MASK                             0x40
#define _DAC5CON1_DAC5REF7_POSN                             0x7
#define _DAC5CON1_DAC5REF7_POSITION                         0x7
#define _DAC5CON1_DAC5REF7_SIZE                             0x1
#define _DAC5CON1_DAC5REF7_LENGTH                           0x1
#define _DAC5CON1_DAC5REF7_MASK                             0x80
#define _DAC5CON1_R0_POSN                                   0x0
#define _DAC5CON1_R0_POSITION                               0x0
#define _DAC5CON1_R0_SIZE                                   0x1
#define _DAC5CON1_R0_LENGTH                                 0x1
#define _DAC5CON1_R0_MASK                                   0x1
#define _DAC5CON1_R1_POSN                                   0x1
#define _DAC5CON1_R1_POSITION                               0x1
#define _DAC5CON1_R1_SIZE                                   0x1
#define _DAC5CON1_R1_LENGTH                                 0x1
#define _DAC5CON1_R1_MASK                                   0x2
#define _DAC5CON1_R2_POSN                                   0x2
#define _DAC5CON1_R2_POSITION                               0x2
#define _DAC5CON1_R2_SIZE                                   0x1
#define _DAC5CON1_R2_LENGTH                                 0x1
#define _DAC5CON1_R2_MASK                                   0x4
#define _DAC5CON1_R3_POSN                                   0x3
#define _DAC5CON1_R3_POSITION                               0x3
#define _DAC5CON1_R3_SIZE                                   0x1
#define _DAC5CON1_R3_LENGTH                                 0x1
#define _DAC5CON1_R3_MASK                                   0x8
#define _DAC5CON1_R4_POSN                                   0x4
#define _DAC5CON1_R4_POSITION                               0x4
#define _DAC5CON1_R4_SIZE                                   0x1
#define _DAC5CON1_R4_LENGTH                                 0x1
#define _DAC5CON1_R4_MASK                                   0x10
#define _DAC5CON1_R5_POSN                                   0x5
#define _DAC5CON1_R5_POSITION                               0x5
#define _DAC5CON1_R5_SIZE                                   0x1
#define _DAC5CON1_R5_LENGTH                                 0x1
#define _DAC5CON1_R5_MASK                                   0x20
#define _DAC5CON1_R6_POSN                                   0x6
#define _DAC5CON1_R6_POSITION                               0x6
#define _DAC5CON1_R6_SIZE                                   0x1
#define _DAC5CON1_R6_LENGTH                                 0x1
#define _DAC5CON1_R6_MASK                                   0x40
#define _DAC5CON1_R7_POSN                                   0x7
#define _DAC5CON1_R7_POSITION                               0x7
#define _DAC5CON1_R7_SIZE                                   0x1
#define _DAC5CON1_R7_LENGTH                                 0x1
#define _DAC5CON1_R7_MASK                                   0x80
#define _DAC5CON1_DAC5R0_POSN                               0x0
#define _DAC5CON1_DAC5R0_POSITION                           0x0
#define _DAC5CON1_DAC5R0_SIZE                               0x1
#define _DAC5CON1_DAC5R0_LENGTH                             0x1
#define _DAC5CON1_DAC5R0_MASK                               0x1
#define _DAC5CON1_DAC5R1_POSN                               0x1
#define _DAC5CON1_DAC5R1_POSITION                           0x1
#define _DAC5CON1_DAC5R1_SIZE                               0x1
#define _DAC5CON1_DAC5R1_LENGTH                             0x1
#define _DAC5CON1_DAC5R1_MASK                               0x2
#define _DAC5CON1_DAC5R2_POSN                               0x2
#define _DAC5CON1_DAC5R2_POSITION                           0x2
#define _DAC5CON1_DAC5R2_SIZE                               0x1
#define _DAC5CON1_DAC5R2_LENGTH                             0x1
#define _DAC5CON1_DAC5R2_MASK                               0x4
#define _DAC5CON1_DAC5R3_POSN                               0x3
#define _DAC5CON1_DAC5R3_POSITION                           0x3
#define _DAC5CON1_DAC5R3_SIZE                               0x1
#define _DAC5CON1_DAC5R3_LENGTH                             0x1
#define _DAC5CON1_DAC5R3_MASK                               0x8
#define _DAC5CON1_DAC5R4_POSN                               0x4
#define _DAC5CON1_DAC5R4_POSITION                           0x4
#define _DAC5CON1_DAC5R4_SIZE                               0x1
#define _DAC5CON1_DAC5R4_LENGTH                             0x1
#define _DAC5CON1_DAC5R4_MASK                               0x10
#define _DAC5CON1_DAC5R5_POSN                               0x5
#define _DAC5CON1_DAC5R5_POSITION                           0x5
#define _DAC5CON1_DAC5R5_SIZE                               0x1
#define _DAC5CON1_DAC5R5_LENGTH                             0x1
#define _DAC5CON1_DAC5R5_MASK                               0x20
#define _DAC5CON1_DAC5R6_POSN                               0x6
#define _DAC5CON1_DAC5R6_POSITION                           0x6
#define _DAC5CON1_DAC5R6_SIZE                               0x1
#define _DAC5CON1_DAC5R6_LENGTH                             0x1
#define _DAC5CON1_DAC5R6_MASK                               0x40
#define _DAC5CON1_DAC5R7_POSN                               0x7
#define _DAC5CON1_DAC5R7_POSITION                           0x7
#define _DAC5CON1_DAC5R7_SIZE                               0x1
#define _DAC5CON1_DAC5R7_LENGTH                             0x1
#define _DAC5CON1_DAC5R7_MASK                               0x80

// Register: DAC5REFH
#define DAC5REFH DAC5REFH
extern volatile unsigned char           DAC5REFH            __at(0x59A);
#ifndef _LIB_BUILD
asm("DAC5REFH equ 059Ah");
#endif
// aliases
extern volatile unsigned char           DAC5CON2            __at(0x59A);
#ifndef _LIB_BUILD
asm("DAC5CON2 equ 059Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned REF8                   :1;
        unsigned REF9                   :1;
        unsigned REF10                  :1;
        unsigned REF11                  :1;
        unsigned REF12                  :1;
        unsigned REF13                  :1;
        unsigned REF14                  :1;
        unsigned REF15                  :1;
    };
    struct {
        unsigned DAC5REF8               :1;
        unsigned DAC5REF9               :1;
        unsigned DAC5REF10              :1;
        unsigned DAC5REF11              :1;
        unsigned DAC5REF12              :1;
        unsigned DAC5REF13              :1;
        unsigned DAC5REF14              :1;
        unsigned DAC5REF15              :1;
    };
    struct {
        unsigned R8                     :1;
        unsigned R9                     :1;
        unsigned R10                    :1;
        unsigned R11                    :1;
        unsigned R12                    :1;
        unsigned R13                    :1;
        unsigned R14                    :1;
        unsigned R15                    :1;
    };
    struct {
        unsigned DAC5R8                 :1;
        unsigned DAC5R9                 :1;
        unsigned DAC5R10                :1;
        unsigned DAC5R11                :1;
        unsigned DAC5R12                :1;
        unsigned DAC5R13                :1;
        unsigned DAC5R14                :1;
        unsigned DAC5R15                :1;
    };
} DAC5REFHbits_t;
extern volatile DAC5REFHbits_t DAC5REFHbits __at(0x59A);
// bitfield macros
#define _DAC5REFH_REF8_POSN                                 0x0
#define _DAC5REFH_REF8_POSITION                             0x0
#define _DAC5REFH_REF8_SIZE                                 0x1
#define _DAC5REFH_REF8_LENGTH                               0x1
#define _DAC5REFH_REF8_MASK                                 0x1
#define _DAC5REFH_REF9_POSN                                 0x1
#define _DAC5REFH_REF9_POSITION                             0x1
#define _DAC5REFH_REF9_SIZE                                 0x1
#define _DAC5REFH_REF9_LENGTH                               0x1
#define _DAC5REFH_REF9_MASK                                 0x2
#define _DAC5REFH_REF10_POSN                                0x2
#define _DAC5REFH_REF10_POSITION                            0x2
#define _DAC5REFH_REF10_SIZE                                0x1
#define _DAC5REFH_REF10_LENGTH                              0x1
#define _DAC5REFH_REF10_MASK                                0x4
#define _DAC5REFH_REF11_POSN                                0x3
#define _DAC5REFH_REF11_POSITION                            0x3
#define _DAC5REFH_REF11_SIZE                                0x1
#define _DAC5REFH_REF11_LENGTH                              0x1
#define _DAC5REFH_REF11_MASK                                0x8
#define _DAC5REFH_REF12_POSN                                0x4
#define _DAC5REFH_REF12_POSITION                            0x4
#define _DAC5REFH_REF12_SIZE                                0x1
#define _DAC5REFH_REF12_LENGTH                              0x1
#define _DAC5REFH_REF12_MASK                                0x10
#define _DAC5REFH_REF13_POSN                                0x5
#define _DAC5REFH_REF13_POSITION                            0x5
#define _DAC5REFH_REF13_SIZE                                0x1
#define _DAC5REFH_REF13_LENGTH                              0x1
#define _DAC5REFH_REF13_MASK                                0x20
#define _DAC5REFH_REF14_POSN                                0x6
#define _DAC5REFH_REF14_POSITION                            0x6
#define _DAC5REFH_REF14_SIZE                                0x1
#define _DAC5REFH_REF14_LENGTH                              0x1
#define _DAC5REFH_REF14_MASK                                0x40
#define _DAC5REFH_REF15_POSN                                0x7
#define _DAC5REFH_REF15_POSITION                            0x7
#define _DAC5REFH_REF15_SIZE                                0x1
#define _DAC5REFH_REF15_LENGTH                              0x1
#define _DAC5REFH_REF15_MASK                                0x80
#define _DAC5REFH_DAC5REF8_POSN                             0x0
#define _DAC5REFH_DAC5REF8_POSITION                         0x0
#define _DAC5REFH_DAC5REF8_SIZE                             0x1
#define _DAC5REFH_DAC5REF8_LENGTH                           0x1
#define _DAC5REFH_DAC5REF8_MASK                             0x1
#define _DAC5REFH_DAC5REF9_POSN                             0x1
#define _DAC5REFH_DAC5REF9_POSITION                         0x1
#define _DAC5REFH_DAC5REF9_SIZE                             0x1
#define _DAC5REFH_DAC5REF9_LENGTH                           0x1
#define _DAC5REFH_DAC5REF9_MASK                             0x2
#define _DAC5REFH_DAC5REF10_POSN                            0x2
#define _DAC5REFH_DAC5REF10_POSITION                        0x2
#define _DAC5REFH_DAC5REF10_SIZE                            0x1
#define _DAC5REFH_DAC5REF10_LENGTH                          0x1
#define _DAC5REFH_DAC5REF10_MASK                            0x4
#define _DAC5REFH_DAC5REF11_POSN                            0x3
#define _DAC5REFH_DAC5REF11_POSITION                        0x3
#define _DAC5REFH_DAC5REF11_SIZE                            0x1
#define _DAC5REFH_DAC5REF11_LENGTH                          0x1
#define _DAC5REFH_DAC5REF11_MASK                            0x8
#define _DAC5REFH_DAC5REF12_POSN                            0x4
#define _DAC5REFH_DAC5REF12_POSITION                        0x4
#define _DAC5REFH_DAC5REF12_SIZE                            0x1
#define _DAC5REFH_DAC5REF12_LENGTH                          0x1
#define _DAC5REFH_DAC5REF12_MASK                            0x10
#define _DAC5REFH_DAC5REF13_POSN                            0x5
#define _DAC5REFH_DAC5REF13_POSITION                        0x5
#define _DAC5REFH_DAC5REF13_SIZE                            0x1
#define _DAC5REFH_DAC5REF13_LENGTH                          0x1
#define _DAC5REFH_DAC5REF13_MASK                            0x20
#define _DAC5REFH_DAC5REF14_POSN                            0x6
#define _DAC5REFH_DAC5REF14_POSITION                        0x6
#define _DAC5REFH_DAC5REF14_SIZE                            0x1
#define _DAC5REFH_DAC5REF14_LENGTH                          0x1
#define _DAC5REFH_DAC5REF14_MASK                            0x40
#define _DAC5REFH_DAC5REF15_POSN                            0x7
#define _DAC5REFH_DAC5REF15_POSITION                        0x7
#define _DAC5REFH_DAC5REF15_SIZE                            0x1
#define _DAC5REFH_DAC5REF15_LENGTH                          0x1
#define _DAC5REFH_DAC5REF15_MASK                            0x80
#define _DAC5REFH_R8_POSN                                   0x0
#define _DAC5REFH_R8_POSITION                               0x0
#define _DAC5REFH_R8_SIZE                                   0x1
#define _DAC5REFH_R8_LENGTH                                 0x1
#define _DAC5REFH_R8_MASK                                   0x1
#define _DAC5REFH_R9_POSN                                   0x1
#define _DAC5REFH_R9_POSITION                               0x1
#define _DAC5REFH_R9_SIZE                                   0x1
#define _DAC5REFH_R9_LENGTH                                 0x1
#define _DAC5REFH_R9_MASK                                   0x2
#define _DAC5REFH_R10_POSN                                  0x2
#define _DAC5REFH_R10_POSITION                              0x2
#define _DAC5REFH_R10_SIZE                                  0x1
#define _DAC5REFH_R10_LENGTH                                0x1
#define _DAC5REFH_R10_MASK                                  0x4
#define _DAC5REFH_R11_POSN                                  0x3
#define _DAC5REFH_R11_POSITION                              0x3
#define _DAC5REFH_R11_SIZE                                  0x1
#define _DAC5REFH_R11_LENGTH                                0x1
#define _DAC5REFH_R11_MASK                                  0x8
#define _DAC5REFH_R12_POSN                                  0x4
#define _DAC5REFH_R12_POSITION                              0x4
#define _DAC5REFH_R12_SIZE                                  0x1
#define _DAC5REFH_R12_LENGTH                                0x1
#define _DAC5REFH_R12_MASK                                  0x10
#define _DAC5REFH_R13_POSN                                  0x5
#define _DAC5REFH_R13_POSITION                              0x5
#define _DAC5REFH_R13_SIZE                                  0x1
#define _DAC5REFH_R13_LENGTH                                0x1
#define _DAC5REFH_R13_MASK                                  0x20
#define _DAC5REFH_R14_POSN                                  0x6
#define _DAC5REFH_R14_POSITION                              0x6
#define _DAC5REFH_R14_SIZE                                  0x1
#define _DAC5REFH_R14_LENGTH                                0x1
#define _DAC5REFH_R14_MASK                                  0x40
#define _DAC5REFH_R15_POSN                                  0x7
#define _DAC5REFH_R15_POSITION                              0x7
#define _DAC5REFH_R15_SIZE                                  0x1
#define _DAC5REFH_R15_LENGTH                                0x1
#define _DAC5REFH_R15_MASK                                  0x80
#define _DAC5REFH_DAC5R8_POSN                               0x0
#define _DAC5REFH_DAC5R8_POSITION                           0x0
#define _DAC5REFH_DAC5R8_SIZE                               0x1
#define _DAC5REFH_DAC5R8_LENGTH                             0x1
#define _DAC5REFH_DAC5R8_MASK                               0x1
#define _DAC5REFH_DAC5R9_POSN                               0x1
#define _DAC5REFH_DAC5R9_POSITION                           0x1
#define _DAC5REFH_DAC5R9_SIZE                               0x1
#define _DAC5REFH_DAC5R9_LENGTH                             0x1
#define _DAC5REFH_DAC5R9_MASK                               0x2
#define _DAC5REFH_DAC5R10_POSN                              0x2
#define _DAC5REFH_DAC5R10_POSITION                          0x2
#define _DAC5REFH_DAC5R10_SIZE                              0x1
#define _DAC5REFH_DAC5R10_LENGTH                            0x1
#define _DAC5REFH_DAC5R10_MASK                              0x4
#define _DAC5REFH_DAC5R11_POSN                              0x3
#define _DAC5REFH_DAC5R11_POSITION                          0x3
#define _DAC5REFH_DAC5R11_SIZE                              0x1
#define _DAC5REFH_DAC5R11_LENGTH                            0x1
#define _DAC5REFH_DAC5R11_MASK                              0x8
#define _DAC5REFH_DAC5R12_POSN                              0x4
#define _DAC5REFH_DAC5R12_POSITION                          0x4
#define _DAC5REFH_DAC5R12_SIZE                              0x1
#define _DAC5REFH_DAC5R12_LENGTH                            0x1
#define _DAC5REFH_DAC5R12_MASK                              0x10
#define _DAC5REFH_DAC5R13_POSN                              0x5
#define _DAC5REFH_DAC5R13_POSITION                          0x5
#define _DAC5REFH_DAC5R13_SIZE                              0x1
#define _DAC5REFH_DAC5R13_LENGTH                            0x1
#define _DAC5REFH_DAC5R13_MASK                              0x20
#define _DAC5REFH_DAC5R14_POSN                              0x6
#define _DAC5REFH_DAC5R14_POSITION                          0x6
#define _DAC5REFH_DAC5R14_SIZE                              0x1
#define _DAC5REFH_DAC5R14_LENGTH                            0x1
#define _DAC5REFH_DAC5R14_MASK                              0x40
#define _DAC5REFH_DAC5R15_POSN                              0x7
#define _DAC5REFH_DAC5R15_POSITION                          0x7
#define _DAC5REFH_DAC5R15_SIZE                              0x1
#define _DAC5REFH_DAC5R15_LENGTH                            0x1
#define _DAC5REFH_DAC5R15_MASK                              0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned REF8                   :1;
        unsigned REF9                   :1;
        unsigned REF10                  :1;
        unsigned REF11                  :1;
        unsigned REF12                  :1;
        unsigned REF13                  :1;
        unsigned REF14                  :1;
        unsigned REF15                  :1;
    };
    struct {
        unsigned DAC5REF8               :1;
        unsigned DAC5REF9               :1;
        unsigned DAC5REF10              :1;
        unsigned DAC5REF11              :1;
        unsigned DAC5REF12              :1;
        unsigned DAC5REF13              :1;
        unsigned DAC5REF14              :1;
        unsigned DAC5REF15              :1;
    };
    struct {
        unsigned R8                     :1;
        unsigned R9                     :1;
        unsigned R10                    :1;
        unsigned R11                    :1;
        unsigned R12                    :1;
        unsigned R13                    :1;
        unsigned R14                    :1;
        unsigned R15                    :1;
    };
    struct {
        unsigned DAC5R8                 :1;
        unsigned DAC5R9                 :1;
        unsigned DAC5R10                :1;
        unsigned DAC5R11                :1;
        unsigned DAC5R12                :1;
        unsigned DAC5R13                :1;
        unsigned DAC5R14                :1;
        unsigned DAC5R15                :1;
    };
} DAC5CON2bits_t;
extern volatile DAC5CON2bits_t DAC5CON2bits __at(0x59A);
// bitfield macros
#define _DAC5CON2_REF8_POSN                                 0x0
#define _DAC5CON2_REF8_POSITION                             0x0
#define _DAC5CON2_REF8_SIZE                                 0x1
#define _DAC5CON2_REF8_LENGTH                               0x1
#define _DAC5CON2_REF8_MASK                                 0x1
#define _DAC5CON2_REF9_POSN                                 0x1
#define _DAC5CON2_REF9_POSITION                             0x1
#define _DAC5CON2_REF9_SIZE                                 0x1
#define _DAC5CON2_REF9_LENGTH                               0x1
#define _DAC5CON2_REF9_MASK                                 0x2
#define _DAC5CON2_REF10_POSN                                0x2
#define _DAC5CON2_REF10_POSITION                            0x2
#define _DAC5CON2_REF10_SIZE                                0x1
#define _DAC5CON2_REF10_LENGTH                              0x1
#define _DAC5CON2_REF10_MASK                                0x4
#define _DAC5CON2_REF11_POSN                                0x3
#define _DAC5CON2_REF11_POSITION                            0x3
#define _DAC5CON2_REF11_SIZE                                0x1
#define _DAC5CON2_REF11_LENGTH                              0x1
#define _DAC5CON2_REF11_MASK                                0x8
#define _DAC5CON2_REF12_POSN                                0x4
#define _DAC5CON2_REF12_POSITION                            0x4
#define _DAC5CON2_REF12_SIZE                                0x1
#define _DAC5CON2_REF12_LENGTH                              0x1
#define _DAC5CON2_REF12_MASK                                0x10
#define _DAC5CON2_REF13_POSN                                0x5
#define _DAC5CON2_REF13_POSITION                            0x5
#define _DAC5CON2_REF13_SIZE                                0x1
#define _DAC5CON2_REF13_LENGTH                              0x1
#define _DAC5CON2_REF13_MASK                                0x20
#define _DAC5CON2_REF14_POSN                                0x6
#define _DAC5CON2_REF14_POSITION                            0x6
#define _DAC5CON2_REF14_SIZE                                0x1
#define _DAC5CON2_REF14_LENGTH                              0x1
#define _DAC5CON2_REF14_MASK                                0x40
#define _DAC5CON2_REF15_POSN                                0x7
#define _DAC5CON2_REF15_POSITION                            0x7
#define _DAC5CON2_REF15_SIZE                                0x1
#define _DAC5CON2_REF15_LENGTH                              0x1
#define _DAC5CON2_REF15_MASK                                0x80
#define _DAC5CON2_DAC5REF8_POSN                             0x0
#define _DAC5CON2_DAC5REF8_POSITION                         0x0
#define _DAC5CON2_DAC5REF8_SIZE                             0x1
#define _DAC5CON2_DAC5REF8_LENGTH                           0x1
#define _DAC5CON2_DAC5REF8_MASK                             0x1
#define _DAC5CON2_DAC5REF9_POSN                             0x1
#define _DAC5CON2_DAC5REF9_POSITION                         0x1
#define _DAC5CON2_DAC5REF9_SIZE                             0x1
#define _DAC5CON2_DAC5REF9_LENGTH                           0x1
#define _DAC5CON2_DAC5REF9_MASK                             0x2
#define _DAC5CON2_DAC5REF10_POSN                            0x2
#define _DAC5CON2_DAC5REF10_POSITION                        0x2
#define _DAC5CON2_DAC5REF10_SIZE                            0x1
#define _DAC5CON2_DAC5REF10_LENGTH                          0x1
#define _DAC5CON2_DAC5REF10_MASK                            0x4
#define _DAC5CON2_DAC5REF11_POSN                            0x3
#define _DAC5CON2_DAC5REF11_POSITION                        0x3
#define _DAC5CON2_DAC5REF11_SIZE                            0x1
#define _DAC5CON2_DAC5REF11_LENGTH                          0x1
#define _DAC5CON2_DAC5REF11_MASK                            0x8
#define _DAC5CON2_DAC5REF12_POSN                            0x4
#define _DAC5CON2_DAC5REF12_POSITION                        0x4
#define _DAC5CON2_DAC5REF12_SIZE                            0x1
#define _DAC5CON2_DAC5REF12_LENGTH                          0x1
#define _DAC5CON2_DAC5REF12_MASK                            0x10
#define _DAC5CON2_DAC5REF13_POSN                            0x5
#define _DAC5CON2_DAC5REF13_POSITION                        0x5
#define _DAC5CON2_DAC5REF13_SIZE                            0x1
#define _DAC5CON2_DAC5REF13_LENGTH                          0x1
#define _DAC5CON2_DAC5REF13_MASK                            0x20
#define _DAC5CON2_DAC5REF14_POSN                            0x6
#define _DAC5CON2_DAC5REF14_POSITION                        0x6
#define _DAC5CON2_DAC5REF14_SIZE                            0x1
#define _DAC5CON2_DAC5REF14_LENGTH                          0x1
#define _DAC5CON2_DAC5REF14_MASK                            0x40
#define _DAC5CON2_DAC5REF15_POSN                            0x7
#define _DAC5CON2_DAC5REF15_POSITION                        0x7
#define _DAC5CON2_DAC5REF15_SIZE                            0x1
#define _DAC5CON2_DAC5REF15_LENGTH                          0x1
#define _DAC5CON2_DAC5REF15_MASK                            0x80
#define _DAC5CON2_R8_POSN                                   0x0
#define _DAC5CON2_R8_POSITION                               0x0
#define _DAC5CON2_R8_SIZE                                   0x1
#define _DAC5CON2_R8_LENGTH                                 0x1
#define _DAC5CON2_R8_MASK                                   0x1
#define _DAC5CON2_R9_POSN                                   0x1
#define _DAC5CON2_R9_POSITION                               0x1
#define _DAC5CON2_R9_SIZE                                   0x1
#define _DAC5CON2_R9_LENGTH                                 0x1
#define _DAC5CON2_R9_MASK                                   0x2
#define _DAC5CON2_R10_POSN                                  0x2
#define _DAC5CON2_R10_POSITION                              0x2
#define _DAC5CON2_R10_SIZE                                  0x1
#define _DAC5CON2_R10_LENGTH                                0x1
#define _DAC5CON2_R10_MASK                                  0x4
#define _DAC5CON2_R11_POSN                                  0x3
#define _DAC5CON2_R11_POSITION                              0x3
#define _DAC5CON2_R11_SIZE                                  0x1
#define _DAC5CON2_R11_LENGTH                                0x1
#define _DAC5CON2_R11_MASK                                  0x8
#define _DAC5CON2_R12_POSN                                  0x4
#define _DAC5CON2_R12_POSITION                              0x4
#define _DAC5CON2_R12_SIZE                                  0x1
#define _DAC5CON2_R12_LENGTH                                0x1
#define _DAC5CON2_R12_MASK                                  0x10
#define _DAC5CON2_R13_POSN                                  0x5
#define _DAC5CON2_R13_POSITION                              0x5
#define _DAC5CON2_R13_SIZE                                  0x1
#define _DAC5CON2_R13_LENGTH                                0x1
#define _DAC5CON2_R13_MASK                                  0x20
#define _DAC5CON2_R14_POSN                                  0x6
#define _DAC5CON2_R14_POSITION                              0x6
#define _DAC5CON2_R14_SIZE                                  0x1
#define _DAC5CON2_R14_LENGTH                                0x1
#define _DAC5CON2_R14_MASK                                  0x40
#define _DAC5CON2_R15_POSN                                  0x7
#define _DAC5CON2_R15_POSITION                              0x7
#define _DAC5CON2_R15_SIZE                                  0x1
#define _DAC5CON2_R15_LENGTH                                0x1
#define _DAC5CON2_R15_MASK                                  0x80
#define _DAC5CON2_DAC5R8_POSN                               0x0
#define _DAC5CON2_DAC5R8_POSITION                           0x0
#define _DAC5CON2_DAC5R8_SIZE                               0x1
#define _DAC5CON2_DAC5R8_LENGTH                             0x1
#define _DAC5CON2_DAC5R8_MASK                               0x1
#define _DAC5CON2_DAC5R9_POSN                               0x1
#define _DAC5CON2_DAC5R9_POSITION                           0x1
#define _DAC5CON2_DAC5R9_SIZE                               0x1
#define _DAC5CON2_DAC5R9_LENGTH                             0x1
#define _DAC5CON2_DAC5R9_MASK                               0x2
#define _DAC5CON2_DAC5R10_POSN                              0x2
#define _DAC5CON2_DAC5R10_POSITION                          0x2
#define _DAC5CON2_DAC5R10_SIZE                              0x1
#define _DAC5CON2_DAC5R10_LENGTH                            0x1
#define _DAC5CON2_DAC5R10_MASK                              0x4
#define _DAC5CON2_DAC5R11_POSN                              0x3
#define _DAC5CON2_DAC5R11_POSITION                          0x3
#define _DAC5CON2_DAC5R11_SIZE                              0x1
#define _DAC5CON2_DAC5R11_LENGTH                            0x1
#define _DAC5CON2_DAC5R11_MASK                              0x8
#define _DAC5CON2_DAC5R12_POSN                              0x4
#define _DAC5CON2_DAC5R12_POSITION                          0x4
#define _DAC5CON2_DAC5R12_SIZE                              0x1
#define _DAC5CON2_DAC5R12_LENGTH                            0x1
#define _DAC5CON2_DAC5R12_MASK                              0x10
#define _DAC5CON2_DAC5R13_POSN                              0x5
#define _DAC5CON2_DAC5R13_POSITION                          0x5
#define _DAC5CON2_DAC5R13_SIZE                              0x1
#define _DAC5CON2_DAC5R13_LENGTH                            0x1
#define _DAC5CON2_DAC5R13_MASK                              0x20
#define _DAC5CON2_DAC5R14_POSN                              0x6
#define _DAC5CON2_DAC5R14_POSITION                          0x6
#define _DAC5CON2_DAC5R14_SIZE                              0x1
#define _DAC5CON2_DAC5R14_LENGTH                            0x1
#define _DAC5CON2_DAC5R14_MASK                              0x40
#define _DAC5CON2_DAC5R15_POSN                              0x7
#define _DAC5CON2_DAC5R15_POSITION                          0x7
#define _DAC5CON2_DAC5R15_SIZE                              0x1
#define _DAC5CON2_DAC5R15_LENGTH                            0x1
#define _DAC5CON2_DAC5R15_MASK                              0x80

// Register: DAC6CON0
#define DAC6CON0 DAC6CON0
extern volatile unsigned char           DAC6CON0            __at(0x59B);
#ifndef _LIB_BUILD
asm("DAC6CON0 equ 059Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NSS                    :2;
        unsigned PSS                    :2;
        unsigned OE2                    :1;
        unsigned OE1                    :1;
        unsigned FM                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned NSS0                   :1;
        unsigned NSS1                   :1;
        unsigned PSS0                   :1;
        unsigned PSS1                   :1;
        unsigned                        :1;
        unsigned OE                     :1;
    };
    struct {
        unsigned DACNSS                 :2;
        unsigned DACPSS                 :2;
        unsigned DACOE2                 :1;
        unsigned DACOE1                 :1;
        unsigned DACFM                  :1;
        unsigned DACEN                  :1;
    };
    struct {
        unsigned DACNSS0                :1;
        unsigned DACNSS1                :1;
        unsigned DACPSS0                :1;
        unsigned DACPSS1                :1;
        unsigned                        :1;
        unsigned DACOE                  :1;
    };
    struct {
        unsigned DAC6NSS                :2;
        unsigned DAC6PSS                :2;
        unsigned DAC6OE2                :1;
        unsigned DAC6OE1                :1;
        unsigned DAC6FM                 :1;
        unsigned DAC6EN                 :1;
    };
    struct {
        unsigned DAC6NSS0               :1;
        unsigned DAC6NSS1               :1;
        unsigned DAC6PSS0               :1;
        unsigned DAC6PSS1               :1;
    };
} DAC6CON0bits_t;
extern volatile DAC6CON0bits_t DAC6CON0bits __at(0x59B);
// bitfield macros
#define _DAC6CON0_NSS_POSN                                  0x0
#define _DAC6CON0_NSS_POSITION                              0x0
#define _DAC6CON0_NSS_SIZE                                  0x2
#define _DAC6CON0_NSS_LENGTH                                0x2
#define _DAC6CON0_NSS_MASK                                  0x3
#define _DAC6CON0_PSS_POSN                                  0x2
#define _DAC6CON0_PSS_POSITION                              0x2
#define _DAC6CON0_PSS_SIZE                                  0x2
#define _DAC6CON0_PSS_LENGTH                                0x2
#define _DAC6CON0_PSS_MASK                                  0xC
#define _DAC6CON0_OE2_POSN                                  0x4
#define _DAC6CON0_OE2_POSITION                              0x4
#define _DAC6CON0_OE2_SIZE                                  0x1
#define _DAC6CON0_OE2_LENGTH                                0x1
#define _DAC6CON0_OE2_MASK                                  0x10
#define _DAC6CON0_OE1_POSN                                  0x5
#define _DAC6CON0_OE1_POSITION                              0x5
#define _DAC6CON0_OE1_SIZE                                  0x1
#define _DAC6CON0_OE1_LENGTH                                0x1
#define _DAC6CON0_OE1_MASK                                  0x20
#define _DAC6CON0_FM_POSN                                   0x6
#define _DAC6CON0_FM_POSITION                               0x6
#define _DAC6CON0_FM_SIZE                                   0x1
#define _DAC6CON0_FM_LENGTH                                 0x1
#define _DAC6CON0_FM_MASK                                   0x40
#define _DAC6CON0_EN_POSN                                   0x7
#define _DAC6CON0_EN_POSITION                               0x7
#define _DAC6CON0_EN_SIZE                                   0x1
#define _DAC6CON0_EN_LENGTH                                 0x1
#define _DAC6CON0_EN_MASK                                   0x80
#define _DAC6CON0_NSS0_POSN                                 0x0
#define _DAC6CON0_NSS0_POSITION                             0x0
#define _DAC6CON0_NSS0_SIZE                                 0x1
#define _DAC6CON0_NSS0_LENGTH                               0x1
#define _DAC6CON0_NSS0_MASK                                 0x1
#define _DAC6CON0_NSS1_POSN                                 0x1
#define _DAC6CON0_NSS1_POSITION                             0x1
#define _DAC6CON0_NSS1_SIZE                                 0x1
#define _DAC6CON0_NSS1_LENGTH                               0x1
#define _DAC6CON0_NSS1_MASK                                 0x2
#define _DAC6CON0_PSS0_POSN                                 0x2
#define _DAC6CON0_PSS0_POSITION                             0x2
#define _DAC6CON0_PSS0_SIZE                                 0x1
#define _DAC6CON0_PSS0_LENGTH                               0x1
#define _DAC6CON0_PSS0_MASK                                 0x4
#define _DAC6CON0_PSS1_POSN                                 0x3
#define _DAC6CON0_PSS1_POSITION                             0x3
#define _DAC6CON0_PSS1_SIZE                                 0x1
#define _DAC6CON0_PSS1_LENGTH                               0x1
#define _DAC6CON0_PSS1_MASK                                 0x8
#define _DAC6CON0_OE_POSN                                   0x5
#define _DAC6CON0_OE_POSITION                               0x5
#define _DAC6CON0_OE_SIZE                                   0x1
#define _DAC6CON0_OE_LENGTH                                 0x1
#define _DAC6CON0_OE_MASK                                   0x20
#define _DAC6CON0_DACNSS_POSN                               0x0
#define _DAC6CON0_DACNSS_POSITION                           0x0
#define _DAC6CON0_DACNSS_SIZE                               0x2
#define _DAC6CON0_DACNSS_LENGTH                             0x2
#define _DAC6CON0_DACNSS_MASK                               0x3
#define _DAC6CON0_DACPSS_POSN                               0x2
#define _DAC6CON0_DACPSS_POSITION                           0x2
#define _DAC6CON0_DACPSS_SIZE                               0x2
#define _DAC6CON0_DACPSS_LENGTH                             0x2
#define _DAC6CON0_DACPSS_MASK                               0xC
#define _DAC6CON0_DACOE2_POSN                               0x4
#define _DAC6CON0_DACOE2_POSITION                           0x4
#define _DAC6CON0_DACOE2_SIZE                               0x1
#define _DAC6CON0_DACOE2_LENGTH                             0x1
#define _DAC6CON0_DACOE2_MASK                               0x10
#define _DAC6CON0_DACOE1_POSN                               0x5
#define _DAC6CON0_DACOE1_POSITION                           0x5
#define _DAC6CON0_DACOE1_SIZE                               0x1
#define _DAC6CON0_DACOE1_LENGTH                             0x1
#define _DAC6CON0_DACOE1_MASK                               0x20
#define _DAC6CON0_DACFM_POSN                                0x6
#define _DAC6CON0_DACFM_POSITION                            0x6
#define _DAC6CON0_DACFM_SIZE                                0x1
#define _DAC6CON0_DACFM_LENGTH                              0x1
#define _DAC6CON0_DACFM_MASK                                0x40
#define _DAC6CON0_DACEN_POSN                                0x7
#define _DAC6CON0_DACEN_POSITION                            0x7
#define _DAC6CON0_DACEN_SIZE                                0x1
#define _DAC6CON0_DACEN_LENGTH                              0x1
#define _DAC6CON0_DACEN_MASK                                0x80
#define _DAC6CON0_DACNSS0_POSN                              0x0
#define _DAC6CON0_DACNSS0_POSITION                          0x0
#define _DAC6CON0_DACNSS0_SIZE                              0x1
#define _DAC6CON0_DACNSS0_LENGTH                            0x1
#define _DAC6CON0_DACNSS0_MASK                              0x1
#define _DAC6CON0_DACNSS1_POSN                              0x1
#define _DAC6CON0_DACNSS1_POSITION                          0x1
#define _DAC6CON0_DACNSS1_SIZE                              0x1
#define _DAC6CON0_DACNSS1_LENGTH                            0x1
#define _DAC6CON0_DACNSS1_MASK                              0x2
#define _DAC6CON0_DACPSS0_POSN                              0x2
#define _DAC6CON0_DACPSS0_POSITION                          0x2
#define _DAC6CON0_DACPSS0_SIZE                              0x1
#define _DAC6CON0_DACPSS0_LENGTH                            0x1
#define _DAC6CON0_DACPSS0_MASK                              0x4
#define _DAC6CON0_DACPSS1_POSN                              0x3
#define _DAC6CON0_DACPSS1_POSITION                          0x3
#define _DAC6CON0_DACPSS1_SIZE                              0x1
#define _DAC6CON0_DACPSS1_LENGTH                            0x1
#define _DAC6CON0_DACPSS1_MASK                              0x8
#define _DAC6CON0_DACOE_POSN                                0x5
#define _DAC6CON0_DACOE_POSITION                            0x5
#define _DAC6CON0_DACOE_SIZE                                0x1
#define _DAC6CON0_DACOE_LENGTH                              0x1
#define _DAC6CON0_DACOE_MASK                                0x20
#define _DAC6CON0_DAC6NSS_POSN                              0x0
#define _DAC6CON0_DAC6NSS_POSITION                          0x0
#define _DAC6CON0_DAC6NSS_SIZE                              0x2
#define _DAC6CON0_DAC6NSS_LENGTH                            0x2
#define _DAC6CON0_DAC6NSS_MASK                              0x3
#define _DAC6CON0_DAC6PSS_POSN                              0x2
#define _DAC6CON0_DAC6PSS_POSITION                          0x2
#define _DAC6CON0_DAC6PSS_SIZE                              0x2
#define _DAC6CON0_DAC6PSS_LENGTH                            0x2
#define _DAC6CON0_DAC6PSS_MASK                              0xC
#define _DAC6CON0_DAC6OE2_POSN                              0x4
#define _DAC6CON0_DAC6OE2_POSITION                          0x4
#define _DAC6CON0_DAC6OE2_SIZE                              0x1
#define _DAC6CON0_DAC6OE2_LENGTH                            0x1
#define _DAC6CON0_DAC6OE2_MASK                              0x10
#define _DAC6CON0_DAC6OE1_POSN                              0x5
#define _DAC6CON0_DAC6OE1_POSITION                          0x5
#define _DAC6CON0_DAC6OE1_SIZE                              0x1
#define _DAC6CON0_DAC6OE1_LENGTH                            0x1
#define _DAC6CON0_DAC6OE1_MASK                              0x20
#define _DAC6CON0_DAC6FM_POSN                               0x6
#define _DAC6CON0_DAC6FM_POSITION                           0x6
#define _DAC6CON0_DAC6FM_SIZE                               0x1
#define _DAC6CON0_DAC6FM_LENGTH                             0x1
#define _DAC6CON0_DAC6FM_MASK                               0x40
#define _DAC6CON0_DAC6EN_POSN                               0x7
#define _DAC6CON0_DAC6EN_POSITION                           0x7
#define _DAC6CON0_DAC6EN_SIZE                               0x1
#define _DAC6CON0_DAC6EN_LENGTH                             0x1
#define _DAC6CON0_DAC6EN_MASK                               0x80
#define _DAC6CON0_DAC6NSS0_POSN                             0x0
#define _DAC6CON0_DAC6NSS0_POSITION                         0x0
#define _DAC6CON0_DAC6NSS0_SIZE                             0x1
#define _DAC6CON0_DAC6NSS0_LENGTH                           0x1
#define _DAC6CON0_DAC6NSS0_MASK                             0x1
#define _DAC6CON0_DAC6NSS1_POSN                             0x1
#define _DAC6CON0_DAC6NSS1_POSITION                         0x1
#define _DAC6CON0_DAC6NSS1_SIZE                             0x1
#define _DAC6CON0_DAC6NSS1_LENGTH                           0x1
#define _DAC6CON0_DAC6NSS1_MASK                             0x2
#define _DAC6CON0_DAC6PSS0_POSN                             0x2
#define _DAC6CON0_DAC6PSS0_POSITION                         0x2
#define _DAC6CON0_DAC6PSS0_SIZE                             0x1
#define _DAC6CON0_DAC6PSS0_LENGTH                           0x1
#define _DAC6CON0_DAC6PSS0_MASK                             0x4
#define _DAC6CON0_DAC6PSS1_POSN                             0x3
#define _DAC6CON0_DAC6PSS1_POSITION                         0x3
#define _DAC6CON0_DAC6PSS1_SIZE                             0x1
#define _DAC6CON0_DAC6PSS1_LENGTH                           0x1
#define _DAC6CON0_DAC6PSS1_MASK                             0x8

// Register: DAC6REF
#define DAC6REF DAC6REF
extern volatile unsigned short          DAC6REF             __at(0x59C);
#ifndef _LIB_BUILD
asm("DAC6REF equ 059Ch");
#endif

// Register: DAC6REFL
#define DAC6REFL DAC6REFL
extern volatile unsigned char           DAC6REFL            __at(0x59C);
#ifndef _LIB_BUILD
asm("DAC6REFL equ 059Ch");
#endif
// aliases
extern volatile unsigned char           DAC6CON1            __at(0x59C);
#ifndef _LIB_BUILD
asm("DAC6CON1 equ 059Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
        unsigned REF5                   :1;
        unsigned REF6                   :1;
        unsigned REF7                   :1;
    };
    struct {
        unsigned DAC6REF0               :1;
        unsigned DAC6REF1               :1;
        unsigned DAC6REF2               :1;
        unsigned DAC6REF3               :1;
        unsigned DAC6REF4               :1;
        unsigned DAC6REF5               :1;
        unsigned DAC6REF6               :1;
        unsigned DAC6REF7               :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
        unsigned R5                     :1;
        unsigned R6                     :1;
        unsigned R7                     :1;
    };
    struct {
        unsigned DAC6R0                 :1;
        unsigned DAC6R1                 :1;
        unsigned DAC6R2                 :1;
        unsigned DAC6R3                 :1;
        unsigned DAC6R4                 :1;
        unsigned DAC6R5                 :1;
        unsigned DAC6R6                 :1;
        unsigned DAC6R7                 :1;
    };
} DAC6REFLbits_t;
extern volatile DAC6REFLbits_t DAC6REFLbits __at(0x59C);
// bitfield macros
#define _DAC6REFL_REF0_POSN                                 0x0
#define _DAC6REFL_REF0_POSITION                             0x0
#define _DAC6REFL_REF0_SIZE                                 0x1
#define _DAC6REFL_REF0_LENGTH                               0x1
#define _DAC6REFL_REF0_MASK                                 0x1
#define _DAC6REFL_REF1_POSN                                 0x1
#define _DAC6REFL_REF1_POSITION                             0x1
#define _DAC6REFL_REF1_SIZE                                 0x1
#define _DAC6REFL_REF1_LENGTH                               0x1
#define _DAC6REFL_REF1_MASK                                 0x2
#define _DAC6REFL_REF2_POSN                                 0x2
#define _DAC6REFL_REF2_POSITION                             0x2
#define _DAC6REFL_REF2_SIZE                                 0x1
#define _DAC6REFL_REF2_LENGTH                               0x1
#define _DAC6REFL_REF2_MASK                                 0x4
#define _DAC6REFL_REF3_POSN                                 0x3
#define _DAC6REFL_REF3_POSITION                             0x3
#define _DAC6REFL_REF3_SIZE                                 0x1
#define _DAC6REFL_REF3_LENGTH                               0x1
#define _DAC6REFL_REF3_MASK                                 0x8
#define _DAC6REFL_REF4_POSN                                 0x4
#define _DAC6REFL_REF4_POSITION                             0x4
#define _DAC6REFL_REF4_SIZE                                 0x1
#define _DAC6REFL_REF4_LENGTH                               0x1
#define _DAC6REFL_REF4_MASK                                 0x10
#define _DAC6REFL_REF5_POSN                                 0x5
#define _DAC6REFL_REF5_POSITION                             0x5
#define _DAC6REFL_REF5_SIZE                                 0x1
#define _DAC6REFL_REF5_LENGTH                               0x1
#define _DAC6REFL_REF5_MASK                                 0x20
#define _DAC6REFL_REF6_POSN                                 0x6
#define _DAC6REFL_REF6_POSITION                             0x6
#define _DAC6REFL_REF6_SIZE                                 0x1
#define _DAC6REFL_REF6_LENGTH                               0x1
#define _DAC6REFL_REF6_MASK                                 0x40
#define _DAC6REFL_REF7_POSN                                 0x7
#define _DAC6REFL_REF7_POSITION                             0x7
#define _DAC6REFL_REF7_SIZE                                 0x1
#define _DAC6REFL_REF7_LENGTH                               0x1
#define _DAC6REFL_REF7_MASK                                 0x80
#define _DAC6REFL_DAC6REF0_POSN                             0x0
#define _DAC6REFL_DAC6REF0_POSITION                         0x0
#define _DAC6REFL_DAC6REF0_SIZE                             0x1
#define _DAC6REFL_DAC6REF0_LENGTH                           0x1
#define _DAC6REFL_DAC6REF0_MASK                             0x1
#define _DAC6REFL_DAC6REF1_POSN                             0x1
#define _DAC6REFL_DAC6REF1_POSITION                         0x1
#define _DAC6REFL_DAC6REF1_SIZE                             0x1
#define _DAC6REFL_DAC6REF1_LENGTH                           0x1
#define _DAC6REFL_DAC6REF1_MASK                             0x2
#define _DAC6REFL_DAC6REF2_POSN                             0x2
#define _DAC6REFL_DAC6REF2_POSITION                         0x2
#define _DAC6REFL_DAC6REF2_SIZE                             0x1
#define _DAC6REFL_DAC6REF2_LENGTH                           0x1
#define _DAC6REFL_DAC6REF2_MASK                             0x4
#define _DAC6REFL_DAC6REF3_POSN                             0x3
#define _DAC6REFL_DAC6REF3_POSITION                         0x3
#define _DAC6REFL_DAC6REF3_SIZE                             0x1
#define _DAC6REFL_DAC6REF3_LENGTH                           0x1
#define _DAC6REFL_DAC6REF3_MASK                             0x8
#define _DAC6REFL_DAC6REF4_POSN                             0x4
#define _DAC6REFL_DAC6REF4_POSITION                         0x4
#define _DAC6REFL_DAC6REF4_SIZE                             0x1
#define _DAC6REFL_DAC6REF4_LENGTH                           0x1
#define _DAC6REFL_DAC6REF4_MASK                             0x10
#define _DAC6REFL_DAC6REF5_POSN                             0x5
#define _DAC6REFL_DAC6REF5_POSITION                         0x5
#define _DAC6REFL_DAC6REF5_SIZE                             0x1
#define _DAC6REFL_DAC6REF5_LENGTH                           0x1
#define _DAC6REFL_DAC6REF5_MASK                             0x20
#define _DAC6REFL_DAC6REF6_POSN                             0x6
#define _DAC6REFL_DAC6REF6_POSITION                         0x6
#define _DAC6REFL_DAC6REF6_SIZE                             0x1
#define _DAC6REFL_DAC6REF6_LENGTH                           0x1
#define _DAC6REFL_DAC6REF6_MASK                             0x40
#define _DAC6REFL_DAC6REF7_POSN                             0x7
#define _DAC6REFL_DAC6REF7_POSITION                         0x7
#define _DAC6REFL_DAC6REF7_SIZE                             0x1
#define _DAC6REFL_DAC6REF7_LENGTH                           0x1
#define _DAC6REFL_DAC6REF7_MASK                             0x80
#define _DAC6REFL_R0_POSN                                   0x0
#define _DAC6REFL_R0_POSITION                               0x0
#define _DAC6REFL_R0_SIZE                                   0x1
#define _DAC6REFL_R0_LENGTH                                 0x1
#define _DAC6REFL_R0_MASK                                   0x1
#define _DAC6REFL_R1_POSN                                   0x1
#define _DAC6REFL_R1_POSITION                               0x1
#define _DAC6REFL_R1_SIZE                                   0x1
#define _DAC6REFL_R1_LENGTH                                 0x1
#define _DAC6REFL_R1_MASK                                   0x2
#define _DAC6REFL_R2_POSN                                   0x2
#define _DAC6REFL_R2_POSITION                               0x2
#define _DAC6REFL_R2_SIZE                                   0x1
#define _DAC6REFL_R2_LENGTH                                 0x1
#define _DAC6REFL_R2_MASK                                   0x4
#define _DAC6REFL_R3_POSN                                   0x3
#define _DAC6REFL_R3_POSITION                               0x3
#define _DAC6REFL_R3_SIZE                                   0x1
#define _DAC6REFL_R3_LENGTH                                 0x1
#define _DAC6REFL_R3_MASK                                   0x8
#define _DAC6REFL_R4_POSN                                   0x4
#define _DAC6REFL_R4_POSITION                               0x4
#define _DAC6REFL_R4_SIZE                                   0x1
#define _DAC6REFL_R4_LENGTH                                 0x1
#define _DAC6REFL_R4_MASK                                   0x10
#define _DAC6REFL_R5_POSN                                   0x5
#define _DAC6REFL_R5_POSITION                               0x5
#define _DAC6REFL_R5_SIZE                                   0x1
#define _DAC6REFL_R5_LENGTH                                 0x1
#define _DAC6REFL_R5_MASK                                   0x20
#define _DAC6REFL_R6_POSN                                   0x6
#define _DAC6REFL_R6_POSITION                               0x6
#define _DAC6REFL_R6_SIZE                                   0x1
#define _DAC6REFL_R6_LENGTH                                 0x1
#define _DAC6REFL_R6_MASK                                   0x40
#define _DAC6REFL_R7_POSN                                   0x7
#define _DAC6REFL_R7_POSITION                               0x7
#define _DAC6REFL_R7_SIZE                                   0x1
#define _DAC6REFL_R7_LENGTH                                 0x1
#define _DAC6REFL_R7_MASK                                   0x80
#define _DAC6REFL_DAC6R0_POSN                               0x0
#define _DAC6REFL_DAC6R0_POSITION                           0x0
#define _DAC6REFL_DAC6R0_SIZE                               0x1
#define _DAC6REFL_DAC6R0_LENGTH                             0x1
#define _DAC6REFL_DAC6R0_MASK                               0x1
#define _DAC6REFL_DAC6R1_POSN                               0x1
#define _DAC6REFL_DAC6R1_POSITION                           0x1
#define _DAC6REFL_DAC6R1_SIZE                               0x1
#define _DAC6REFL_DAC6R1_LENGTH                             0x1
#define _DAC6REFL_DAC6R1_MASK                               0x2
#define _DAC6REFL_DAC6R2_POSN                               0x2
#define _DAC6REFL_DAC6R2_POSITION                           0x2
#define _DAC6REFL_DAC6R2_SIZE                               0x1
#define _DAC6REFL_DAC6R2_LENGTH                             0x1
#define _DAC6REFL_DAC6R2_MASK                               0x4
#define _DAC6REFL_DAC6R3_POSN                               0x3
#define _DAC6REFL_DAC6R3_POSITION                           0x3
#define _DAC6REFL_DAC6R3_SIZE                               0x1
#define _DAC6REFL_DAC6R3_LENGTH                             0x1
#define _DAC6REFL_DAC6R3_MASK                               0x8
#define _DAC6REFL_DAC6R4_POSN                               0x4
#define _DAC6REFL_DAC6R4_POSITION                           0x4
#define _DAC6REFL_DAC6R4_SIZE                               0x1
#define _DAC6REFL_DAC6R4_LENGTH                             0x1
#define _DAC6REFL_DAC6R4_MASK                               0x10
#define _DAC6REFL_DAC6R5_POSN                               0x5
#define _DAC6REFL_DAC6R5_POSITION                           0x5
#define _DAC6REFL_DAC6R5_SIZE                               0x1
#define _DAC6REFL_DAC6R5_LENGTH                             0x1
#define _DAC6REFL_DAC6R5_MASK                               0x20
#define _DAC6REFL_DAC6R6_POSN                               0x6
#define _DAC6REFL_DAC6R6_POSITION                           0x6
#define _DAC6REFL_DAC6R6_SIZE                               0x1
#define _DAC6REFL_DAC6R6_LENGTH                             0x1
#define _DAC6REFL_DAC6R6_MASK                               0x40
#define _DAC6REFL_DAC6R7_POSN                               0x7
#define _DAC6REFL_DAC6R7_POSITION                           0x7
#define _DAC6REFL_DAC6R7_SIZE                               0x1
#define _DAC6REFL_DAC6R7_LENGTH                             0x1
#define _DAC6REFL_DAC6R7_MASK                               0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
        unsigned REF5                   :1;
        unsigned REF6                   :1;
        unsigned REF7                   :1;
    };
    struct {
        unsigned DAC6REF0               :1;
        unsigned DAC6REF1               :1;
        unsigned DAC6REF2               :1;
        unsigned DAC6REF3               :1;
        unsigned DAC6REF4               :1;
        unsigned DAC6REF5               :1;
        unsigned DAC6REF6               :1;
        unsigned DAC6REF7               :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
        unsigned R5                     :1;
        unsigned R6                     :1;
        unsigned R7                     :1;
    };
    struct {
        unsigned DAC6R0                 :1;
        unsigned DAC6R1                 :1;
        unsigned DAC6R2                 :1;
        unsigned DAC6R3                 :1;
        unsigned DAC6R4                 :1;
        unsigned DAC6R5                 :1;
        unsigned DAC6R6                 :1;
        unsigned DAC6R7                 :1;
    };
} DAC6CON1bits_t;
extern volatile DAC6CON1bits_t DAC6CON1bits __at(0x59C);
// bitfield macros
#define _DAC6CON1_REF0_POSN                                 0x0
#define _DAC6CON1_REF0_POSITION                             0x0
#define _DAC6CON1_REF0_SIZE                                 0x1
#define _DAC6CON1_REF0_LENGTH                               0x1
#define _DAC6CON1_REF0_MASK                                 0x1
#define _DAC6CON1_REF1_POSN                                 0x1
#define _DAC6CON1_REF1_POSITION                             0x1
#define _DAC6CON1_REF1_SIZE                                 0x1
#define _DAC6CON1_REF1_LENGTH                               0x1
#define _DAC6CON1_REF1_MASK                                 0x2
#define _DAC6CON1_REF2_POSN                                 0x2
#define _DAC6CON1_REF2_POSITION                             0x2
#define _DAC6CON1_REF2_SIZE                                 0x1
#define _DAC6CON1_REF2_LENGTH                               0x1
#define _DAC6CON1_REF2_MASK                                 0x4
#define _DAC6CON1_REF3_POSN                                 0x3
#define _DAC6CON1_REF3_POSITION                             0x3
#define _DAC6CON1_REF3_SIZE                                 0x1
#define _DAC6CON1_REF3_LENGTH                               0x1
#define _DAC6CON1_REF3_MASK                                 0x8
#define _DAC6CON1_REF4_POSN                                 0x4
#define _DAC6CON1_REF4_POSITION                             0x4
#define _DAC6CON1_REF4_SIZE                                 0x1
#define _DAC6CON1_REF4_LENGTH                               0x1
#define _DAC6CON1_REF4_MASK                                 0x10
#define _DAC6CON1_REF5_POSN                                 0x5
#define _DAC6CON1_REF5_POSITION                             0x5
#define _DAC6CON1_REF5_SIZE                                 0x1
#define _DAC6CON1_REF5_LENGTH                               0x1
#define _DAC6CON1_REF5_MASK                                 0x20
#define _DAC6CON1_REF6_POSN                                 0x6
#define _DAC6CON1_REF6_POSITION                             0x6
#define _DAC6CON1_REF6_SIZE                                 0x1
#define _DAC6CON1_REF6_LENGTH                               0x1
#define _DAC6CON1_REF6_MASK                                 0x40
#define _DAC6CON1_REF7_POSN                                 0x7
#define _DAC6CON1_REF7_POSITION                             0x7
#define _DAC6CON1_REF7_SIZE                                 0x1
#define _DAC6CON1_REF7_LENGTH                               0x1
#define _DAC6CON1_REF7_MASK                                 0x80
#define _DAC6CON1_DAC6REF0_POSN                             0x0
#define _DAC6CON1_DAC6REF0_POSITION                         0x0
#define _DAC6CON1_DAC6REF0_SIZE                             0x1
#define _DAC6CON1_DAC6REF0_LENGTH                           0x1
#define _DAC6CON1_DAC6REF0_MASK                             0x1
#define _DAC6CON1_DAC6REF1_POSN                             0x1
#define _DAC6CON1_DAC6REF1_POSITION                         0x1
#define _DAC6CON1_DAC6REF1_SIZE                             0x1
#define _DAC6CON1_DAC6REF1_LENGTH                           0x1
#define _DAC6CON1_DAC6REF1_MASK                             0x2
#define _DAC6CON1_DAC6REF2_POSN                             0x2
#define _DAC6CON1_DAC6REF2_POSITION                         0x2
#define _DAC6CON1_DAC6REF2_SIZE                             0x1
#define _DAC6CON1_DAC6REF2_LENGTH                           0x1
#define _DAC6CON1_DAC6REF2_MASK                             0x4
#define _DAC6CON1_DAC6REF3_POSN                             0x3
#define _DAC6CON1_DAC6REF3_POSITION                         0x3
#define _DAC6CON1_DAC6REF3_SIZE                             0x1
#define _DAC6CON1_DAC6REF3_LENGTH                           0x1
#define _DAC6CON1_DAC6REF3_MASK                             0x8
#define _DAC6CON1_DAC6REF4_POSN                             0x4
#define _DAC6CON1_DAC6REF4_POSITION                         0x4
#define _DAC6CON1_DAC6REF4_SIZE                             0x1
#define _DAC6CON1_DAC6REF4_LENGTH                           0x1
#define _DAC6CON1_DAC6REF4_MASK                             0x10
#define _DAC6CON1_DAC6REF5_POSN                             0x5
#define _DAC6CON1_DAC6REF5_POSITION                         0x5
#define _DAC6CON1_DAC6REF5_SIZE                             0x1
#define _DAC6CON1_DAC6REF5_LENGTH                           0x1
#define _DAC6CON1_DAC6REF5_MASK                             0x20
#define _DAC6CON1_DAC6REF6_POSN                             0x6
#define _DAC6CON1_DAC6REF6_POSITION                         0x6
#define _DAC6CON1_DAC6REF6_SIZE                             0x1
#define _DAC6CON1_DAC6REF6_LENGTH                           0x1
#define _DAC6CON1_DAC6REF6_MASK                             0x40
#define _DAC6CON1_DAC6REF7_POSN                             0x7
#define _DAC6CON1_DAC6REF7_POSITION                         0x7
#define _DAC6CON1_DAC6REF7_SIZE                             0x1
#define _DAC6CON1_DAC6REF7_LENGTH                           0x1
#define _DAC6CON1_DAC6REF7_MASK                             0x80
#define _DAC6CON1_R0_POSN                                   0x0
#define _DAC6CON1_R0_POSITION                               0x0
#define _DAC6CON1_R0_SIZE                                   0x1
#define _DAC6CON1_R0_LENGTH                                 0x1
#define _DAC6CON1_R0_MASK                                   0x1
#define _DAC6CON1_R1_POSN                                   0x1
#define _DAC6CON1_R1_POSITION                               0x1
#define _DAC6CON1_R1_SIZE                                   0x1
#define _DAC6CON1_R1_LENGTH                                 0x1
#define _DAC6CON1_R1_MASK                                   0x2
#define _DAC6CON1_R2_POSN                                   0x2
#define _DAC6CON1_R2_POSITION                               0x2
#define _DAC6CON1_R2_SIZE                                   0x1
#define _DAC6CON1_R2_LENGTH                                 0x1
#define _DAC6CON1_R2_MASK                                   0x4
#define _DAC6CON1_R3_POSN                                   0x3
#define _DAC6CON1_R3_POSITION                               0x3
#define _DAC6CON1_R3_SIZE                                   0x1
#define _DAC6CON1_R3_LENGTH                                 0x1
#define _DAC6CON1_R3_MASK                                   0x8
#define _DAC6CON1_R4_POSN                                   0x4
#define _DAC6CON1_R4_POSITION                               0x4
#define _DAC6CON1_R4_SIZE                                   0x1
#define _DAC6CON1_R4_LENGTH                                 0x1
#define _DAC6CON1_R4_MASK                                   0x10
#define _DAC6CON1_R5_POSN                                   0x5
#define _DAC6CON1_R5_POSITION                               0x5
#define _DAC6CON1_R5_SIZE                                   0x1
#define _DAC6CON1_R5_LENGTH                                 0x1
#define _DAC6CON1_R5_MASK                                   0x20
#define _DAC6CON1_R6_POSN                                   0x6
#define _DAC6CON1_R6_POSITION                               0x6
#define _DAC6CON1_R6_SIZE                                   0x1
#define _DAC6CON1_R6_LENGTH                                 0x1
#define _DAC6CON1_R6_MASK                                   0x40
#define _DAC6CON1_R7_POSN                                   0x7
#define _DAC6CON1_R7_POSITION                               0x7
#define _DAC6CON1_R7_SIZE                                   0x1
#define _DAC6CON1_R7_LENGTH                                 0x1
#define _DAC6CON1_R7_MASK                                   0x80
#define _DAC6CON1_DAC6R0_POSN                               0x0
#define _DAC6CON1_DAC6R0_POSITION                           0x0
#define _DAC6CON1_DAC6R0_SIZE                               0x1
#define _DAC6CON1_DAC6R0_LENGTH                             0x1
#define _DAC6CON1_DAC6R0_MASK                               0x1
#define _DAC6CON1_DAC6R1_POSN                               0x1
#define _DAC6CON1_DAC6R1_POSITION                           0x1
#define _DAC6CON1_DAC6R1_SIZE                               0x1
#define _DAC6CON1_DAC6R1_LENGTH                             0x1
#define _DAC6CON1_DAC6R1_MASK                               0x2
#define _DAC6CON1_DAC6R2_POSN                               0x2
#define _DAC6CON1_DAC6R2_POSITION                           0x2
#define _DAC6CON1_DAC6R2_SIZE                               0x1
#define _DAC6CON1_DAC6R2_LENGTH                             0x1
#define _DAC6CON1_DAC6R2_MASK                               0x4
#define _DAC6CON1_DAC6R3_POSN                               0x3
#define _DAC6CON1_DAC6R3_POSITION                           0x3
#define _DAC6CON1_DAC6R3_SIZE                               0x1
#define _DAC6CON1_DAC6R3_LENGTH                             0x1
#define _DAC6CON1_DAC6R3_MASK                               0x8
#define _DAC6CON1_DAC6R4_POSN                               0x4
#define _DAC6CON1_DAC6R4_POSITION                           0x4
#define _DAC6CON1_DAC6R4_SIZE                               0x1
#define _DAC6CON1_DAC6R4_LENGTH                             0x1
#define _DAC6CON1_DAC6R4_MASK                               0x10
#define _DAC6CON1_DAC6R5_POSN                               0x5
#define _DAC6CON1_DAC6R5_POSITION                           0x5
#define _DAC6CON1_DAC6R5_SIZE                               0x1
#define _DAC6CON1_DAC6R5_LENGTH                             0x1
#define _DAC6CON1_DAC6R5_MASK                               0x20
#define _DAC6CON1_DAC6R6_POSN                               0x6
#define _DAC6CON1_DAC6R6_POSITION                           0x6
#define _DAC6CON1_DAC6R6_SIZE                               0x1
#define _DAC6CON1_DAC6R6_LENGTH                             0x1
#define _DAC6CON1_DAC6R6_MASK                               0x40
#define _DAC6CON1_DAC6R7_POSN                               0x7
#define _DAC6CON1_DAC6R7_POSITION                           0x7
#define _DAC6CON1_DAC6R7_SIZE                               0x1
#define _DAC6CON1_DAC6R7_LENGTH                             0x1
#define _DAC6CON1_DAC6R7_MASK                               0x80

// Register: DAC6REFH
#define DAC6REFH DAC6REFH
extern volatile unsigned char           DAC6REFH            __at(0x59D);
#ifndef _LIB_BUILD
asm("DAC6REFH equ 059Dh");
#endif
// aliases
extern volatile unsigned char           DAC6CON2            __at(0x59D);
#ifndef _LIB_BUILD
asm("DAC6CON2 equ 059Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned REF8                   :1;
        unsigned REF9                   :1;
        unsigned REF10                  :1;
        unsigned REF11                  :1;
        unsigned REF12                  :1;
        unsigned REF13                  :1;
        unsigned REF14                  :1;
        unsigned REF15                  :1;
    };
    struct {
        unsigned DAC6REF8               :1;
        unsigned DAC6REF9               :1;
        unsigned DAC6REF10              :1;
        unsigned DAC6REF11              :1;
        unsigned DAC6REF12              :1;
        unsigned DAC6REF13              :1;
        unsigned DAC6REF14              :1;
        unsigned DAC6REF15              :1;
    };
    struct {
        unsigned R8                     :1;
        unsigned R9                     :1;
        unsigned R10                    :1;
        unsigned R11                    :1;
        unsigned R12                    :1;
        unsigned R13                    :1;
        unsigned R14                    :1;
        unsigned R15                    :1;
    };
    struct {
        unsigned DAC6R8                 :1;
        unsigned DAC6R9                 :1;
        unsigned DAC6R10                :1;
        unsigned DAC6R11                :1;
        unsigned DAC6R12                :1;
        unsigned DAC6R13                :1;
        unsigned DAC6R14                :1;
        unsigned DAC6R15                :1;
    };
} DAC6REFHbits_t;
extern volatile DAC6REFHbits_t DAC6REFHbits __at(0x59D);
// bitfield macros
#define _DAC6REFH_REF8_POSN                                 0x0
#define _DAC6REFH_REF8_POSITION                             0x0
#define _DAC6REFH_REF8_SIZE                                 0x1
#define _DAC6REFH_REF8_LENGTH                               0x1
#define _DAC6REFH_REF8_MASK                                 0x1
#define _DAC6REFH_REF9_POSN                                 0x1
#define _DAC6REFH_REF9_POSITION                             0x1
#define _DAC6REFH_REF9_SIZE                                 0x1
#define _DAC6REFH_REF9_LENGTH                               0x1
#define _DAC6REFH_REF9_MASK                                 0x2
#define _DAC6REFH_REF10_POSN                                0x2
#define _DAC6REFH_REF10_POSITION                            0x2
#define _DAC6REFH_REF10_SIZE                                0x1
#define _DAC6REFH_REF10_LENGTH                              0x1
#define _DAC6REFH_REF10_MASK                                0x4
#define _DAC6REFH_REF11_POSN                                0x3
#define _DAC6REFH_REF11_POSITION                            0x3
#define _DAC6REFH_REF11_SIZE                                0x1
#define _DAC6REFH_REF11_LENGTH                              0x1
#define _DAC6REFH_REF11_MASK                                0x8
#define _DAC6REFH_REF12_POSN                                0x4
#define _DAC6REFH_REF12_POSITION                            0x4
#define _DAC6REFH_REF12_SIZE                                0x1
#define _DAC6REFH_REF12_LENGTH                              0x1
#define _DAC6REFH_REF12_MASK                                0x10
#define _DAC6REFH_REF13_POSN                                0x5
#define _DAC6REFH_REF13_POSITION                            0x5
#define _DAC6REFH_REF13_SIZE                                0x1
#define _DAC6REFH_REF13_LENGTH                              0x1
#define _DAC6REFH_REF13_MASK                                0x20
#define _DAC6REFH_REF14_POSN                                0x6
#define _DAC6REFH_REF14_POSITION                            0x6
#define _DAC6REFH_REF14_SIZE                                0x1
#define _DAC6REFH_REF14_LENGTH                              0x1
#define _DAC6REFH_REF14_MASK                                0x40
#define _DAC6REFH_REF15_POSN                                0x7
#define _DAC6REFH_REF15_POSITION                            0x7
#define _DAC6REFH_REF15_SIZE                                0x1
#define _DAC6REFH_REF15_LENGTH                              0x1
#define _DAC6REFH_REF15_MASK                                0x80
#define _DAC6REFH_DAC6REF8_POSN                             0x0
#define _DAC6REFH_DAC6REF8_POSITION                         0x0
#define _DAC6REFH_DAC6REF8_SIZE                             0x1
#define _DAC6REFH_DAC6REF8_LENGTH                           0x1
#define _DAC6REFH_DAC6REF8_MASK                             0x1
#define _DAC6REFH_DAC6REF9_POSN                             0x1
#define _DAC6REFH_DAC6REF9_POSITION                         0x1
#define _DAC6REFH_DAC6REF9_SIZE                             0x1
#define _DAC6REFH_DAC6REF9_LENGTH                           0x1
#define _DAC6REFH_DAC6REF9_MASK                             0x2
#define _DAC6REFH_DAC6REF10_POSN                            0x2
#define _DAC6REFH_DAC6REF10_POSITION                        0x2
#define _DAC6REFH_DAC6REF10_SIZE                            0x1
#define _DAC6REFH_DAC6REF10_LENGTH                          0x1
#define _DAC6REFH_DAC6REF10_MASK                            0x4
#define _DAC6REFH_DAC6REF11_POSN                            0x3
#define _DAC6REFH_DAC6REF11_POSITION                        0x3
#define _DAC6REFH_DAC6REF11_SIZE                            0x1
#define _DAC6REFH_DAC6REF11_LENGTH                          0x1
#define _DAC6REFH_DAC6REF11_MASK                            0x8
#define _DAC6REFH_DAC6REF12_POSN                            0x4
#define _DAC6REFH_DAC6REF12_POSITION                        0x4
#define _DAC6REFH_DAC6REF12_SIZE                            0x1
#define _DAC6REFH_DAC6REF12_LENGTH                          0x1
#define _DAC6REFH_DAC6REF12_MASK                            0x10
#define _DAC6REFH_DAC6REF13_POSN                            0x5
#define _DAC6REFH_DAC6REF13_POSITION                        0x5
#define _DAC6REFH_DAC6REF13_SIZE                            0x1
#define _DAC6REFH_DAC6REF13_LENGTH                          0x1
#define _DAC6REFH_DAC6REF13_MASK                            0x20
#define _DAC6REFH_DAC6REF14_POSN                            0x6
#define _DAC6REFH_DAC6REF14_POSITION                        0x6
#define _DAC6REFH_DAC6REF14_SIZE                            0x1
#define _DAC6REFH_DAC6REF14_LENGTH                          0x1
#define _DAC6REFH_DAC6REF14_MASK                            0x40
#define _DAC6REFH_DAC6REF15_POSN                            0x7
#define _DAC6REFH_DAC6REF15_POSITION                        0x7
#define _DAC6REFH_DAC6REF15_SIZE                            0x1
#define _DAC6REFH_DAC6REF15_LENGTH                          0x1
#define _DAC6REFH_DAC6REF15_MASK                            0x80
#define _DAC6REFH_R8_POSN                                   0x0
#define _DAC6REFH_R8_POSITION                               0x0
#define _DAC6REFH_R8_SIZE                                   0x1
#define _DAC6REFH_R8_LENGTH                                 0x1
#define _DAC6REFH_R8_MASK                                   0x1
#define _DAC6REFH_R9_POSN                                   0x1
#define _DAC6REFH_R9_POSITION                               0x1
#define _DAC6REFH_R9_SIZE                                   0x1
#define _DAC6REFH_R9_LENGTH                                 0x1
#define _DAC6REFH_R9_MASK                                   0x2
#define _DAC6REFH_R10_POSN                                  0x2
#define _DAC6REFH_R10_POSITION                              0x2
#define _DAC6REFH_R10_SIZE                                  0x1
#define _DAC6REFH_R10_LENGTH                                0x1
#define _DAC6REFH_R10_MASK                                  0x4
#define _DAC6REFH_R11_POSN                                  0x3
#define _DAC6REFH_R11_POSITION                              0x3
#define _DAC6REFH_R11_SIZE                                  0x1
#define _DAC6REFH_R11_LENGTH                                0x1
#define _DAC6REFH_R11_MASK                                  0x8
#define _DAC6REFH_R12_POSN                                  0x4
#define _DAC6REFH_R12_POSITION                              0x4
#define _DAC6REFH_R12_SIZE                                  0x1
#define _DAC6REFH_R12_LENGTH                                0x1
#define _DAC6REFH_R12_MASK                                  0x10
#define _DAC6REFH_R13_POSN                                  0x5
#define _DAC6REFH_R13_POSITION                              0x5
#define _DAC6REFH_R13_SIZE                                  0x1
#define _DAC6REFH_R13_LENGTH                                0x1
#define _DAC6REFH_R13_MASK                                  0x20
#define _DAC6REFH_R14_POSN                                  0x6
#define _DAC6REFH_R14_POSITION                              0x6
#define _DAC6REFH_R14_SIZE                                  0x1
#define _DAC6REFH_R14_LENGTH                                0x1
#define _DAC6REFH_R14_MASK                                  0x40
#define _DAC6REFH_R15_POSN                                  0x7
#define _DAC6REFH_R15_POSITION                              0x7
#define _DAC6REFH_R15_SIZE                                  0x1
#define _DAC6REFH_R15_LENGTH                                0x1
#define _DAC6REFH_R15_MASK                                  0x80
#define _DAC6REFH_DAC6R8_POSN                               0x0
#define _DAC6REFH_DAC6R8_POSITION                           0x0
#define _DAC6REFH_DAC6R8_SIZE                               0x1
#define _DAC6REFH_DAC6R8_LENGTH                             0x1
#define _DAC6REFH_DAC6R8_MASK                               0x1
#define _DAC6REFH_DAC6R9_POSN                               0x1
#define _DAC6REFH_DAC6R9_POSITION                           0x1
#define _DAC6REFH_DAC6R9_SIZE                               0x1
#define _DAC6REFH_DAC6R9_LENGTH                             0x1
#define _DAC6REFH_DAC6R9_MASK                               0x2
#define _DAC6REFH_DAC6R10_POSN                              0x2
#define _DAC6REFH_DAC6R10_POSITION                          0x2
#define _DAC6REFH_DAC6R10_SIZE                              0x1
#define _DAC6REFH_DAC6R10_LENGTH                            0x1
#define _DAC6REFH_DAC6R10_MASK                              0x4
#define _DAC6REFH_DAC6R11_POSN                              0x3
#define _DAC6REFH_DAC6R11_POSITION                          0x3
#define _DAC6REFH_DAC6R11_SIZE                              0x1
#define _DAC6REFH_DAC6R11_LENGTH                            0x1
#define _DAC6REFH_DAC6R11_MASK                              0x8
#define _DAC6REFH_DAC6R12_POSN                              0x4
#define _DAC6REFH_DAC6R12_POSITION                          0x4
#define _DAC6REFH_DAC6R12_SIZE                              0x1
#define _DAC6REFH_DAC6R12_LENGTH                            0x1
#define _DAC6REFH_DAC6R12_MASK                              0x10
#define _DAC6REFH_DAC6R13_POSN                              0x5
#define _DAC6REFH_DAC6R13_POSITION                          0x5
#define _DAC6REFH_DAC6R13_SIZE                              0x1
#define _DAC6REFH_DAC6R13_LENGTH                            0x1
#define _DAC6REFH_DAC6R13_MASK                              0x20
#define _DAC6REFH_DAC6R14_POSN                              0x6
#define _DAC6REFH_DAC6R14_POSITION                          0x6
#define _DAC6REFH_DAC6R14_SIZE                              0x1
#define _DAC6REFH_DAC6R14_LENGTH                            0x1
#define _DAC6REFH_DAC6R14_MASK                              0x40
#define _DAC6REFH_DAC6R15_POSN                              0x7
#define _DAC6REFH_DAC6R15_POSITION                          0x7
#define _DAC6REFH_DAC6R15_SIZE                              0x1
#define _DAC6REFH_DAC6R15_LENGTH                            0x1
#define _DAC6REFH_DAC6R15_MASK                              0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned REF8                   :1;
        unsigned REF9                   :1;
        unsigned REF10                  :1;
        unsigned REF11                  :1;
        unsigned REF12                  :1;
        unsigned REF13                  :1;
        unsigned REF14                  :1;
        unsigned REF15                  :1;
    };
    struct {
        unsigned DAC6REF8               :1;
        unsigned DAC6REF9               :1;
        unsigned DAC6REF10              :1;
        unsigned DAC6REF11              :1;
        unsigned DAC6REF12              :1;
        unsigned DAC6REF13              :1;
        unsigned DAC6REF14              :1;
        unsigned DAC6REF15              :1;
    };
    struct {
        unsigned R8                     :1;
        unsigned R9                     :1;
        unsigned R10                    :1;
        unsigned R11                    :1;
        unsigned R12                    :1;
        unsigned R13                    :1;
        unsigned R14                    :1;
        unsigned R15                    :1;
    };
    struct {
        unsigned DAC6R8                 :1;
        unsigned DAC6R9                 :1;
        unsigned DAC6R10                :1;
        unsigned DAC6R11                :1;
        unsigned DAC6R12                :1;
        unsigned DAC6R13                :1;
        unsigned DAC6R14                :1;
        unsigned DAC6R15                :1;
    };
} DAC6CON2bits_t;
extern volatile DAC6CON2bits_t DAC6CON2bits __at(0x59D);
// bitfield macros
#define _DAC6CON2_REF8_POSN                                 0x0
#define _DAC6CON2_REF8_POSITION                             0x0
#define _DAC6CON2_REF8_SIZE                                 0x1
#define _DAC6CON2_REF8_LENGTH                               0x1
#define _DAC6CON2_REF8_MASK                                 0x1
#define _DAC6CON2_REF9_POSN                                 0x1
#define _DAC6CON2_REF9_POSITION                             0x1
#define _DAC6CON2_REF9_SIZE                                 0x1
#define _DAC6CON2_REF9_LENGTH                               0x1
#define _DAC6CON2_REF9_MASK                                 0x2
#define _DAC6CON2_REF10_POSN                                0x2
#define _DAC6CON2_REF10_POSITION                            0x2
#define _DAC6CON2_REF10_SIZE                                0x1
#define _DAC6CON2_REF10_LENGTH                              0x1
#define _DAC6CON2_REF10_MASK                                0x4
#define _DAC6CON2_REF11_POSN                                0x3
#define _DAC6CON2_REF11_POSITION                            0x3
#define _DAC6CON2_REF11_SIZE                                0x1
#define _DAC6CON2_REF11_LENGTH                              0x1
#define _DAC6CON2_REF11_MASK                                0x8
#define _DAC6CON2_REF12_POSN                                0x4
#define _DAC6CON2_REF12_POSITION                            0x4
#define _DAC6CON2_REF12_SIZE                                0x1
#define _DAC6CON2_REF12_LENGTH                              0x1
#define _DAC6CON2_REF12_MASK                                0x10
#define _DAC6CON2_REF13_POSN                                0x5
#define _DAC6CON2_REF13_POSITION                            0x5
#define _DAC6CON2_REF13_SIZE                                0x1
#define _DAC6CON2_REF13_LENGTH                              0x1
#define _DAC6CON2_REF13_MASK                                0x20
#define _DAC6CON2_REF14_POSN                                0x6
#define _DAC6CON2_REF14_POSITION                            0x6
#define _DAC6CON2_REF14_SIZE                                0x1
#define _DAC6CON2_REF14_LENGTH                              0x1
#define _DAC6CON2_REF14_MASK                                0x40
#define _DAC6CON2_REF15_POSN                                0x7
#define _DAC6CON2_REF15_POSITION                            0x7
#define _DAC6CON2_REF15_SIZE                                0x1
#define _DAC6CON2_REF15_LENGTH                              0x1
#define _DAC6CON2_REF15_MASK                                0x80
#define _DAC6CON2_DAC6REF8_POSN                             0x0
#define _DAC6CON2_DAC6REF8_POSITION                         0x0
#define _DAC6CON2_DAC6REF8_SIZE                             0x1
#define _DAC6CON2_DAC6REF8_LENGTH                           0x1
#define _DAC6CON2_DAC6REF8_MASK                             0x1
#define _DAC6CON2_DAC6REF9_POSN                             0x1
#define _DAC6CON2_DAC6REF9_POSITION                         0x1
#define _DAC6CON2_DAC6REF9_SIZE                             0x1
#define _DAC6CON2_DAC6REF9_LENGTH                           0x1
#define _DAC6CON2_DAC6REF9_MASK                             0x2
#define _DAC6CON2_DAC6REF10_POSN                            0x2
#define _DAC6CON2_DAC6REF10_POSITION                        0x2
#define _DAC6CON2_DAC6REF10_SIZE                            0x1
#define _DAC6CON2_DAC6REF10_LENGTH                          0x1
#define _DAC6CON2_DAC6REF10_MASK                            0x4
#define _DAC6CON2_DAC6REF11_POSN                            0x3
#define _DAC6CON2_DAC6REF11_POSITION                        0x3
#define _DAC6CON2_DAC6REF11_SIZE                            0x1
#define _DAC6CON2_DAC6REF11_LENGTH                          0x1
#define _DAC6CON2_DAC6REF11_MASK                            0x8
#define _DAC6CON2_DAC6REF12_POSN                            0x4
#define _DAC6CON2_DAC6REF12_POSITION                        0x4
#define _DAC6CON2_DAC6REF12_SIZE                            0x1
#define _DAC6CON2_DAC6REF12_LENGTH                          0x1
#define _DAC6CON2_DAC6REF12_MASK                            0x10
#define _DAC6CON2_DAC6REF13_POSN                            0x5
#define _DAC6CON2_DAC6REF13_POSITION                        0x5
#define _DAC6CON2_DAC6REF13_SIZE                            0x1
#define _DAC6CON2_DAC6REF13_LENGTH                          0x1
#define _DAC6CON2_DAC6REF13_MASK                            0x20
#define _DAC6CON2_DAC6REF14_POSN                            0x6
#define _DAC6CON2_DAC6REF14_POSITION                        0x6
#define _DAC6CON2_DAC6REF14_SIZE                            0x1
#define _DAC6CON2_DAC6REF14_LENGTH                          0x1
#define _DAC6CON2_DAC6REF14_MASK                            0x40
#define _DAC6CON2_DAC6REF15_POSN                            0x7
#define _DAC6CON2_DAC6REF15_POSITION                        0x7
#define _DAC6CON2_DAC6REF15_SIZE                            0x1
#define _DAC6CON2_DAC6REF15_LENGTH                          0x1
#define _DAC6CON2_DAC6REF15_MASK                            0x80
#define _DAC6CON2_R8_POSN                                   0x0
#define _DAC6CON2_R8_POSITION                               0x0
#define _DAC6CON2_R8_SIZE                                   0x1
#define _DAC6CON2_R8_LENGTH                                 0x1
#define _DAC6CON2_R8_MASK                                   0x1
#define _DAC6CON2_R9_POSN                                   0x1
#define _DAC6CON2_R9_POSITION                               0x1
#define _DAC6CON2_R9_SIZE                                   0x1
#define _DAC6CON2_R9_LENGTH                                 0x1
#define _DAC6CON2_R9_MASK                                   0x2
#define _DAC6CON2_R10_POSN                                  0x2
#define _DAC6CON2_R10_POSITION                              0x2
#define _DAC6CON2_R10_SIZE                                  0x1
#define _DAC6CON2_R10_LENGTH                                0x1
#define _DAC6CON2_R10_MASK                                  0x4
#define _DAC6CON2_R11_POSN                                  0x3
#define _DAC6CON2_R11_POSITION                              0x3
#define _DAC6CON2_R11_SIZE                                  0x1
#define _DAC6CON2_R11_LENGTH                                0x1
#define _DAC6CON2_R11_MASK                                  0x8
#define _DAC6CON2_R12_POSN                                  0x4
#define _DAC6CON2_R12_POSITION                              0x4
#define _DAC6CON2_R12_SIZE                                  0x1
#define _DAC6CON2_R12_LENGTH                                0x1
#define _DAC6CON2_R12_MASK                                  0x10
#define _DAC6CON2_R13_POSN                                  0x5
#define _DAC6CON2_R13_POSITION                              0x5
#define _DAC6CON2_R13_SIZE                                  0x1
#define _DAC6CON2_R13_LENGTH                                0x1
#define _DAC6CON2_R13_MASK                                  0x20
#define _DAC6CON2_R14_POSN                                  0x6
#define _DAC6CON2_R14_POSITION                              0x6
#define _DAC6CON2_R14_SIZE                                  0x1
#define _DAC6CON2_R14_LENGTH                                0x1
#define _DAC6CON2_R14_MASK                                  0x40
#define _DAC6CON2_R15_POSN                                  0x7
#define _DAC6CON2_R15_POSITION                              0x7
#define _DAC6CON2_R15_SIZE                                  0x1
#define _DAC6CON2_R15_LENGTH                                0x1
#define _DAC6CON2_R15_MASK                                  0x80
#define _DAC6CON2_DAC6R8_POSN                               0x0
#define _DAC6CON2_DAC6R8_POSITION                           0x0
#define _DAC6CON2_DAC6R8_SIZE                               0x1
#define _DAC6CON2_DAC6R8_LENGTH                             0x1
#define _DAC6CON2_DAC6R8_MASK                               0x1
#define _DAC6CON2_DAC6R9_POSN                               0x1
#define _DAC6CON2_DAC6R9_POSITION                           0x1
#define _DAC6CON2_DAC6R9_SIZE                               0x1
#define _DAC6CON2_DAC6R9_LENGTH                             0x1
#define _DAC6CON2_DAC6R9_MASK                               0x2
#define _DAC6CON2_DAC6R10_POSN                              0x2
#define _DAC6CON2_DAC6R10_POSITION                          0x2
#define _DAC6CON2_DAC6R10_SIZE                              0x1
#define _DAC6CON2_DAC6R10_LENGTH                            0x1
#define _DAC6CON2_DAC6R10_MASK                              0x4
#define _DAC6CON2_DAC6R11_POSN                              0x3
#define _DAC6CON2_DAC6R11_POSITION                          0x3
#define _DAC6CON2_DAC6R11_SIZE                              0x1
#define _DAC6CON2_DAC6R11_LENGTH                            0x1
#define _DAC6CON2_DAC6R11_MASK                              0x8
#define _DAC6CON2_DAC6R12_POSN                              0x4
#define _DAC6CON2_DAC6R12_POSITION                          0x4
#define _DAC6CON2_DAC6R12_SIZE                              0x1
#define _DAC6CON2_DAC6R12_LENGTH                            0x1
#define _DAC6CON2_DAC6R12_MASK                              0x10
#define _DAC6CON2_DAC6R13_POSN                              0x5
#define _DAC6CON2_DAC6R13_POSITION                          0x5
#define _DAC6CON2_DAC6R13_SIZE                              0x1
#define _DAC6CON2_DAC6R13_LENGTH                            0x1
#define _DAC6CON2_DAC6R13_MASK                              0x20
#define _DAC6CON2_DAC6R14_POSN                              0x6
#define _DAC6CON2_DAC6R14_POSITION                          0x6
#define _DAC6CON2_DAC6R14_SIZE                              0x1
#define _DAC6CON2_DAC6R14_LENGTH                            0x1
#define _DAC6CON2_DAC6R14_MASK                              0x40
#define _DAC6CON2_DAC6R15_POSN                              0x7
#define _DAC6CON2_DAC6R15_POSITION                          0x7
#define _DAC6CON2_DAC6R15_SIZE                              0x1
#define _DAC6CON2_DAC6R15_LENGTH                            0x1
#define _DAC6CON2_DAC6R15_MASK                              0x80

// Register: DAC7CON0
#define DAC7CON0 DAC7CON0
extern volatile unsigned char           DAC7CON0            __at(0x59E);
#ifndef _LIB_BUILD
asm("DAC7CON0 equ 059Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NSS                    :2;
        unsigned PSS                    :2;
        unsigned OE2                    :1;
        unsigned OE1                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned NSS0                   :1;
        unsigned NSS1                   :1;
        unsigned PSS0                   :1;
        unsigned PSS1                   :1;
    };
    struct {
        unsigned DACNSS                 :2;
        unsigned DACPSS                 :2;
        unsigned DACOE2                 :1;
        unsigned DACOE1                 :1;
        unsigned                        :1;
        unsigned DACEN                  :1;
    };
    struct {
        unsigned DACNSS0                :1;
        unsigned DACNSS1                :1;
        unsigned DACPSS0                :1;
        unsigned DACPSS1                :1;
    };
    struct {
        unsigned DAC7NSS                :2;
        unsigned DAC7PSS                :2;
        unsigned DAC7OE2                :1;
        unsigned DAC7OE1                :1;
        unsigned                        :1;
        unsigned DAC7EN                 :1;
    };
    struct {
        unsigned DAC7NSS0               :1;
        unsigned DAC7NSS1               :1;
        unsigned DAC7PSS0               :1;
        unsigned DAC7PSS1               :1;
    };
} DAC7CON0bits_t;
extern volatile DAC7CON0bits_t DAC7CON0bits __at(0x59E);
// bitfield macros
#define _DAC7CON0_NSS_POSN                                  0x0
#define _DAC7CON0_NSS_POSITION                              0x0
#define _DAC7CON0_NSS_SIZE                                  0x2
#define _DAC7CON0_NSS_LENGTH                                0x2
#define _DAC7CON0_NSS_MASK                                  0x3
#define _DAC7CON0_PSS_POSN                                  0x2
#define _DAC7CON0_PSS_POSITION                              0x2
#define _DAC7CON0_PSS_SIZE                                  0x2
#define _DAC7CON0_PSS_LENGTH                                0x2
#define _DAC7CON0_PSS_MASK                                  0xC
#define _DAC7CON0_OE2_POSN                                  0x4
#define _DAC7CON0_OE2_POSITION                              0x4
#define _DAC7CON0_OE2_SIZE                                  0x1
#define _DAC7CON0_OE2_LENGTH                                0x1
#define _DAC7CON0_OE2_MASK                                  0x10
#define _DAC7CON0_OE1_POSN                                  0x5
#define _DAC7CON0_OE1_POSITION                              0x5
#define _DAC7CON0_OE1_SIZE                                  0x1
#define _DAC7CON0_OE1_LENGTH                                0x1
#define _DAC7CON0_OE1_MASK                                  0x20
#define _DAC7CON0_EN_POSN                                   0x7
#define _DAC7CON0_EN_POSITION                               0x7
#define _DAC7CON0_EN_SIZE                                   0x1
#define _DAC7CON0_EN_LENGTH                                 0x1
#define _DAC7CON0_EN_MASK                                   0x80
#define _DAC7CON0_NSS0_POSN                                 0x0
#define _DAC7CON0_NSS0_POSITION                             0x0
#define _DAC7CON0_NSS0_SIZE                                 0x1
#define _DAC7CON0_NSS0_LENGTH                               0x1
#define _DAC7CON0_NSS0_MASK                                 0x1
#define _DAC7CON0_NSS1_POSN                                 0x1
#define _DAC7CON0_NSS1_POSITION                             0x1
#define _DAC7CON0_NSS1_SIZE                                 0x1
#define _DAC7CON0_NSS1_LENGTH                               0x1
#define _DAC7CON0_NSS1_MASK                                 0x2
#define _DAC7CON0_PSS0_POSN                                 0x2
#define _DAC7CON0_PSS0_POSITION                             0x2
#define _DAC7CON0_PSS0_SIZE                                 0x1
#define _DAC7CON0_PSS0_LENGTH                               0x1
#define _DAC7CON0_PSS0_MASK                                 0x4
#define _DAC7CON0_PSS1_POSN                                 0x3
#define _DAC7CON0_PSS1_POSITION                             0x3
#define _DAC7CON0_PSS1_SIZE                                 0x1
#define _DAC7CON0_PSS1_LENGTH                               0x1
#define _DAC7CON0_PSS1_MASK                                 0x8
#define _DAC7CON0_DACNSS_POSN                               0x0
#define _DAC7CON0_DACNSS_POSITION                           0x0
#define _DAC7CON0_DACNSS_SIZE                               0x2
#define _DAC7CON0_DACNSS_LENGTH                             0x2
#define _DAC7CON0_DACNSS_MASK                               0x3
#define _DAC7CON0_DACPSS_POSN                               0x2
#define _DAC7CON0_DACPSS_POSITION                           0x2
#define _DAC7CON0_DACPSS_SIZE                               0x2
#define _DAC7CON0_DACPSS_LENGTH                             0x2
#define _DAC7CON0_DACPSS_MASK                               0xC
#define _DAC7CON0_DACOE2_POSN                               0x4
#define _DAC7CON0_DACOE2_POSITION                           0x4
#define _DAC7CON0_DACOE2_SIZE                               0x1
#define _DAC7CON0_DACOE2_LENGTH                             0x1
#define _DAC7CON0_DACOE2_MASK                               0x10
#define _DAC7CON0_DACOE1_POSN                               0x5
#define _DAC7CON0_DACOE1_POSITION                           0x5
#define _DAC7CON0_DACOE1_SIZE                               0x1
#define _DAC7CON0_DACOE1_LENGTH                             0x1
#define _DAC7CON0_DACOE1_MASK                               0x20
#define _DAC7CON0_DACEN_POSN                                0x7
#define _DAC7CON0_DACEN_POSITION                            0x7
#define _DAC7CON0_DACEN_SIZE                                0x1
#define _DAC7CON0_DACEN_LENGTH                              0x1
#define _DAC7CON0_DACEN_MASK                                0x80
#define _DAC7CON0_DACNSS0_POSN                              0x0
#define _DAC7CON0_DACNSS0_POSITION                          0x0
#define _DAC7CON0_DACNSS0_SIZE                              0x1
#define _DAC7CON0_DACNSS0_LENGTH                            0x1
#define _DAC7CON0_DACNSS0_MASK                              0x1
#define _DAC7CON0_DACNSS1_POSN                              0x1
#define _DAC7CON0_DACNSS1_POSITION                          0x1
#define _DAC7CON0_DACNSS1_SIZE                              0x1
#define _DAC7CON0_DACNSS1_LENGTH                            0x1
#define _DAC7CON0_DACNSS1_MASK                              0x2
#define _DAC7CON0_DACPSS0_POSN                              0x2
#define _DAC7CON0_DACPSS0_POSITION                          0x2
#define _DAC7CON0_DACPSS0_SIZE                              0x1
#define _DAC7CON0_DACPSS0_LENGTH                            0x1
#define _DAC7CON0_DACPSS0_MASK                              0x4
#define _DAC7CON0_DACPSS1_POSN                              0x3
#define _DAC7CON0_DACPSS1_POSITION                          0x3
#define _DAC7CON0_DACPSS1_SIZE                              0x1
#define _DAC7CON0_DACPSS1_LENGTH                            0x1
#define _DAC7CON0_DACPSS1_MASK                              0x8
#define _DAC7CON0_DAC7NSS_POSN                              0x0
#define _DAC7CON0_DAC7NSS_POSITION                          0x0
#define _DAC7CON0_DAC7NSS_SIZE                              0x2
#define _DAC7CON0_DAC7NSS_LENGTH                            0x2
#define _DAC7CON0_DAC7NSS_MASK                              0x3
#define _DAC7CON0_DAC7PSS_POSN                              0x2
#define _DAC7CON0_DAC7PSS_POSITION                          0x2
#define _DAC7CON0_DAC7PSS_SIZE                              0x2
#define _DAC7CON0_DAC7PSS_LENGTH                            0x2
#define _DAC7CON0_DAC7PSS_MASK                              0xC
#define _DAC7CON0_DAC7OE2_POSN                              0x4
#define _DAC7CON0_DAC7OE2_POSITION                          0x4
#define _DAC7CON0_DAC7OE2_SIZE                              0x1
#define _DAC7CON0_DAC7OE2_LENGTH                            0x1
#define _DAC7CON0_DAC7OE2_MASK                              0x10
#define _DAC7CON0_DAC7OE1_POSN                              0x5
#define _DAC7CON0_DAC7OE1_POSITION                          0x5
#define _DAC7CON0_DAC7OE1_SIZE                              0x1
#define _DAC7CON0_DAC7OE1_LENGTH                            0x1
#define _DAC7CON0_DAC7OE1_MASK                              0x20
#define _DAC7CON0_DAC7EN_POSN                               0x7
#define _DAC7CON0_DAC7EN_POSITION                           0x7
#define _DAC7CON0_DAC7EN_SIZE                               0x1
#define _DAC7CON0_DAC7EN_LENGTH                             0x1
#define _DAC7CON0_DAC7EN_MASK                               0x80
#define _DAC7CON0_DAC7NSS0_POSN                             0x0
#define _DAC7CON0_DAC7NSS0_POSITION                         0x0
#define _DAC7CON0_DAC7NSS0_SIZE                             0x1
#define _DAC7CON0_DAC7NSS0_LENGTH                           0x1
#define _DAC7CON0_DAC7NSS0_MASK                             0x1
#define _DAC7CON0_DAC7NSS1_POSN                             0x1
#define _DAC7CON0_DAC7NSS1_POSITION                         0x1
#define _DAC7CON0_DAC7NSS1_SIZE                             0x1
#define _DAC7CON0_DAC7NSS1_LENGTH                           0x1
#define _DAC7CON0_DAC7NSS1_MASK                             0x2
#define _DAC7CON0_DAC7PSS0_POSN                             0x2
#define _DAC7CON0_DAC7PSS0_POSITION                         0x2
#define _DAC7CON0_DAC7PSS0_SIZE                             0x1
#define _DAC7CON0_DAC7PSS0_LENGTH                           0x1
#define _DAC7CON0_DAC7PSS0_MASK                             0x4
#define _DAC7CON0_DAC7PSS1_POSN                             0x3
#define _DAC7CON0_DAC7PSS1_POSITION                         0x3
#define _DAC7CON0_DAC7PSS1_SIZE                             0x1
#define _DAC7CON0_DAC7PSS1_LENGTH                           0x1
#define _DAC7CON0_DAC7PSS1_MASK                             0x8

// Register: DAC7REF
#define DAC7REF DAC7REF
extern volatile unsigned char           DAC7REF             __at(0x59F);
#ifndef _LIB_BUILD
asm("DAC7REF equ 059Fh");
#endif
// aliases
extern volatile unsigned char           DAC7CON1            __at(0x59F);
#ifndef _LIB_BUILD
asm("DAC7CON1 equ 059Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DACR                   :5;
    };
    struct {
        unsigned DACR0                  :1;
        unsigned DACR1                  :1;
        unsigned DACR2                  :1;
        unsigned DACR3                  :1;
        unsigned DACR4                  :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
    };
    struct {
        unsigned DAC7R                  :5;
    };
    struct {
        unsigned DAC7R0                 :1;
        unsigned DAC7R1                 :1;
        unsigned DAC7R2                 :1;
        unsigned DAC7R3                 :1;
        unsigned DAC7R4                 :1;
    };
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
    };
    struct {
        unsigned DAC7REF0               :1;
        unsigned DAC7REF1               :1;
        unsigned DAC7REF2               :1;
        unsigned DAC7REF3               :1;
        unsigned DAC7REF4               :1;
    };
} DAC7REFbits_t;
extern volatile DAC7REFbits_t DAC7REFbits __at(0x59F);
// bitfield macros
#define _DAC7REF_DACR_POSN                                  0x0
#define _DAC7REF_DACR_POSITION                              0x0
#define _DAC7REF_DACR_SIZE                                  0x5
#define _DAC7REF_DACR_LENGTH                                0x5
#define _DAC7REF_DACR_MASK                                  0x1F
#define _DAC7REF_DACR0_POSN                                 0x0
#define _DAC7REF_DACR0_POSITION                             0x0
#define _DAC7REF_DACR0_SIZE                                 0x1
#define _DAC7REF_DACR0_LENGTH                               0x1
#define _DAC7REF_DACR0_MASK                                 0x1
#define _DAC7REF_DACR1_POSN                                 0x1
#define _DAC7REF_DACR1_POSITION                             0x1
#define _DAC7REF_DACR1_SIZE                                 0x1
#define _DAC7REF_DACR1_LENGTH                               0x1
#define _DAC7REF_DACR1_MASK                                 0x2
#define _DAC7REF_DACR2_POSN                                 0x2
#define _DAC7REF_DACR2_POSITION                             0x2
#define _DAC7REF_DACR2_SIZE                                 0x1
#define _DAC7REF_DACR2_LENGTH                               0x1
#define _DAC7REF_DACR2_MASK                                 0x4
#define _DAC7REF_DACR3_POSN                                 0x3
#define _DAC7REF_DACR3_POSITION                             0x3
#define _DAC7REF_DACR3_SIZE                                 0x1
#define _DAC7REF_DACR3_LENGTH                               0x1
#define _DAC7REF_DACR3_MASK                                 0x8
#define _DAC7REF_DACR4_POSN                                 0x4
#define _DAC7REF_DACR4_POSITION                             0x4
#define _DAC7REF_DACR4_SIZE                                 0x1
#define _DAC7REF_DACR4_LENGTH                               0x1
#define _DAC7REF_DACR4_MASK                                 0x10
#define _DAC7REF_R0_POSN                                    0x0
#define _DAC7REF_R0_POSITION                                0x0
#define _DAC7REF_R0_SIZE                                    0x1
#define _DAC7REF_R0_LENGTH                                  0x1
#define _DAC7REF_R0_MASK                                    0x1
#define _DAC7REF_R1_POSN                                    0x1
#define _DAC7REF_R1_POSITION                                0x1
#define _DAC7REF_R1_SIZE                                    0x1
#define _DAC7REF_R1_LENGTH                                  0x1
#define _DAC7REF_R1_MASK                                    0x2
#define _DAC7REF_R2_POSN                                    0x2
#define _DAC7REF_R2_POSITION                                0x2
#define _DAC7REF_R2_SIZE                                    0x1
#define _DAC7REF_R2_LENGTH                                  0x1
#define _DAC7REF_R2_MASK                                    0x4
#define _DAC7REF_R3_POSN                                    0x3
#define _DAC7REF_R3_POSITION                                0x3
#define _DAC7REF_R3_SIZE                                    0x1
#define _DAC7REF_R3_LENGTH                                  0x1
#define _DAC7REF_R3_MASK                                    0x8
#define _DAC7REF_R4_POSN                                    0x4
#define _DAC7REF_R4_POSITION                                0x4
#define _DAC7REF_R4_SIZE                                    0x1
#define _DAC7REF_R4_LENGTH                                  0x1
#define _DAC7REF_R4_MASK                                    0x10
#define _DAC7REF_DAC7R_POSN                                 0x0
#define _DAC7REF_DAC7R_POSITION                             0x0
#define _DAC7REF_DAC7R_SIZE                                 0x5
#define _DAC7REF_DAC7R_LENGTH                               0x5
#define _DAC7REF_DAC7R_MASK                                 0x1F
#define _DAC7REF_DAC7R0_POSN                                0x0
#define _DAC7REF_DAC7R0_POSITION                            0x0
#define _DAC7REF_DAC7R0_SIZE                                0x1
#define _DAC7REF_DAC7R0_LENGTH                              0x1
#define _DAC7REF_DAC7R0_MASK                                0x1
#define _DAC7REF_DAC7R1_POSN                                0x1
#define _DAC7REF_DAC7R1_POSITION                            0x1
#define _DAC7REF_DAC7R1_SIZE                                0x1
#define _DAC7REF_DAC7R1_LENGTH                              0x1
#define _DAC7REF_DAC7R1_MASK                                0x2
#define _DAC7REF_DAC7R2_POSN                                0x2
#define _DAC7REF_DAC7R2_POSITION                            0x2
#define _DAC7REF_DAC7R2_SIZE                                0x1
#define _DAC7REF_DAC7R2_LENGTH                              0x1
#define _DAC7REF_DAC7R2_MASK                                0x4
#define _DAC7REF_DAC7R3_POSN                                0x3
#define _DAC7REF_DAC7R3_POSITION                            0x3
#define _DAC7REF_DAC7R3_SIZE                                0x1
#define _DAC7REF_DAC7R3_LENGTH                              0x1
#define _DAC7REF_DAC7R3_MASK                                0x8
#define _DAC7REF_DAC7R4_POSN                                0x4
#define _DAC7REF_DAC7R4_POSITION                            0x4
#define _DAC7REF_DAC7R4_SIZE                                0x1
#define _DAC7REF_DAC7R4_LENGTH                              0x1
#define _DAC7REF_DAC7R4_MASK                                0x10
#define _DAC7REF_REF0_POSN                                  0x0
#define _DAC7REF_REF0_POSITION                              0x0
#define _DAC7REF_REF0_SIZE                                  0x1
#define _DAC7REF_REF0_LENGTH                                0x1
#define _DAC7REF_REF0_MASK                                  0x1
#define _DAC7REF_REF1_POSN                                  0x1
#define _DAC7REF_REF1_POSITION                              0x1
#define _DAC7REF_REF1_SIZE                                  0x1
#define _DAC7REF_REF1_LENGTH                                0x1
#define _DAC7REF_REF1_MASK                                  0x2
#define _DAC7REF_REF2_POSN                                  0x2
#define _DAC7REF_REF2_POSITION                              0x2
#define _DAC7REF_REF2_SIZE                                  0x1
#define _DAC7REF_REF2_LENGTH                                0x1
#define _DAC7REF_REF2_MASK                                  0x4
#define _DAC7REF_REF3_POSN                                  0x3
#define _DAC7REF_REF3_POSITION                              0x3
#define _DAC7REF_REF3_SIZE                                  0x1
#define _DAC7REF_REF3_LENGTH                                0x1
#define _DAC7REF_REF3_MASK                                  0x8
#define _DAC7REF_REF4_POSN                                  0x4
#define _DAC7REF_REF4_POSITION                              0x4
#define _DAC7REF_REF4_SIZE                                  0x1
#define _DAC7REF_REF4_LENGTH                                0x1
#define _DAC7REF_REF4_MASK                                  0x10
#define _DAC7REF_DAC7REF0_POSN                              0x0
#define _DAC7REF_DAC7REF0_POSITION                          0x0
#define _DAC7REF_DAC7REF0_SIZE                              0x1
#define _DAC7REF_DAC7REF0_LENGTH                            0x1
#define _DAC7REF_DAC7REF0_MASK                              0x1
#define _DAC7REF_DAC7REF1_POSN                              0x1
#define _DAC7REF_DAC7REF1_POSITION                          0x1
#define _DAC7REF_DAC7REF1_SIZE                              0x1
#define _DAC7REF_DAC7REF1_LENGTH                            0x1
#define _DAC7REF_DAC7REF1_MASK                              0x2
#define _DAC7REF_DAC7REF2_POSN                              0x2
#define _DAC7REF_DAC7REF2_POSITION                          0x2
#define _DAC7REF_DAC7REF2_SIZE                              0x1
#define _DAC7REF_DAC7REF2_LENGTH                            0x1
#define _DAC7REF_DAC7REF2_MASK                              0x4
#define _DAC7REF_DAC7REF3_POSN                              0x3
#define _DAC7REF_DAC7REF3_POSITION                          0x3
#define _DAC7REF_DAC7REF3_SIZE                              0x1
#define _DAC7REF_DAC7REF3_LENGTH                            0x1
#define _DAC7REF_DAC7REF3_MASK                              0x8
#define _DAC7REF_DAC7REF4_POSN                              0x4
#define _DAC7REF_DAC7REF4_POSITION                          0x4
#define _DAC7REF_DAC7REF4_SIZE                              0x1
#define _DAC7REF_DAC7REF4_LENGTH                            0x1
#define _DAC7REF_DAC7REF4_MASK                              0x10
// alias bitfield definitions
typedef union {
    struct {
        unsigned DACR                   :5;
    };
    struct {
        unsigned DACR0                  :1;
        unsigned DACR1                  :1;
        unsigned DACR2                  :1;
        unsigned DACR3                  :1;
        unsigned DACR4                  :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
    };
    struct {
        unsigned DAC7R                  :5;
    };
    struct {
        unsigned DAC7R0                 :1;
        unsigned DAC7R1                 :1;
        unsigned DAC7R2                 :1;
        unsigned DAC7R3                 :1;
        unsigned DAC7R4                 :1;
    };
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
    };
    struct {
        unsigned DAC7REF0               :1;
        unsigned DAC7REF1               :1;
        unsigned DAC7REF2               :1;
        unsigned DAC7REF3               :1;
        unsigned DAC7REF4               :1;
    };
} DAC7CON1bits_t;
extern volatile DAC7CON1bits_t DAC7CON1bits __at(0x59F);
// bitfield macros
#define _DAC7CON1_DACR_POSN                                 0x0
#define _DAC7CON1_DACR_POSITION                             0x0
#define _DAC7CON1_DACR_SIZE                                 0x5
#define _DAC7CON1_DACR_LENGTH                               0x5
#define _DAC7CON1_DACR_MASK                                 0x1F
#define _DAC7CON1_DACR0_POSN                                0x0
#define _DAC7CON1_DACR0_POSITION                            0x0
#define _DAC7CON1_DACR0_SIZE                                0x1
#define _DAC7CON1_DACR0_LENGTH                              0x1
#define _DAC7CON1_DACR0_MASK                                0x1
#define _DAC7CON1_DACR1_POSN                                0x1
#define _DAC7CON1_DACR1_POSITION                            0x1
#define _DAC7CON1_DACR1_SIZE                                0x1
#define _DAC7CON1_DACR1_LENGTH                              0x1
#define _DAC7CON1_DACR1_MASK                                0x2
#define _DAC7CON1_DACR2_POSN                                0x2
#define _DAC7CON1_DACR2_POSITION                            0x2
#define _DAC7CON1_DACR2_SIZE                                0x1
#define _DAC7CON1_DACR2_LENGTH                              0x1
#define _DAC7CON1_DACR2_MASK                                0x4
#define _DAC7CON1_DACR3_POSN                                0x3
#define _DAC7CON1_DACR3_POSITION                            0x3
#define _DAC7CON1_DACR3_SIZE                                0x1
#define _DAC7CON1_DACR3_LENGTH                              0x1
#define _DAC7CON1_DACR3_MASK                                0x8
#define _DAC7CON1_DACR4_POSN                                0x4
#define _DAC7CON1_DACR4_POSITION                            0x4
#define _DAC7CON1_DACR4_SIZE                                0x1
#define _DAC7CON1_DACR4_LENGTH                              0x1
#define _DAC7CON1_DACR4_MASK                                0x10
#define _DAC7CON1_R0_POSN                                   0x0
#define _DAC7CON1_R0_POSITION                               0x0
#define _DAC7CON1_R0_SIZE                                   0x1
#define _DAC7CON1_R0_LENGTH                                 0x1
#define _DAC7CON1_R0_MASK                                   0x1
#define _DAC7CON1_R1_POSN                                   0x1
#define _DAC7CON1_R1_POSITION                               0x1
#define _DAC7CON1_R1_SIZE                                   0x1
#define _DAC7CON1_R1_LENGTH                                 0x1
#define _DAC7CON1_R1_MASK                                   0x2
#define _DAC7CON1_R2_POSN                                   0x2
#define _DAC7CON1_R2_POSITION                               0x2
#define _DAC7CON1_R2_SIZE                                   0x1
#define _DAC7CON1_R2_LENGTH                                 0x1
#define _DAC7CON1_R2_MASK                                   0x4
#define _DAC7CON1_R3_POSN                                   0x3
#define _DAC7CON1_R3_POSITION                               0x3
#define _DAC7CON1_R3_SIZE                                   0x1
#define _DAC7CON1_R3_LENGTH                                 0x1
#define _DAC7CON1_R3_MASK                                   0x8
#define _DAC7CON1_R4_POSN                                   0x4
#define _DAC7CON1_R4_POSITION                               0x4
#define _DAC7CON1_R4_SIZE                                   0x1
#define _DAC7CON1_R4_LENGTH                                 0x1
#define _DAC7CON1_R4_MASK                                   0x10
#define _DAC7CON1_DAC7R_POSN                                0x0
#define _DAC7CON1_DAC7R_POSITION                            0x0
#define _DAC7CON1_DAC7R_SIZE                                0x5
#define _DAC7CON1_DAC7R_LENGTH                              0x5
#define _DAC7CON1_DAC7R_MASK                                0x1F
#define _DAC7CON1_DAC7R0_POSN                               0x0
#define _DAC7CON1_DAC7R0_POSITION                           0x0
#define _DAC7CON1_DAC7R0_SIZE                               0x1
#define _DAC7CON1_DAC7R0_LENGTH                             0x1
#define _DAC7CON1_DAC7R0_MASK                               0x1
#define _DAC7CON1_DAC7R1_POSN                               0x1
#define _DAC7CON1_DAC7R1_POSITION                           0x1
#define _DAC7CON1_DAC7R1_SIZE                               0x1
#define _DAC7CON1_DAC7R1_LENGTH                             0x1
#define _DAC7CON1_DAC7R1_MASK                               0x2
#define _DAC7CON1_DAC7R2_POSN                               0x2
#define _DAC7CON1_DAC7R2_POSITION                           0x2
#define _DAC7CON1_DAC7R2_SIZE                               0x1
#define _DAC7CON1_DAC7R2_LENGTH                             0x1
#define _DAC7CON1_DAC7R2_MASK                               0x4
#define _DAC7CON1_DAC7R3_POSN                               0x3
#define _DAC7CON1_DAC7R3_POSITION                           0x3
#define _DAC7CON1_DAC7R3_SIZE                               0x1
#define _DAC7CON1_DAC7R3_LENGTH                             0x1
#define _DAC7CON1_DAC7R3_MASK                               0x8
#define _DAC7CON1_DAC7R4_POSN                               0x4
#define _DAC7CON1_DAC7R4_POSITION                           0x4
#define _DAC7CON1_DAC7R4_SIZE                               0x1
#define _DAC7CON1_DAC7R4_LENGTH                             0x1
#define _DAC7CON1_DAC7R4_MASK                               0x10
#define _DAC7CON1_REF0_POSN                                 0x0
#define _DAC7CON1_REF0_POSITION                             0x0
#define _DAC7CON1_REF0_SIZE                                 0x1
#define _DAC7CON1_REF0_LENGTH                               0x1
#define _DAC7CON1_REF0_MASK                                 0x1
#define _DAC7CON1_REF1_POSN                                 0x1
#define _DAC7CON1_REF1_POSITION                             0x1
#define _DAC7CON1_REF1_SIZE                                 0x1
#define _DAC7CON1_REF1_LENGTH                               0x1
#define _DAC7CON1_REF1_MASK                                 0x2
#define _DAC7CON1_REF2_POSN                                 0x2
#define _DAC7CON1_REF2_POSITION                             0x2
#define _DAC7CON1_REF2_SIZE                                 0x1
#define _DAC7CON1_REF2_LENGTH                               0x1
#define _DAC7CON1_REF2_MASK                                 0x4
#define _DAC7CON1_REF3_POSN                                 0x3
#define _DAC7CON1_REF3_POSITION                             0x3
#define _DAC7CON1_REF3_SIZE                                 0x1
#define _DAC7CON1_REF3_LENGTH                               0x1
#define _DAC7CON1_REF3_MASK                                 0x8
#define _DAC7CON1_REF4_POSN                                 0x4
#define _DAC7CON1_REF4_POSITION                             0x4
#define _DAC7CON1_REF4_SIZE                                 0x1
#define _DAC7CON1_REF4_LENGTH                               0x1
#define _DAC7CON1_REF4_MASK                                 0x10
#define _DAC7CON1_DAC7REF0_POSN                             0x0
#define _DAC7CON1_DAC7REF0_POSITION                         0x0
#define _DAC7CON1_DAC7REF0_SIZE                             0x1
#define _DAC7CON1_DAC7REF0_LENGTH                           0x1
#define _DAC7CON1_DAC7REF0_MASK                             0x1
#define _DAC7CON1_DAC7REF1_POSN                             0x1
#define _DAC7CON1_DAC7REF1_POSITION                         0x1
#define _DAC7CON1_DAC7REF1_SIZE                             0x1
#define _DAC7CON1_DAC7REF1_LENGTH                           0x1
#define _DAC7CON1_DAC7REF1_MASK                             0x2
#define _DAC7CON1_DAC7REF2_POSN                             0x2
#define _DAC7CON1_DAC7REF2_POSITION                         0x2
#define _DAC7CON1_DAC7REF2_SIZE                             0x1
#define _DAC7CON1_DAC7REF2_LENGTH                           0x1
#define _DAC7CON1_DAC7REF2_MASK                             0x4
#define _DAC7CON1_DAC7REF3_POSN                             0x3
#define _DAC7CON1_DAC7REF3_POSITION                         0x3
#define _DAC7CON1_DAC7REF3_SIZE                             0x1
#define _DAC7CON1_DAC7REF3_LENGTH                           0x1
#define _DAC7CON1_DAC7REF3_MASK                             0x8
#define _DAC7CON1_DAC7REF4_POSN                             0x4
#define _DAC7CON1_DAC7REF4_POSITION                         0x4
#define _DAC7CON1_DAC7REF4_SIZE                             0x1
#define _DAC7CON1_DAC7REF4_LENGTH                           0x1
#define _DAC7CON1_DAC7REF4_MASK                             0x10

// Register: DAC8CON0
#define DAC8CON0 DAC8CON0
extern volatile unsigned char           DAC8CON0            __at(0x60C);
#ifndef _LIB_BUILD
asm("DAC8CON0 equ 060Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NSS                    :2;
        unsigned PSS                    :2;
        unsigned OE2                    :1;
        unsigned OE1                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned NSS0                   :1;
        unsigned NSS1                   :1;
        unsigned PSS0                   :1;
        unsigned PSS1                   :1;
    };
    struct {
        unsigned DACNSS                 :2;
        unsigned DACPSS                 :2;
        unsigned DACOE2                 :1;
        unsigned DACOE1                 :1;
        unsigned                        :1;
        unsigned DACEN                  :1;
    };
    struct {
        unsigned DACNSS0                :1;
        unsigned DACNSS1                :1;
        unsigned DACPSS0                :1;
        unsigned DACPSS1                :1;
    };
    struct {
        unsigned DAC8NSS                :2;
        unsigned DAC8PSS                :2;
        unsigned DAC8OE2                :1;
        unsigned DAC8OE1                :1;
        unsigned                        :1;
        unsigned DAC8EN                 :1;
    };
    struct {
        unsigned DAC8NSS0               :1;
        unsigned DAC8NSS1               :1;
        unsigned DAC8PSS0               :1;
        unsigned DAC8PSS1               :1;
    };
} DAC8CON0bits_t;
extern volatile DAC8CON0bits_t DAC8CON0bits __at(0x60C);
// bitfield macros
#define _DAC8CON0_NSS_POSN                                  0x0
#define _DAC8CON0_NSS_POSITION                              0x0
#define _DAC8CON0_NSS_SIZE                                  0x2
#define _DAC8CON0_NSS_LENGTH                                0x2
#define _DAC8CON0_NSS_MASK                                  0x3
#define _DAC8CON0_PSS_POSN                                  0x2
#define _DAC8CON0_PSS_POSITION                              0x2
#define _DAC8CON0_PSS_SIZE                                  0x2
#define _DAC8CON0_PSS_LENGTH                                0x2
#define _DAC8CON0_PSS_MASK                                  0xC
#define _DAC8CON0_OE2_POSN                                  0x4
#define _DAC8CON0_OE2_POSITION                              0x4
#define _DAC8CON0_OE2_SIZE                                  0x1
#define _DAC8CON0_OE2_LENGTH                                0x1
#define _DAC8CON0_OE2_MASK                                  0x10
#define _DAC8CON0_OE1_POSN                                  0x5
#define _DAC8CON0_OE1_POSITION                              0x5
#define _DAC8CON0_OE1_SIZE                                  0x1
#define _DAC8CON0_OE1_LENGTH                                0x1
#define _DAC8CON0_OE1_MASK                                  0x20
#define _DAC8CON0_EN_POSN                                   0x7
#define _DAC8CON0_EN_POSITION                               0x7
#define _DAC8CON0_EN_SIZE                                   0x1
#define _DAC8CON0_EN_LENGTH                                 0x1
#define _DAC8CON0_EN_MASK                                   0x80
#define _DAC8CON0_NSS0_POSN                                 0x0
#define _DAC8CON0_NSS0_POSITION                             0x0
#define _DAC8CON0_NSS0_SIZE                                 0x1
#define _DAC8CON0_NSS0_LENGTH                               0x1
#define _DAC8CON0_NSS0_MASK                                 0x1
#define _DAC8CON0_NSS1_POSN                                 0x1
#define _DAC8CON0_NSS1_POSITION                             0x1
#define _DAC8CON0_NSS1_SIZE                                 0x1
#define _DAC8CON0_NSS1_LENGTH                               0x1
#define _DAC8CON0_NSS1_MASK                                 0x2
#define _DAC8CON0_PSS0_POSN                                 0x2
#define _DAC8CON0_PSS0_POSITION                             0x2
#define _DAC8CON0_PSS0_SIZE                                 0x1
#define _DAC8CON0_PSS0_LENGTH                               0x1
#define _DAC8CON0_PSS0_MASK                                 0x4
#define _DAC8CON0_PSS1_POSN                                 0x3
#define _DAC8CON0_PSS1_POSITION                             0x3
#define _DAC8CON0_PSS1_SIZE                                 0x1
#define _DAC8CON0_PSS1_LENGTH                               0x1
#define _DAC8CON0_PSS1_MASK                                 0x8
#define _DAC8CON0_DACNSS_POSN                               0x0
#define _DAC8CON0_DACNSS_POSITION                           0x0
#define _DAC8CON0_DACNSS_SIZE                               0x2
#define _DAC8CON0_DACNSS_LENGTH                             0x2
#define _DAC8CON0_DACNSS_MASK                               0x3
#define _DAC8CON0_DACPSS_POSN                               0x2
#define _DAC8CON0_DACPSS_POSITION                           0x2
#define _DAC8CON0_DACPSS_SIZE                               0x2
#define _DAC8CON0_DACPSS_LENGTH                             0x2
#define _DAC8CON0_DACPSS_MASK                               0xC
#define _DAC8CON0_DACOE2_POSN                               0x4
#define _DAC8CON0_DACOE2_POSITION                           0x4
#define _DAC8CON0_DACOE2_SIZE                               0x1
#define _DAC8CON0_DACOE2_LENGTH                             0x1
#define _DAC8CON0_DACOE2_MASK                               0x10
#define _DAC8CON0_DACOE1_POSN                               0x5
#define _DAC8CON0_DACOE1_POSITION                           0x5
#define _DAC8CON0_DACOE1_SIZE                               0x1
#define _DAC8CON0_DACOE1_LENGTH                             0x1
#define _DAC8CON0_DACOE1_MASK                               0x20
#define _DAC8CON0_DACEN_POSN                                0x7
#define _DAC8CON0_DACEN_POSITION                            0x7
#define _DAC8CON0_DACEN_SIZE                                0x1
#define _DAC8CON0_DACEN_LENGTH                              0x1
#define _DAC8CON0_DACEN_MASK                                0x80
#define _DAC8CON0_DACNSS0_POSN                              0x0
#define _DAC8CON0_DACNSS0_POSITION                          0x0
#define _DAC8CON0_DACNSS0_SIZE                              0x1
#define _DAC8CON0_DACNSS0_LENGTH                            0x1
#define _DAC8CON0_DACNSS0_MASK                              0x1
#define _DAC8CON0_DACNSS1_POSN                              0x1
#define _DAC8CON0_DACNSS1_POSITION                          0x1
#define _DAC8CON0_DACNSS1_SIZE                              0x1
#define _DAC8CON0_DACNSS1_LENGTH                            0x1
#define _DAC8CON0_DACNSS1_MASK                              0x2
#define _DAC8CON0_DACPSS0_POSN                              0x2
#define _DAC8CON0_DACPSS0_POSITION                          0x2
#define _DAC8CON0_DACPSS0_SIZE                              0x1
#define _DAC8CON0_DACPSS0_LENGTH                            0x1
#define _DAC8CON0_DACPSS0_MASK                              0x4
#define _DAC8CON0_DACPSS1_POSN                              0x3
#define _DAC8CON0_DACPSS1_POSITION                          0x3
#define _DAC8CON0_DACPSS1_SIZE                              0x1
#define _DAC8CON0_DACPSS1_LENGTH                            0x1
#define _DAC8CON0_DACPSS1_MASK                              0x8
#define _DAC8CON0_DAC8NSS_POSN                              0x0
#define _DAC8CON0_DAC8NSS_POSITION                          0x0
#define _DAC8CON0_DAC8NSS_SIZE                              0x2
#define _DAC8CON0_DAC8NSS_LENGTH                            0x2
#define _DAC8CON0_DAC8NSS_MASK                              0x3
#define _DAC8CON0_DAC8PSS_POSN                              0x2
#define _DAC8CON0_DAC8PSS_POSITION                          0x2
#define _DAC8CON0_DAC8PSS_SIZE                              0x2
#define _DAC8CON0_DAC8PSS_LENGTH                            0x2
#define _DAC8CON0_DAC8PSS_MASK                              0xC
#define _DAC8CON0_DAC8OE2_POSN                              0x4
#define _DAC8CON0_DAC8OE2_POSITION                          0x4
#define _DAC8CON0_DAC8OE2_SIZE                              0x1
#define _DAC8CON0_DAC8OE2_LENGTH                            0x1
#define _DAC8CON0_DAC8OE2_MASK                              0x10
#define _DAC8CON0_DAC8OE1_POSN                              0x5
#define _DAC8CON0_DAC8OE1_POSITION                          0x5
#define _DAC8CON0_DAC8OE1_SIZE                              0x1
#define _DAC8CON0_DAC8OE1_LENGTH                            0x1
#define _DAC8CON0_DAC8OE1_MASK                              0x20
#define _DAC8CON0_DAC8EN_POSN                               0x7
#define _DAC8CON0_DAC8EN_POSITION                           0x7
#define _DAC8CON0_DAC8EN_SIZE                               0x1
#define _DAC8CON0_DAC8EN_LENGTH                             0x1
#define _DAC8CON0_DAC8EN_MASK                               0x80
#define _DAC8CON0_DAC8NSS0_POSN                             0x0
#define _DAC8CON0_DAC8NSS0_POSITION                         0x0
#define _DAC8CON0_DAC8NSS0_SIZE                             0x1
#define _DAC8CON0_DAC8NSS0_LENGTH                           0x1
#define _DAC8CON0_DAC8NSS0_MASK                             0x1
#define _DAC8CON0_DAC8NSS1_POSN                             0x1
#define _DAC8CON0_DAC8NSS1_POSITION                         0x1
#define _DAC8CON0_DAC8NSS1_SIZE                             0x1
#define _DAC8CON0_DAC8NSS1_LENGTH                           0x1
#define _DAC8CON0_DAC8NSS1_MASK                             0x2
#define _DAC8CON0_DAC8PSS0_POSN                             0x2
#define _DAC8CON0_DAC8PSS0_POSITION                         0x2
#define _DAC8CON0_DAC8PSS0_SIZE                             0x1
#define _DAC8CON0_DAC8PSS0_LENGTH                           0x1
#define _DAC8CON0_DAC8PSS0_MASK                             0x4
#define _DAC8CON0_DAC8PSS1_POSN                             0x3
#define _DAC8CON0_DAC8PSS1_POSITION                         0x3
#define _DAC8CON0_DAC8PSS1_SIZE                             0x1
#define _DAC8CON0_DAC8PSS1_LENGTH                           0x1
#define _DAC8CON0_DAC8PSS1_MASK                             0x8

// Register: DAC8REF
#define DAC8REF DAC8REF
extern volatile unsigned char           DAC8REF             __at(0x60D);
#ifndef _LIB_BUILD
asm("DAC8REF equ 060Dh");
#endif
// aliases
extern volatile unsigned char           DAC8CON1            __at(0x60D);
#ifndef _LIB_BUILD
asm("DAC8CON1 equ 060Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DACR                   :5;
    };
    struct {
        unsigned DACR0                  :1;
        unsigned DACR1                  :1;
        unsigned DACR2                  :1;
        unsigned DACR3                  :1;
        unsigned DACR4                  :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
    };
    struct {
        unsigned DAC8R                  :5;
    };
    struct {
        unsigned DAC8R0                 :1;
        unsigned DAC8R1                 :1;
        unsigned DAC8R2                 :1;
        unsigned DAC8R3                 :1;
        unsigned DAC8R4                 :1;
    };
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
    };
    struct {
        unsigned DAC8REF0               :1;
        unsigned DAC8REF1               :1;
        unsigned DAC8REF2               :1;
        unsigned DAC8REF3               :1;
        unsigned DAC8REF4               :1;
    };
} DAC8REFbits_t;
extern volatile DAC8REFbits_t DAC8REFbits __at(0x60D);
// bitfield macros
#define _DAC8REF_DACR_POSN                                  0x0
#define _DAC8REF_DACR_POSITION                              0x0
#define _DAC8REF_DACR_SIZE                                  0x5
#define _DAC8REF_DACR_LENGTH                                0x5
#define _DAC8REF_DACR_MASK                                  0x1F
#define _DAC8REF_DACR0_POSN                                 0x0
#define _DAC8REF_DACR0_POSITION                             0x0
#define _DAC8REF_DACR0_SIZE                                 0x1
#define _DAC8REF_DACR0_LENGTH                               0x1
#define _DAC8REF_DACR0_MASK                                 0x1
#define _DAC8REF_DACR1_POSN                                 0x1
#define _DAC8REF_DACR1_POSITION                             0x1
#define _DAC8REF_DACR1_SIZE                                 0x1
#define _DAC8REF_DACR1_LENGTH                               0x1
#define _DAC8REF_DACR1_MASK                                 0x2
#define _DAC8REF_DACR2_POSN                                 0x2
#define _DAC8REF_DACR2_POSITION                             0x2
#define _DAC8REF_DACR2_SIZE                                 0x1
#define _DAC8REF_DACR2_LENGTH                               0x1
#define _DAC8REF_DACR2_MASK                                 0x4
#define _DAC8REF_DACR3_POSN                                 0x3
#define _DAC8REF_DACR3_POSITION                             0x3
#define _DAC8REF_DACR3_SIZE                                 0x1
#define _DAC8REF_DACR3_LENGTH                               0x1
#define _DAC8REF_DACR3_MASK                                 0x8
#define _DAC8REF_DACR4_POSN                                 0x4
#define _DAC8REF_DACR4_POSITION                             0x4
#define _DAC8REF_DACR4_SIZE                                 0x1
#define _DAC8REF_DACR4_LENGTH                               0x1
#define _DAC8REF_DACR4_MASK                                 0x10
#define _DAC8REF_R0_POSN                                    0x0
#define _DAC8REF_R0_POSITION                                0x0
#define _DAC8REF_R0_SIZE                                    0x1
#define _DAC8REF_R0_LENGTH                                  0x1
#define _DAC8REF_R0_MASK                                    0x1
#define _DAC8REF_R1_POSN                                    0x1
#define _DAC8REF_R1_POSITION                                0x1
#define _DAC8REF_R1_SIZE                                    0x1
#define _DAC8REF_R1_LENGTH                                  0x1
#define _DAC8REF_R1_MASK                                    0x2
#define _DAC8REF_R2_POSN                                    0x2
#define _DAC8REF_R2_POSITION                                0x2
#define _DAC8REF_R2_SIZE                                    0x1
#define _DAC8REF_R2_LENGTH                                  0x1
#define _DAC8REF_R2_MASK                                    0x4
#define _DAC8REF_R3_POSN                                    0x3
#define _DAC8REF_R3_POSITION                                0x3
#define _DAC8REF_R3_SIZE                                    0x1
#define _DAC8REF_R3_LENGTH                                  0x1
#define _DAC8REF_R3_MASK                                    0x8
#define _DAC8REF_R4_POSN                                    0x4
#define _DAC8REF_R4_POSITION                                0x4
#define _DAC8REF_R4_SIZE                                    0x1
#define _DAC8REF_R4_LENGTH                                  0x1
#define _DAC8REF_R4_MASK                                    0x10
#define _DAC8REF_DAC8R_POSN                                 0x0
#define _DAC8REF_DAC8R_POSITION                             0x0
#define _DAC8REF_DAC8R_SIZE                                 0x5
#define _DAC8REF_DAC8R_LENGTH                               0x5
#define _DAC8REF_DAC8R_MASK                                 0x1F
#define _DAC8REF_DAC8R0_POSN                                0x0
#define _DAC8REF_DAC8R0_POSITION                            0x0
#define _DAC8REF_DAC8R0_SIZE                                0x1
#define _DAC8REF_DAC8R0_LENGTH                              0x1
#define _DAC8REF_DAC8R0_MASK                                0x1
#define _DAC8REF_DAC8R1_POSN                                0x1
#define _DAC8REF_DAC8R1_POSITION                            0x1
#define _DAC8REF_DAC8R1_SIZE                                0x1
#define _DAC8REF_DAC8R1_LENGTH                              0x1
#define _DAC8REF_DAC8R1_MASK                                0x2
#define _DAC8REF_DAC8R2_POSN                                0x2
#define _DAC8REF_DAC8R2_POSITION                            0x2
#define _DAC8REF_DAC8R2_SIZE                                0x1
#define _DAC8REF_DAC8R2_LENGTH                              0x1
#define _DAC8REF_DAC8R2_MASK                                0x4
#define _DAC8REF_DAC8R3_POSN                                0x3
#define _DAC8REF_DAC8R3_POSITION                            0x3
#define _DAC8REF_DAC8R3_SIZE                                0x1
#define _DAC8REF_DAC8R3_LENGTH                              0x1
#define _DAC8REF_DAC8R3_MASK                                0x8
#define _DAC8REF_DAC8R4_POSN                                0x4
#define _DAC8REF_DAC8R4_POSITION                            0x4
#define _DAC8REF_DAC8R4_SIZE                                0x1
#define _DAC8REF_DAC8R4_LENGTH                              0x1
#define _DAC8REF_DAC8R4_MASK                                0x10
#define _DAC8REF_REF0_POSN                                  0x0
#define _DAC8REF_REF0_POSITION                              0x0
#define _DAC8REF_REF0_SIZE                                  0x1
#define _DAC8REF_REF0_LENGTH                                0x1
#define _DAC8REF_REF0_MASK                                  0x1
#define _DAC8REF_REF1_POSN                                  0x1
#define _DAC8REF_REF1_POSITION                              0x1
#define _DAC8REF_REF1_SIZE                                  0x1
#define _DAC8REF_REF1_LENGTH                                0x1
#define _DAC8REF_REF1_MASK                                  0x2
#define _DAC8REF_REF2_POSN                                  0x2
#define _DAC8REF_REF2_POSITION                              0x2
#define _DAC8REF_REF2_SIZE                                  0x1
#define _DAC8REF_REF2_LENGTH                                0x1
#define _DAC8REF_REF2_MASK                                  0x4
#define _DAC8REF_REF3_POSN                                  0x3
#define _DAC8REF_REF3_POSITION                              0x3
#define _DAC8REF_REF3_SIZE                                  0x1
#define _DAC8REF_REF3_LENGTH                                0x1
#define _DAC8REF_REF3_MASK                                  0x8
#define _DAC8REF_REF4_POSN                                  0x4
#define _DAC8REF_REF4_POSITION                              0x4
#define _DAC8REF_REF4_SIZE                                  0x1
#define _DAC8REF_REF4_LENGTH                                0x1
#define _DAC8REF_REF4_MASK                                  0x10
#define _DAC8REF_DAC8REF0_POSN                              0x0
#define _DAC8REF_DAC8REF0_POSITION                          0x0
#define _DAC8REF_DAC8REF0_SIZE                              0x1
#define _DAC8REF_DAC8REF0_LENGTH                            0x1
#define _DAC8REF_DAC8REF0_MASK                              0x1
#define _DAC8REF_DAC8REF1_POSN                              0x1
#define _DAC8REF_DAC8REF1_POSITION                          0x1
#define _DAC8REF_DAC8REF1_SIZE                              0x1
#define _DAC8REF_DAC8REF1_LENGTH                            0x1
#define _DAC8REF_DAC8REF1_MASK                              0x2
#define _DAC8REF_DAC8REF2_POSN                              0x2
#define _DAC8REF_DAC8REF2_POSITION                          0x2
#define _DAC8REF_DAC8REF2_SIZE                              0x1
#define _DAC8REF_DAC8REF2_LENGTH                            0x1
#define _DAC8REF_DAC8REF2_MASK                              0x4
#define _DAC8REF_DAC8REF3_POSN                              0x3
#define _DAC8REF_DAC8REF3_POSITION                          0x3
#define _DAC8REF_DAC8REF3_SIZE                              0x1
#define _DAC8REF_DAC8REF3_LENGTH                            0x1
#define _DAC8REF_DAC8REF3_MASK                              0x8
#define _DAC8REF_DAC8REF4_POSN                              0x4
#define _DAC8REF_DAC8REF4_POSITION                          0x4
#define _DAC8REF_DAC8REF4_SIZE                              0x1
#define _DAC8REF_DAC8REF4_LENGTH                            0x1
#define _DAC8REF_DAC8REF4_MASK                              0x10
// alias bitfield definitions
typedef union {
    struct {
        unsigned DACR                   :5;
    };
    struct {
        unsigned DACR0                  :1;
        unsigned DACR1                  :1;
        unsigned DACR2                  :1;
        unsigned DACR3                  :1;
        unsigned DACR4                  :1;
    };
    struct {
        unsigned R0                     :1;
        unsigned R1                     :1;
        unsigned R2                     :1;
        unsigned R3                     :1;
        unsigned R4                     :1;
    };
    struct {
        unsigned DAC8R                  :5;
    };
    struct {
        unsigned DAC8R0                 :1;
        unsigned DAC8R1                 :1;
        unsigned DAC8R2                 :1;
        unsigned DAC8R3                 :1;
        unsigned DAC8R4                 :1;
    };
    struct {
        unsigned REF0                   :1;
        unsigned REF1                   :1;
        unsigned REF2                   :1;
        unsigned REF3                   :1;
        unsigned REF4                   :1;
    };
    struct {
        unsigned DAC8REF0               :1;
        unsigned DAC8REF1               :1;
        unsigned DAC8REF2               :1;
        unsigned DAC8REF3               :1;
        unsigned DAC8REF4               :1;
    };
} DAC8CON1bits_t;
extern volatile DAC8CON1bits_t DAC8CON1bits __at(0x60D);
// bitfield macros
#define _DAC8CON1_DACR_POSN                                 0x0
#define _DAC8CON1_DACR_POSITION                             0x0
#define _DAC8CON1_DACR_SIZE                                 0x5
#define _DAC8CON1_DACR_LENGTH                               0x5
#define _DAC8CON1_DACR_MASK                                 0x1F
#define _DAC8CON1_DACR0_POSN                                0x0
#define _DAC8CON1_DACR0_POSITION                            0x0
#define _DAC8CON1_DACR0_SIZE                                0x1
#define _DAC8CON1_DACR0_LENGTH                              0x1
#define _DAC8CON1_DACR0_MASK                                0x1
#define _DAC8CON1_DACR1_POSN                                0x1
#define _DAC8CON1_DACR1_POSITION                            0x1
#define _DAC8CON1_DACR1_SIZE                                0x1
#define _DAC8CON1_DACR1_LENGTH                              0x1
#define _DAC8CON1_DACR1_MASK                                0x2
#define _DAC8CON1_DACR2_POSN                                0x2
#define _DAC8CON1_DACR2_POSITION                            0x2
#define _DAC8CON1_DACR2_SIZE                                0x1
#define _DAC8CON1_DACR2_LENGTH                              0x1
#define _DAC8CON1_DACR2_MASK                                0x4
#define _DAC8CON1_DACR3_POSN                                0x3
#define _DAC8CON1_DACR3_POSITION                            0x3
#define _DAC8CON1_DACR3_SIZE                                0x1
#define _DAC8CON1_DACR3_LENGTH                              0x1
#define _DAC8CON1_DACR3_MASK                                0x8
#define _DAC8CON1_DACR4_POSN                                0x4
#define _DAC8CON1_DACR4_POSITION                            0x4
#define _DAC8CON1_DACR4_SIZE                                0x1
#define _DAC8CON1_DACR4_LENGTH                              0x1
#define _DAC8CON1_DACR4_MASK                                0x10
#define _DAC8CON1_R0_POSN                                   0x0
#define _DAC8CON1_R0_POSITION                               0x0
#define _DAC8CON1_R0_SIZE                                   0x1
#define _DAC8CON1_R0_LENGTH                                 0x1
#define _DAC8CON1_R0_MASK                                   0x1
#define _DAC8CON1_R1_POSN                                   0x1
#define _DAC8CON1_R1_POSITION                               0x1
#define _DAC8CON1_R1_SIZE                                   0x1
#define _DAC8CON1_R1_LENGTH                                 0x1
#define _DAC8CON1_R1_MASK                                   0x2
#define _DAC8CON1_R2_POSN                                   0x2
#define _DAC8CON1_R2_POSITION                               0x2
#define _DAC8CON1_R2_SIZE                                   0x1
#define _DAC8CON1_R2_LENGTH                                 0x1
#define _DAC8CON1_R2_MASK                                   0x4
#define _DAC8CON1_R3_POSN                                   0x3
#define _DAC8CON1_R3_POSITION                               0x3
#define _DAC8CON1_R3_SIZE                                   0x1
#define _DAC8CON1_R3_LENGTH                                 0x1
#define _DAC8CON1_R3_MASK                                   0x8
#define _DAC8CON1_R4_POSN                                   0x4
#define _DAC8CON1_R4_POSITION                               0x4
#define _DAC8CON1_R4_SIZE                                   0x1
#define _DAC8CON1_R4_LENGTH                                 0x1
#define _DAC8CON1_R4_MASK                                   0x10
#define _DAC8CON1_DAC8R_POSN                                0x0
#define _DAC8CON1_DAC8R_POSITION                            0x0
#define _DAC8CON1_DAC8R_SIZE                                0x5
#define _DAC8CON1_DAC8R_LENGTH                              0x5
#define _DAC8CON1_DAC8R_MASK                                0x1F
#define _DAC8CON1_DAC8R0_POSN                               0x0
#define _DAC8CON1_DAC8R0_POSITION                           0x0
#define _DAC8CON1_DAC8R0_SIZE                               0x1
#define _DAC8CON1_DAC8R0_LENGTH                             0x1
#define _DAC8CON1_DAC8R0_MASK                               0x1
#define _DAC8CON1_DAC8R1_POSN                               0x1
#define _DAC8CON1_DAC8R1_POSITION                           0x1
#define _DAC8CON1_DAC8R1_SIZE                               0x1
#define _DAC8CON1_DAC8R1_LENGTH                             0x1
#define _DAC8CON1_DAC8R1_MASK                               0x2
#define _DAC8CON1_DAC8R2_POSN                               0x2
#define _DAC8CON1_DAC8R2_POSITION                           0x2
#define _DAC8CON1_DAC8R2_SIZE                               0x1
#define _DAC8CON1_DAC8R2_LENGTH                             0x1
#define _DAC8CON1_DAC8R2_MASK                               0x4
#define _DAC8CON1_DAC8R3_POSN                               0x3
#define _DAC8CON1_DAC8R3_POSITION                           0x3
#define _DAC8CON1_DAC8R3_SIZE                               0x1
#define _DAC8CON1_DAC8R3_LENGTH                             0x1
#define _DAC8CON1_DAC8R3_MASK                               0x8
#define _DAC8CON1_DAC8R4_POSN                               0x4
#define _DAC8CON1_DAC8R4_POSITION                           0x4
#define _DAC8CON1_DAC8R4_SIZE                               0x1
#define _DAC8CON1_DAC8R4_LENGTH                             0x1
#define _DAC8CON1_DAC8R4_MASK                               0x10
#define _DAC8CON1_REF0_POSN                                 0x0
#define _DAC8CON1_REF0_POSITION                             0x0
#define _DAC8CON1_REF0_SIZE                                 0x1
#define _DAC8CON1_REF0_LENGTH                               0x1
#define _DAC8CON1_REF0_MASK                                 0x1
#define _DAC8CON1_REF1_POSN                                 0x1
#define _DAC8CON1_REF1_POSITION                             0x1
#define _DAC8CON1_REF1_SIZE                                 0x1
#define _DAC8CON1_REF1_LENGTH                               0x1
#define _DAC8CON1_REF1_MASK                                 0x2
#define _DAC8CON1_REF2_POSN                                 0x2
#define _DAC8CON1_REF2_POSITION                             0x2
#define _DAC8CON1_REF2_SIZE                                 0x1
#define _DAC8CON1_REF2_LENGTH                               0x1
#define _DAC8CON1_REF2_MASK                                 0x4
#define _DAC8CON1_REF3_POSN                                 0x3
#define _DAC8CON1_REF3_POSITION                             0x3
#define _DAC8CON1_REF3_SIZE                                 0x1
#define _DAC8CON1_REF3_LENGTH                               0x1
#define _DAC8CON1_REF3_MASK                                 0x8
#define _DAC8CON1_REF4_POSN                                 0x4
#define _DAC8CON1_REF4_POSITION                             0x4
#define _DAC8CON1_REF4_SIZE                                 0x1
#define _DAC8CON1_REF4_LENGTH                               0x1
#define _DAC8CON1_REF4_MASK                                 0x10
#define _DAC8CON1_DAC8REF0_POSN                             0x0
#define _DAC8CON1_DAC8REF0_POSITION                         0x0
#define _DAC8CON1_DAC8REF0_SIZE                             0x1
#define _DAC8CON1_DAC8REF0_LENGTH                           0x1
#define _DAC8CON1_DAC8REF0_MASK                             0x1
#define _DAC8CON1_DAC8REF1_POSN                             0x1
#define _DAC8CON1_DAC8REF1_POSITION                         0x1
#define _DAC8CON1_DAC8REF1_SIZE                             0x1
#define _DAC8CON1_DAC8REF1_LENGTH                           0x1
#define _DAC8CON1_DAC8REF1_MASK                             0x2
#define _DAC8CON1_DAC8REF2_POSN                             0x2
#define _DAC8CON1_DAC8REF2_POSITION                         0x2
#define _DAC8CON1_DAC8REF2_SIZE                             0x1
#define _DAC8CON1_DAC8REF2_LENGTH                           0x1
#define _DAC8CON1_DAC8REF2_MASK                             0x4
#define _DAC8CON1_DAC8REF3_POSN                             0x3
#define _DAC8CON1_DAC8REF3_POSITION                         0x3
#define _DAC8CON1_DAC8REF3_SIZE                             0x1
#define _DAC8CON1_DAC8REF3_LENGTH                           0x1
#define _DAC8CON1_DAC8REF3_MASK                             0x8
#define _DAC8CON1_DAC8REF4_POSN                             0x4
#define _DAC8CON1_DAC8REF4_POSITION                         0x4
#define _DAC8CON1_DAC8REF4_SIZE                             0x1
#define _DAC8CON1_DAC8REF4_LENGTH                           0x1
#define _DAC8CON1_DAC8REF4_MASK                             0x10

// Register: PRG4RTSS
#define PRG4RTSS PRG4RTSS
extern volatile unsigned char           PRG4RTSS            __at(0x60E);
#ifndef _LIB_BUILD
asm("PRG4RTSS equ 060Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTSS                   :8;
    };
    struct {
        unsigned RTSS0                  :1;
        unsigned RTSS1                  :1;
        unsigned RTSS2                  :1;
        unsigned RTSS3                  :1;
    };
    struct {
        unsigned RG4RTSS0               :1;
        unsigned RG4RTSS1               :1;
        unsigned RG4RTSS2               :1;
        unsigned RG4RTSS3               :1;
    };
} PRG4RTSSbits_t;
extern volatile PRG4RTSSbits_t PRG4RTSSbits __at(0x60E);
// bitfield macros
#define _PRG4RTSS_RTSS_POSN                                 0x0
#define _PRG4RTSS_RTSS_POSITION                             0x0
#define _PRG4RTSS_RTSS_SIZE                                 0x8
#define _PRG4RTSS_RTSS_LENGTH                               0x8
#define _PRG4RTSS_RTSS_MASK                                 0xFF
#define _PRG4RTSS_RTSS0_POSN                                0x0
#define _PRG4RTSS_RTSS0_POSITION                            0x0
#define _PRG4RTSS_RTSS0_SIZE                                0x1
#define _PRG4RTSS_RTSS0_LENGTH                              0x1
#define _PRG4RTSS_RTSS0_MASK                                0x1
#define _PRG4RTSS_RTSS1_POSN                                0x1
#define _PRG4RTSS_RTSS1_POSITION                            0x1
#define _PRG4RTSS_RTSS1_SIZE                                0x1
#define _PRG4RTSS_RTSS1_LENGTH                              0x1
#define _PRG4RTSS_RTSS1_MASK                                0x2
#define _PRG4RTSS_RTSS2_POSN                                0x2
#define _PRG4RTSS_RTSS2_POSITION                            0x2
#define _PRG4RTSS_RTSS2_SIZE                                0x1
#define _PRG4RTSS_RTSS2_LENGTH                              0x1
#define _PRG4RTSS_RTSS2_MASK                                0x4
#define _PRG4RTSS_RTSS3_POSN                                0x3
#define _PRG4RTSS_RTSS3_POSITION                            0x3
#define _PRG4RTSS_RTSS3_SIZE                                0x1
#define _PRG4RTSS_RTSS3_LENGTH                              0x1
#define _PRG4RTSS_RTSS3_MASK                                0x8
#define _PRG4RTSS_RG4RTSS0_POSN                             0x0
#define _PRG4RTSS_RG4RTSS0_POSITION                         0x0
#define _PRG4RTSS_RG4RTSS0_SIZE                             0x1
#define _PRG4RTSS_RG4RTSS0_LENGTH                           0x1
#define _PRG4RTSS_RG4RTSS0_MASK                             0x1
#define _PRG4RTSS_RG4RTSS1_POSN                             0x1
#define _PRG4RTSS_RG4RTSS1_POSITION                         0x1
#define _PRG4RTSS_RG4RTSS1_SIZE                             0x1
#define _PRG4RTSS_RG4RTSS1_LENGTH                           0x1
#define _PRG4RTSS_RG4RTSS1_MASK                             0x2
#define _PRG4RTSS_RG4RTSS2_POSN                             0x2
#define _PRG4RTSS_RG4RTSS2_POSITION                         0x2
#define _PRG4RTSS_RG4RTSS2_SIZE                             0x1
#define _PRG4RTSS_RG4RTSS2_LENGTH                           0x1
#define _PRG4RTSS_RG4RTSS2_MASK                             0x4
#define _PRG4RTSS_RG4RTSS3_POSN                             0x3
#define _PRG4RTSS_RG4RTSS3_POSITION                         0x3
#define _PRG4RTSS_RG4RTSS3_SIZE                             0x1
#define _PRG4RTSS_RG4RTSS3_LENGTH                           0x1
#define _PRG4RTSS_RG4RTSS3_MASK                             0x8

// Register: PRG4FTSS
#define PRG4FTSS PRG4FTSS
extern volatile unsigned char           PRG4FTSS            __at(0x60F);
#ifndef _LIB_BUILD
asm("PRG4FTSS equ 060Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FTSS                   :8;
    };
    struct {
        unsigned FTSS0                  :1;
        unsigned FTSS1                  :1;
        unsigned FTSS2                  :1;
        unsigned FTSS3                  :1;
    };
    struct {
        unsigned RG4FTSS0               :1;
        unsigned RG4FTSS1               :1;
        unsigned RG4FTSS2               :1;
        unsigned RG4FTSS3               :1;
    };
} PRG4FTSSbits_t;
extern volatile PRG4FTSSbits_t PRG4FTSSbits __at(0x60F);
// bitfield macros
#define _PRG4FTSS_FTSS_POSN                                 0x0
#define _PRG4FTSS_FTSS_POSITION                             0x0
#define _PRG4FTSS_FTSS_SIZE                                 0x8
#define _PRG4FTSS_FTSS_LENGTH                               0x8
#define _PRG4FTSS_FTSS_MASK                                 0xFF
#define _PRG4FTSS_FTSS0_POSN                                0x0
#define _PRG4FTSS_FTSS0_POSITION                            0x0
#define _PRG4FTSS_FTSS0_SIZE                                0x1
#define _PRG4FTSS_FTSS0_LENGTH                              0x1
#define _PRG4FTSS_FTSS0_MASK                                0x1
#define _PRG4FTSS_FTSS1_POSN                                0x1
#define _PRG4FTSS_FTSS1_POSITION                            0x1
#define _PRG4FTSS_FTSS1_SIZE                                0x1
#define _PRG4FTSS_FTSS1_LENGTH                              0x1
#define _PRG4FTSS_FTSS1_MASK                                0x2
#define _PRG4FTSS_FTSS2_POSN                                0x2
#define _PRG4FTSS_FTSS2_POSITION                            0x2
#define _PRG4FTSS_FTSS2_SIZE                                0x1
#define _PRG4FTSS_FTSS2_LENGTH                              0x1
#define _PRG4FTSS_FTSS2_MASK                                0x4
#define _PRG4FTSS_FTSS3_POSN                                0x3
#define _PRG4FTSS_FTSS3_POSITION                            0x3
#define _PRG4FTSS_FTSS3_SIZE                                0x1
#define _PRG4FTSS_FTSS3_LENGTH                              0x1
#define _PRG4FTSS_FTSS3_MASK                                0x8
#define _PRG4FTSS_RG4FTSS0_POSN                             0x0
#define _PRG4FTSS_RG4FTSS0_POSITION                         0x0
#define _PRG4FTSS_RG4FTSS0_SIZE                             0x1
#define _PRG4FTSS_RG4FTSS0_LENGTH                           0x1
#define _PRG4FTSS_RG4FTSS0_MASK                             0x1
#define _PRG4FTSS_RG4FTSS1_POSN                             0x1
#define _PRG4FTSS_RG4FTSS1_POSITION                         0x1
#define _PRG4FTSS_RG4FTSS1_SIZE                             0x1
#define _PRG4FTSS_RG4FTSS1_LENGTH                           0x1
#define _PRG4FTSS_RG4FTSS1_MASK                             0x2
#define _PRG4FTSS_RG4FTSS2_POSN                             0x2
#define _PRG4FTSS_RG4FTSS2_POSITION                         0x2
#define _PRG4FTSS_RG4FTSS2_SIZE                             0x1
#define _PRG4FTSS_RG4FTSS2_LENGTH                           0x1
#define _PRG4FTSS_RG4FTSS2_MASK                             0x4
#define _PRG4FTSS_RG4FTSS3_POSN                             0x3
#define _PRG4FTSS_RG4FTSS3_POSITION                         0x3
#define _PRG4FTSS_RG4FTSS3_SIZE                             0x1
#define _PRG4FTSS_RG4FTSS3_LENGTH                           0x1
#define _PRG4FTSS_RG4FTSS3_MASK                             0x8

// Register: PRG4INS
#define PRG4INS PRG4INS
extern volatile unsigned char           PRG4INS             __at(0x610);
#ifndef _LIB_BUILD
asm("PRG4INS equ 0610h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INS                    :8;
    };
    struct {
        unsigned INS0                   :1;
        unsigned INS1                   :1;
        unsigned INS2                   :1;
        unsigned INS3                   :1;
    };
    struct {
        unsigned RG4INS0                :1;
        unsigned RG4INS1                :1;
        unsigned RG4INS2                :1;
        unsigned RG4INS3                :1;
    };
} PRG4INSbits_t;
extern volatile PRG4INSbits_t PRG4INSbits __at(0x610);
// bitfield macros
#define _PRG4INS_INS_POSN                                   0x0
#define _PRG4INS_INS_POSITION                               0x0
#define _PRG4INS_INS_SIZE                                   0x8
#define _PRG4INS_INS_LENGTH                                 0x8
#define _PRG4INS_INS_MASK                                   0xFF
#define _PRG4INS_INS0_POSN                                  0x0
#define _PRG4INS_INS0_POSITION                              0x0
#define _PRG4INS_INS0_SIZE                                  0x1
#define _PRG4INS_INS0_LENGTH                                0x1
#define _PRG4INS_INS0_MASK                                  0x1
#define _PRG4INS_INS1_POSN                                  0x1
#define _PRG4INS_INS1_POSITION                              0x1
#define _PRG4INS_INS1_SIZE                                  0x1
#define _PRG4INS_INS1_LENGTH                                0x1
#define _PRG4INS_INS1_MASK                                  0x2
#define _PRG4INS_INS2_POSN                                  0x2
#define _PRG4INS_INS2_POSITION                              0x2
#define _PRG4INS_INS2_SIZE                                  0x1
#define _PRG4INS_INS2_LENGTH                                0x1
#define _PRG4INS_INS2_MASK                                  0x4
#define _PRG4INS_INS3_POSN                                  0x3
#define _PRG4INS_INS3_POSITION                              0x3
#define _PRG4INS_INS3_SIZE                                  0x1
#define _PRG4INS_INS3_LENGTH                                0x1
#define _PRG4INS_INS3_MASK                                  0x8
#define _PRG4INS_RG4INS0_POSN                               0x0
#define _PRG4INS_RG4INS0_POSITION                           0x0
#define _PRG4INS_RG4INS0_SIZE                               0x1
#define _PRG4INS_RG4INS0_LENGTH                             0x1
#define _PRG4INS_RG4INS0_MASK                               0x1
#define _PRG4INS_RG4INS1_POSN                               0x1
#define _PRG4INS_RG4INS1_POSITION                           0x1
#define _PRG4INS_RG4INS1_SIZE                               0x1
#define _PRG4INS_RG4INS1_LENGTH                             0x1
#define _PRG4INS_RG4INS1_MASK                               0x2
#define _PRG4INS_RG4INS2_POSN                               0x2
#define _PRG4INS_RG4INS2_POSITION                           0x2
#define _PRG4INS_RG4INS2_SIZE                               0x1
#define _PRG4INS_RG4INS2_LENGTH                             0x1
#define _PRG4INS_RG4INS2_MASK                               0x4
#define _PRG4INS_RG4INS3_POSN                               0x3
#define _PRG4INS_RG4INS3_POSITION                           0x3
#define _PRG4INS_RG4INS3_SIZE                               0x1
#define _PRG4INS_RG4INS3_LENGTH                             0x1
#define _PRG4INS_RG4INS3_MASK                               0x8

// Register: PRG4CON0
#define PRG4CON0 PRG4CON0
extern volatile unsigned char           PRG4CON0            __at(0x611);
#ifndef _LIB_BUILD
asm("PRG4CON0 equ 0611h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned GO                     :1;
        unsigned OS                     :1;
        unsigned MODE                   :2;
        unsigned REDG                   :1;
        unsigned FEDG                   :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
    };
    struct {
        unsigned RG4GO                  :1;
        unsigned RG4OS                  :1;
        unsigned RG4MODE                :2;
        unsigned RG4REDG                :1;
        unsigned RG4FEDG                :1;
        unsigned                        :1;
        unsigned RG4EN                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned RG4MODE0               :1;
        unsigned RG4MODE1               :1;
    };
} PRG4CON0bits_t;
extern volatile PRG4CON0bits_t PRG4CON0bits __at(0x611);
// bitfield macros
#define _PRG4CON0_GO_POSN                                   0x0
#define _PRG4CON0_GO_POSITION                               0x0
#define _PRG4CON0_GO_SIZE                                   0x1
#define _PRG4CON0_GO_LENGTH                                 0x1
#define _PRG4CON0_GO_MASK                                   0x1
#define _PRG4CON0_OS_POSN                                   0x1
#define _PRG4CON0_OS_POSITION                               0x1
#define _PRG4CON0_OS_SIZE                                   0x1
#define _PRG4CON0_OS_LENGTH                                 0x1
#define _PRG4CON0_OS_MASK                                   0x2
#define _PRG4CON0_MODE_POSN                                 0x2
#define _PRG4CON0_MODE_POSITION                             0x2
#define _PRG4CON0_MODE_SIZE                                 0x2
#define _PRG4CON0_MODE_LENGTH                               0x2
#define _PRG4CON0_MODE_MASK                                 0xC
#define _PRG4CON0_REDG_POSN                                 0x4
#define _PRG4CON0_REDG_POSITION                             0x4
#define _PRG4CON0_REDG_SIZE                                 0x1
#define _PRG4CON0_REDG_LENGTH                               0x1
#define _PRG4CON0_REDG_MASK                                 0x10
#define _PRG4CON0_FEDG_POSN                                 0x5
#define _PRG4CON0_FEDG_POSITION                             0x5
#define _PRG4CON0_FEDG_SIZE                                 0x1
#define _PRG4CON0_FEDG_LENGTH                               0x1
#define _PRG4CON0_FEDG_MASK                                 0x20
#define _PRG4CON0_EN_POSN                                   0x7
#define _PRG4CON0_EN_POSITION                               0x7
#define _PRG4CON0_EN_SIZE                                   0x1
#define _PRG4CON0_EN_LENGTH                                 0x1
#define _PRG4CON0_EN_MASK                                   0x80
#define _PRG4CON0_MODE0_POSN                                0x2
#define _PRG4CON0_MODE0_POSITION                            0x2
#define _PRG4CON0_MODE0_SIZE                                0x1
#define _PRG4CON0_MODE0_LENGTH                              0x1
#define _PRG4CON0_MODE0_MASK                                0x4
#define _PRG4CON0_MODE1_POSN                                0x3
#define _PRG4CON0_MODE1_POSITION                            0x3
#define _PRG4CON0_MODE1_SIZE                                0x1
#define _PRG4CON0_MODE1_LENGTH                              0x1
#define _PRG4CON0_MODE1_MASK                                0x8
#define _PRG4CON0_RG4GO_POSN                                0x0
#define _PRG4CON0_RG4GO_POSITION                            0x0
#define _PRG4CON0_RG4GO_SIZE                                0x1
#define _PRG4CON0_RG4GO_LENGTH                              0x1
#define _PRG4CON0_RG4GO_MASK                                0x1
#define _PRG4CON0_RG4OS_POSN                                0x1
#define _PRG4CON0_RG4OS_POSITION                            0x1
#define _PRG4CON0_RG4OS_SIZE                                0x1
#define _PRG4CON0_RG4OS_LENGTH                              0x1
#define _PRG4CON0_RG4OS_MASK                                0x2
#define _PRG4CON0_RG4MODE_POSN                              0x2
#define _PRG4CON0_RG4MODE_POSITION                          0x2
#define _PRG4CON0_RG4MODE_SIZE                              0x2
#define _PRG4CON0_RG4MODE_LENGTH                            0x2
#define _PRG4CON0_RG4MODE_MASK                              0xC
#define _PRG4CON0_RG4REDG_POSN                              0x4
#define _PRG4CON0_RG4REDG_POSITION                          0x4
#define _PRG4CON0_RG4REDG_SIZE                              0x1
#define _PRG4CON0_RG4REDG_LENGTH                            0x1
#define _PRG4CON0_RG4REDG_MASK                              0x10
#define _PRG4CON0_RG4FEDG_POSN                              0x5
#define _PRG4CON0_RG4FEDG_POSITION                          0x5
#define _PRG4CON0_RG4FEDG_SIZE                              0x1
#define _PRG4CON0_RG4FEDG_LENGTH                            0x1
#define _PRG4CON0_RG4FEDG_MASK                              0x20
#define _PRG4CON0_RG4EN_POSN                                0x7
#define _PRG4CON0_RG4EN_POSITION                            0x7
#define _PRG4CON0_RG4EN_SIZE                                0x1
#define _PRG4CON0_RG4EN_LENGTH                              0x1
#define _PRG4CON0_RG4EN_MASK                                0x80
#define _PRG4CON0_RG4MODE0_POSN                             0x2
#define _PRG4CON0_RG4MODE0_POSITION                         0x2
#define _PRG4CON0_RG4MODE0_SIZE                             0x1
#define _PRG4CON0_RG4MODE0_LENGTH                           0x1
#define _PRG4CON0_RG4MODE0_MASK                             0x4
#define _PRG4CON0_RG4MODE1_POSN                             0x3
#define _PRG4CON0_RG4MODE1_POSITION                         0x3
#define _PRG4CON0_RG4MODE1_SIZE                             0x1
#define _PRG4CON0_RG4MODE1_LENGTH                           0x1
#define _PRG4CON0_RG4MODE1_MASK                             0x8

// Register: PRG4CON1
#define PRG4CON1 PRG4CON1
extern volatile unsigned char           PRG4CON1            __at(0x612);
#ifndef _LIB_BUILD
asm("PRG4CON1 equ 0612h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RPOL                   :1;
        unsigned FPOL                   :1;
        unsigned RDY                    :1;
    };
    struct {
        unsigned RG4RPOL                :1;
        unsigned RG4FPOL                :1;
        unsigned RG4RDY                 :1;
    };
} PRG4CON1bits_t;
extern volatile PRG4CON1bits_t PRG4CON1bits __at(0x612);
// bitfield macros
#define _PRG4CON1_RPOL_POSN                                 0x0
#define _PRG4CON1_RPOL_POSITION                             0x0
#define _PRG4CON1_RPOL_SIZE                                 0x1
#define _PRG4CON1_RPOL_LENGTH                               0x1
#define _PRG4CON1_RPOL_MASK                                 0x1
#define _PRG4CON1_FPOL_POSN                                 0x1
#define _PRG4CON1_FPOL_POSITION                             0x1
#define _PRG4CON1_FPOL_SIZE                                 0x1
#define _PRG4CON1_FPOL_LENGTH                               0x1
#define _PRG4CON1_FPOL_MASK                                 0x2
#define _PRG4CON1_RDY_POSN                                  0x2
#define _PRG4CON1_RDY_POSITION                              0x2
#define _PRG4CON1_RDY_SIZE                                  0x1
#define _PRG4CON1_RDY_LENGTH                                0x1
#define _PRG4CON1_RDY_MASK                                  0x4
#define _PRG4CON1_RG4RPOL_POSN                              0x0
#define _PRG4CON1_RG4RPOL_POSITION                          0x0
#define _PRG4CON1_RG4RPOL_SIZE                              0x1
#define _PRG4CON1_RG4RPOL_LENGTH                            0x1
#define _PRG4CON1_RG4RPOL_MASK                              0x1
#define _PRG4CON1_RG4FPOL_POSN                              0x1
#define _PRG4CON1_RG4FPOL_POSITION                          0x1
#define _PRG4CON1_RG4FPOL_SIZE                              0x1
#define _PRG4CON1_RG4FPOL_LENGTH                            0x1
#define _PRG4CON1_RG4FPOL_MASK                              0x2
#define _PRG4CON1_RG4RDY_POSN                               0x2
#define _PRG4CON1_RG4RDY_POSITION                           0x2
#define _PRG4CON1_RG4RDY_SIZE                               0x1
#define _PRG4CON1_RG4RDY_LENGTH                             0x1
#define _PRG4CON1_RG4RDY_MASK                               0x4

// Register: PRG4CON2
#define PRG4CON2 PRG4CON2
extern volatile unsigned char           PRG4CON2            __at(0x613);
#ifndef _LIB_BUILD
asm("PRG4CON2 equ 0613h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ISET                   :5;
    };
    struct {
        unsigned ISET0                  :1;
        unsigned ISET1                  :1;
        unsigned ISET2                  :1;
        unsigned ISET3                  :1;
        unsigned ISET4                  :1;
    };
    struct {
        unsigned RG4ISET                :5;
    };
    struct {
        unsigned RG4ISET0               :1;
        unsigned RG4ISET1               :1;
        unsigned RG4ISET2               :1;
        unsigned RG4ISET3               :1;
        unsigned RG4ISET4               :1;
    };
} PRG4CON2bits_t;
extern volatile PRG4CON2bits_t PRG4CON2bits __at(0x613);
// bitfield macros
#define _PRG4CON2_ISET_POSN                                 0x0
#define _PRG4CON2_ISET_POSITION                             0x0
#define _PRG4CON2_ISET_SIZE                                 0x5
#define _PRG4CON2_ISET_LENGTH                               0x5
#define _PRG4CON2_ISET_MASK                                 0x1F
#define _PRG4CON2_ISET0_POSN                                0x0
#define _PRG4CON2_ISET0_POSITION                            0x0
#define _PRG4CON2_ISET0_SIZE                                0x1
#define _PRG4CON2_ISET0_LENGTH                              0x1
#define _PRG4CON2_ISET0_MASK                                0x1
#define _PRG4CON2_ISET1_POSN                                0x1
#define _PRG4CON2_ISET1_POSITION                            0x1
#define _PRG4CON2_ISET1_SIZE                                0x1
#define _PRG4CON2_ISET1_LENGTH                              0x1
#define _PRG4CON2_ISET1_MASK                                0x2
#define _PRG4CON2_ISET2_POSN                                0x2
#define _PRG4CON2_ISET2_POSITION                            0x2
#define _PRG4CON2_ISET2_SIZE                                0x1
#define _PRG4CON2_ISET2_LENGTH                              0x1
#define _PRG4CON2_ISET2_MASK                                0x4
#define _PRG4CON2_ISET3_POSN                                0x3
#define _PRG4CON2_ISET3_POSITION                            0x3
#define _PRG4CON2_ISET3_SIZE                                0x1
#define _PRG4CON2_ISET3_LENGTH                              0x1
#define _PRG4CON2_ISET3_MASK                                0x8
#define _PRG4CON2_ISET4_POSN                                0x4
#define _PRG4CON2_ISET4_POSITION                            0x4
#define _PRG4CON2_ISET4_SIZE                                0x1
#define _PRG4CON2_ISET4_LENGTH                              0x1
#define _PRG4CON2_ISET4_MASK                                0x10
#define _PRG4CON2_RG4ISET_POSN                              0x0
#define _PRG4CON2_RG4ISET_POSITION                          0x0
#define _PRG4CON2_RG4ISET_SIZE                              0x5
#define _PRG4CON2_RG4ISET_LENGTH                            0x5
#define _PRG4CON2_RG4ISET_MASK                              0x1F
#define _PRG4CON2_RG4ISET0_POSN                             0x0
#define _PRG4CON2_RG4ISET0_POSITION                         0x0
#define _PRG4CON2_RG4ISET0_SIZE                             0x1
#define _PRG4CON2_RG4ISET0_LENGTH                           0x1
#define _PRG4CON2_RG4ISET0_MASK                             0x1
#define _PRG4CON2_RG4ISET1_POSN                             0x1
#define _PRG4CON2_RG4ISET1_POSITION                         0x1
#define _PRG4CON2_RG4ISET1_SIZE                             0x1
#define _PRG4CON2_RG4ISET1_LENGTH                           0x1
#define _PRG4CON2_RG4ISET1_MASK                             0x2
#define _PRG4CON2_RG4ISET2_POSN                             0x2
#define _PRG4CON2_RG4ISET2_POSITION                         0x2
#define _PRG4CON2_RG4ISET2_SIZE                             0x1
#define _PRG4CON2_RG4ISET2_LENGTH                           0x1
#define _PRG4CON2_RG4ISET2_MASK                             0x4
#define _PRG4CON2_RG4ISET3_POSN                             0x3
#define _PRG4CON2_RG4ISET3_POSITION                         0x3
#define _PRG4CON2_RG4ISET3_SIZE                             0x1
#define _PRG4CON2_RG4ISET3_LENGTH                           0x1
#define _PRG4CON2_RG4ISET3_MASK                             0x8
#define _PRG4CON2_RG4ISET4_POSN                             0x4
#define _PRG4CON2_RG4ISET4_POSITION                         0x4
#define _PRG4CON2_RG4ISET4_SIZE                             0x1
#define _PRG4CON2_RG4ISET4_LENGTH                           0x1
#define _PRG4CON2_RG4ISET4_MASK                             0x10

// Register: PWM3DC
#define PWM3DC PWM3DC
extern volatile unsigned short          PWM3DC              __at(0x614);
#ifndef _LIB_BUILD
asm("PWM3DC equ 0614h");
#endif

// Register: PWM3DCL
#define PWM3DCL PWM3DCL
extern volatile unsigned char           PWM3DCL             __at(0x614);
#ifndef _LIB_BUILD
asm("PWM3DCL equ 0614h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :6;
        unsigned DC                     :2;
    };
    struct {
        unsigned                        :6;
        unsigned DC0                    :1;
        unsigned DC1                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned PWM3DC0                :1;
        unsigned PWM3DC1                :1;
    };
    struct {
        unsigned                        :6;
        unsigned PWMPW0                 :1;
        unsigned PWMPW1                 :1;
    };
} PWM3DCLbits_t;
extern volatile PWM3DCLbits_t PWM3DCLbits __at(0x614);
// bitfield macros
#define _PWM3DCL_DC_POSN                                    0x6
#define _PWM3DCL_DC_POSITION                                0x6
#define _PWM3DCL_DC_SIZE                                    0x2
#define _PWM3DCL_DC_LENGTH                                  0x2
#define _PWM3DCL_DC_MASK                                    0xC0
#define _PWM3DCL_DC0_POSN                                   0x6
#define _PWM3DCL_DC0_POSITION                               0x6
#define _PWM3DCL_DC0_SIZE                                   0x1
#define _PWM3DCL_DC0_LENGTH                                 0x1
#define _PWM3DCL_DC0_MASK                                   0x40
#define _PWM3DCL_DC1_POSN                                   0x7
#define _PWM3DCL_DC1_POSITION                               0x7
#define _PWM3DCL_DC1_SIZE                                   0x1
#define _PWM3DCL_DC1_LENGTH                                 0x1
#define _PWM3DCL_DC1_MASK                                   0x80
#define _PWM3DCL_PWM3DC0_POSN                               0x6
#define _PWM3DCL_PWM3DC0_POSITION                           0x6
#define _PWM3DCL_PWM3DC0_SIZE                               0x1
#define _PWM3DCL_PWM3DC0_LENGTH                             0x1
#define _PWM3DCL_PWM3DC0_MASK                               0x40
#define _PWM3DCL_PWM3DC1_POSN                               0x7
#define _PWM3DCL_PWM3DC1_POSITION                           0x7
#define _PWM3DCL_PWM3DC1_SIZE                               0x1
#define _PWM3DCL_PWM3DC1_LENGTH                             0x1
#define _PWM3DCL_PWM3DC1_MASK                               0x80
#define _PWM3DCL_PWMPW0_POSN                                0x6
#define _PWM3DCL_PWMPW0_POSITION                            0x6
#define _PWM3DCL_PWMPW0_SIZE                                0x1
#define _PWM3DCL_PWMPW0_LENGTH                              0x1
#define _PWM3DCL_PWMPW0_MASK                                0x40
#define _PWM3DCL_PWMPW1_POSN                                0x7
#define _PWM3DCL_PWMPW1_POSITION                            0x7
#define _PWM3DCL_PWMPW1_SIZE                                0x1
#define _PWM3DCL_PWMPW1_LENGTH                              0x1
#define _PWM3DCL_PWMPW1_MASK                                0x80

// Register: PWM3DCH
#define PWM3DCH PWM3DCH
extern volatile unsigned char           PWM3DCH             __at(0x615);
#ifndef _LIB_BUILD
asm("PWM3DCH equ 0615h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned DC2                    :1;
        unsigned DC3                    :1;
        unsigned DC4                    :1;
        unsigned DC5                    :1;
        unsigned DC6                    :1;
        unsigned DC7                    :1;
        unsigned DC8                    :1;
        unsigned DC9                    :1;
    };
    struct {
        unsigned PWM3DC2                :1;
        unsigned PWM3DC3                :1;
        unsigned PWM3DC4                :1;
        unsigned PWM3DC5                :1;
        unsigned PWM3DC6                :1;
        unsigned PWM3DC7                :1;
        unsigned PWM3DC8                :1;
        unsigned PWM3DC9                :1;
    };
    struct {
        unsigned PWMPW2                 :1;
        unsigned PWMPW3                 :1;
        unsigned PWMPW4                 :1;
        unsigned PWMPW5                 :1;
        unsigned PWMPW6                 :1;
        unsigned PWMPW7                 :1;
        unsigned PWMPW8                 :1;
        unsigned PWMPW9                 :1;
    };
} PWM3DCHbits_t;
extern volatile PWM3DCHbits_t PWM3DCHbits __at(0x615);
// bitfield macros
#define _PWM3DCH_DC_POSN                                    0x0
#define _PWM3DCH_DC_POSITION                                0x0
#define _PWM3DCH_DC_SIZE                                    0x8
#define _PWM3DCH_DC_LENGTH                                  0x8
#define _PWM3DCH_DC_MASK                                    0xFF
#define _PWM3DCH_DC2_POSN                                   0x0
#define _PWM3DCH_DC2_POSITION                               0x0
#define _PWM3DCH_DC2_SIZE                                   0x1
#define _PWM3DCH_DC2_LENGTH                                 0x1
#define _PWM3DCH_DC2_MASK                                   0x1
#define _PWM3DCH_DC3_POSN                                   0x1
#define _PWM3DCH_DC3_POSITION                               0x1
#define _PWM3DCH_DC3_SIZE                                   0x1
#define _PWM3DCH_DC3_LENGTH                                 0x1
#define _PWM3DCH_DC3_MASK                                   0x2
#define _PWM3DCH_DC4_POSN                                   0x2
#define _PWM3DCH_DC4_POSITION                               0x2
#define _PWM3DCH_DC4_SIZE                                   0x1
#define _PWM3DCH_DC4_LENGTH                                 0x1
#define _PWM3DCH_DC4_MASK                                   0x4
#define _PWM3DCH_DC5_POSN                                   0x3
#define _PWM3DCH_DC5_POSITION                               0x3
#define _PWM3DCH_DC5_SIZE                                   0x1
#define _PWM3DCH_DC5_LENGTH                                 0x1
#define _PWM3DCH_DC5_MASK                                   0x8
#define _PWM3DCH_DC6_POSN                                   0x4
#define _PWM3DCH_DC6_POSITION                               0x4
#define _PWM3DCH_DC6_SIZE                                   0x1
#define _PWM3DCH_DC6_LENGTH                                 0x1
#define _PWM3DCH_DC6_MASK                                   0x10
#define _PWM3DCH_DC7_POSN                                   0x5
#define _PWM3DCH_DC7_POSITION                               0x5
#define _PWM3DCH_DC7_SIZE                                   0x1
#define _PWM3DCH_DC7_LENGTH                                 0x1
#define _PWM3DCH_DC7_MASK                                   0x20
#define _PWM3DCH_DC8_POSN                                   0x6
#define _PWM3DCH_DC8_POSITION                               0x6
#define _PWM3DCH_DC8_SIZE                                   0x1
#define _PWM3DCH_DC8_LENGTH                                 0x1
#define _PWM3DCH_DC8_MASK                                   0x40
#define _PWM3DCH_DC9_POSN                                   0x7
#define _PWM3DCH_DC9_POSITION                               0x7
#define _PWM3DCH_DC9_SIZE                                   0x1
#define _PWM3DCH_DC9_LENGTH                                 0x1
#define _PWM3DCH_DC9_MASK                                   0x80
#define _PWM3DCH_PWM3DC2_POSN                               0x0
#define _PWM3DCH_PWM3DC2_POSITION                           0x0
#define _PWM3DCH_PWM3DC2_SIZE                               0x1
#define _PWM3DCH_PWM3DC2_LENGTH                             0x1
#define _PWM3DCH_PWM3DC2_MASK                               0x1
#define _PWM3DCH_PWM3DC3_POSN                               0x1
#define _PWM3DCH_PWM3DC3_POSITION                           0x1
#define _PWM3DCH_PWM3DC3_SIZE                               0x1
#define _PWM3DCH_PWM3DC3_LENGTH                             0x1
#define _PWM3DCH_PWM3DC3_MASK                               0x2
#define _PWM3DCH_PWM3DC4_POSN                               0x2
#define _PWM3DCH_PWM3DC4_POSITION                           0x2
#define _PWM3DCH_PWM3DC4_SIZE                               0x1
#define _PWM3DCH_PWM3DC4_LENGTH                             0x1
#define _PWM3DCH_PWM3DC4_MASK                               0x4
#define _PWM3DCH_PWM3DC5_POSN                               0x3
#define _PWM3DCH_PWM3DC5_POSITION                           0x3
#define _PWM3DCH_PWM3DC5_SIZE                               0x1
#define _PWM3DCH_PWM3DC5_LENGTH                             0x1
#define _PWM3DCH_PWM3DC5_MASK                               0x8
#define _PWM3DCH_PWM3DC6_POSN                               0x4
#define _PWM3DCH_PWM3DC6_POSITION                           0x4
#define _PWM3DCH_PWM3DC6_SIZE                               0x1
#define _PWM3DCH_PWM3DC6_LENGTH                             0x1
#define _PWM3DCH_PWM3DC6_MASK                               0x10
#define _PWM3DCH_PWM3DC7_POSN                               0x5
#define _PWM3DCH_PWM3DC7_POSITION                           0x5
#define _PWM3DCH_PWM3DC7_SIZE                               0x1
#define _PWM3DCH_PWM3DC7_LENGTH                             0x1
#define _PWM3DCH_PWM3DC7_MASK                               0x20
#define _PWM3DCH_PWM3DC8_POSN                               0x6
#define _PWM3DCH_PWM3DC8_POSITION                           0x6
#define _PWM3DCH_PWM3DC8_SIZE                               0x1
#define _PWM3DCH_PWM3DC8_LENGTH                             0x1
#define _PWM3DCH_PWM3DC8_MASK                               0x40
#define _PWM3DCH_PWM3DC9_POSN                               0x7
#define _PWM3DCH_PWM3DC9_POSITION                           0x7
#define _PWM3DCH_PWM3DC9_SIZE                               0x1
#define _PWM3DCH_PWM3DC9_LENGTH                             0x1
#define _PWM3DCH_PWM3DC9_MASK                               0x80
#define _PWM3DCH_PWMPW2_POSN                                0x0
#define _PWM3DCH_PWMPW2_POSITION                            0x0
#define _PWM3DCH_PWMPW2_SIZE                                0x1
#define _PWM3DCH_PWMPW2_LENGTH                              0x1
#define _PWM3DCH_PWMPW2_MASK                                0x1
#define _PWM3DCH_PWMPW3_POSN                                0x1
#define _PWM3DCH_PWMPW3_POSITION                            0x1
#define _PWM3DCH_PWMPW3_SIZE                                0x1
#define _PWM3DCH_PWMPW3_LENGTH                              0x1
#define _PWM3DCH_PWMPW3_MASK                                0x2
#define _PWM3DCH_PWMPW4_POSN                                0x2
#define _PWM3DCH_PWMPW4_POSITION                            0x2
#define _PWM3DCH_PWMPW4_SIZE                                0x1
#define _PWM3DCH_PWMPW4_LENGTH                              0x1
#define _PWM3DCH_PWMPW4_MASK                                0x4
#define _PWM3DCH_PWMPW5_POSN                                0x3
#define _PWM3DCH_PWMPW5_POSITION                            0x3
#define _PWM3DCH_PWMPW5_SIZE                                0x1
#define _PWM3DCH_PWMPW5_LENGTH                              0x1
#define _PWM3DCH_PWMPW5_MASK                                0x8
#define _PWM3DCH_PWMPW6_POSN                                0x4
#define _PWM3DCH_PWMPW6_POSITION                            0x4
#define _PWM3DCH_PWMPW6_SIZE                                0x1
#define _PWM3DCH_PWMPW6_LENGTH                              0x1
#define _PWM3DCH_PWMPW6_MASK                                0x10
#define _PWM3DCH_PWMPW7_POSN                                0x5
#define _PWM3DCH_PWMPW7_POSITION                            0x5
#define _PWM3DCH_PWMPW7_SIZE                                0x1
#define _PWM3DCH_PWMPW7_LENGTH                              0x1
#define _PWM3DCH_PWMPW7_MASK                                0x20
#define _PWM3DCH_PWMPW8_POSN                                0x6
#define _PWM3DCH_PWMPW8_POSITION                            0x6
#define _PWM3DCH_PWMPW8_SIZE                                0x1
#define _PWM3DCH_PWMPW8_LENGTH                              0x1
#define _PWM3DCH_PWMPW8_MASK                                0x40
#define _PWM3DCH_PWMPW9_POSN                                0x7
#define _PWM3DCH_PWMPW9_POSITION                            0x7
#define _PWM3DCH_PWMPW9_SIZE                                0x1
#define _PWM3DCH_PWMPW9_LENGTH                              0x1
#define _PWM3DCH_PWMPW9_MASK                                0x80

// Register: PWM3CON
#define PWM3CON PWM3CON
extern volatile unsigned char           PWM3CON             __at(0x616);
#ifndef _LIB_BUILD
asm("PWM3CON equ 0616h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :4;
        unsigned POL                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :4;
        unsigned PWM3POL                :1;
        unsigned PWM3OUT                :1;
        unsigned                        :1;
        unsigned PWM3EN                 :1;
    };
} PWM3CONbits_t;
extern volatile PWM3CONbits_t PWM3CONbits __at(0x616);
// bitfield macros
#define _PWM3CON_POL_POSN                                   0x4
#define _PWM3CON_POL_POSITION                               0x4
#define _PWM3CON_POL_SIZE                                   0x1
#define _PWM3CON_POL_LENGTH                                 0x1
#define _PWM3CON_POL_MASK                                   0x10
#define _PWM3CON_OUT_POSN                                   0x5
#define _PWM3CON_OUT_POSITION                               0x5
#define _PWM3CON_OUT_SIZE                                   0x1
#define _PWM3CON_OUT_LENGTH                                 0x1
#define _PWM3CON_OUT_MASK                                   0x20
#define _PWM3CON_EN_POSN                                    0x7
#define _PWM3CON_EN_POSITION                                0x7
#define _PWM3CON_EN_SIZE                                    0x1
#define _PWM3CON_EN_LENGTH                                  0x1
#define _PWM3CON_EN_MASK                                    0x80
#define _PWM3CON_PWM3POL_POSN                               0x4
#define _PWM3CON_PWM3POL_POSITION                           0x4
#define _PWM3CON_PWM3POL_SIZE                               0x1
#define _PWM3CON_PWM3POL_LENGTH                             0x1
#define _PWM3CON_PWM3POL_MASK                               0x10
#define _PWM3CON_PWM3OUT_POSN                               0x5
#define _PWM3CON_PWM3OUT_POSITION                           0x5
#define _PWM3CON_PWM3OUT_SIZE                               0x1
#define _PWM3CON_PWM3OUT_LENGTH                             0x1
#define _PWM3CON_PWM3OUT_MASK                               0x20
#define _PWM3CON_PWM3EN_POSN                                0x7
#define _PWM3CON_PWM3EN_POSITION                            0x7
#define _PWM3CON_PWM3EN_SIZE                                0x1
#define _PWM3CON_PWM3EN_LENGTH                              0x1
#define _PWM3CON_PWM3EN_MASK                                0x80

// Register: PWM4DC
#define PWM4DC PWM4DC
extern volatile unsigned short          PWM4DC              __at(0x617);
#ifndef _LIB_BUILD
asm("PWM4DC equ 0617h");
#endif

// Register: PWM4DCL
#define PWM4DCL PWM4DCL
extern volatile unsigned char           PWM4DCL             __at(0x617);
#ifndef _LIB_BUILD
asm("PWM4DCL equ 0617h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :6;
        unsigned DC                     :2;
    };
    struct {
        unsigned                        :6;
        unsigned DC0                    :1;
        unsigned DC1                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned PWM4DC0                :1;
        unsigned PWM4DC1                :1;
    };
    struct {
        unsigned                        :6;
        unsigned PWMPW0                 :1;
        unsigned PWMPW1                 :1;
    };
} PWM4DCLbits_t;
extern volatile PWM4DCLbits_t PWM4DCLbits __at(0x617);
// bitfield macros
#define _PWM4DCL_DC_POSN                                    0x6
#define _PWM4DCL_DC_POSITION                                0x6
#define _PWM4DCL_DC_SIZE                                    0x2
#define _PWM4DCL_DC_LENGTH                                  0x2
#define _PWM4DCL_DC_MASK                                    0xC0
#define _PWM4DCL_DC0_POSN                                   0x6
#define _PWM4DCL_DC0_POSITION                               0x6
#define _PWM4DCL_DC0_SIZE                                   0x1
#define _PWM4DCL_DC0_LENGTH                                 0x1
#define _PWM4DCL_DC0_MASK                                   0x40
#define _PWM4DCL_DC1_POSN                                   0x7
#define _PWM4DCL_DC1_POSITION                               0x7
#define _PWM4DCL_DC1_SIZE                                   0x1
#define _PWM4DCL_DC1_LENGTH                                 0x1
#define _PWM4DCL_DC1_MASK                                   0x80
#define _PWM4DCL_PWM4DC0_POSN                               0x6
#define _PWM4DCL_PWM4DC0_POSITION                           0x6
#define _PWM4DCL_PWM4DC0_SIZE                               0x1
#define _PWM4DCL_PWM4DC0_LENGTH                             0x1
#define _PWM4DCL_PWM4DC0_MASK                               0x40
#define _PWM4DCL_PWM4DC1_POSN                               0x7
#define _PWM4DCL_PWM4DC1_POSITION                           0x7
#define _PWM4DCL_PWM4DC1_SIZE                               0x1
#define _PWM4DCL_PWM4DC1_LENGTH                             0x1
#define _PWM4DCL_PWM4DC1_MASK                               0x80
#define _PWM4DCL_PWMPW0_POSN                                0x6
#define _PWM4DCL_PWMPW0_POSITION                            0x6
#define _PWM4DCL_PWMPW0_SIZE                                0x1
#define _PWM4DCL_PWMPW0_LENGTH                              0x1
#define _PWM4DCL_PWMPW0_MASK                                0x40
#define _PWM4DCL_PWMPW1_POSN                                0x7
#define _PWM4DCL_PWMPW1_POSITION                            0x7
#define _PWM4DCL_PWMPW1_SIZE                                0x1
#define _PWM4DCL_PWMPW1_LENGTH                              0x1
#define _PWM4DCL_PWMPW1_MASK                                0x80

// Register: PWM4DCH
#define PWM4DCH PWM4DCH
extern volatile unsigned char           PWM4DCH             __at(0x618);
#ifndef _LIB_BUILD
asm("PWM4DCH equ 0618h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned DC2                    :1;
        unsigned DC3                    :1;
        unsigned DC4                    :1;
        unsigned DC5                    :1;
        unsigned DC6                    :1;
        unsigned DC7                    :1;
        unsigned DC8                    :1;
        unsigned DC9                    :1;
    };
    struct {
        unsigned PWM4DC2                :1;
        unsigned PWM4DC3                :1;
        unsigned PWM4DC4                :1;
        unsigned PWM4DC5                :1;
        unsigned PWM4DC6                :1;
        unsigned PWM4DC7                :1;
        unsigned PWM4DC8                :1;
        unsigned PWM4DC9                :1;
    };
    struct {
        unsigned PWMPW2                 :1;
        unsigned PWMPW3                 :1;
        unsigned PWMPW4                 :1;
        unsigned PWMPW5                 :1;
        unsigned PWMPW6                 :1;
        unsigned PWMPW7                 :1;
        unsigned PWMPW8                 :1;
        unsigned PWMPW9                 :1;
    };
} PWM4DCHbits_t;
extern volatile PWM4DCHbits_t PWM4DCHbits __at(0x618);
// bitfield macros
#define _PWM4DCH_DC_POSN                                    0x0
#define _PWM4DCH_DC_POSITION                                0x0
#define _PWM4DCH_DC_SIZE                                    0x8
#define _PWM4DCH_DC_LENGTH                                  0x8
#define _PWM4DCH_DC_MASK                                    0xFF
#define _PWM4DCH_DC2_POSN                                   0x0
#define _PWM4DCH_DC2_POSITION                               0x0
#define _PWM4DCH_DC2_SIZE                                   0x1
#define _PWM4DCH_DC2_LENGTH                                 0x1
#define _PWM4DCH_DC2_MASK                                   0x1
#define _PWM4DCH_DC3_POSN                                   0x1
#define _PWM4DCH_DC3_POSITION                               0x1
#define _PWM4DCH_DC3_SIZE                                   0x1
#define _PWM4DCH_DC3_LENGTH                                 0x1
#define _PWM4DCH_DC3_MASK                                   0x2
#define _PWM4DCH_DC4_POSN                                   0x2
#define _PWM4DCH_DC4_POSITION                               0x2
#define _PWM4DCH_DC4_SIZE                                   0x1
#define _PWM4DCH_DC4_LENGTH                                 0x1
#define _PWM4DCH_DC4_MASK                                   0x4
#define _PWM4DCH_DC5_POSN                                   0x3
#define _PWM4DCH_DC5_POSITION                               0x3
#define _PWM4DCH_DC5_SIZE                                   0x1
#define _PWM4DCH_DC5_LENGTH                                 0x1
#define _PWM4DCH_DC5_MASK                                   0x8
#define _PWM4DCH_DC6_POSN                                   0x4
#define _PWM4DCH_DC6_POSITION                               0x4
#define _PWM4DCH_DC6_SIZE                                   0x1
#define _PWM4DCH_DC6_LENGTH                                 0x1
#define _PWM4DCH_DC6_MASK                                   0x10
#define _PWM4DCH_DC7_POSN                                   0x5
#define _PWM4DCH_DC7_POSITION                               0x5
#define _PWM4DCH_DC7_SIZE                                   0x1
#define _PWM4DCH_DC7_LENGTH                                 0x1
#define _PWM4DCH_DC7_MASK                                   0x20
#define _PWM4DCH_DC8_POSN                                   0x6
#define _PWM4DCH_DC8_POSITION                               0x6
#define _PWM4DCH_DC8_SIZE                                   0x1
#define _PWM4DCH_DC8_LENGTH                                 0x1
#define _PWM4DCH_DC8_MASK                                   0x40
#define _PWM4DCH_DC9_POSN                                   0x7
#define _PWM4DCH_DC9_POSITION                               0x7
#define _PWM4DCH_DC9_SIZE                                   0x1
#define _PWM4DCH_DC9_LENGTH                                 0x1
#define _PWM4DCH_DC9_MASK                                   0x80
#define _PWM4DCH_PWM4DC2_POSN                               0x0
#define _PWM4DCH_PWM4DC2_POSITION                           0x0
#define _PWM4DCH_PWM4DC2_SIZE                               0x1
#define _PWM4DCH_PWM4DC2_LENGTH                             0x1
#define _PWM4DCH_PWM4DC2_MASK                               0x1
#define _PWM4DCH_PWM4DC3_POSN                               0x1
#define _PWM4DCH_PWM4DC3_POSITION                           0x1
#define _PWM4DCH_PWM4DC3_SIZE                               0x1
#define _PWM4DCH_PWM4DC3_LENGTH                             0x1
#define _PWM4DCH_PWM4DC3_MASK                               0x2
#define _PWM4DCH_PWM4DC4_POSN                               0x2
#define _PWM4DCH_PWM4DC4_POSITION                           0x2
#define _PWM4DCH_PWM4DC4_SIZE                               0x1
#define _PWM4DCH_PWM4DC4_LENGTH                             0x1
#define _PWM4DCH_PWM4DC4_MASK                               0x4
#define _PWM4DCH_PWM4DC5_POSN                               0x3
#define _PWM4DCH_PWM4DC5_POSITION                           0x3
#define _PWM4DCH_PWM4DC5_SIZE                               0x1
#define _PWM4DCH_PWM4DC5_LENGTH                             0x1
#define _PWM4DCH_PWM4DC5_MASK                               0x8
#define _PWM4DCH_PWM4DC6_POSN                               0x4
#define _PWM4DCH_PWM4DC6_POSITION                           0x4
#define _PWM4DCH_PWM4DC6_SIZE                               0x1
#define _PWM4DCH_PWM4DC6_LENGTH                             0x1
#define _PWM4DCH_PWM4DC6_MASK                               0x10
#define _PWM4DCH_PWM4DC7_POSN                               0x5
#define _PWM4DCH_PWM4DC7_POSITION                           0x5
#define _PWM4DCH_PWM4DC7_SIZE                               0x1
#define _PWM4DCH_PWM4DC7_LENGTH                             0x1
#define _PWM4DCH_PWM4DC7_MASK                               0x20
#define _PWM4DCH_PWM4DC8_POSN                               0x6
#define _PWM4DCH_PWM4DC8_POSITION                           0x6
#define _PWM4DCH_PWM4DC8_SIZE                               0x1
#define _PWM4DCH_PWM4DC8_LENGTH                             0x1
#define _PWM4DCH_PWM4DC8_MASK                               0x40
#define _PWM4DCH_PWM4DC9_POSN                               0x7
#define _PWM4DCH_PWM4DC9_POSITION                           0x7
#define _PWM4DCH_PWM4DC9_SIZE                               0x1
#define _PWM4DCH_PWM4DC9_LENGTH                             0x1
#define _PWM4DCH_PWM4DC9_MASK                               0x80
#define _PWM4DCH_PWMPW2_POSN                                0x0
#define _PWM4DCH_PWMPW2_POSITION                            0x0
#define _PWM4DCH_PWMPW2_SIZE                                0x1
#define _PWM4DCH_PWMPW2_LENGTH                              0x1
#define _PWM4DCH_PWMPW2_MASK                                0x1
#define _PWM4DCH_PWMPW3_POSN                                0x1
#define _PWM4DCH_PWMPW3_POSITION                            0x1
#define _PWM4DCH_PWMPW3_SIZE                                0x1
#define _PWM4DCH_PWMPW3_LENGTH                              0x1
#define _PWM4DCH_PWMPW3_MASK                                0x2
#define _PWM4DCH_PWMPW4_POSN                                0x2
#define _PWM4DCH_PWMPW4_POSITION                            0x2
#define _PWM4DCH_PWMPW4_SIZE                                0x1
#define _PWM4DCH_PWMPW4_LENGTH                              0x1
#define _PWM4DCH_PWMPW4_MASK                                0x4
#define _PWM4DCH_PWMPW5_POSN                                0x3
#define _PWM4DCH_PWMPW5_POSITION                            0x3
#define _PWM4DCH_PWMPW5_SIZE                                0x1
#define _PWM4DCH_PWMPW5_LENGTH                              0x1
#define _PWM4DCH_PWMPW5_MASK                                0x8
#define _PWM4DCH_PWMPW6_POSN                                0x4
#define _PWM4DCH_PWMPW6_POSITION                            0x4
#define _PWM4DCH_PWMPW6_SIZE                                0x1
#define _PWM4DCH_PWMPW6_LENGTH                              0x1
#define _PWM4DCH_PWMPW6_MASK                                0x10
#define _PWM4DCH_PWMPW7_POSN                                0x5
#define _PWM4DCH_PWMPW7_POSITION                            0x5
#define _PWM4DCH_PWMPW7_SIZE                                0x1
#define _PWM4DCH_PWMPW7_LENGTH                              0x1
#define _PWM4DCH_PWMPW7_MASK                                0x20
#define _PWM4DCH_PWMPW8_POSN                                0x6
#define _PWM4DCH_PWMPW8_POSITION                            0x6
#define _PWM4DCH_PWMPW8_SIZE                                0x1
#define _PWM4DCH_PWMPW8_LENGTH                              0x1
#define _PWM4DCH_PWMPW8_MASK                                0x40
#define _PWM4DCH_PWMPW9_POSN                                0x7
#define _PWM4DCH_PWMPW9_POSITION                            0x7
#define _PWM4DCH_PWMPW9_SIZE                                0x1
#define _PWM4DCH_PWMPW9_LENGTH                              0x1
#define _PWM4DCH_PWMPW9_MASK                                0x80

// Register: PWM4CON
#define PWM4CON PWM4CON
extern volatile unsigned char           PWM4CON             __at(0x619);
#ifndef _LIB_BUILD
asm("PWM4CON equ 0619h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :4;
        unsigned POL                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :4;
        unsigned PWM4POL                :1;
        unsigned PWM4OUT                :1;
        unsigned                        :1;
        unsigned PWM4EN                 :1;
    };
} PWM4CONbits_t;
extern volatile PWM4CONbits_t PWM4CONbits __at(0x619);
// bitfield macros
#define _PWM4CON_POL_POSN                                   0x4
#define _PWM4CON_POL_POSITION                               0x4
#define _PWM4CON_POL_SIZE                                   0x1
#define _PWM4CON_POL_LENGTH                                 0x1
#define _PWM4CON_POL_MASK                                   0x10
#define _PWM4CON_OUT_POSN                                   0x5
#define _PWM4CON_OUT_POSITION                               0x5
#define _PWM4CON_OUT_SIZE                                   0x1
#define _PWM4CON_OUT_LENGTH                                 0x1
#define _PWM4CON_OUT_MASK                                   0x20
#define _PWM4CON_EN_POSN                                    0x7
#define _PWM4CON_EN_POSITION                                0x7
#define _PWM4CON_EN_SIZE                                    0x1
#define _PWM4CON_EN_LENGTH                                  0x1
#define _PWM4CON_EN_MASK                                    0x80
#define _PWM4CON_PWM4POL_POSN                               0x4
#define _PWM4CON_PWM4POL_POSITION                           0x4
#define _PWM4CON_PWM4POL_SIZE                               0x1
#define _PWM4CON_PWM4POL_LENGTH                             0x1
#define _PWM4CON_PWM4POL_MASK                               0x10
#define _PWM4CON_PWM4OUT_POSN                               0x5
#define _PWM4CON_PWM4OUT_POSITION                           0x5
#define _PWM4CON_PWM4OUT_SIZE                               0x1
#define _PWM4CON_PWM4OUT_LENGTH                             0x1
#define _PWM4CON_PWM4OUT_MASK                               0x20
#define _PWM4CON_PWM4EN_POSN                                0x7
#define _PWM4CON_PWM4EN_POSITION                            0x7
#define _PWM4CON_PWM4EN_SIZE                                0x1
#define _PWM4CON_PWM4EN_LENGTH                              0x1
#define _PWM4CON_PWM4EN_MASK                                0x80

// Register: PWM9DC
#define PWM9DC PWM9DC
extern volatile unsigned short          PWM9DC              __at(0x61A);
#ifndef _LIB_BUILD
asm("PWM9DC equ 061Ah");
#endif

// Register: PWM9DCL
#define PWM9DCL PWM9DCL
extern volatile unsigned char           PWM9DCL             __at(0x61A);
#ifndef _LIB_BUILD
asm("PWM9DCL equ 061Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :6;
        unsigned DC                     :2;
    };
    struct {
        unsigned                        :6;
        unsigned DC0                    :1;
        unsigned DC1                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned PWM9DC0                :1;
        unsigned PWM9DC1                :1;
    };
    struct {
        unsigned                        :6;
        unsigned PWMPW0                 :1;
        unsigned PWMPW1                 :1;
    };
} PWM9DCLbits_t;
extern volatile PWM9DCLbits_t PWM9DCLbits __at(0x61A);
// bitfield macros
#define _PWM9DCL_DC_POSN                                    0x6
#define _PWM9DCL_DC_POSITION                                0x6
#define _PWM9DCL_DC_SIZE                                    0x2
#define _PWM9DCL_DC_LENGTH                                  0x2
#define _PWM9DCL_DC_MASK                                    0xC0
#define _PWM9DCL_DC0_POSN                                   0x6
#define _PWM9DCL_DC0_POSITION                               0x6
#define _PWM9DCL_DC0_SIZE                                   0x1
#define _PWM9DCL_DC0_LENGTH                                 0x1
#define _PWM9DCL_DC0_MASK                                   0x40
#define _PWM9DCL_DC1_POSN                                   0x7
#define _PWM9DCL_DC1_POSITION                               0x7
#define _PWM9DCL_DC1_SIZE                                   0x1
#define _PWM9DCL_DC1_LENGTH                                 0x1
#define _PWM9DCL_DC1_MASK                                   0x80
#define _PWM9DCL_PWM9DC0_POSN                               0x6
#define _PWM9DCL_PWM9DC0_POSITION                           0x6
#define _PWM9DCL_PWM9DC0_SIZE                               0x1
#define _PWM9DCL_PWM9DC0_LENGTH                             0x1
#define _PWM9DCL_PWM9DC0_MASK                               0x40
#define _PWM9DCL_PWM9DC1_POSN                               0x7
#define _PWM9DCL_PWM9DC1_POSITION                           0x7
#define _PWM9DCL_PWM9DC1_SIZE                               0x1
#define _PWM9DCL_PWM9DC1_LENGTH                             0x1
#define _PWM9DCL_PWM9DC1_MASK                               0x80
#define _PWM9DCL_PWMPW0_POSN                                0x6
#define _PWM9DCL_PWMPW0_POSITION                            0x6
#define _PWM9DCL_PWMPW0_SIZE                                0x1
#define _PWM9DCL_PWMPW0_LENGTH                              0x1
#define _PWM9DCL_PWMPW0_MASK                                0x40
#define _PWM9DCL_PWMPW1_POSN                                0x7
#define _PWM9DCL_PWMPW1_POSITION                            0x7
#define _PWM9DCL_PWMPW1_SIZE                                0x1
#define _PWM9DCL_PWMPW1_LENGTH                              0x1
#define _PWM9DCL_PWMPW1_MASK                                0x80

// Register: PWM9DCH
#define PWM9DCH PWM9DCH
extern volatile unsigned char           PWM9DCH             __at(0x61B);
#ifndef _LIB_BUILD
asm("PWM9DCH equ 061Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned DC2                    :1;
        unsigned DC3                    :1;
        unsigned DC4                    :1;
        unsigned DC5                    :1;
        unsigned DC6                    :1;
        unsigned DC7                    :1;
        unsigned DC8                    :1;
        unsigned DC9                    :1;
    };
    struct {
        unsigned PWM9DC2                :1;
        unsigned PWM9DC3                :1;
        unsigned PWM9DC4                :1;
        unsigned PWM9DC5                :1;
        unsigned PWM9DC6                :1;
        unsigned PWM9DC7                :1;
        unsigned PWM9DC8                :1;
        unsigned PWM9DC9                :1;
    };
    struct {
        unsigned PWMPW2                 :1;
        unsigned PWMPW3                 :1;
        unsigned PWMPW4                 :1;
        unsigned PWMPW5                 :1;
        unsigned PWMPW6                 :1;
        unsigned PWMPW7                 :1;
        unsigned PWMPW8                 :1;
        unsigned PWMPW9                 :1;
    };
} PWM9DCHbits_t;
extern volatile PWM9DCHbits_t PWM9DCHbits __at(0x61B);
// bitfield macros
#define _PWM9DCH_DC_POSN                                    0x0
#define _PWM9DCH_DC_POSITION                                0x0
#define _PWM9DCH_DC_SIZE                                    0x8
#define _PWM9DCH_DC_LENGTH                                  0x8
#define _PWM9DCH_DC_MASK                                    0xFF
#define _PWM9DCH_DC2_POSN                                   0x0
#define _PWM9DCH_DC2_POSITION                               0x0
#define _PWM9DCH_DC2_SIZE                                   0x1
#define _PWM9DCH_DC2_LENGTH                                 0x1
#define _PWM9DCH_DC2_MASK                                   0x1
#define _PWM9DCH_DC3_POSN                                   0x1
#define _PWM9DCH_DC3_POSITION                               0x1
#define _PWM9DCH_DC3_SIZE                                   0x1
#define _PWM9DCH_DC3_LENGTH                                 0x1
#define _PWM9DCH_DC3_MASK                                   0x2
#define _PWM9DCH_DC4_POSN                                   0x2
#define _PWM9DCH_DC4_POSITION                               0x2
#define _PWM9DCH_DC4_SIZE                                   0x1
#define _PWM9DCH_DC4_LENGTH                                 0x1
#define _PWM9DCH_DC4_MASK                                   0x4
#define _PWM9DCH_DC5_POSN                                   0x3
#define _PWM9DCH_DC5_POSITION                               0x3
#define _PWM9DCH_DC5_SIZE                                   0x1
#define _PWM9DCH_DC5_LENGTH                                 0x1
#define _PWM9DCH_DC5_MASK                                   0x8
#define _PWM9DCH_DC6_POSN                                   0x4
#define _PWM9DCH_DC6_POSITION                               0x4
#define _PWM9DCH_DC6_SIZE                                   0x1
#define _PWM9DCH_DC6_LENGTH                                 0x1
#define _PWM9DCH_DC6_MASK                                   0x10
#define _PWM9DCH_DC7_POSN                                   0x5
#define _PWM9DCH_DC7_POSITION                               0x5
#define _PWM9DCH_DC7_SIZE                                   0x1
#define _PWM9DCH_DC7_LENGTH                                 0x1
#define _PWM9DCH_DC7_MASK                                   0x20
#define _PWM9DCH_DC8_POSN                                   0x6
#define _PWM9DCH_DC8_POSITION                               0x6
#define _PWM9DCH_DC8_SIZE                                   0x1
#define _PWM9DCH_DC8_LENGTH                                 0x1
#define _PWM9DCH_DC8_MASK                                   0x40
#define _PWM9DCH_DC9_POSN                                   0x7
#define _PWM9DCH_DC9_POSITION                               0x7
#define _PWM9DCH_DC9_SIZE                                   0x1
#define _PWM9DCH_DC9_LENGTH                                 0x1
#define _PWM9DCH_DC9_MASK                                   0x80
#define _PWM9DCH_PWM9DC2_POSN                               0x0
#define _PWM9DCH_PWM9DC2_POSITION                           0x0
#define _PWM9DCH_PWM9DC2_SIZE                               0x1
#define _PWM9DCH_PWM9DC2_LENGTH                             0x1
#define _PWM9DCH_PWM9DC2_MASK                               0x1
#define _PWM9DCH_PWM9DC3_POSN                               0x1
#define _PWM9DCH_PWM9DC3_POSITION                           0x1
#define _PWM9DCH_PWM9DC3_SIZE                               0x1
#define _PWM9DCH_PWM9DC3_LENGTH                             0x1
#define _PWM9DCH_PWM9DC3_MASK                               0x2
#define _PWM9DCH_PWM9DC4_POSN                               0x2
#define _PWM9DCH_PWM9DC4_POSITION                           0x2
#define _PWM9DCH_PWM9DC4_SIZE                               0x1
#define _PWM9DCH_PWM9DC4_LENGTH                             0x1
#define _PWM9DCH_PWM9DC4_MASK                               0x4
#define _PWM9DCH_PWM9DC5_POSN                               0x3
#define _PWM9DCH_PWM9DC5_POSITION                           0x3
#define _PWM9DCH_PWM9DC5_SIZE                               0x1
#define _PWM9DCH_PWM9DC5_LENGTH                             0x1
#define _PWM9DCH_PWM9DC5_MASK                               0x8
#define _PWM9DCH_PWM9DC6_POSN                               0x4
#define _PWM9DCH_PWM9DC6_POSITION                           0x4
#define _PWM9DCH_PWM9DC6_SIZE                               0x1
#define _PWM9DCH_PWM9DC6_LENGTH                             0x1
#define _PWM9DCH_PWM9DC6_MASK                               0x10
#define _PWM9DCH_PWM9DC7_POSN                               0x5
#define _PWM9DCH_PWM9DC7_POSITION                           0x5
#define _PWM9DCH_PWM9DC7_SIZE                               0x1
#define _PWM9DCH_PWM9DC7_LENGTH                             0x1
#define _PWM9DCH_PWM9DC7_MASK                               0x20
#define _PWM9DCH_PWM9DC8_POSN                               0x6
#define _PWM9DCH_PWM9DC8_POSITION                           0x6
#define _PWM9DCH_PWM9DC8_SIZE                               0x1
#define _PWM9DCH_PWM9DC8_LENGTH                             0x1
#define _PWM9DCH_PWM9DC8_MASK                               0x40
#define _PWM9DCH_PWM9DC9_POSN                               0x7
#define _PWM9DCH_PWM9DC9_POSITION                           0x7
#define _PWM9DCH_PWM9DC9_SIZE                               0x1
#define _PWM9DCH_PWM9DC9_LENGTH                             0x1
#define _PWM9DCH_PWM9DC9_MASK                               0x80
#define _PWM9DCH_PWMPW2_POSN                                0x0
#define _PWM9DCH_PWMPW2_POSITION                            0x0
#define _PWM9DCH_PWMPW2_SIZE                                0x1
#define _PWM9DCH_PWMPW2_LENGTH                              0x1
#define _PWM9DCH_PWMPW2_MASK                                0x1
#define _PWM9DCH_PWMPW3_POSN                                0x1
#define _PWM9DCH_PWMPW3_POSITION                            0x1
#define _PWM9DCH_PWMPW3_SIZE                                0x1
#define _PWM9DCH_PWMPW3_LENGTH                              0x1
#define _PWM9DCH_PWMPW3_MASK                                0x2
#define _PWM9DCH_PWMPW4_POSN                                0x2
#define _PWM9DCH_PWMPW4_POSITION                            0x2
#define _PWM9DCH_PWMPW4_SIZE                                0x1
#define _PWM9DCH_PWMPW4_LENGTH                              0x1
#define _PWM9DCH_PWMPW4_MASK                                0x4
#define _PWM9DCH_PWMPW5_POSN                                0x3
#define _PWM9DCH_PWMPW5_POSITION                            0x3
#define _PWM9DCH_PWMPW5_SIZE                                0x1
#define _PWM9DCH_PWMPW5_LENGTH                              0x1
#define _PWM9DCH_PWMPW5_MASK                                0x8
#define _PWM9DCH_PWMPW6_POSN                                0x4
#define _PWM9DCH_PWMPW6_POSITION                            0x4
#define _PWM9DCH_PWMPW6_SIZE                                0x1
#define _PWM9DCH_PWMPW6_LENGTH                              0x1
#define _PWM9DCH_PWMPW6_MASK                                0x10
#define _PWM9DCH_PWMPW7_POSN                                0x5
#define _PWM9DCH_PWMPW7_POSITION                            0x5
#define _PWM9DCH_PWMPW7_SIZE                                0x1
#define _PWM9DCH_PWMPW7_LENGTH                              0x1
#define _PWM9DCH_PWMPW7_MASK                                0x20
#define _PWM9DCH_PWMPW8_POSN                                0x6
#define _PWM9DCH_PWMPW8_POSITION                            0x6
#define _PWM9DCH_PWMPW8_SIZE                                0x1
#define _PWM9DCH_PWMPW8_LENGTH                              0x1
#define _PWM9DCH_PWMPW8_MASK                                0x40
#define _PWM9DCH_PWMPW9_POSN                                0x7
#define _PWM9DCH_PWMPW9_POSITION                            0x7
#define _PWM9DCH_PWMPW9_SIZE                                0x1
#define _PWM9DCH_PWMPW9_LENGTH                              0x1
#define _PWM9DCH_PWMPW9_MASK                                0x80

// Register: PWM9CON
#define PWM9CON PWM9CON
extern volatile unsigned char           PWM9CON             __at(0x61C);
#ifndef _LIB_BUILD
asm("PWM9CON equ 061Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :4;
        unsigned POL                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :4;
        unsigned PWM9POL                :1;
        unsigned PWM9OUT                :1;
        unsigned                        :1;
        unsigned PWM9EN                 :1;
    };
} PWM9CONbits_t;
extern volatile PWM9CONbits_t PWM9CONbits __at(0x61C);
// bitfield macros
#define _PWM9CON_POL_POSN                                   0x4
#define _PWM9CON_POL_POSITION                               0x4
#define _PWM9CON_POL_SIZE                                   0x1
#define _PWM9CON_POL_LENGTH                                 0x1
#define _PWM9CON_POL_MASK                                   0x10
#define _PWM9CON_OUT_POSN                                   0x5
#define _PWM9CON_OUT_POSITION                               0x5
#define _PWM9CON_OUT_SIZE                                   0x1
#define _PWM9CON_OUT_LENGTH                                 0x1
#define _PWM9CON_OUT_MASK                                   0x20
#define _PWM9CON_EN_POSN                                    0x7
#define _PWM9CON_EN_POSITION                                0x7
#define _PWM9CON_EN_SIZE                                    0x1
#define _PWM9CON_EN_LENGTH                                  0x1
#define _PWM9CON_EN_MASK                                    0x80
#define _PWM9CON_PWM9POL_POSN                               0x4
#define _PWM9CON_PWM9POL_POSITION                           0x4
#define _PWM9CON_PWM9POL_SIZE                               0x1
#define _PWM9CON_PWM9POL_LENGTH                             0x1
#define _PWM9CON_PWM9POL_MASK                               0x10
#define _PWM9CON_PWM9OUT_POSN                               0x5
#define _PWM9CON_PWM9OUT_POSITION                           0x5
#define _PWM9CON_PWM9OUT_SIZE                               0x1
#define _PWM9CON_PWM9OUT_LENGTH                             0x1
#define _PWM9CON_PWM9OUT_MASK                               0x20
#define _PWM9CON_PWM9EN_POSN                                0x7
#define _PWM9CON_PWM9EN_POSITION                            0x7
#define _PWM9CON_PWM9EN_SIZE                                0x1
#define _PWM9CON_PWM9EN_LENGTH                              0x1
#define _PWM9CON_PWM9EN_MASK                                0x80

// Register: PWM10DC
#define PWM10DC PWM10DC
extern volatile unsigned short          PWM10DC             __at(0x61D);
#ifndef _LIB_BUILD
asm("PWM10DC equ 061Dh");
#endif

// Register: PWM10DCL
#define PWM10DCL PWM10DCL
extern volatile unsigned char           PWM10DCL            __at(0x61D);
#ifndef _LIB_BUILD
asm("PWM10DCL equ 061Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :6;
        unsigned DC                     :2;
    };
    struct {
        unsigned                        :6;
        unsigned DC0                    :1;
        unsigned DC1                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned PWM10DC0               :1;
        unsigned PWM10DC1               :1;
    };
    struct {
        unsigned                        :6;
        unsigned PWMPW0                 :1;
        unsigned PWMPW1                 :1;
    };
} PWM10DCLbits_t;
extern volatile PWM10DCLbits_t PWM10DCLbits __at(0x61D);
// bitfield macros
#define _PWM10DCL_DC_POSN                                   0x6
#define _PWM10DCL_DC_POSITION                               0x6
#define _PWM10DCL_DC_SIZE                                   0x2
#define _PWM10DCL_DC_LENGTH                                 0x2
#define _PWM10DCL_DC_MASK                                   0xC0
#define _PWM10DCL_DC0_POSN                                  0x6
#define _PWM10DCL_DC0_POSITION                              0x6
#define _PWM10DCL_DC0_SIZE                                  0x1
#define _PWM10DCL_DC0_LENGTH                                0x1
#define _PWM10DCL_DC0_MASK                                  0x40
#define _PWM10DCL_DC1_POSN                                  0x7
#define _PWM10DCL_DC1_POSITION                              0x7
#define _PWM10DCL_DC1_SIZE                                  0x1
#define _PWM10DCL_DC1_LENGTH                                0x1
#define _PWM10DCL_DC1_MASK                                  0x80
#define _PWM10DCL_PWM10DC0_POSN                             0x6
#define _PWM10DCL_PWM10DC0_POSITION                         0x6
#define _PWM10DCL_PWM10DC0_SIZE                             0x1
#define _PWM10DCL_PWM10DC0_LENGTH                           0x1
#define _PWM10DCL_PWM10DC0_MASK                             0x40
#define _PWM10DCL_PWM10DC1_POSN                             0x7
#define _PWM10DCL_PWM10DC1_POSITION                         0x7
#define _PWM10DCL_PWM10DC1_SIZE                             0x1
#define _PWM10DCL_PWM10DC1_LENGTH                           0x1
#define _PWM10DCL_PWM10DC1_MASK                             0x80
#define _PWM10DCL_PWMPW0_POSN                               0x6
#define _PWM10DCL_PWMPW0_POSITION                           0x6
#define _PWM10DCL_PWMPW0_SIZE                               0x1
#define _PWM10DCL_PWMPW0_LENGTH                             0x1
#define _PWM10DCL_PWMPW0_MASK                               0x40
#define _PWM10DCL_PWMPW1_POSN                               0x7
#define _PWM10DCL_PWMPW1_POSITION                           0x7
#define _PWM10DCL_PWMPW1_SIZE                               0x1
#define _PWM10DCL_PWMPW1_LENGTH                             0x1
#define _PWM10DCL_PWMPW1_MASK                               0x80

// Register: PWM10DCH
#define PWM10DCH PWM10DCH
extern volatile unsigned char           PWM10DCH            __at(0x61E);
#ifndef _LIB_BUILD
asm("PWM10DCH equ 061Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned DC2                    :1;
        unsigned DC3                    :1;
        unsigned DC4                    :1;
        unsigned DC5                    :1;
        unsigned DC6                    :1;
        unsigned DC7                    :1;
        unsigned DC8                    :1;
        unsigned DC9                    :1;
    };
    struct {
        unsigned PWM10DC2               :1;
        unsigned PWM10DC3               :1;
        unsigned PWM10DC4               :1;
        unsigned PWM10DC5               :1;
        unsigned PWM10DC6               :1;
        unsigned PWM10DC7               :1;
        unsigned PWM10DC8               :1;
        unsigned PWM10DC9               :1;
    };
    struct {
        unsigned PWMPW2                 :1;
        unsigned PWMPW3                 :1;
        unsigned PWMPW4                 :1;
        unsigned PWMPW5                 :1;
        unsigned PWMPW6                 :1;
        unsigned PWMPW7                 :1;
        unsigned PWMPW8                 :1;
        unsigned PWMPW9                 :1;
    };
} PWM10DCHbits_t;
extern volatile PWM10DCHbits_t PWM10DCHbits __at(0x61E);
// bitfield macros
#define _PWM10DCH_DC_POSN                                   0x0
#define _PWM10DCH_DC_POSITION                               0x0
#define _PWM10DCH_DC_SIZE                                   0x8
#define _PWM10DCH_DC_LENGTH                                 0x8
#define _PWM10DCH_DC_MASK                                   0xFF
#define _PWM10DCH_DC2_POSN                                  0x0
#define _PWM10DCH_DC2_POSITION                              0x0
#define _PWM10DCH_DC2_SIZE                                  0x1
#define _PWM10DCH_DC2_LENGTH                                0x1
#define _PWM10DCH_DC2_MASK                                  0x1
#define _PWM10DCH_DC3_POSN                                  0x1
#define _PWM10DCH_DC3_POSITION                              0x1
#define _PWM10DCH_DC3_SIZE                                  0x1
#define _PWM10DCH_DC3_LENGTH                                0x1
#define _PWM10DCH_DC3_MASK                                  0x2
#define _PWM10DCH_DC4_POSN                                  0x2
#define _PWM10DCH_DC4_POSITION                              0x2
#define _PWM10DCH_DC4_SIZE                                  0x1
#define _PWM10DCH_DC4_LENGTH                                0x1
#define _PWM10DCH_DC4_MASK                                  0x4
#define _PWM10DCH_DC5_POSN                                  0x3
#define _PWM10DCH_DC5_POSITION                              0x3
#define _PWM10DCH_DC5_SIZE                                  0x1
#define _PWM10DCH_DC5_LENGTH                                0x1
#define _PWM10DCH_DC5_MASK                                  0x8
#define _PWM10DCH_DC6_POSN                                  0x4
#define _PWM10DCH_DC6_POSITION                              0x4
#define _PWM10DCH_DC6_SIZE                                  0x1
#define _PWM10DCH_DC6_LENGTH                                0x1
#define _PWM10DCH_DC6_MASK                                  0x10
#define _PWM10DCH_DC7_POSN                                  0x5
#define _PWM10DCH_DC7_POSITION                              0x5
#define _PWM10DCH_DC7_SIZE                                  0x1
#define _PWM10DCH_DC7_LENGTH                                0x1
#define _PWM10DCH_DC7_MASK                                  0x20
#define _PWM10DCH_DC8_POSN                                  0x6
#define _PWM10DCH_DC8_POSITION                              0x6
#define _PWM10DCH_DC8_SIZE                                  0x1
#define _PWM10DCH_DC8_LENGTH                                0x1
#define _PWM10DCH_DC8_MASK                                  0x40
#define _PWM10DCH_DC9_POSN                                  0x7
#define _PWM10DCH_DC9_POSITION                              0x7
#define _PWM10DCH_DC9_SIZE                                  0x1
#define _PWM10DCH_DC9_LENGTH                                0x1
#define _PWM10DCH_DC9_MASK                                  0x80
#define _PWM10DCH_PWM10DC2_POSN                             0x0
#define _PWM10DCH_PWM10DC2_POSITION                         0x0
#define _PWM10DCH_PWM10DC2_SIZE                             0x1
#define _PWM10DCH_PWM10DC2_LENGTH                           0x1
#define _PWM10DCH_PWM10DC2_MASK                             0x1
#define _PWM10DCH_PWM10DC3_POSN                             0x1
#define _PWM10DCH_PWM10DC3_POSITION                         0x1
#define _PWM10DCH_PWM10DC3_SIZE                             0x1
#define _PWM10DCH_PWM10DC3_LENGTH                           0x1
#define _PWM10DCH_PWM10DC3_MASK                             0x2
#define _PWM10DCH_PWM10DC4_POSN                             0x2
#define _PWM10DCH_PWM10DC4_POSITION                         0x2
#define _PWM10DCH_PWM10DC4_SIZE                             0x1
#define _PWM10DCH_PWM10DC4_LENGTH                           0x1
#define _PWM10DCH_PWM10DC4_MASK                             0x4
#define _PWM10DCH_PWM10DC5_POSN                             0x3
#define _PWM10DCH_PWM10DC5_POSITION                         0x3
#define _PWM10DCH_PWM10DC5_SIZE                             0x1
#define _PWM10DCH_PWM10DC5_LENGTH                           0x1
#define _PWM10DCH_PWM10DC5_MASK                             0x8
#define _PWM10DCH_PWM10DC6_POSN                             0x4
#define _PWM10DCH_PWM10DC6_POSITION                         0x4
#define _PWM10DCH_PWM10DC6_SIZE                             0x1
#define _PWM10DCH_PWM10DC6_LENGTH                           0x1
#define _PWM10DCH_PWM10DC6_MASK                             0x10
#define _PWM10DCH_PWM10DC7_POSN                             0x5
#define _PWM10DCH_PWM10DC7_POSITION                         0x5
#define _PWM10DCH_PWM10DC7_SIZE                             0x1
#define _PWM10DCH_PWM10DC7_LENGTH                           0x1
#define _PWM10DCH_PWM10DC7_MASK                             0x20
#define _PWM10DCH_PWM10DC8_POSN                             0x6
#define _PWM10DCH_PWM10DC8_POSITION                         0x6
#define _PWM10DCH_PWM10DC8_SIZE                             0x1
#define _PWM10DCH_PWM10DC8_LENGTH                           0x1
#define _PWM10DCH_PWM10DC8_MASK                             0x40
#define _PWM10DCH_PWM10DC9_POSN                             0x7
#define _PWM10DCH_PWM10DC9_POSITION                         0x7
#define _PWM10DCH_PWM10DC9_SIZE                             0x1
#define _PWM10DCH_PWM10DC9_LENGTH                           0x1
#define _PWM10DCH_PWM10DC9_MASK                             0x80
#define _PWM10DCH_PWMPW2_POSN                               0x0
#define _PWM10DCH_PWMPW2_POSITION                           0x0
#define _PWM10DCH_PWMPW2_SIZE                               0x1
#define _PWM10DCH_PWMPW2_LENGTH                             0x1
#define _PWM10DCH_PWMPW2_MASK                               0x1
#define _PWM10DCH_PWMPW3_POSN                               0x1
#define _PWM10DCH_PWMPW3_POSITION                           0x1
#define _PWM10DCH_PWMPW3_SIZE                               0x1
#define _PWM10DCH_PWMPW3_LENGTH                             0x1
#define _PWM10DCH_PWMPW3_MASK                               0x2
#define _PWM10DCH_PWMPW4_POSN                               0x2
#define _PWM10DCH_PWMPW4_POSITION                           0x2
#define _PWM10DCH_PWMPW4_SIZE                               0x1
#define _PWM10DCH_PWMPW4_LENGTH                             0x1
#define _PWM10DCH_PWMPW4_MASK                               0x4
#define _PWM10DCH_PWMPW5_POSN                               0x3
#define _PWM10DCH_PWMPW5_POSITION                           0x3
#define _PWM10DCH_PWMPW5_SIZE                               0x1
#define _PWM10DCH_PWMPW5_LENGTH                             0x1
#define _PWM10DCH_PWMPW5_MASK                               0x8
#define _PWM10DCH_PWMPW6_POSN                               0x4
#define _PWM10DCH_PWMPW6_POSITION                           0x4
#define _PWM10DCH_PWMPW6_SIZE                               0x1
#define _PWM10DCH_PWMPW6_LENGTH                             0x1
#define _PWM10DCH_PWMPW6_MASK                               0x10
#define _PWM10DCH_PWMPW7_POSN                               0x5
#define _PWM10DCH_PWMPW7_POSITION                           0x5
#define _PWM10DCH_PWMPW7_SIZE                               0x1
#define _PWM10DCH_PWMPW7_LENGTH                             0x1
#define _PWM10DCH_PWMPW7_MASK                               0x20
#define _PWM10DCH_PWMPW8_POSN                               0x6
#define _PWM10DCH_PWMPW8_POSITION                           0x6
#define _PWM10DCH_PWMPW8_SIZE                               0x1
#define _PWM10DCH_PWMPW8_LENGTH                             0x1
#define _PWM10DCH_PWMPW8_MASK                               0x40
#define _PWM10DCH_PWMPW9_POSN                               0x7
#define _PWM10DCH_PWMPW9_POSITION                           0x7
#define _PWM10DCH_PWMPW9_SIZE                               0x1
#define _PWM10DCH_PWMPW9_LENGTH                             0x1
#define _PWM10DCH_PWMPW9_MASK                               0x80

// Register: PWM10CON
#define PWM10CON PWM10CON
extern volatile unsigned char           PWM10CON            __at(0x61F);
#ifndef _LIB_BUILD
asm("PWM10CON equ 061Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :4;
        unsigned POL                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :4;
        unsigned PWM10POL               :1;
        unsigned PWM10OUT               :1;
        unsigned                        :1;
        unsigned PWM10EN                :1;
    };
} PWM10CONbits_t;
extern volatile PWM10CONbits_t PWM10CONbits __at(0x61F);
// bitfield macros
#define _PWM10CON_POL_POSN                                  0x4
#define _PWM10CON_POL_POSITION                              0x4
#define _PWM10CON_POL_SIZE                                  0x1
#define _PWM10CON_POL_LENGTH                                0x1
#define _PWM10CON_POL_MASK                                  0x10
#define _PWM10CON_OUT_POSN                                  0x5
#define _PWM10CON_OUT_POSITION                              0x5
#define _PWM10CON_OUT_SIZE                                  0x1
#define _PWM10CON_OUT_LENGTH                                0x1
#define _PWM10CON_OUT_MASK                                  0x20
#define _PWM10CON_EN_POSN                                   0x7
#define _PWM10CON_EN_POSITION                               0x7
#define _PWM10CON_EN_SIZE                                   0x1
#define _PWM10CON_EN_LENGTH                                 0x1
#define _PWM10CON_EN_MASK                                   0x80
#define _PWM10CON_PWM10POL_POSN                             0x4
#define _PWM10CON_PWM10POL_POSITION                         0x4
#define _PWM10CON_PWM10POL_SIZE                             0x1
#define _PWM10CON_PWM10POL_LENGTH                           0x1
#define _PWM10CON_PWM10POL_MASK                             0x10
#define _PWM10CON_PWM10OUT_POSN                             0x5
#define _PWM10CON_PWM10OUT_POSITION                         0x5
#define _PWM10CON_PWM10OUT_SIZE                             0x1
#define _PWM10CON_PWM10OUT_LENGTH                           0x1
#define _PWM10CON_PWM10OUT_MASK                             0x20
#define _PWM10CON_PWM10EN_POSN                              0x7
#define _PWM10CON_PWM10EN_POSITION                          0x7
#define _PWM10CON_PWM10EN_SIZE                              0x1
#define _PWM10CON_PWM10EN_LENGTH                            0x1
#define _PWM10CON_PWM10EN_MASK                              0x80

// Register: COG1PHR
#define COG1PHR COG1PHR
extern volatile unsigned char           COG1PHR             __at(0x68D);
#ifndef _LIB_BUILD
asm("COG1PHR equ 068Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PHR                    :6;
    };
    struct {
        unsigned PHR0                   :1;
        unsigned PHR1                   :1;
        unsigned PHR2                   :1;
        unsigned PHR3                   :1;
        unsigned PHR4                   :1;
        unsigned PHR5                   :1;
    };
    struct {
        unsigned G1PHR0                 :1;
        unsigned G1PHR1                 :1;
        unsigned G1PHR2                 :1;
        unsigned G1PHR3                 :1;
        unsigned G1PHR4                 :1;
        unsigned G1PHR5                 :1;
    };
} COG1PHRbits_t;
extern volatile COG1PHRbits_t COG1PHRbits __at(0x68D);
// bitfield macros
#define _COG1PHR_PHR_POSN                                   0x0
#define _COG1PHR_PHR_POSITION                               0x0
#define _COG1PHR_PHR_SIZE                                   0x6
#define _COG1PHR_PHR_LENGTH                                 0x6
#define _COG1PHR_PHR_MASK                                   0x3F
#define _COG1PHR_PHR0_POSN                                  0x0
#define _COG1PHR_PHR0_POSITION                              0x0
#define _COG1PHR_PHR0_SIZE                                  0x1
#define _COG1PHR_PHR0_LENGTH                                0x1
#define _COG1PHR_PHR0_MASK                                  0x1
#define _COG1PHR_PHR1_POSN                                  0x1
#define _COG1PHR_PHR1_POSITION                              0x1
#define _COG1PHR_PHR1_SIZE                                  0x1
#define _COG1PHR_PHR1_LENGTH                                0x1
#define _COG1PHR_PHR1_MASK                                  0x2
#define _COG1PHR_PHR2_POSN                                  0x2
#define _COG1PHR_PHR2_POSITION                              0x2
#define _COG1PHR_PHR2_SIZE                                  0x1
#define _COG1PHR_PHR2_LENGTH                                0x1
#define _COG1PHR_PHR2_MASK                                  0x4
#define _COG1PHR_PHR3_POSN                                  0x3
#define _COG1PHR_PHR3_POSITION                              0x3
#define _COG1PHR_PHR3_SIZE                                  0x1
#define _COG1PHR_PHR3_LENGTH                                0x1
#define _COG1PHR_PHR3_MASK                                  0x8
#define _COG1PHR_PHR4_POSN                                  0x4
#define _COG1PHR_PHR4_POSITION                              0x4
#define _COG1PHR_PHR4_SIZE                                  0x1
#define _COG1PHR_PHR4_LENGTH                                0x1
#define _COG1PHR_PHR4_MASK                                  0x10
#define _COG1PHR_PHR5_POSN                                  0x5
#define _COG1PHR_PHR5_POSITION                              0x5
#define _COG1PHR_PHR5_SIZE                                  0x1
#define _COG1PHR_PHR5_LENGTH                                0x1
#define _COG1PHR_PHR5_MASK                                  0x20
#define _COG1PHR_G1PHR0_POSN                                0x0
#define _COG1PHR_G1PHR0_POSITION                            0x0
#define _COG1PHR_G1PHR0_SIZE                                0x1
#define _COG1PHR_G1PHR0_LENGTH                              0x1
#define _COG1PHR_G1PHR0_MASK                                0x1
#define _COG1PHR_G1PHR1_POSN                                0x1
#define _COG1PHR_G1PHR1_POSITION                            0x1
#define _COG1PHR_G1PHR1_SIZE                                0x1
#define _COG1PHR_G1PHR1_LENGTH                              0x1
#define _COG1PHR_G1PHR1_MASK                                0x2
#define _COG1PHR_G1PHR2_POSN                                0x2
#define _COG1PHR_G1PHR2_POSITION                            0x2
#define _COG1PHR_G1PHR2_SIZE                                0x1
#define _COG1PHR_G1PHR2_LENGTH                              0x1
#define _COG1PHR_G1PHR2_MASK                                0x4
#define _COG1PHR_G1PHR3_POSN                                0x3
#define _COG1PHR_G1PHR3_POSITION                            0x3
#define _COG1PHR_G1PHR3_SIZE                                0x1
#define _COG1PHR_G1PHR3_LENGTH                              0x1
#define _COG1PHR_G1PHR3_MASK                                0x8
#define _COG1PHR_G1PHR4_POSN                                0x4
#define _COG1PHR_G1PHR4_POSITION                            0x4
#define _COG1PHR_G1PHR4_SIZE                                0x1
#define _COG1PHR_G1PHR4_LENGTH                              0x1
#define _COG1PHR_G1PHR4_MASK                                0x10
#define _COG1PHR_G1PHR5_POSN                                0x5
#define _COG1PHR_G1PHR5_POSITION                            0x5
#define _COG1PHR_G1PHR5_SIZE                                0x1
#define _COG1PHR_G1PHR5_LENGTH                              0x1
#define _COG1PHR_G1PHR5_MASK                                0x20

// Register: COG1PHF
#define COG1PHF COG1PHF
extern volatile unsigned char           COG1PHF             __at(0x68E);
#ifndef _LIB_BUILD
asm("COG1PHF equ 068Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PHF                    :6;
    };
    struct {
        unsigned PHF0                   :1;
        unsigned PHF1                   :1;
        unsigned PHF2                   :1;
        unsigned PHF3                   :1;
        unsigned PHF4                   :1;
        unsigned PHF5                   :1;
    };
    struct {
        unsigned G1PHF0                 :1;
        unsigned G1PHF1                 :1;
        unsigned G1PHF2                 :1;
        unsigned G1PHF3                 :1;
        unsigned G1PHF4                 :1;
        unsigned G1PHF5                 :1;
    };
} COG1PHFbits_t;
extern volatile COG1PHFbits_t COG1PHFbits __at(0x68E);
// bitfield macros
#define _COG1PHF_PHF_POSN                                   0x0
#define _COG1PHF_PHF_POSITION                               0x0
#define _COG1PHF_PHF_SIZE                                   0x6
#define _COG1PHF_PHF_LENGTH                                 0x6
#define _COG1PHF_PHF_MASK                                   0x3F
#define _COG1PHF_PHF0_POSN                                  0x0
#define _COG1PHF_PHF0_POSITION                              0x0
#define _COG1PHF_PHF0_SIZE                                  0x1
#define _COG1PHF_PHF0_LENGTH                                0x1
#define _COG1PHF_PHF0_MASK                                  0x1
#define _COG1PHF_PHF1_POSN                                  0x1
#define _COG1PHF_PHF1_POSITION                              0x1
#define _COG1PHF_PHF1_SIZE                                  0x1
#define _COG1PHF_PHF1_LENGTH                                0x1
#define _COG1PHF_PHF1_MASK                                  0x2
#define _COG1PHF_PHF2_POSN                                  0x2
#define _COG1PHF_PHF2_POSITION                              0x2
#define _COG1PHF_PHF2_SIZE                                  0x1
#define _COG1PHF_PHF2_LENGTH                                0x1
#define _COG1PHF_PHF2_MASK                                  0x4
#define _COG1PHF_PHF3_POSN                                  0x3
#define _COG1PHF_PHF3_POSITION                              0x3
#define _COG1PHF_PHF3_SIZE                                  0x1
#define _COG1PHF_PHF3_LENGTH                                0x1
#define _COG1PHF_PHF3_MASK                                  0x8
#define _COG1PHF_PHF4_POSN                                  0x4
#define _COG1PHF_PHF4_POSITION                              0x4
#define _COG1PHF_PHF4_SIZE                                  0x1
#define _COG1PHF_PHF4_LENGTH                                0x1
#define _COG1PHF_PHF4_MASK                                  0x10
#define _COG1PHF_PHF5_POSN                                  0x5
#define _COG1PHF_PHF5_POSITION                              0x5
#define _COG1PHF_PHF5_SIZE                                  0x1
#define _COG1PHF_PHF5_LENGTH                                0x1
#define _COG1PHF_PHF5_MASK                                  0x20
#define _COG1PHF_G1PHF0_POSN                                0x0
#define _COG1PHF_G1PHF0_POSITION                            0x0
#define _COG1PHF_G1PHF0_SIZE                                0x1
#define _COG1PHF_G1PHF0_LENGTH                              0x1
#define _COG1PHF_G1PHF0_MASK                                0x1
#define _COG1PHF_G1PHF1_POSN                                0x1
#define _COG1PHF_G1PHF1_POSITION                            0x1
#define _COG1PHF_G1PHF1_SIZE                                0x1
#define _COG1PHF_G1PHF1_LENGTH                              0x1
#define _COG1PHF_G1PHF1_MASK                                0x2
#define _COG1PHF_G1PHF2_POSN                                0x2
#define _COG1PHF_G1PHF2_POSITION                            0x2
#define _COG1PHF_G1PHF2_SIZE                                0x1
#define _COG1PHF_G1PHF2_LENGTH                              0x1
#define _COG1PHF_G1PHF2_MASK                                0x4
#define _COG1PHF_G1PHF3_POSN                                0x3
#define _COG1PHF_G1PHF3_POSITION                            0x3
#define _COG1PHF_G1PHF3_SIZE                                0x1
#define _COG1PHF_G1PHF3_LENGTH                              0x1
#define _COG1PHF_G1PHF3_MASK                                0x8
#define _COG1PHF_G1PHF4_POSN                                0x4
#define _COG1PHF_G1PHF4_POSITION                            0x4
#define _COG1PHF_G1PHF4_SIZE                                0x1
#define _COG1PHF_G1PHF4_LENGTH                              0x1
#define _COG1PHF_G1PHF4_MASK                                0x10
#define _COG1PHF_G1PHF5_POSN                                0x5
#define _COG1PHF_G1PHF5_POSITION                            0x5
#define _COG1PHF_G1PHF5_SIZE                                0x1
#define _COG1PHF_G1PHF5_LENGTH                              0x1
#define _COG1PHF_G1PHF5_MASK                                0x20

// Register: COG1BLKR
#define COG1BLKR COG1BLKR
extern volatile unsigned char           COG1BLKR            __at(0x68F);
#ifndef _LIB_BUILD
asm("COG1BLKR equ 068Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BLKR                   :6;
    };
    struct {
        unsigned BLKR0                  :1;
        unsigned BLKR1                  :1;
        unsigned BLKR2                  :1;
        unsigned BLKR3                  :1;
        unsigned BLKR4                  :1;
        unsigned BLKR5                  :1;
    };
    struct {
        unsigned G1BLKR0                :1;
        unsigned G1BLKR1                :1;
        unsigned G1BLKR2                :1;
        unsigned G1BLKR3                :1;
        unsigned G1BLKR4                :1;
        unsigned G1BLKR5                :1;
    };
} COG1BLKRbits_t;
extern volatile COG1BLKRbits_t COG1BLKRbits __at(0x68F);
// bitfield macros
#define _COG1BLKR_BLKR_POSN                                 0x0
#define _COG1BLKR_BLKR_POSITION                             0x0
#define _COG1BLKR_BLKR_SIZE                                 0x6
#define _COG1BLKR_BLKR_LENGTH                               0x6
#define _COG1BLKR_BLKR_MASK                                 0x3F
#define _COG1BLKR_BLKR0_POSN                                0x0
#define _COG1BLKR_BLKR0_POSITION                            0x0
#define _COG1BLKR_BLKR0_SIZE                                0x1
#define _COG1BLKR_BLKR0_LENGTH                              0x1
#define _COG1BLKR_BLKR0_MASK                                0x1
#define _COG1BLKR_BLKR1_POSN                                0x1
#define _COG1BLKR_BLKR1_POSITION                            0x1
#define _COG1BLKR_BLKR1_SIZE                                0x1
#define _COG1BLKR_BLKR1_LENGTH                              0x1
#define _COG1BLKR_BLKR1_MASK                                0x2
#define _COG1BLKR_BLKR2_POSN                                0x2
#define _COG1BLKR_BLKR2_POSITION                            0x2
#define _COG1BLKR_BLKR2_SIZE                                0x1
#define _COG1BLKR_BLKR2_LENGTH                              0x1
#define _COG1BLKR_BLKR2_MASK                                0x4
#define _COG1BLKR_BLKR3_POSN                                0x3
#define _COG1BLKR_BLKR3_POSITION                            0x3
#define _COG1BLKR_BLKR3_SIZE                                0x1
#define _COG1BLKR_BLKR3_LENGTH                              0x1
#define _COG1BLKR_BLKR3_MASK                                0x8
#define _COG1BLKR_BLKR4_POSN                                0x4
#define _COG1BLKR_BLKR4_POSITION                            0x4
#define _COG1BLKR_BLKR4_SIZE                                0x1
#define _COG1BLKR_BLKR4_LENGTH                              0x1
#define _COG1BLKR_BLKR4_MASK                                0x10
#define _COG1BLKR_BLKR5_POSN                                0x5
#define _COG1BLKR_BLKR5_POSITION                            0x5
#define _COG1BLKR_BLKR5_SIZE                                0x1
#define _COG1BLKR_BLKR5_LENGTH                              0x1
#define _COG1BLKR_BLKR5_MASK                                0x20
#define _COG1BLKR_G1BLKR0_POSN                              0x0
#define _COG1BLKR_G1BLKR0_POSITION                          0x0
#define _COG1BLKR_G1BLKR0_SIZE                              0x1
#define _COG1BLKR_G1BLKR0_LENGTH                            0x1
#define _COG1BLKR_G1BLKR0_MASK                              0x1
#define _COG1BLKR_G1BLKR1_POSN                              0x1
#define _COG1BLKR_G1BLKR1_POSITION                          0x1
#define _COG1BLKR_G1BLKR1_SIZE                              0x1
#define _COG1BLKR_G1BLKR1_LENGTH                            0x1
#define _COG1BLKR_G1BLKR1_MASK                              0x2
#define _COG1BLKR_G1BLKR2_POSN                              0x2
#define _COG1BLKR_G1BLKR2_POSITION                          0x2
#define _COG1BLKR_G1BLKR2_SIZE                              0x1
#define _COG1BLKR_G1BLKR2_LENGTH                            0x1
#define _COG1BLKR_G1BLKR2_MASK                              0x4
#define _COG1BLKR_G1BLKR3_POSN                              0x3
#define _COG1BLKR_G1BLKR3_POSITION                          0x3
#define _COG1BLKR_G1BLKR3_SIZE                              0x1
#define _COG1BLKR_G1BLKR3_LENGTH                            0x1
#define _COG1BLKR_G1BLKR3_MASK                              0x8
#define _COG1BLKR_G1BLKR4_POSN                              0x4
#define _COG1BLKR_G1BLKR4_POSITION                          0x4
#define _COG1BLKR_G1BLKR4_SIZE                              0x1
#define _COG1BLKR_G1BLKR4_LENGTH                            0x1
#define _COG1BLKR_G1BLKR4_MASK                              0x10
#define _COG1BLKR_G1BLKR5_POSN                              0x5
#define _COG1BLKR_G1BLKR5_POSITION                          0x5
#define _COG1BLKR_G1BLKR5_SIZE                              0x1
#define _COG1BLKR_G1BLKR5_LENGTH                            0x1
#define _COG1BLKR_G1BLKR5_MASK                              0x20

// Register: COG1BLKF
#define COG1BLKF COG1BLKF
extern volatile unsigned char           COG1BLKF            __at(0x690);
#ifndef _LIB_BUILD
asm("COG1BLKF equ 0690h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BLKF                   :6;
    };
    struct {
        unsigned BLKF0                  :1;
        unsigned BLKF1                  :1;
        unsigned BLKF2                  :1;
        unsigned BLKF3                  :1;
        unsigned BLKF4                  :1;
        unsigned BLKF5                  :1;
    };
    struct {
        unsigned G1BLKF0                :1;
        unsigned G1BLKF1                :1;
        unsigned G1BLKF2                :1;
        unsigned G1BLKF3                :1;
        unsigned G1BLKF4                :1;
        unsigned G1BLKF5                :1;
    };
} COG1BLKFbits_t;
extern volatile COG1BLKFbits_t COG1BLKFbits __at(0x690);
// bitfield macros
#define _COG1BLKF_BLKF_POSN                                 0x0
#define _COG1BLKF_BLKF_POSITION                             0x0
#define _COG1BLKF_BLKF_SIZE                                 0x6
#define _COG1BLKF_BLKF_LENGTH                               0x6
#define _COG1BLKF_BLKF_MASK                                 0x3F
#define _COG1BLKF_BLKF0_POSN                                0x0
#define _COG1BLKF_BLKF0_POSITION                            0x0
#define _COG1BLKF_BLKF0_SIZE                                0x1
#define _COG1BLKF_BLKF0_LENGTH                              0x1
#define _COG1BLKF_BLKF0_MASK                                0x1
#define _COG1BLKF_BLKF1_POSN                                0x1
#define _COG1BLKF_BLKF1_POSITION                            0x1
#define _COG1BLKF_BLKF1_SIZE                                0x1
#define _COG1BLKF_BLKF1_LENGTH                              0x1
#define _COG1BLKF_BLKF1_MASK                                0x2
#define _COG1BLKF_BLKF2_POSN                                0x2
#define _COG1BLKF_BLKF2_POSITION                            0x2
#define _COG1BLKF_BLKF2_SIZE                                0x1
#define _COG1BLKF_BLKF2_LENGTH                              0x1
#define _COG1BLKF_BLKF2_MASK                                0x4
#define _COG1BLKF_BLKF3_POSN                                0x3
#define _COG1BLKF_BLKF3_POSITION                            0x3
#define _COG1BLKF_BLKF3_SIZE                                0x1
#define _COG1BLKF_BLKF3_LENGTH                              0x1
#define _COG1BLKF_BLKF3_MASK                                0x8
#define _COG1BLKF_BLKF4_POSN                                0x4
#define _COG1BLKF_BLKF4_POSITION                            0x4
#define _COG1BLKF_BLKF4_SIZE                                0x1
#define _COG1BLKF_BLKF4_LENGTH                              0x1
#define _COG1BLKF_BLKF4_MASK                                0x10
#define _COG1BLKF_BLKF5_POSN                                0x5
#define _COG1BLKF_BLKF5_POSITION                            0x5
#define _COG1BLKF_BLKF5_SIZE                                0x1
#define _COG1BLKF_BLKF5_LENGTH                              0x1
#define _COG1BLKF_BLKF5_MASK                                0x20
#define _COG1BLKF_G1BLKF0_POSN                              0x0
#define _COG1BLKF_G1BLKF0_POSITION                          0x0
#define _COG1BLKF_G1BLKF0_SIZE                              0x1
#define _COG1BLKF_G1BLKF0_LENGTH                            0x1
#define _COG1BLKF_G1BLKF0_MASK                              0x1
#define _COG1BLKF_G1BLKF1_POSN                              0x1
#define _COG1BLKF_G1BLKF1_POSITION                          0x1
#define _COG1BLKF_G1BLKF1_SIZE                              0x1
#define _COG1BLKF_G1BLKF1_LENGTH                            0x1
#define _COG1BLKF_G1BLKF1_MASK                              0x2
#define _COG1BLKF_G1BLKF2_POSN                              0x2
#define _COG1BLKF_G1BLKF2_POSITION                          0x2
#define _COG1BLKF_G1BLKF2_SIZE                              0x1
#define _COG1BLKF_G1BLKF2_LENGTH                            0x1
#define _COG1BLKF_G1BLKF2_MASK                              0x4
#define _COG1BLKF_G1BLKF3_POSN                              0x3
#define _COG1BLKF_G1BLKF3_POSITION                          0x3
#define _COG1BLKF_G1BLKF3_SIZE                              0x1
#define _COG1BLKF_G1BLKF3_LENGTH                            0x1
#define _COG1BLKF_G1BLKF3_MASK                              0x8
#define _COG1BLKF_G1BLKF4_POSN                              0x4
#define _COG1BLKF_G1BLKF4_POSITION                          0x4
#define _COG1BLKF_G1BLKF4_SIZE                              0x1
#define _COG1BLKF_G1BLKF4_LENGTH                            0x1
#define _COG1BLKF_G1BLKF4_MASK                              0x10
#define _COG1BLKF_G1BLKF5_POSN                              0x5
#define _COG1BLKF_G1BLKF5_POSITION                          0x5
#define _COG1BLKF_G1BLKF5_SIZE                              0x1
#define _COG1BLKF_G1BLKF5_LENGTH                            0x1
#define _COG1BLKF_G1BLKF5_MASK                              0x20

// Register: COG1DBR
#define COG1DBR COG1DBR
extern volatile unsigned char           COG1DBR             __at(0x691);
#ifndef _LIB_BUILD
asm("COG1DBR equ 0691h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBR                    :6;
    };
    struct {
        unsigned DBR0                   :1;
        unsigned DBR1                   :1;
        unsigned DBR2                   :1;
        unsigned DBR3                   :1;
        unsigned DBR4                   :1;
        unsigned DBR5                   :1;
    };
    struct {
        unsigned G1DBR0                 :1;
        unsigned G1DBR1                 :1;
        unsigned G1DBR2                 :1;
        unsigned G1DBR3                 :1;
        unsigned G1DBR4                 :1;
        unsigned G1DBR5                 :1;
    };
} COG1DBRbits_t;
extern volatile COG1DBRbits_t COG1DBRbits __at(0x691);
// bitfield macros
#define _COG1DBR_DBR_POSN                                   0x0
#define _COG1DBR_DBR_POSITION                               0x0
#define _COG1DBR_DBR_SIZE                                   0x6
#define _COG1DBR_DBR_LENGTH                                 0x6
#define _COG1DBR_DBR_MASK                                   0x3F
#define _COG1DBR_DBR0_POSN                                  0x0
#define _COG1DBR_DBR0_POSITION                              0x0
#define _COG1DBR_DBR0_SIZE                                  0x1
#define _COG1DBR_DBR0_LENGTH                                0x1
#define _COG1DBR_DBR0_MASK                                  0x1
#define _COG1DBR_DBR1_POSN                                  0x1
#define _COG1DBR_DBR1_POSITION                              0x1
#define _COG1DBR_DBR1_SIZE                                  0x1
#define _COG1DBR_DBR1_LENGTH                                0x1
#define _COG1DBR_DBR1_MASK                                  0x2
#define _COG1DBR_DBR2_POSN                                  0x2
#define _COG1DBR_DBR2_POSITION                              0x2
#define _COG1DBR_DBR2_SIZE                                  0x1
#define _COG1DBR_DBR2_LENGTH                                0x1
#define _COG1DBR_DBR2_MASK                                  0x4
#define _COG1DBR_DBR3_POSN                                  0x3
#define _COG1DBR_DBR3_POSITION                              0x3
#define _COG1DBR_DBR3_SIZE                                  0x1
#define _COG1DBR_DBR3_LENGTH                                0x1
#define _COG1DBR_DBR3_MASK                                  0x8
#define _COG1DBR_DBR4_POSN                                  0x4
#define _COG1DBR_DBR4_POSITION                              0x4
#define _COG1DBR_DBR4_SIZE                                  0x1
#define _COG1DBR_DBR4_LENGTH                                0x1
#define _COG1DBR_DBR4_MASK                                  0x10
#define _COG1DBR_DBR5_POSN                                  0x5
#define _COG1DBR_DBR5_POSITION                              0x5
#define _COG1DBR_DBR5_SIZE                                  0x1
#define _COG1DBR_DBR5_LENGTH                                0x1
#define _COG1DBR_DBR5_MASK                                  0x20
#define _COG1DBR_G1DBR0_POSN                                0x0
#define _COG1DBR_G1DBR0_POSITION                            0x0
#define _COG1DBR_G1DBR0_SIZE                                0x1
#define _COG1DBR_G1DBR0_LENGTH                              0x1
#define _COG1DBR_G1DBR0_MASK                                0x1
#define _COG1DBR_G1DBR1_POSN                                0x1
#define _COG1DBR_G1DBR1_POSITION                            0x1
#define _COG1DBR_G1DBR1_SIZE                                0x1
#define _COG1DBR_G1DBR1_LENGTH                              0x1
#define _COG1DBR_G1DBR1_MASK                                0x2
#define _COG1DBR_G1DBR2_POSN                                0x2
#define _COG1DBR_G1DBR2_POSITION                            0x2
#define _COG1DBR_G1DBR2_SIZE                                0x1
#define _COG1DBR_G1DBR2_LENGTH                              0x1
#define _COG1DBR_G1DBR2_MASK                                0x4
#define _COG1DBR_G1DBR3_POSN                                0x3
#define _COG1DBR_G1DBR3_POSITION                            0x3
#define _COG1DBR_G1DBR3_SIZE                                0x1
#define _COG1DBR_G1DBR3_LENGTH                              0x1
#define _COG1DBR_G1DBR3_MASK                                0x8
#define _COG1DBR_G1DBR4_POSN                                0x4
#define _COG1DBR_G1DBR4_POSITION                            0x4
#define _COG1DBR_G1DBR4_SIZE                                0x1
#define _COG1DBR_G1DBR4_LENGTH                              0x1
#define _COG1DBR_G1DBR4_MASK                                0x10
#define _COG1DBR_G1DBR5_POSN                                0x5
#define _COG1DBR_G1DBR5_POSITION                            0x5
#define _COG1DBR_G1DBR5_SIZE                                0x1
#define _COG1DBR_G1DBR5_LENGTH                              0x1
#define _COG1DBR_G1DBR5_MASK                                0x20

// Register: COG1DBF
#define COG1DBF COG1DBF
extern volatile unsigned char           COG1DBF             __at(0x692);
#ifndef _LIB_BUILD
asm("COG1DBF equ 0692h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBF0                   :1;
        unsigned DBF1                   :1;
        unsigned DBF2                   :1;
        unsigned DBF3                   :1;
        unsigned DBF4                   :1;
        unsigned DBF5                   :1;
    };
    struct {
        unsigned G1DBF0                 :1;
        unsigned G1DBF1                 :1;
        unsigned G1DBF2                 :1;
        unsigned G1DBF3                 :1;
        unsigned G1DBF4                 :1;
        unsigned G1DBF5                 :1;
    };
    struct {
        unsigned G1DBF                  :6;
    };
} COG1DBFbits_t;
extern volatile COG1DBFbits_t COG1DBFbits __at(0x692);
// bitfield macros
#define _COG1DBF_DBF0_POSN                                  0x0
#define _COG1DBF_DBF0_POSITION                              0x0
#define _COG1DBF_DBF0_SIZE                                  0x1
#define _COG1DBF_DBF0_LENGTH                                0x1
#define _COG1DBF_DBF0_MASK                                  0x1
#define _COG1DBF_DBF1_POSN                                  0x1
#define _COG1DBF_DBF1_POSITION                              0x1
#define _COG1DBF_DBF1_SIZE                                  0x1
#define _COG1DBF_DBF1_LENGTH                                0x1
#define _COG1DBF_DBF1_MASK                                  0x2
#define _COG1DBF_DBF2_POSN                                  0x2
#define _COG1DBF_DBF2_POSITION                              0x2
#define _COG1DBF_DBF2_SIZE                                  0x1
#define _COG1DBF_DBF2_LENGTH                                0x1
#define _COG1DBF_DBF2_MASK                                  0x4
#define _COG1DBF_DBF3_POSN                                  0x3
#define _COG1DBF_DBF3_POSITION                              0x3
#define _COG1DBF_DBF3_SIZE                                  0x1
#define _COG1DBF_DBF3_LENGTH                                0x1
#define _COG1DBF_DBF3_MASK                                  0x8
#define _COG1DBF_DBF4_POSN                                  0x4
#define _COG1DBF_DBF4_POSITION                              0x4
#define _COG1DBF_DBF4_SIZE                                  0x1
#define _COG1DBF_DBF4_LENGTH                                0x1
#define _COG1DBF_DBF4_MASK                                  0x10
#define _COG1DBF_DBF5_POSN                                  0x5
#define _COG1DBF_DBF5_POSITION                              0x5
#define _COG1DBF_DBF5_SIZE                                  0x1
#define _COG1DBF_DBF5_LENGTH                                0x1
#define _COG1DBF_DBF5_MASK                                  0x20
#define _COG1DBF_G1DBF0_POSN                                0x0
#define _COG1DBF_G1DBF0_POSITION                            0x0
#define _COG1DBF_G1DBF0_SIZE                                0x1
#define _COG1DBF_G1DBF0_LENGTH                              0x1
#define _COG1DBF_G1DBF0_MASK                                0x1
#define _COG1DBF_G1DBF1_POSN                                0x1
#define _COG1DBF_G1DBF1_POSITION                            0x1
#define _COG1DBF_G1DBF1_SIZE                                0x1
#define _COG1DBF_G1DBF1_LENGTH                              0x1
#define _COG1DBF_G1DBF1_MASK                                0x2
#define _COG1DBF_G1DBF2_POSN                                0x2
#define _COG1DBF_G1DBF2_POSITION                            0x2
#define _COG1DBF_G1DBF2_SIZE                                0x1
#define _COG1DBF_G1DBF2_LENGTH                              0x1
#define _COG1DBF_G1DBF2_MASK                                0x4
#define _COG1DBF_G1DBF3_POSN                                0x3
#define _COG1DBF_G1DBF3_POSITION                            0x3
#define _COG1DBF_G1DBF3_SIZE                                0x1
#define _COG1DBF_G1DBF3_LENGTH                              0x1
#define _COG1DBF_G1DBF3_MASK                                0x8
#define _COG1DBF_G1DBF4_POSN                                0x4
#define _COG1DBF_G1DBF4_POSITION                            0x4
#define _COG1DBF_G1DBF4_SIZE                                0x1
#define _COG1DBF_G1DBF4_LENGTH                              0x1
#define _COG1DBF_G1DBF4_MASK                                0x10
#define _COG1DBF_G1DBF5_POSN                                0x5
#define _COG1DBF_G1DBF5_POSITION                            0x5
#define _COG1DBF_G1DBF5_SIZE                                0x1
#define _COG1DBF_G1DBF5_LENGTH                              0x1
#define _COG1DBF_G1DBF5_MASK                                0x20
#define _COG1DBF_G1DBF_POSN                                 0x0
#define _COG1DBF_G1DBF_POSITION                             0x0
#define _COG1DBF_G1DBF_SIZE                                 0x6
#define _COG1DBF_G1DBF_LENGTH                               0x6
#define _COG1DBF_G1DBF_MASK                                 0x3F

// Register: COG1CON0
#define COG1CON0 COG1CON0
extern volatile unsigned char           COG1CON0            __at(0x693);
#ifndef _LIB_BUILD
asm("COG1CON0 equ 0693h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD                     :3;
        unsigned CS                     :2;
        unsigned                        :1;
        unsigned LD                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MD0                    :1;
        unsigned MD1                    :1;
        unsigned MD2                    :1;
        unsigned CS0                    :1;
        unsigned CS1                    :1;
    };
    struct {
        unsigned G1MD                   :3;
        unsigned G1CS                   :2;
        unsigned                        :1;
        unsigned G1LD                   :1;
        unsigned G1EN                   :1;
    };
    struct {
        unsigned G1MD0                  :1;
        unsigned G1MD1                  :1;
        unsigned G1MD2                  :1;
        unsigned G1CS0                  :1;
        unsigned G1CS1                  :1;
    };
} COG1CON0bits_t;
extern volatile COG1CON0bits_t COG1CON0bits __at(0x693);
// bitfield macros
#define _COG1CON0_MD_POSN                                   0x0
#define _COG1CON0_MD_POSITION                               0x0
#define _COG1CON0_MD_SIZE                                   0x3
#define _COG1CON0_MD_LENGTH                                 0x3
#define _COG1CON0_MD_MASK                                   0x7
#define _COG1CON0_CS_POSN                                   0x3
#define _COG1CON0_CS_POSITION                               0x3
#define _COG1CON0_CS_SIZE                                   0x2
#define _COG1CON0_CS_LENGTH                                 0x2
#define _COG1CON0_CS_MASK                                   0x18
#define _COG1CON0_LD_POSN                                   0x6
#define _COG1CON0_LD_POSITION                               0x6
#define _COG1CON0_LD_SIZE                                   0x1
#define _COG1CON0_LD_LENGTH                                 0x1
#define _COG1CON0_LD_MASK                                   0x40
#define _COG1CON0_EN_POSN                                   0x7
#define _COG1CON0_EN_POSITION                               0x7
#define _COG1CON0_EN_SIZE                                   0x1
#define _COG1CON0_EN_LENGTH                                 0x1
#define _COG1CON0_EN_MASK                                   0x80
#define _COG1CON0_MD0_POSN                                  0x0
#define _COG1CON0_MD0_POSITION                              0x0
#define _COG1CON0_MD0_SIZE                                  0x1
#define _COG1CON0_MD0_LENGTH                                0x1
#define _COG1CON0_MD0_MASK                                  0x1
#define _COG1CON0_MD1_POSN                                  0x1
#define _COG1CON0_MD1_POSITION                              0x1
#define _COG1CON0_MD1_SIZE                                  0x1
#define _COG1CON0_MD1_LENGTH                                0x1
#define _COG1CON0_MD1_MASK                                  0x2
#define _COG1CON0_MD2_POSN                                  0x2
#define _COG1CON0_MD2_POSITION                              0x2
#define _COG1CON0_MD2_SIZE                                  0x1
#define _COG1CON0_MD2_LENGTH                                0x1
#define _COG1CON0_MD2_MASK                                  0x4
#define _COG1CON0_CS0_POSN                                  0x3
#define _COG1CON0_CS0_POSITION                              0x3
#define _COG1CON0_CS0_SIZE                                  0x1
#define _COG1CON0_CS0_LENGTH                                0x1
#define _COG1CON0_CS0_MASK                                  0x8
#define _COG1CON0_CS1_POSN                                  0x4
#define _COG1CON0_CS1_POSITION                              0x4
#define _COG1CON0_CS1_SIZE                                  0x1
#define _COG1CON0_CS1_LENGTH                                0x1
#define _COG1CON0_CS1_MASK                                  0x10
#define _COG1CON0_G1MD_POSN                                 0x0
#define _COG1CON0_G1MD_POSITION                             0x0
#define _COG1CON0_G1MD_SIZE                                 0x3
#define _COG1CON0_G1MD_LENGTH                               0x3
#define _COG1CON0_G1MD_MASK                                 0x7
#define _COG1CON0_G1CS_POSN                                 0x3
#define _COG1CON0_G1CS_POSITION                             0x3
#define _COG1CON0_G1CS_SIZE                                 0x2
#define _COG1CON0_G1CS_LENGTH                               0x2
#define _COG1CON0_G1CS_MASK                                 0x18
#define _COG1CON0_G1LD_POSN                                 0x6
#define _COG1CON0_G1LD_POSITION                             0x6
#define _COG1CON0_G1LD_SIZE                                 0x1
#define _COG1CON0_G1LD_LENGTH                               0x1
#define _COG1CON0_G1LD_MASK                                 0x40
#define _COG1CON0_G1EN_POSN                                 0x7
#define _COG1CON0_G1EN_POSITION                             0x7
#define _COG1CON0_G1EN_SIZE                                 0x1
#define _COG1CON0_G1EN_LENGTH                               0x1
#define _COG1CON0_G1EN_MASK                                 0x80
#define _COG1CON0_G1MD0_POSN                                0x0
#define _COG1CON0_G1MD0_POSITION                            0x0
#define _COG1CON0_G1MD0_SIZE                                0x1
#define _COG1CON0_G1MD0_LENGTH                              0x1
#define _COG1CON0_G1MD0_MASK                                0x1
#define _COG1CON0_G1MD1_POSN                                0x1
#define _COG1CON0_G1MD1_POSITION                            0x1
#define _COG1CON0_G1MD1_SIZE                                0x1
#define _COG1CON0_G1MD1_LENGTH                              0x1
#define _COG1CON0_G1MD1_MASK                                0x2
#define _COG1CON0_G1MD2_POSN                                0x2
#define _COG1CON0_G1MD2_POSITION                            0x2
#define _COG1CON0_G1MD2_SIZE                                0x1
#define _COG1CON0_G1MD2_LENGTH                              0x1
#define _COG1CON0_G1MD2_MASK                                0x4
#define _COG1CON0_G1CS0_POSN                                0x3
#define _COG1CON0_G1CS0_POSITION                            0x3
#define _COG1CON0_G1CS0_SIZE                                0x1
#define _COG1CON0_G1CS0_LENGTH                              0x1
#define _COG1CON0_G1CS0_MASK                                0x8
#define _COG1CON0_G1CS1_POSN                                0x4
#define _COG1CON0_G1CS1_POSITION                            0x4
#define _COG1CON0_G1CS1_SIZE                                0x1
#define _COG1CON0_G1CS1_LENGTH                              0x1
#define _COG1CON0_G1CS1_MASK                                0x10

// Register: COG1CON1
#define COG1CON1 COG1CON1
extern volatile unsigned char           COG1CON1            __at(0x694);
#ifndef _LIB_BUILD
asm("COG1CON1 equ 0694h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POLA                   :1;
        unsigned POLB                   :1;
        unsigned POLC                   :1;
        unsigned POLD                   :1;
        unsigned                        :2;
        unsigned FDBS                   :1;
        unsigned RDBS                   :1;
    };
    struct {
        unsigned G1POLA                 :1;
        unsigned G1POLB                 :1;
        unsigned G1POLC                 :1;
        unsigned G1POLD                 :1;
        unsigned                        :2;
        unsigned G1FDBS                 :1;
        unsigned G1RDBS                 :1;
    };
} COG1CON1bits_t;
extern volatile COG1CON1bits_t COG1CON1bits __at(0x694);
// bitfield macros
#define _COG1CON1_POLA_POSN                                 0x0
#define _COG1CON1_POLA_POSITION                             0x0
#define _COG1CON1_POLA_SIZE                                 0x1
#define _COG1CON1_POLA_LENGTH                               0x1
#define _COG1CON1_POLA_MASK                                 0x1
#define _COG1CON1_POLB_POSN                                 0x1
#define _COG1CON1_POLB_POSITION                             0x1
#define _COG1CON1_POLB_SIZE                                 0x1
#define _COG1CON1_POLB_LENGTH                               0x1
#define _COG1CON1_POLB_MASK                                 0x2
#define _COG1CON1_POLC_POSN                                 0x2
#define _COG1CON1_POLC_POSITION                             0x2
#define _COG1CON1_POLC_SIZE                                 0x1
#define _COG1CON1_POLC_LENGTH                               0x1
#define _COG1CON1_POLC_MASK                                 0x4
#define _COG1CON1_POLD_POSN                                 0x3
#define _COG1CON1_POLD_POSITION                             0x3
#define _COG1CON1_POLD_SIZE                                 0x1
#define _COG1CON1_POLD_LENGTH                               0x1
#define _COG1CON1_POLD_MASK                                 0x8
#define _COG1CON1_FDBS_POSN                                 0x6
#define _COG1CON1_FDBS_POSITION                             0x6
#define _COG1CON1_FDBS_SIZE                                 0x1
#define _COG1CON1_FDBS_LENGTH                               0x1
#define _COG1CON1_FDBS_MASK                                 0x40
#define _COG1CON1_RDBS_POSN                                 0x7
#define _COG1CON1_RDBS_POSITION                             0x7
#define _COG1CON1_RDBS_SIZE                                 0x1
#define _COG1CON1_RDBS_LENGTH                               0x1
#define _COG1CON1_RDBS_MASK                                 0x80
#define _COG1CON1_G1POLA_POSN                               0x0
#define _COG1CON1_G1POLA_POSITION                           0x0
#define _COG1CON1_G1POLA_SIZE                               0x1
#define _COG1CON1_G1POLA_LENGTH                             0x1
#define _COG1CON1_G1POLA_MASK                               0x1
#define _COG1CON1_G1POLB_POSN                               0x1
#define _COG1CON1_G1POLB_POSITION                           0x1
#define _COG1CON1_G1POLB_SIZE                               0x1
#define _COG1CON1_G1POLB_LENGTH                             0x1
#define _COG1CON1_G1POLB_MASK                               0x2
#define _COG1CON1_G1POLC_POSN                               0x2
#define _COG1CON1_G1POLC_POSITION                           0x2
#define _COG1CON1_G1POLC_SIZE                               0x1
#define _COG1CON1_G1POLC_LENGTH                             0x1
#define _COG1CON1_G1POLC_MASK                               0x4
#define _COG1CON1_G1POLD_POSN                               0x3
#define _COG1CON1_G1POLD_POSITION                           0x3
#define _COG1CON1_G1POLD_SIZE                               0x1
#define _COG1CON1_G1POLD_LENGTH                             0x1
#define _COG1CON1_G1POLD_MASK                               0x8
#define _COG1CON1_G1FDBS_POSN                               0x6
#define _COG1CON1_G1FDBS_POSITION                           0x6
#define _COG1CON1_G1FDBS_SIZE                               0x1
#define _COG1CON1_G1FDBS_LENGTH                             0x1
#define _COG1CON1_G1FDBS_MASK                               0x40
#define _COG1CON1_G1RDBS_POSN                               0x7
#define _COG1CON1_G1RDBS_POSITION                           0x7
#define _COG1CON1_G1RDBS_SIZE                               0x1
#define _COG1CON1_G1RDBS_LENGTH                             0x1
#define _COG1CON1_G1RDBS_MASK                               0x80

// Register: COG1RIS0
#define COG1RIS0 COG1RIS0
extern volatile unsigned char           COG1RIS0            __at(0x695);
#ifndef _LIB_BUILD
asm("COG1RIS0 equ 0695h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RIS0                   :1;
        unsigned RIS1                   :1;
        unsigned RIS2                   :1;
        unsigned RIS3                   :1;
        unsigned RIS4                   :1;
        unsigned RIS5                   :1;
        unsigned RIS6                   :1;
        unsigned RIS7                   :1;
    };
    struct {
        unsigned G1RIS0                 :1;
        unsigned G1RIS1                 :1;
        unsigned G1RIS2                 :1;
        unsigned G1RIS3                 :1;
        unsigned G1RIS4                 :1;
        unsigned G1RIS5                 :1;
        unsigned G1RIS6                 :1;
        unsigned G1RIS7                 :1;
    };
} COG1RIS0bits_t;
extern volatile COG1RIS0bits_t COG1RIS0bits __at(0x695);
// bitfield macros
#define _COG1RIS0_RIS0_POSN                                 0x0
#define _COG1RIS0_RIS0_POSITION                             0x0
#define _COG1RIS0_RIS0_SIZE                                 0x1
#define _COG1RIS0_RIS0_LENGTH                               0x1
#define _COG1RIS0_RIS0_MASK                                 0x1
#define _COG1RIS0_RIS1_POSN                                 0x1
#define _COG1RIS0_RIS1_POSITION                             0x1
#define _COG1RIS0_RIS1_SIZE                                 0x1
#define _COG1RIS0_RIS1_LENGTH                               0x1
#define _COG1RIS0_RIS1_MASK                                 0x2
#define _COG1RIS0_RIS2_POSN                                 0x2
#define _COG1RIS0_RIS2_POSITION                             0x2
#define _COG1RIS0_RIS2_SIZE                                 0x1
#define _COG1RIS0_RIS2_LENGTH                               0x1
#define _COG1RIS0_RIS2_MASK                                 0x4
#define _COG1RIS0_RIS3_POSN                                 0x3
#define _COG1RIS0_RIS3_POSITION                             0x3
#define _COG1RIS0_RIS3_SIZE                                 0x1
#define _COG1RIS0_RIS3_LENGTH                               0x1
#define _COG1RIS0_RIS3_MASK                                 0x8
#define _COG1RIS0_RIS4_POSN                                 0x4
#define _COG1RIS0_RIS4_POSITION                             0x4
#define _COG1RIS0_RIS4_SIZE                                 0x1
#define _COG1RIS0_RIS4_LENGTH                               0x1
#define _COG1RIS0_RIS4_MASK                                 0x10
#define _COG1RIS0_RIS5_POSN                                 0x5
#define _COG1RIS0_RIS5_POSITION                             0x5
#define _COG1RIS0_RIS5_SIZE                                 0x1
#define _COG1RIS0_RIS5_LENGTH                               0x1
#define _COG1RIS0_RIS5_MASK                                 0x20
#define _COG1RIS0_RIS6_POSN                                 0x6
#define _COG1RIS0_RIS6_POSITION                             0x6
#define _COG1RIS0_RIS6_SIZE                                 0x1
#define _COG1RIS0_RIS6_LENGTH                               0x1
#define _COG1RIS0_RIS6_MASK                                 0x40
#define _COG1RIS0_RIS7_POSN                                 0x7
#define _COG1RIS0_RIS7_POSITION                             0x7
#define _COG1RIS0_RIS7_SIZE                                 0x1
#define _COG1RIS0_RIS7_LENGTH                               0x1
#define _COG1RIS0_RIS7_MASK                                 0x80
#define _COG1RIS0_G1RIS0_POSN                               0x0
#define _COG1RIS0_G1RIS0_POSITION                           0x0
#define _COG1RIS0_G1RIS0_SIZE                               0x1
#define _COG1RIS0_G1RIS0_LENGTH                             0x1
#define _COG1RIS0_G1RIS0_MASK                               0x1
#define _COG1RIS0_G1RIS1_POSN                               0x1
#define _COG1RIS0_G1RIS1_POSITION                           0x1
#define _COG1RIS0_G1RIS1_SIZE                               0x1
#define _COG1RIS0_G1RIS1_LENGTH                             0x1
#define _COG1RIS0_G1RIS1_MASK                               0x2
#define _COG1RIS0_G1RIS2_POSN                               0x2
#define _COG1RIS0_G1RIS2_POSITION                           0x2
#define _COG1RIS0_G1RIS2_SIZE                               0x1
#define _COG1RIS0_G1RIS2_LENGTH                             0x1
#define _COG1RIS0_G1RIS2_MASK                               0x4
#define _COG1RIS0_G1RIS3_POSN                               0x3
#define _COG1RIS0_G1RIS3_POSITION                           0x3
#define _COG1RIS0_G1RIS3_SIZE                               0x1
#define _COG1RIS0_G1RIS3_LENGTH                             0x1
#define _COG1RIS0_G1RIS3_MASK                               0x8
#define _COG1RIS0_G1RIS4_POSN                               0x4
#define _COG1RIS0_G1RIS4_POSITION                           0x4
#define _COG1RIS0_G1RIS4_SIZE                               0x1
#define _COG1RIS0_G1RIS4_LENGTH                             0x1
#define _COG1RIS0_G1RIS4_MASK                               0x10
#define _COG1RIS0_G1RIS5_POSN                               0x5
#define _COG1RIS0_G1RIS5_POSITION                           0x5
#define _COG1RIS0_G1RIS5_SIZE                               0x1
#define _COG1RIS0_G1RIS5_LENGTH                             0x1
#define _COG1RIS0_G1RIS5_MASK                               0x20
#define _COG1RIS0_G1RIS6_POSN                               0x6
#define _COG1RIS0_G1RIS6_POSITION                           0x6
#define _COG1RIS0_G1RIS6_SIZE                               0x1
#define _COG1RIS0_G1RIS6_LENGTH                             0x1
#define _COG1RIS0_G1RIS6_MASK                               0x40
#define _COG1RIS0_G1RIS7_POSN                               0x7
#define _COG1RIS0_G1RIS7_POSITION                           0x7
#define _COG1RIS0_G1RIS7_SIZE                               0x1
#define _COG1RIS0_G1RIS7_LENGTH                             0x1
#define _COG1RIS0_G1RIS7_MASK                               0x80

// Register: COG1RIS1
#define COG1RIS1 COG1RIS1
extern volatile unsigned char           COG1RIS1            __at(0x696);
#ifndef _LIB_BUILD
asm("COG1RIS1 equ 0696h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RIS8                   :1;
        unsigned RIS9                   :1;
        unsigned RIS10                  :1;
        unsigned RIS11                  :1;
        unsigned RIS12                  :1;
        unsigned RIS13                  :1;
        unsigned RIS14                  :1;
        unsigned RIS15                  :1;
    };
    struct {
        unsigned G1RIS8                 :1;
        unsigned G1RIS9                 :1;
        unsigned G1RIS10                :1;
        unsigned G1RIS11                :1;
        unsigned G1RIS12                :1;
        unsigned G1RIS13                :1;
        unsigned G1RIS14                :1;
        unsigned G1RIS15                :1;
    };
} COG1RIS1bits_t;
extern volatile COG1RIS1bits_t COG1RIS1bits __at(0x696);
// bitfield macros
#define _COG1RIS1_RIS8_POSN                                 0x0
#define _COG1RIS1_RIS8_POSITION                             0x0
#define _COG1RIS1_RIS8_SIZE                                 0x1
#define _COG1RIS1_RIS8_LENGTH                               0x1
#define _COG1RIS1_RIS8_MASK                                 0x1
#define _COG1RIS1_RIS9_POSN                                 0x1
#define _COG1RIS1_RIS9_POSITION                             0x1
#define _COG1RIS1_RIS9_SIZE                                 0x1
#define _COG1RIS1_RIS9_LENGTH                               0x1
#define _COG1RIS1_RIS9_MASK                                 0x2
#define _COG1RIS1_RIS10_POSN                                0x2
#define _COG1RIS1_RIS10_POSITION                            0x2
#define _COG1RIS1_RIS10_SIZE                                0x1
#define _COG1RIS1_RIS10_LENGTH                              0x1
#define _COG1RIS1_RIS10_MASK                                0x4
#define _COG1RIS1_RIS11_POSN                                0x3
#define _COG1RIS1_RIS11_POSITION                            0x3
#define _COG1RIS1_RIS11_SIZE                                0x1
#define _COG1RIS1_RIS11_LENGTH                              0x1
#define _COG1RIS1_RIS11_MASK                                0x8
#define _COG1RIS1_RIS12_POSN                                0x4
#define _COG1RIS1_RIS12_POSITION                            0x4
#define _COG1RIS1_RIS12_SIZE                                0x1
#define _COG1RIS1_RIS12_LENGTH                              0x1
#define _COG1RIS1_RIS12_MASK                                0x10
#define _COG1RIS1_RIS13_POSN                                0x5
#define _COG1RIS1_RIS13_POSITION                            0x5
#define _COG1RIS1_RIS13_SIZE                                0x1
#define _COG1RIS1_RIS13_LENGTH                              0x1
#define _COG1RIS1_RIS13_MASK                                0x20
#define _COG1RIS1_RIS14_POSN                                0x6
#define _COG1RIS1_RIS14_POSITION                            0x6
#define _COG1RIS1_RIS14_SIZE                                0x1
#define _COG1RIS1_RIS14_LENGTH                              0x1
#define _COG1RIS1_RIS14_MASK                                0x40
#define _COG1RIS1_RIS15_POSN                                0x7
#define _COG1RIS1_RIS15_POSITION                            0x7
#define _COG1RIS1_RIS15_SIZE                                0x1
#define _COG1RIS1_RIS15_LENGTH                              0x1
#define _COG1RIS1_RIS15_MASK                                0x80
#define _COG1RIS1_G1RIS8_POSN                               0x0
#define _COG1RIS1_G1RIS8_POSITION                           0x0
#define _COG1RIS1_G1RIS8_SIZE                               0x1
#define _COG1RIS1_G1RIS8_LENGTH                             0x1
#define _COG1RIS1_G1RIS8_MASK                               0x1
#define _COG1RIS1_G1RIS9_POSN                               0x1
#define _COG1RIS1_G1RIS9_POSITION                           0x1
#define _COG1RIS1_G1RIS9_SIZE                               0x1
#define _COG1RIS1_G1RIS9_LENGTH                             0x1
#define _COG1RIS1_G1RIS9_MASK                               0x2
#define _COG1RIS1_G1RIS10_POSN                              0x2
#define _COG1RIS1_G1RIS10_POSITION                          0x2
#define _COG1RIS1_G1RIS10_SIZE                              0x1
#define _COG1RIS1_G1RIS10_LENGTH                            0x1
#define _COG1RIS1_G1RIS10_MASK                              0x4
#define _COG1RIS1_G1RIS11_POSN                              0x3
#define _COG1RIS1_G1RIS11_POSITION                          0x3
#define _COG1RIS1_G1RIS11_SIZE                              0x1
#define _COG1RIS1_G1RIS11_LENGTH                            0x1
#define _COG1RIS1_G1RIS11_MASK                              0x8
#define _COG1RIS1_G1RIS12_POSN                              0x4
#define _COG1RIS1_G1RIS12_POSITION                          0x4
#define _COG1RIS1_G1RIS12_SIZE                              0x1
#define _COG1RIS1_G1RIS12_LENGTH                            0x1
#define _COG1RIS1_G1RIS12_MASK                              0x10
#define _COG1RIS1_G1RIS13_POSN                              0x5
#define _COG1RIS1_G1RIS13_POSITION                          0x5
#define _COG1RIS1_G1RIS13_SIZE                              0x1
#define _COG1RIS1_G1RIS13_LENGTH                            0x1
#define _COG1RIS1_G1RIS13_MASK                              0x20
#define _COG1RIS1_G1RIS14_POSN                              0x6
#define _COG1RIS1_G1RIS14_POSITION                          0x6
#define _COG1RIS1_G1RIS14_SIZE                              0x1
#define _COG1RIS1_G1RIS14_LENGTH                            0x1
#define _COG1RIS1_G1RIS14_MASK                              0x40
#define _COG1RIS1_G1RIS15_POSN                              0x7
#define _COG1RIS1_G1RIS15_POSITION                          0x7
#define _COG1RIS1_G1RIS15_SIZE                              0x1
#define _COG1RIS1_G1RIS15_LENGTH                            0x1
#define _COG1RIS1_G1RIS15_MASK                              0x80

// Register: COG1RSIM0
#define COG1RSIM0 COG1RSIM0
extern volatile unsigned char           COG1RSIM0           __at(0x697);
#ifndef _LIB_BUILD
asm("COG1RSIM0 equ 0697h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RSIM0                  :1;
        unsigned RSIM1                  :1;
        unsigned RSIM2                  :1;
        unsigned RSIM3                  :1;
        unsigned RSIM4                  :1;
        unsigned RSIM5                  :1;
        unsigned RSIM6                  :1;
        unsigned RSIM7                  :1;
    };
    struct {
        unsigned G1RSIM0                :1;
        unsigned G1RSIM1                :1;
        unsigned G1RSIM2                :1;
        unsigned G1RSIM3                :1;
        unsigned G1RSIM4                :1;
        unsigned G1RSIM5                :1;
        unsigned G1RSIM6                :1;
        unsigned G1RSIM7                :1;
    };
} COG1RSIM0bits_t;
extern volatile COG1RSIM0bits_t COG1RSIM0bits __at(0x697);
// bitfield macros
#define _COG1RSIM0_RSIM0_POSN                               0x0
#define _COG1RSIM0_RSIM0_POSITION                           0x0
#define _COG1RSIM0_RSIM0_SIZE                               0x1
#define _COG1RSIM0_RSIM0_LENGTH                             0x1
#define _COG1RSIM0_RSIM0_MASK                               0x1
#define _COG1RSIM0_RSIM1_POSN                               0x1
#define _COG1RSIM0_RSIM1_POSITION                           0x1
#define _COG1RSIM0_RSIM1_SIZE                               0x1
#define _COG1RSIM0_RSIM1_LENGTH                             0x1
#define _COG1RSIM0_RSIM1_MASK                               0x2
#define _COG1RSIM0_RSIM2_POSN                               0x2
#define _COG1RSIM0_RSIM2_POSITION                           0x2
#define _COG1RSIM0_RSIM2_SIZE                               0x1
#define _COG1RSIM0_RSIM2_LENGTH                             0x1
#define _COG1RSIM0_RSIM2_MASK                               0x4
#define _COG1RSIM0_RSIM3_POSN                               0x3
#define _COG1RSIM0_RSIM3_POSITION                           0x3
#define _COG1RSIM0_RSIM3_SIZE                               0x1
#define _COG1RSIM0_RSIM3_LENGTH                             0x1
#define _COG1RSIM0_RSIM3_MASK                               0x8
#define _COG1RSIM0_RSIM4_POSN                               0x4
#define _COG1RSIM0_RSIM4_POSITION                           0x4
#define _COG1RSIM0_RSIM4_SIZE                               0x1
#define _COG1RSIM0_RSIM4_LENGTH                             0x1
#define _COG1RSIM0_RSIM4_MASK                               0x10
#define _COG1RSIM0_RSIM5_POSN                               0x5
#define _COG1RSIM0_RSIM5_POSITION                           0x5
#define _COG1RSIM0_RSIM5_SIZE                               0x1
#define _COG1RSIM0_RSIM5_LENGTH                             0x1
#define _COG1RSIM0_RSIM5_MASK                               0x20
#define _COG1RSIM0_RSIM6_POSN                               0x6
#define _COG1RSIM0_RSIM6_POSITION                           0x6
#define _COG1RSIM0_RSIM6_SIZE                               0x1
#define _COG1RSIM0_RSIM6_LENGTH                             0x1
#define _COG1RSIM0_RSIM6_MASK                               0x40
#define _COG1RSIM0_RSIM7_POSN                               0x7
#define _COG1RSIM0_RSIM7_POSITION                           0x7
#define _COG1RSIM0_RSIM7_SIZE                               0x1
#define _COG1RSIM0_RSIM7_LENGTH                             0x1
#define _COG1RSIM0_RSIM7_MASK                               0x80
#define _COG1RSIM0_G1RSIM0_POSN                             0x0
#define _COG1RSIM0_G1RSIM0_POSITION                         0x0
#define _COG1RSIM0_G1RSIM0_SIZE                             0x1
#define _COG1RSIM0_G1RSIM0_LENGTH                           0x1
#define _COG1RSIM0_G1RSIM0_MASK                             0x1
#define _COG1RSIM0_G1RSIM1_POSN                             0x1
#define _COG1RSIM0_G1RSIM1_POSITION                         0x1
#define _COG1RSIM0_G1RSIM1_SIZE                             0x1
#define _COG1RSIM0_G1RSIM1_LENGTH                           0x1
#define _COG1RSIM0_G1RSIM1_MASK                             0x2
#define _COG1RSIM0_G1RSIM2_POSN                             0x2
#define _COG1RSIM0_G1RSIM2_POSITION                         0x2
#define _COG1RSIM0_G1RSIM2_SIZE                             0x1
#define _COG1RSIM0_G1RSIM2_LENGTH                           0x1
#define _COG1RSIM0_G1RSIM2_MASK                             0x4
#define _COG1RSIM0_G1RSIM3_POSN                             0x3
#define _COG1RSIM0_G1RSIM3_POSITION                         0x3
#define _COG1RSIM0_G1RSIM3_SIZE                             0x1
#define _COG1RSIM0_G1RSIM3_LENGTH                           0x1
#define _COG1RSIM0_G1RSIM3_MASK                             0x8
#define _COG1RSIM0_G1RSIM4_POSN                             0x4
#define _COG1RSIM0_G1RSIM4_POSITION                         0x4
#define _COG1RSIM0_G1RSIM4_SIZE                             0x1
#define _COG1RSIM0_G1RSIM4_LENGTH                           0x1
#define _COG1RSIM0_G1RSIM4_MASK                             0x10
#define _COG1RSIM0_G1RSIM5_POSN                             0x5
#define _COG1RSIM0_G1RSIM5_POSITION                         0x5
#define _COG1RSIM0_G1RSIM5_SIZE                             0x1
#define _COG1RSIM0_G1RSIM5_LENGTH                           0x1
#define _COG1RSIM0_G1RSIM5_MASK                             0x20
#define _COG1RSIM0_G1RSIM6_POSN                             0x6
#define _COG1RSIM0_G1RSIM6_POSITION                         0x6
#define _COG1RSIM0_G1RSIM6_SIZE                             0x1
#define _COG1RSIM0_G1RSIM6_LENGTH                           0x1
#define _COG1RSIM0_G1RSIM6_MASK                             0x40
#define _COG1RSIM0_G1RSIM7_POSN                             0x7
#define _COG1RSIM0_G1RSIM7_POSITION                         0x7
#define _COG1RSIM0_G1RSIM7_SIZE                             0x1
#define _COG1RSIM0_G1RSIM7_LENGTH                           0x1
#define _COG1RSIM0_G1RSIM7_MASK                             0x80

// Register: COG1RSIM1
#define COG1RSIM1 COG1RSIM1
extern volatile unsigned char           COG1RSIM1           __at(0x698);
#ifndef _LIB_BUILD
asm("COG1RSIM1 equ 0698h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RSIM8                  :1;
        unsigned RSIM9                  :1;
        unsigned RSIM10                 :1;
        unsigned RSIM11                 :1;
        unsigned RSIM12                 :1;
        unsigned RSIM13                 :1;
        unsigned RSIM14                 :1;
        unsigned RSIM15                 :1;
    };
    struct {
        unsigned G1RSIM8                :1;
        unsigned G1RSIM9                :1;
        unsigned G1RSIM10               :1;
        unsigned G1RSIM11               :1;
        unsigned G1RSIM12               :1;
        unsigned G1RSIM13               :1;
        unsigned G1RSIM14               :1;
        unsigned G1RSIM15               :1;
    };
} COG1RSIM1bits_t;
extern volatile COG1RSIM1bits_t COG1RSIM1bits __at(0x698);
// bitfield macros
#define _COG1RSIM1_RSIM8_POSN                               0x0
#define _COG1RSIM1_RSIM8_POSITION                           0x0
#define _COG1RSIM1_RSIM8_SIZE                               0x1
#define _COG1RSIM1_RSIM8_LENGTH                             0x1
#define _COG1RSIM1_RSIM8_MASK                               0x1
#define _COG1RSIM1_RSIM9_POSN                               0x1
#define _COG1RSIM1_RSIM9_POSITION                           0x1
#define _COG1RSIM1_RSIM9_SIZE                               0x1
#define _COG1RSIM1_RSIM9_LENGTH                             0x1
#define _COG1RSIM1_RSIM9_MASK                               0x2
#define _COG1RSIM1_RSIM10_POSN                              0x2
#define _COG1RSIM1_RSIM10_POSITION                          0x2
#define _COG1RSIM1_RSIM10_SIZE                              0x1
#define _COG1RSIM1_RSIM10_LENGTH                            0x1
#define _COG1RSIM1_RSIM10_MASK                              0x4
#define _COG1RSIM1_RSIM11_POSN                              0x3
#define _COG1RSIM1_RSIM11_POSITION                          0x3
#define _COG1RSIM1_RSIM11_SIZE                              0x1
#define _COG1RSIM1_RSIM11_LENGTH                            0x1
#define _COG1RSIM1_RSIM11_MASK                              0x8
#define _COG1RSIM1_RSIM12_POSN                              0x4
#define _COG1RSIM1_RSIM12_POSITION                          0x4
#define _COG1RSIM1_RSIM12_SIZE                              0x1
#define _COG1RSIM1_RSIM12_LENGTH                            0x1
#define _COG1RSIM1_RSIM12_MASK                              0x10
#define _COG1RSIM1_RSIM13_POSN                              0x5
#define _COG1RSIM1_RSIM13_POSITION                          0x5
#define _COG1RSIM1_RSIM13_SIZE                              0x1
#define _COG1RSIM1_RSIM13_LENGTH                            0x1
#define _COG1RSIM1_RSIM13_MASK                              0x20
#define _COG1RSIM1_RSIM14_POSN                              0x6
#define _COG1RSIM1_RSIM14_POSITION                          0x6
#define _COG1RSIM1_RSIM14_SIZE                              0x1
#define _COG1RSIM1_RSIM14_LENGTH                            0x1
#define _COG1RSIM1_RSIM14_MASK                              0x40
#define _COG1RSIM1_RSIM15_POSN                              0x7
#define _COG1RSIM1_RSIM15_POSITION                          0x7
#define _COG1RSIM1_RSIM15_SIZE                              0x1
#define _COG1RSIM1_RSIM15_LENGTH                            0x1
#define _COG1RSIM1_RSIM15_MASK                              0x80
#define _COG1RSIM1_G1RSIM8_POSN                             0x0
#define _COG1RSIM1_G1RSIM8_POSITION                         0x0
#define _COG1RSIM1_G1RSIM8_SIZE                             0x1
#define _COG1RSIM1_G1RSIM8_LENGTH                           0x1
#define _COG1RSIM1_G1RSIM8_MASK                             0x1
#define _COG1RSIM1_G1RSIM9_POSN                             0x1
#define _COG1RSIM1_G1RSIM9_POSITION                         0x1
#define _COG1RSIM1_G1RSIM9_SIZE                             0x1
#define _COG1RSIM1_G1RSIM9_LENGTH                           0x1
#define _COG1RSIM1_G1RSIM9_MASK                             0x2
#define _COG1RSIM1_G1RSIM10_POSN                            0x2
#define _COG1RSIM1_G1RSIM10_POSITION                        0x2
#define _COG1RSIM1_G1RSIM10_SIZE                            0x1
#define _COG1RSIM1_G1RSIM10_LENGTH                          0x1
#define _COG1RSIM1_G1RSIM10_MASK                            0x4
#define _COG1RSIM1_G1RSIM11_POSN                            0x3
#define _COG1RSIM1_G1RSIM11_POSITION                        0x3
#define _COG1RSIM1_G1RSIM11_SIZE                            0x1
#define _COG1RSIM1_G1RSIM11_LENGTH                          0x1
#define _COG1RSIM1_G1RSIM11_MASK                            0x8
#define _COG1RSIM1_G1RSIM12_POSN                            0x4
#define _COG1RSIM1_G1RSIM12_POSITION                        0x4
#define _COG1RSIM1_G1RSIM12_SIZE                            0x1
#define _COG1RSIM1_G1RSIM12_LENGTH                          0x1
#define _COG1RSIM1_G1RSIM12_MASK                            0x10
#define _COG1RSIM1_G1RSIM13_POSN                            0x5
#define _COG1RSIM1_G1RSIM13_POSITION                        0x5
#define _COG1RSIM1_G1RSIM13_SIZE                            0x1
#define _COG1RSIM1_G1RSIM13_LENGTH                          0x1
#define _COG1RSIM1_G1RSIM13_MASK                            0x20
#define _COG1RSIM1_G1RSIM14_POSN                            0x6
#define _COG1RSIM1_G1RSIM14_POSITION                        0x6
#define _COG1RSIM1_G1RSIM14_SIZE                            0x1
#define _COG1RSIM1_G1RSIM14_LENGTH                          0x1
#define _COG1RSIM1_G1RSIM14_MASK                            0x40
#define _COG1RSIM1_G1RSIM15_POSN                            0x7
#define _COG1RSIM1_G1RSIM15_POSITION                        0x7
#define _COG1RSIM1_G1RSIM15_SIZE                            0x1
#define _COG1RSIM1_G1RSIM15_LENGTH                          0x1
#define _COG1RSIM1_G1RSIM15_MASK                            0x80

// Register: COG1FIS0
#define COG1FIS0 COG1FIS0
extern volatile unsigned char           COG1FIS0            __at(0x699);
#ifndef _LIB_BUILD
asm("COG1FIS0 equ 0699h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FIS0                   :1;
        unsigned FIS1                   :1;
        unsigned FIS2                   :1;
        unsigned FIS3                   :1;
        unsigned FIS4                   :1;
        unsigned FIS5                   :1;
        unsigned FIS6                   :1;
        unsigned FIS7                   :1;
    };
    struct {
        unsigned G1FIS0                 :1;
        unsigned G1FIS1                 :1;
        unsigned G1FIS2                 :1;
        unsigned G1FIS3                 :1;
        unsigned G1FIS4                 :1;
        unsigned G1FIS5                 :1;
        unsigned G1FIS6                 :1;
        unsigned G1FIS7                 :1;
    };
} COG1FIS0bits_t;
extern volatile COG1FIS0bits_t COG1FIS0bits __at(0x699);
// bitfield macros
#define _COG1FIS0_FIS0_POSN                                 0x0
#define _COG1FIS0_FIS0_POSITION                             0x0
#define _COG1FIS0_FIS0_SIZE                                 0x1
#define _COG1FIS0_FIS0_LENGTH                               0x1
#define _COG1FIS0_FIS0_MASK                                 0x1
#define _COG1FIS0_FIS1_POSN                                 0x1
#define _COG1FIS0_FIS1_POSITION                             0x1
#define _COG1FIS0_FIS1_SIZE                                 0x1
#define _COG1FIS0_FIS1_LENGTH                               0x1
#define _COG1FIS0_FIS1_MASK                                 0x2
#define _COG1FIS0_FIS2_POSN                                 0x2
#define _COG1FIS0_FIS2_POSITION                             0x2
#define _COG1FIS0_FIS2_SIZE                                 0x1
#define _COG1FIS0_FIS2_LENGTH                               0x1
#define _COG1FIS0_FIS2_MASK                                 0x4
#define _COG1FIS0_FIS3_POSN                                 0x3
#define _COG1FIS0_FIS3_POSITION                             0x3
#define _COG1FIS0_FIS3_SIZE                                 0x1
#define _COG1FIS0_FIS3_LENGTH                               0x1
#define _COG1FIS0_FIS3_MASK                                 0x8
#define _COG1FIS0_FIS4_POSN                                 0x4
#define _COG1FIS0_FIS4_POSITION                             0x4
#define _COG1FIS0_FIS4_SIZE                                 0x1
#define _COG1FIS0_FIS4_LENGTH                               0x1
#define _COG1FIS0_FIS4_MASK                                 0x10
#define _COG1FIS0_FIS5_POSN                                 0x5
#define _COG1FIS0_FIS5_POSITION                             0x5
#define _COG1FIS0_FIS5_SIZE                                 0x1
#define _COG1FIS0_FIS5_LENGTH                               0x1
#define _COG1FIS0_FIS5_MASK                                 0x20
#define _COG1FIS0_FIS6_POSN                                 0x6
#define _COG1FIS0_FIS6_POSITION                             0x6
#define _COG1FIS0_FIS6_SIZE                                 0x1
#define _COG1FIS0_FIS6_LENGTH                               0x1
#define _COG1FIS0_FIS6_MASK                                 0x40
#define _COG1FIS0_FIS7_POSN                                 0x7
#define _COG1FIS0_FIS7_POSITION                             0x7
#define _COG1FIS0_FIS7_SIZE                                 0x1
#define _COG1FIS0_FIS7_LENGTH                               0x1
#define _COG1FIS0_FIS7_MASK                                 0x80
#define _COG1FIS0_G1FIS0_POSN                               0x0
#define _COG1FIS0_G1FIS0_POSITION                           0x0
#define _COG1FIS0_G1FIS0_SIZE                               0x1
#define _COG1FIS0_G1FIS0_LENGTH                             0x1
#define _COG1FIS0_G1FIS0_MASK                               0x1
#define _COG1FIS0_G1FIS1_POSN                               0x1
#define _COG1FIS0_G1FIS1_POSITION                           0x1
#define _COG1FIS0_G1FIS1_SIZE                               0x1
#define _COG1FIS0_G1FIS1_LENGTH                             0x1
#define _COG1FIS0_G1FIS1_MASK                               0x2
#define _COG1FIS0_G1FIS2_POSN                               0x2
#define _COG1FIS0_G1FIS2_POSITION                           0x2
#define _COG1FIS0_G1FIS2_SIZE                               0x1
#define _COG1FIS0_G1FIS2_LENGTH                             0x1
#define _COG1FIS0_G1FIS2_MASK                               0x4
#define _COG1FIS0_G1FIS3_POSN                               0x3
#define _COG1FIS0_G1FIS3_POSITION                           0x3
#define _COG1FIS0_G1FIS3_SIZE                               0x1
#define _COG1FIS0_G1FIS3_LENGTH                             0x1
#define _COG1FIS0_G1FIS3_MASK                               0x8
#define _COG1FIS0_G1FIS4_POSN                               0x4
#define _COG1FIS0_G1FIS4_POSITION                           0x4
#define _COG1FIS0_G1FIS4_SIZE                               0x1
#define _COG1FIS0_G1FIS4_LENGTH                             0x1
#define _COG1FIS0_G1FIS4_MASK                               0x10
#define _COG1FIS0_G1FIS5_POSN                               0x5
#define _COG1FIS0_G1FIS5_POSITION                           0x5
#define _COG1FIS0_G1FIS5_SIZE                               0x1
#define _COG1FIS0_G1FIS5_LENGTH                             0x1
#define _COG1FIS0_G1FIS5_MASK                               0x20
#define _COG1FIS0_G1FIS6_POSN                               0x6
#define _COG1FIS0_G1FIS6_POSITION                           0x6
#define _COG1FIS0_G1FIS6_SIZE                               0x1
#define _COG1FIS0_G1FIS6_LENGTH                             0x1
#define _COG1FIS0_G1FIS6_MASK                               0x40
#define _COG1FIS0_G1FIS7_POSN                               0x7
#define _COG1FIS0_G1FIS7_POSITION                           0x7
#define _COG1FIS0_G1FIS7_SIZE                               0x1
#define _COG1FIS0_G1FIS7_LENGTH                             0x1
#define _COG1FIS0_G1FIS7_MASK                               0x80

// Register: COG1FIS1
#define COG1FIS1 COG1FIS1
extern volatile unsigned char           COG1FIS1            __at(0x69A);
#ifndef _LIB_BUILD
asm("COG1FIS1 equ 069Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FIS8                   :1;
        unsigned FIS9                   :1;
        unsigned FIS10                  :1;
        unsigned FIS11                  :1;
        unsigned FIS12                  :1;
        unsigned FIS13                  :1;
        unsigned FIS14                  :1;
        unsigned FIS15                  :1;
    };
    struct {
        unsigned G1FIS8                 :1;
        unsigned G1FIS9                 :1;
        unsigned G1FIS10                :1;
        unsigned G1FIS11                :1;
        unsigned G1FIS12                :1;
        unsigned G1FIS13                :1;
        unsigned G1FIS14                :1;
        unsigned G1FIS15                :1;
    };
} COG1FIS1bits_t;
extern volatile COG1FIS1bits_t COG1FIS1bits __at(0x69A);
// bitfield macros
#define _COG1FIS1_FIS8_POSN                                 0x0
#define _COG1FIS1_FIS8_POSITION                             0x0
#define _COG1FIS1_FIS8_SIZE                                 0x1
#define _COG1FIS1_FIS8_LENGTH                               0x1
#define _COG1FIS1_FIS8_MASK                                 0x1
#define _COG1FIS1_FIS9_POSN                                 0x1
#define _COG1FIS1_FIS9_POSITION                             0x1
#define _COG1FIS1_FIS9_SIZE                                 0x1
#define _COG1FIS1_FIS9_LENGTH                               0x1
#define _COG1FIS1_FIS9_MASK                                 0x2
#define _COG1FIS1_FIS10_POSN                                0x2
#define _COG1FIS1_FIS10_POSITION                            0x2
#define _COG1FIS1_FIS10_SIZE                                0x1
#define _COG1FIS1_FIS10_LENGTH                              0x1
#define _COG1FIS1_FIS10_MASK                                0x4
#define _COG1FIS1_FIS11_POSN                                0x3
#define _COG1FIS1_FIS11_POSITION                            0x3
#define _COG1FIS1_FIS11_SIZE                                0x1
#define _COG1FIS1_FIS11_LENGTH                              0x1
#define _COG1FIS1_FIS11_MASK                                0x8
#define _COG1FIS1_FIS12_POSN                                0x4
#define _COG1FIS1_FIS12_POSITION                            0x4
#define _COG1FIS1_FIS12_SIZE                                0x1
#define _COG1FIS1_FIS12_LENGTH                              0x1
#define _COG1FIS1_FIS12_MASK                                0x10
#define _COG1FIS1_FIS13_POSN                                0x5
#define _COG1FIS1_FIS13_POSITION                            0x5
#define _COG1FIS1_FIS13_SIZE                                0x1
#define _COG1FIS1_FIS13_LENGTH                              0x1
#define _COG1FIS1_FIS13_MASK                                0x20
#define _COG1FIS1_FIS14_POSN                                0x6
#define _COG1FIS1_FIS14_POSITION                            0x6
#define _COG1FIS1_FIS14_SIZE                                0x1
#define _COG1FIS1_FIS14_LENGTH                              0x1
#define _COG1FIS1_FIS14_MASK                                0x40
#define _COG1FIS1_FIS15_POSN                                0x7
#define _COG1FIS1_FIS15_POSITION                            0x7
#define _COG1FIS1_FIS15_SIZE                                0x1
#define _COG1FIS1_FIS15_LENGTH                              0x1
#define _COG1FIS1_FIS15_MASK                                0x80
#define _COG1FIS1_G1FIS8_POSN                               0x0
#define _COG1FIS1_G1FIS8_POSITION                           0x0
#define _COG1FIS1_G1FIS8_SIZE                               0x1
#define _COG1FIS1_G1FIS8_LENGTH                             0x1
#define _COG1FIS1_G1FIS8_MASK                               0x1
#define _COG1FIS1_G1FIS9_POSN                               0x1
#define _COG1FIS1_G1FIS9_POSITION                           0x1
#define _COG1FIS1_G1FIS9_SIZE                               0x1
#define _COG1FIS1_G1FIS9_LENGTH                             0x1
#define _COG1FIS1_G1FIS9_MASK                               0x2
#define _COG1FIS1_G1FIS10_POSN                              0x2
#define _COG1FIS1_G1FIS10_POSITION                          0x2
#define _COG1FIS1_G1FIS10_SIZE                              0x1
#define _COG1FIS1_G1FIS10_LENGTH                            0x1
#define _COG1FIS1_G1FIS10_MASK                              0x4
#define _COG1FIS1_G1FIS11_POSN                              0x3
#define _COG1FIS1_G1FIS11_POSITION                          0x3
#define _COG1FIS1_G1FIS11_SIZE                              0x1
#define _COG1FIS1_G1FIS11_LENGTH                            0x1
#define _COG1FIS1_G1FIS11_MASK                              0x8
#define _COG1FIS1_G1FIS12_POSN                              0x4
#define _COG1FIS1_G1FIS12_POSITION                          0x4
#define _COG1FIS1_G1FIS12_SIZE                              0x1
#define _COG1FIS1_G1FIS12_LENGTH                            0x1
#define _COG1FIS1_G1FIS12_MASK                              0x10
#define _COG1FIS1_G1FIS13_POSN                              0x5
#define _COG1FIS1_G1FIS13_POSITION                          0x5
#define _COG1FIS1_G1FIS13_SIZE                              0x1
#define _COG1FIS1_G1FIS13_LENGTH                            0x1
#define _COG1FIS1_G1FIS13_MASK                              0x20
#define _COG1FIS1_G1FIS14_POSN                              0x6
#define _COG1FIS1_G1FIS14_POSITION                          0x6
#define _COG1FIS1_G1FIS14_SIZE                              0x1
#define _COG1FIS1_G1FIS14_LENGTH                            0x1
#define _COG1FIS1_G1FIS14_MASK                              0x40
#define _COG1FIS1_G1FIS15_POSN                              0x7
#define _COG1FIS1_G1FIS15_POSITION                          0x7
#define _COG1FIS1_G1FIS15_SIZE                              0x1
#define _COG1FIS1_G1FIS15_LENGTH                            0x1
#define _COG1FIS1_G1FIS15_MASK                              0x80

// Register: COG1FSIM0
#define COG1FSIM0 COG1FSIM0
extern volatile unsigned char           COG1FSIM0           __at(0x69B);
#ifndef _LIB_BUILD
asm("COG1FSIM0 equ 069Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSIM0                  :1;
        unsigned FSIM1                  :1;
        unsigned FSIM2                  :1;
        unsigned FSIM3                  :1;
        unsigned FSIM4                  :1;
        unsigned FSIM5                  :1;
        unsigned FSIM6                  :1;
        unsigned FSIM7                  :1;
    };
    struct {
        unsigned G1FSIM0                :1;
        unsigned G1FSIM1                :1;
        unsigned G1FSIM2                :1;
        unsigned G1FSIM3                :1;
        unsigned G1FSIM4                :1;
        unsigned G1FSIM5                :1;
        unsigned G1FSIM6                :1;
        unsigned G1FSIM7                :1;
    };
} COG1FSIM0bits_t;
extern volatile COG1FSIM0bits_t COG1FSIM0bits __at(0x69B);
// bitfield macros
#define _COG1FSIM0_FSIM0_POSN                               0x0
#define _COG1FSIM0_FSIM0_POSITION                           0x0
#define _COG1FSIM0_FSIM0_SIZE                               0x1
#define _COG1FSIM0_FSIM0_LENGTH                             0x1
#define _COG1FSIM0_FSIM0_MASK                               0x1
#define _COG1FSIM0_FSIM1_POSN                               0x1
#define _COG1FSIM0_FSIM1_POSITION                           0x1
#define _COG1FSIM0_FSIM1_SIZE                               0x1
#define _COG1FSIM0_FSIM1_LENGTH                             0x1
#define _COG1FSIM0_FSIM1_MASK                               0x2
#define _COG1FSIM0_FSIM2_POSN                               0x2
#define _COG1FSIM0_FSIM2_POSITION                           0x2
#define _COG1FSIM0_FSIM2_SIZE                               0x1
#define _COG1FSIM0_FSIM2_LENGTH                             0x1
#define _COG1FSIM0_FSIM2_MASK                               0x4
#define _COG1FSIM0_FSIM3_POSN                               0x3
#define _COG1FSIM0_FSIM3_POSITION                           0x3
#define _COG1FSIM0_FSIM3_SIZE                               0x1
#define _COG1FSIM0_FSIM3_LENGTH                             0x1
#define _COG1FSIM0_FSIM3_MASK                               0x8
#define _COG1FSIM0_FSIM4_POSN                               0x4
#define _COG1FSIM0_FSIM4_POSITION                           0x4
#define _COG1FSIM0_FSIM4_SIZE                               0x1
#define _COG1FSIM0_FSIM4_LENGTH                             0x1
#define _COG1FSIM0_FSIM4_MASK                               0x10
#define _COG1FSIM0_FSIM5_POSN                               0x5
#define _COG1FSIM0_FSIM5_POSITION                           0x5
#define _COG1FSIM0_FSIM5_SIZE                               0x1
#define _COG1FSIM0_FSIM5_LENGTH                             0x1
#define _COG1FSIM0_FSIM5_MASK                               0x20
#define _COG1FSIM0_FSIM6_POSN                               0x6
#define _COG1FSIM0_FSIM6_POSITION                           0x6
#define _COG1FSIM0_FSIM6_SIZE                               0x1
#define _COG1FSIM0_FSIM6_LENGTH                             0x1
#define _COG1FSIM0_FSIM6_MASK                               0x40
#define _COG1FSIM0_FSIM7_POSN                               0x7
#define _COG1FSIM0_FSIM7_POSITION                           0x7
#define _COG1FSIM0_FSIM7_SIZE                               0x1
#define _COG1FSIM0_FSIM7_LENGTH                             0x1
#define _COG1FSIM0_FSIM7_MASK                               0x80
#define _COG1FSIM0_G1FSIM0_POSN                             0x0
#define _COG1FSIM0_G1FSIM0_POSITION                         0x0
#define _COG1FSIM0_G1FSIM0_SIZE                             0x1
#define _COG1FSIM0_G1FSIM0_LENGTH                           0x1
#define _COG1FSIM0_G1FSIM0_MASK                             0x1
#define _COG1FSIM0_G1FSIM1_POSN                             0x1
#define _COG1FSIM0_G1FSIM1_POSITION                         0x1
#define _COG1FSIM0_G1FSIM1_SIZE                             0x1
#define _COG1FSIM0_G1FSIM1_LENGTH                           0x1
#define _COG1FSIM0_G1FSIM1_MASK                             0x2
#define _COG1FSIM0_G1FSIM2_POSN                             0x2
#define _COG1FSIM0_G1FSIM2_POSITION                         0x2
#define _COG1FSIM0_G1FSIM2_SIZE                             0x1
#define _COG1FSIM0_G1FSIM2_LENGTH                           0x1
#define _COG1FSIM0_G1FSIM2_MASK                             0x4
#define _COG1FSIM0_G1FSIM3_POSN                             0x3
#define _COG1FSIM0_G1FSIM3_POSITION                         0x3
#define _COG1FSIM0_G1FSIM3_SIZE                             0x1
#define _COG1FSIM0_G1FSIM3_LENGTH                           0x1
#define _COG1FSIM0_G1FSIM3_MASK                             0x8
#define _COG1FSIM0_G1FSIM4_POSN                             0x4
#define _COG1FSIM0_G1FSIM4_POSITION                         0x4
#define _COG1FSIM0_G1FSIM4_SIZE                             0x1
#define _COG1FSIM0_G1FSIM4_LENGTH                           0x1
#define _COG1FSIM0_G1FSIM4_MASK                             0x10
#define _COG1FSIM0_G1FSIM5_POSN                             0x5
#define _COG1FSIM0_G1FSIM5_POSITION                         0x5
#define _COG1FSIM0_G1FSIM5_SIZE                             0x1
#define _COG1FSIM0_G1FSIM5_LENGTH                           0x1
#define _COG1FSIM0_G1FSIM5_MASK                             0x20
#define _COG1FSIM0_G1FSIM6_POSN                             0x6
#define _COG1FSIM0_G1FSIM6_POSITION                         0x6
#define _COG1FSIM0_G1FSIM6_SIZE                             0x1
#define _COG1FSIM0_G1FSIM6_LENGTH                           0x1
#define _COG1FSIM0_G1FSIM6_MASK                             0x40
#define _COG1FSIM0_G1FSIM7_POSN                             0x7
#define _COG1FSIM0_G1FSIM7_POSITION                         0x7
#define _COG1FSIM0_G1FSIM7_SIZE                             0x1
#define _COG1FSIM0_G1FSIM7_LENGTH                           0x1
#define _COG1FSIM0_G1FSIM7_MASK                             0x80

// Register: COG1FSIM1
#define COG1FSIM1 COG1FSIM1
extern volatile unsigned char           COG1FSIM1           __at(0x69C);
#ifndef _LIB_BUILD
asm("COG1FSIM1 equ 069Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSIM8                  :1;
        unsigned FSIM9                  :1;
        unsigned FSIM10                 :1;
        unsigned FSIM11                 :1;
        unsigned FSIM12                 :1;
        unsigned FSIM13                 :1;
        unsigned FSIM14                 :1;
        unsigned FSIM15                 :1;
    };
    struct {
        unsigned G1FSIM8                :1;
        unsigned G1FSIM9                :1;
        unsigned G1FSIM10               :1;
        unsigned G1FSIM11               :1;
        unsigned G1FSIM12               :1;
        unsigned G1FSIM13               :1;
        unsigned G1FSIM14               :1;
        unsigned G1FSIM15               :1;
    };
} COG1FSIM1bits_t;
extern volatile COG1FSIM1bits_t COG1FSIM1bits __at(0x69C);
// bitfield macros
#define _COG1FSIM1_FSIM8_POSN                               0x0
#define _COG1FSIM1_FSIM8_POSITION                           0x0
#define _COG1FSIM1_FSIM8_SIZE                               0x1
#define _COG1FSIM1_FSIM8_LENGTH                             0x1
#define _COG1FSIM1_FSIM8_MASK                               0x1
#define _COG1FSIM1_FSIM9_POSN                               0x1
#define _COG1FSIM1_FSIM9_POSITION                           0x1
#define _COG1FSIM1_FSIM9_SIZE                               0x1
#define _COG1FSIM1_FSIM9_LENGTH                             0x1
#define _COG1FSIM1_FSIM9_MASK                               0x2
#define _COG1FSIM1_FSIM10_POSN                              0x2
#define _COG1FSIM1_FSIM10_POSITION                          0x2
#define _COG1FSIM1_FSIM10_SIZE                              0x1
#define _COG1FSIM1_FSIM10_LENGTH                            0x1
#define _COG1FSIM1_FSIM10_MASK                              0x4
#define _COG1FSIM1_FSIM11_POSN                              0x3
#define _COG1FSIM1_FSIM11_POSITION                          0x3
#define _COG1FSIM1_FSIM11_SIZE                              0x1
#define _COG1FSIM1_FSIM11_LENGTH                            0x1
#define _COG1FSIM1_FSIM11_MASK                              0x8
#define _COG1FSIM1_FSIM12_POSN                              0x4
#define _COG1FSIM1_FSIM12_POSITION                          0x4
#define _COG1FSIM1_FSIM12_SIZE                              0x1
#define _COG1FSIM1_FSIM12_LENGTH                            0x1
#define _COG1FSIM1_FSIM12_MASK                              0x10
#define _COG1FSIM1_FSIM13_POSN                              0x5
#define _COG1FSIM1_FSIM13_POSITION                          0x5
#define _COG1FSIM1_FSIM13_SIZE                              0x1
#define _COG1FSIM1_FSIM13_LENGTH                            0x1
#define _COG1FSIM1_FSIM13_MASK                              0x20
#define _COG1FSIM1_FSIM14_POSN                              0x6
#define _COG1FSIM1_FSIM14_POSITION                          0x6
#define _COG1FSIM1_FSIM14_SIZE                              0x1
#define _COG1FSIM1_FSIM14_LENGTH                            0x1
#define _COG1FSIM1_FSIM14_MASK                              0x40
#define _COG1FSIM1_FSIM15_POSN                              0x7
#define _COG1FSIM1_FSIM15_POSITION                          0x7
#define _COG1FSIM1_FSIM15_SIZE                              0x1
#define _COG1FSIM1_FSIM15_LENGTH                            0x1
#define _COG1FSIM1_FSIM15_MASK                              0x80
#define _COG1FSIM1_G1FSIM8_POSN                             0x0
#define _COG1FSIM1_G1FSIM8_POSITION                         0x0
#define _COG1FSIM1_G1FSIM8_SIZE                             0x1
#define _COG1FSIM1_G1FSIM8_LENGTH                           0x1
#define _COG1FSIM1_G1FSIM8_MASK                             0x1
#define _COG1FSIM1_G1FSIM9_POSN                             0x1
#define _COG1FSIM1_G1FSIM9_POSITION                         0x1
#define _COG1FSIM1_G1FSIM9_SIZE                             0x1
#define _COG1FSIM1_G1FSIM9_LENGTH                           0x1
#define _COG1FSIM1_G1FSIM9_MASK                             0x2
#define _COG1FSIM1_G1FSIM10_POSN                            0x2
#define _COG1FSIM1_G1FSIM10_POSITION                        0x2
#define _COG1FSIM1_G1FSIM10_SIZE                            0x1
#define _COG1FSIM1_G1FSIM10_LENGTH                          0x1
#define _COG1FSIM1_G1FSIM10_MASK                            0x4
#define _COG1FSIM1_G1FSIM11_POSN                            0x3
#define _COG1FSIM1_G1FSIM11_POSITION                        0x3
#define _COG1FSIM1_G1FSIM11_SIZE                            0x1
#define _COG1FSIM1_G1FSIM11_LENGTH                          0x1
#define _COG1FSIM1_G1FSIM11_MASK                            0x8
#define _COG1FSIM1_G1FSIM12_POSN                            0x4
#define _COG1FSIM1_G1FSIM12_POSITION                        0x4
#define _COG1FSIM1_G1FSIM12_SIZE                            0x1
#define _COG1FSIM1_G1FSIM12_LENGTH                          0x1
#define _COG1FSIM1_G1FSIM12_MASK                            0x10
#define _COG1FSIM1_G1FSIM13_POSN                            0x5
#define _COG1FSIM1_G1FSIM13_POSITION                        0x5
#define _COG1FSIM1_G1FSIM13_SIZE                            0x1
#define _COG1FSIM1_G1FSIM13_LENGTH                          0x1
#define _COG1FSIM1_G1FSIM13_MASK                            0x20
#define _COG1FSIM1_G1FSIM14_POSN                            0x6
#define _COG1FSIM1_G1FSIM14_POSITION                        0x6
#define _COG1FSIM1_G1FSIM14_SIZE                            0x1
#define _COG1FSIM1_G1FSIM14_LENGTH                          0x1
#define _COG1FSIM1_G1FSIM14_MASK                            0x40
#define _COG1FSIM1_G1FSIM15_POSN                            0x7
#define _COG1FSIM1_G1FSIM15_POSITION                        0x7
#define _COG1FSIM1_G1FSIM15_SIZE                            0x1
#define _COG1FSIM1_G1FSIM15_LENGTH                          0x1
#define _COG1FSIM1_G1FSIM15_MASK                            0x80

// Register: COG1ASD0
#define COG1ASD0 COG1ASD0
extern volatile unsigned char           COG1ASD0            __at(0x69D);
#ifndef _LIB_BUILD
asm("COG1ASD0 equ 069Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned ASDAC                  :2;
        unsigned ASDBD                  :2;
        unsigned ASREN                  :1;
        unsigned ASE                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned ASDAC0                 :1;
        unsigned ASDAC1                 :1;
        unsigned ASDBD0                 :1;
        unsigned ASDBD1                 :1;
        unsigned ARSEN                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned G1ASDAC                :2;
        unsigned G1ASDBD                :2;
        unsigned G1ARSEN                :1;
        unsigned G1ASE                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned G1ASDAC0               :1;
        unsigned G1ASDAC1               :1;
        unsigned G1ASDBD0               :1;
        unsigned G1ASDBD1               :1;
        unsigned G1ASREN                :1;
    };
} COG1ASD0bits_t;
extern volatile COG1ASD0bits_t COG1ASD0bits __at(0x69D);
// bitfield macros
#define _COG1ASD0_ASDAC_POSN                                0x2
#define _COG1ASD0_ASDAC_POSITION                            0x2
#define _COG1ASD0_ASDAC_SIZE                                0x2
#define _COG1ASD0_ASDAC_LENGTH                              0x2
#define _COG1ASD0_ASDAC_MASK                                0xC
#define _COG1ASD0_ASDBD_POSN                                0x4
#define _COG1ASD0_ASDBD_POSITION                            0x4
#define _COG1ASD0_ASDBD_SIZE                                0x2
#define _COG1ASD0_ASDBD_LENGTH                              0x2
#define _COG1ASD0_ASDBD_MASK                                0x30
#define _COG1ASD0_ASREN_POSN                                0x6
#define _COG1ASD0_ASREN_POSITION                            0x6
#define _COG1ASD0_ASREN_SIZE                                0x1
#define _COG1ASD0_ASREN_LENGTH                              0x1
#define _COG1ASD0_ASREN_MASK                                0x40
#define _COG1ASD0_ASE_POSN                                  0x7
#define _COG1ASD0_ASE_POSITION                              0x7
#define _COG1ASD0_ASE_SIZE                                  0x1
#define _COG1ASD0_ASE_LENGTH                                0x1
#define _COG1ASD0_ASE_MASK                                  0x80
#define _COG1ASD0_ASDAC0_POSN                               0x2
#define _COG1ASD0_ASDAC0_POSITION                           0x2
#define _COG1ASD0_ASDAC0_SIZE                               0x1
#define _COG1ASD0_ASDAC0_LENGTH                             0x1
#define _COG1ASD0_ASDAC0_MASK                               0x4
#define _COG1ASD0_ASDAC1_POSN                               0x3
#define _COG1ASD0_ASDAC1_POSITION                           0x3
#define _COG1ASD0_ASDAC1_SIZE                               0x1
#define _COG1ASD0_ASDAC1_LENGTH                             0x1
#define _COG1ASD0_ASDAC1_MASK                               0x8
#define _COG1ASD0_ASDBD0_POSN                               0x4
#define _COG1ASD0_ASDBD0_POSITION                           0x4
#define _COG1ASD0_ASDBD0_SIZE                               0x1
#define _COG1ASD0_ASDBD0_LENGTH                             0x1
#define _COG1ASD0_ASDBD0_MASK                               0x10
#define _COG1ASD0_ASDBD1_POSN                               0x5
#define _COG1ASD0_ASDBD1_POSITION                           0x5
#define _COG1ASD0_ASDBD1_SIZE                               0x1
#define _COG1ASD0_ASDBD1_LENGTH                             0x1
#define _COG1ASD0_ASDBD1_MASK                               0x20
#define _COG1ASD0_ARSEN_POSN                                0x6
#define _COG1ASD0_ARSEN_POSITION                            0x6
#define _COG1ASD0_ARSEN_SIZE                                0x1
#define _COG1ASD0_ARSEN_LENGTH                              0x1
#define _COG1ASD0_ARSEN_MASK                                0x40
#define _COG1ASD0_G1ASDAC_POSN                              0x2
#define _COG1ASD0_G1ASDAC_POSITION                          0x2
#define _COG1ASD0_G1ASDAC_SIZE                              0x2
#define _COG1ASD0_G1ASDAC_LENGTH                            0x2
#define _COG1ASD0_G1ASDAC_MASK                              0xC
#define _COG1ASD0_G1ASDBD_POSN                              0x4
#define _COG1ASD0_G1ASDBD_POSITION                          0x4
#define _COG1ASD0_G1ASDBD_SIZE                              0x2
#define _COG1ASD0_G1ASDBD_LENGTH                            0x2
#define _COG1ASD0_G1ASDBD_MASK                              0x30
#define _COG1ASD0_G1ARSEN_POSN                              0x6
#define _COG1ASD0_G1ARSEN_POSITION                          0x6
#define _COG1ASD0_G1ARSEN_SIZE                              0x1
#define _COG1ASD0_G1ARSEN_LENGTH                            0x1
#define _COG1ASD0_G1ARSEN_MASK                              0x40
#define _COG1ASD0_G1ASE_POSN                                0x7
#define _COG1ASD0_G1ASE_POSITION                            0x7
#define _COG1ASD0_G1ASE_SIZE                                0x1
#define _COG1ASD0_G1ASE_LENGTH                              0x1
#define _COG1ASD0_G1ASE_MASK                                0x80
#define _COG1ASD0_G1ASDAC0_POSN                             0x2
#define _COG1ASD0_G1ASDAC0_POSITION                         0x2
#define _COG1ASD0_G1ASDAC0_SIZE                             0x1
#define _COG1ASD0_G1ASDAC0_LENGTH                           0x1
#define _COG1ASD0_G1ASDAC0_MASK                             0x4
#define _COG1ASD0_G1ASDAC1_POSN                             0x3
#define _COG1ASD0_G1ASDAC1_POSITION                         0x3
#define _COG1ASD0_G1ASDAC1_SIZE                             0x1
#define _COG1ASD0_G1ASDAC1_LENGTH                           0x1
#define _COG1ASD0_G1ASDAC1_MASK                             0x8
#define _COG1ASD0_G1ASDBD0_POSN                             0x4
#define _COG1ASD0_G1ASDBD0_POSITION                         0x4
#define _COG1ASD0_G1ASDBD0_SIZE                             0x1
#define _COG1ASD0_G1ASDBD0_LENGTH                           0x1
#define _COG1ASD0_G1ASDBD0_MASK                             0x10
#define _COG1ASD0_G1ASDBD1_POSN                             0x5
#define _COG1ASD0_G1ASDBD1_POSITION                         0x5
#define _COG1ASD0_G1ASDBD1_SIZE                             0x1
#define _COG1ASD0_G1ASDBD1_LENGTH                           0x1
#define _COG1ASD0_G1ASDBD1_MASK                             0x20
#define _COG1ASD0_G1ASREN_POSN                              0x6
#define _COG1ASD0_G1ASREN_POSITION                          0x6
#define _COG1ASD0_G1ASREN_SIZE                              0x1
#define _COG1ASD0_G1ASREN_LENGTH                            0x1
#define _COG1ASD0_G1ASREN_MASK                              0x40

// Register: COG1ASD1
#define COG1ASD1 COG1ASD1
extern volatile unsigned char           COG1ASD1            __at(0x69E);
#ifndef _LIB_BUILD
asm("COG1ASD1 equ 069Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned AS0E                   :1;
        unsigned AS1E                   :1;
        unsigned AS2E                   :1;
        unsigned AS3E                   :1;
        unsigned AS4E                   :1;
        unsigned AS5E                   :1;
        unsigned AS6E                   :1;
        unsigned AS7E                   :1;
    };
    struct {
        unsigned G1AS0E                 :1;
        unsigned G1AS1E                 :1;
        unsigned G1AS2E                 :1;
        unsigned G1AS3E                 :1;
        unsigned G1AS4E                 :1;
        unsigned G1AS5E                 :1;
        unsigned G1AS6E                 :1;
        unsigned G1AS7E                 :1;
    };
} COG1ASD1bits_t;
extern volatile COG1ASD1bits_t COG1ASD1bits __at(0x69E);
// bitfield macros
#define _COG1ASD1_AS0E_POSN                                 0x0
#define _COG1ASD1_AS0E_POSITION                             0x0
#define _COG1ASD1_AS0E_SIZE                                 0x1
#define _COG1ASD1_AS0E_LENGTH                               0x1
#define _COG1ASD1_AS0E_MASK                                 0x1
#define _COG1ASD1_AS1E_POSN                                 0x1
#define _COG1ASD1_AS1E_POSITION                             0x1
#define _COG1ASD1_AS1E_SIZE                                 0x1
#define _COG1ASD1_AS1E_LENGTH                               0x1
#define _COG1ASD1_AS1E_MASK                                 0x2
#define _COG1ASD1_AS2E_POSN                                 0x2
#define _COG1ASD1_AS2E_POSITION                             0x2
#define _COG1ASD1_AS2E_SIZE                                 0x1
#define _COG1ASD1_AS2E_LENGTH                               0x1
#define _COG1ASD1_AS2E_MASK                                 0x4
#define _COG1ASD1_AS3E_POSN                                 0x3
#define _COG1ASD1_AS3E_POSITION                             0x3
#define _COG1ASD1_AS3E_SIZE                                 0x1
#define _COG1ASD1_AS3E_LENGTH                               0x1
#define _COG1ASD1_AS3E_MASK                                 0x8
#define _COG1ASD1_AS4E_POSN                                 0x4
#define _COG1ASD1_AS4E_POSITION                             0x4
#define _COG1ASD1_AS4E_SIZE                                 0x1
#define _COG1ASD1_AS4E_LENGTH                               0x1
#define _COG1ASD1_AS4E_MASK                                 0x10
#define _COG1ASD1_AS5E_POSN                                 0x5
#define _COG1ASD1_AS5E_POSITION                             0x5
#define _COG1ASD1_AS5E_SIZE                                 0x1
#define _COG1ASD1_AS5E_LENGTH                               0x1
#define _COG1ASD1_AS5E_MASK                                 0x20
#define _COG1ASD1_AS6E_POSN                                 0x6
#define _COG1ASD1_AS6E_POSITION                             0x6
#define _COG1ASD1_AS6E_SIZE                                 0x1
#define _COG1ASD1_AS6E_LENGTH                               0x1
#define _COG1ASD1_AS6E_MASK                                 0x40
#define _COG1ASD1_AS7E_POSN                                 0x7
#define _COG1ASD1_AS7E_POSITION                             0x7
#define _COG1ASD1_AS7E_SIZE                                 0x1
#define _COG1ASD1_AS7E_LENGTH                               0x1
#define _COG1ASD1_AS7E_MASK                                 0x80
#define _COG1ASD1_G1AS0E_POSN                               0x0
#define _COG1ASD1_G1AS0E_POSITION                           0x0
#define _COG1ASD1_G1AS0E_SIZE                               0x1
#define _COG1ASD1_G1AS0E_LENGTH                             0x1
#define _COG1ASD1_G1AS0E_MASK                               0x1
#define _COG1ASD1_G1AS1E_POSN                               0x1
#define _COG1ASD1_G1AS1E_POSITION                           0x1
#define _COG1ASD1_G1AS1E_SIZE                               0x1
#define _COG1ASD1_G1AS1E_LENGTH                             0x1
#define _COG1ASD1_G1AS1E_MASK                               0x2
#define _COG1ASD1_G1AS2E_POSN                               0x2
#define _COG1ASD1_G1AS2E_POSITION                           0x2
#define _COG1ASD1_G1AS2E_SIZE                               0x1
#define _COG1ASD1_G1AS2E_LENGTH                             0x1
#define _COG1ASD1_G1AS2E_MASK                               0x4
#define _COG1ASD1_G1AS3E_POSN                               0x3
#define _COG1ASD1_G1AS3E_POSITION                           0x3
#define _COG1ASD1_G1AS3E_SIZE                               0x1
#define _COG1ASD1_G1AS3E_LENGTH                             0x1
#define _COG1ASD1_G1AS3E_MASK                               0x8
#define _COG1ASD1_G1AS4E_POSN                               0x4
#define _COG1ASD1_G1AS4E_POSITION                           0x4
#define _COG1ASD1_G1AS4E_SIZE                               0x1
#define _COG1ASD1_G1AS4E_LENGTH                             0x1
#define _COG1ASD1_G1AS4E_MASK                               0x10
#define _COG1ASD1_G1AS5E_POSN                               0x5
#define _COG1ASD1_G1AS5E_POSITION                           0x5
#define _COG1ASD1_G1AS5E_SIZE                               0x1
#define _COG1ASD1_G1AS5E_LENGTH                             0x1
#define _COG1ASD1_G1AS5E_MASK                               0x20
#define _COG1ASD1_G1AS6E_POSN                               0x6
#define _COG1ASD1_G1AS6E_POSITION                           0x6
#define _COG1ASD1_G1AS6E_SIZE                               0x1
#define _COG1ASD1_G1AS6E_LENGTH                             0x1
#define _COG1ASD1_G1AS6E_MASK                               0x40
#define _COG1ASD1_G1AS7E_POSN                               0x7
#define _COG1ASD1_G1AS7E_POSITION                           0x7
#define _COG1ASD1_G1AS7E_SIZE                               0x1
#define _COG1ASD1_G1AS7E_LENGTH                             0x1
#define _COG1ASD1_G1AS7E_MASK                               0x80

// Register: COG1STR
#define COG1STR COG1STR
extern volatile unsigned char           COG1STR             __at(0x69F);
#ifndef _LIB_BUILD
asm("COG1STR equ 069Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned SDATA                  :1;
        unsigned SDATB                  :1;
        unsigned SDATC                  :1;
        unsigned SDATD                  :1;
    };
    struct {
        unsigned G1STRA                 :1;
        unsigned G1STRB                 :1;
        unsigned G1STRC                 :1;
        unsigned G1STRD                 :1;
        unsigned G1SDATA                :1;
        unsigned G1SDATB                :1;
        unsigned G1SDATC                :1;
        unsigned G1SDATD                :1;
    };
} COG1STRbits_t;
extern volatile COG1STRbits_t COG1STRbits __at(0x69F);
// bitfield macros
#define _COG1STR_STRA_POSN                                  0x0
#define _COG1STR_STRA_POSITION                              0x0
#define _COG1STR_STRA_SIZE                                  0x1
#define _COG1STR_STRA_LENGTH                                0x1
#define _COG1STR_STRA_MASK                                  0x1
#define _COG1STR_STRB_POSN                                  0x1
#define _COG1STR_STRB_POSITION                              0x1
#define _COG1STR_STRB_SIZE                                  0x1
#define _COG1STR_STRB_LENGTH                                0x1
#define _COG1STR_STRB_MASK                                  0x2
#define _COG1STR_STRC_POSN                                  0x2
#define _COG1STR_STRC_POSITION                              0x2
#define _COG1STR_STRC_SIZE                                  0x1
#define _COG1STR_STRC_LENGTH                                0x1
#define _COG1STR_STRC_MASK                                  0x4
#define _COG1STR_STRD_POSN                                  0x3
#define _COG1STR_STRD_POSITION                              0x3
#define _COG1STR_STRD_SIZE                                  0x1
#define _COG1STR_STRD_LENGTH                                0x1
#define _COG1STR_STRD_MASK                                  0x8
#define _COG1STR_SDATA_POSN                                 0x4
#define _COG1STR_SDATA_POSITION                             0x4
#define _COG1STR_SDATA_SIZE                                 0x1
#define _COG1STR_SDATA_LENGTH                               0x1
#define _COG1STR_SDATA_MASK                                 0x10
#define _COG1STR_SDATB_POSN                                 0x5
#define _COG1STR_SDATB_POSITION                             0x5
#define _COG1STR_SDATB_SIZE                                 0x1
#define _COG1STR_SDATB_LENGTH                               0x1
#define _COG1STR_SDATB_MASK                                 0x20
#define _COG1STR_SDATC_POSN                                 0x6
#define _COG1STR_SDATC_POSITION                             0x6
#define _COG1STR_SDATC_SIZE                                 0x1
#define _COG1STR_SDATC_LENGTH                               0x1
#define _COG1STR_SDATC_MASK                                 0x40
#define _COG1STR_SDATD_POSN                                 0x7
#define _COG1STR_SDATD_POSITION                             0x7
#define _COG1STR_SDATD_SIZE                                 0x1
#define _COG1STR_SDATD_LENGTH                               0x1
#define _COG1STR_SDATD_MASK                                 0x80
#define _COG1STR_G1STRA_POSN                                0x0
#define _COG1STR_G1STRA_POSITION                            0x0
#define _COG1STR_G1STRA_SIZE                                0x1
#define _COG1STR_G1STRA_LENGTH                              0x1
#define _COG1STR_G1STRA_MASK                                0x1
#define _COG1STR_G1STRB_POSN                                0x1
#define _COG1STR_G1STRB_POSITION                            0x1
#define _COG1STR_G1STRB_SIZE                                0x1
#define _COG1STR_G1STRB_LENGTH                              0x1
#define _COG1STR_G1STRB_MASK                                0x2
#define _COG1STR_G1STRC_POSN                                0x2
#define _COG1STR_G1STRC_POSITION                            0x2
#define _COG1STR_G1STRC_SIZE                                0x1
#define _COG1STR_G1STRC_LENGTH                              0x1
#define _COG1STR_G1STRC_MASK                                0x4
#define _COG1STR_G1STRD_POSN                                0x3
#define _COG1STR_G1STRD_POSITION                            0x3
#define _COG1STR_G1STRD_SIZE                                0x1
#define _COG1STR_G1STRD_LENGTH                              0x1
#define _COG1STR_G1STRD_MASK                                0x8
#define _COG1STR_G1SDATA_POSN                               0x4
#define _COG1STR_G1SDATA_POSITION                           0x4
#define _COG1STR_G1SDATA_SIZE                               0x1
#define _COG1STR_G1SDATA_LENGTH                             0x1
#define _COG1STR_G1SDATA_MASK                               0x10
#define _COG1STR_G1SDATB_POSN                               0x5
#define _COG1STR_G1SDATB_POSITION                           0x5
#define _COG1STR_G1SDATB_SIZE                               0x1
#define _COG1STR_G1SDATB_LENGTH                             0x1
#define _COG1STR_G1SDATB_MASK                               0x20
#define _COG1STR_G1SDATC_POSN                               0x6
#define _COG1STR_G1SDATC_POSITION                           0x6
#define _COG1STR_G1SDATC_SIZE                               0x1
#define _COG1STR_G1SDATC_LENGTH                             0x1
#define _COG1STR_G1SDATC_MASK                               0x40
#define _COG1STR_G1SDATD_POSN                               0x7
#define _COG1STR_G1SDATD_POSITION                           0x7
#define _COG1STR_G1SDATD_SIZE                               0x1
#define _COG1STR_G1SDATD_LENGTH                             0x1
#define _COG1STR_G1SDATD_MASK                               0x80

// Register: COG2PHR
#define COG2PHR COG2PHR
extern volatile unsigned char           COG2PHR             __at(0x70D);
#ifndef _LIB_BUILD
asm("COG2PHR equ 070Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PHR                    :6;
    };
    struct {
        unsigned PHR0                   :1;
        unsigned PHR1                   :1;
        unsigned PHR2                   :1;
        unsigned PHR3                   :1;
        unsigned PHR4                   :1;
        unsigned PHR5                   :1;
    };
    struct {
        unsigned G2PHR0                 :1;
        unsigned G2PHR1                 :1;
        unsigned G2PHR2                 :1;
        unsigned G2PHR3                 :1;
        unsigned G2PHR4                 :1;
        unsigned G2PHR5                 :1;
    };
} COG2PHRbits_t;
extern volatile COG2PHRbits_t COG2PHRbits __at(0x70D);
// bitfield macros
#define _COG2PHR_PHR_POSN                                   0x0
#define _COG2PHR_PHR_POSITION                               0x0
#define _COG2PHR_PHR_SIZE                                   0x6
#define _COG2PHR_PHR_LENGTH                                 0x6
#define _COG2PHR_PHR_MASK                                   0x3F
#define _COG2PHR_PHR0_POSN                                  0x0
#define _COG2PHR_PHR0_POSITION                              0x0
#define _COG2PHR_PHR0_SIZE                                  0x1
#define _COG2PHR_PHR0_LENGTH                                0x1
#define _COG2PHR_PHR0_MASK                                  0x1
#define _COG2PHR_PHR1_POSN                                  0x1
#define _COG2PHR_PHR1_POSITION                              0x1
#define _COG2PHR_PHR1_SIZE                                  0x1
#define _COG2PHR_PHR1_LENGTH                                0x1
#define _COG2PHR_PHR1_MASK                                  0x2
#define _COG2PHR_PHR2_POSN                                  0x2
#define _COG2PHR_PHR2_POSITION                              0x2
#define _COG2PHR_PHR2_SIZE                                  0x1
#define _COG2PHR_PHR2_LENGTH                                0x1
#define _COG2PHR_PHR2_MASK                                  0x4
#define _COG2PHR_PHR3_POSN                                  0x3
#define _COG2PHR_PHR3_POSITION                              0x3
#define _COG2PHR_PHR3_SIZE                                  0x1
#define _COG2PHR_PHR3_LENGTH                                0x1
#define _COG2PHR_PHR3_MASK                                  0x8
#define _COG2PHR_PHR4_POSN                                  0x4
#define _COG2PHR_PHR4_POSITION                              0x4
#define _COG2PHR_PHR4_SIZE                                  0x1
#define _COG2PHR_PHR4_LENGTH                                0x1
#define _COG2PHR_PHR4_MASK                                  0x10
#define _COG2PHR_PHR5_POSN                                  0x5
#define _COG2PHR_PHR5_POSITION                              0x5
#define _COG2PHR_PHR5_SIZE                                  0x1
#define _COG2PHR_PHR5_LENGTH                                0x1
#define _COG2PHR_PHR5_MASK                                  0x20
#define _COG2PHR_G2PHR0_POSN                                0x0
#define _COG2PHR_G2PHR0_POSITION                            0x0
#define _COG2PHR_G2PHR0_SIZE                                0x1
#define _COG2PHR_G2PHR0_LENGTH                              0x1
#define _COG2PHR_G2PHR0_MASK                                0x1
#define _COG2PHR_G2PHR1_POSN                                0x1
#define _COG2PHR_G2PHR1_POSITION                            0x1
#define _COG2PHR_G2PHR1_SIZE                                0x1
#define _COG2PHR_G2PHR1_LENGTH                              0x1
#define _COG2PHR_G2PHR1_MASK                                0x2
#define _COG2PHR_G2PHR2_POSN                                0x2
#define _COG2PHR_G2PHR2_POSITION                            0x2
#define _COG2PHR_G2PHR2_SIZE                                0x1
#define _COG2PHR_G2PHR2_LENGTH                              0x1
#define _COG2PHR_G2PHR2_MASK                                0x4
#define _COG2PHR_G2PHR3_POSN                                0x3
#define _COG2PHR_G2PHR3_POSITION                            0x3
#define _COG2PHR_G2PHR3_SIZE                                0x1
#define _COG2PHR_G2PHR3_LENGTH                              0x1
#define _COG2PHR_G2PHR3_MASK                                0x8
#define _COG2PHR_G2PHR4_POSN                                0x4
#define _COG2PHR_G2PHR4_POSITION                            0x4
#define _COG2PHR_G2PHR4_SIZE                                0x1
#define _COG2PHR_G2PHR4_LENGTH                              0x1
#define _COG2PHR_G2PHR4_MASK                                0x10
#define _COG2PHR_G2PHR5_POSN                                0x5
#define _COG2PHR_G2PHR5_POSITION                            0x5
#define _COG2PHR_G2PHR5_SIZE                                0x1
#define _COG2PHR_G2PHR5_LENGTH                              0x1
#define _COG2PHR_G2PHR5_MASK                                0x20

// Register: COG2PHF
#define COG2PHF COG2PHF
extern volatile unsigned char           COG2PHF             __at(0x70E);
#ifndef _LIB_BUILD
asm("COG2PHF equ 070Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PHF                    :6;
    };
    struct {
        unsigned PHF0                   :1;
        unsigned PHF1                   :1;
        unsigned PHF2                   :1;
        unsigned PHF3                   :1;
        unsigned PHF4                   :1;
        unsigned PHF5                   :1;
    };
    struct {
        unsigned G2PHF0                 :1;
        unsigned G2PHF1                 :1;
        unsigned G2PHF2                 :1;
        unsigned G2PHF3                 :1;
        unsigned G2PHF4                 :1;
        unsigned G2PHF5                 :1;
    };
} COG2PHFbits_t;
extern volatile COG2PHFbits_t COG2PHFbits __at(0x70E);
// bitfield macros
#define _COG2PHF_PHF_POSN                                   0x0
#define _COG2PHF_PHF_POSITION                               0x0
#define _COG2PHF_PHF_SIZE                                   0x6
#define _COG2PHF_PHF_LENGTH                                 0x6
#define _COG2PHF_PHF_MASK                                   0x3F
#define _COG2PHF_PHF0_POSN                                  0x0
#define _COG2PHF_PHF0_POSITION                              0x0
#define _COG2PHF_PHF0_SIZE                                  0x1
#define _COG2PHF_PHF0_LENGTH                                0x1
#define _COG2PHF_PHF0_MASK                                  0x1
#define _COG2PHF_PHF1_POSN                                  0x1
#define _COG2PHF_PHF1_POSITION                              0x1
#define _COG2PHF_PHF1_SIZE                                  0x1
#define _COG2PHF_PHF1_LENGTH                                0x1
#define _COG2PHF_PHF1_MASK                                  0x2
#define _COG2PHF_PHF2_POSN                                  0x2
#define _COG2PHF_PHF2_POSITION                              0x2
#define _COG2PHF_PHF2_SIZE                                  0x1
#define _COG2PHF_PHF2_LENGTH                                0x1
#define _COG2PHF_PHF2_MASK                                  0x4
#define _COG2PHF_PHF3_POSN                                  0x3
#define _COG2PHF_PHF3_POSITION                              0x3
#define _COG2PHF_PHF3_SIZE                                  0x1
#define _COG2PHF_PHF3_LENGTH                                0x1
#define _COG2PHF_PHF3_MASK                                  0x8
#define _COG2PHF_PHF4_POSN                                  0x4
#define _COG2PHF_PHF4_POSITION                              0x4
#define _COG2PHF_PHF4_SIZE                                  0x1
#define _COG2PHF_PHF4_LENGTH                                0x1
#define _COG2PHF_PHF4_MASK                                  0x10
#define _COG2PHF_PHF5_POSN                                  0x5
#define _COG2PHF_PHF5_POSITION                              0x5
#define _COG2PHF_PHF5_SIZE                                  0x1
#define _COG2PHF_PHF5_LENGTH                                0x1
#define _COG2PHF_PHF5_MASK                                  0x20
#define _COG2PHF_G2PHF0_POSN                                0x0
#define _COG2PHF_G2PHF0_POSITION                            0x0
#define _COG2PHF_G2PHF0_SIZE                                0x1
#define _COG2PHF_G2PHF0_LENGTH                              0x1
#define _COG2PHF_G2PHF0_MASK                                0x1
#define _COG2PHF_G2PHF1_POSN                                0x1
#define _COG2PHF_G2PHF1_POSITION                            0x1
#define _COG2PHF_G2PHF1_SIZE                                0x1
#define _COG2PHF_G2PHF1_LENGTH                              0x1
#define _COG2PHF_G2PHF1_MASK                                0x2
#define _COG2PHF_G2PHF2_POSN                                0x2
#define _COG2PHF_G2PHF2_POSITION                            0x2
#define _COG2PHF_G2PHF2_SIZE                                0x1
#define _COG2PHF_G2PHF2_LENGTH                              0x1
#define _COG2PHF_G2PHF2_MASK                                0x4
#define _COG2PHF_G2PHF3_POSN                                0x3
#define _COG2PHF_G2PHF3_POSITION                            0x3
#define _COG2PHF_G2PHF3_SIZE                                0x1
#define _COG2PHF_G2PHF3_LENGTH                              0x1
#define _COG2PHF_G2PHF3_MASK                                0x8
#define _COG2PHF_G2PHF4_POSN                                0x4
#define _COG2PHF_G2PHF4_POSITION                            0x4
#define _COG2PHF_G2PHF4_SIZE                                0x1
#define _COG2PHF_G2PHF4_LENGTH                              0x1
#define _COG2PHF_G2PHF4_MASK                                0x10
#define _COG2PHF_G2PHF5_POSN                                0x5
#define _COG2PHF_G2PHF5_POSITION                            0x5
#define _COG2PHF_G2PHF5_SIZE                                0x1
#define _COG2PHF_G2PHF5_LENGTH                              0x1
#define _COG2PHF_G2PHF5_MASK                                0x20

// Register: COG2BLKR
#define COG2BLKR COG2BLKR
extern volatile unsigned char           COG2BLKR            __at(0x70F);
#ifndef _LIB_BUILD
asm("COG2BLKR equ 070Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BLKR                   :6;
    };
    struct {
        unsigned BLKR0                  :1;
        unsigned BLKR1                  :1;
        unsigned BLKR2                  :1;
        unsigned BLKR3                  :1;
        unsigned BLKR4                  :1;
        unsigned BLKR5                  :1;
    };
    struct {
        unsigned G2BLKR0                :1;
        unsigned G2BLKR1                :1;
        unsigned G2BLKR2                :1;
        unsigned G2BLKR3                :1;
        unsigned G2BLKR4                :1;
        unsigned G2BLKR5                :1;
    };
} COG2BLKRbits_t;
extern volatile COG2BLKRbits_t COG2BLKRbits __at(0x70F);
// bitfield macros
#define _COG2BLKR_BLKR_POSN                                 0x0
#define _COG2BLKR_BLKR_POSITION                             0x0
#define _COG2BLKR_BLKR_SIZE                                 0x6
#define _COG2BLKR_BLKR_LENGTH                               0x6
#define _COG2BLKR_BLKR_MASK                                 0x3F
#define _COG2BLKR_BLKR0_POSN                                0x0
#define _COG2BLKR_BLKR0_POSITION                            0x0
#define _COG2BLKR_BLKR0_SIZE                                0x1
#define _COG2BLKR_BLKR0_LENGTH                              0x1
#define _COG2BLKR_BLKR0_MASK                                0x1
#define _COG2BLKR_BLKR1_POSN                                0x1
#define _COG2BLKR_BLKR1_POSITION                            0x1
#define _COG2BLKR_BLKR1_SIZE                                0x1
#define _COG2BLKR_BLKR1_LENGTH                              0x1
#define _COG2BLKR_BLKR1_MASK                                0x2
#define _COG2BLKR_BLKR2_POSN                                0x2
#define _COG2BLKR_BLKR2_POSITION                            0x2
#define _COG2BLKR_BLKR2_SIZE                                0x1
#define _COG2BLKR_BLKR2_LENGTH                              0x1
#define _COG2BLKR_BLKR2_MASK                                0x4
#define _COG2BLKR_BLKR3_POSN                                0x3
#define _COG2BLKR_BLKR3_POSITION                            0x3
#define _COG2BLKR_BLKR3_SIZE                                0x1
#define _COG2BLKR_BLKR3_LENGTH                              0x1
#define _COG2BLKR_BLKR3_MASK                                0x8
#define _COG2BLKR_BLKR4_POSN                                0x4
#define _COG2BLKR_BLKR4_POSITION                            0x4
#define _COG2BLKR_BLKR4_SIZE                                0x1
#define _COG2BLKR_BLKR4_LENGTH                              0x1
#define _COG2BLKR_BLKR4_MASK                                0x10
#define _COG2BLKR_BLKR5_POSN                                0x5
#define _COG2BLKR_BLKR5_POSITION                            0x5
#define _COG2BLKR_BLKR5_SIZE                                0x1
#define _COG2BLKR_BLKR5_LENGTH                              0x1
#define _COG2BLKR_BLKR5_MASK                                0x20
#define _COG2BLKR_G2BLKR0_POSN                              0x0
#define _COG2BLKR_G2BLKR0_POSITION                          0x0
#define _COG2BLKR_G2BLKR0_SIZE                              0x1
#define _COG2BLKR_G2BLKR0_LENGTH                            0x1
#define _COG2BLKR_G2BLKR0_MASK                              0x1
#define _COG2BLKR_G2BLKR1_POSN                              0x1
#define _COG2BLKR_G2BLKR1_POSITION                          0x1
#define _COG2BLKR_G2BLKR1_SIZE                              0x1
#define _COG2BLKR_G2BLKR1_LENGTH                            0x1
#define _COG2BLKR_G2BLKR1_MASK                              0x2
#define _COG2BLKR_G2BLKR2_POSN                              0x2
#define _COG2BLKR_G2BLKR2_POSITION                          0x2
#define _COG2BLKR_G2BLKR2_SIZE                              0x1
#define _COG2BLKR_G2BLKR2_LENGTH                            0x1
#define _COG2BLKR_G2BLKR2_MASK                              0x4
#define _COG2BLKR_G2BLKR3_POSN                              0x3
#define _COG2BLKR_G2BLKR3_POSITION                          0x3
#define _COG2BLKR_G2BLKR3_SIZE                              0x1
#define _COG2BLKR_G2BLKR3_LENGTH                            0x1
#define _COG2BLKR_G2BLKR3_MASK                              0x8
#define _COG2BLKR_G2BLKR4_POSN                              0x4
#define _COG2BLKR_G2BLKR4_POSITION                          0x4
#define _COG2BLKR_G2BLKR4_SIZE                              0x1
#define _COG2BLKR_G2BLKR4_LENGTH                            0x1
#define _COG2BLKR_G2BLKR4_MASK                              0x10
#define _COG2BLKR_G2BLKR5_POSN                              0x5
#define _COG2BLKR_G2BLKR5_POSITION                          0x5
#define _COG2BLKR_G2BLKR5_SIZE                              0x1
#define _COG2BLKR_G2BLKR5_LENGTH                            0x1
#define _COG2BLKR_G2BLKR5_MASK                              0x20

// Register: COG2BLKF
#define COG2BLKF COG2BLKF
extern volatile unsigned char           COG2BLKF            __at(0x710);
#ifndef _LIB_BUILD
asm("COG2BLKF equ 0710h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BLKF                   :6;
    };
    struct {
        unsigned BLKF0                  :1;
        unsigned BLKF1                  :1;
        unsigned BLKF2                  :1;
        unsigned BLKF3                  :1;
        unsigned BLKF4                  :1;
        unsigned BLKF5                  :1;
    };
    struct {
        unsigned G2BLKF0                :1;
        unsigned G2BLKF1                :1;
        unsigned G2BLKF2                :1;
        unsigned G2BLKF3                :1;
        unsigned G2BLKF4                :1;
        unsigned G2BLKF5                :1;
    };
} COG2BLKFbits_t;
extern volatile COG2BLKFbits_t COG2BLKFbits __at(0x710);
// bitfield macros
#define _COG2BLKF_BLKF_POSN                                 0x0
#define _COG2BLKF_BLKF_POSITION                             0x0
#define _COG2BLKF_BLKF_SIZE                                 0x6
#define _COG2BLKF_BLKF_LENGTH                               0x6
#define _COG2BLKF_BLKF_MASK                                 0x3F
#define _COG2BLKF_BLKF0_POSN                                0x0
#define _COG2BLKF_BLKF0_POSITION                            0x0
#define _COG2BLKF_BLKF0_SIZE                                0x1
#define _COG2BLKF_BLKF0_LENGTH                              0x1
#define _COG2BLKF_BLKF0_MASK                                0x1
#define _COG2BLKF_BLKF1_POSN                                0x1
#define _COG2BLKF_BLKF1_POSITION                            0x1
#define _COG2BLKF_BLKF1_SIZE                                0x1
#define _COG2BLKF_BLKF1_LENGTH                              0x1
#define _COG2BLKF_BLKF1_MASK                                0x2
#define _COG2BLKF_BLKF2_POSN                                0x2
#define _COG2BLKF_BLKF2_POSITION                            0x2
#define _COG2BLKF_BLKF2_SIZE                                0x1
#define _COG2BLKF_BLKF2_LENGTH                              0x1
#define _COG2BLKF_BLKF2_MASK                                0x4
#define _COG2BLKF_BLKF3_POSN                                0x3
#define _COG2BLKF_BLKF3_POSITION                            0x3
#define _COG2BLKF_BLKF3_SIZE                                0x1
#define _COG2BLKF_BLKF3_LENGTH                              0x1
#define _COG2BLKF_BLKF3_MASK                                0x8
#define _COG2BLKF_BLKF4_POSN                                0x4
#define _COG2BLKF_BLKF4_POSITION                            0x4
#define _COG2BLKF_BLKF4_SIZE                                0x1
#define _COG2BLKF_BLKF4_LENGTH                              0x1
#define _COG2BLKF_BLKF4_MASK                                0x10
#define _COG2BLKF_BLKF5_POSN                                0x5
#define _COG2BLKF_BLKF5_POSITION                            0x5
#define _COG2BLKF_BLKF5_SIZE                                0x1
#define _COG2BLKF_BLKF5_LENGTH                              0x1
#define _COG2BLKF_BLKF5_MASK                                0x20
#define _COG2BLKF_G2BLKF0_POSN                              0x0
#define _COG2BLKF_G2BLKF0_POSITION                          0x0
#define _COG2BLKF_G2BLKF0_SIZE                              0x1
#define _COG2BLKF_G2BLKF0_LENGTH                            0x1
#define _COG2BLKF_G2BLKF0_MASK                              0x1
#define _COG2BLKF_G2BLKF1_POSN                              0x1
#define _COG2BLKF_G2BLKF1_POSITION                          0x1
#define _COG2BLKF_G2BLKF1_SIZE                              0x1
#define _COG2BLKF_G2BLKF1_LENGTH                            0x1
#define _COG2BLKF_G2BLKF1_MASK                              0x2
#define _COG2BLKF_G2BLKF2_POSN                              0x2
#define _COG2BLKF_G2BLKF2_POSITION                          0x2
#define _COG2BLKF_G2BLKF2_SIZE                              0x1
#define _COG2BLKF_G2BLKF2_LENGTH                            0x1
#define _COG2BLKF_G2BLKF2_MASK                              0x4
#define _COG2BLKF_G2BLKF3_POSN                              0x3
#define _COG2BLKF_G2BLKF3_POSITION                          0x3
#define _COG2BLKF_G2BLKF3_SIZE                              0x1
#define _COG2BLKF_G2BLKF3_LENGTH                            0x1
#define _COG2BLKF_G2BLKF3_MASK                              0x8
#define _COG2BLKF_G2BLKF4_POSN                              0x4
#define _COG2BLKF_G2BLKF4_POSITION                          0x4
#define _COG2BLKF_G2BLKF4_SIZE                              0x1
#define _COG2BLKF_G2BLKF4_LENGTH                            0x1
#define _COG2BLKF_G2BLKF4_MASK                              0x10
#define _COG2BLKF_G2BLKF5_POSN                              0x5
#define _COG2BLKF_G2BLKF5_POSITION                          0x5
#define _COG2BLKF_G2BLKF5_SIZE                              0x1
#define _COG2BLKF_G2BLKF5_LENGTH                            0x1
#define _COG2BLKF_G2BLKF5_MASK                              0x20

// Register: COG2DBR
#define COG2DBR COG2DBR
extern volatile unsigned char           COG2DBR             __at(0x711);
#ifndef _LIB_BUILD
asm("COG2DBR equ 0711h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBR                    :6;
    };
    struct {
        unsigned DBR0                   :1;
        unsigned DBR1                   :1;
        unsigned DBR2                   :1;
        unsigned DBR3                   :1;
        unsigned DBR4                   :1;
        unsigned DBR5                   :1;
    };
    struct {
        unsigned G2DBR0                 :1;
        unsigned G2DBR1                 :1;
        unsigned G2DBR2                 :1;
        unsigned G2DBR3                 :1;
        unsigned G2DBR4                 :1;
        unsigned G2DBR5                 :1;
    };
} COG2DBRbits_t;
extern volatile COG2DBRbits_t COG2DBRbits __at(0x711);
// bitfield macros
#define _COG2DBR_DBR_POSN                                   0x0
#define _COG2DBR_DBR_POSITION                               0x0
#define _COG2DBR_DBR_SIZE                                   0x6
#define _COG2DBR_DBR_LENGTH                                 0x6
#define _COG2DBR_DBR_MASK                                   0x3F
#define _COG2DBR_DBR0_POSN                                  0x0
#define _COG2DBR_DBR0_POSITION                              0x0
#define _COG2DBR_DBR0_SIZE                                  0x1
#define _COG2DBR_DBR0_LENGTH                                0x1
#define _COG2DBR_DBR0_MASK                                  0x1
#define _COG2DBR_DBR1_POSN                                  0x1
#define _COG2DBR_DBR1_POSITION                              0x1
#define _COG2DBR_DBR1_SIZE                                  0x1
#define _COG2DBR_DBR1_LENGTH                                0x1
#define _COG2DBR_DBR1_MASK                                  0x2
#define _COG2DBR_DBR2_POSN                                  0x2
#define _COG2DBR_DBR2_POSITION                              0x2
#define _COG2DBR_DBR2_SIZE                                  0x1
#define _COG2DBR_DBR2_LENGTH                                0x1
#define _COG2DBR_DBR2_MASK                                  0x4
#define _COG2DBR_DBR3_POSN                                  0x3
#define _COG2DBR_DBR3_POSITION                              0x3
#define _COG2DBR_DBR3_SIZE                                  0x1
#define _COG2DBR_DBR3_LENGTH                                0x1
#define _COG2DBR_DBR3_MASK                                  0x8
#define _COG2DBR_DBR4_POSN                                  0x4
#define _COG2DBR_DBR4_POSITION                              0x4
#define _COG2DBR_DBR4_SIZE                                  0x1
#define _COG2DBR_DBR4_LENGTH                                0x1
#define _COG2DBR_DBR4_MASK                                  0x10
#define _COG2DBR_DBR5_POSN                                  0x5
#define _COG2DBR_DBR5_POSITION                              0x5
#define _COG2DBR_DBR5_SIZE                                  0x1
#define _COG2DBR_DBR5_LENGTH                                0x1
#define _COG2DBR_DBR5_MASK                                  0x20
#define _COG2DBR_G2DBR0_POSN                                0x0
#define _COG2DBR_G2DBR0_POSITION                            0x0
#define _COG2DBR_G2DBR0_SIZE                                0x1
#define _COG2DBR_G2DBR0_LENGTH                              0x1
#define _COG2DBR_G2DBR0_MASK                                0x1
#define _COG2DBR_G2DBR1_POSN                                0x1
#define _COG2DBR_G2DBR1_POSITION                            0x1
#define _COG2DBR_G2DBR1_SIZE                                0x1
#define _COG2DBR_G2DBR1_LENGTH                              0x1
#define _COG2DBR_G2DBR1_MASK                                0x2
#define _COG2DBR_G2DBR2_POSN                                0x2
#define _COG2DBR_G2DBR2_POSITION                            0x2
#define _COG2DBR_G2DBR2_SIZE                                0x1
#define _COG2DBR_G2DBR2_LENGTH                              0x1
#define _COG2DBR_G2DBR2_MASK                                0x4
#define _COG2DBR_G2DBR3_POSN                                0x3
#define _COG2DBR_G2DBR3_POSITION                            0x3
#define _COG2DBR_G2DBR3_SIZE                                0x1
#define _COG2DBR_G2DBR3_LENGTH                              0x1
#define _COG2DBR_G2DBR3_MASK                                0x8
#define _COG2DBR_G2DBR4_POSN                                0x4
#define _COG2DBR_G2DBR4_POSITION                            0x4
#define _COG2DBR_G2DBR4_SIZE                                0x1
#define _COG2DBR_G2DBR4_LENGTH                              0x1
#define _COG2DBR_G2DBR4_MASK                                0x10
#define _COG2DBR_G2DBR5_POSN                                0x5
#define _COG2DBR_G2DBR5_POSITION                            0x5
#define _COG2DBR_G2DBR5_SIZE                                0x1
#define _COG2DBR_G2DBR5_LENGTH                              0x1
#define _COG2DBR_G2DBR5_MASK                                0x20

// Register: COG2DBF
#define COG2DBF COG2DBF
extern volatile unsigned char           COG2DBF             __at(0x712);
#ifndef _LIB_BUILD
asm("COG2DBF equ 0712h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBF0                   :1;
        unsigned DBF1                   :1;
        unsigned DBF2                   :1;
        unsigned DBF3                   :1;
        unsigned DBF4                   :1;
        unsigned DBF5                   :1;
    };
    struct {
        unsigned G2DBF0                 :1;
        unsigned G2DBF1                 :1;
        unsigned G2DBF2                 :1;
        unsigned G2DBF3                 :1;
        unsigned G2DBF4                 :1;
        unsigned G2DBF5                 :1;
    };
    struct {
        unsigned G2DBF                  :6;
    };
} COG2DBFbits_t;
extern volatile COG2DBFbits_t COG2DBFbits __at(0x712);
// bitfield macros
#define _COG2DBF_DBF0_POSN                                  0x0
#define _COG2DBF_DBF0_POSITION                              0x0
#define _COG2DBF_DBF0_SIZE                                  0x1
#define _COG2DBF_DBF0_LENGTH                                0x1
#define _COG2DBF_DBF0_MASK                                  0x1
#define _COG2DBF_DBF1_POSN                                  0x1
#define _COG2DBF_DBF1_POSITION                              0x1
#define _COG2DBF_DBF1_SIZE                                  0x1
#define _COG2DBF_DBF1_LENGTH                                0x1
#define _COG2DBF_DBF1_MASK                                  0x2
#define _COG2DBF_DBF2_POSN                                  0x2
#define _COG2DBF_DBF2_POSITION                              0x2
#define _COG2DBF_DBF2_SIZE                                  0x1
#define _COG2DBF_DBF2_LENGTH                                0x1
#define _COG2DBF_DBF2_MASK                                  0x4
#define _COG2DBF_DBF3_POSN                                  0x3
#define _COG2DBF_DBF3_POSITION                              0x3
#define _COG2DBF_DBF3_SIZE                                  0x1
#define _COG2DBF_DBF3_LENGTH                                0x1
#define _COG2DBF_DBF3_MASK                                  0x8
#define _COG2DBF_DBF4_POSN                                  0x4
#define _COG2DBF_DBF4_POSITION                              0x4
#define _COG2DBF_DBF4_SIZE                                  0x1
#define _COG2DBF_DBF4_LENGTH                                0x1
#define _COG2DBF_DBF4_MASK                                  0x10
#define _COG2DBF_DBF5_POSN                                  0x5
#define _COG2DBF_DBF5_POSITION                              0x5
#define _COG2DBF_DBF5_SIZE                                  0x1
#define _COG2DBF_DBF5_LENGTH                                0x1
#define _COG2DBF_DBF5_MASK                                  0x20
#define _COG2DBF_G2DBF0_POSN                                0x0
#define _COG2DBF_G2DBF0_POSITION                            0x0
#define _COG2DBF_G2DBF0_SIZE                                0x1
#define _COG2DBF_G2DBF0_LENGTH                              0x1
#define _COG2DBF_G2DBF0_MASK                                0x1
#define _COG2DBF_G2DBF1_POSN                                0x1
#define _COG2DBF_G2DBF1_POSITION                            0x1
#define _COG2DBF_G2DBF1_SIZE                                0x1
#define _COG2DBF_G2DBF1_LENGTH                              0x1
#define _COG2DBF_G2DBF1_MASK                                0x2
#define _COG2DBF_G2DBF2_POSN                                0x2
#define _COG2DBF_G2DBF2_POSITION                            0x2
#define _COG2DBF_G2DBF2_SIZE                                0x1
#define _COG2DBF_G2DBF2_LENGTH                              0x1
#define _COG2DBF_G2DBF2_MASK                                0x4
#define _COG2DBF_G2DBF3_POSN                                0x3
#define _COG2DBF_G2DBF3_POSITION                            0x3
#define _COG2DBF_G2DBF3_SIZE                                0x1
#define _COG2DBF_G2DBF3_LENGTH                              0x1
#define _COG2DBF_G2DBF3_MASK                                0x8
#define _COG2DBF_G2DBF4_POSN                                0x4
#define _COG2DBF_G2DBF4_POSITION                            0x4
#define _COG2DBF_G2DBF4_SIZE                                0x1
#define _COG2DBF_G2DBF4_LENGTH                              0x1
#define _COG2DBF_G2DBF4_MASK                                0x10
#define _COG2DBF_G2DBF5_POSN                                0x5
#define _COG2DBF_G2DBF5_POSITION                            0x5
#define _COG2DBF_G2DBF5_SIZE                                0x1
#define _COG2DBF_G2DBF5_LENGTH                              0x1
#define _COG2DBF_G2DBF5_MASK                                0x20
#define _COG2DBF_G2DBF_POSN                                 0x0
#define _COG2DBF_G2DBF_POSITION                             0x0
#define _COG2DBF_G2DBF_SIZE                                 0x6
#define _COG2DBF_G2DBF_LENGTH                               0x6
#define _COG2DBF_G2DBF_MASK                                 0x3F

// Register: COG2CON0
#define COG2CON0 COG2CON0
extern volatile unsigned char           COG2CON0            __at(0x713);
#ifndef _LIB_BUILD
asm("COG2CON0 equ 0713h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD                     :3;
        unsigned CS                     :2;
        unsigned                        :1;
        unsigned LD                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MD0                    :1;
        unsigned MD1                    :1;
        unsigned MD2                    :1;
        unsigned CS0                    :1;
        unsigned CS1                    :1;
    };
    struct {
        unsigned G2MD                   :3;
        unsigned G2CS                   :2;
        unsigned                        :1;
        unsigned G2LD                   :1;
        unsigned G2EN                   :1;
    };
    struct {
        unsigned G2MD0                  :1;
        unsigned G2MD1                  :1;
        unsigned G2MD2                  :1;
        unsigned G2CS0                  :1;
        unsigned G2CS1                  :1;
    };
} COG2CON0bits_t;
extern volatile COG2CON0bits_t COG2CON0bits __at(0x713);
// bitfield macros
#define _COG2CON0_MD_POSN                                   0x0
#define _COG2CON0_MD_POSITION                               0x0
#define _COG2CON0_MD_SIZE                                   0x3
#define _COG2CON0_MD_LENGTH                                 0x3
#define _COG2CON0_MD_MASK                                   0x7
#define _COG2CON0_CS_POSN                                   0x3
#define _COG2CON0_CS_POSITION                               0x3
#define _COG2CON0_CS_SIZE                                   0x2
#define _COG2CON0_CS_LENGTH                                 0x2
#define _COG2CON0_CS_MASK                                   0x18
#define _COG2CON0_LD_POSN                                   0x6
#define _COG2CON0_LD_POSITION                               0x6
#define _COG2CON0_LD_SIZE                                   0x1
#define _COG2CON0_LD_LENGTH                                 0x1
#define _COG2CON0_LD_MASK                                   0x40
#define _COG2CON0_EN_POSN                                   0x7
#define _COG2CON0_EN_POSITION                               0x7
#define _COG2CON0_EN_SIZE                                   0x1
#define _COG2CON0_EN_LENGTH                                 0x1
#define _COG2CON0_EN_MASK                                   0x80
#define _COG2CON0_MD0_POSN                                  0x0
#define _COG2CON0_MD0_POSITION                              0x0
#define _COG2CON0_MD0_SIZE                                  0x1
#define _COG2CON0_MD0_LENGTH                                0x1
#define _COG2CON0_MD0_MASK                                  0x1
#define _COG2CON0_MD1_POSN                                  0x1
#define _COG2CON0_MD1_POSITION                              0x1
#define _COG2CON0_MD1_SIZE                                  0x1
#define _COG2CON0_MD1_LENGTH                                0x1
#define _COG2CON0_MD1_MASK                                  0x2
#define _COG2CON0_MD2_POSN                                  0x2
#define _COG2CON0_MD2_POSITION                              0x2
#define _COG2CON0_MD2_SIZE                                  0x1
#define _COG2CON0_MD2_LENGTH                                0x1
#define _COG2CON0_MD2_MASK                                  0x4
#define _COG2CON0_CS0_POSN                                  0x3
#define _COG2CON0_CS0_POSITION                              0x3
#define _COG2CON0_CS0_SIZE                                  0x1
#define _COG2CON0_CS0_LENGTH                                0x1
#define _COG2CON0_CS0_MASK                                  0x8
#define _COG2CON0_CS1_POSN                                  0x4
#define _COG2CON0_CS1_POSITION                              0x4
#define _COG2CON0_CS1_SIZE                                  0x1
#define _COG2CON0_CS1_LENGTH                                0x1
#define _COG2CON0_CS1_MASK                                  0x10
#define _COG2CON0_G2MD_POSN                                 0x0
#define _COG2CON0_G2MD_POSITION                             0x0
#define _COG2CON0_G2MD_SIZE                                 0x3
#define _COG2CON0_G2MD_LENGTH                               0x3
#define _COG2CON0_G2MD_MASK                                 0x7
#define _COG2CON0_G2CS_POSN                                 0x3
#define _COG2CON0_G2CS_POSITION                             0x3
#define _COG2CON0_G2CS_SIZE                                 0x2
#define _COG2CON0_G2CS_LENGTH                               0x2
#define _COG2CON0_G2CS_MASK                                 0x18
#define _COG2CON0_G2LD_POSN                                 0x6
#define _COG2CON0_G2LD_POSITION                             0x6
#define _COG2CON0_G2LD_SIZE                                 0x1
#define _COG2CON0_G2LD_LENGTH                               0x1
#define _COG2CON0_G2LD_MASK                                 0x40
#define _COG2CON0_G2EN_POSN                                 0x7
#define _COG2CON0_G2EN_POSITION                             0x7
#define _COG2CON0_G2EN_SIZE                                 0x1
#define _COG2CON0_G2EN_LENGTH                               0x1
#define _COG2CON0_G2EN_MASK                                 0x80
#define _COG2CON0_G2MD0_POSN                                0x0
#define _COG2CON0_G2MD0_POSITION                            0x0
#define _COG2CON0_G2MD0_SIZE                                0x1
#define _COG2CON0_G2MD0_LENGTH                              0x1
#define _COG2CON0_G2MD0_MASK                                0x1
#define _COG2CON0_G2MD1_POSN                                0x1
#define _COG2CON0_G2MD1_POSITION                            0x1
#define _COG2CON0_G2MD1_SIZE                                0x1
#define _COG2CON0_G2MD1_LENGTH                              0x1
#define _COG2CON0_G2MD1_MASK                                0x2
#define _COG2CON0_G2MD2_POSN                                0x2
#define _COG2CON0_G2MD2_POSITION                            0x2
#define _COG2CON0_G2MD2_SIZE                                0x1
#define _COG2CON0_G2MD2_LENGTH                              0x1
#define _COG2CON0_G2MD2_MASK                                0x4
#define _COG2CON0_G2CS0_POSN                                0x3
#define _COG2CON0_G2CS0_POSITION                            0x3
#define _COG2CON0_G2CS0_SIZE                                0x1
#define _COG2CON0_G2CS0_LENGTH                              0x1
#define _COG2CON0_G2CS0_MASK                                0x8
#define _COG2CON0_G2CS1_POSN                                0x4
#define _COG2CON0_G2CS1_POSITION                            0x4
#define _COG2CON0_G2CS1_SIZE                                0x1
#define _COG2CON0_G2CS1_LENGTH                              0x1
#define _COG2CON0_G2CS1_MASK                                0x10

// Register: COG2CON1
#define COG2CON1 COG2CON1
extern volatile unsigned char           COG2CON1            __at(0x714);
#ifndef _LIB_BUILD
asm("COG2CON1 equ 0714h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POLA                   :1;
        unsigned POLB                   :1;
        unsigned POLC                   :1;
        unsigned POLD                   :1;
        unsigned                        :2;
        unsigned FDBS                   :1;
        unsigned RDBS                   :1;
    };
    struct {
        unsigned G2POLA                 :1;
        unsigned G2POLB                 :1;
        unsigned G2POLC                 :1;
        unsigned G2POLD                 :1;
        unsigned                        :2;
        unsigned G2FDBS                 :1;
        unsigned G2RDBS                 :1;
    };
} COG2CON1bits_t;
extern volatile COG2CON1bits_t COG2CON1bits __at(0x714);
// bitfield macros
#define _COG2CON1_POLA_POSN                                 0x0
#define _COG2CON1_POLA_POSITION                             0x0
#define _COG2CON1_POLA_SIZE                                 0x1
#define _COG2CON1_POLA_LENGTH                               0x1
#define _COG2CON1_POLA_MASK                                 0x1
#define _COG2CON1_POLB_POSN                                 0x1
#define _COG2CON1_POLB_POSITION                             0x1
#define _COG2CON1_POLB_SIZE                                 0x1
#define _COG2CON1_POLB_LENGTH                               0x1
#define _COG2CON1_POLB_MASK                                 0x2
#define _COG2CON1_POLC_POSN                                 0x2
#define _COG2CON1_POLC_POSITION                             0x2
#define _COG2CON1_POLC_SIZE                                 0x1
#define _COG2CON1_POLC_LENGTH                               0x1
#define _COG2CON1_POLC_MASK                                 0x4
#define _COG2CON1_POLD_POSN                                 0x3
#define _COG2CON1_POLD_POSITION                             0x3
#define _COG2CON1_POLD_SIZE                                 0x1
#define _COG2CON1_POLD_LENGTH                               0x1
#define _COG2CON1_POLD_MASK                                 0x8
#define _COG2CON1_FDBS_POSN                                 0x6
#define _COG2CON1_FDBS_POSITION                             0x6
#define _COG2CON1_FDBS_SIZE                                 0x1
#define _COG2CON1_FDBS_LENGTH                               0x1
#define _COG2CON1_FDBS_MASK                                 0x40
#define _COG2CON1_RDBS_POSN                                 0x7
#define _COG2CON1_RDBS_POSITION                             0x7
#define _COG2CON1_RDBS_SIZE                                 0x1
#define _COG2CON1_RDBS_LENGTH                               0x1
#define _COG2CON1_RDBS_MASK                                 0x80
#define _COG2CON1_G2POLA_POSN                               0x0
#define _COG2CON1_G2POLA_POSITION                           0x0
#define _COG2CON1_G2POLA_SIZE                               0x1
#define _COG2CON1_G2POLA_LENGTH                             0x1
#define _COG2CON1_G2POLA_MASK                               0x1
#define _COG2CON1_G2POLB_POSN                               0x1
#define _COG2CON1_G2POLB_POSITION                           0x1
#define _COG2CON1_G2POLB_SIZE                               0x1
#define _COG2CON1_G2POLB_LENGTH                             0x1
#define _COG2CON1_G2POLB_MASK                               0x2
#define _COG2CON1_G2POLC_POSN                               0x2
#define _COG2CON1_G2POLC_POSITION                           0x2
#define _COG2CON1_G2POLC_SIZE                               0x1
#define _COG2CON1_G2POLC_LENGTH                             0x1
#define _COG2CON1_G2POLC_MASK                               0x4
#define _COG2CON1_G2POLD_POSN                               0x3
#define _COG2CON1_G2POLD_POSITION                           0x3
#define _COG2CON1_G2POLD_SIZE                               0x1
#define _COG2CON1_G2POLD_LENGTH                             0x1
#define _COG2CON1_G2POLD_MASK                               0x8
#define _COG2CON1_G2FDBS_POSN                               0x6
#define _COG2CON1_G2FDBS_POSITION                           0x6
#define _COG2CON1_G2FDBS_SIZE                               0x1
#define _COG2CON1_G2FDBS_LENGTH                             0x1
#define _COG2CON1_G2FDBS_MASK                               0x40
#define _COG2CON1_G2RDBS_POSN                               0x7
#define _COG2CON1_G2RDBS_POSITION                           0x7
#define _COG2CON1_G2RDBS_SIZE                               0x1
#define _COG2CON1_G2RDBS_LENGTH                             0x1
#define _COG2CON1_G2RDBS_MASK                               0x80

// Register: COG2RIS0
#define COG2RIS0 COG2RIS0
extern volatile unsigned char           COG2RIS0            __at(0x715);
#ifndef _LIB_BUILD
asm("COG2RIS0 equ 0715h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RIS0                   :1;
        unsigned RIS1                   :1;
        unsigned RIS2                   :1;
        unsigned RIS3                   :1;
        unsigned RIS4                   :1;
        unsigned RIS5                   :1;
        unsigned RIS6                   :1;
        unsigned RIS7                   :1;
    };
    struct {
        unsigned G2RIS0                 :1;
        unsigned G2RIS1                 :1;
        unsigned G2RIS2                 :1;
        unsigned G2RIS3                 :1;
        unsigned G2RIS4                 :1;
        unsigned G2RIS5                 :1;
        unsigned G2RIS6                 :1;
        unsigned G2RIS7                 :1;
    };
} COG2RIS0bits_t;
extern volatile COG2RIS0bits_t COG2RIS0bits __at(0x715);
// bitfield macros
#define _COG2RIS0_RIS0_POSN                                 0x0
#define _COG2RIS0_RIS0_POSITION                             0x0
#define _COG2RIS0_RIS0_SIZE                                 0x1
#define _COG2RIS0_RIS0_LENGTH                               0x1
#define _COG2RIS0_RIS0_MASK                                 0x1
#define _COG2RIS0_RIS1_POSN                                 0x1
#define _COG2RIS0_RIS1_POSITION                             0x1
#define _COG2RIS0_RIS1_SIZE                                 0x1
#define _COG2RIS0_RIS1_LENGTH                               0x1
#define _COG2RIS0_RIS1_MASK                                 0x2
#define _COG2RIS0_RIS2_POSN                                 0x2
#define _COG2RIS0_RIS2_POSITION                             0x2
#define _COG2RIS0_RIS2_SIZE                                 0x1
#define _COG2RIS0_RIS2_LENGTH                               0x1
#define _COG2RIS0_RIS2_MASK                                 0x4
#define _COG2RIS0_RIS3_POSN                                 0x3
#define _COG2RIS0_RIS3_POSITION                             0x3
#define _COG2RIS0_RIS3_SIZE                                 0x1
#define _COG2RIS0_RIS3_LENGTH                               0x1
#define _COG2RIS0_RIS3_MASK                                 0x8
#define _COG2RIS0_RIS4_POSN                                 0x4
#define _COG2RIS0_RIS4_POSITION                             0x4
#define _COG2RIS0_RIS4_SIZE                                 0x1
#define _COG2RIS0_RIS4_LENGTH                               0x1
#define _COG2RIS0_RIS4_MASK                                 0x10
#define _COG2RIS0_RIS5_POSN                                 0x5
#define _COG2RIS0_RIS5_POSITION                             0x5
#define _COG2RIS0_RIS5_SIZE                                 0x1
#define _COG2RIS0_RIS5_LENGTH                               0x1
#define _COG2RIS0_RIS5_MASK                                 0x20
#define _COG2RIS0_RIS6_POSN                                 0x6
#define _COG2RIS0_RIS6_POSITION                             0x6
#define _COG2RIS0_RIS6_SIZE                                 0x1
#define _COG2RIS0_RIS6_LENGTH                               0x1
#define _COG2RIS0_RIS6_MASK                                 0x40
#define _COG2RIS0_RIS7_POSN                                 0x7
#define _COG2RIS0_RIS7_POSITION                             0x7
#define _COG2RIS0_RIS7_SIZE                                 0x1
#define _COG2RIS0_RIS7_LENGTH                               0x1
#define _COG2RIS0_RIS7_MASK                                 0x80
#define _COG2RIS0_G2RIS0_POSN                               0x0
#define _COG2RIS0_G2RIS0_POSITION                           0x0
#define _COG2RIS0_G2RIS0_SIZE                               0x1
#define _COG2RIS0_G2RIS0_LENGTH                             0x1
#define _COG2RIS0_G2RIS0_MASK                               0x1
#define _COG2RIS0_G2RIS1_POSN                               0x1
#define _COG2RIS0_G2RIS1_POSITION                           0x1
#define _COG2RIS0_G2RIS1_SIZE                               0x1
#define _COG2RIS0_G2RIS1_LENGTH                             0x1
#define _COG2RIS0_G2RIS1_MASK                               0x2
#define _COG2RIS0_G2RIS2_POSN                               0x2
#define _COG2RIS0_G2RIS2_POSITION                           0x2
#define _COG2RIS0_G2RIS2_SIZE                               0x1
#define _COG2RIS0_G2RIS2_LENGTH                             0x1
#define _COG2RIS0_G2RIS2_MASK                               0x4
#define _COG2RIS0_G2RIS3_POSN                               0x3
#define _COG2RIS0_G2RIS3_POSITION                           0x3
#define _COG2RIS0_G2RIS3_SIZE                               0x1
#define _COG2RIS0_G2RIS3_LENGTH                             0x1
#define _COG2RIS0_G2RIS3_MASK                               0x8
#define _COG2RIS0_G2RIS4_POSN                               0x4
#define _COG2RIS0_G2RIS4_POSITION                           0x4
#define _COG2RIS0_G2RIS4_SIZE                               0x1
#define _COG2RIS0_G2RIS4_LENGTH                             0x1
#define _COG2RIS0_G2RIS4_MASK                               0x10
#define _COG2RIS0_G2RIS5_POSN                               0x5
#define _COG2RIS0_G2RIS5_POSITION                           0x5
#define _COG2RIS0_G2RIS5_SIZE                               0x1
#define _COG2RIS0_G2RIS5_LENGTH                             0x1
#define _COG2RIS0_G2RIS5_MASK                               0x20
#define _COG2RIS0_G2RIS6_POSN                               0x6
#define _COG2RIS0_G2RIS6_POSITION                           0x6
#define _COG2RIS0_G2RIS6_SIZE                               0x1
#define _COG2RIS0_G2RIS6_LENGTH                             0x1
#define _COG2RIS0_G2RIS6_MASK                               0x40
#define _COG2RIS0_G2RIS7_POSN                               0x7
#define _COG2RIS0_G2RIS7_POSITION                           0x7
#define _COG2RIS0_G2RIS7_SIZE                               0x1
#define _COG2RIS0_G2RIS7_LENGTH                             0x1
#define _COG2RIS0_G2RIS7_MASK                               0x80

// Register: COG2RIS1
#define COG2RIS1 COG2RIS1
extern volatile unsigned char           COG2RIS1            __at(0x716);
#ifndef _LIB_BUILD
asm("COG2RIS1 equ 0716h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RIS8                   :1;
        unsigned RIS9                   :1;
        unsigned RIS10                  :1;
        unsigned RIS11                  :1;
        unsigned RIS12                  :1;
        unsigned RIS13                  :1;
        unsigned RIS14                  :1;
        unsigned RIS15                  :1;
    };
    struct {
        unsigned G2RIS8                 :1;
        unsigned G2RIS9                 :1;
        unsigned G2RIS10                :1;
        unsigned G2RIS11                :1;
        unsigned G2RIS12                :1;
        unsigned G2RIS13                :1;
        unsigned G2RIS14                :1;
        unsigned G2RIS15                :1;
    };
} COG2RIS1bits_t;
extern volatile COG2RIS1bits_t COG2RIS1bits __at(0x716);
// bitfield macros
#define _COG2RIS1_RIS8_POSN                                 0x0
#define _COG2RIS1_RIS8_POSITION                             0x0
#define _COG2RIS1_RIS8_SIZE                                 0x1
#define _COG2RIS1_RIS8_LENGTH                               0x1
#define _COG2RIS1_RIS8_MASK                                 0x1
#define _COG2RIS1_RIS9_POSN                                 0x1
#define _COG2RIS1_RIS9_POSITION                             0x1
#define _COG2RIS1_RIS9_SIZE                                 0x1
#define _COG2RIS1_RIS9_LENGTH                               0x1
#define _COG2RIS1_RIS9_MASK                                 0x2
#define _COG2RIS1_RIS10_POSN                                0x2
#define _COG2RIS1_RIS10_POSITION                            0x2
#define _COG2RIS1_RIS10_SIZE                                0x1
#define _COG2RIS1_RIS10_LENGTH                              0x1
#define _COG2RIS1_RIS10_MASK                                0x4
#define _COG2RIS1_RIS11_POSN                                0x3
#define _COG2RIS1_RIS11_POSITION                            0x3
#define _COG2RIS1_RIS11_SIZE                                0x1
#define _COG2RIS1_RIS11_LENGTH                              0x1
#define _COG2RIS1_RIS11_MASK                                0x8
#define _COG2RIS1_RIS12_POSN                                0x4
#define _COG2RIS1_RIS12_POSITION                            0x4
#define _COG2RIS1_RIS12_SIZE                                0x1
#define _COG2RIS1_RIS12_LENGTH                              0x1
#define _COG2RIS1_RIS12_MASK                                0x10
#define _COG2RIS1_RIS13_POSN                                0x5
#define _COG2RIS1_RIS13_POSITION                            0x5
#define _COG2RIS1_RIS13_SIZE                                0x1
#define _COG2RIS1_RIS13_LENGTH                              0x1
#define _COG2RIS1_RIS13_MASK                                0x20
#define _COG2RIS1_RIS14_POSN                                0x6
#define _COG2RIS1_RIS14_POSITION                            0x6
#define _COG2RIS1_RIS14_SIZE                                0x1
#define _COG2RIS1_RIS14_LENGTH                              0x1
#define _COG2RIS1_RIS14_MASK                                0x40
#define _COG2RIS1_RIS15_POSN                                0x7
#define _COG2RIS1_RIS15_POSITION                            0x7
#define _COG2RIS1_RIS15_SIZE                                0x1
#define _COG2RIS1_RIS15_LENGTH                              0x1
#define _COG2RIS1_RIS15_MASK                                0x80
#define _COG2RIS1_G2RIS8_POSN                               0x0
#define _COG2RIS1_G2RIS8_POSITION                           0x0
#define _COG2RIS1_G2RIS8_SIZE                               0x1
#define _COG2RIS1_G2RIS8_LENGTH                             0x1
#define _COG2RIS1_G2RIS8_MASK                               0x1
#define _COG2RIS1_G2RIS9_POSN                               0x1
#define _COG2RIS1_G2RIS9_POSITION                           0x1
#define _COG2RIS1_G2RIS9_SIZE                               0x1
#define _COG2RIS1_G2RIS9_LENGTH                             0x1
#define _COG2RIS1_G2RIS9_MASK                               0x2
#define _COG2RIS1_G2RIS10_POSN                              0x2
#define _COG2RIS1_G2RIS10_POSITION                          0x2
#define _COG2RIS1_G2RIS10_SIZE                              0x1
#define _COG2RIS1_G2RIS10_LENGTH                            0x1
#define _COG2RIS1_G2RIS10_MASK                              0x4
#define _COG2RIS1_G2RIS11_POSN                              0x3
#define _COG2RIS1_G2RIS11_POSITION                          0x3
#define _COG2RIS1_G2RIS11_SIZE                              0x1
#define _COG2RIS1_G2RIS11_LENGTH                            0x1
#define _COG2RIS1_G2RIS11_MASK                              0x8
#define _COG2RIS1_G2RIS12_POSN                              0x4
#define _COG2RIS1_G2RIS12_POSITION                          0x4
#define _COG2RIS1_G2RIS12_SIZE                              0x1
#define _COG2RIS1_G2RIS12_LENGTH                            0x1
#define _COG2RIS1_G2RIS12_MASK                              0x10
#define _COG2RIS1_G2RIS13_POSN                              0x5
#define _COG2RIS1_G2RIS13_POSITION                          0x5
#define _COG2RIS1_G2RIS13_SIZE                              0x1
#define _COG2RIS1_G2RIS13_LENGTH                            0x1
#define _COG2RIS1_G2RIS13_MASK                              0x20
#define _COG2RIS1_G2RIS14_POSN                              0x6
#define _COG2RIS1_G2RIS14_POSITION                          0x6
#define _COG2RIS1_G2RIS14_SIZE                              0x1
#define _COG2RIS1_G2RIS14_LENGTH                            0x1
#define _COG2RIS1_G2RIS14_MASK                              0x40
#define _COG2RIS1_G2RIS15_POSN                              0x7
#define _COG2RIS1_G2RIS15_POSITION                          0x7
#define _COG2RIS1_G2RIS15_SIZE                              0x1
#define _COG2RIS1_G2RIS15_LENGTH                            0x1
#define _COG2RIS1_G2RIS15_MASK                              0x80

// Register: COG2RSIM0
#define COG2RSIM0 COG2RSIM0
extern volatile unsigned char           COG2RSIM0           __at(0x717);
#ifndef _LIB_BUILD
asm("COG2RSIM0 equ 0717h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RSIM0                  :1;
        unsigned RSIM1                  :1;
        unsigned RSIM2                  :1;
        unsigned RSIM3                  :1;
        unsigned RSIM4                  :1;
        unsigned RSIM5                  :1;
        unsigned RSIM6                  :1;
        unsigned RSIM7                  :1;
    };
    struct {
        unsigned G2RSIM0                :1;
        unsigned G2RSIM1                :1;
        unsigned G2RSIM2                :1;
        unsigned G2RSIM3                :1;
        unsigned G2RSIM4                :1;
        unsigned G2RSIM5                :1;
        unsigned G2RSIM6                :1;
        unsigned G2RSIM7                :1;
    };
} COG2RSIM0bits_t;
extern volatile COG2RSIM0bits_t COG2RSIM0bits __at(0x717);
// bitfield macros
#define _COG2RSIM0_RSIM0_POSN                               0x0
#define _COG2RSIM0_RSIM0_POSITION                           0x0
#define _COG2RSIM0_RSIM0_SIZE                               0x1
#define _COG2RSIM0_RSIM0_LENGTH                             0x1
#define _COG2RSIM0_RSIM0_MASK                               0x1
#define _COG2RSIM0_RSIM1_POSN                               0x1
#define _COG2RSIM0_RSIM1_POSITION                           0x1
#define _COG2RSIM0_RSIM1_SIZE                               0x1
#define _COG2RSIM0_RSIM1_LENGTH                             0x1
#define _COG2RSIM0_RSIM1_MASK                               0x2
#define _COG2RSIM0_RSIM2_POSN                               0x2
#define _COG2RSIM0_RSIM2_POSITION                           0x2
#define _COG2RSIM0_RSIM2_SIZE                               0x1
#define _COG2RSIM0_RSIM2_LENGTH                             0x1
#define _COG2RSIM0_RSIM2_MASK                               0x4
#define _COG2RSIM0_RSIM3_POSN                               0x3
#define _COG2RSIM0_RSIM3_POSITION                           0x3
#define _COG2RSIM0_RSIM3_SIZE                               0x1
#define _COG2RSIM0_RSIM3_LENGTH                             0x1
#define _COG2RSIM0_RSIM3_MASK                               0x8
#define _COG2RSIM0_RSIM4_POSN                               0x4
#define _COG2RSIM0_RSIM4_POSITION                           0x4
#define _COG2RSIM0_RSIM4_SIZE                               0x1
#define _COG2RSIM0_RSIM4_LENGTH                             0x1
#define _COG2RSIM0_RSIM4_MASK                               0x10
#define _COG2RSIM0_RSIM5_POSN                               0x5
#define _COG2RSIM0_RSIM5_POSITION                           0x5
#define _COG2RSIM0_RSIM5_SIZE                               0x1
#define _COG2RSIM0_RSIM5_LENGTH                             0x1
#define _COG2RSIM0_RSIM5_MASK                               0x20
#define _COG2RSIM0_RSIM6_POSN                               0x6
#define _COG2RSIM0_RSIM6_POSITION                           0x6
#define _COG2RSIM0_RSIM6_SIZE                               0x1
#define _COG2RSIM0_RSIM6_LENGTH                             0x1
#define _COG2RSIM0_RSIM6_MASK                               0x40
#define _COG2RSIM0_RSIM7_POSN                               0x7
#define _COG2RSIM0_RSIM7_POSITION                           0x7
#define _COG2RSIM0_RSIM7_SIZE                               0x1
#define _COG2RSIM0_RSIM7_LENGTH                             0x1
#define _COG2RSIM0_RSIM7_MASK                               0x80
#define _COG2RSIM0_G2RSIM0_POSN                             0x0
#define _COG2RSIM0_G2RSIM0_POSITION                         0x0
#define _COG2RSIM0_G2RSIM0_SIZE                             0x1
#define _COG2RSIM0_G2RSIM0_LENGTH                           0x1
#define _COG2RSIM0_G2RSIM0_MASK                             0x1
#define _COG2RSIM0_G2RSIM1_POSN                             0x1
#define _COG2RSIM0_G2RSIM1_POSITION                         0x1
#define _COG2RSIM0_G2RSIM1_SIZE                             0x1
#define _COG2RSIM0_G2RSIM1_LENGTH                           0x1
#define _COG2RSIM0_G2RSIM1_MASK                             0x2
#define _COG2RSIM0_G2RSIM2_POSN                             0x2
#define _COG2RSIM0_G2RSIM2_POSITION                         0x2
#define _COG2RSIM0_G2RSIM2_SIZE                             0x1
#define _COG2RSIM0_G2RSIM2_LENGTH                           0x1
#define _COG2RSIM0_G2RSIM2_MASK                             0x4
#define _COG2RSIM0_G2RSIM3_POSN                             0x3
#define _COG2RSIM0_G2RSIM3_POSITION                         0x3
#define _COG2RSIM0_G2RSIM3_SIZE                             0x1
#define _COG2RSIM0_G2RSIM3_LENGTH                           0x1
#define _COG2RSIM0_G2RSIM3_MASK                             0x8
#define _COG2RSIM0_G2RSIM4_POSN                             0x4
#define _COG2RSIM0_G2RSIM4_POSITION                         0x4
#define _COG2RSIM0_G2RSIM4_SIZE                             0x1
#define _COG2RSIM0_G2RSIM4_LENGTH                           0x1
#define _COG2RSIM0_G2RSIM4_MASK                             0x10
#define _COG2RSIM0_G2RSIM5_POSN                             0x5
#define _COG2RSIM0_G2RSIM5_POSITION                         0x5
#define _COG2RSIM0_G2RSIM5_SIZE                             0x1
#define _COG2RSIM0_G2RSIM5_LENGTH                           0x1
#define _COG2RSIM0_G2RSIM5_MASK                             0x20
#define _COG2RSIM0_G2RSIM6_POSN                             0x6
#define _COG2RSIM0_G2RSIM6_POSITION                         0x6
#define _COG2RSIM0_G2RSIM6_SIZE                             0x1
#define _COG2RSIM0_G2RSIM6_LENGTH                           0x1
#define _COG2RSIM0_G2RSIM6_MASK                             0x40
#define _COG2RSIM0_G2RSIM7_POSN                             0x7
#define _COG2RSIM0_G2RSIM7_POSITION                         0x7
#define _COG2RSIM0_G2RSIM7_SIZE                             0x1
#define _COG2RSIM0_G2RSIM7_LENGTH                           0x1
#define _COG2RSIM0_G2RSIM7_MASK                             0x80

// Register: COG2RSIM1
#define COG2RSIM1 COG2RSIM1
extern volatile unsigned char           COG2RSIM1           __at(0x718);
#ifndef _LIB_BUILD
asm("COG2RSIM1 equ 0718h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RSIM8                  :1;
        unsigned RSIM9                  :1;
        unsigned RSIM10                 :1;
        unsigned RSIM11                 :1;
        unsigned RSIM12                 :1;
        unsigned RSIM13                 :1;
        unsigned RSIM14                 :1;
        unsigned RSIM15                 :1;
    };
    struct {
        unsigned G2RSIM8                :1;
        unsigned G2RSIM9                :1;
        unsigned G2RSIM10               :1;
        unsigned G2RSIM11               :1;
        unsigned G2RSIM12               :1;
        unsigned G2RSIM13               :1;
        unsigned G2RSIM14               :1;
        unsigned G2RSIM15               :1;
    };
} COG2RSIM1bits_t;
extern volatile COG2RSIM1bits_t COG2RSIM1bits __at(0x718);
// bitfield macros
#define _COG2RSIM1_RSIM8_POSN                               0x0
#define _COG2RSIM1_RSIM8_POSITION                           0x0
#define _COG2RSIM1_RSIM8_SIZE                               0x1
#define _COG2RSIM1_RSIM8_LENGTH                             0x1
#define _COG2RSIM1_RSIM8_MASK                               0x1
#define _COG2RSIM1_RSIM9_POSN                               0x1
#define _COG2RSIM1_RSIM9_POSITION                           0x1
#define _COG2RSIM1_RSIM9_SIZE                               0x1
#define _COG2RSIM1_RSIM9_LENGTH                             0x1
#define _COG2RSIM1_RSIM9_MASK                               0x2
#define _COG2RSIM1_RSIM10_POSN                              0x2
#define _COG2RSIM1_RSIM10_POSITION                          0x2
#define _COG2RSIM1_RSIM10_SIZE                              0x1
#define _COG2RSIM1_RSIM10_LENGTH                            0x1
#define _COG2RSIM1_RSIM10_MASK                              0x4
#define _COG2RSIM1_RSIM11_POSN                              0x3
#define _COG2RSIM1_RSIM11_POSITION                          0x3
#define _COG2RSIM1_RSIM11_SIZE                              0x1
#define _COG2RSIM1_RSIM11_LENGTH                            0x1
#define _COG2RSIM1_RSIM11_MASK                              0x8
#define _COG2RSIM1_RSIM12_POSN                              0x4
#define _COG2RSIM1_RSIM12_POSITION                          0x4
#define _COG2RSIM1_RSIM12_SIZE                              0x1
#define _COG2RSIM1_RSIM12_LENGTH                            0x1
#define _COG2RSIM1_RSIM12_MASK                              0x10
#define _COG2RSIM1_RSIM13_POSN                              0x5
#define _COG2RSIM1_RSIM13_POSITION                          0x5
#define _COG2RSIM1_RSIM13_SIZE                              0x1
#define _COG2RSIM1_RSIM13_LENGTH                            0x1
#define _COG2RSIM1_RSIM13_MASK                              0x20
#define _COG2RSIM1_RSIM14_POSN                              0x6
#define _COG2RSIM1_RSIM14_POSITION                          0x6
#define _COG2RSIM1_RSIM14_SIZE                              0x1
#define _COG2RSIM1_RSIM14_LENGTH                            0x1
#define _COG2RSIM1_RSIM14_MASK                              0x40
#define _COG2RSIM1_RSIM15_POSN                              0x7
#define _COG2RSIM1_RSIM15_POSITION                          0x7
#define _COG2RSIM1_RSIM15_SIZE                              0x1
#define _COG2RSIM1_RSIM15_LENGTH                            0x1
#define _COG2RSIM1_RSIM15_MASK                              0x80
#define _COG2RSIM1_G2RSIM8_POSN                             0x0
#define _COG2RSIM1_G2RSIM8_POSITION                         0x0
#define _COG2RSIM1_G2RSIM8_SIZE                             0x1
#define _COG2RSIM1_G2RSIM8_LENGTH                           0x1
#define _COG2RSIM1_G2RSIM8_MASK                             0x1
#define _COG2RSIM1_G2RSIM9_POSN                             0x1
#define _COG2RSIM1_G2RSIM9_POSITION                         0x1
#define _COG2RSIM1_G2RSIM9_SIZE                             0x1
#define _COG2RSIM1_G2RSIM9_LENGTH                           0x1
#define _COG2RSIM1_G2RSIM9_MASK                             0x2
#define _COG2RSIM1_G2RSIM10_POSN                            0x2
#define _COG2RSIM1_G2RSIM10_POSITION                        0x2
#define _COG2RSIM1_G2RSIM10_SIZE                            0x1
#define _COG2RSIM1_G2RSIM10_LENGTH                          0x1
#define _COG2RSIM1_G2RSIM10_MASK                            0x4
#define _COG2RSIM1_G2RSIM11_POSN                            0x3
#define _COG2RSIM1_G2RSIM11_POSITION                        0x3
#define _COG2RSIM1_G2RSIM11_SIZE                            0x1
#define _COG2RSIM1_G2RSIM11_LENGTH                          0x1
#define _COG2RSIM1_G2RSIM11_MASK                            0x8
#define _COG2RSIM1_G2RSIM12_POSN                            0x4
#define _COG2RSIM1_G2RSIM12_POSITION                        0x4
#define _COG2RSIM1_G2RSIM12_SIZE                            0x1
#define _COG2RSIM1_G2RSIM12_LENGTH                          0x1
#define _COG2RSIM1_G2RSIM12_MASK                            0x10
#define _COG2RSIM1_G2RSIM13_POSN                            0x5
#define _COG2RSIM1_G2RSIM13_POSITION                        0x5
#define _COG2RSIM1_G2RSIM13_SIZE                            0x1
#define _COG2RSIM1_G2RSIM13_LENGTH                          0x1
#define _COG2RSIM1_G2RSIM13_MASK                            0x20
#define _COG2RSIM1_G2RSIM14_POSN                            0x6
#define _COG2RSIM1_G2RSIM14_POSITION                        0x6
#define _COG2RSIM1_G2RSIM14_SIZE                            0x1
#define _COG2RSIM1_G2RSIM14_LENGTH                          0x1
#define _COG2RSIM1_G2RSIM14_MASK                            0x40
#define _COG2RSIM1_G2RSIM15_POSN                            0x7
#define _COG2RSIM1_G2RSIM15_POSITION                        0x7
#define _COG2RSIM1_G2RSIM15_SIZE                            0x1
#define _COG2RSIM1_G2RSIM15_LENGTH                          0x1
#define _COG2RSIM1_G2RSIM15_MASK                            0x80

// Register: COG2FIS0
#define COG2FIS0 COG2FIS0
extern volatile unsigned char           COG2FIS0            __at(0x719);
#ifndef _LIB_BUILD
asm("COG2FIS0 equ 0719h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FIS0                   :1;
        unsigned FIS1                   :1;
        unsigned FIS2                   :1;
        unsigned FIS3                   :1;
        unsigned FIS4                   :1;
        unsigned FIS5                   :1;
        unsigned FIS6                   :1;
        unsigned FIS7                   :1;
    };
    struct {
        unsigned G2FIS0                 :1;
        unsigned G2FIS1                 :1;
        unsigned G2FIS2                 :1;
        unsigned G2FIS3                 :1;
        unsigned G2FIS4                 :1;
        unsigned G2FIS5                 :1;
        unsigned G2FIS6                 :1;
        unsigned G2FIS7                 :1;
    };
} COG2FIS0bits_t;
extern volatile COG2FIS0bits_t COG2FIS0bits __at(0x719);
// bitfield macros
#define _COG2FIS0_FIS0_POSN                                 0x0
#define _COG2FIS0_FIS0_POSITION                             0x0
#define _COG2FIS0_FIS0_SIZE                                 0x1
#define _COG2FIS0_FIS0_LENGTH                               0x1
#define _COG2FIS0_FIS0_MASK                                 0x1
#define _COG2FIS0_FIS1_POSN                                 0x1
#define _COG2FIS0_FIS1_POSITION                             0x1
#define _COG2FIS0_FIS1_SIZE                                 0x1
#define _COG2FIS0_FIS1_LENGTH                               0x1
#define _COG2FIS0_FIS1_MASK                                 0x2
#define _COG2FIS0_FIS2_POSN                                 0x2
#define _COG2FIS0_FIS2_POSITION                             0x2
#define _COG2FIS0_FIS2_SIZE                                 0x1
#define _COG2FIS0_FIS2_LENGTH                               0x1
#define _COG2FIS0_FIS2_MASK                                 0x4
#define _COG2FIS0_FIS3_POSN                                 0x3
#define _COG2FIS0_FIS3_POSITION                             0x3
#define _COG2FIS0_FIS3_SIZE                                 0x1
#define _COG2FIS0_FIS3_LENGTH                               0x1
#define _COG2FIS0_FIS3_MASK                                 0x8
#define _COG2FIS0_FIS4_POSN                                 0x4
#define _COG2FIS0_FIS4_POSITION                             0x4
#define _COG2FIS0_FIS4_SIZE                                 0x1
#define _COG2FIS0_FIS4_LENGTH                               0x1
#define _COG2FIS0_FIS4_MASK                                 0x10
#define _COG2FIS0_FIS5_POSN                                 0x5
#define _COG2FIS0_FIS5_POSITION                             0x5
#define _COG2FIS0_FIS5_SIZE                                 0x1
#define _COG2FIS0_FIS5_LENGTH                               0x1
#define _COG2FIS0_FIS5_MASK                                 0x20
#define _COG2FIS0_FIS6_POSN                                 0x6
#define _COG2FIS0_FIS6_POSITION                             0x6
#define _COG2FIS0_FIS6_SIZE                                 0x1
#define _COG2FIS0_FIS6_LENGTH                               0x1
#define _COG2FIS0_FIS6_MASK                                 0x40
#define _COG2FIS0_FIS7_POSN                                 0x7
#define _COG2FIS0_FIS7_POSITION                             0x7
#define _COG2FIS0_FIS7_SIZE                                 0x1
#define _COG2FIS0_FIS7_LENGTH                               0x1
#define _COG2FIS0_FIS7_MASK                                 0x80
#define _COG2FIS0_G2FIS0_POSN                               0x0
#define _COG2FIS0_G2FIS0_POSITION                           0x0
#define _COG2FIS0_G2FIS0_SIZE                               0x1
#define _COG2FIS0_G2FIS0_LENGTH                             0x1
#define _COG2FIS0_G2FIS0_MASK                               0x1
#define _COG2FIS0_G2FIS1_POSN                               0x1
#define _COG2FIS0_G2FIS1_POSITION                           0x1
#define _COG2FIS0_G2FIS1_SIZE                               0x1
#define _COG2FIS0_G2FIS1_LENGTH                             0x1
#define _COG2FIS0_G2FIS1_MASK                               0x2
#define _COG2FIS0_G2FIS2_POSN                               0x2
#define _COG2FIS0_G2FIS2_POSITION                           0x2
#define _COG2FIS0_G2FIS2_SIZE                               0x1
#define _COG2FIS0_G2FIS2_LENGTH                             0x1
#define _COG2FIS0_G2FIS2_MASK                               0x4
#define _COG2FIS0_G2FIS3_POSN                               0x3
#define _COG2FIS0_G2FIS3_POSITION                           0x3
#define _COG2FIS0_G2FIS3_SIZE                               0x1
#define _COG2FIS0_G2FIS3_LENGTH                             0x1
#define _COG2FIS0_G2FIS3_MASK                               0x8
#define _COG2FIS0_G2FIS4_POSN                               0x4
#define _COG2FIS0_G2FIS4_POSITION                           0x4
#define _COG2FIS0_G2FIS4_SIZE                               0x1
#define _COG2FIS0_G2FIS4_LENGTH                             0x1
#define _COG2FIS0_G2FIS4_MASK                               0x10
#define _COG2FIS0_G2FIS5_POSN                               0x5
#define _COG2FIS0_G2FIS5_POSITION                           0x5
#define _COG2FIS0_G2FIS5_SIZE                               0x1
#define _COG2FIS0_G2FIS5_LENGTH                             0x1
#define _COG2FIS0_G2FIS5_MASK                               0x20
#define _COG2FIS0_G2FIS6_POSN                               0x6
#define _COG2FIS0_G2FIS6_POSITION                           0x6
#define _COG2FIS0_G2FIS6_SIZE                               0x1
#define _COG2FIS0_G2FIS6_LENGTH                             0x1
#define _COG2FIS0_G2FIS6_MASK                               0x40
#define _COG2FIS0_G2FIS7_POSN                               0x7
#define _COG2FIS0_G2FIS7_POSITION                           0x7
#define _COG2FIS0_G2FIS7_SIZE                               0x1
#define _COG2FIS0_G2FIS7_LENGTH                             0x1
#define _COG2FIS0_G2FIS7_MASK                               0x80

// Register: COG2FIS1
#define COG2FIS1 COG2FIS1
extern volatile unsigned char           COG2FIS1            __at(0x71A);
#ifndef _LIB_BUILD
asm("COG2FIS1 equ 071Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FIS8                   :1;
        unsigned FIS9                   :1;
        unsigned FIS10                  :1;
        unsigned FIS11                  :1;
        unsigned FIS12                  :1;
        unsigned FIS13                  :1;
        unsigned FIS14                  :1;
        unsigned FIS15                  :1;
    };
    struct {
        unsigned G2FIS8                 :1;
        unsigned G2FIS9                 :1;
        unsigned G2FIS10                :1;
        unsigned G2FIS11                :1;
        unsigned G2FIS12                :1;
        unsigned G2FIS13                :1;
        unsigned G2FIS14                :1;
        unsigned G2FIS15                :1;
    };
} COG2FIS1bits_t;
extern volatile COG2FIS1bits_t COG2FIS1bits __at(0x71A);
// bitfield macros
#define _COG2FIS1_FIS8_POSN                                 0x0
#define _COG2FIS1_FIS8_POSITION                             0x0
#define _COG2FIS1_FIS8_SIZE                                 0x1
#define _COG2FIS1_FIS8_LENGTH                               0x1
#define _COG2FIS1_FIS8_MASK                                 0x1
#define _COG2FIS1_FIS9_POSN                                 0x1
#define _COG2FIS1_FIS9_POSITION                             0x1
#define _COG2FIS1_FIS9_SIZE                                 0x1
#define _COG2FIS1_FIS9_LENGTH                               0x1
#define _COG2FIS1_FIS9_MASK                                 0x2
#define _COG2FIS1_FIS10_POSN                                0x2
#define _COG2FIS1_FIS10_POSITION                            0x2
#define _COG2FIS1_FIS10_SIZE                                0x1
#define _COG2FIS1_FIS10_LENGTH                              0x1
#define _COG2FIS1_FIS10_MASK                                0x4
#define _COG2FIS1_FIS11_POSN                                0x3
#define _COG2FIS1_FIS11_POSITION                            0x3
#define _COG2FIS1_FIS11_SIZE                                0x1
#define _COG2FIS1_FIS11_LENGTH                              0x1
#define _COG2FIS1_FIS11_MASK                                0x8
#define _COG2FIS1_FIS12_POSN                                0x4
#define _COG2FIS1_FIS12_POSITION                            0x4
#define _COG2FIS1_FIS12_SIZE                                0x1
#define _COG2FIS1_FIS12_LENGTH                              0x1
#define _COG2FIS1_FIS12_MASK                                0x10
#define _COG2FIS1_FIS13_POSN                                0x5
#define _COG2FIS1_FIS13_POSITION                            0x5
#define _COG2FIS1_FIS13_SIZE                                0x1
#define _COG2FIS1_FIS13_LENGTH                              0x1
#define _COG2FIS1_FIS13_MASK                                0x20
#define _COG2FIS1_FIS14_POSN                                0x6
#define _COG2FIS1_FIS14_POSITION                            0x6
#define _COG2FIS1_FIS14_SIZE                                0x1
#define _COG2FIS1_FIS14_LENGTH                              0x1
#define _COG2FIS1_FIS14_MASK                                0x40
#define _COG2FIS1_FIS15_POSN                                0x7
#define _COG2FIS1_FIS15_POSITION                            0x7
#define _COG2FIS1_FIS15_SIZE                                0x1
#define _COG2FIS1_FIS15_LENGTH                              0x1
#define _COG2FIS1_FIS15_MASK                                0x80
#define _COG2FIS1_G2FIS8_POSN                               0x0
#define _COG2FIS1_G2FIS8_POSITION                           0x0
#define _COG2FIS1_G2FIS8_SIZE                               0x1
#define _COG2FIS1_G2FIS8_LENGTH                             0x1
#define _COG2FIS1_G2FIS8_MASK                               0x1
#define _COG2FIS1_G2FIS9_POSN                               0x1
#define _COG2FIS1_G2FIS9_POSITION                           0x1
#define _COG2FIS1_G2FIS9_SIZE                               0x1
#define _COG2FIS1_G2FIS9_LENGTH                             0x1
#define _COG2FIS1_G2FIS9_MASK                               0x2
#define _COG2FIS1_G2FIS10_POSN                              0x2
#define _COG2FIS1_G2FIS10_POSITION                          0x2
#define _COG2FIS1_G2FIS10_SIZE                              0x1
#define _COG2FIS1_G2FIS10_LENGTH                            0x1
#define _COG2FIS1_G2FIS10_MASK                              0x4
#define _COG2FIS1_G2FIS11_POSN                              0x3
#define _COG2FIS1_G2FIS11_POSITION                          0x3
#define _COG2FIS1_G2FIS11_SIZE                              0x1
#define _COG2FIS1_G2FIS11_LENGTH                            0x1
#define _COG2FIS1_G2FIS11_MASK                              0x8
#define _COG2FIS1_G2FIS12_POSN                              0x4
#define _COG2FIS1_G2FIS12_POSITION                          0x4
#define _COG2FIS1_G2FIS12_SIZE                              0x1
#define _COG2FIS1_G2FIS12_LENGTH                            0x1
#define _COG2FIS1_G2FIS12_MASK                              0x10
#define _COG2FIS1_G2FIS13_POSN                              0x5
#define _COG2FIS1_G2FIS13_POSITION                          0x5
#define _COG2FIS1_G2FIS13_SIZE                              0x1
#define _COG2FIS1_G2FIS13_LENGTH                            0x1
#define _COG2FIS1_G2FIS13_MASK                              0x20
#define _COG2FIS1_G2FIS14_POSN                              0x6
#define _COG2FIS1_G2FIS14_POSITION                          0x6
#define _COG2FIS1_G2FIS14_SIZE                              0x1
#define _COG2FIS1_G2FIS14_LENGTH                            0x1
#define _COG2FIS1_G2FIS14_MASK                              0x40
#define _COG2FIS1_G2FIS15_POSN                              0x7
#define _COG2FIS1_G2FIS15_POSITION                          0x7
#define _COG2FIS1_G2FIS15_SIZE                              0x1
#define _COG2FIS1_G2FIS15_LENGTH                            0x1
#define _COG2FIS1_G2FIS15_MASK                              0x80

// Register: COG2FSIM0
#define COG2FSIM0 COG2FSIM0
extern volatile unsigned char           COG2FSIM0           __at(0x71B);
#ifndef _LIB_BUILD
asm("COG2FSIM0 equ 071Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSIM0                  :1;
        unsigned FSIM1                  :1;
        unsigned FSIM2                  :1;
        unsigned FSIM3                  :1;
        unsigned FSIM4                  :1;
        unsigned FSIM5                  :1;
        unsigned FSIM6                  :1;
        unsigned FSIM7                  :1;
    };
    struct {
        unsigned G2FSIM0                :1;
        unsigned G2FSIM1                :1;
        unsigned G2FSIM2                :1;
        unsigned G2FSIM3                :1;
        unsigned G2FSIM4                :1;
        unsigned G2FSIM5                :1;
        unsigned G2FSIM6                :1;
        unsigned G2FSIM7                :1;
    };
} COG2FSIM0bits_t;
extern volatile COG2FSIM0bits_t COG2FSIM0bits __at(0x71B);
// bitfield macros
#define _COG2FSIM0_FSIM0_POSN                               0x0
#define _COG2FSIM0_FSIM0_POSITION                           0x0
#define _COG2FSIM0_FSIM0_SIZE                               0x1
#define _COG2FSIM0_FSIM0_LENGTH                             0x1
#define _COG2FSIM0_FSIM0_MASK                               0x1
#define _COG2FSIM0_FSIM1_POSN                               0x1
#define _COG2FSIM0_FSIM1_POSITION                           0x1
#define _COG2FSIM0_FSIM1_SIZE                               0x1
#define _COG2FSIM0_FSIM1_LENGTH                             0x1
#define _COG2FSIM0_FSIM1_MASK                               0x2
#define _COG2FSIM0_FSIM2_POSN                               0x2
#define _COG2FSIM0_FSIM2_POSITION                           0x2
#define _COG2FSIM0_FSIM2_SIZE                               0x1
#define _COG2FSIM0_FSIM2_LENGTH                             0x1
#define _COG2FSIM0_FSIM2_MASK                               0x4
#define _COG2FSIM0_FSIM3_POSN                               0x3
#define _COG2FSIM0_FSIM3_POSITION                           0x3
#define _COG2FSIM0_FSIM3_SIZE                               0x1
#define _COG2FSIM0_FSIM3_LENGTH                             0x1
#define _COG2FSIM0_FSIM3_MASK                               0x8
#define _COG2FSIM0_FSIM4_POSN                               0x4
#define _COG2FSIM0_FSIM4_POSITION                           0x4
#define _COG2FSIM0_FSIM4_SIZE                               0x1
#define _COG2FSIM0_FSIM4_LENGTH                             0x1
#define _COG2FSIM0_FSIM4_MASK                               0x10
#define _COG2FSIM0_FSIM5_POSN                               0x5
#define _COG2FSIM0_FSIM5_POSITION                           0x5
#define _COG2FSIM0_FSIM5_SIZE                               0x1
#define _COG2FSIM0_FSIM5_LENGTH                             0x1
#define _COG2FSIM0_FSIM5_MASK                               0x20
#define _COG2FSIM0_FSIM6_POSN                               0x6
#define _COG2FSIM0_FSIM6_POSITION                           0x6
#define _COG2FSIM0_FSIM6_SIZE                               0x1
#define _COG2FSIM0_FSIM6_LENGTH                             0x1
#define _COG2FSIM0_FSIM6_MASK                               0x40
#define _COG2FSIM0_FSIM7_POSN                               0x7
#define _COG2FSIM0_FSIM7_POSITION                           0x7
#define _COG2FSIM0_FSIM7_SIZE                               0x1
#define _COG2FSIM0_FSIM7_LENGTH                             0x1
#define _COG2FSIM0_FSIM7_MASK                               0x80
#define _COG2FSIM0_G2FSIM0_POSN                             0x0
#define _COG2FSIM0_G2FSIM0_POSITION                         0x0
#define _COG2FSIM0_G2FSIM0_SIZE                             0x1
#define _COG2FSIM0_G2FSIM0_LENGTH                           0x1
#define _COG2FSIM0_G2FSIM0_MASK                             0x1
#define _COG2FSIM0_G2FSIM1_POSN                             0x1
#define _COG2FSIM0_G2FSIM1_POSITION                         0x1
#define _COG2FSIM0_G2FSIM1_SIZE                             0x1
#define _COG2FSIM0_G2FSIM1_LENGTH                           0x1
#define _COG2FSIM0_G2FSIM1_MASK                             0x2
#define _COG2FSIM0_G2FSIM2_POSN                             0x2
#define _COG2FSIM0_G2FSIM2_POSITION                         0x2
#define _COG2FSIM0_G2FSIM2_SIZE                             0x1
#define _COG2FSIM0_G2FSIM2_LENGTH                           0x1
#define _COG2FSIM0_G2FSIM2_MASK                             0x4
#define _COG2FSIM0_G2FSIM3_POSN                             0x3
#define _COG2FSIM0_G2FSIM3_POSITION                         0x3
#define _COG2FSIM0_G2FSIM3_SIZE                             0x1
#define _COG2FSIM0_G2FSIM3_LENGTH                           0x1
#define _COG2FSIM0_G2FSIM3_MASK                             0x8
#define _COG2FSIM0_G2FSIM4_POSN                             0x4
#define _COG2FSIM0_G2FSIM4_POSITION                         0x4
#define _COG2FSIM0_G2FSIM4_SIZE                             0x1
#define _COG2FSIM0_G2FSIM4_LENGTH                           0x1
#define _COG2FSIM0_G2FSIM4_MASK                             0x10
#define _COG2FSIM0_G2FSIM5_POSN                             0x5
#define _COG2FSIM0_G2FSIM5_POSITION                         0x5
#define _COG2FSIM0_G2FSIM5_SIZE                             0x1
#define _COG2FSIM0_G2FSIM5_LENGTH                           0x1
#define _COG2FSIM0_G2FSIM5_MASK                             0x20
#define _COG2FSIM0_G2FSIM6_POSN                             0x6
#define _COG2FSIM0_G2FSIM6_POSITION                         0x6
#define _COG2FSIM0_G2FSIM6_SIZE                             0x1
#define _COG2FSIM0_G2FSIM6_LENGTH                           0x1
#define _COG2FSIM0_G2FSIM6_MASK                             0x40
#define _COG2FSIM0_G2FSIM7_POSN                             0x7
#define _COG2FSIM0_G2FSIM7_POSITION                         0x7
#define _COG2FSIM0_G2FSIM7_SIZE                             0x1
#define _COG2FSIM0_G2FSIM7_LENGTH                           0x1
#define _COG2FSIM0_G2FSIM7_MASK                             0x80

// Register: COG2FSIM1
#define COG2FSIM1 COG2FSIM1
extern volatile unsigned char           COG2FSIM1           __at(0x71C);
#ifndef _LIB_BUILD
asm("COG2FSIM1 equ 071Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSIM8                  :1;
        unsigned FSIM9                  :1;
        unsigned FSIM10                 :1;
        unsigned FSIM11                 :1;
        unsigned FSIM12                 :1;
        unsigned FSIM13                 :1;
        unsigned FSIM14                 :1;
        unsigned FSIM15                 :1;
    };
    struct {
        unsigned G2FSIM8                :1;
        unsigned G2FSIM9                :1;
        unsigned G2FSIM10               :1;
        unsigned G2FSIM11               :1;
        unsigned G2FSIM12               :1;
        unsigned G2FSIM13               :1;
        unsigned G2FSIM14               :1;
        unsigned G2FSIM15               :1;
    };
} COG2FSIM1bits_t;
extern volatile COG2FSIM1bits_t COG2FSIM1bits __at(0x71C);
// bitfield macros
#define _COG2FSIM1_FSIM8_POSN                               0x0
#define _COG2FSIM1_FSIM8_POSITION                           0x0
#define _COG2FSIM1_FSIM8_SIZE                               0x1
#define _COG2FSIM1_FSIM8_LENGTH                             0x1
#define _COG2FSIM1_FSIM8_MASK                               0x1
#define _COG2FSIM1_FSIM9_POSN                               0x1
#define _COG2FSIM1_FSIM9_POSITION                           0x1
#define _COG2FSIM1_FSIM9_SIZE                               0x1
#define _COG2FSIM1_FSIM9_LENGTH                             0x1
#define _COG2FSIM1_FSIM9_MASK                               0x2
#define _COG2FSIM1_FSIM10_POSN                              0x2
#define _COG2FSIM1_FSIM10_POSITION                          0x2
#define _COG2FSIM1_FSIM10_SIZE                              0x1
#define _COG2FSIM1_FSIM10_LENGTH                            0x1
#define _COG2FSIM1_FSIM10_MASK                              0x4
#define _COG2FSIM1_FSIM11_POSN                              0x3
#define _COG2FSIM1_FSIM11_POSITION                          0x3
#define _COG2FSIM1_FSIM11_SIZE                              0x1
#define _COG2FSIM1_FSIM11_LENGTH                            0x1
#define _COG2FSIM1_FSIM11_MASK                              0x8
#define _COG2FSIM1_FSIM12_POSN                              0x4
#define _COG2FSIM1_FSIM12_POSITION                          0x4
#define _COG2FSIM1_FSIM12_SIZE                              0x1
#define _COG2FSIM1_FSIM12_LENGTH                            0x1
#define _COG2FSIM1_FSIM12_MASK                              0x10
#define _COG2FSIM1_FSIM13_POSN                              0x5
#define _COG2FSIM1_FSIM13_POSITION                          0x5
#define _COG2FSIM1_FSIM13_SIZE                              0x1
#define _COG2FSIM1_FSIM13_LENGTH                            0x1
#define _COG2FSIM1_FSIM13_MASK                              0x20
#define _COG2FSIM1_FSIM14_POSN                              0x6
#define _COG2FSIM1_FSIM14_POSITION                          0x6
#define _COG2FSIM1_FSIM14_SIZE                              0x1
#define _COG2FSIM1_FSIM14_LENGTH                            0x1
#define _COG2FSIM1_FSIM14_MASK                              0x40
#define _COG2FSIM1_FSIM15_POSN                              0x7
#define _COG2FSIM1_FSIM15_POSITION                          0x7
#define _COG2FSIM1_FSIM15_SIZE                              0x1
#define _COG2FSIM1_FSIM15_LENGTH                            0x1
#define _COG2FSIM1_FSIM15_MASK                              0x80
#define _COG2FSIM1_G2FSIM8_POSN                             0x0
#define _COG2FSIM1_G2FSIM8_POSITION                         0x0
#define _COG2FSIM1_G2FSIM8_SIZE                             0x1
#define _COG2FSIM1_G2FSIM8_LENGTH                           0x1
#define _COG2FSIM1_G2FSIM8_MASK                             0x1
#define _COG2FSIM1_G2FSIM9_POSN                             0x1
#define _COG2FSIM1_G2FSIM9_POSITION                         0x1
#define _COG2FSIM1_G2FSIM9_SIZE                             0x1
#define _COG2FSIM1_G2FSIM9_LENGTH                           0x1
#define _COG2FSIM1_G2FSIM9_MASK                             0x2
#define _COG2FSIM1_G2FSIM10_POSN                            0x2
#define _COG2FSIM1_G2FSIM10_POSITION                        0x2
#define _COG2FSIM1_G2FSIM10_SIZE                            0x1
#define _COG2FSIM1_G2FSIM10_LENGTH                          0x1
#define _COG2FSIM1_G2FSIM10_MASK                            0x4
#define _COG2FSIM1_G2FSIM11_POSN                            0x3
#define _COG2FSIM1_G2FSIM11_POSITION                        0x3
#define _COG2FSIM1_G2FSIM11_SIZE                            0x1
#define _COG2FSIM1_G2FSIM11_LENGTH                          0x1
#define _COG2FSIM1_G2FSIM11_MASK                            0x8
#define _COG2FSIM1_G2FSIM12_POSN                            0x4
#define _COG2FSIM1_G2FSIM12_POSITION                        0x4
#define _COG2FSIM1_G2FSIM12_SIZE                            0x1
#define _COG2FSIM1_G2FSIM12_LENGTH                          0x1
#define _COG2FSIM1_G2FSIM12_MASK                            0x10
#define _COG2FSIM1_G2FSIM13_POSN                            0x5
#define _COG2FSIM1_G2FSIM13_POSITION                        0x5
#define _COG2FSIM1_G2FSIM13_SIZE                            0x1
#define _COG2FSIM1_G2FSIM13_LENGTH                          0x1
#define _COG2FSIM1_G2FSIM13_MASK                            0x20
#define _COG2FSIM1_G2FSIM14_POSN                            0x6
#define _COG2FSIM1_G2FSIM14_POSITION                        0x6
#define _COG2FSIM1_G2FSIM14_SIZE                            0x1
#define _COG2FSIM1_G2FSIM14_LENGTH                          0x1
#define _COG2FSIM1_G2FSIM14_MASK                            0x40
#define _COG2FSIM1_G2FSIM15_POSN                            0x7
#define _COG2FSIM1_G2FSIM15_POSITION                        0x7
#define _COG2FSIM1_G2FSIM15_SIZE                            0x1
#define _COG2FSIM1_G2FSIM15_LENGTH                          0x1
#define _COG2FSIM1_G2FSIM15_MASK                            0x80

// Register: COG2ASD0
#define COG2ASD0 COG2ASD0
extern volatile unsigned char           COG2ASD0            __at(0x71D);
#ifndef _LIB_BUILD
asm("COG2ASD0 equ 071Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned ASDAC                  :2;
        unsigned ASDBD                  :2;
        unsigned ASREN                  :1;
        unsigned ASE                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned ASDAC0                 :1;
        unsigned ASDAC1                 :1;
        unsigned ASDBD0                 :1;
        unsigned ASDBD1                 :1;
        unsigned ARSEN                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned G2ASDAC                :2;
        unsigned G2ASDBD                :2;
        unsigned G2ARSEN                :1;
        unsigned G2ASE                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned G2ASDAC0               :1;
        unsigned G2ASDAC1               :1;
        unsigned G2ASDBD0               :1;
        unsigned G2ASDBD1               :1;
        unsigned G2ASREN                :1;
    };
} COG2ASD0bits_t;
extern volatile COG2ASD0bits_t COG2ASD0bits __at(0x71D);
// bitfield macros
#define _COG2ASD0_ASDAC_POSN                                0x2
#define _COG2ASD0_ASDAC_POSITION                            0x2
#define _COG2ASD0_ASDAC_SIZE                                0x2
#define _COG2ASD0_ASDAC_LENGTH                              0x2
#define _COG2ASD0_ASDAC_MASK                                0xC
#define _COG2ASD0_ASDBD_POSN                                0x4
#define _COG2ASD0_ASDBD_POSITION                            0x4
#define _COG2ASD0_ASDBD_SIZE                                0x2
#define _COG2ASD0_ASDBD_LENGTH                              0x2
#define _COG2ASD0_ASDBD_MASK                                0x30
#define _COG2ASD0_ASREN_POSN                                0x6
#define _COG2ASD0_ASREN_POSITION                            0x6
#define _COG2ASD0_ASREN_SIZE                                0x1
#define _COG2ASD0_ASREN_LENGTH                              0x1
#define _COG2ASD0_ASREN_MASK                                0x40
#define _COG2ASD0_ASE_POSN                                  0x7
#define _COG2ASD0_ASE_POSITION                              0x7
#define _COG2ASD0_ASE_SIZE                                  0x1
#define _COG2ASD0_ASE_LENGTH                                0x1
#define _COG2ASD0_ASE_MASK                                  0x80
#define _COG2ASD0_ASDAC0_POSN                               0x2
#define _COG2ASD0_ASDAC0_POSITION                           0x2
#define _COG2ASD0_ASDAC0_SIZE                               0x1
#define _COG2ASD0_ASDAC0_LENGTH                             0x1
#define _COG2ASD0_ASDAC0_MASK                               0x4
#define _COG2ASD0_ASDAC1_POSN                               0x3
#define _COG2ASD0_ASDAC1_POSITION                           0x3
#define _COG2ASD0_ASDAC1_SIZE                               0x1
#define _COG2ASD0_ASDAC1_LENGTH                             0x1
#define _COG2ASD0_ASDAC1_MASK                               0x8
#define _COG2ASD0_ASDBD0_POSN                               0x4
#define _COG2ASD0_ASDBD0_POSITION                           0x4
#define _COG2ASD0_ASDBD0_SIZE                               0x1
#define _COG2ASD0_ASDBD0_LENGTH                             0x1
#define _COG2ASD0_ASDBD0_MASK                               0x10
#define _COG2ASD0_ASDBD1_POSN                               0x5
#define _COG2ASD0_ASDBD1_POSITION                           0x5
#define _COG2ASD0_ASDBD1_SIZE                               0x1
#define _COG2ASD0_ASDBD1_LENGTH                             0x1
#define _COG2ASD0_ASDBD1_MASK                               0x20
#define _COG2ASD0_ARSEN_POSN                                0x6
#define _COG2ASD0_ARSEN_POSITION                            0x6
#define _COG2ASD0_ARSEN_SIZE                                0x1
#define _COG2ASD0_ARSEN_LENGTH                              0x1
#define _COG2ASD0_ARSEN_MASK                                0x40
#define _COG2ASD0_G2ASDAC_POSN                              0x2
#define _COG2ASD0_G2ASDAC_POSITION                          0x2
#define _COG2ASD0_G2ASDAC_SIZE                              0x2
#define _COG2ASD0_G2ASDAC_LENGTH                            0x2
#define _COG2ASD0_G2ASDAC_MASK                              0xC
#define _COG2ASD0_G2ASDBD_POSN                              0x4
#define _COG2ASD0_G2ASDBD_POSITION                          0x4
#define _COG2ASD0_G2ASDBD_SIZE                              0x2
#define _COG2ASD0_G2ASDBD_LENGTH                            0x2
#define _COG2ASD0_G2ASDBD_MASK                              0x30
#define _COG2ASD0_G2ARSEN_POSN                              0x6
#define _COG2ASD0_G2ARSEN_POSITION                          0x6
#define _COG2ASD0_G2ARSEN_SIZE                              0x1
#define _COG2ASD0_G2ARSEN_LENGTH                            0x1
#define _COG2ASD0_G2ARSEN_MASK                              0x40
#define _COG2ASD0_G2ASE_POSN                                0x7
#define _COG2ASD0_G2ASE_POSITION                            0x7
#define _COG2ASD0_G2ASE_SIZE                                0x1
#define _COG2ASD0_G2ASE_LENGTH                              0x1
#define _COG2ASD0_G2ASE_MASK                                0x80
#define _COG2ASD0_G2ASDAC0_POSN                             0x2
#define _COG2ASD0_G2ASDAC0_POSITION                         0x2
#define _COG2ASD0_G2ASDAC0_SIZE                             0x1
#define _COG2ASD0_G2ASDAC0_LENGTH                           0x1
#define _COG2ASD0_G2ASDAC0_MASK                             0x4
#define _COG2ASD0_G2ASDAC1_POSN                             0x3
#define _COG2ASD0_G2ASDAC1_POSITION                         0x3
#define _COG2ASD0_G2ASDAC1_SIZE                             0x1
#define _COG2ASD0_G2ASDAC1_LENGTH                           0x1
#define _COG2ASD0_G2ASDAC1_MASK                             0x8
#define _COG2ASD0_G2ASDBD0_POSN                             0x4
#define _COG2ASD0_G2ASDBD0_POSITION                         0x4
#define _COG2ASD0_G2ASDBD0_SIZE                             0x1
#define _COG2ASD0_G2ASDBD0_LENGTH                           0x1
#define _COG2ASD0_G2ASDBD0_MASK                             0x10
#define _COG2ASD0_G2ASDBD1_POSN                             0x5
#define _COG2ASD0_G2ASDBD1_POSITION                         0x5
#define _COG2ASD0_G2ASDBD1_SIZE                             0x1
#define _COG2ASD0_G2ASDBD1_LENGTH                           0x1
#define _COG2ASD0_G2ASDBD1_MASK                             0x20
#define _COG2ASD0_G2ASREN_POSN                              0x6
#define _COG2ASD0_G2ASREN_POSITION                          0x6
#define _COG2ASD0_G2ASREN_SIZE                              0x1
#define _COG2ASD0_G2ASREN_LENGTH                            0x1
#define _COG2ASD0_G2ASREN_MASK                              0x40

// Register: COG2ASD1
#define COG2ASD1 COG2ASD1
extern volatile unsigned char           COG2ASD1            __at(0x71E);
#ifndef _LIB_BUILD
asm("COG2ASD1 equ 071Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned AS0E                   :1;
        unsigned AS1E                   :1;
        unsigned AS2E                   :1;
        unsigned AS3E                   :1;
        unsigned AS4E                   :1;
        unsigned AS5E                   :1;
        unsigned AS6E                   :1;
        unsigned AS7E                   :1;
    };
    struct {
        unsigned G2AS0E                 :1;
        unsigned G2AS1E                 :1;
        unsigned G2AS2E                 :1;
        unsigned G2AS3E                 :1;
        unsigned G2AS4E                 :1;
        unsigned G2AS5E                 :1;
        unsigned G2AS6E                 :1;
        unsigned G2AS7E                 :1;
    };
} COG2ASD1bits_t;
extern volatile COG2ASD1bits_t COG2ASD1bits __at(0x71E);
// bitfield macros
#define _COG2ASD1_AS0E_POSN                                 0x0
#define _COG2ASD1_AS0E_POSITION                             0x0
#define _COG2ASD1_AS0E_SIZE                                 0x1
#define _COG2ASD1_AS0E_LENGTH                               0x1
#define _COG2ASD1_AS0E_MASK                                 0x1
#define _COG2ASD1_AS1E_POSN                                 0x1
#define _COG2ASD1_AS1E_POSITION                             0x1
#define _COG2ASD1_AS1E_SIZE                                 0x1
#define _COG2ASD1_AS1E_LENGTH                               0x1
#define _COG2ASD1_AS1E_MASK                                 0x2
#define _COG2ASD1_AS2E_POSN                                 0x2
#define _COG2ASD1_AS2E_POSITION                             0x2
#define _COG2ASD1_AS2E_SIZE                                 0x1
#define _COG2ASD1_AS2E_LENGTH                               0x1
#define _COG2ASD1_AS2E_MASK                                 0x4
#define _COG2ASD1_AS3E_POSN                                 0x3
#define _COG2ASD1_AS3E_POSITION                             0x3
#define _COG2ASD1_AS3E_SIZE                                 0x1
#define _COG2ASD1_AS3E_LENGTH                               0x1
#define _COG2ASD1_AS3E_MASK                                 0x8
#define _COG2ASD1_AS4E_POSN                                 0x4
#define _COG2ASD1_AS4E_POSITION                             0x4
#define _COG2ASD1_AS4E_SIZE                                 0x1
#define _COG2ASD1_AS4E_LENGTH                               0x1
#define _COG2ASD1_AS4E_MASK                                 0x10
#define _COG2ASD1_AS5E_POSN                                 0x5
#define _COG2ASD1_AS5E_POSITION                             0x5
#define _COG2ASD1_AS5E_SIZE                                 0x1
#define _COG2ASD1_AS5E_LENGTH                               0x1
#define _COG2ASD1_AS5E_MASK                                 0x20
#define _COG2ASD1_AS6E_POSN                                 0x6
#define _COG2ASD1_AS6E_POSITION                             0x6
#define _COG2ASD1_AS6E_SIZE                                 0x1
#define _COG2ASD1_AS6E_LENGTH                               0x1
#define _COG2ASD1_AS6E_MASK                                 0x40
#define _COG2ASD1_AS7E_POSN                                 0x7
#define _COG2ASD1_AS7E_POSITION                             0x7
#define _COG2ASD1_AS7E_SIZE                                 0x1
#define _COG2ASD1_AS7E_LENGTH                               0x1
#define _COG2ASD1_AS7E_MASK                                 0x80
#define _COG2ASD1_G2AS0E_POSN                               0x0
#define _COG2ASD1_G2AS0E_POSITION                           0x0
#define _COG2ASD1_G2AS0E_SIZE                               0x1
#define _COG2ASD1_G2AS0E_LENGTH                             0x1
#define _COG2ASD1_G2AS0E_MASK                               0x1
#define _COG2ASD1_G2AS1E_POSN                               0x1
#define _COG2ASD1_G2AS1E_POSITION                           0x1
#define _COG2ASD1_G2AS1E_SIZE                               0x1
#define _COG2ASD1_G2AS1E_LENGTH                             0x1
#define _COG2ASD1_G2AS1E_MASK                               0x2
#define _COG2ASD1_G2AS2E_POSN                               0x2
#define _COG2ASD1_G2AS2E_POSITION                           0x2
#define _COG2ASD1_G2AS2E_SIZE                               0x1
#define _COG2ASD1_G2AS2E_LENGTH                             0x1
#define _COG2ASD1_G2AS2E_MASK                               0x4
#define _COG2ASD1_G2AS3E_POSN                               0x3
#define _COG2ASD1_G2AS3E_POSITION                           0x3
#define _COG2ASD1_G2AS3E_SIZE                               0x1
#define _COG2ASD1_G2AS3E_LENGTH                             0x1
#define _COG2ASD1_G2AS3E_MASK                               0x8
#define _COG2ASD1_G2AS4E_POSN                               0x4
#define _COG2ASD1_G2AS4E_POSITION                           0x4
#define _COG2ASD1_G2AS4E_SIZE                               0x1
#define _COG2ASD1_G2AS4E_LENGTH                             0x1
#define _COG2ASD1_G2AS4E_MASK                               0x10
#define _COG2ASD1_G2AS5E_POSN                               0x5
#define _COG2ASD1_G2AS5E_POSITION                           0x5
#define _COG2ASD1_G2AS5E_SIZE                               0x1
#define _COG2ASD1_G2AS5E_LENGTH                             0x1
#define _COG2ASD1_G2AS5E_MASK                               0x20
#define _COG2ASD1_G2AS6E_POSN                               0x6
#define _COG2ASD1_G2AS6E_POSITION                           0x6
#define _COG2ASD1_G2AS6E_SIZE                               0x1
#define _COG2ASD1_G2AS6E_LENGTH                             0x1
#define _COG2ASD1_G2AS6E_MASK                               0x40
#define _COG2ASD1_G2AS7E_POSN                               0x7
#define _COG2ASD1_G2AS7E_POSITION                           0x7
#define _COG2ASD1_G2AS7E_SIZE                               0x1
#define _COG2ASD1_G2AS7E_LENGTH                             0x1
#define _COG2ASD1_G2AS7E_MASK                               0x80

// Register: COG2STR
#define COG2STR COG2STR
extern volatile unsigned char           COG2STR             __at(0x71F);
#ifndef _LIB_BUILD
asm("COG2STR equ 071Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned SDATA                  :1;
        unsigned SDATB                  :1;
        unsigned SDATC                  :1;
        unsigned SDATD                  :1;
    };
    struct {
        unsigned G2STRA                 :1;
        unsigned G2STRB                 :1;
        unsigned G2STRC                 :1;
        unsigned G2STRD                 :1;
        unsigned G2SDATA                :1;
        unsigned G2SDATB                :1;
        unsigned G2SDATC                :1;
        unsigned G2SDATD                :1;
    };
} COG2STRbits_t;
extern volatile COG2STRbits_t COG2STRbits __at(0x71F);
// bitfield macros
#define _COG2STR_STRA_POSN                                  0x0
#define _COG2STR_STRA_POSITION                              0x0
#define _COG2STR_STRA_SIZE                                  0x1
#define _COG2STR_STRA_LENGTH                                0x1
#define _COG2STR_STRA_MASK                                  0x1
#define _COG2STR_STRB_POSN                                  0x1
#define _COG2STR_STRB_POSITION                              0x1
#define _COG2STR_STRB_SIZE                                  0x1
#define _COG2STR_STRB_LENGTH                                0x1
#define _COG2STR_STRB_MASK                                  0x2
#define _COG2STR_STRC_POSN                                  0x2
#define _COG2STR_STRC_POSITION                              0x2
#define _COG2STR_STRC_SIZE                                  0x1
#define _COG2STR_STRC_LENGTH                                0x1
#define _COG2STR_STRC_MASK                                  0x4
#define _COG2STR_STRD_POSN                                  0x3
#define _COG2STR_STRD_POSITION                              0x3
#define _COG2STR_STRD_SIZE                                  0x1
#define _COG2STR_STRD_LENGTH                                0x1
#define _COG2STR_STRD_MASK                                  0x8
#define _COG2STR_SDATA_POSN                                 0x4
#define _COG2STR_SDATA_POSITION                             0x4
#define _COG2STR_SDATA_SIZE                                 0x1
#define _COG2STR_SDATA_LENGTH                               0x1
#define _COG2STR_SDATA_MASK                                 0x10
#define _COG2STR_SDATB_POSN                                 0x5
#define _COG2STR_SDATB_POSITION                             0x5
#define _COG2STR_SDATB_SIZE                                 0x1
#define _COG2STR_SDATB_LENGTH                               0x1
#define _COG2STR_SDATB_MASK                                 0x20
#define _COG2STR_SDATC_POSN                                 0x6
#define _COG2STR_SDATC_POSITION                             0x6
#define _COG2STR_SDATC_SIZE                                 0x1
#define _COG2STR_SDATC_LENGTH                               0x1
#define _COG2STR_SDATC_MASK                                 0x40
#define _COG2STR_SDATD_POSN                                 0x7
#define _COG2STR_SDATD_POSITION                             0x7
#define _COG2STR_SDATD_SIZE                                 0x1
#define _COG2STR_SDATD_LENGTH                               0x1
#define _COG2STR_SDATD_MASK                                 0x80
#define _COG2STR_G2STRA_POSN                                0x0
#define _COG2STR_G2STRA_POSITION                            0x0
#define _COG2STR_G2STRA_SIZE                                0x1
#define _COG2STR_G2STRA_LENGTH                              0x1
#define _COG2STR_G2STRA_MASK                                0x1
#define _COG2STR_G2STRB_POSN                                0x1
#define _COG2STR_G2STRB_POSITION                            0x1
#define _COG2STR_G2STRB_SIZE                                0x1
#define _COG2STR_G2STRB_LENGTH                              0x1
#define _COG2STR_G2STRB_MASK                                0x2
#define _COG2STR_G2STRC_POSN                                0x2
#define _COG2STR_G2STRC_POSITION                            0x2
#define _COG2STR_G2STRC_SIZE                                0x1
#define _COG2STR_G2STRC_LENGTH                              0x1
#define _COG2STR_G2STRC_MASK                                0x4
#define _COG2STR_G2STRD_POSN                                0x3
#define _COG2STR_G2STRD_POSITION                            0x3
#define _COG2STR_G2STRD_SIZE                                0x1
#define _COG2STR_G2STRD_LENGTH                              0x1
#define _COG2STR_G2STRD_MASK                                0x8
#define _COG2STR_G2SDATA_POSN                               0x4
#define _COG2STR_G2SDATA_POSITION                           0x4
#define _COG2STR_G2SDATA_SIZE                               0x1
#define _COG2STR_G2SDATA_LENGTH                             0x1
#define _COG2STR_G2SDATA_MASK                               0x10
#define _COG2STR_G2SDATB_POSN                               0x5
#define _COG2STR_G2SDATB_POSITION                           0x5
#define _COG2STR_G2SDATB_SIZE                               0x1
#define _COG2STR_G2SDATB_LENGTH                             0x1
#define _COG2STR_G2SDATB_MASK                               0x20
#define _COG2STR_G2SDATC_POSN                               0x6
#define _COG2STR_G2SDATC_POSITION                           0x6
#define _COG2STR_G2SDATC_SIZE                               0x1
#define _COG2STR_G2SDATC_LENGTH                             0x1
#define _COG2STR_G2SDATC_MASK                               0x40
#define _COG2STR_G2SDATD_POSN                               0x7
#define _COG2STR_G2SDATD_POSITION                           0x7
#define _COG2STR_G2SDATD_SIZE                               0x1
#define _COG2STR_G2SDATD_LENGTH                             0x1
#define _COG2STR_G2SDATD_MASK                               0x80

// Register: PRG1RTSS
#define PRG1RTSS PRG1RTSS
extern volatile unsigned char           PRG1RTSS            __at(0x78E);
#ifndef _LIB_BUILD
asm("PRG1RTSS equ 078Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTSS                   :8;
    };
    struct {
        unsigned RTSS0                  :1;
        unsigned RTSS1                  :1;
        unsigned RTSS2                  :1;
        unsigned RTSS3                  :1;
    };
    struct {
        unsigned RG1RTSS0               :1;
        unsigned RG1RTSS1               :1;
        unsigned RG1RTSS2               :1;
        unsigned RG1RTSS3               :1;
    };
} PRG1RTSSbits_t;
extern volatile PRG1RTSSbits_t PRG1RTSSbits __at(0x78E);
// bitfield macros
#define _PRG1RTSS_RTSS_POSN                                 0x0
#define _PRG1RTSS_RTSS_POSITION                             0x0
#define _PRG1RTSS_RTSS_SIZE                                 0x8
#define _PRG1RTSS_RTSS_LENGTH                               0x8
#define _PRG1RTSS_RTSS_MASK                                 0xFF
#define _PRG1RTSS_RTSS0_POSN                                0x0
#define _PRG1RTSS_RTSS0_POSITION                            0x0
#define _PRG1RTSS_RTSS0_SIZE                                0x1
#define _PRG1RTSS_RTSS0_LENGTH                              0x1
#define _PRG1RTSS_RTSS0_MASK                                0x1
#define _PRG1RTSS_RTSS1_POSN                                0x1
#define _PRG1RTSS_RTSS1_POSITION                            0x1
#define _PRG1RTSS_RTSS1_SIZE                                0x1
#define _PRG1RTSS_RTSS1_LENGTH                              0x1
#define _PRG1RTSS_RTSS1_MASK                                0x2
#define _PRG1RTSS_RTSS2_POSN                                0x2
#define _PRG1RTSS_RTSS2_POSITION                            0x2
#define _PRG1RTSS_RTSS2_SIZE                                0x1
#define _PRG1RTSS_RTSS2_LENGTH                              0x1
#define _PRG1RTSS_RTSS2_MASK                                0x4
#define _PRG1RTSS_RTSS3_POSN                                0x3
#define _PRG1RTSS_RTSS3_POSITION                            0x3
#define _PRG1RTSS_RTSS3_SIZE                                0x1
#define _PRG1RTSS_RTSS3_LENGTH                              0x1
#define _PRG1RTSS_RTSS3_MASK                                0x8
#define _PRG1RTSS_RG1RTSS0_POSN                             0x0
#define _PRG1RTSS_RG1RTSS0_POSITION                         0x0
#define _PRG1RTSS_RG1RTSS0_SIZE                             0x1
#define _PRG1RTSS_RG1RTSS0_LENGTH                           0x1
#define _PRG1RTSS_RG1RTSS0_MASK                             0x1
#define _PRG1RTSS_RG1RTSS1_POSN                             0x1
#define _PRG1RTSS_RG1RTSS1_POSITION                         0x1
#define _PRG1RTSS_RG1RTSS1_SIZE                             0x1
#define _PRG1RTSS_RG1RTSS1_LENGTH                           0x1
#define _PRG1RTSS_RG1RTSS1_MASK                             0x2
#define _PRG1RTSS_RG1RTSS2_POSN                             0x2
#define _PRG1RTSS_RG1RTSS2_POSITION                         0x2
#define _PRG1RTSS_RG1RTSS2_SIZE                             0x1
#define _PRG1RTSS_RG1RTSS2_LENGTH                           0x1
#define _PRG1RTSS_RG1RTSS2_MASK                             0x4
#define _PRG1RTSS_RG1RTSS3_POSN                             0x3
#define _PRG1RTSS_RG1RTSS3_POSITION                         0x3
#define _PRG1RTSS_RG1RTSS3_SIZE                             0x1
#define _PRG1RTSS_RG1RTSS3_LENGTH                           0x1
#define _PRG1RTSS_RG1RTSS3_MASK                             0x8

// Register: PRG1FTSS
#define PRG1FTSS PRG1FTSS
extern volatile unsigned char           PRG1FTSS            __at(0x78F);
#ifndef _LIB_BUILD
asm("PRG1FTSS equ 078Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FTSS                   :8;
    };
    struct {
        unsigned FTSS0                  :1;
        unsigned FTSS1                  :1;
        unsigned FTSS2                  :1;
        unsigned FTSS3                  :1;
    };
    struct {
        unsigned RG1FTSS0               :1;
        unsigned RG1FTSS1               :1;
        unsigned RG1FTSS2               :1;
        unsigned RG1FTSS3               :1;
    };
} PRG1FTSSbits_t;
extern volatile PRG1FTSSbits_t PRG1FTSSbits __at(0x78F);
// bitfield macros
#define _PRG1FTSS_FTSS_POSN                                 0x0
#define _PRG1FTSS_FTSS_POSITION                             0x0
#define _PRG1FTSS_FTSS_SIZE                                 0x8
#define _PRG1FTSS_FTSS_LENGTH                               0x8
#define _PRG1FTSS_FTSS_MASK                                 0xFF
#define _PRG1FTSS_FTSS0_POSN                                0x0
#define _PRG1FTSS_FTSS0_POSITION                            0x0
#define _PRG1FTSS_FTSS0_SIZE                                0x1
#define _PRG1FTSS_FTSS0_LENGTH                              0x1
#define _PRG1FTSS_FTSS0_MASK                                0x1
#define _PRG1FTSS_FTSS1_POSN                                0x1
#define _PRG1FTSS_FTSS1_POSITION                            0x1
#define _PRG1FTSS_FTSS1_SIZE                                0x1
#define _PRG1FTSS_FTSS1_LENGTH                              0x1
#define _PRG1FTSS_FTSS1_MASK                                0x2
#define _PRG1FTSS_FTSS2_POSN                                0x2
#define _PRG1FTSS_FTSS2_POSITION                            0x2
#define _PRG1FTSS_FTSS2_SIZE                                0x1
#define _PRG1FTSS_FTSS2_LENGTH                              0x1
#define _PRG1FTSS_FTSS2_MASK                                0x4
#define _PRG1FTSS_FTSS3_POSN                                0x3
#define _PRG1FTSS_FTSS3_POSITION                            0x3
#define _PRG1FTSS_FTSS3_SIZE                                0x1
#define _PRG1FTSS_FTSS3_LENGTH                              0x1
#define _PRG1FTSS_FTSS3_MASK                                0x8
#define _PRG1FTSS_RG1FTSS0_POSN                             0x0
#define _PRG1FTSS_RG1FTSS0_POSITION                         0x0
#define _PRG1FTSS_RG1FTSS0_SIZE                             0x1
#define _PRG1FTSS_RG1FTSS0_LENGTH                           0x1
#define _PRG1FTSS_RG1FTSS0_MASK                             0x1
#define _PRG1FTSS_RG1FTSS1_POSN                             0x1
#define _PRG1FTSS_RG1FTSS1_POSITION                         0x1
#define _PRG1FTSS_RG1FTSS1_SIZE                             0x1
#define _PRG1FTSS_RG1FTSS1_LENGTH                           0x1
#define _PRG1FTSS_RG1FTSS1_MASK                             0x2
#define _PRG1FTSS_RG1FTSS2_POSN                             0x2
#define _PRG1FTSS_RG1FTSS2_POSITION                         0x2
#define _PRG1FTSS_RG1FTSS2_SIZE                             0x1
#define _PRG1FTSS_RG1FTSS2_LENGTH                           0x1
#define _PRG1FTSS_RG1FTSS2_MASK                             0x4
#define _PRG1FTSS_RG1FTSS3_POSN                             0x3
#define _PRG1FTSS_RG1FTSS3_POSITION                         0x3
#define _PRG1FTSS_RG1FTSS3_SIZE                             0x1
#define _PRG1FTSS_RG1FTSS3_LENGTH                           0x1
#define _PRG1FTSS_RG1FTSS3_MASK                             0x8

// Register: PRG1INS
#define PRG1INS PRG1INS
extern volatile unsigned char           PRG1INS             __at(0x790);
#ifndef _LIB_BUILD
asm("PRG1INS equ 0790h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INS                    :8;
    };
    struct {
        unsigned INS0                   :1;
        unsigned INS1                   :1;
        unsigned INS2                   :1;
        unsigned INS3                   :1;
    };
    struct {
        unsigned RG1INS0                :1;
        unsigned RG1INS1                :1;
        unsigned RG1INS2                :1;
        unsigned RG1INS3                :1;
    };
} PRG1INSbits_t;
extern volatile PRG1INSbits_t PRG1INSbits __at(0x790);
// bitfield macros
#define _PRG1INS_INS_POSN                                   0x0
#define _PRG1INS_INS_POSITION                               0x0
#define _PRG1INS_INS_SIZE                                   0x8
#define _PRG1INS_INS_LENGTH                                 0x8
#define _PRG1INS_INS_MASK                                   0xFF
#define _PRG1INS_INS0_POSN                                  0x0
#define _PRG1INS_INS0_POSITION                              0x0
#define _PRG1INS_INS0_SIZE                                  0x1
#define _PRG1INS_INS0_LENGTH                                0x1
#define _PRG1INS_INS0_MASK                                  0x1
#define _PRG1INS_INS1_POSN                                  0x1
#define _PRG1INS_INS1_POSITION                              0x1
#define _PRG1INS_INS1_SIZE                                  0x1
#define _PRG1INS_INS1_LENGTH                                0x1
#define _PRG1INS_INS1_MASK                                  0x2
#define _PRG1INS_INS2_POSN                                  0x2
#define _PRG1INS_INS2_POSITION                              0x2
#define _PRG1INS_INS2_SIZE                                  0x1
#define _PRG1INS_INS2_LENGTH                                0x1
#define _PRG1INS_INS2_MASK                                  0x4
#define _PRG1INS_INS3_POSN                                  0x3
#define _PRG1INS_INS3_POSITION                              0x3
#define _PRG1INS_INS3_SIZE                                  0x1
#define _PRG1INS_INS3_LENGTH                                0x1
#define _PRG1INS_INS3_MASK                                  0x8
#define _PRG1INS_RG1INS0_POSN                               0x0
#define _PRG1INS_RG1INS0_POSITION                           0x0
#define _PRG1INS_RG1INS0_SIZE                               0x1
#define _PRG1INS_RG1INS0_LENGTH                             0x1
#define _PRG1INS_RG1INS0_MASK                               0x1
#define _PRG1INS_RG1INS1_POSN                               0x1
#define _PRG1INS_RG1INS1_POSITION                           0x1
#define _PRG1INS_RG1INS1_SIZE                               0x1
#define _PRG1INS_RG1INS1_LENGTH                             0x1
#define _PRG1INS_RG1INS1_MASK                               0x2
#define _PRG1INS_RG1INS2_POSN                               0x2
#define _PRG1INS_RG1INS2_POSITION                           0x2
#define _PRG1INS_RG1INS2_SIZE                               0x1
#define _PRG1INS_RG1INS2_LENGTH                             0x1
#define _PRG1INS_RG1INS2_MASK                               0x4
#define _PRG1INS_RG1INS3_POSN                               0x3
#define _PRG1INS_RG1INS3_POSITION                           0x3
#define _PRG1INS_RG1INS3_SIZE                               0x1
#define _PRG1INS_RG1INS3_LENGTH                             0x1
#define _PRG1INS_RG1INS3_MASK                               0x8

// Register: PRG1CON0
#define PRG1CON0 PRG1CON0
extern volatile unsigned char           PRG1CON0            __at(0x791);
#ifndef _LIB_BUILD
asm("PRG1CON0 equ 0791h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned GO                     :1;
        unsigned OS                     :1;
        unsigned MODE                   :2;
        unsigned REDG                   :1;
        unsigned FEDG                   :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
    };
    struct {
        unsigned RG1GO                  :1;
        unsigned RG1OS                  :1;
        unsigned RG1MODE                :2;
        unsigned RG1REDG                :1;
        unsigned RG1FEDG                :1;
        unsigned                        :1;
        unsigned RG1EN                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned RG1MODE0               :1;
        unsigned RG1MODE1               :1;
    };
} PRG1CON0bits_t;
extern volatile PRG1CON0bits_t PRG1CON0bits __at(0x791);
// bitfield macros
#define _PRG1CON0_GO_POSN                                   0x0
#define _PRG1CON0_GO_POSITION                               0x0
#define _PRG1CON0_GO_SIZE                                   0x1
#define _PRG1CON0_GO_LENGTH                                 0x1
#define _PRG1CON0_GO_MASK                                   0x1
#define _PRG1CON0_OS_POSN                                   0x1
#define _PRG1CON0_OS_POSITION                               0x1
#define _PRG1CON0_OS_SIZE                                   0x1
#define _PRG1CON0_OS_LENGTH                                 0x1
#define _PRG1CON0_OS_MASK                                   0x2
#define _PRG1CON0_MODE_POSN                                 0x2
#define _PRG1CON0_MODE_POSITION                             0x2
#define _PRG1CON0_MODE_SIZE                                 0x2
#define _PRG1CON0_MODE_LENGTH                               0x2
#define _PRG1CON0_MODE_MASK                                 0xC
#define _PRG1CON0_REDG_POSN                                 0x4
#define _PRG1CON0_REDG_POSITION                             0x4
#define _PRG1CON0_REDG_SIZE                                 0x1
#define _PRG1CON0_REDG_LENGTH                               0x1
#define _PRG1CON0_REDG_MASK                                 0x10
#define _PRG1CON0_FEDG_POSN                                 0x5
#define _PRG1CON0_FEDG_POSITION                             0x5
#define _PRG1CON0_FEDG_SIZE                                 0x1
#define _PRG1CON0_FEDG_LENGTH                               0x1
#define _PRG1CON0_FEDG_MASK                                 0x20
#define _PRG1CON0_EN_POSN                                   0x7
#define _PRG1CON0_EN_POSITION                               0x7
#define _PRG1CON0_EN_SIZE                                   0x1
#define _PRG1CON0_EN_LENGTH                                 0x1
#define _PRG1CON0_EN_MASK                                   0x80
#define _PRG1CON0_MODE0_POSN                                0x2
#define _PRG1CON0_MODE0_POSITION                            0x2
#define _PRG1CON0_MODE0_SIZE                                0x1
#define _PRG1CON0_MODE0_LENGTH                              0x1
#define _PRG1CON0_MODE0_MASK                                0x4
#define _PRG1CON0_MODE1_POSN                                0x3
#define _PRG1CON0_MODE1_POSITION                            0x3
#define _PRG1CON0_MODE1_SIZE                                0x1
#define _PRG1CON0_MODE1_LENGTH                              0x1
#define _PRG1CON0_MODE1_MASK                                0x8
#define _PRG1CON0_RG1GO_POSN                                0x0
#define _PRG1CON0_RG1GO_POSITION                            0x0
#define _PRG1CON0_RG1GO_SIZE                                0x1
#define _PRG1CON0_RG1GO_LENGTH                              0x1
#define _PRG1CON0_RG1GO_MASK                                0x1
#define _PRG1CON0_RG1OS_POSN                                0x1
#define _PRG1CON0_RG1OS_POSITION                            0x1
#define _PRG1CON0_RG1OS_SIZE                                0x1
#define _PRG1CON0_RG1OS_LENGTH                              0x1
#define _PRG1CON0_RG1OS_MASK                                0x2
#define _PRG1CON0_RG1MODE_POSN                              0x2
#define _PRG1CON0_RG1MODE_POSITION                          0x2
#define _PRG1CON0_RG1MODE_SIZE                              0x2
#define _PRG1CON0_RG1MODE_LENGTH                            0x2
#define _PRG1CON0_RG1MODE_MASK                              0xC
#define _PRG1CON0_RG1REDG_POSN                              0x4
#define _PRG1CON0_RG1REDG_POSITION                          0x4
#define _PRG1CON0_RG1REDG_SIZE                              0x1
#define _PRG1CON0_RG1REDG_LENGTH                            0x1
#define _PRG1CON0_RG1REDG_MASK                              0x10
#define _PRG1CON0_RG1FEDG_POSN                              0x5
#define _PRG1CON0_RG1FEDG_POSITION                          0x5
#define _PRG1CON0_RG1FEDG_SIZE                              0x1
#define _PRG1CON0_RG1FEDG_LENGTH                            0x1
#define _PRG1CON0_RG1FEDG_MASK                              0x20
#define _PRG1CON0_RG1EN_POSN                                0x7
#define _PRG1CON0_RG1EN_POSITION                            0x7
#define _PRG1CON0_RG1EN_SIZE                                0x1
#define _PRG1CON0_RG1EN_LENGTH                              0x1
#define _PRG1CON0_RG1EN_MASK                                0x80
#define _PRG1CON0_RG1MODE0_POSN                             0x2
#define _PRG1CON0_RG1MODE0_POSITION                         0x2
#define _PRG1CON0_RG1MODE0_SIZE                             0x1
#define _PRG1CON0_RG1MODE0_LENGTH                           0x1
#define _PRG1CON0_RG1MODE0_MASK                             0x4
#define _PRG1CON0_RG1MODE1_POSN                             0x3
#define _PRG1CON0_RG1MODE1_POSITION                         0x3
#define _PRG1CON0_RG1MODE1_SIZE                             0x1
#define _PRG1CON0_RG1MODE1_LENGTH                           0x1
#define _PRG1CON0_RG1MODE1_MASK                             0x8

// Register: PRG1CON1
#define PRG1CON1 PRG1CON1
extern volatile unsigned char           PRG1CON1            __at(0x792);
#ifndef _LIB_BUILD
asm("PRG1CON1 equ 0792h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RPOL                   :1;
        unsigned FPOL                   :1;
        unsigned RDY                    :1;
    };
    struct {
        unsigned RG1RPOL                :1;
        unsigned RG1FPOL                :1;
        unsigned RG1RDY                 :1;
    };
} PRG1CON1bits_t;
extern volatile PRG1CON1bits_t PRG1CON1bits __at(0x792);
// bitfield macros
#define _PRG1CON1_RPOL_POSN                                 0x0
#define _PRG1CON1_RPOL_POSITION                             0x0
#define _PRG1CON1_RPOL_SIZE                                 0x1
#define _PRG1CON1_RPOL_LENGTH                               0x1
#define _PRG1CON1_RPOL_MASK                                 0x1
#define _PRG1CON1_FPOL_POSN                                 0x1
#define _PRG1CON1_FPOL_POSITION                             0x1
#define _PRG1CON1_FPOL_SIZE                                 0x1
#define _PRG1CON1_FPOL_LENGTH                               0x1
#define _PRG1CON1_FPOL_MASK                                 0x2
#define _PRG1CON1_RDY_POSN                                  0x2
#define _PRG1CON1_RDY_POSITION                              0x2
#define _PRG1CON1_RDY_SIZE                                  0x1
#define _PRG1CON1_RDY_LENGTH                                0x1
#define _PRG1CON1_RDY_MASK                                  0x4
#define _PRG1CON1_RG1RPOL_POSN                              0x0
#define _PRG1CON1_RG1RPOL_POSITION                          0x0
#define _PRG1CON1_RG1RPOL_SIZE                              0x1
#define _PRG1CON1_RG1RPOL_LENGTH                            0x1
#define _PRG1CON1_RG1RPOL_MASK                              0x1
#define _PRG1CON1_RG1FPOL_POSN                              0x1
#define _PRG1CON1_RG1FPOL_POSITION                          0x1
#define _PRG1CON1_RG1FPOL_SIZE                              0x1
#define _PRG1CON1_RG1FPOL_LENGTH                            0x1
#define _PRG1CON1_RG1FPOL_MASK                              0x2
#define _PRG1CON1_RG1RDY_POSN                               0x2
#define _PRG1CON1_RG1RDY_POSITION                           0x2
#define _PRG1CON1_RG1RDY_SIZE                               0x1
#define _PRG1CON1_RG1RDY_LENGTH                             0x1
#define _PRG1CON1_RG1RDY_MASK                               0x4

// Register: PRG1CON2
#define PRG1CON2 PRG1CON2
extern volatile unsigned char           PRG1CON2            __at(0x793);
#ifndef _LIB_BUILD
asm("PRG1CON2 equ 0793h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ISET                   :5;
    };
    struct {
        unsigned ISET0                  :1;
        unsigned ISET1                  :1;
        unsigned ISET2                  :1;
        unsigned ISET3                  :1;
        unsigned ISET4                  :1;
    };
    struct {
        unsigned RG1ISET                :5;
    };
    struct {
        unsigned RG1ISET0               :1;
        unsigned RG1ISET1               :1;
        unsigned RG1ISET2               :1;
        unsigned RG1ISET3               :1;
        unsigned RG1ISET4               :1;
    };
} PRG1CON2bits_t;
extern volatile PRG1CON2bits_t PRG1CON2bits __at(0x793);
// bitfield macros
#define _PRG1CON2_ISET_POSN                                 0x0
#define _PRG1CON2_ISET_POSITION                             0x0
#define _PRG1CON2_ISET_SIZE                                 0x5
#define _PRG1CON2_ISET_LENGTH                               0x5
#define _PRG1CON2_ISET_MASK                                 0x1F
#define _PRG1CON2_ISET0_POSN                                0x0
#define _PRG1CON2_ISET0_POSITION                            0x0
#define _PRG1CON2_ISET0_SIZE                                0x1
#define _PRG1CON2_ISET0_LENGTH                              0x1
#define _PRG1CON2_ISET0_MASK                                0x1
#define _PRG1CON2_ISET1_POSN                                0x1
#define _PRG1CON2_ISET1_POSITION                            0x1
#define _PRG1CON2_ISET1_SIZE                                0x1
#define _PRG1CON2_ISET1_LENGTH                              0x1
#define _PRG1CON2_ISET1_MASK                                0x2
#define _PRG1CON2_ISET2_POSN                                0x2
#define _PRG1CON2_ISET2_POSITION                            0x2
#define _PRG1CON2_ISET2_SIZE                                0x1
#define _PRG1CON2_ISET2_LENGTH                              0x1
#define _PRG1CON2_ISET2_MASK                                0x4
#define _PRG1CON2_ISET3_POSN                                0x3
#define _PRG1CON2_ISET3_POSITION                            0x3
#define _PRG1CON2_ISET3_SIZE                                0x1
#define _PRG1CON2_ISET3_LENGTH                              0x1
#define _PRG1CON2_ISET3_MASK                                0x8
#define _PRG1CON2_ISET4_POSN                                0x4
#define _PRG1CON2_ISET4_POSITION                            0x4
#define _PRG1CON2_ISET4_SIZE                                0x1
#define _PRG1CON2_ISET4_LENGTH                              0x1
#define _PRG1CON2_ISET4_MASK                                0x10
#define _PRG1CON2_RG1ISET_POSN                              0x0
#define _PRG1CON2_RG1ISET_POSITION                          0x0
#define _PRG1CON2_RG1ISET_SIZE                              0x5
#define _PRG1CON2_RG1ISET_LENGTH                            0x5
#define _PRG1CON2_RG1ISET_MASK                              0x1F
#define _PRG1CON2_RG1ISET0_POSN                             0x0
#define _PRG1CON2_RG1ISET0_POSITION                         0x0
#define _PRG1CON2_RG1ISET0_SIZE                             0x1
#define _PRG1CON2_RG1ISET0_LENGTH                           0x1
#define _PRG1CON2_RG1ISET0_MASK                             0x1
#define _PRG1CON2_RG1ISET1_POSN                             0x1
#define _PRG1CON2_RG1ISET1_POSITION                         0x1
#define _PRG1CON2_RG1ISET1_SIZE                             0x1
#define _PRG1CON2_RG1ISET1_LENGTH                           0x1
#define _PRG1CON2_RG1ISET1_MASK                             0x2
#define _PRG1CON2_RG1ISET2_POSN                             0x2
#define _PRG1CON2_RG1ISET2_POSITION                         0x2
#define _PRG1CON2_RG1ISET2_SIZE                             0x1
#define _PRG1CON2_RG1ISET2_LENGTH                           0x1
#define _PRG1CON2_RG1ISET2_MASK                             0x4
#define _PRG1CON2_RG1ISET3_POSN                             0x3
#define _PRG1CON2_RG1ISET3_POSITION                         0x3
#define _PRG1CON2_RG1ISET3_SIZE                             0x1
#define _PRG1CON2_RG1ISET3_LENGTH                           0x1
#define _PRG1CON2_RG1ISET3_MASK                             0x8
#define _PRG1CON2_RG1ISET4_POSN                             0x4
#define _PRG1CON2_RG1ISET4_POSITION                         0x4
#define _PRG1CON2_RG1ISET4_SIZE                             0x1
#define _PRG1CON2_RG1ISET4_LENGTH                           0x1
#define _PRG1CON2_RG1ISET4_MASK                             0x10

// Register: PRG2RTSS
#define PRG2RTSS PRG2RTSS
extern volatile unsigned char           PRG2RTSS            __at(0x794);
#ifndef _LIB_BUILD
asm("PRG2RTSS equ 0794h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTSS                   :8;
    };
    struct {
        unsigned RTSS0                  :1;
        unsigned RTSS1                  :1;
        unsigned RTSS2                  :1;
        unsigned RTSS3                  :1;
    };
    struct {
        unsigned RG2RTSS0               :1;
        unsigned RG2RTSS1               :1;
        unsigned RG2RTSS2               :1;
        unsigned RG2RTSS3               :1;
    };
} PRG2RTSSbits_t;
extern volatile PRG2RTSSbits_t PRG2RTSSbits __at(0x794);
// bitfield macros
#define _PRG2RTSS_RTSS_POSN                                 0x0
#define _PRG2RTSS_RTSS_POSITION                             0x0
#define _PRG2RTSS_RTSS_SIZE                                 0x8
#define _PRG2RTSS_RTSS_LENGTH                               0x8
#define _PRG2RTSS_RTSS_MASK                                 0xFF
#define _PRG2RTSS_RTSS0_POSN                                0x0
#define _PRG2RTSS_RTSS0_POSITION                            0x0
#define _PRG2RTSS_RTSS0_SIZE                                0x1
#define _PRG2RTSS_RTSS0_LENGTH                              0x1
#define _PRG2RTSS_RTSS0_MASK                                0x1
#define _PRG2RTSS_RTSS1_POSN                                0x1
#define _PRG2RTSS_RTSS1_POSITION                            0x1
#define _PRG2RTSS_RTSS1_SIZE                                0x1
#define _PRG2RTSS_RTSS1_LENGTH                              0x1
#define _PRG2RTSS_RTSS1_MASK                                0x2
#define _PRG2RTSS_RTSS2_POSN                                0x2
#define _PRG2RTSS_RTSS2_POSITION                            0x2
#define _PRG2RTSS_RTSS2_SIZE                                0x1
#define _PRG2RTSS_RTSS2_LENGTH                              0x1
#define _PRG2RTSS_RTSS2_MASK                                0x4
#define _PRG2RTSS_RTSS3_POSN                                0x3
#define _PRG2RTSS_RTSS3_POSITION                            0x3
#define _PRG2RTSS_RTSS3_SIZE                                0x1
#define _PRG2RTSS_RTSS3_LENGTH                              0x1
#define _PRG2RTSS_RTSS3_MASK                                0x8
#define _PRG2RTSS_RG2RTSS0_POSN                             0x0
#define _PRG2RTSS_RG2RTSS0_POSITION                         0x0
#define _PRG2RTSS_RG2RTSS0_SIZE                             0x1
#define _PRG2RTSS_RG2RTSS0_LENGTH                           0x1
#define _PRG2RTSS_RG2RTSS0_MASK                             0x1
#define _PRG2RTSS_RG2RTSS1_POSN                             0x1
#define _PRG2RTSS_RG2RTSS1_POSITION                         0x1
#define _PRG2RTSS_RG2RTSS1_SIZE                             0x1
#define _PRG2RTSS_RG2RTSS1_LENGTH                           0x1
#define _PRG2RTSS_RG2RTSS1_MASK                             0x2
#define _PRG2RTSS_RG2RTSS2_POSN                             0x2
#define _PRG2RTSS_RG2RTSS2_POSITION                         0x2
#define _PRG2RTSS_RG2RTSS2_SIZE                             0x1
#define _PRG2RTSS_RG2RTSS2_LENGTH                           0x1
#define _PRG2RTSS_RG2RTSS2_MASK                             0x4
#define _PRG2RTSS_RG2RTSS3_POSN                             0x3
#define _PRG2RTSS_RG2RTSS3_POSITION                         0x3
#define _PRG2RTSS_RG2RTSS3_SIZE                             0x1
#define _PRG2RTSS_RG2RTSS3_LENGTH                           0x1
#define _PRG2RTSS_RG2RTSS3_MASK                             0x8

// Register: PRG2FTSS
#define PRG2FTSS PRG2FTSS
extern volatile unsigned char           PRG2FTSS            __at(0x795);
#ifndef _LIB_BUILD
asm("PRG2FTSS equ 0795h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FTSS                   :8;
    };
    struct {
        unsigned FTSS0                  :1;
        unsigned FTSS1                  :1;
        unsigned FTSS2                  :1;
        unsigned FTSS3                  :1;
    };
    struct {
        unsigned RG2FTSS0               :1;
        unsigned RG2FTSS1               :1;
        unsigned RG2FTSS2               :1;
        unsigned RG2FTSS3               :1;
    };
} PRG2FTSSbits_t;
extern volatile PRG2FTSSbits_t PRG2FTSSbits __at(0x795);
// bitfield macros
#define _PRG2FTSS_FTSS_POSN                                 0x0
#define _PRG2FTSS_FTSS_POSITION                             0x0
#define _PRG2FTSS_FTSS_SIZE                                 0x8
#define _PRG2FTSS_FTSS_LENGTH                               0x8
#define _PRG2FTSS_FTSS_MASK                                 0xFF
#define _PRG2FTSS_FTSS0_POSN                                0x0
#define _PRG2FTSS_FTSS0_POSITION                            0x0
#define _PRG2FTSS_FTSS0_SIZE                                0x1
#define _PRG2FTSS_FTSS0_LENGTH                              0x1
#define _PRG2FTSS_FTSS0_MASK                                0x1
#define _PRG2FTSS_FTSS1_POSN                                0x1
#define _PRG2FTSS_FTSS1_POSITION                            0x1
#define _PRG2FTSS_FTSS1_SIZE                                0x1
#define _PRG2FTSS_FTSS1_LENGTH                              0x1
#define _PRG2FTSS_FTSS1_MASK                                0x2
#define _PRG2FTSS_FTSS2_POSN                                0x2
#define _PRG2FTSS_FTSS2_POSITION                            0x2
#define _PRG2FTSS_FTSS2_SIZE                                0x1
#define _PRG2FTSS_FTSS2_LENGTH                              0x1
#define _PRG2FTSS_FTSS2_MASK                                0x4
#define _PRG2FTSS_FTSS3_POSN                                0x3
#define _PRG2FTSS_FTSS3_POSITION                            0x3
#define _PRG2FTSS_FTSS3_SIZE                                0x1
#define _PRG2FTSS_FTSS3_LENGTH                              0x1
#define _PRG2FTSS_FTSS3_MASK                                0x8
#define _PRG2FTSS_RG2FTSS0_POSN                             0x0
#define _PRG2FTSS_RG2FTSS0_POSITION                         0x0
#define _PRG2FTSS_RG2FTSS0_SIZE                             0x1
#define _PRG2FTSS_RG2FTSS0_LENGTH                           0x1
#define _PRG2FTSS_RG2FTSS0_MASK                             0x1
#define _PRG2FTSS_RG2FTSS1_POSN                             0x1
#define _PRG2FTSS_RG2FTSS1_POSITION                         0x1
#define _PRG2FTSS_RG2FTSS1_SIZE                             0x1
#define _PRG2FTSS_RG2FTSS1_LENGTH                           0x1
#define _PRG2FTSS_RG2FTSS1_MASK                             0x2
#define _PRG2FTSS_RG2FTSS2_POSN                             0x2
#define _PRG2FTSS_RG2FTSS2_POSITION                         0x2
#define _PRG2FTSS_RG2FTSS2_SIZE                             0x1
#define _PRG2FTSS_RG2FTSS2_LENGTH                           0x1
#define _PRG2FTSS_RG2FTSS2_MASK                             0x4
#define _PRG2FTSS_RG2FTSS3_POSN                             0x3
#define _PRG2FTSS_RG2FTSS3_POSITION                         0x3
#define _PRG2FTSS_RG2FTSS3_SIZE                             0x1
#define _PRG2FTSS_RG2FTSS3_LENGTH                           0x1
#define _PRG2FTSS_RG2FTSS3_MASK                             0x8

// Register: PRG2INS
#define PRG2INS PRG2INS
extern volatile unsigned char           PRG2INS             __at(0x796);
#ifndef _LIB_BUILD
asm("PRG2INS equ 0796h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INS                    :8;
    };
    struct {
        unsigned INS0                   :1;
        unsigned INS1                   :1;
        unsigned INS2                   :1;
        unsigned INS3                   :1;
    };
    struct {
        unsigned RG2INS0                :1;
        unsigned RG2INS1                :1;
        unsigned RG2INS2                :1;
        unsigned RG2INS3                :1;
    };
} PRG2INSbits_t;
extern volatile PRG2INSbits_t PRG2INSbits __at(0x796);
// bitfield macros
#define _PRG2INS_INS_POSN                                   0x0
#define _PRG2INS_INS_POSITION                               0x0
#define _PRG2INS_INS_SIZE                                   0x8
#define _PRG2INS_INS_LENGTH                                 0x8
#define _PRG2INS_INS_MASK                                   0xFF
#define _PRG2INS_INS0_POSN                                  0x0
#define _PRG2INS_INS0_POSITION                              0x0
#define _PRG2INS_INS0_SIZE                                  0x1
#define _PRG2INS_INS0_LENGTH                                0x1
#define _PRG2INS_INS0_MASK                                  0x1
#define _PRG2INS_INS1_POSN                                  0x1
#define _PRG2INS_INS1_POSITION                              0x1
#define _PRG2INS_INS1_SIZE                                  0x1
#define _PRG2INS_INS1_LENGTH                                0x1
#define _PRG2INS_INS1_MASK                                  0x2
#define _PRG2INS_INS2_POSN                                  0x2
#define _PRG2INS_INS2_POSITION                              0x2
#define _PRG2INS_INS2_SIZE                                  0x1
#define _PRG2INS_INS2_LENGTH                                0x1
#define _PRG2INS_INS2_MASK                                  0x4
#define _PRG2INS_INS3_POSN                                  0x3
#define _PRG2INS_INS3_POSITION                              0x3
#define _PRG2INS_INS3_SIZE                                  0x1
#define _PRG2INS_INS3_LENGTH                                0x1
#define _PRG2INS_INS3_MASK                                  0x8
#define _PRG2INS_RG2INS0_POSN                               0x0
#define _PRG2INS_RG2INS0_POSITION                           0x0
#define _PRG2INS_RG2INS0_SIZE                               0x1
#define _PRG2INS_RG2INS0_LENGTH                             0x1
#define _PRG2INS_RG2INS0_MASK                               0x1
#define _PRG2INS_RG2INS1_POSN                               0x1
#define _PRG2INS_RG2INS1_POSITION                           0x1
#define _PRG2INS_RG2INS1_SIZE                               0x1
#define _PRG2INS_RG2INS1_LENGTH                             0x1
#define _PRG2INS_RG2INS1_MASK                               0x2
#define _PRG2INS_RG2INS2_POSN                               0x2
#define _PRG2INS_RG2INS2_POSITION                           0x2
#define _PRG2INS_RG2INS2_SIZE                               0x1
#define _PRG2INS_RG2INS2_LENGTH                             0x1
#define _PRG2INS_RG2INS2_MASK                               0x4
#define _PRG2INS_RG2INS3_POSN                               0x3
#define _PRG2INS_RG2INS3_POSITION                           0x3
#define _PRG2INS_RG2INS3_SIZE                               0x1
#define _PRG2INS_RG2INS3_LENGTH                             0x1
#define _PRG2INS_RG2INS3_MASK                               0x8

// Register: PRG2CON0
#define PRG2CON0 PRG2CON0
extern volatile unsigned char           PRG2CON0            __at(0x797);
#ifndef _LIB_BUILD
asm("PRG2CON0 equ 0797h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned GO                     :1;
        unsigned OS                     :1;
        unsigned MODE                   :2;
        unsigned REDG                   :1;
        unsigned FEDG                   :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
    };
    struct {
        unsigned RG2GO                  :1;
        unsigned RG2OS                  :1;
        unsigned RG2MODE                :2;
        unsigned RG2REDG                :1;
        unsigned RG2FEDG                :1;
        unsigned                        :1;
        unsigned RG2EN                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned RG2MODE0               :1;
        unsigned RG2MODE1               :1;
    };
} PRG2CON0bits_t;
extern volatile PRG2CON0bits_t PRG2CON0bits __at(0x797);
// bitfield macros
#define _PRG2CON0_GO_POSN                                   0x0
#define _PRG2CON0_GO_POSITION                               0x0
#define _PRG2CON0_GO_SIZE                                   0x1
#define _PRG2CON0_GO_LENGTH                                 0x1
#define _PRG2CON0_GO_MASK                                   0x1
#define _PRG2CON0_OS_POSN                                   0x1
#define _PRG2CON0_OS_POSITION                               0x1
#define _PRG2CON0_OS_SIZE                                   0x1
#define _PRG2CON0_OS_LENGTH                                 0x1
#define _PRG2CON0_OS_MASK                                   0x2
#define _PRG2CON0_MODE_POSN                                 0x2
#define _PRG2CON0_MODE_POSITION                             0x2
#define _PRG2CON0_MODE_SIZE                                 0x2
#define _PRG2CON0_MODE_LENGTH                               0x2
#define _PRG2CON0_MODE_MASK                                 0xC
#define _PRG2CON0_REDG_POSN                                 0x4
#define _PRG2CON0_REDG_POSITION                             0x4
#define _PRG2CON0_REDG_SIZE                                 0x1
#define _PRG2CON0_REDG_LENGTH                               0x1
#define _PRG2CON0_REDG_MASK                                 0x10
#define _PRG2CON0_FEDG_POSN                                 0x5
#define _PRG2CON0_FEDG_POSITION                             0x5
#define _PRG2CON0_FEDG_SIZE                                 0x1
#define _PRG2CON0_FEDG_LENGTH                               0x1
#define _PRG2CON0_FEDG_MASK                                 0x20
#define _PRG2CON0_EN_POSN                                   0x7
#define _PRG2CON0_EN_POSITION                               0x7
#define _PRG2CON0_EN_SIZE                                   0x1
#define _PRG2CON0_EN_LENGTH                                 0x1
#define _PRG2CON0_EN_MASK                                   0x80
#define _PRG2CON0_MODE0_POSN                                0x2
#define _PRG2CON0_MODE0_POSITION                            0x2
#define _PRG2CON0_MODE0_SIZE                                0x1
#define _PRG2CON0_MODE0_LENGTH                              0x1
#define _PRG2CON0_MODE0_MASK                                0x4
#define _PRG2CON0_MODE1_POSN                                0x3
#define _PRG2CON0_MODE1_POSITION                            0x3
#define _PRG2CON0_MODE1_SIZE                                0x1
#define _PRG2CON0_MODE1_LENGTH                              0x1
#define _PRG2CON0_MODE1_MASK                                0x8
#define _PRG2CON0_RG2GO_POSN                                0x0
#define _PRG2CON0_RG2GO_POSITION                            0x0
#define _PRG2CON0_RG2GO_SIZE                                0x1
#define _PRG2CON0_RG2GO_LENGTH                              0x1
#define _PRG2CON0_RG2GO_MASK                                0x1
#define _PRG2CON0_RG2OS_POSN                                0x1
#define _PRG2CON0_RG2OS_POSITION                            0x1
#define _PRG2CON0_RG2OS_SIZE                                0x1
#define _PRG2CON0_RG2OS_LENGTH                              0x1
#define _PRG2CON0_RG2OS_MASK                                0x2
#define _PRG2CON0_RG2MODE_POSN                              0x2
#define _PRG2CON0_RG2MODE_POSITION                          0x2
#define _PRG2CON0_RG2MODE_SIZE                              0x2
#define _PRG2CON0_RG2MODE_LENGTH                            0x2
#define _PRG2CON0_RG2MODE_MASK                              0xC
#define _PRG2CON0_RG2REDG_POSN                              0x4
#define _PRG2CON0_RG2REDG_POSITION                          0x4
#define _PRG2CON0_RG2REDG_SIZE                              0x1
#define _PRG2CON0_RG2REDG_LENGTH                            0x1
#define _PRG2CON0_RG2REDG_MASK                              0x10
#define _PRG2CON0_RG2FEDG_POSN                              0x5
#define _PRG2CON0_RG2FEDG_POSITION                          0x5
#define _PRG2CON0_RG2FEDG_SIZE                              0x1
#define _PRG2CON0_RG2FEDG_LENGTH                            0x1
#define _PRG2CON0_RG2FEDG_MASK                              0x20
#define _PRG2CON0_RG2EN_POSN                                0x7
#define _PRG2CON0_RG2EN_POSITION                            0x7
#define _PRG2CON0_RG2EN_SIZE                                0x1
#define _PRG2CON0_RG2EN_LENGTH                              0x1
#define _PRG2CON0_RG2EN_MASK                                0x80
#define _PRG2CON0_RG2MODE0_POSN                             0x2
#define _PRG2CON0_RG2MODE0_POSITION                         0x2
#define _PRG2CON0_RG2MODE0_SIZE                             0x1
#define _PRG2CON0_RG2MODE0_LENGTH                           0x1
#define _PRG2CON0_RG2MODE0_MASK                             0x4
#define _PRG2CON0_RG2MODE1_POSN                             0x3
#define _PRG2CON0_RG2MODE1_POSITION                         0x3
#define _PRG2CON0_RG2MODE1_SIZE                             0x1
#define _PRG2CON0_RG2MODE1_LENGTH                           0x1
#define _PRG2CON0_RG2MODE1_MASK                             0x8

// Register: PRG2CON1
#define PRG2CON1 PRG2CON1
extern volatile unsigned char           PRG2CON1            __at(0x798);
#ifndef _LIB_BUILD
asm("PRG2CON1 equ 0798h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RPOL                   :1;
        unsigned FPOL                   :1;
        unsigned RDY                    :1;
    };
    struct {
        unsigned RG2RPOL                :1;
        unsigned RG2FPOL                :1;
        unsigned RG2RDY                 :1;
    };
} PRG2CON1bits_t;
extern volatile PRG2CON1bits_t PRG2CON1bits __at(0x798);
// bitfield macros
#define _PRG2CON1_RPOL_POSN                                 0x0
#define _PRG2CON1_RPOL_POSITION                             0x0
#define _PRG2CON1_RPOL_SIZE                                 0x1
#define _PRG2CON1_RPOL_LENGTH                               0x1
#define _PRG2CON1_RPOL_MASK                                 0x1
#define _PRG2CON1_FPOL_POSN                                 0x1
#define _PRG2CON1_FPOL_POSITION                             0x1
#define _PRG2CON1_FPOL_SIZE                                 0x1
#define _PRG2CON1_FPOL_LENGTH                               0x1
#define _PRG2CON1_FPOL_MASK                                 0x2
#define _PRG2CON1_RDY_POSN                                  0x2
#define _PRG2CON1_RDY_POSITION                              0x2
#define _PRG2CON1_RDY_SIZE                                  0x1
#define _PRG2CON1_RDY_LENGTH                                0x1
#define _PRG2CON1_RDY_MASK                                  0x4
#define _PRG2CON1_RG2RPOL_POSN                              0x0
#define _PRG2CON1_RG2RPOL_POSITION                          0x0
#define _PRG2CON1_RG2RPOL_SIZE                              0x1
#define _PRG2CON1_RG2RPOL_LENGTH                            0x1
#define _PRG2CON1_RG2RPOL_MASK                              0x1
#define _PRG2CON1_RG2FPOL_POSN                              0x1
#define _PRG2CON1_RG2FPOL_POSITION                          0x1
#define _PRG2CON1_RG2FPOL_SIZE                              0x1
#define _PRG2CON1_RG2FPOL_LENGTH                            0x1
#define _PRG2CON1_RG2FPOL_MASK                              0x2
#define _PRG2CON1_RG2RDY_POSN                               0x2
#define _PRG2CON1_RG2RDY_POSITION                           0x2
#define _PRG2CON1_RG2RDY_SIZE                               0x1
#define _PRG2CON1_RG2RDY_LENGTH                             0x1
#define _PRG2CON1_RG2RDY_MASK                               0x4

// Register: PRG2CON2
#define PRG2CON2 PRG2CON2
extern volatile unsigned char           PRG2CON2            __at(0x799);
#ifndef _LIB_BUILD
asm("PRG2CON2 equ 0799h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ISET                   :5;
    };
    struct {
        unsigned ISET0                  :1;
        unsigned ISET1                  :1;
        unsigned ISET2                  :1;
        unsigned ISET3                  :1;
        unsigned ISET4                  :1;
    };
    struct {
        unsigned RG2ISET                :5;
    };
    struct {
        unsigned RG2ISET0               :1;
        unsigned RG2ISET1               :1;
        unsigned RG2ISET2               :1;
        unsigned RG2ISET3               :1;
        unsigned RG2ISET4               :1;
    };
} PRG2CON2bits_t;
extern volatile PRG2CON2bits_t PRG2CON2bits __at(0x799);
// bitfield macros
#define _PRG2CON2_ISET_POSN                                 0x0
#define _PRG2CON2_ISET_POSITION                             0x0
#define _PRG2CON2_ISET_SIZE                                 0x5
#define _PRG2CON2_ISET_LENGTH                               0x5
#define _PRG2CON2_ISET_MASK                                 0x1F
#define _PRG2CON2_ISET0_POSN                                0x0
#define _PRG2CON2_ISET0_POSITION                            0x0
#define _PRG2CON2_ISET0_SIZE                                0x1
#define _PRG2CON2_ISET0_LENGTH                              0x1
#define _PRG2CON2_ISET0_MASK                                0x1
#define _PRG2CON2_ISET1_POSN                                0x1
#define _PRG2CON2_ISET1_POSITION                            0x1
#define _PRG2CON2_ISET1_SIZE                                0x1
#define _PRG2CON2_ISET1_LENGTH                              0x1
#define _PRG2CON2_ISET1_MASK                                0x2
#define _PRG2CON2_ISET2_POSN                                0x2
#define _PRG2CON2_ISET2_POSITION                            0x2
#define _PRG2CON2_ISET2_SIZE                                0x1
#define _PRG2CON2_ISET2_LENGTH                              0x1
#define _PRG2CON2_ISET2_MASK                                0x4
#define _PRG2CON2_ISET3_POSN                                0x3
#define _PRG2CON2_ISET3_POSITION                            0x3
#define _PRG2CON2_ISET3_SIZE                                0x1
#define _PRG2CON2_ISET3_LENGTH                              0x1
#define _PRG2CON2_ISET3_MASK                                0x8
#define _PRG2CON2_ISET4_POSN                                0x4
#define _PRG2CON2_ISET4_POSITION                            0x4
#define _PRG2CON2_ISET4_SIZE                                0x1
#define _PRG2CON2_ISET4_LENGTH                              0x1
#define _PRG2CON2_ISET4_MASK                                0x10
#define _PRG2CON2_RG2ISET_POSN                              0x0
#define _PRG2CON2_RG2ISET_POSITION                          0x0
#define _PRG2CON2_RG2ISET_SIZE                              0x5
#define _PRG2CON2_RG2ISET_LENGTH                            0x5
#define _PRG2CON2_RG2ISET_MASK                              0x1F
#define _PRG2CON2_RG2ISET0_POSN                             0x0
#define _PRG2CON2_RG2ISET0_POSITION                         0x0
#define _PRG2CON2_RG2ISET0_SIZE                             0x1
#define _PRG2CON2_RG2ISET0_LENGTH                           0x1
#define _PRG2CON2_RG2ISET0_MASK                             0x1
#define _PRG2CON2_RG2ISET1_POSN                             0x1
#define _PRG2CON2_RG2ISET1_POSITION                         0x1
#define _PRG2CON2_RG2ISET1_SIZE                             0x1
#define _PRG2CON2_RG2ISET1_LENGTH                           0x1
#define _PRG2CON2_RG2ISET1_MASK                             0x2
#define _PRG2CON2_RG2ISET2_POSN                             0x2
#define _PRG2CON2_RG2ISET2_POSITION                         0x2
#define _PRG2CON2_RG2ISET2_SIZE                             0x1
#define _PRG2CON2_RG2ISET2_LENGTH                           0x1
#define _PRG2CON2_RG2ISET2_MASK                             0x4
#define _PRG2CON2_RG2ISET3_POSN                             0x3
#define _PRG2CON2_RG2ISET3_POSITION                         0x3
#define _PRG2CON2_RG2ISET3_SIZE                             0x1
#define _PRG2CON2_RG2ISET3_LENGTH                           0x1
#define _PRG2CON2_RG2ISET3_MASK                             0x8
#define _PRG2CON2_RG2ISET4_POSN                             0x4
#define _PRG2CON2_RG2ISET4_POSITION                         0x4
#define _PRG2CON2_RG2ISET4_SIZE                             0x1
#define _PRG2CON2_RG2ISET4_LENGTH                           0x1
#define _PRG2CON2_RG2ISET4_MASK                             0x10

// Register: PRG3RTSS
#define PRG3RTSS PRG3RTSS
extern volatile unsigned char           PRG3RTSS            __at(0x79A);
#ifndef _LIB_BUILD
asm("PRG3RTSS equ 079Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTSS                   :8;
    };
    struct {
        unsigned RTSS0                  :1;
        unsigned RTSS1                  :1;
        unsigned RTSS2                  :1;
        unsigned RTSS3                  :1;
    };
    struct {
        unsigned RG3RTSS0               :1;
        unsigned RG3RTSS1               :1;
        unsigned RG3RTSS2               :1;
        unsigned RG3RTSS3               :1;
    };
} PRG3RTSSbits_t;
extern volatile PRG3RTSSbits_t PRG3RTSSbits __at(0x79A);
// bitfield macros
#define _PRG3RTSS_RTSS_POSN                                 0x0
#define _PRG3RTSS_RTSS_POSITION                             0x0
#define _PRG3RTSS_RTSS_SIZE                                 0x8
#define _PRG3RTSS_RTSS_LENGTH                               0x8
#define _PRG3RTSS_RTSS_MASK                                 0xFF
#define _PRG3RTSS_RTSS0_POSN                                0x0
#define _PRG3RTSS_RTSS0_POSITION                            0x0
#define _PRG3RTSS_RTSS0_SIZE                                0x1
#define _PRG3RTSS_RTSS0_LENGTH                              0x1
#define _PRG3RTSS_RTSS0_MASK                                0x1
#define _PRG3RTSS_RTSS1_POSN                                0x1
#define _PRG3RTSS_RTSS1_POSITION                            0x1
#define _PRG3RTSS_RTSS1_SIZE                                0x1
#define _PRG3RTSS_RTSS1_LENGTH                              0x1
#define _PRG3RTSS_RTSS1_MASK                                0x2
#define _PRG3RTSS_RTSS2_POSN                                0x2
#define _PRG3RTSS_RTSS2_POSITION                            0x2
#define _PRG3RTSS_RTSS2_SIZE                                0x1
#define _PRG3RTSS_RTSS2_LENGTH                              0x1
#define _PRG3RTSS_RTSS2_MASK                                0x4
#define _PRG3RTSS_RTSS3_POSN                                0x3
#define _PRG3RTSS_RTSS3_POSITION                            0x3
#define _PRG3RTSS_RTSS3_SIZE                                0x1
#define _PRG3RTSS_RTSS3_LENGTH                              0x1
#define _PRG3RTSS_RTSS3_MASK                                0x8
#define _PRG3RTSS_RG3RTSS0_POSN                             0x0
#define _PRG3RTSS_RG3RTSS0_POSITION                         0x0
#define _PRG3RTSS_RG3RTSS0_SIZE                             0x1
#define _PRG3RTSS_RG3RTSS0_LENGTH                           0x1
#define _PRG3RTSS_RG3RTSS0_MASK                             0x1
#define _PRG3RTSS_RG3RTSS1_POSN                             0x1
#define _PRG3RTSS_RG3RTSS1_POSITION                         0x1
#define _PRG3RTSS_RG3RTSS1_SIZE                             0x1
#define _PRG3RTSS_RG3RTSS1_LENGTH                           0x1
#define _PRG3RTSS_RG3RTSS1_MASK                             0x2
#define _PRG3RTSS_RG3RTSS2_POSN                             0x2
#define _PRG3RTSS_RG3RTSS2_POSITION                         0x2
#define _PRG3RTSS_RG3RTSS2_SIZE                             0x1
#define _PRG3RTSS_RG3RTSS2_LENGTH                           0x1
#define _PRG3RTSS_RG3RTSS2_MASK                             0x4
#define _PRG3RTSS_RG3RTSS3_POSN                             0x3
#define _PRG3RTSS_RG3RTSS3_POSITION                         0x3
#define _PRG3RTSS_RG3RTSS3_SIZE                             0x1
#define _PRG3RTSS_RG3RTSS3_LENGTH                           0x1
#define _PRG3RTSS_RG3RTSS3_MASK                             0x8

// Register: PRG3FTSS
#define PRG3FTSS PRG3FTSS
extern volatile unsigned char           PRG3FTSS            __at(0x79B);
#ifndef _LIB_BUILD
asm("PRG3FTSS equ 079Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FTSS                   :8;
    };
    struct {
        unsigned FTSS0                  :1;
        unsigned FTSS1                  :1;
        unsigned FTSS2                  :1;
        unsigned FTSS3                  :1;
    };
    struct {
        unsigned RG3FTSS0               :1;
        unsigned RG3FTSS1               :1;
        unsigned RG3FTSS2               :1;
        unsigned RG3FTSS3               :1;
    };
} PRG3FTSSbits_t;
extern volatile PRG3FTSSbits_t PRG3FTSSbits __at(0x79B);
// bitfield macros
#define _PRG3FTSS_FTSS_POSN                                 0x0
#define _PRG3FTSS_FTSS_POSITION                             0x0
#define _PRG3FTSS_FTSS_SIZE                                 0x8
#define _PRG3FTSS_FTSS_LENGTH                               0x8
#define _PRG3FTSS_FTSS_MASK                                 0xFF
#define _PRG3FTSS_FTSS0_POSN                                0x0
#define _PRG3FTSS_FTSS0_POSITION                            0x0
#define _PRG3FTSS_FTSS0_SIZE                                0x1
#define _PRG3FTSS_FTSS0_LENGTH                              0x1
#define _PRG3FTSS_FTSS0_MASK                                0x1
#define _PRG3FTSS_FTSS1_POSN                                0x1
#define _PRG3FTSS_FTSS1_POSITION                            0x1
#define _PRG3FTSS_FTSS1_SIZE                                0x1
#define _PRG3FTSS_FTSS1_LENGTH                              0x1
#define _PRG3FTSS_FTSS1_MASK                                0x2
#define _PRG3FTSS_FTSS2_POSN                                0x2
#define _PRG3FTSS_FTSS2_POSITION                            0x2
#define _PRG3FTSS_FTSS2_SIZE                                0x1
#define _PRG3FTSS_FTSS2_LENGTH                              0x1
#define _PRG3FTSS_FTSS2_MASK                                0x4
#define _PRG3FTSS_FTSS3_POSN                                0x3
#define _PRG3FTSS_FTSS3_POSITION                            0x3
#define _PRG3FTSS_FTSS3_SIZE                                0x1
#define _PRG3FTSS_FTSS3_LENGTH                              0x1
#define _PRG3FTSS_FTSS3_MASK                                0x8
#define _PRG3FTSS_RG3FTSS0_POSN                             0x0
#define _PRG3FTSS_RG3FTSS0_POSITION                         0x0
#define _PRG3FTSS_RG3FTSS0_SIZE                             0x1
#define _PRG3FTSS_RG3FTSS0_LENGTH                           0x1
#define _PRG3FTSS_RG3FTSS0_MASK                             0x1
#define _PRG3FTSS_RG3FTSS1_POSN                             0x1
#define _PRG3FTSS_RG3FTSS1_POSITION                         0x1
#define _PRG3FTSS_RG3FTSS1_SIZE                             0x1
#define _PRG3FTSS_RG3FTSS1_LENGTH                           0x1
#define _PRG3FTSS_RG3FTSS1_MASK                             0x2
#define _PRG3FTSS_RG3FTSS2_POSN                             0x2
#define _PRG3FTSS_RG3FTSS2_POSITION                         0x2
#define _PRG3FTSS_RG3FTSS2_SIZE                             0x1
#define _PRG3FTSS_RG3FTSS2_LENGTH                           0x1
#define _PRG3FTSS_RG3FTSS2_MASK                             0x4
#define _PRG3FTSS_RG3FTSS3_POSN                             0x3
#define _PRG3FTSS_RG3FTSS3_POSITION                         0x3
#define _PRG3FTSS_RG3FTSS3_SIZE                             0x1
#define _PRG3FTSS_RG3FTSS3_LENGTH                           0x1
#define _PRG3FTSS_RG3FTSS3_MASK                             0x8

// Register: PRG3INS
#define PRG3INS PRG3INS
extern volatile unsigned char           PRG3INS             __at(0x79C);
#ifndef _LIB_BUILD
asm("PRG3INS equ 079Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INS                    :8;
    };
    struct {
        unsigned INS0                   :1;
        unsigned INS1                   :1;
        unsigned INS2                   :1;
        unsigned INS3                   :1;
    };
    struct {
        unsigned RG3INS0                :1;
        unsigned RG3INS1                :1;
        unsigned RG3INS2                :1;
        unsigned RG3INS3                :1;
    };
} PRG3INSbits_t;
extern volatile PRG3INSbits_t PRG3INSbits __at(0x79C);
// bitfield macros
#define _PRG3INS_INS_POSN                                   0x0
#define _PRG3INS_INS_POSITION                               0x0
#define _PRG3INS_INS_SIZE                                   0x8
#define _PRG3INS_INS_LENGTH                                 0x8
#define _PRG3INS_INS_MASK                                   0xFF
#define _PRG3INS_INS0_POSN                                  0x0
#define _PRG3INS_INS0_POSITION                              0x0
#define _PRG3INS_INS0_SIZE                                  0x1
#define _PRG3INS_INS0_LENGTH                                0x1
#define _PRG3INS_INS0_MASK                                  0x1
#define _PRG3INS_INS1_POSN                                  0x1
#define _PRG3INS_INS1_POSITION                              0x1
#define _PRG3INS_INS1_SIZE                                  0x1
#define _PRG3INS_INS1_LENGTH                                0x1
#define _PRG3INS_INS1_MASK                                  0x2
#define _PRG3INS_INS2_POSN                                  0x2
#define _PRG3INS_INS2_POSITION                              0x2
#define _PRG3INS_INS2_SIZE                                  0x1
#define _PRG3INS_INS2_LENGTH                                0x1
#define _PRG3INS_INS2_MASK                                  0x4
#define _PRG3INS_INS3_POSN                                  0x3
#define _PRG3INS_INS3_POSITION                              0x3
#define _PRG3INS_INS3_SIZE                                  0x1
#define _PRG3INS_INS3_LENGTH                                0x1
#define _PRG3INS_INS3_MASK                                  0x8
#define _PRG3INS_RG3INS0_POSN                               0x0
#define _PRG3INS_RG3INS0_POSITION                           0x0
#define _PRG3INS_RG3INS0_SIZE                               0x1
#define _PRG3INS_RG3INS0_LENGTH                             0x1
#define _PRG3INS_RG3INS0_MASK                               0x1
#define _PRG3INS_RG3INS1_POSN                               0x1
#define _PRG3INS_RG3INS1_POSITION                           0x1
#define _PRG3INS_RG3INS1_SIZE                               0x1
#define _PRG3INS_RG3INS1_LENGTH                             0x1
#define _PRG3INS_RG3INS1_MASK                               0x2
#define _PRG3INS_RG3INS2_POSN                               0x2
#define _PRG3INS_RG3INS2_POSITION                           0x2
#define _PRG3INS_RG3INS2_SIZE                               0x1
#define _PRG3INS_RG3INS2_LENGTH                             0x1
#define _PRG3INS_RG3INS2_MASK                               0x4
#define _PRG3INS_RG3INS3_POSN                               0x3
#define _PRG3INS_RG3INS3_POSITION                           0x3
#define _PRG3INS_RG3INS3_SIZE                               0x1
#define _PRG3INS_RG3INS3_LENGTH                             0x1
#define _PRG3INS_RG3INS3_MASK                               0x8

// Register: PRG3CON0
#define PRG3CON0 PRG3CON0
extern volatile unsigned char           PRG3CON0            __at(0x79D);
#ifndef _LIB_BUILD
asm("PRG3CON0 equ 079Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned GO                     :1;
        unsigned OS                     :1;
        unsigned MODE                   :2;
        unsigned REDG                   :1;
        unsigned FEDG                   :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
    };
    struct {
        unsigned RG3GO                  :1;
        unsigned RG3OS                  :1;
        unsigned RG3MODE                :2;
        unsigned RG3REDG                :1;
        unsigned RG3FEDG                :1;
        unsigned                        :1;
        unsigned RG3EN                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned RG3MODE0               :1;
        unsigned RG3MODE1               :1;
    };
} PRG3CON0bits_t;
extern volatile PRG3CON0bits_t PRG3CON0bits __at(0x79D);
// bitfield macros
#define _PRG3CON0_GO_POSN                                   0x0
#define _PRG3CON0_GO_POSITION                               0x0
#define _PRG3CON0_GO_SIZE                                   0x1
#define _PRG3CON0_GO_LENGTH                                 0x1
#define _PRG3CON0_GO_MASK                                   0x1
#define _PRG3CON0_OS_POSN                                   0x1
#define _PRG3CON0_OS_POSITION                               0x1
#define _PRG3CON0_OS_SIZE                                   0x1
#define _PRG3CON0_OS_LENGTH                                 0x1
#define _PRG3CON0_OS_MASK                                   0x2
#define _PRG3CON0_MODE_POSN                                 0x2
#define _PRG3CON0_MODE_POSITION                             0x2
#define _PRG3CON0_MODE_SIZE                                 0x2
#define _PRG3CON0_MODE_LENGTH                               0x2
#define _PRG3CON0_MODE_MASK                                 0xC
#define _PRG3CON0_REDG_POSN                                 0x4
#define _PRG3CON0_REDG_POSITION                             0x4
#define _PRG3CON0_REDG_SIZE                                 0x1
#define _PRG3CON0_REDG_LENGTH                               0x1
#define _PRG3CON0_REDG_MASK                                 0x10
#define _PRG3CON0_FEDG_POSN                                 0x5
#define _PRG3CON0_FEDG_POSITION                             0x5
#define _PRG3CON0_FEDG_SIZE                                 0x1
#define _PRG3CON0_FEDG_LENGTH                               0x1
#define _PRG3CON0_FEDG_MASK                                 0x20
#define _PRG3CON0_EN_POSN                                   0x7
#define _PRG3CON0_EN_POSITION                               0x7
#define _PRG3CON0_EN_SIZE                                   0x1
#define _PRG3CON0_EN_LENGTH                                 0x1
#define _PRG3CON0_EN_MASK                                   0x80
#define _PRG3CON0_MODE0_POSN                                0x2
#define _PRG3CON0_MODE0_POSITION                            0x2
#define _PRG3CON0_MODE0_SIZE                                0x1
#define _PRG3CON0_MODE0_LENGTH                              0x1
#define _PRG3CON0_MODE0_MASK                                0x4
#define _PRG3CON0_MODE1_POSN                                0x3
#define _PRG3CON0_MODE1_POSITION                            0x3
#define _PRG3CON0_MODE1_SIZE                                0x1
#define _PRG3CON0_MODE1_LENGTH                              0x1
#define _PRG3CON0_MODE1_MASK                                0x8
#define _PRG3CON0_RG3GO_POSN                                0x0
#define _PRG3CON0_RG3GO_POSITION                            0x0
#define _PRG3CON0_RG3GO_SIZE                                0x1
#define _PRG3CON0_RG3GO_LENGTH                              0x1
#define _PRG3CON0_RG3GO_MASK                                0x1
#define _PRG3CON0_RG3OS_POSN                                0x1
#define _PRG3CON0_RG3OS_POSITION                            0x1
#define _PRG3CON0_RG3OS_SIZE                                0x1
#define _PRG3CON0_RG3OS_LENGTH                              0x1
#define _PRG3CON0_RG3OS_MASK                                0x2
#define _PRG3CON0_RG3MODE_POSN                              0x2
#define _PRG3CON0_RG3MODE_POSITION                          0x2
#define _PRG3CON0_RG3MODE_SIZE                              0x2
#define _PRG3CON0_RG3MODE_LENGTH                            0x2
#define _PRG3CON0_RG3MODE_MASK                              0xC
#define _PRG3CON0_RG3REDG_POSN                              0x4
#define _PRG3CON0_RG3REDG_POSITION                          0x4
#define _PRG3CON0_RG3REDG_SIZE                              0x1
#define _PRG3CON0_RG3REDG_LENGTH                            0x1
#define _PRG3CON0_RG3REDG_MASK                              0x10
#define _PRG3CON0_RG3FEDG_POSN                              0x5
#define _PRG3CON0_RG3FEDG_POSITION                          0x5
#define _PRG3CON0_RG3FEDG_SIZE                              0x1
#define _PRG3CON0_RG3FEDG_LENGTH                            0x1
#define _PRG3CON0_RG3FEDG_MASK                              0x20
#define _PRG3CON0_RG3EN_POSN                                0x7
#define _PRG3CON0_RG3EN_POSITION                            0x7
#define _PRG3CON0_RG3EN_SIZE                                0x1
#define _PRG3CON0_RG3EN_LENGTH                              0x1
#define _PRG3CON0_RG3EN_MASK                                0x80
#define _PRG3CON0_RG3MODE0_POSN                             0x2
#define _PRG3CON0_RG3MODE0_POSITION                         0x2
#define _PRG3CON0_RG3MODE0_SIZE                             0x1
#define _PRG3CON0_RG3MODE0_LENGTH                           0x1
#define _PRG3CON0_RG3MODE0_MASK                             0x4
#define _PRG3CON0_RG3MODE1_POSN                             0x3
#define _PRG3CON0_RG3MODE1_POSITION                         0x3
#define _PRG3CON0_RG3MODE1_SIZE                             0x1
#define _PRG3CON0_RG3MODE1_LENGTH                           0x1
#define _PRG3CON0_RG3MODE1_MASK                             0x8

// Register: PRG3CON1
#define PRG3CON1 PRG3CON1
extern volatile unsigned char           PRG3CON1            __at(0x79E);
#ifndef _LIB_BUILD
asm("PRG3CON1 equ 079Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RPOL                   :1;
        unsigned FPOL                   :1;
        unsigned RDY                    :1;
    };
    struct {
        unsigned RG3RPOL                :1;
        unsigned RG3FPOL                :1;
        unsigned RG3RDY                 :1;
    };
} PRG3CON1bits_t;
extern volatile PRG3CON1bits_t PRG3CON1bits __at(0x79E);
// bitfield macros
#define _PRG3CON1_RPOL_POSN                                 0x0
#define _PRG3CON1_RPOL_POSITION                             0x0
#define _PRG3CON1_RPOL_SIZE                                 0x1
#define _PRG3CON1_RPOL_LENGTH                               0x1
#define _PRG3CON1_RPOL_MASK                                 0x1
#define _PRG3CON1_FPOL_POSN                                 0x1
#define _PRG3CON1_FPOL_POSITION                             0x1
#define _PRG3CON1_FPOL_SIZE                                 0x1
#define _PRG3CON1_FPOL_LENGTH                               0x1
#define _PRG3CON1_FPOL_MASK                                 0x2
#define _PRG3CON1_RDY_POSN                                  0x2
#define _PRG3CON1_RDY_POSITION                              0x2
#define _PRG3CON1_RDY_SIZE                                  0x1
#define _PRG3CON1_RDY_LENGTH                                0x1
#define _PRG3CON1_RDY_MASK                                  0x4
#define _PRG3CON1_RG3RPOL_POSN                              0x0
#define _PRG3CON1_RG3RPOL_POSITION                          0x0
#define _PRG3CON1_RG3RPOL_SIZE                              0x1
#define _PRG3CON1_RG3RPOL_LENGTH                            0x1
#define _PRG3CON1_RG3RPOL_MASK                              0x1
#define _PRG3CON1_RG3FPOL_POSN                              0x1
#define _PRG3CON1_RG3FPOL_POSITION                          0x1
#define _PRG3CON1_RG3FPOL_SIZE                              0x1
#define _PRG3CON1_RG3FPOL_LENGTH                            0x1
#define _PRG3CON1_RG3FPOL_MASK                              0x2
#define _PRG3CON1_RG3RDY_POSN                               0x2
#define _PRG3CON1_RG3RDY_POSITION                           0x2
#define _PRG3CON1_RG3RDY_SIZE                               0x1
#define _PRG3CON1_RG3RDY_LENGTH                             0x1
#define _PRG3CON1_RG3RDY_MASK                               0x4

// Register: PRG3CON2
#define PRG3CON2 PRG3CON2
extern volatile unsigned char           PRG3CON2            __at(0x79F);
#ifndef _LIB_BUILD
asm("PRG3CON2 equ 079Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ISET                   :5;
    };
    struct {
        unsigned ISET0                  :1;
        unsigned ISET1                  :1;
        unsigned ISET2                  :1;
        unsigned ISET3                  :1;
        unsigned ISET4                  :1;
    };
    struct {
        unsigned RG3ISET                :5;
    };
    struct {
        unsigned RG3ISET0               :1;
        unsigned RG3ISET1               :1;
        unsigned RG3ISET2               :1;
        unsigned RG3ISET3               :1;
        unsigned RG3ISET4               :1;
    };
} PRG3CON2bits_t;
extern volatile PRG3CON2bits_t PRG3CON2bits __at(0x79F);
// bitfield macros
#define _PRG3CON2_ISET_POSN                                 0x0
#define _PRG3CON2_ISET_POSITION                             0x0
#define _PRG3CON2_ISET_SIZE                                 0x5
#define _PRG3CON2_ISET_LENGTH                               0x5
#define _PRG3CON2_ISET_MASK                                 0x1F
#define _PRG3CON2_ISET0_POSN                                0x0
#define _PRG3CON2_ISET0_POSITION                            0x0
#define _PRG3CON2_ISET0_SIZE                                0x1
#define _PRG3CON2_ISET0_LENGTH                              0x1
#define _PRG3CON2_ISET0_MASK                                0x1
#define _PRG3CON2_ISET1_POSN                                0x1
#define _PRG3CON2_ISET1_POSITION                            0x1
#define _PRG3CON2_ISET1_SIZE                                0x1
#define _PRG3CON2_ISET1_LENGTH                              0x1
#define _PRG3CON2_ISET1_MASK                                0x2
#define _PRG3CON2_ISET2_POSN                                0x2
#define _PRG3CON2_ISET2_POSITION                            0x2
#define _PRG3CON2_ISET2_SIZE                                0x1
#define _PRG3CON2_ISET2_LENGTH                              0x1
#define _PRG3CON2_ISET2_MASK                                0x4
#define _PRG3CON2_ISET3_POSN                                0x3
#define _PRG3CON2_ISET3_POSITION                            0x3
#define _PRG3CON2_ISET3_SIZE                                0x1
#define _PRG3CON2_ISET3_LENGTH                              0x1
#define _PRG3CON2_ISET3_MASK                                0x8
#define _PRG3CON2_ISET4_POSN                                0x4
#define _PRG3CON2_ISET4_POSITION                            0x4
#define _PRG3CON2_ISET4_SIZE                                0x1
#define _PRG3CON2_ISET4_LENGTH                              0x1
#define _PRG3CON2_ISET4_MASK                                0x10
#define _PRG3CON2_RG3ISET_POSN                              0x0
#define _PRG3CON2_RG3ISET_POSITION                          0x0
#define _PRG3CON2_RG3ISET_SIZE                              0x5
#define _PRG3CON2_RG3ISET_LENGTH                            0x5
#define _PRG3CON2_RG3ISET_MASK                              0x1F
#define _PRG3CON2_RG3ISET0_POSN                             0x0
#define _PRG3CON2_RG3ISET0_POSITION                         0x0
#define _PRG3CON2_RG3ISET0_SIZE                             0x1
#define _PRG3CON2_RG3ISET0_LENGTH                           0x1
#define _PRG3CON2_RG3ISET0_MASK                             0x1
#define _PRG3CON2_RG3ISET1_POSN                             0x1
#define _PRG3CON2_RG3ISET1_POSITION                         0x1
#define _PRG3CON2_RG3ISET1_SIZE                             0x1
#define _PRG3CON2_RG3ISET1_LENGTH                           0x1
#define _PRG3CON2_RG3ISET1_MASK                             0x2
#define _PRG3CON2_RG3ISET2_POSN                             0x2
#define _PRG3CON2_RG3ISET2_POSITION                         0x2
#define _PRG3CON2_RG3ISET2_SIZE                             0x1
#define _PRG3CON2_RG3ISET2_LENGTH                           0x1
#define _PRG3CON2_RG3ISET2_MASK                             0x4
#define _PRG3CON2_RG3ISET3_POSN                             0x3
#define _PRG3CON2_RG3ISET3_POSITION                         0x3
#define _PRG3CON2_RG3ISET3_SIZE                             0x1
#define _PRG3CON2_RG3ISET3_LENGTH                           0x1
#define _PRG3CON2_RG3ISET3_MASK                             0x8
#define _PRG3CON2_RG3ISET4_POSN                             0x4
#define _PRG3CON2_RG3ISET4_POSITION                         0x4
#define _PRG3CON2_RG3ISET4_SIZE                             0x1
#define _PRG3CON2_RG3ISET4_LENGTH                           0x1
#define _PRG3CON2_RG3ISET4_MASK                             0x10

// Register: COG3PHR
#define COG3PHR COG3PHR
extern volatile unsigned char           COG3PHR             __at(0x80D);
#ifndef _LIB_BUILD
asm("COG3PHR equ 080Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PHR                    :6;
    };
    struct {
        unsigned PHR0                   :1;
        unsigned PHR1                   :1;
        unsigned PHR2                   :1;
        unsigned PHR3                   :1;
        unsigned PHR4                   :1;
        unsigned PHR5                   :1;
    };
    struct {
        unsigned G3PHR0                 :1;
        unsigned G3PHR1                 :1;
        unsigned G3PHR2                 :1;
        unsigned G3PHR3                 :1;
        unsigned G3PHR4                 :1;
        unsigned G3PHR5                 :1;
    };
} COG3PHRbits_t;
extern volatile COG3PHRbits_t COG3PHRbits __at(0x80D);
// bitfield macros
#define _COG3PHR_PHR_POSN                                   0x0
#define _COG3PHR_PHR_POSITION                               0x0
#define _COG3PHR_PHR_SIZE                                   0x6
#define _COG3PHR_PHR_LENGTH                                 0x6
#define _COG3PHR_PHR_MASK                                   0x3F
#define _COG3PHR_PHR0_POSN                                  0x0
#define _COG3PHR_PHR0_POSITION                              0x0
#define _COG3PHR_PHR0_SIZE                                  0x1
#define _COG3PHR_PHR0_LENGTH                                0x1
#define _COG3PHR_PHR0_MASK                                  0x1
#define _COG3PHR_PHR1_POSN                                  0x1
#define _COG3PHR_PHR1_POSITION                              0x1
#define _COG3PHR_PHR1_SIZE                                  0x1
#define _COG3PHR_PHR1_LENGTH                                0x1
#define _COG3PHR_PHR1_MASK                                  0x2
#define _COG3PHR_PHR2_POSN                                  0x2
#define _COG3PHR_PHR2_POSITION                              0x2
#define _COG3PHR_PHR2_SIZE                                  0x1
#define _COG3PHR_PHR2_LENGTH                                0x1
#define _COG3PHR_PHR2_MASK                                  0x4
#define _COG3PHR_PHR3_POSN                                  0x3
#define _COG3PHR_PHR3_POSITION                              0x3
#define _COG3PHR_PHR3_SIZE                                  0x1
#define _COG3PHR_PHR3_LENGTH                                0x1
#define _COG3PHR_PHR3_MASK                                  0x8
#define _COG3PHR_PHR4_POSN                                  0x4
#define _COG3PHR_PHR4_POSITION                              0x4
#define _COG3PHR_PHR4_SIZE                                  0x1
#define _COG3PHR_PHR4_LENGTH                                0x1
#define _COG3PHR_PHR4_MASK                                  0x10
#define _COG3PHR_PHR5_POSN                                  0x5
#define _COG3PHR_PHR5_POSITION                              0x5
#define _COG3PHR_PHR5_SIZE                                  0x1
#define _COG3PHR_PHR5_LENGTH                                0x1
#define _COG3PHR_PHR5_MASK                                  0x20
#define _COG3PHR_G3PHR0_POSN                                0x0
#define _COG3PHR_G3PHR0_POSITION                            0x0
#define _COG3PHR_G3PHR0_SIZE                                0x1
#define _COG3PHR_G3PHR0_LENGTH                              0x1
#define _COG3PHR_G3PHR0_MASK                                0x1
#define _COG3PHR_G3PHR1_POSN                                0x1
#define _COG3PHR_G3PHR1_POSITION                            0x1
#define _COG3PHR_G3PHR1_SIZE                                0x1
#define _COG3PHR_G3PHR1_LENGTH                              0x1
#define _COG3PHR_G3PHR1_MASK                                0x2
#define _COG3PHR_G3PHR2_POSN                                0x2
#define _COG3PHR_G3PHR2_POSITION                            0x2
#define _COG3PHR_G3PHR2_SIZE                                0x1
#define _COG3PHR_G3PHR2_LENGTH                              0x1
#define _COG3PHR_G3PHR2_MASK                                0x4
#define _COG3PHR_G3PHR3_POSN                                0x3
#define _COG3PHR_G3PHR3_POSITION                            0x3
#define _COG3PHR_G3PHR3_SIZE                                0x1
#define _COG3PHR_G3PHR3_LENGTH                              0x1
#define _COG3PHR_G3PHR3_MASK                                0x8
#define _COG3PHR_G3PHR4_POSN                                0x4
#define _COG3PHR_G3PHR4_POSITION                            0x4
#define _COG3PHR_G3PHR4_SIZE                                0x1
#define _COG3PHR_G3PHR4_LENGTH                              0x1
#define _COG3PHR_G3PHR4_MASK                                0x10
#define _COG3PHR_G3PHR5_POSN                                0x5
#define _COG3PHR_G3PHR5_POSITION                            0x5
#define _COG3PHR_G3PHR5_SIZE                                0x1
#define _COG3PHR_G3PHR5_LENGTH                              0x1
#define _COG3PHR_G3PHR5_MASK                                0x20

// Register: COG3PHF
#define COG3PHF COG3PHF
extern volatile unsigned char           COG3PHF             __at(0x80E);
#ifndef _LIB_BUILD
asm("COG3PHF equ 080Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PHF                    :6;
    };
    struct {
        unsigned PHF0                   :1;
        unsigned PHF1                   :1;
        unsigned PHF2                   :1;
        unsigned PHF3                   :1;
        unsigned PHF4                   :1;
        unsigned PHF5                   :1;
    };
    struct {
        unsigned G3PHF0                 :1;
        unsigned G3PHF1                 :1;
        unsigned G3PHF2                 :1;
        unsigned G3PHF3                 :1;
        unsigned G3PHF4                 :1;
        unsigned G3PHF5                 :1;
    };
} COG3PHFbits_t;
extern volatile COG3PHFbits_t COG3PHFbits __at(0x80E);
// bitfield macros
#define _COG3PHF_PHF_POSN                                   0x0
#define _COG3PHF_PHF_POSITION                               0x0
#define _COG3PHF_PHF_SIZE                                   0x6
#define _COG3PHF_PHF_LENGTH                                 0x6
#define _COG3PHF_PHF_MASK                                   0x3F
#define _COG3PHF_PHF0_POSN                                  0x0
#define _COG3PHF_PHF0_POSITION                              0x0
#define _COG3PHF_PHF0_SIZE                                  0x1
#define _COG3PHF_PHF0_LENGTH                                0x1
#define _COG3PHF_PHF0_MASK                                  0x1
#define _COG3PHF_PHF1_POSN                                  0x1
#define _COG3PHF_PHF1_POSITION                              0x1
#define _COG3PHF_PHF1_SIZE                                  0x1
#define _COG3PHF_PHF1_LENGTH                                0x1
#define _COG3PHF_PHF1_MASK                                  0x2
#define _COG3PHF_PHF2_POSN                                  0x2
#define _COG3PHF_PHF2_POSITION                              0x2
#define _COG3PHF_PHF2_SIZE                                  0x1
#define _COG3PHF_PHF2_LENGTH                                0x1
#define _COG3PHF_PHF2_MASK                                  0x4
#define _COG3PHF_PHF3_POSN                                  0x3
#define _COG3PHF_PHF3_POSITION                              0x3
#define _COG3PHF_PHF3_SIZE                                  0x1
#define _COG3PHF_PHF3_LENGTH                                0x1
#define _COG3PHF_PHF3_MASK                                  0x8
#define _COG3PHF_PHF4_POSN                                  0x4
#define _COG3PHF_PHF4_POSITION                              0x4
#define _COG3PHF_PHF4_SIZE                                  0x1
#define _COG3PHF_PHF4_LENGTH                                0x1
#define _COG3PHF_PHF4_MASK                                  0x10
#define _COG3PHF_PHF5_POSN                                  0x5
#define _COG3PHF_PHF5_POSITION                              0x5
#define _COG3PHF_PHF5_SIZE                                  0x1
#define _COG3PHF_PHF5_LENGTH                                0x1
#define _COG3PHF_PHF5_MASK                                  0x20
#define _COG3PHF_G3PHF0_POSN                                0x0
#define _COG3PHF_G3PHF0_POSITION                            0x0
#define _COG3PHF_G3PHF0_SIZE                                0x1
#define _COG3PHF_G3PHF0_LENGTH                              0x1
#define _COG3PHF_G3PHF0_MASK                                0x1
#define _COG3PHF_G3PHF1_POSN                                0x1
#define _COG3PHF_G3PHF1_POSITION                            0x1
#define _COG3PHF_G3PHF1_SIZE                                0x1
#define _COG3PHF_G3PHF1_LENGTH                              0x1
#define _COG3PHF_G3PHF1_MASK                                0x2
#define _COG3PHF_G3PHF2_POSN                                0x2
#define _COG3PHF_G3PHF2_POSITION                            0x2
#define _COG3PHF_G3PHF2_SIZE                                0x1
#define _COG3PHF_G3PHF2_LENGTH                              0x1
#define _COG3PHF_G3PHF2_MASK                                0x4
#define _COG3PHF_G3PHF3_POSN                                0x3
#define _COG3PHF_G3PHF3_POSITION                            0x3
#define _COG3PHF_G3PHF3_SIZE                                0x1
#define _COG3PHF_G3PHF3_LENGTH                              0x1
#define _COG3PHF_G3PHF3_MASK                                0x8
#define _COG3PHF_G3PHF4_POSN                                0x4
#define _COG3PHF_G3PHF4_POSITION                            0x4
#define _COG3PHF_G3PHF4_SIZE                                0x1
#define _COG3PHF_G3PHF4_LENGTH                              0x1
#define _COG3PHF_G3PHF4_MASK                                0x10
#define _COG3PHF_G3PHF5_POSN                                0x5
#define _COG3PHF_G3PHF5_POSITION                            0x5
#define _COG3PHF_G3PHF5_SIZE                                0x1
#define _COG3PHF_G3PHF5_LENGTH                              0x1
#define _COG3PHF_G3PHF5_MASK                                0x20

// Register: COG3BLKR
#define COG3BLKR COG3BLKR
extern volatile unsigned char           COG3BLKR            __at(0x80F);
#ifndef _LIB_BUILD
asm("COG3BLKR equ 080Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BLKR                   :6;
    };
    struct {
        unsigned BLKR0                  :1;
        unsigned BLKR1                  :1;
        unsigned BLKR2                  :1;
        unsigned BLKR3                  :1;
        unsigned BLKR4                  :1;
        unsigned BLKR5                  :1;
    };
    struct {
        unsigned G3BLKR0                :1;
        unsigned G3BLKR1                :1;
        unsigned G3BLKR2                :1;
        unsigned G3BLKR3                :1;
        unsigned G3BLKR4                :1;
        unsigned G3BLKR5                :1;
    };
} COG3BLKRbits_t;
extern volatile COG3BLKRbits_t COG3BLKRbits __at(0x80F);
// bitfield macros
#define _COG3BLKR_BLKR_POSN                                 0x0
#define _COG3BLKR_BLKR_POSITION                             0x0
#define _COG3BLKR_BLKR_SIZE                                 0x6
#define _COG3BLKR_BLKR_LENGTH                               0x6
#define _COG3BLKR_BLKR_MASK                                 0x3F
#define _COG3BLKR_BLKR0_POSN                                0x0
#define _COG3BLKR_BLKR0_POSITION                            0x0
#define _COG3BLKR_BLKR0_SIZE                                0x1
#define _COG3BLKR_BLKR0_LENGTH                              0x1
#define _COG3BLKR_BLKR0_MASK                                0x1
#define _COG3BLKR_BLKR1_POSN                                0x1
#define _COG3BLKR_BLKR1_POSITION                            0x1
#define _COG3BLKR_BLKR1_SIZE                                0x1
#define _COG3BLKR_BLKR1_LENGTH                              0x1
#define _COG3BLKR_BLKR1_MASK                                0x2
#define _COG3BLKR_BLKR2_POSN                                0x2
#define _COG3BLKR_BLKR2_POSITION                            0x2
#define _COG3BLKR_BLKR2_SIZE                                0x1
#define _COG3BLKR_BLKR2_LENGTH                              0x1
#define _COG3BLKR_BLKR2_MASK                                0x4
#define _COG3BLKR_BLKR3_POSN                                0x3
#define _COG3BLKR_BLKR3_POSITION                            0x3
#define _COG3BLKR_BLKR3_SIZE                                0x1
#define _COG3BLKR_BLKR3_LENGTH                              0x1
#define _COG3BLKR_BLKR3_MASK                                0x8
#define _COG3BLKR_BLKR4_POSN                                0x4
#define _COG3BLKR_BLKR4_POSITION                            0x4
#define _COG3BLKR_BLKR4_SIZE                                0x1
#define _COG3BLKR_BLKR4_LENGTH                              0x1
#define _COG3BLKR_BLKR4_MASK                                0x10
#define _COG3BLKR_BLKR5_POSN                                0x5
#define _COG3BLKR_BLKR5_POSITION                            0x5
#define _COG3BLKR_BLKR5_SIZE                                0x1
#define _COG3BLKR_BLKR5_LENGTH                              0x1
#define _COG3BLKR_BLKR5_MASK                                0x20
#define _COG3BLKR_G3BLKR0_POSN                              0x0
#define _COG3BLKR_G3BLKR0_POSITION                          0x0
#define _COG3BLKR_G3BLKR0_SIZE                              0x1
#define _COG3BLKR_G3BLKR0_LENGTH                            0x1
#define _COG3BLKR_G3BLKR0_MASK                              0x1
#define _COG3BLKR_G3BLKR1_POSN                              0x1
#define _COG3BLKR_G3BLKR1_POSITION                          0x1
#define _COG3BLKR_G3BLKR1_SIZE                              0x1
#define _COG3BLKR_G3BLKR1_LENGTH                            0x1
#define _COG3BLKR_G3BLKR1_MASK                              0x2
#define _COG3BLKR_G3BLKR2_POSN                              0x2
#define _COG3BLKR_G3BLKR2_POSITION                          0x2
#define _COG3BLKR_G3BLKR2_SIZE                              0x1
#define _COG3BLKR_G3BLKR2_LENGTH                            0x1
#define _COG3BLKR_G3BLKR2_MASK                              0x4
#define _COG3BLKR_G3BLKR3_POSN                              0x3
#define _COG3BLKR_G3BLKR3_POSITION                          0x3
#define _COG3BLKR_G3BLKR3_SIZE                              0x1
#define _COG3BLKR_G3BLKR3_LENGTH                            0x1
#define _COG3BLKR_G3BLKR3_MASK                              0x8
#define _COG3BLKR_G3BLKR4_POSN                              0x4
#define _COG3BLKR_G3BLKR4_POSITION                          0x4
#define _COG3BLKR_G3BLKR4_SIZE                              0x1
#define _COG3BLKR_G3BLKR4_LENGTH                            0x1
#define _COG3BLKR_G3BLKR4_MASK                              0x10
#define _COG3BLKR_G3BLKR5_POSN                              0x5
#define _COG3BLKR_G3BLKR5_POSITION                          0x5
#define _COG3BLKR_G3BLKR5_SIZE                              0x1
#define _COG3BLKR_G3BLKR5_LENGTH                            0x1
#define _COG3BLKR_G3BLKR5_MASK                              0x20

// Register: COG3BLKF
#define COG3BLKF COG3BLKF
extern volatile unsigned char           COG3BLKF            __at(0x810);
#ifndef _LIB_BUILD
asm("COG3BLKF equ 0810h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BLKF                   :6;
    };
    struct {
        unsigned BLKF0                  :1;
        unsigned BLKF1                  :1;
        unsigned BLKF2                  :1;
        unsigned BLKF3                  :1;
        unsigned BLKF4                  :1;
        unsigned BLKF5                  :1;
    };
    struct {
        unsigned G3BLKF0                :1;
        unsigned G3BLKF1                :1;
        unsigned G3BLKF2                :1;
        unsigned G3BLKF3                :1;
        unsigned G3BLKF4                :1;
        unsigned G3BLKF5                :1;
    };
} COG3BLKFbits_t;
extern volatile COG3BLKFbits_t COG3BLKFbits __at(0x810);
// bitfield macros
#define _COG3BLKF_BLKF_POSN                                 0x0
#define _COG3BLKF_BLKF_POSITION                             0x0
#define _COG3BLKF_BLKF_SIZE                                 0x6
#define _COG3BLKF_BLKF_LENGTH                               0x6
#define _COG3BLKF_BLKF_MASK                                 0x3F
#define _COG3BLKF_BLKF0_POSN                                0x0
#define _COG3BLKF_BLKF0_POSITION                            0x0
#define _COG3BLKF_BLKF0_SIZE                                0x1
#define _COG3BLKF_BLKF0_LENGTH                              0x1
#define _COG3BLKF_BLKF0_MASK                                0x1
#define _COG3BLKF_BLKF1_POSN                                0x1
#define _COG3BLKF_BLKF1_POSITION                            0x1
#define _COG3BLKF_BLKF1_SIZE                                0x1
#define _COG3BLKF_BLKF1_LENGTH                              0x1
#define _COG3BLKF_BLKF1_MASK                                0x2
#define _COG3BLKF_BLKF2_POSN                                0x2
#define _COG3BLKF_BLKF2_POSITION                            0x2
#define _COG3BLKF_BLKF2_SIZE                                0x1
#define _COG3BLKF_BLKF2_LENGTH                              0x1
#define _COG3BLKF_BLKF2_MASK                                0x4
#define _COG3BLKF_BLKF3_POSN                                0x3
#define _COG3BLKF_BLKF3_POSITION                            0x3
#define _COG3BLKF_BLKF3_SIZE                                0x1
#define _COG3BLKF_BLKF3_LENGTH                              0x1
#define _COG3BLKF_BLKF3_MASK                                0x8
#define _COG3BLKF_BLKF4_POSN                                0x4
#define _COG3BLKF_BLKF4_POSITION                            0x4
#define _COG3BLKF_BLKF4_SIZE                                0x1
#define _COG3BLKF_BLKF4_LENGTH                              0x1
#define _COG3BLKF_BLKF4_MASK                                0x10
#define _COG3BLKF_BLKF5_POSN                                0x5
#define _COG3BLKF_BLKF5_POSITION                            0x5
#define _COG3BLKF_BLKF5_SIZE                                0x1
#define _COG3BLKF_BLKF5_LENGTH                              0x1
#define _COG3BLKF_BLKF5_MASK                                0x20
#define _COG3BLKF_G3BLKF0_POSN                              0x0
#define _COG3BLKF_G3BLKF0_POSITION                          0x0
#define _COG3BLKF_G3BLKF0_SIZE                              0x1
#define _COG3BLKF_G3BLKF0_LENGTH                            0x1
#define _COG3BLKF_G3BLKF0_MASK                              0x1
#define _COG3BLKF_G3BLKF1_POSN                              0x1
#define _COG3BLKF_G3BLKF1_POSITION                          0x1
#define _COG3BLKF_G3BLKF1_SIZE                              0x1
#define _COG3BLKF_G3BLKF1_LENGTH                            0x1
#define _COG3BLKF_G3BLKF1_MASK                              0x2
#define _COG3BLKF_G3BLKF2_POSN                              0x2
#define _COG3BLKF_G3BLKF2_POSITION                          0x2
#define _COG3BLKF_G3BLKF2_SIZE                              0x1
#define _COG3BLKF_G3BLKF2_LENGTH                            0x1
#define _COG3BLKF_G3BLKF2_MASK                              0x4
#define _COG3BLKF_G3BLKF3_POSN                              0x3
#define _COG3BLKF_G3BLKF3_POSITION                          0x3
#define _COG3BLKF_G3BLKF3_SIZE                              0x1
#define _COG3BLKF_G3BLKF3_LENGTH                            0x1
#define _COG3BLKF_G3BLKF3_MASK                              0x8
#define _COG3BLKF_G3BLKF4_POSN                              0x4
#define _COG3BLKF_G3BLKF4_POSITION                          0x4
#define _COG3BLKF_G3BLKF4_SIZE                              0x1
#define _COG3BLKF_G3BLKF4_LENGTH                            0x1
#define _COG3BLKF_G3BLKF4_MASK                              0x10
#define _COG3BLKF_G3BLKF5_POSN                              0x5
#define _COG3BLKF_G3BLKF5_POSITION                          0x5
#define _COG3BLKF_G3BLKF5_SIZE                              0x1
#define _COG3BLKF_G3BLKF5_LENGTH                            0x1
#define _COG3BLKF_G3BLKF5_MASK                              0x20

// Register: COG3DBR
#define COG3DBR COG3DBR
extern volatile unsigned char           COG3DBR             __at(0x811);
#ifndef _LIB_BUILD
asm("COG3DBR equ 0811h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBR                    :6;
    };
    struct {
        unsigned DBR0                   :1;
        unsigned DBR1                   :1;
        unsigned DBR2                   :1;
        unsigned DBR3                   :1;
        unsigned DBR4                   :1;
        unsigned DBR5                   :1;
    };
    struct {
        unsigned G3DBR0                 :1;
        unsigned G3DBR1                 :1;
        unsigned G3DBR2                 :1;
        unsigned G3DBR3                 :1;
        unsigned G3DBR4                 :1;
        unsigned G3DBR5                 :1;
    };
} COG3DBRbits_t;
extern volatile COG3DBRbits_t COG3DBRbits __at(0x811);
// bitfield macros
#define _COG3DBR_DBR_POSN                                   0x0
#define _COG3DBR_DBR_POSITION                               0x0
#define _COG3DBR_DBR_SIZE                                   0x6
#define _COG3DBR_DBR_LENGTH                                 0x6
#define _COG3DBR_DBR_MASK                                   0x3F
#define _COG3DBR_DBR0_POSN                                  0x0
#define _COG3DBR_DBR0_POSITION                              0x0
#define _COG3DBR_DBR0_SIZE                                  0x1
#define _COG3DBR_DBR0_LENGTH                                0x1
#define _COG3DBR_DBR0_MASK                                  0x1
#define _COG3DBR_DBR1_POSN                                  0x1
#define _COG3DBR_DBR1_POSITION                              0x1
#define _COG3DBR_DBR1_SIZE                                  0x1
#define _COG3DBR_DBR1_LENGTH                                0x1
#define _COG3DBR_DBR1_MASK                                  0x2
#define _COG3DBR_DBR2_POSN                                  0x2
#define _COG3DBR_DBR2_POSITION                              0x2
#define _COG3DBR_DBR2_SIZE                                  0x1
#define _COG3DBR_DBR2_LENGTH                                0x1
#define _COG3DBR_DBR2_MASK                                  0x4
#define _COG3DBR_DBR3_POSN                                  0x3
#define _COG3DBR_DBR3_POSITION                              0x3
#define _COG3DBR_DBR3_SIZE                                  0x1
#define _COG3DBR_DBR3_LENGTH                                0x1
#define _COG3DBR_DBR3_MASK                                  0x8
#define _COG3DBR_DBR4_POSN                                  0x4
#define _COG3DBR_DBR4_POSITION                              0x4
#define _COG3DBR_DBR4_SIZE                                  0x1
#define _COG3DBR_DBR4_LENGTH                                0x1
#define _COG3DBR_DBR4_MASK                                  0x10
#define _COG3DBR_DBR5_POSN                                  0x5
#define _COG3DBR_DBR5_POSITION                              0x5
#define _COG3DBR_DBR5_SIZE                                  0x1
#define _COG3DBR_DBR5_LENGTH                                0x1
#define _COG3DBR_DBR5_MASK                                  0x20
#define _COG3DBR_G3DBR0_POSN                                0x0
#define _COG3DBR_G3DBR0_POSITION                            0x0
#define _COG3DBR_G3DBR0_SIZE                                0x1
#define _COG3DBR_G3DBR0_LENGTH                              0x1
#define _COG3DBR_G3DBR0_MASK                                0x1
#define _COG3DBR_G3DBR1_POSN                                0x1
#define _COG3DBR_G3DBR1_POSITION                            0x1
#define _COG3DBR_G3DBR1_SIZE                                0x1
#define _COG3DBR_G3DBR1_LENGTH                              0x1
#define _COG3DBR_G3DBR1_MASK                                0x2
#define _COG3DBR_G3DBR2_POSN                                0x2
#define _COG3DBR_G3DBR2_POSITION                            0x2
#define _COG3DBR_G3DBR2_SIZE                                0x1
#define _COG3DBR_G3DBR2_LENGTH                              0x1
#define _COG3DBR_G3DBR2_MASK                                0x4
#define _COG3DBR_G3DBR3_POSN                                0x3
#define _COG3DBR_G3DBR3_POSITION                            0x3
#define _COG3DBR_G3DBR3_SIZE                                0x1
#define _COG3DBR_G3DBR3_LENGTH                              0x1
#define _COG3DBR_G3DBR3_MASK                                0x8
#define _COG3DBR_G3DBR4_POSN                                0x4
#define _COG3DBR_G3DBR4_POSITION                            0x4
#define _COG3DBR_G3DBR4_SIZE                                0x1
#define _COG3DBR_G3DBR4_LENGTH                              0x1
#define _COG3DBR_G3DBR4_MASK                                0x10
#define _COG3DBR_G3DBR5_POSN                                0x5
#define _COG3DBR_G3DBR5_POSITION                            0x5
#define _COG3DBR_G3DBR5_SIZE                                0x1
#define _COG3DBR_G3DBR5_LENGTH                              0x1
#define _COG3DBR_G3DBR5_MASK                                0x20

// Register: COG3DBF
#define COG3DBF COG3DBF
extern volatile unsigned char           COG3DBF             __at(0x812);
#ifndef _LIB_BUILD
asm("COG3DBF equ 0812h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBF0                   :1;
        unsigned DBF1                   :1;
        unsigned DBF2                   :1;
        unsigned DBF3                   :1;
        unsigned DBF4                   :1;
        unsigned DBF5                   :1;
    };
    struct {
        unsigned G3DBF0                 :1;
        unsigned G3DBF1                 :1;
        unsigned G3DBF2                 :1;
        unsigned G3DBF3                 :1;
        unsigned G3DBF4                 :1;
        unsigned G3DBF5                 :1;
    };
    struct {
        unsigned G3DBF                  :6;
    };
} COG3DBFbits_t;
extern volatile COG3DBFbits_t COG3DBFbits __at(0x812);
// bitfield macros
#define _COG3DBF_DBF0_POSN                                  0x0
#define _COG3DBF_DBF0_POSITION                              0x0
#define _COG3DBF_DBF0_SIZE                                  0x1
#define _COG3DBF_DBF0_LENGTH                                0x1
#define _COG3DBF_DBF0_MASK                                  0x1
#define _COG3DBF_DBF1_POSN                                  0x1
#define _COG3DBF_DBF1_POSITION                              0x1
#define _COG3DBF_DBF1_SIZE                                  0x1
#define _COG3DBF_DBF1_LENGTH                                0x1
#define _COG3DBF_DBF1_MASK                                  0x2
#define _COG3DBF_DBF2_POSN                                  0x2
#define _COG3DBF_DBF2_POSITION                              0x2
#define _COG3DBF_DBF2_SIZE                                  0x1
#define _COG3DBF_DBF2_LENGTH                                0x1
#define _COG3DBF_DBF2_MASK                                  0x4
#define _COG3DBF_DBF3_POSN                                  0x3
#define _COG3DBF_DBF3_POSITION                              0x3
#define _COG3DBF_DBF3_SIZE                                  0x1
#define _COG3DBF_DBF3_LENGTH                                0x1
#define _COG3DBF_DBF3_MASK                                  0x8
#define _COG3DBF_DBF4_POSN                                  0x4
#define _COG3DBF_DBF4_POSITION                              0x4
#define _COG3DBF_DBF4_SIZE                                  0x1
#define _COG3DBF_DBF4_LENGTH                                0x1
#define _COG3DBF_DBF4_MASK                                  0x10
#define _COG3DBF_DBF5_POSN                                  0x5
#define _COG3DBF_DBF5_POSITION                              0x5
#define _COG3DBF_DBF5_SIZE                                  0x1
#define _COG3DBF_DBF5_LENGTH                                0x1
#define _COG3DBF_DBF5_MASK                                  0x20
#define _COG3DBF_G3DBF0_POSN                                0x0
#define _COG3DBF_G3DBF0_POSITION                            0x0
#define _COG3DBF_G3DBF0_SIZE                                0x1
#define _COG3DBF_G3DBF0_LENGTH                              0x1
#define _COG3DBF_G3DBF0_MASK                                0x1
#define _COG3DBF_G3DBF1_POSN                                0x1
#define _COG3DBF_G3DBF1_POSITION                            0x1
#define _COG3DBF_G3DBF1_SIZE                                0x1
#define _COG3DBF_G3DBF1_LENGTH                              0x1
#define _COG3DBF_G3DBF1_MASK                                0x2
#define _COG3DBF_G3DBF2_POSN                                0x2
#define _COG3DBF_G3DBF2_POSITION                            0x2
#define _COG3DBF_G3DBF2_SIZE                                0x1
#define _COG3DBF_G3DBF2_LENGTH                              0x1
#define _COG3DBF_G3DBF2_MASK                                0x4
#define _COG3DBF_G3DBF3_POSN                                0x3
#define _COG3DBF_G3DBF3_POSITION                            0x3
#define _COG3DBF_G3DBF3_SIZE                                0x1
#define _COG3DBF_G3DBF3_LENGTH                              0x1
#define _COG3DBF_G3DBF3_MASK                                0x8
#define _COG3DBF_G3DBF4_POSN                                0x4
#define _COG3DBF_G3DBF4_POSITION                            0x4
#define _COG3DBF_G3DBF4_SIZE                                0x1
#define _COG3DBF_G3DBF4_LENGTH                              0x1
#define _COG3DBF_G3DBF4_MASK                                0x10
#define _COG3DBF_G3DBF5_POSN                                0x5
#define _COG3DBF_G3DBF5_POSITION                            0x5
#define _COG3DBF_G3DBF5_SIZE                                0x1
#define _COG3DBF_G3DBF5_LENGTH                              0x1
#define _COG3DBF_G3DBF5_MASK                                0x20
#define _COG3DBF_G3DBF_POSN                                 0x0
#define _COG3DBF_G3DBF_POSITION                             0x0
#define _COG3DBF_G3DBF_SIZE                                 0x6
#define _COG3DBF_G3DBF_LENGTH                               0x6
#define _COG3DBF_G3DBF_MASK                                 0x3F

// Register: COG3CON0
#define COG3CON0 COG3CON0
extern volatile unsigned char           COG3CON0            __at(0x813);
#ifndef _LIB_BUILD
asm("COG3CON0 equ 0813h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD                     :3;
        unsigned CS                     :2;
        unsigned                        :1;
        unsigned LD                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MD0                    :1;
        unsigned MD1                    :1;
        unsigned MD2                    :1;
        unsigned CS0                    :1;
        unsigned CS1                    :1;
    };
    struct {
        unsigned G3MD                   :3;
        unsigned G3CS                   :2;
        unsigned                        :1;
        unsigned G3LD                   :1;
        unsigned G3EN                   :1;
    };
    struct {
        unsigned G3MD0                  :1;
        unsigned G3MD1                  :1;
        unsigned G3MD2                  :1;
        unsigned G3CS0                  :1;
        unsigned G3CS1                  :1;
    };
} COG3CON0bits_t;
extern volatile COG3CON0bits_t COG3CON0bits __at(0x813);
// bitfield macros
#define _COG3CON0_MD_POSN                                   0x0
#define _COG3CON0_MD_POSITION                               0x0
#define _COG3CON0_MD_SIZE                                   0x3
#define _COG3CON0_MD_LENGTH                                 0x3
#define _COG3CON0_MD_MASK                                   0x7
#define _COG3CON0_CS_POSN                                   0x3
#define _COG3CON0_CS_POSITION                               0x3
#define _COG3CON0_CS_SIZE                                   0x2
#define _COG3CON0_CS_LENGTH                                 0x2
#define _COG3CON0_CS_MASK                                   0x18
#define _COG3CON0_LD_POSN                                   0x6
#define _COG3CON0_LD_POSITION                               0x6
#define _COG3CON0_LD_SIZE                                   0x1
#define _COG3CON0_LD_LENGTH                                 0x1
#define _COG3CON0_LD_MASK                                   0x40
#define _COG3CON0_EN_POSN                                   0x7
#define _COG3CON0_EN_POSITION                               0x7
#define _COG3CON0_EN_SIZE                                   0x1
#define _COG3CON0_EN_LENGTH                                 0x1
#define _COG3CON0_EN_MASK                                   0x80
#define _COG3CON0_MD0_POSN                                  0x0
#define _COG3CON0_MD0_POSITION                              0x0
#define _COG3CON0_MD0_SIZE                                  0x1
#define _COG3CON0_MD0_LENGTH                                0x1
#define _COG3CON0_MD0_MASK                                  0x1
#define _COG3CON0_MD1_POSN                                  0x1
#define _COG3CON0_MD1_POSITION                              0x1
#define _COG3CON0_MD1_SIZE                                  0x1
#define _COG3CON0_MD1_LENGTH                                0x1
#define _COG3CON0_MD1_MASK                                  0x2
#define _COG3CON0_MD2_POSN                                  0x2
#define _COG3CON0_MD2_POSITION                              0x2
#define _COG3CON0_MD2_SIZE                                  0x1
#define _COG3CON0_MD2_LENGTH                                0x1
#define _COG3CON0_MD2_MASK                                  0x4
#define _COG3CON0_CS0_POSN                                  0x3
#define _COG3CON0_CS0_POSITION                              0x3
#define _COG3CON0_CS0_SIZE                                  0x1
#define _COG3CON0_CS0_LENGTH                                0x1
#define _COG3CON0_CS0_MASK                                  0x8
#define _COG3CON0_CS1_POSN                                  0x4
#define _COG3CON0_CS1_POSITION                              0x4
#define _COG3CON0_CS1_SIZE                                  0x1
#define _COG3CON0_CS1_LENGTH                                0x1
#define _COG3CON0_CS1_MASK                                  0x10
#define _COG3CON0_G3MD_POSN                                 0x0
#define _COG3CON0_G3MD_POSITION                             0x0
#define _COG3CON0_G3MD_SIZE                                 0x3
#define _COG3CON0_G3MD_LENGTH                               0x3
#define _COG3CON0_G3MD_MASK                                 0x7
#define _COG3CON0_G3CS_POSN                                 0x3
#define _COG3CON0_G3CS_POSITION                             0x3
#define _COG3CON0_G3CS_SIZE                                 0x2
#define _COG3CON0_G3CS_LENGTH                               0x2
#define _COG3CON0_G3CS_MASK                                 0x18
#define _COG3CON0_G3LD_POSN                                 0x6
#define _COG3CON0_G3LD_POSITION                             0x6
#define _COG3CON0_G3LD_SIZE                                 0x1
#define _COG3CON0_G3LD_LENGTH                               0x1
#define _COG3CON0_G3LD_MASK                                 0x40
#define _COG3CON0_G3EN_POSN                                 0x7
#define _COG3CON0_G3EN_POSITION                             0x7
#define _COG3CON0_G3EN_SIZE                                 0x1
#define _COG3CON0_G3EN_LENGTH                               0x1
#define _COG3CON0_G3EN_MASK                                 0x80
#define _COG3CON0_G3MD0_POSN                                0x0
#define _COG3CON0_G3MD0_POSITION                            0x0
#define _COG3CON0_G3MD0_SIZE                                0x1
#define _COG3CON0_G3MD0_LENGTH                              0x1
#define _COG3CON0_G3MD0_MASK                                0x1
#define _COG3CON0_G3MD1_POSN                                0x1
#define _COG3CON0_G3MD1_POSITION                            0x1
#define _COG3CON0_G3MD1_SIZE                                0x1
#define _COG3CON0_G3MD1_LENGTH                              0x1
#define _COG3CON0_G3MD1_MASK                                0x2
#define _COG3CON0_G3MD2_POSN                                0x2
#define _COG3CON0_G3MD2_POSITION                            0x2
#define _COG3CON0_G3MD2_SIZE                                0x1
#define _COG3CON0_G3MD2_LENGTH                              0x1
#define _COG3CON0_G3MD2_MASK                                0x4
#define _COG3CON0_G3CS0_POSN                                0x3
#define _COG3CON0_G3CS0_POSITION                            0x3
#define _COG3CON0_G3CS0_SIZE                                0x1
#define _COG3CON0_G3CS0_LENGTH                              0x1
#define _COG3CON0_G3CS0_MASK                                0x8
#define _COG3CON0_G3CS1_POSN                                0x4
#define _COG3CON0_G3CS1_POSITION                            0x4
#define _COG3CON0_G3CS1_SIZE                                0x1
#define _COG3CON0_G3CS1_LENGTH                              0x1
#define _COG3CON0_G3CS1_MASK                                0x10

// Register: COG3CON1
#define COG3CON1 COG3CON1
extern volatile unsigned char           COG3CON1            __at(0x814);
#ifndef _LIB_BUILD
asm("COG3CON1 equ 0814h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POLA                   :1;
        unsigned POLB                   :1;
        unsigned POLC                   :1;
        unsigned POLD                   :1;
        unsigned                        :2;
        unsigned FDBS                   :1;
        unsigned RDBS                   :1;
    };
    struct {
        unsigned G3POLA                 :1;
        unsigned G3POLB                 :1;
        unsigned G3POLC                 :1;
        unsigned G3POLD                 :1;
        unsigned                        :2;
        unsigned G3FDBS                 :1;
        unsigned G3RDBS                 :1;
    };
} COG3CON1bits_t;
extern volatile COG3CON1bits_t COG3CON1bits __at(0x814);
// bitfield macros
#define _COG3CON1_POLA_POSN                                 0x0
#define _COG3CON1_POLA_POSITION                             0x0
#define _COG3CON1_POLA_SIZE                                 0x1
#define _COG3CON1_POLA_LENGTH                               0x1
#define _COG3CON1_POLA_MASK                                 0x1
#define _COG3CON1_POLB_POSN                                 0x1
#define _COG3CON1_POLB_POSITION                             0x1
#define _COG3CON1_POLB_SIZE                                 0x1
#define _COG3CON1_POLB_LENGTH                               0x1
#define _COG3CON1_POLB_MASK                                 0x2
#define _COG3CON1_POLC_POSN                                 0x2
#define _COG3CON1_POLC_POSITION                             0x2
#define _COG3CON1_POLC_SIZE                                 0x1
#define _COG3CON1_POLC_LENGTH                               0x1
#define _COG3CON1_POLC_MASK                                 0x4
#define _COG3CON1_POLD_POSN                                 0x3
#define _COG3CON1_POLD_POSITION                             0x3
#define _COG3CON1_POLD_SIZE                                 0x1
#define _COG3CON1_POLD_LENGTH                               0x1
#define _COG3CON1_POLD_MASK                                 0x8
#define _COG3CON1_FDBS_POSN                                 0x6
#define _COG3CON1_FDBS_POSITION                             0x6
#define _COG3CON1_FDBS_SIZE                                 0x1
#define _COG3CON1_FDBS_LENGTH                               0x1
#define _COG3CON1_FDBS_MASK                                 0x40
#define _COG3CON1_RDBS_POSN                                 0x7
#define _COG3CON1_RDBS_POSITION                             0x7
#define _COG3CON1_RDBS_SIZE                                 0x1
#define _COG3CON1_RDBS_LENGTH                               0x1
#define _COG3CON1_RDBS_MASK                                 0x80
#define _COG3CON1_G3POLA_POSN                               0x0
#define _COG3CON1_G3POLA_POSITION                           0x0
#define _COG3CON1_G3POLA_SIZE                               0x1
#define _COG3CON1_G3POLA_LENGTH                             0x1
#define _COG3CON1_G3POLA_MASK                               0x1
#define _COG3CON1_G3POLB_POSN                               0x1
#define _COG3CON1_G3POLB_POSITION                           0x1
#define _COG3CON1_G3POLB_SIZE                               0x1
#define _COG3CON1_G3POLB_LENGTH                             0x1
#define _COG3CON1_G3POLB_MASK                               0x2
#define _COG3CON1_G3POLC_POSN                               0x2
#define _COG3CON1_G3POLC_POSITION                           0x2
#define _COG3CON1_G3POLC_SIZE                               0x1
#define _COG3CON1_G3POLC_LENGTH                             0x1
#define _COG3CON1_G3POLC_MASK                               0x4
#define _COG3CON1_G3POLD_POSN                               0x3
#define _COG3CON1_G3POLD_POSITION                           0x3
#define _COG3CON1_G3POLD_SIZE                               0x1
#define _COG3CON1_G3POLD_LENGTH                             0x1
#define _COG3CON1_G3POLD_MASK                               0x8
#define _COG3CON1_G3FDBS_POSN                               0x6
#define _COG3CON1_G3FDBS_POSITION                           0x6
#define _COG3CON1_G3FDBS_SIZE                               0x1
#define _COG3CON1_G3FDBS_LENGTH                             0x1
#define _COG3CON1_G3FDBS_MASK                               0x40
#define _COG3CON1_G3RDBS_POSN                               0x7
#define _COG3CON1_G3RDBS_POSITION                           0x7
#define _COG3CON1_G3RDBS_SIZE                               0x1
#define _COG3CON1_G3RDBS_LENGTH                             0x1
#define _COG3CON1_G3RDBS_MASK                               0x80

// Register: COG3RIS0
#define COG3RIS0 COG3RIS0
extern volatile unsigned char           COG3RIS0            __at(0x815);
#ifndef _LIB_BUILD
asm("COG3RIS0 equ 0815h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RIS0                   :1;
        unsigned RIS1                   :1;
        unsigned RIS2                   :1;
        unsigned RIS3                   :1;
        unsigned RIS4                   :1;
        unsigned RIS5                   :1;
        unsigned RIS6                   :1;
        unsigned RIS7                   :1;
    };
    struct {
        unsigned G3RIS0                 :1;
        unsigned G3RIS1                 :1;
        unsigned G3RIS2                 :1;
        unsigned G3RIS3                 :1;
        unsigned G3RIS4                 :1;
        unsigned G3RIS5                 :1;
        unsigned G3RIS6                 :1;
        unsigned G3RIS7                 :1;
    };
} COG3RIS0bits_t;
extern volatile COG3RIS0bits_t COG3RIS0bits __at(0x815);
// bitfield macros
#define _COG3RIS0_RIS0_POSN                                 0x0
#define _COG3RIS0_RIS0_POSITION                             0x0
#define _COG3RIS0_RIS0_SIZE                                 0x1
#define _COG3RIS0_RIS0_LENGTH                               0x1
#define _COG3RIS0_RIS0_MASK                                 0x1
#define _COG3RIS0_RIS1_POSN                                 0x1
#define _COG3RIS0_RIS1_POSITION                             0x1
#define _COG3RIS0_RIS1_SIZE                                 0x1
#define _COG3RIS0_RIS1_LENGTH                               0x1
#define _COG3RIS0_RIS1_MASK                                 0x2
#define _COG3RIS0_RIS2_POSN                                 0x2
#define _COG3RIS0_RIS2_POSITION                             0x2
#define _COG3RIS0_RIS2_SIZE                                 0x1
#define _COG3RIS0_RIS2_LENGTH                               0x1
#define _COG3RIS0_RIS2_MASK                                 0x4
#define _COG3RIS0_RIS3_POSN                                 0x3
#define _COG3RIS0_RIS3_POSITION                             0x3
#define _COG3RIS0_RIS3_SIZE                                 0x1
#define _COG3RIS0_RIS3_LENGTH                               0x1
#define _COG3RIS0_RIS3_MASK                                 0x8
#define _COG3RIS0_RIS4_POSN                                 0x4
#define _COG3RIS0_RIS4_POSITION                             0x4
#define _COG3RIS0_RIS4_SIZE                                 0x1
#define _COG3RIS0_RIS4_LENGTH                               0x1
#define _COG3RIS0_RIS4_MASK                                 0x10
#define _COG3RIS0_RIS5_POSN                                 0x5
#define _COG3RIS0_RIS5_POSITION                             0x5
#define _COG3RIS0_RIS5_SIZE                                 0x1
#define _COG3RIS0_RIS5_LENGTH                               0x1
#define _COG3RIS0_RIS5_MASK                                 0x20
#define _COG3RIS0_RIS6_POSN                                 0x6
#define _COG3RIS0_RIS6_POSITION                             0x6
#define _COG3RIS0_RIS6_SIZE                                 0x1
#define _COG3RIS0_RIS6_LENGTH                               0x1
#define _COG3RIS0_RIS6_MASK                                 0x40
#define _COG3RIS0_RIS7_POSN                                 0x7
#define _COG3RIS0_RIS7_POSITION                             0x7
#define _COG3RIS0_RIS7_SIZE                                 0x1
#define _COG3RIS0_RIS7_LENGTH                               0x1
#define _COG3RIS0_RIS7_MASK                                 0x80
#define _COG3RIS0_G3RIS0_POSN                               0x0
#define _COG3RIS0_G3RIS0_POSITION                           0x0
#define _COG3RIS0_G3RIS0_SIZE                               0x1
#define _COG3RIS0_G3RIS0_LENGTH                             0x1
#define _COG3RIS0_G3RIS0_MASK                               0x1
#define _COG3RIS0_G3RIS1_POSN                               0x1
#define _COG3RIS0_G3RIS1_POSITION                           0x1
#define _COG3RIS0_G3RIS1_SIZE                               0x1
#define _COG3RIS0_G3RIS1_LENGTH                             0x1
#define _COG3RIS0_G3RIS1_MASK                               0x2
#define _COG3RIS0_G3RIS2_POSN                               0x2
#define _COG3RIS0_G3RIS2_POSITION                           0x2
#define _COG3RIS0_G3RIS2_SIZE                               0x1
#define _COG3RIS0_G3RIS2_LENGTH                             0x1
#define _COG3RIS0_G3RIS2_MASK                               0x4
#define _COG3RIS0_G3RIS3_POSN                               0x3
#define _COG3RIS0_G3RIS3_POSITION                           0x3
#define _COG3RIS0_G3RIS3_SIZE                               0x1
#define _COG3RIS0_G3RIS3_LENGTH                             0x1
#define _COG3RIS0_G3RIS3_MASK                               0x8
#define _COG3RIS0_G3RIS4_POSN                               0x4
#define _COG3RIS0_G3RIS4_POSITION                           0x4
#define _COG3RIS0_G3RIS4_SIZE                               0x1
#define _COG3RIS0_G3RIS4_LENGTH                             0x1
#define _COG3RIS0_G3RIS4_MASK                               0x10
#define _COG3RIS0_G3RIS5_POSN                               0x5
#define _COG3RIS0_G3RIS5_POSITION                           0x5
#define _COG3RIS0_G3RIS5_SIZE                               0x1
#define _COG3RIS0_G3RIS5_LENGTH                             0x1
#define _COG3RIS0_G3RIS5_MASK                               0x20
#define _COG3RIS0_G3RIS6_POSN                               0x6
#define _COG3RIS0_G3RIS6_POSITION                           0x6
#define _COG3RIS0_G3RIS6_SIZE                               0x1
#define _COG3RIS0_G3RIS6_LENGTH                             0x1
#define _COG3RIS0_G3RIS6_MASK                               0x40
#define _COG3RIS0_G3RIS7_POSN                               0x7
#define _COG3RIS0_G3RIS7_POSITION                           0x7
#define _COG3RIS0_G3RIS7_SIZE                               0x1
#define _COG3RIS0_G3RIS7_LENGTH                             0x1
#define _COG3RIS0_G3RIS7_MASK                               0x80

// Register: COG3RIS1
#define COG3RIS1 COG3RIS1
extern volatile unsigned char           COG3RIS1            __at(0x816);
#ifndef _LIB_BUILD
asm("COG3RIS1 equ 0816h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned RIS9                   :1;
        unsigned                        :1;
        unsigned RIS11                  :1;
        unsigned RIS12                  :1;
        unsigned RIS13                  :1;
        unsigned RIS14                  :1;
        unsigned RIS15                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned G3RIS9                 :1;
        unsigned                        :1;
        unsigned G3RIS11                :1;
        unsigned G3RIS12                :1;
        unsigned G3RIS13                :1;
        unsigned G3RIS14                :1;
        unsigned G3RIS15                :1;
    };
} COG3RIS1bits_t;
extern volatile COG3RIS1bits_t COG3RIS1bits __at(0x816);
// bitfield macros
#define _COG3RIS1_RIS9_POSN                                 0x1
#define _COG3RIS1_RIS9_POSITION                             0x1
#define _COG3RIS1_RIS9_SIZE                                 0x1
#define _COG3RIS1_RIS9_LENGTH                               0x1
#define _COG3RIS1_RIS9_MASK                                 0x2
#define _COG3RIS1_RIS11_POSN                                0x3
#define _COG3RIS1_RIS11_POSITION                            0x3
#define _COG3RIS1_RIS11_SIZE                                0x1
#define _COG3RIS1_RIS11_LENGTH                              0x1
#define _COG3RIS1_RIS11_MASK                                0x8
#define _COG3RIS1_RIS12_POSN                                0x4
#define _COG3RIS1_RIS12_POSITION                            0x4
#define _COG3RIS1_RIS12_SIZE                                0x1
#define _COG3RIS1_RIS12_LENGTH                              0x1
#define _COG3RIS1_RIS12_MASK                                0x10
#define _COG3RIS1_RIS13_POSN                                0x5
#define _COG3RIS1_RIS13_POSITION                            0x5
#define _COG3RIS1_RIS13_SIZE                                0x1
#define _COG3RIS1_RIS13_LENGTH                              0x1
#define _COG3RIS1_RIS13_MASK                                0x20
#define _COG3RIS1_RIS14_POSN                                0x6
#define _COG3RIS1_RIS14_POSITION                            0x6
#define _COG3RIS1_RIS14_SIZE                                0x1
#define _COG3RIS1_RIS14_LENGTH                              0x1
#define _COG3RIS1_RIS14_MASK                                0x40
#define _COG3RIS1_RIS15_POSN                                0x7
#define _COG3RIS1_RIS15_POSITION                            0x7
#define _COG3RIS1_RIS15_SIZE                                0x1
#define _COG3RIS1_RIS15_LENGTH                              0x1
#define _COG3RIS1_RIS15_MASK                                0x80
#define _COG3RIS1_G3RIS9_POSN                               0x1
#define _COG3RIS1_G3RIS9_POSITION                           0x1
#define _COG3RIS1_G3RIS9_SIZE                               0x1
#define _COG3RIS1_G3RIS9_LENGTH                             0x1
#define _COG3RIS1_G3RIS9_MASK                               0x2
#define _COG3RIS1_G3RIS11_POSN                              0x3
#define _COG3RIS1_G3RIS11_POSITION                          0x3
#define _COG3RIS1_G3RIS11_SIZE                              0x1
#define _COG3RIS1_G3RIS11_LENGTH                            0x1
#define _COG3RIS1_G3RIS11_MASK                              0x8
#define _COG3RIS1_G3RIS12_POSN                              0x4
#define _COG3RIS1_G3RIS12_POSITION                          0x4
#define _COG3RIS1_G3RIS12_SIZE                              0x1
#define _COG3RIS1_G3RIS12_LENGTH                            0x1
#define _COG3RIS1_G3RIS12_MASK                              0x10
#define _COG3RIS1_G3RIS13_POSN                              0x5
#define _COG3RIS1_G3RIS13_POSITION                          0x5
#define _COG3RIS1_G3RIS13_SIZE                              0x1
#define _COG3RIS1_G3RIS13_LENGTH                            0x1
#define _COG3RIS1_G3RIS13_MASK                              0x20
#define _COG3RIS1_G3RIS14_POSN                              0x6
#define _COG3RIS1_G3RIS14_POSITION                          0x6
#define _COG3RIS1_G3RIS14_SIZE                              0x1
#define _COG3RIS1_G3RIS14_LENGTH                            0x1
#define _COG3RIS1_G3RIS14_MASK                              0x40
#define _COG3RIS1_G3RIS15_POSN                              0x7
#define _COG3RIS1_G3RIS15_POSITION                          0x7
#define _COG3RIS1_G3RIS15_SIZE                              0x1
#define _COG3RIS1_G3RIS15_LENGTH                            0x1
#define _COG3RIS1_G3RIS15_MASK                              0x80

// Register: COG3RSIM0
#define COG3RSIM0 COG3RSIM0
extern volatile unsigned char           COG3RSIM0           __at(0x817);
#ifndef _LIB_BUILD
asm("COG3RSIM0 equ 0817h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RSIM0                  :1;
        unsigned RSIM1                  :1;
        unsigned RSIM2                  :1;
        unsigned RSIM3                  :1;
        unsigned RSIM4                  :1;
        unsigned RSIM5                  :1;
        unsigned RSIM6                  :1;
        unsigned RSIM7                  :1;
    };
    struct {
        unsigned G3RSIM0                :1;
        unsigned G3RSIM1                :1;
        unsigned G3RSIM2                :1;
        unsigned G3RSIM3                :1;
        unsigned G3RSIM4                :1;
        unsigned G3RSIM5                :1;
        unsigned G3RSIM6                :1;
        unsigned G3RSIM7                :1;
    };
} COG3RSIM0bits_t;
extern volatile COG3RSIM0bits_t COG3RSIM0bits __at(0x817);
// bitfield macros
#define _COG3RSIM0_RSIM0_POSN                               0x0
#define _COG3RSIM0_RSIM0_POSITION                           0x0
#define _COG3RSIM0_RSIM0_SIZE                               0x1
#define _COG3RSIM0_RSIM0_LENGTH                             0x1
#define _COG3RSIM0_RSIM0_MASK                               0x1
#define _COG3RSIM0_RSIM1_POSN                               0x1
#define _COG3RSIM0_RSIM1_POSITION                           0x1
#define _COG3RSIM0_RSIM1_SIZE                               0x1
#define _COG3RSIM0_RSIM1_LENGTH                             0x1
#define _COG3RSIM0_RSIM1_MASK                               0x2
#define _COG3RSIM0_RSIM2_POSN                               0x2
#define _COG3RSIM0_RSIM2_POSITION                           0x2
#define _COG3RSIM0_RSIM2_SIZE                               0x1
#define _COG3RSIM0_RSIM2_LENGTH                             0x1
#define _COG3RSIM0_RSIM2_MASK                               0x4
#define _COG3RSIM0_RSIM3_POSN                               0x3
#define _COG3RSIM0_RSIM3_POSITION                           0x3
#define _COG3RSIM0_RSIM3_SIZE                               0x1
#define _COG3RSIM0_RSIM3_LENGTH                             0x1
#define _COG3RSIM0_RSIM3_MASK                               0x8
#define _COG3RSIM0_RSIM4_POSN                               0x4
#define _COG3RSIM0_RSIM4_POSITION                           0x4
#define _COG3RSIM0_RSIM4_SIZE                               0x1
#define _COG3RSIM0_RSIM4_LENGTH                             0x1
#define _COG3RSIM0_RSIM4_MASK                               0x10
#define _COG3RSIM0_RSIM5_POSN                               0x5
#define _COG3RSIM0_RSIM5_POSITION                           0x5
#define _COG3RSIM0_RSIM5_SIZE                               0x1
#define _COG3RSIM0_RSIM5_LENGTH                             0x1
#define _COG3RSIM0_RSIM5_MASK                               0x20
#define _COG3RSIM0_RSIM6_POSN                               0x6
#define _COG3RSIM0_RSIM6_POSITION                           0x6
#define _COG3RSIM0_RSIM6_SIZE                               0x1
#define _COG3RSIM0_RSIM6_LENGTH                             0x1
#define _COG3RSIM0_RSIM6_MASK                               0x40
#define _COG3RSIM0_RSIM7_POSN                               0x7
#define _COG3RSIM0_RSIM7_POSITION                           0x7
#define _COG3RSIM0_RSIM7_SIZE                               0x1
#define _COG3RSIM0_RSIM7_LENGTH                             0x1
#define _COG3RSIM0_RSIM7_MASK                               0x80
#define _COG3RSIM0_G3RSIM0_POSN                             0x0
#define _COG3RSIM0_G3RSIM0_POSITION                         0x0
#define _COG3RSIM0_G3RSIM0_SIZE                             0x1
#define _COG3RSIM0_G3RSIM0_LENGTH                           0x1
#define _COG3RSIM0_G3RSIM0_MASK                             0x1
#define _COG3RSIM0_G3RSIM1_POSN                             0x1
#define _COG3RSIM0_G3RSIM1_POSITION                         0x1
#define _COG3RSIM0_G3RSIM1_SIZE                             0x1
#define _COG3RSIM0_G3RSIM1_LENGTH                           0x1
#define _COG3RSIM0_G3RSIM1_MASK                             0x2
#define _COG3RSIM0_G3RSIM2_POSN                             0x2
#define _COG3RSIM0_G3RSIM2_POSITION                         0x2
#define _COG3RSIM0_G3RSIM2_SIZE                             0x1
#define _COG3RSIM0_G3RSIM2_LENGTH                           0x1
#define _COG3RSIM0_G3RSIM2_MASK                             0x4
#define _COG3RSIM0_G3RSIM3_POSN                             0x3
#define _COG3RSIM0_G3RSIM3_POSITION                         0x3
#define _COG3RSIM0_G3RSIM3_SIZE                             0x1
#define _COG3RSIM0_G3RSIM3_LENGTH                           0x1
#define _COG3RSIM0_G3RSIM3_MASK                             0x8
#define _COG3RSIM0_G3RSIM4_POSN                             0x4
#define _COG3RSIM0_G3RSIM4_POSITION                         0x4
#define _COG3RSIM0_G3RSIM4_SIZE                             0x1
#define _COG3RSIM0_G3RSIM4_LENGTH                           0x1
#define _COG3RSIM0_G3RSIM4_MASK                             0x10
#define _COG3RSIM0_G3RSIM5_POSN                             0x5
#define _COG3RSIM0_G3RSIM5_POSITION                         0x5
#define _COG3RSIM0_G3RSIM5_SIZE                             0x1
#define _COG3RSIM0_G3RSIM5_LENGTH                           0x1
#define _COG3RSIM0_G3RSIM5_MASK                             0x20
#define _COG3RSIM0_G3RSIM6_POSN                             0x6
#define _COG3RSIM0_G3RSIM6_POSITION                         0x6
#define _COG3RSIM0_G3RSIM6_SIZE                             0x1
#define _COG3RSIM0_G3RSIM6_LENGTH                           0x1
#define _COG3RSIM0_G3RSIM6_MASK                             0x40
#define _COG3RSIM0_G3RSIM7_POSN                             0x7
#define _COG3RSIM0_G3RSIM7_POSITION                         0x7
#define _COG3RSIM0_G3RSIM7_SIZE                             0x1
#define _COG3RSIM0_G3RSIM7_LENGTH                           0x1
#define _COG3RSIM0_G3RSIM7_MASK                             0x80

// Register: COG3RSIM1
#define COG3RSIM1 COG3RSIM1
extern volatile unsigned char           COG3RSIM1           __at(0x818);
#ifndef _LIB_BUILD
asm("COG3RSIM1 equ 0818h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned RSIM9                  :1;
        unsigned                        :1;
        unsigned RSIM11                 :1;
        unsigned RSIM12                 :1;
        unsigned RSIM13                 :1;
        unsigned RSIM14                 :1;
        unsigned RSIM15                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned G3RSIM9                :1;
        unsigned                        :1;
        unsigned G3RSIM11               :1;
        unsigned G3RSIM12               :1;
        unsigned G3RSIM13               :1;
        unsigned G3RSIM14               :1;
        unsigned G3RSIM15               :1;
    };
} COG3RSIM1bits_t;
extern volatile COG3RSIM1bits_t COG3RSIM1bits __at(0x818);
// bitfield macros
#define _COG3RSIM1_RSIM9_POSN                               0x1
#define _COG3RSIM1_RSIM9_POSITION                           0x1
#define _COG3RSIM1_RSIM9_SIZE                               0x1
#define _COG3RSIM1_RSIM9_LENGTH                             0x1
#define _COG3RSIM1_RSIM9_MASK                               0x2
#define _COG3RSIM1_RSIM11_POSN                              0x3
#define _COG3RSIM1_RSIM11_POSITION                          0x3
#define _COG3RSIM1_RSIM11_SIZE                              0x1
#define _COG3RSIM1_RSIM11_LENGTH                            0x1
#define _COG3RSIM1_RSIM11_MASK                              0x8
#define _COG3RSIM1_RSIM12_POSN                              0x4
#define _COG3RSIM1_RSIM12_POSITION                          0x4
#define _COG3RSIM1_RSIM12_SIZE                              0x1
#define _COG3RSIM1_RSIM12_LENGTH                            0x1
#define _COG3RSIM1_RSIM12_MASK                              0x10
#define _COG3RSIM1_RSIM13_POSN                              0x5
#define _COG3RSIM1_RSIM13_POSITION                          0x5
#define _COG3RSIM1_RSIM13_SIZE                              0x1
#define _COG3RSIM1_RSIM13_LENGTH                            0x1
#define _COG3RSIM1_RSIM13_MASK                              0x20
#define _COG3RSIM1_RSIM14_POSN                              0x6
#define _COG3RSIM1_RSIM14_POSITION                          0x6
#define _COG3RSIM1_RSIM14_SIZE                              0x1
#define _COG3RSIM1_RSIM14_LENGTH                            0x1
#define _COG3RSIM1_RSIM14_MASK                              0x40
#define _COG3RSIM1_RSIM15_POSN                              0x7
#define _COG3RSIM1_RSIM15_POSITION                          0x7
#define _COG3RSIM1_RSIM15_SIZE                              0x1
#define _COG3RSIM1_RSIM15_LENGTH                            0x1
#define _COG3RSIM1_RSIM15_MASK                              0x80
#define _COG3RSIM1_G3RSIM9_POSN                             0x1
#define _COG3RSIM1_G3RSIM9_POSITION                         0x1
#define _COG3RSIM1_G3RSIM9_SIZE                             0x1
#define _COG3RSIM1_G3RSIM9_LENGTH                           0x1
#define _COG3RSIM1_G3RSIM9_MASK                             0x2
#define _COG3RSIM1_G3RSIM11_POSN                            0x3
#define _COG3RSIM1_G3RSIM11_POSITION                        0x3
#define _COG3RSIM1_G3RSIM11_SIZE                            0x1
#define _COG3RSIM1_G3RSIM11_LENGTH                          0x1
#define _COG3RSIM1_G3RSIM11_MASK                            0x8
#define _COG3RSIM1_G3RSIM12_POSN                            0x4
#define _COG3RSIM1_G3RSIM12_POSITION                        0x4
#define _COG3RSIM1_G3RSIM12_SIZE                            0x1
#define _COG3RSIM1_G3RSIM12_LENGTH                          0x1
#define _COG3RSIM1_G3RSIM12_MASK                            0x10
#define _COG3RSIM1_G3RSIM13_POSN                            0x5
#define _COG3RSIM1_G3RSIM13_POSITION                        0x5
#define _COG3RSIM1_G3RSIM13_SIZE                            0x1
#define _COG3RSIM1_G3RSIM13_LENGTH                          0x1
#define _COG3RSIM1_G3RSIM13_MASK                            0x20
#define _COG3RSIM1_G3RSIM14_POSN                            0x6
#define _COG3RSIM1_G3RSIM14_POSITION                        0x6
#define _COG3RSIM1_G3RSIM14_SIZE                            0x1
#define _COG3RSIM1_G3RSIM14_LENGTH                          0x1
#define _COG3RSIM1_G3RSIM14_MASK                            0x40
#define _COG3RSIM1_G3RSIM15_POSN                            0x7
#define _COG3RSIM1_G3RSIM15_POSITION                        0x7
#define _COG3RSIM1_G3RSIM15_SIZE                            0x1
#define _COG3RSIM1_G3RSIM15_LENGTH                          0x1
#define _COG3RSIM1_G3RSIM15_MASK                            0x80

// Register: COG3FIS0
#define COG3FIS0 COG3FIS0
extern volatile unsigned char           COG3FIS0            __at(0x819);
#ifndef _LIB_BUILD
asm("COG3FIS0 equ 0819h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FIS0                   :1;
        unsigned FIS1                   :1;
        unsigned FIS2                   :1;
        unsigned FIS3                   :1;
        unsigned FIS4                   :1;
        unsigned FIS5                   :1;
        unsigned FIS6                   :1;
        unsigned FIS7                   :1;
    };
    struct {
        unsigned G3FIS0                 :1;
        unsigned G3FIS1                 :1;
        unsigned G3FIS2                 :1;
        unsigned G3FIS3                 :1;
        unsigned G3FIS4                 :1;
        unsigned G3FIS5                 :1;
        unsigned G3FIS6                 :1;
        unsigned G3FIS7                 :1;
    };
} COG3FIS0bits_t;
extern volatile COG3FIS0bits_t COG3FIS0bits __at(0x819);
// bitfield macros
#define _COG3FIS0_FIS0_POSN                                 0x0
#define _COG3FIS0_FIS0_POSITION                             0x0
#define _COG3FIS0_FIS0_SIZE                                 0x1
#define _COG3FIS0_FIS0_LENGTH                               0x1
#define _COG3FIS0_FIS0_MASK                                 0x1
#define _COG3FIS0_FIS1_POSN                                 0x1
#define _COG3FIS0_FIS1_POSITION                             0x1
#define _COG3FIS0_FIS1_SIZE                                 0x1
#define _COG3FIS0_FIS1_LENGTH                               0x1
#define _COG3FIS0_FIS1_MASK                                 0x2
#define _COG3FIS0_FIS2_POSN                                 0x2
#define _COG3FIS0_FIS2_POSITION                             0x2
#define _COG3FIS0_FIS2_SIZE                                 0x1
#define _COG3FIS0_FIS2_LENGTH                               0x1
#define _COG3FIS0_FIS2_MASK                                 0x4
#define _COG3FIS0_FIS3_POSN                                 0x3
#define _COG3FIS0_FIS3_POSITION                             0x3
#define _COG3FIS0_FIS3_SIZE                                 0x1
#define _COG3FIS0_FIS3_LENGTH                               0x1
#define _COG3FIS0_FIS3_MASK                                 0x8
#define _COG3FIS0_FIS4_POSN                                 0x4
#define _COG3FIS0_FIS4_POSITION                             0x4
#define _COG3FIS0_FIS4_SIZE                                 0x1
#define _COG3FIS0_FIS4_LENGTH                               0x1
#define _COG3FIS0_FIS4_MASK                                 0x10
#define _COG3FIS0_FIS5_POSN                                 0x5
#define _COG3FIS0_FIS5_POSITION                             0x5
#define _COG3FIS0_FIS5_SIZE                                 0x1
#define _COG3FIS0_FIS5_LENGTH                               0x1
#define _COG3FIS0_FIS5_MASK                                 0x20
#define _COG3FIS0_FIS6_POSN                                 0x6
#define _COG3FIS0_FIS6_POSITION                             0x6
#define _COG3FIS0_FIS6_SIZE                                 0x1
#define _COG3FIS0_FIS6_LENGTH                               0x1
#define _COG3FIS0_FIS6_MASK                                 0x40
#define _COG3FIS0_FIS7_POSN                                 0x7
#define _COG3FIS0_FIS7_POSITION                             0x7
#define _COG3FIS0_FIS7_SIZE                                 0x1
#define _COG3FIS0_FIS7_LENGTH                               0x1
#define _COG3FIS0_FIS7_MASK                                 0x80
#define _COG3FIS0_G3FIS0_POSN                               0x0
#define _COG3FIS0_G3FIS0_POSITION                           0x0
#define _COG3FIS0_G3FIS0_SIZE                               0x1
#define _COG3FIS0_G3FIS0_LENGTH                             0x1
#define _COG3FIS0_G3FIS0_MASK                               0x1
#define _COG3FIS0_G3FIS1_POSN                               0x1
#define _COG3FIS0_G3FIS1_POSITION                           0x1
#define _COG3FIS0_G3FIS1_SIZE                               0x1
#define _COG3FIS0_G3FIS1_LENGTH                             0x1
#define _COG3FIS0_G3FIS1_MASK                               0x2
#define _COG3FIS0_G3FIS2_POSN                               0x2
#define _COG3FIS0_G3FIS2_POSITION                           0x2
#define _COG3FIS0_G3FIS2_SIZE                               0x1
#define _COG3FIS0_G3FIS2_LENGTH                             0x1
#define _COG3FIS0_G3FIS2_MASK                               0x4
#define _COG3FIS0_G3FIS3_POSN                               0x3
#define _COG3FIS0_G3FIS3_POSITION                           0x3
#define _COG3FIS0_G3FIS3_SIZE                               0x1
#define _COG3FIS0_G3FIS3_LENGTH                             0x1
#define _COG3FIS0_G3FIS3_MASK                               0x8
#define _COG3FIS0_G3FIS4_POSN                               0x4
#define _COG3FIS0_G3FIS4_POSITION                           0x4
#define _COG3FIS0_G3FIS4_SIZE                               0x1
#define _COG3FIS0_G3FIS4_LENGTH                             0x1
#define _COG3FIS0_G3FIS4_MASK                               0x10
#define _COG3FIS0_G3FIS5_POSN                               0x5
#define _COG3FIS0_G3FIS5_POSITION                           0x5
#define _COG3FIS0_G3FIS5_SIZE                               0x1
#define _COG3FIS0_G3FIS5_LENGTH                             0x1
#define _COG3FIS0_G3FIS5_MASK                               0x20
#define _COG3FIS0_G3FIS6_POSN                               0x6
#define _COG3FIS0_G3FIS6_POSITION                           0x6
#define _COG3FIS0_G3FIS6_SIZE                               0x1
#define _COG3FIS0_G3FIS6_LENGTH                             0x1
#define _COG3FIS0_G3FIS6_MASK                               0x40
#define _COG3FIS0_G3FIS7_POSN                               0x7
#define _COG3FIS0_G3FIS7_POSITION                           0x7
#define _COG3FIS0_G3FIS7_SIZE                               0x1
#define _COG3FIS0_G3FIS7_LENGTH                             0x1
#define _COG3FIS0_G3FIS7_MASK                               0x80

// Register: COG3FIS1
#define COG3FIS1 COG3FIS1
extern volatile unsigned char           COG3FIS1            __at(0x81A);
#ifndef _LIB_BUILD
asm("COG3FIS1 equ 081Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned FIS9                   :1;
        unsigned                        :1;
        unsigned FIS11                  :1;
        unsigned FIS12                  :1;
        unsigned FIS13                  :1;
        unsigned FIS14                  :1;
        unsigned FIS15                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned G3FIS9                 :1;
        unsigned                        :1;
        unsigned G3FIS11                :1;
        unsigned G3FIS12                :1;
        unsigned G3FIS13                :1;
        unsigned G3FIS14                :1;
        unsigned G3FIS15                :1;
    };
} COG3FIS1bits_t;
extern volatile COG3FIS1bits_t COG3FIS1bits __at(0x81A);
// bitfield macros
#define _COG3FIS1_FIS9_POSN                                 0x1
#define _COG3FIS1_FIS9_POSITION                             0x1
#define _COG3FIS1_FIS9_SIZE                                 0x1
#define _COG3FIS1_FIS9_LENGTH                               0x1
#define _COG3FIS1_FIS9_MASK                                 0x2
#define _COG3FIS1_FIS11_POSN                                0x3
#define _COG3FIS1_FIS11_POSITION                            0x3
#define _COG3FIS1_FIS11_SIZE                                0x1
#define _COG3FIS1_FIS11_LENGTH                              0x1
#define _COG3FIS1_FIS11_MASK                                0x8
#define _COG3FIS1_FIS12_POSN                                0x4
#define _COG3FIS1_FIS12_POSITION                            0x4
#define _COG3FIS1_FIS12_SIZE                                0x1
#define _COG3FIS1_FIS12_LENGTH                              0x1
#define _COG3FIS1_FIS12_MASK                                0x10
#define _COG3FIS1_FIS13_POSN                                0x5
#define _COG3FIS1_FIS13_POSITION                            0x5
#define _COG3FIS1_FIS13_SIZE                                0x1
#define _COG3FIS1_FIS13_LENGTH                              0x1
#define _COG3FIS1_FIS13_MASK                                0x20
#define _COG3FIS1_FIS14_POSN                                0x6
#define _COG3FIS1_FIS14_POSITION                            0x6
#define _COG3FIS1_FIS14_SIZE                                0x1
#define _COG3FIS1_FIS14_LENGTH                              0x1
#define _COG3FIS1_FIS14_MASK                                0x40
#define _COG3FIS1_FIS15_POSN                                0x7
#define _COG3FIS1_FIS15_POSITION                            0x7
#define _COG3FIS1_FIS15_SIZE                                0x1
#define _COG3FIS1_FIS15_LENGTH                              0x1
#define _COG3FIS1_FIS15_MASK                                0x80
#define _COG3FIS1_G3FIS9_POSN                               0x1
#define _COG3FIS1_G3FIS9_POSITION                           0x1
#define _COG3FIS1_G3FIS9_SIZE                               0x1
#define _COG3FIS1_G3FIS9_LENGTH                             0x1
#define _COG3FIS1_G3FIS9_MASK                               0x2
#define _COG3FIS1_G3FIS11_POSN                              0x3
#define _COG3FIS1_G3FIS11_POSITION                          0x3
#define _COG3FIS1_G3FIS11_SIZE                              0x1
#define _COG3FIS1_G3FIS11_LENGTH                            0x1
#define _COG3FIS1_G3FIS11_MASK                              0x8
#define _COG3FIS1_G3FIS12_POSN                              0x4
#define _COG3FIS1_G3FIS12_POSITION                          0x4
#define _COG3FIS1_G3FIS12_SIZE                              0x1
#define _COG3FIS1_G3FIS12_LENGTH                            0x1
#define _COG3FIS1_G3FIS12_MASK                              0x10
#define _COG3FIS1_G3FIS13_POSN                              0x5
#define _COG3FIS1_G3FIS13_POSITION                          0x5
#define _COG3FIS1_G3FIS13_SIZE                              0x1
#define _COG3FIS1_G3FIS13_LENGTH                            0x1
#define _COG3FIS1_G3FIS13_MASK                              0x20
#define _COG3FIS1_G3FIS14_POSN                              0x6
#define _COG3FIS1_G3FIS14_POSITION                          0x6
#define _COG3FIS1_G3FIS14_SIZE                              0x1
#define _COG3FIS1_G3FIS14_LENGTH                            0x1
#define _COG3FIS1_G3FIS14_MASK                              0x40
#define _COG3FIS1_G3FIS15_POSN                              0x7
#define _COG3FIS1_G3FIS15_POSITION                          0x7
#define _COG3FIS1_G3FIS15_SIZE                              0x1
#define _COG3FIS1_G3FIS15_LENGTH                            0x1
#define _COG3FIS1_G3FIS15_MASK                              0x80

// Register: COG3FSIM0
#define COG3FSIM0 COG3FSIM0
extern volatile unsigned char           COG3FSIM0           __at(0x81B);
#ifndef _LIB_BUILD
asm("COG3FSIM0 equ 081Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSIM0                  :1;
        unsigned FSIM1                  :1;
        unsigned FSIM2                  :1;
        unsigned FSIM3                  :1;
        unsigned FSIM4                  :1;
        unsigned FSIM5                  :1;
        unsigned FSIM6                  :1;
        unsigned FSIM7                  :1;
    };
    struct {
        unsigned G3FSIM0                :1;
        unsigned G3FSIM1                :1;
        unsigned G3FSIM2                :1;
        unsigned G3FSIM3                :1;
        unsigned G3FSIM4                :1;
        unsigned G3FSIM5                :1;
        unsigned G3FSIM6                :1;
        unsigned G3FSIM7                :1;
    };
} COG3FSIM0bits_t;
extern volatile COG3FSIM0bits_t COG3FSIM0bits __at(0x81B);
// bitfield macros
#define _COG3FSIM0_FSIM0_POSN                               0x0
#define _COG3FSIM0_FSIM0_POSITION                           0x0
#define _COG3FSIM0_FSIM0_SIZE                               0x1
#define _COG3FSIM0_FSIM0_LENGTH                             0x1
#define _COG3FSIM0_FSIM0_MASK                               0x1
#define _COG3FSIM0_FSIM1_POSN                               0x1
#define _COG3FSIM0_FSIM1_POSITION                           0x1
#define _COG3FSIM0_FSIM1_SIZE                               0x1
#define _COG3FSIM0_FSIM1_LENGTH                             0x1
#define _COG3FSIM0_FSIM1_MASK                               0x2
#define _COG3FSIM0_FSIM2_POSN                               0x2
#define _COG3FSIM0_FSIM2_POSITION                           0x2
#define _COG3FSIM0_FSIM2_SIZE                               0x1
#define _COG3FSIM0_FSIM2_LENGTH                             0x1
#define _COG3FSIM0_FSIM2_MASK                               0x4
#define _COG3FSIM0_FSIM3_POSN                               0x3
#define _COG3FSIM0_FSIM3_POSITION                           0x3
#define _COG3FSIM0_FSIM3_SIZE                               0x1
#define _COG3FSIM0_FSIM3_LENGTH                             0x1
#define _COG3FSIM0_FSIM3_MASK                               0x8
#define _COG3FSIM0_FSIM4_POSN                               0x4
#define _COG3FSIM0_FSIM4_POSITION                           0x4
#define _COG3FSIM0_FSIM4_SIZE                               0x1
#define _COG3FSIM0_FSIM4_LENGTH                             0x1
#define _COG3FSIM0_FSIM4_MASK                               0x10
#define _COG3FSIM0_FSIM5_POSN                               0x5
#define _COG3FSIM0_FSIM5_POSITION                           0x5
#define _COG3FSIM0_FSIM5_SIZE                               0x1
#define _COG3FSIM0_FSIM5_LENGTH                             0x1
#define _COG3FSIM0_FSIM5_MASK                               0x20
#define _COG3FSIM0_FSIM6_POSN                               0x6
#define _COG3FSIM0_FSIM6_POSITION                           0x6
#define _COG3FSIM0_FSIM6_SIZE                               0x1
#define _COG3FSIM0_FSIM6_LENGTH                             0x1
#define _COG3FSIM0_FSIM6_MASK                               0x40
#define _COG3FSIM0_FSIM7_POSN                               0x7
#define _COG3FSIM0_FSIM7_POSITION                           0x7
#define _COG3FSIM0_FSIM7_SIZE                               0x1
#define _COG3FSIM0_FSIM7_LENGTH                             0x1
#define _COG3FSIM0_FSIM7_MASK                               0x80
#define _COG3FSIM0_G3FSIM0_POSN                             0x0
#define _COG3FSIM0_G3FSIM0_POSITION                         0x0
#define _COG3FSIM0_G3FSIM0_SIZE                             0x1
#define _COG3FSIM0_G3FSIM0_LENGTH                           0x1
#define _COG3FSIM0_G3FSIM0_MASK                             0x1
#define _COG3FSIM0_G3FSIM1_POSN                             0x1
#define _COG3FSIM0_G3FSIM1_POSITION                         0x1
#define _COG3FSIM0_G3FSIM1_SIZE                             0x1
#define _COG3FSIM0_G3FSIM1_LENGTH                           0x1
#define _COG3FSIM0_G3FSIM1_MASK                             0x2
#define _COG3FSIM0_G3FSIM2_POSN                             0x2
#define _COG3FSIM0_G3FSIM2_POSITION                         0x2
#define _COG3FSIM0_G3FSIM2_SIZE                             0x1
#define _COG3FSIM0_G3FSIM2_LENGTH                           0x1
#define _COG3FSIM0_G3FSIM2_MASK                             0x4
#define _COG3FSIM0_G3FSIM3_POSN                             0x3
#define _COG3FSIM0_G3FSIM3_POSITION                         0x3
#define _COG3FSIM0_G3FSIM3_SIZE                             0x1
#define _COG3FSIM0_G3FSIM3_LENGTH                           0x1
#define _COG3FSIM0_G3FSIM3_MASK                             0x8
#define _COG3FSIM0_G3FSIM4_POSN                             0x4
#define _COG3FSIM0_G3FSIM4_POSITION                         0x4
#define _COG3FSIM0_G3FSIM4_SIZE                             0x1
#define _COG3FSIM0_G3FSIM4_LENGTH                           0x1
#define _COG3FSIM0_G3FSIM4_MASK                             0x10
#define _COG3FSIM0_G3FSIM5_POSN                             0x5
#define _COG3FSIM0_G3FSIM5_POSITION                         0x5
#define _COG3FSIM0_G3FSIM5_SIZE                             0x1
#define _COG3FSIM0_G3FSIM5_LENGTH                           0x1
#define _COG3FSIM0_G3FSIM5_MASK                             0x20
#define _COG3FSIM0_G3FSIM6_POSN                             0x6
#define _COG3FSIM0_G3FSIM6_POSITION                         0x6
#define _COG3FSIM0_G3FSIM6_SIZE                             0x1
#define _COG3FSIM0_G3FSIM6_LENGTH                           0x1
#define _COG3FSIM0_G3FSIM6_MASK                             0x40
#define _COG3FSIM0_G3FSIM7_POSN                             0x7
#define _COG3FSIM0_G3FSIM7_POSITION                         0x7
#define _COG3FSIM0_G3FSIM7_SIZE                             0x1
#define _COG3FSIM0_G3FSIM7_LENGTH                           0x1
#define _COG3FSIM0_G3FSIM7_MASK                             0x80

// Register: COG3FSIM1
#define COG3FSIM1 COG3FSIM1
extern volatile unsigned char           COG3FSIM1           __at(0x81C);
#ifndef _LIB_BUILD
asm("COG3FSIM1 equ 081Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned FSIM9                  :1;
        unsigned                        :1;
        unsigned FSIM11                 :1;
        unsigned FSIM12                 :1;
        unsigned FSIM13                 :1;
        unsigned FSIM14                 :1;
        unsigned FSIM15                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned G3FSIM9                :1;
        unsigned                        :1;
        unsigned G3FSIM11               :1;
        unsigned G3FSIM12               :1;
        unsigned G3FSIM13               :1;
        unsigned G3FSIM14               :1;
        unsigned G3FSIM15               :1;
    };
} COG3FSIM1bits_t;
extern volatile COG3FSIM1bits_t COG3FSIM1bits __at(0x81C);
// bitfield macros
#define _COG3FSIM1_FSIM9_POSN                               0x1
#define _COG3FSIM1_FSIM9_POSITION                           0x1
#define _COG3FSIM1_FSIM9_SIZE                               0x1
#define _COG3FSIM1_FSIM9_LENGTH                             0x1
#define _COG3FSIM1_FSIM9_MASK                               0x2
#define _COG3FSIM1_FSIM11_POSN                              0x3
#define _COG3FSIM1_FSIM11_POSITION                          0x3
#define _COG3FSIM1_FSIM11_SIZE                              0x1
#define _COG3FSIM1_FSIM11_LENGTH                            0x1
#define _COG3FSIM1_FSIM11_MASK                              0x8
#define _COG3FSIM1_FSIM12_POSN                              0x4
#define _COG3FSIM1_FSIM12_POSITION                          0x4
#define _COG3FSIM1_FSIM12_SIZE                              0x1
#define _COG3FSIM1_FSIM12_LENGTH                            0x1
#define _COG3FSIM1_FSIM12_MASK                              0x10
#define _COG3FSIM1_FSIM13_POSN                              0x5
#define _COG3FSIM1_FSIM13_POSITION                          0x5
#define _COG3FSIM1_FSIM13_SIZE                              0x1
#define _COG3FSIM1_FSIM13_LENGTH                            0x1
#define _COG3FSIM1_FSIM13_MASK                              0x20
#define _COG3FSIM1_FSIM14_POSN                              0x6
#define _COG3FSIM1_FSIM14_POSITION                          0x6
#define _COG3FSIM1_FSIM14_SIZE                              0x1
#define _COG3FSIM1_FSIM14_LENGTH                            0x1
#define _COG3FSIM1_FSIM14_MASK                              0x40
#define _COG3FSIM1_FSIM15_POSN                              0x7
#define _COG3FSIM1_FSIM15_POSITION                          0x7
#define _COG3FSIM1_FSIM15_SIZE                              0x1
#define _COG3FSIM1_FSIM15_LENGTH                            0x1
#define _COG3FSIM1_FSIM15_MASK                              0x80
#define _COG3FSIM1_G3FSIM9_POSN                             0x1
#define _COG3FSIM1_G3FSIM9_POSITION                         0x1
#define _COG3FSIM1_G3FSIM9_SIZE                             0x1
#define _COG3FSIM1_G3FSIM9_LENGTH                           0x1
#define _COG3FSIM1_G3FSIM9_MASK                             0x2
#define _COG3FSIM1_G3FSIM11_POSN                            0x3
#define _COG3FSIM1_G3FSIM11_POSITION                        0x3
#define _COG3FSIM1_G3FSIM11_SIZE                            0x1
#define _COG3FSIM1_G3FSIM11_LENGTH                          0x1
#define _COG3FSIM1_G3FSIM11_MASK                            0x8
#define _COG3FSIM1_G3FSIM12_POSN                            0x4
#define _COG3FSIM1_G3FSIM12_POSITION                        0x4
#define _COG3FSIM1_G3FSIM12_SIZE                            0x1
#define _COG3FSIM1_G3FSIM12_LENGTH                          0x1
#define _COG3FSIM1_G3FSIM12_MASK                            0x10
#define _COG3FSIM1_G3FSIM13_POSN                            0x5
#define _COG3FSIM1_G3FSIM13_POSITION                        0x5
#define _COG3FSIM1_G3FSIM13_SIZE                            0x1
#define _COG3FSIM1_G3FSIM13_LENGTH                          0x1
#define _COG3FSIM1_G3FSIM13_MASK                            0x20
#define _COG3FSIM1_G3FSIM14_POSN                            0x6
#define _COG3FSIM1_G3FSIM14_POSITION                        0x6
#define _COG3FSIM1_G3FSIM14_SIZE                            0x1
#define _COG3FSIM1_G3FSIM14_LENGTH                          0x1
#define _COG3FSIM1_G3FSIM14_MASK                            0x40
#define _COG3FSIM1_G3FSIM15_POSN                            0x7
#define _COG3FSIM1_G3FSIM15_POSITION                        0x7
#define _COG3FSIM1_G3FSIM15_SIZE                            0x1
#define _COG3FSIM1_G3FSIM15_LENGTH                          0x1
#define _COG3FSIM1_G3FSIM15_MASK                            0x80

// Register: COG3ASD0
#define COG3ASD0 COG3ASD0
extern volatile unsigned char           COG3ASD0            __at(0x81D);
#ifndef _LIB_BUILD
asm("COG3ASD0 equ 081Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned ASDAC                  :2;
        unsigned ASDBD                  :2;
        unsigned ASREN                  :1;
        unsigned ASE                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned ASDAC0                 :1;
        unsigned ASDAC1                 :1;
        unsigned ASDBD0                 :1;
        unsigned ASDBD1                 :1;
        unsigned ARSEN                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned G3ASDAC                :2;
        unsigned G3ASDBD                :2;
        unsigned G3ARSEN                :1;
        unsigned G3ASE                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned G3ASDAC0               :1;
        unsigned G3ASDAC1               :1;
        unsigned G3ASDBD0               :1;
        unsigned G3ASDBD1               :1;
        unsigned G3ASREN                :1;
    };
} COG3ASD0bits_t;
extern volatile COG3ASD0bits_t COG3ASD0bits __at(0x81D);
// bitfield macros
#define _COG3ASD0_ASDAC_POSN                                0x2
#define _COG3ASD0_ASDAC_POSITION                            0x2
#define _COG3ASD0_ASDAC_SIZE                                0x2
#define _COG3ASD0_ASDAC_LENGTH                              0x2
#define _COG3ASD0_ASDAC_MASK                                0xC
#define _COG3ASD0_ASDBD_POSN                                0x4
#define _COG3ASD0_ASDBD_POSITION                            0x4
#define _COG3ASD0_ASDBD_SIZE                                0x2
#define _COG3ASD0_ASDBD_LENGTH                              0x2
#define _COG3ASD0_ASDBD_MASK                                0x30
#define _COG3ASD0_ASREN_POSN                                0x6
#define _COG3ASD0_ASREN_POSITION                            0x6
#define _COG3ASD0_ASREN_SIZE                                0x1
#define _COG3ASD0_ASREN_LENGTH                              0x1
#define _COG3ASD0_ASREN_MASK                                0x40
#define _COG3ASD0_ASE_POSN                                  0x7
#define _COG3ASD0_ASE_POSITION                              0x7
#define _COG3ASD0_ASE_SIZE                                  0x1
#define _COG3ASD0_ASE_LENGTH                                0x1
#define _COG3ASD0_ASE_MASK                                  0x80
#define _COG3ASD0_ASDAC0_POSN                               0x2
#define _COG3ASD0_ASDAC0_POSITION                           0x2
#define _COG3ASD0_ASDAC0_SIZE                               0x1
#define _COG3ASD0_ASDAC0_LENGTH                             0x1
#define _COG3ASD0_ASDAC0_MASK                               0x4
#define _COG3ASD0_ASDAC1_POSN                               0x3
#define _COG3ASD0_ASDAC1_POSITION                           0x3
#define _COG3ASD0_ASDAC1_SIZE                               0x1
#define _COG3ASD0_ASDAC1_LENGTH                             0x1
#define _COG3ASD0_ASDAC1_MASK                               0x8
#define _COG3ASD0_ASDBD0_POSN                               0x4
#define _COG3ASD0_ASDBD0_POSITION                           0x4
#define _COG3ASD0_ASDBD0_SIZE                               0x1
#define _COG3ASD0_ASDBD0_LENGTH                             0x1
#define _COG3ASD0_ASDBD0_MASK                               0x10
#define _COG3ASD0_ASDBD1_POSN                               0x5
#define _COG3ASD0_ASDBD1_POSITION                           0x5
#define _COG3ASD0_ASDBD1_SIZE                               0x1
#define _COG3ASD0_ASDBD1_LENGTH                             0x1
#define _COG3ASD0_ASDBD1_MASK                               0x20
#define _COG3ASD0_ARSEN_POSN                                0x6
#define _COG3ASD0_ARSEN_POSITION                            0x6
#define _COG3ASD0_ARSEN_SIZE                                0x1
#define _COG3ASD0_ARSEN_LENGTH                              0x1
#define _COG3ASD0_ARSEN_MASK                                0x40
#define _COG3ASD0_G3ASDAC_POSN                              0x2
#define _COG3ASD0_G3ASDAC_POSITION                          0x2
#define _COG3ASD0_G3ASDAC_SIZE                              0x2
#define _COG3ASD0_G3ASDAC_LENGTH                            0x2
#define _COG3ASD0_G3ASDAC_MASK                              0xC
#define _COG3ASD0_G3ASDBD_POSN                              0x4
#define _COG3ASD0_G3ASDBD_POSITION                          0x4
#define _COG3ASD0_G3ASDBD_SIZE                              0x2
#define _COG3ASD0_G3ASDBD_LENGTH                            0x2
#define _COG3ASD0_G3ASDBD_MASK                              0x30
#define _COG3ASD0_G3ARSEN_POSN                              0x6
#define _COG3ASD0_G3ARSEN_POSITION                          0x6
#define _COG3ASD0_G3ARSEN_SIZE                              0x1
#define _COG3ASD0_G3ARSEN_LENGTH                            0x1
#define _COG3ASD0_G3ARSEN_MASK                              0x40
#define _COG3ASD0_G3ASE_POSN                                0x7
#define _COG3ASD0_G3ASE_POSITION                            0x7
#define _COG3ASD0_G3ASE_SIZE                                0x1
#define _COG3ASD0_G3ASE_LENGTH                              0x1
#define _COG3ASD0_G3ASE_MASK                                0x80
#define _COG3ASD0_G3ASDAC0_POSN                             0x2
#define _COG3ASD0_G3ASDAC0_POSITION                         0x2
#define _COG3ASD0_G3ASDAC0_SIZE                             0x1
#define _COG3ASD0_G3ASDAC0_LENGTH                           0x1
#define _COG3ASD0_G3ASDAC0_MASK                             0x4
#define _COG3ASD0_G3ASDAC1_POSN                             0x3
#define _COG3ASD0_G3ASDAC1_POSITION                         0x3
#define _COG3ASD0_G3ASDAC1_SIZE                             0x1
#define _COG3ASD0_G3ASDAC1_LENGTH                           0x1
#define _COG3ASD0_G3ASDAC1_MASK                             0x8
#define _COG3ASD0_G3ASDBD0_POSN                             0x4
#define _COG3ASD0_G3ASDBD0_POSITION                         0x4
#define _COG3ASD0_G3ASDBD0_SIZE                             0x1
#define _COG3ASD0_G3ASDBD0_LENGTH                           0x1
#define _COG3ASD0_G3ASDBD0_MASK                             0x10
#define _COG3ASD0_G3ASDBD1_POSN                             0x5
#define _COG3ASD0_G3ASDBD1_POSITION                         0x5
#define _COG3ASD0_G3ASDBD1_SIZE                             0x1
#define _COG3ASD0_G3ASDBD1_LENGTH                           0x1
#define _COG3ASD0_G3ASDBD1_MASK                             0x20
#define _COG3ASD0_G3ASREN_POSN                              0x6
#define _COG3ASD0_G3ASREN_POSITION                          0x6
#define _COG3ASD0_G3ASREN_SIZE                              0x1
#define _COG3ASD0_G3ASREN_LENGTH                            0x1
#define _COG3ASD0_G3ASREN_MASK                              0x40

// Register: COG3ASD1
#define COG3ASD1 COG3ASD1
extern volatile unsigned char           COG3ASD1            __at(0x81E);
#ifndef _LIB_BUILD
asm("COG3ASD1 equ 081Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned AS0E                   :1;
        unsigned AS1E                   :1;
        unsigned AS2E                   :1;
        unsigned AS3E                   :1;
        unsigned AS4E                   :1;
        unsigned AS5E                   :1;
        unsigned AS6E                   :1;
        unsigned AS7E                   :1;
    };
    struct {
        unsigned G3AS0E                 :1;
        unsigned G3AS1E                 :1;
        unsigned G3AS2E                 :1;
        unsigned G3AS3E                 :1;
        unsigned G3AS4E                 :1;
        unsigned G3AS5E                 :1;
        unsigned G3AS6E                 :1;
        unsigned G3AS7E                 :1;
    };
} COG3ASD1bits_t;
extern volatile COG3ASD1bits_t COG3ASD1bits __at(0x81E);
// bitfield macros
#define _COG3ASD1_AS0E_POSN                                 0x0
#define _COG3ASD1_AS0E_POSITION                             0x0
#define _COG3ASD1_AS0E_SIZE                                 0x1
#define _COG3ASD1_AS0E_LENGTH                               0x1
#define _COG3ASD1_AS0E_MASK                                 0x1
#define _COG3ASD1_AS1E_POSN                                 0x1
#define _COG3ASD1_AS1E_POSITION                             0x1
#define _COG3ASD1_AS1E_SIZE                                 0x1
#define _COG3ASD1_AS1E_LENGTH                               0x1
#define _COG3ASD1_AS1E_MASK                                 0x2
#define _COG3ASD1_AS2E_POSN                                 0x2
#define _COG3ASD1_AS2E_POSITION                             0x2
#define _COG3ASD1_AS2E_SIZE                                 0x1
#define _COG3ASD1_AS2E_LENGTH                               0x1
#define _COG3ASD1_AS2E_MASK                                 0x4
#define _COG3ASD1_AS3E_POSN                                 0x3
#define _COG3ASD1_AS3E_POSITION                             0x3
#define _COG3ASD1_AS3E_SIZE                                 0x1
#define _COG3ASD1_AS3E_LENGTH                               0x1
#define _COG3ASD1_AS3E_MASK                                 0x8
#define _COG3ASD1_AS4E_POSN                                 0x4
#define _COG3ASD1_AS4E_POSITION                             0x4
#define _COG3ASD1_AS4E_SIZE                                 0x1
#define _COG3ASD1_AS4E_LENGTH                               0x1
#define _COG3ASD1_AS4E_MASK                                 0x10
#define _COG3ASD1_AS5E_POSN                                 0x5
#define _COG3ASD1_AS5E_POSITION                             0x5
#define _COG3ASD1_AS5E_SIZE                                 0x1
#define _COG3ASD1_AS5E_LENGTH                               0x1
#define _COG3ASD1_AS5E_MASK                                 0x20
#define _COG3ASD1_AS6E_POSN                                 0x6
#define _COG3ASD1_AS6E_POSITION                             0x6
#define _COG3ASD1_AS6E_SIZE                                 0x1
#define _COG3ASD1_AS6E_LENGTH                               0x1
#define _COG3ASD1_AS6E_MASK                                 0x40
#define _COG3ASD1_AS7E_POSN                                 0x7
#define _COG3ASD1_AS7E_POSITION                             0x7
#define _COG3ASD1_AS7E_SIZE                                 0x1
#define _COG3ASD1_AS7E_LENGTH                               0x1
#define _COG3ASD1_AS7E_MASK                                 0x80
#define _COG3ASD1_G3AS0E_POSN                               0x0
#define _COG3ASD1_G3AS0E_POSITION                           0x0
#define _COG3ASD1_G3AS0E_SIZE                               0x1
#define _COG3ASD1_G3AS0E_LENGTH                             0x1
#define _COG3ASD1_G3AS0E_MASK                               0x1
#define _COG3ASD1_G3AS1E_POSN                               0x1
#define _COG3ASD1_G3AS1E_POSITION                           0x1
#define _COG3ASD1_G3AS1E_SIZE                               0x1
#define _COG3ASD1_G3AS1E_LENGTH                             0x1
#define _COG3ASD1_G3AS1E_MASK                               0x2
#define _COG3ASD1_G3AS2E_POSN                               0x2
#define _COG3ASD1_G3AS2E_POSITION                           0x2
#define _COG3ASD1_G3AS2E_SIZE                               0x1
#define _COG3ASD1_G3AS2E_LENGTH                             0x1
#define _COG3ASD1_G3AS2E_MASK                               0x4
#define _COG3ASD1_G3AS3E_POSN                               0x3
#define _COG3ASD1_G3AS3E_POSITION                           0x3
#define _COG3ASD1_G3AS3E_SIZE                               0x1
#define _COG3ASD1_G3AS3E_LENGTH                             0x1
#define _COG3ASD1_G3AS3E_MASK                               0x8
#define _COG3ASD1_G3AS4E_POSN                               0x4
#define _COG3ASD1_G3AS4E_POSITION                           0x4
#define _COG3ASD1_G3AS4E_SIZE                               0x1
#define _COG3ASD1_G3AS4E_LENGTH                             0x1
#define _COG3ASD1_G3AS4E_MASK                               0x10
#define _COG3ASD1_G3AS5E_POSN                               0x5
#define _COG3ASD1_G3AS5E_POSITION                           0x5
#define _COG3ASD1_G3AS5E_SIZE                               0x1
#define _COG3ASD1_G3AS5E_LENGTH                             0x1
#define _COG3ASD1_G3AS5E_MASK                               0x20
#define _COG3ASD1_G3AS6E_POSN                               0x6
#define _COG3ASD1_G3AS6E_POSITION                           0x6
#define _COG3ASD1_G3AS6E_SIZE                               0x1
#define _COG3ASD1_G3AS6E_LENGTH                             0x1
#define _COG3ASD1_G3AS6E_MASK                               0x40
#define _COG3ASD1_G3AS7E_POSN                               0x7
#define _COG3ASD1_G3AS7E_POSITION                           0x7
#define _COG3ASD1_G3AS7E_SIZE                               0x1
#define _COG3ASD1_G3AS7E_LENGTH                             0x1
#define _COG3ASD1_G3AS7E_MASK                               0x80

// Register: COG3STR
#define COG3STR COG3STR
extern volatile unsigned char           COG3STR             __at(0x81F);
#ifndef _LIB_BUILD
asm("COG3STR equ 081Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned SDATA                  :1;
        unsigned SDATB                  :1;
        unsigned SDATC                  :1;
        unsigned SDATD                  :1;
    };
    struct {
        unsigned G3STRA                 :1;
        unsigned G3STRB                 :1;
        unsigned G3STRC                 :1;
        unsigned G3STRD                 :1;
        unsigned G3SDATA                :1;
        unsigned G3SDATB                :1;
        unsigned G3SDATC                :1;
        unsigned G3SDATD                :1;
    };
} COG3STRbits_t;
extern volatile COG3STRbits_t COG3STRbits __at(0x81F);
// bitfield macros
#define _COG3STR_STRA_POSN                                  0x0
#define _COG3STR_STRA_POSITION                              0x0
#define _COG3STR_STRA_SIZE                                  0x1
#define _COG3STR_STRA_LENGTH                                0x1
#define _COG3STR_STRA_MASK                                  0x1
#define _COG3STR_STRB_POSN                                  0x1
#define _COG3STR_STRB_POSITION                              0x1
#define _COG3STR_STRB_SIZE                                  0x1
#define _COG3STR_STRB_LENGTH                                0x1
#define _COG3STR_STRB_MASK                                  0x2
#define _COG3STR_STRC_POSN                                  0x2
#define _COG3STR_STRC_POSITION                              0x2
#define _COG3STR_STRC_SIZE                                  0x1
#define _COG3STR_STRC_LENGTH                                0x1
#define _COG3STR_STRC_MASK                                  0x4
#define _COG3STR_STRD_POSN                                  0x3
#define _COG3STR_STRD_POSITION                              0x3
#define _COG3STR_STRD_SIZE                                  0x1
#define _COG3STR_STRD_LENGTH                                0x1
#define _COG3STR_STRD_MASK                                  0x8
#define _COG3STR_SDATA_POSN                                 0x4
#define _COG3STR_SDATA_POSITION                             0x4
#define _COG3STR_SDATA_SIZE                                 0x1
#define _COG3STR_SDATA_LENGTH                               0x1
#define _COG3STR_SDATA_MASK                                 0x10
#define _COG3STR_SDATB_POSN                                 0x5
#define _COG3STR_SDATB_POSITION                             0x5
#define _COG3STR_SDATB_SIZE                                 0x1
#define _COG3STR_SDATB_LENGTH                               0x1
#define _COG3STR_SDATB_MASK                                 0x20
#define _COG3STR_SDATC_POSN                                 0x6
#define _COG3STR_SDATC_POSITION                             0x6
#define _COG3STR_SDATC_SIZE                                 0x1
#define _COG3STR_SDATC_LENGTH                               0x1
#define _COG3STR_SDATC_MASK                                 0x40
#define _COG3STR_SDATD_POSN                                 0x7
#define _COG3STR_SDATD_POSITION                             0x7
#define _COG3STR_SDATD_SIZE                                 0x1
#define _COG3STR_SDATD_LENGTH                               0x1
#define _COG3STR_SDATD_MASK                                 0x80
#define _COG3STR_G3STRA_POSN                                0x0
#define _COG3STR_G3STRA_POSITION                            0x0
#define _COG3STR_G3STRA_SIZE                                0x1
#define _COG3STR_G3STRA_LENGTH                              0x1
#define _COG3STR_G3STRA_MASK                                0x1
#define _COG3STR_G3STRB_POSN                                0x1
#define _COG3STR_G3STRB_POSITION                            0x1
#define _COG3STR_G3STRB_SIZE                                0x1
#define _COG3STR_G3STRB_LENGTH                              0x1
#define _COG3STR_G3STRB_MASK                                0x2
#define _COG3STR_G3STRC_POSN                                0x2
#define _COG3STR_G3STRC_POSITION                            0x2
#define _COG3STR_G3STRC_SIZE                                0x1
#define _COG3STR_G3STRC_LENGTH                              0x1
#define _COG3STR_G3STRC_MASK                                0x4
#define _COG3STR_G3STRD_POSN                                0x3
#define _COG3STR_G3STRD_POSITION                            0x3
#define _COG3STR_G3STRD_SIZE                                0x1
#define _COG3STR_G3STRD_LENGTH                              0x1
#define _COG3STR_G3STRD_MASK                                0x8
#define _COG3STR_G3SDATA_POSN                               0x4
#define _COG3STR_G3SDATA_POSITION                           0x4
#define _COG3STR_G3SDATA_SIZE                               0x1
#define _COG3STR_G3SDATA_LENGTH                             0x1
#define _COG3STR_G3SDATA_MASK                               0x10
#define _COG3STR_G3SDATB_POSN                               0x5
#define _COG3STR_G3SDATB_POSITION                           0x5
#define _COG3STR_G3SDATB_SIZE                               0x1
#define _COG3STR_G3SDATB_LENGTH                             0x1
#define _COG3STR_G3SDATB_MASK                               0x20
#define _COG3STR_G3SDATC_POSN                               0x6
#define _COG3STR_G3SDATC_POSITION                           0x6
#define _COG3STR_G3SDATC_SIZE                               0x1
#define _COG3STR_G3SDATC_LENGTH                             0x1
#define _COG3STR_G3SDATC_MASK                               0x40
#define _COG3STR_G3SDATD_POSN                               0x7
#define _COG3STR_G3SDATD_POSITION                           0x7
#define _COG3STR_G3SDATD_SIZE                               0x1
#define _COG3STR_G3SDATD_LENGTH                             0x1
#define _COG3STR_G3SDATD_MASK                               0x80

// Register: COG4PHR
#define COG4PHR COG4PHR
extern volatile unsigned char           COG4PHR             __at(0x88D);
#ifndef _LIB_BUILD
asm("COG4PHR equ 088Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PHR                    :6;
    };
    struct {
        unsigned PHR0                   :1;
        unsigned PHR1                   :1;
        unsigned PHR2                   :1;
        unsigned PHR3                   :1;
        unsigned PHR4                   :1;
        unsigned PHR5                   :1;
    };
    struct {
        unsigned G4PHR0                 :1;
        unsigned G4PHR1                 :1;
        unsigned G4PHR2                 :1;
        unsigned G4PHR3                 :1;
        unsigned G4PHR4                 :1;
        unsigned G4PHR5                 :1;
    };
} COG4PHRbits_t;
extern volatile COG4PHRbits_t COG4PHRbits __at(0x88D);
// bitfield macros
#define _COG4PHR_PHR_POSN                                   0x0
#define _COG4PHR_PHR_POSITION                               0x0
#define _COG4PHR_PHR_SIZE                                   0x6
#define _COG4PHR_PHR_LENGTH                                 0x6
#define _COG4PHR_PHR_MASK                                   0x3F
#define _COG4PHR_PHR0_POSN                                  0x0
#define _COG4PHR_PHR0_POSITION                              0x0
#define _COG4PHR_PHR0_SIZE                                  0x1
#define _COG4PHR_PHR0_LENGTH                                0x1
#define _COG4PHR_PHR0_MASK                                  0x1
#define _COG4PHR_PHR1_POSN                                  0x1
#define _COG4PHR_PHR1_POSITION                              0x1
#define _COG4PHR_PHR1_SIZE                                  0x1
#define _COG4PHR_PHR1_LENGTH                                0x1
#define _COG4PHR_PHR1_MASK                                  0x2
#define _COG4PHR_PHR2_POSN                                  0x2
#define _COG4PHR_PHR2_POSITION                              0x2
#define _COG4PHR_PHR2_SIZE                                  0x1
#define _COG4PHR_PHR2_LENGTH                                0x1
#define _COG4PHR_PHR2_MASK                                  0x4
#define _COG4PHR_PHR3_POSN                                  0x3
#define _COG4PHR_PHR3_POSITION                              0x3
#define _COG4PHR_PHR3_SIZE                                  0x1
#define _COG4PHR_PHR3_LENGTH                                0x1
#define _COG4PHR_PHR3_MASK                                  0x8
#define _COG4PHR_PHR4_POSN                                  0x4
#define _COG4PHR_PHR4_POSITION                              0x4
#define _COG4PHR_PHR4_SIZE                                  0x1
#define _COG4PHR_PHR4_LENGTH                                0x1
#define _COG4PHR_PHR4_MASK                                  0x10
#define _COG4PHR_PHR5_POSN                                  0x5
#define _COG4PHR_PHR5_POSITION                              0x5
#define _COG4PHR_PHR5_SIZE                                  0x1
#define _COG4PHR_PHR5_LENGTH                                0x1
#define _COG4PHR_PHR5_MASK                                  0x20
#define _COG4PHR_G4PHR0_POSN                                0x0
#define _COG4PHR_G4PHR0_POSITION                            0x0
#define _COG4PHR_G4PHR0_SIZE                                0x1
#define _COG4PHR_G4PHR0_LENGTH                              0x1
#define _COG4PHR_G4PHR0_MASK                                0x1
#define _COG4PHR_G4PHR1_POSN                                0x1
#define _COG4PHR_G4PHR1_POSITION                            0x1
#define _COG4PHR_G4PHR1_SIZE                                0x1
#define _COG4PHR_G4PHR1_LENGTH                              0x1
#define _COG4PHR_G4PHR1_MASK                                0x2
#define _COG4PHR_G4PHR2_POSN                                0x2
#define _COG4PHR_G4PHR2_POSITION                            0x2
#define _COG4PHR_G4PHR2_SIZE                                0x1
#define _COG4PHR_G4PHR2_LENGTH                              0x1
#define _COG4PHR_G4PHR2_MASK                                0x4
#define _COG4PHR_G4PHR3_POSN                                0x3
#define _COG4PHR_G4PHR3_POSITION                            0x3
#define _COG4PHR_G4PHR3_SIZE                                0x1
#define _COG4PHR_G4PHR3_LENGTH                              0x1
#define _COG4PHR_G4PHR3_MASK                                0x8
#define _COG4PHR_G4PHR4_POSN                                0x4
#define _COG4PHR_G4PHR4_POSITION                            0x4
#define _COG4PHR_G4PHR4_SIZE                                0x1
#define _COG4PHR_G4PHR4_LENGTH                              0x1
#define _COG4PHR_G4PHR4_MASK                                0x10
#define _COG4PHR_G4PHR5_POSN                                0x5
#define _COG4PHR_G4PHR5_POSITION                            0x5
#define _COG4PHR_G4PHR5_SIZE                                0x1
#define _COG4PHR_G4PHR5_LENGTH                              0x1
#define _COG4PHR_G4PHR5_MASK                                0x20

// Register: COG4PHF
#define COG4PHF COG4PHF
extern volatile unsigned char           COG4PHF             __at(0x88E);
#ifndef _LIB_BUILD
asm("COG4PHF equ 088Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PHF                    :6;
    };
    struct {
        unsigned PHF0                   :1;
        unsigned PHF1                   :1;
        unsigned PHF2                   :1;
        unsigned PHF3                   :1;
        unsigned PHF4                   :1;
        unsigned PHF5                   :1;
    };
    struct {
        unsigned G4PHF0                 :1;
        unsigned G4PHF1                 :1;
        unsigned G4PHF2                 :1;
        unsigned G4PHF3                 :1;
        unsigned G4PHF4                 :1;
        unsigned G4PHF5                 :1;
    };
} COG4PHFbits_t;
extern volatile COG4PHFbits_t COG4PHFbits __at(0x88E);
// bitfield macros
#define _COG4PHF_PHF_POSN                                   0x0
#define _COG4PHF_PHF_POSITION                               0x0
#define _COG4PHF_PHF_SIZE                                   0x6
#define _COG4PHF_PHF_LENGTH                                 0x6
#define _COG4PHF_PHF_MASK                                   0x3F
#define _COG4PHF_PHF0_POSN                                  0x0
#define _COG4PHF_PHF0_POSITION                              0x0
#define _COG4PHF_PHF0_SIZE                                  0x1
#define _COG4PHF_PHF0_LENGTH                                0x1
#define _COG4PHF_PHF0_MASK                                  0x1
#define _COG4PHF_PHF1_POSN                                  0x1
#define _COG4PHF_PHF1_POSITION                              0x1
#define _COG4PHF_PHF1_SIZE                                  0x1
#define _COG4PHF_PHF1_LENGTH                                0x1
#define _COG4PHF_PHF1_MASK                                  0x2
#define _COG4PHF_PHF2_POSN                                  0x2
#define _COG4PHF_PHF2_POSITION                              0x2
#define _COG4PHF_PHF2_SIZE                                  0x1
#define _COG4PHF_PHF2_LENGTH                                0x1
#define _COG4PHF_PHF2_MASK                                  0x4
#define _COG4PHF_PHF3_POSN                                  0x3
#define _COG4PHF_PHF3_POSITION                              0x3
#define _COG4PHF_PHF3_SIZE                                  0x1
#define _COG4PHF_PHF3_LENGTH                                0x1
#define _COG4PHF_PHF3_MASK                                  0x8
#define _COG4PHF_PHF4_POSN                                  0x4
#define _COG4PHF_PHF4_POSITION                              0x4
#define _COG4PHF_PHF4_SIZE                                  0x1
#define _COG4PHF_PHF4_LENGTH                                0x1
#define _COG4PHF_PHF4_MASK                                  0x10
#define _COG4PHF_PHF5_POSN                                  0x5
#define _COG4PHF_PHF5_POSITION                              0x5
#define _COG4PHF_PHF5_SIZE                                  0x1
#define _COG4PHF_PHF5_LENGTH                                0x1
#define _COG4PHF_PHF5_MASK                                  0x20
#define _COG4PHF_G4PHF0_POSN                                0x0
#define _COG4PHF_G4PHF0_POSITION                            0x0
#define _COG4PHF_G4PHF0_SIZE                                0x1
#define _COG4PHF_G4PHF0_LENGTH                              0x1
#define _COG4PHF_G4PHF0_MASK                                0x1
#define _COG4PHF_G4PHF1_POSN                                0x1
#define _COG4PHF_G4PHF1_POSITION                            0x1
#define _COG4PHF_G4PHF1_SIZE                                0x1
#define _COG4PHF_G4PHF1_LENGTH                              0x1
#define _COG4PHF_G4PHF1_MASK                                0x2
#define _COG4PHF_G4PHF2_POSN                                0x2
#define _COG4PHF_G4PHF2_POSITION                            0x2
#define _COG4PHF_G4PHF2_SIZE                                0x1
#define _COG4PHF_G4PHF2_LENGTH                              0x1
#define _COG4PHF_G4PHF2_MASK                                0x4
#define _COG4PHF_G4PHF3_POSN                                0x3
#define _COG4PHF_G4PHF3_POSITION                            0x3
#define _COG4PHF_G4PHF3_SIZE                                0x1
#define _COG4PHF_G4PHF3_LENGTH                              0x1
#define _COG4PHF_G4PHF3_MASK                                0x8
#define _COG4PHF_G4PHF4_POSN                                0x4
#define _COG4PHF_G4PHF4_POSITION                            0x4
#define _COG4PHF_G4PHF4_SIZE                                0x1
#define _COG4PHF_G4PHF4_LENGTH                              0x1
#define _COG4PHF_G4PHF4_MASK                                0x10
#define _COG4PHF_G4PHF5_POSN                                0x5
#define _COG4PHF_G4PHF5_POSITION                            0x5
#define _COG4PHF_G4PHF5_SIZE                                0x1
#define _COG4PHF_G4PHF5_LENGTH                              0x1
#define _COG4PHF_G4PHF5_MASK                                0x20

// Register: COG4BLKR
#define COG4BLKR COG4BLKR
extern volatile unsigned char           COG4BLKR            __at(0x88F);
#ifndef _LIB_BUILD
asm("COG4BLKR equ 088Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BLKR                   :6;
    };
    struct {
        unsigned BLKR0                  :1;
        unsigned BLKR1                  :1;
        unsigned BLKR2                  :1;
        unsigned BLKR3                  :1;
        unsigned BLKR4                  :1;
        unsigned BLKR5                  :1;
    };
    struct {
        unsigned G4BLKR0                :1;
        unsigned G4BLKR1                :1;
        unsigned G4BLKR2                :1;
        unsigned G4BLKR3                :1;
        unsigned G4BLKR4                :1;
        unsigned G4BLKR5                :1;
    };
} COG4BLKRbits_t;
extern volatile COG4BLKRbits_t COG4BLKRbits __at(0x88F);
// bitfield macros
#define _COG4BLKR_BLKR_POSN                                 0x0
#define _COG4BLKR_BLKR_POSITION                             0x0
#define _COG4BLKR_BLKR_SIZE                                 0x6
#define _COG4BLKR_BLKR_LENGTH                               0x6
#define _COG4BLKR_BLKR_MASK                                 0x3F
#define _COG4BLKR_BLKR0_POSN                                0x0
#define _COG4BLKR_BLKR0_POSITION                            0x0
#define _COG4BLKR_BLKR0_SIZE                                0x1
#define _COG4BLKR_BLKR0_LENGTH                              0x1
#define _COG4BLKR_BLKR0_MASK                                0x1
#define _COG4BLKR_BLKR1_POSN                                0x1
#define _COG4BLKR_BLKR1_POSITION                            0x1
#define _COG4BLKR_BLKR1_SIZE                                0x1
#define _COG4BLKR_BLKR1_LENGTH                              0x1
#define _COG4BLKR_BLKR1_MASK                                0x2
#define _COG4BLKR_BLKR2_POSN                                0x2
#define _COG4BLKR_BLKR2_POSITION                            0x2
#define _COG4BLKR_BLKR2_SIZE                                0x1
#define _COG4BLKR_BLKR2_LENGTH                              0x1
#define _COG4BLKR_BLKR2_MASK                                0x4
#define _COG4BLKR_BLKR3_POSN                                0x3
#define _COG4BLKR_BLKR3_POSITION                            0x3
#define _COG4BLKR_BLKR3_SIZE                                0x1
#define _COG4BLKR_BLKR3_LENGTH                              0x1
#define _COG4BLKR_BLKR3_MASK                                0x8
#define _COG4BLKR_BLKR4_POSN                                0x4
#define _COG4BLKR_BLKR4_POSITION                            0x4
#define _COG4BLKR_BLKR4_SIZE                                0x1
#define _COG4BLKR_BLKR4_LENGTH                              0x1
#define _COG4BLKR_BLKR4_MASK                                0x10
#define _COG4BLKR_BLKR5_POSN                                0x5
#define _COG4BLKR_BLKR5_POSITION                            0x5
#define _COG4BLKR_BLKR5_SIZE                                0x1
#define _COG4BLKR_BLKR5_LENGTH                              0x1
#define _COG4BLKR_BLKR5_MASK                                0x20
#define _COG4BLKR_G4BLKR0_POSN                              0x0
#define _COG4BLKR_G4BLKR0_POSITION                          0x0
#define _COG4BLKR_G4BLKR0_SIZE                              0x1
#define _COG4BLKR_G4BLKR0_LENGTH                            0x1
#define _COG4BLKR_G4BLKR0_MASK                              0x1
#define _COG4BLKR_G4BLKR1_POSN                              0x1
#define _COG4BLKR_G4BLKR1_POSITION                          0x1
#define _COG4BLKR_G4BLKR1_SIZE                              0x1
#define _COG4BLKR_G4BLKR1_LENGTH                            0x1
#define _COG4BLKR_G4BLKR1_MASK                              0x2
#define _COG4BLKR_G4BLKR2_POSN                              0x2
#define _COG4BLKR_G4BLKR2_POSITION                          0x2
#define _COG4BLKR_G4BLKR2_SIZE                              0x1
#define _COG4BLKR_G4BLKR2_LENGTH                            0x1
#define _COG4BLKR_G4BLKR2_MASK                              0x4
#define _COG4BLKR_G4BLKR3_POSN                              0x3
#define _COG4BLKR_G4BLKR3_POSITION                          0x3
#define _COG4BLKR_G4BLKR3_SIZE                              0x1
#define _COG4BLKR_G4BLKR3_LENGTH                            0x1
#define _COG4BLKR_G4BLKR3_MASK                              0x8
#define _COG4BLKR_G4BLKR4_POSN                              0x4
#define _COG4BLKR_G4BLKR4_POSITION                          0x4
#define _COG4BLKR_G4BLKR4_SIZE                              0x1
#define _COG4BLKR_G4BLKR4_LENGTH                            0x1
#define _COG4BLKR_G4BLKR4_MASK                              0x10
#define _COG4BLKR_G4BLKR5_POSN                              0x5
#define _COG4BLKR_G4BLKR5_POSITION                          0x5
#define _COG4BLKR_G4BLKR5_SIZE                              0x1
#define _COG4BLKR_G4BLKR5_LENGTH                            0x1
#define _COG4BLKR_G4BLKR5_MASK                              0x20

// Register: COG4BLKF
#define COG4BLKF COG4BLKF
extern volatile unsigned char           COG4BLKF            __at(0x890);
#ifndef _LIB_BUILD
asm("COG4BLKF equ 0890h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BLKF                   :6;
    };
    struct {
        unsigned BLKF0                  :1;
        unsigned BLKF1                  :1;
        unsigned BLKF2                  :1;
        unsigned BLKF3                  :1;
        unsigned BLKF4                  :1;
        unsigned BLKF5                  :1;
    };
    struct {
        unsigned G4BLKF0                :1;
        unsigned G4BLKF1                :1;
        unsigned G4BLKF2                :1;
        unsigned G4BLKF3                :1;
        unsigned G4BLKF4                :1;
        unsigned G4BLKF5                :1;
    };
} COG4BLKFbits_t;
extern volatile COG4BLKFbits_t COG4BLKFbits __at(0x890);
// bitfield macros
#define _COG4BLKF_BLKF_POSN                                 0x0
#define _COG4BLKF_BLKF_POSITION                             0x0
#define _COG4BLKF_BLKF_SIZE                                 0x6
#define _COG4BLKF_BLKF_LENGTH                               0x6
#define _COG4BLKF_BLKF_MASK                                 0x3F
#define _COG4BLKF_BLKF0_POSN                                0x0
#define _COG4BLKF_BLKF0_POSITION                            0x0
#define _COG4BLKF_BLKF0_SIZE                                0x1
#define _COG4BLKF_BLKF0_LENGTH                              0x1
#define _COG4BLKF_BLKF0_MASK                                0x1
#define _COG4BLKF_BLKF1_POSN                                0x1
#define _COG4BLKF_BLKF1_POSITION                            0x1
#define _COG4BLKF_BLKF1_SIZE                                0x1
#define _COG4BLKF_BLKF1_LENGTH                              0x1
#define _COG4BLKF_BLKF1_MASK                                0x2
#define _COG4BLKF_BLKF2_POSN                                0x2
#define _COG4BLKF_BLKF2_POSITION                            0x2
#define _COG4BLKF_BLKF2_SIZE                                0x1
#define _COG4BLKF_BLKF2_LENGTH                              0x1
#define _COG4BLKF_BLKF2_MASK                                0x4
#define _COG4BLKF_BLKF3_POSN                                0x3
#define _COG4BLKF_BLKF3_POSITION                            0x3
#define _COG4BLKF_BLKF3_SIZE                                0x1
#define _COG4BLKF_BLKF3_LENGTH                              0x1
#define _COG4BLKF_BLKF3_MASK                                0x8
#define _COG4BLKF_BLKF4_POSN                                0x4
#define _COG4BLKF_BLKF4_POSITION                            0x4
#define _COG4BLKF_BLKF4_SIZE                                0x1
#define _COG4BLKF_BLKF4_LENGTH                              0x1
#define _COG4BLKF_BLKF4_MASK                                0x10
#define _COG4BLKF_BLKF5_POSN                                0x5
#define _COG4BLKF_BLKF5_POSITION                            0x5
#define _COG4BLKF_BLKF5_SIZE                                0x1
#define _COG4BLKF_BLKF5_LENGTH                              0x1
#define _COG4BLKF_BLKF5_MASK                                0x20
#define _COG4BLKF_G4BLKF0_POSN                              0x0
#define _COG4BLKF_G4BLKF0_POSITION                          0x0
#define _COG4BLKF_G4BLKF0_SIZE                              0x1
#define _COG4BLKF_G4BLKF0_LENGTH                            0x1
#define _COG4BLKF_G4BLKF0_MASK                              0x1
#define _COG4BLKF_G4BLKF1_POSN                              0x1
#define _COG4BLKF_G4BLKF1_POSITION                          0x1
#define _COG4BLKF_G4BLKF1_SIZE                              0x1
#define _COG4BLKF_G4BLKF1_LENGTH                            0x1
#define _COG4BLKF_G4BLKF1_MASK                              0x2
#define _COG4BLKF_G4BLKF2_POSN                              0x2
#define _COG4BLKF_G4BLKF2_POSITION                          0x2
#define _COG4BLKF_G4BLKF2_SIZE                              0x1
#define _COG4BLKF_G4BLKF2_LENGTH                            0x1
#define _COG4BLKF_G4BLKF2_MASK                              0x4
#define _COG4BLKF_G4BLKF3_POSN                              0x3
#define _COG4BLKF_G4BLKF3_POSITION                          0x3
#define _COG4BLKF_G4BLKF3_SIZE                              0x1
#define _COG4BLKF_G4BLKF3_LENGTH                            0x1
#define _COG4BLKF_G4BLKF3_MASK                              0x8
#define _COG4BLKF_G4BLKF4_POSN                              0x4
#define _COG4BLKF_G4BLKF4_POSITION                          0x4
#define _COG4BLKF_G4BLKF4_SIZE                              0x1
#define _COG4BLKF_G4BLKF4_LENGTH                            0x1
#define _COG4BLKF_G4BLKF4_MASK                              0x10
#define _COG4BLKF_G4BLKF5_POSN                              0x5
#define _COG4BLKF_G4BLKF5_POSITION                          0x5
#define _COG4BLKF_G4BLKF5_SIZE                              0x1
#define _COG4BLKF_G4BLKF5_LENGTH                            0x1
#define _COG4BLKF_G4BLKF5_MASK                              0x20

// Register: COG4DBR
#define COG4DBR COG4DBR
extern volatile unsigned char           COG4DBR             __at(0x891);
#ifndef _LIB_BUILD
asm("COG4DBR equ 0891h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBR                    :6;
    };
    struct {
        unsigned DBR0                   :1;
        unsigned DBR1                   :1;
        unsigned DBR2                   :1;
        unsigned DBR3                   :1;
        unsigned DBR4                   :1;
        unsigned DBR5                   :1;
    };
    struct {
        unsigned G4DBR0                 :1;
        unsigned G4DBR1                 :1;
        unsigned G4DBR2                 :1;
        unsigned G4DBR3                 :1;
        unsigned G4DBR4                 :1;
        unsigned G4DBR5                 :1;
    };
} COG4DBRbits_t;
extern volatile COG4DBRbits_t COG4DBRbits __at(0x891);
// bitfield macros
#define _COG4DBR_DBR_POSN                                   0x0
#define _COG4DBR_DBR_POSITION                               0x0
#define _COG4DBR_DBR_SIZE                                   0x6
#define _COG4DBR_DBR_LENGTH                                 0x6
#define _COG4DBR_DBR_MASK                                   0x3F
#define _COG4DBR_DBR0_POSN                                  0x0
#define _COG4DBR_DBR0_POSITION                              0x0
#define _COG4DBR_DBR0_SIZE                                  0x1
#define _COG4DBR_DBR0_LENGTH                                0x1
#define _COG4DBR_DBR0_MASK                                  0x1
#define _COG4DBR_DBR1_POSN                                  0x1
#define _COG4DBR_DBR1_POSITION                              0x1
#define _COG4DBR_DBR1_SIZE                                  0x1
#define _COG4DBR_DBR1_LENGTH                                0x1
#define _COG4DBR_DBR1_MASK                                  0x2
#define _COG4DBR_DBR2_POSN                                  0x2
#define _COG4DBR_DBR2_POSITION                              0x2
#define _COG4DBR_DBR2_SIZE                                  0x1
#define _COG4DBR_DBR2_LENGTH                                0x1
#define _COG4DBR_DBR2_MASK                                  0x4
#define _COG4DBR_DBR3_POSN                                  0x3
#define _COG4DBR_DBR3_POSITION                              0x3
#define _COG4DBR_DBR3_SIZE                                  0x1
#define _COG4DBR_DBR3_LENGTH                                0x1
#define _COG4DBR_DBR3_MASK                                  0x8
#define _COG4DBR_DBR4_POSN                                  0x4
#define _COG4DBR_DBR4_POSITION                              0x4
#define _COG4DBR_DBR4_SIZE                                  0x1
#define _COG4DBR_DBR4_LENGTH                                0x1
#define _COG4DBR_DBR4_MASK                                  0x10
#define _COG4DBR_DBR5_POSN                                  0x5
#define _COG4DBR_DBR5_POSITION                              0x5
#define _COG4DBR_DBR5_SIZE                                  0x1
#define _COG4DBR_DBR5_LENGTH                                0x1
#define _COG4DBR_DBR5_MASK                                  0x20
#define _COG4DBR_G4DBR0_POSN                                0x0
#define _COG4DBR_G4DBR0_POSITION                            0x0
#define _COG4DBR_G4DBR0_SIZE                                0x1
#define _COG4DBR_G4DBR0_LENGTH                              0x1
#define _COG4DBR_G4DBR0_MASK                                0x1
#define _COG4DBR_G4DBR1_POSN                                0x1
#define _COG4DBR_G4DBR1_POSITION                            0x1
#define _COG4DBR_G4DBR1_SIZE                                0x1
#define _COG4DBR_G4DBR1_LENGTH                              0x1
#define _COG4DBR_G4DBR1_MASK                                0x2
#define _COG4DBR_G4DBR2_POSN                                0x2
#define _COG4DBR_G4DBR2_POSITION                            0x2
#define _COG4DBR_G4DBR2_SIZE                                0x1
#define _COG4DBR_G4DBR2_LENGTH                              0x1
#define _COG4DBR_G4DBR2_MASK                                0x4
#define _COG4DBR_G4DBR3_POSN                                0x3
#define _COG4DBR_G4DBR3_POSITION                            0x3
#define _COG4DBR_G4DBR3_SIZE                                0x1
#define _COG4DBR_G4DBR3_LENGTH                              0x1
#define _COG4DBR_G4DBR3_MASK                                0x8
#define _COG4DBR_G4DBR4_POSN                                0x4
#define _COG4DBR_G4DBR4_POSITION                            0x4
#define _COG4DBR_G4DBR4_SIZE                                0x1
#define _COG4DBR_G4DBR4_LENGTH                              0x1
#define _COG4DBR_G4DBR4_MASK                                0x10
#define _COG4DBR_G4DBR5_POSN                                0x5
#define _COG4DBR_G4DBR5_POSITION                            0x5
#define _COG4DBR_G4DBR5_SIZE                                0x1
#define _COG4DBR_G4DBR5_LENGTH                              0x1
#define _COG4DBR_G4DBR5_MASK                                0x20

// Register: COG4DBF
#define COG4DBF COG4DBF
extern volatile unsigned char           COG4DBF             __at(0x892);
#ifndef _LIB_BUILD
asm("COG4DBF equ 0892h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBF0                   :1;
        unsigned DBF1                   :1;
        unsigned DBF2                   :1;
        unsigned DBF3                   :1;
        unsigned DBF4                   :1;
        unsigned DBF5                   :1;
    };
    struct {
        unsigned G4DBF0                 :1;
        unsigned G4DBF1                 :1;
        unsigned G4DBF2                 :1;
        unsigned G4DBF3                 :1;
        unsigned G4DBF4                 :1;
        unsigned G4DBF5                 :1;
    };
    struct {
        unsigned G4DBF                  :6;
    };
} COG4DBFbits_t;
extern volatile COG4DBFbits_t COG4DBFbits __at(0x892);
// bitfield macros
#define _COG4DBF_DBF0_POSN                                  0x0
#define _COG4DBF_DBF0_POSITION                              0x0
#define _COG4DBF_DBF0_SIZE                                  0x1
#define _COG4DBF_DBF0_LENGTH                                0x1
#define _COG4DBF_DBF0_MASK                                  0x1
#define _COG4DBF_DBF1_POSN                                  0x1
#define _COG4DBF_DBF1_POSITION                              0x1
#define _COG4DBF_DBF1_SIZE                                  0x1
#define _COG4DBF_DBF1_LENGTH                                0x1
#define _COG4DBF_DBF1_MASK                                  0x2
#define _COG4DBF_DBF2_POSN                                  0x2
#define _COG4DBF_DBF2_POSITION                              0x2
#define _COG4DBF_DBF2_SIZE                                  0x1
#define _COG4DBF_DBF2_LENGTH                                0x1
#define _COG4DBF_DBF2_MASK                                  0x4
#define _COG4DBF_DBF3_POSN                                  0x3
#define _COG4DBF_DBF3_POSITION                              0x3
#define _COG4DBF_DBF3_SIZE                                  0x1
#define _COG4DBF_DBF3_LENGTH                                0x1
#define _COG4DBF_DBF3_MASK                                  0x8
#define _COG4DBF_DBF4_POSN                                  0x4
#define _COG4DBF_DBF4_POSITION                              0x4
#define _COG4DBF_DBF4_SIZE                                  0x1
#define _COG4DBF_DBF4_LENGTH                                0x1
#define _COG4DBF_DBF4_MASK                                  0x10
#define _COG4DBF_DBF5_POSN                                  0x5
#define _COG4DBF_DBF5_POSITION                              0x5
#define _COG4DBF_DBF5_SIZE                                  0x1
#define _COG4DBF_DBF5_LENGTH                                0x1
#define _COG4DBF_DBF5_MASK                                  0x20
#define _COG4DBF_G4DBF0_POSN                                0x0
#define _COG4DBF_G4DBF0_POSITION                            0x0
#define _COG4DBF_G4DBF0_SIZE                                0x1
#define _COG4DBF_G4DBF0_LENGTH                              0x1
#define _COG4DBF_G4DBF0_MASK                                0x1
#define _COG4DBF_G4DBF1_POSN                                0x1
#define _COG4DBF_G4DBF1_POSITION                            0x1
#define _COG4DBF_G4DBF1_SIZE                                0x1
#define _COG4DBF_G4DBF1_LENGTH                              0x1
#define _COG4DBF_G4DBF1_MASK                                0x2
#define _COG4DBF_G4DBF2_POSN                                0x2
#define _COG4DBF_G4DBF2_POSITION                            0x2
#define _COG4DBF_G4DBF2_SIZE                                0x1
#define _COG4DBF_G4DBF2_LENGTH                              0x1
#define _COG4DBF_G4DBF2_MASK                                0x4
#define _COG4DBF_G4DBF3_POSN                                0x3
#define _COG4DBF_G4DBF3_POSITION                            0x3
#define _COG4DBF_G4DBF3_SIZE                                0x1
#define _COG4DBF_G4DBF3_LENGTH                              0x1
#define _COG4DBF_G4DBF3_MASK                                0x8
#define _COG4DBF_G4DBF4_POSN                                0x4
#define _COG4DBF_G4DBF4_POSITION                            0x4
#define _COG4DBF_G4DBF4_SIZE                                0x1
#define _COG4DBF_G4DBF4_LENGTH                              0x1
#define _COG4DBF_G4DBF4_MASK                                0x10
#define _COG4DBF_G4DBF5_POSN                                0x5
#define _COG4DBF_G4DBF5_POSITION                            0x5
#define _COG4DBF_G4DBF5_SIZE                                0x1
#define _COG4DBF_G4DBF5_LENGTH                              0x1
#define _COG4DBF_G4DBF5_MASK                                0x20
#define _COG4DBF_G4DBF_POSN                                 0x0
#define _COG4DBF_G4DBF_POSITION                             0x0
#define _COG4DBF_G4DBF_SIZE                                 0x6
#define _COG4DBF_G4DBF_LENGTH                               0x6
#define _COG4DBF_G4DBF_MASK                                 0x3F

// Register: COG4CON0
#define COG4CON0 COG4CON0
extern volatile unsigned char           COG4CON0            __at(0x893);
#ifndef _LIB_BUILD
asm("COG4CON0 equ 0893h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD                     :3;
        unsigned CS                     :2;
        unsigned                        :1;
        unsigned LD                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MD0                    :1;
        unsigned MD1                    :1;
        unsigned MD2                    :1;
        unsigned CS0                    :1;
        unsigned CS1                    :1;
    };
    struct {
        unsigned G4MD                   :3;
        unsigned G4CS                   :2;
        unsigned                        :1;
        unsigned G4LD                   :1;
        unsigned G4EN                   :1;
    };
    struct {
        unsigned G4MD0                  :1;
        unsigned G4MD1                  :1;
        unsigned G4MD2                  :1;
        unsigned G4CS0                  :1;
        unsigned G4CS1                  :1;
    };
} COG4CON0bits_t;
extern volatile COG4CON0bits_t COG4CON0bits __at(0x893);
// bitfield macros
#define _COG4CON0_MD_POSN                                   0x0
#define _COG4CON0_MD_POSITION                               0x0
#define _COG4CON0_MD_SIZE                                   0x3
#define _COG4CON0_MD_LENGTH                                 0x3
#define _COG4CON0_MD_MASK                                   0x7
#define _COG4CON0_CS_POSN                                   0x3
#define _COG4CON0_CS_POSITION                               0x3
#define _COG4CON0_CS_SIZE                                   0x2
#define _COG4CON0_CS_LENGTH                                 0x2
#define _COG4CON0_CS_MASK                                   0x18
#define _COG4CON0_LD_POSN                                   0x6
#define _COG4CON0_LD_POSITION                               0x6
#define _COG4CON0_LD_SIZE                                   0x1
#define _COG4CON0_LD_LENGTH                                 0x1
#define _COG4CON0_LD_MASK                                   0x40
#define _COG4CON0_EN_POSN                                   0x7
#define _COG4CON0_EN_POSITION                               0x7
#define _COG4CON0_EN_SIZE                                   0x1
#define _COG4CON0_EN_LENGTH                                 0x1
#define _COG4CON0_EN_MASK                                   0x80
#define _COG4CON0_MD0_POSN                                  0x0
#define _COG4CON0_MD0_POSITION                              0x0
#define _COG4CON0_MD0_SIZE                                  0x1
#define _COG4CON0_MD0_LENGTH                                0x1
#define _COG4CON0_MD0_MASK                                  0x1
#define _COG4CON0_MD1_POSN                                  0x1
#define _COG4CON0_MD1_POSITION                              0x1
#define _COG4CON0_MD1_SIZE                                  0x1
#define _COG4CON0_MD1_LENGTH                                0x1
#define _COG4CON0_MD1_MASK                                  0x2
#define _COG4CON0_MD2_POSN                                  0x2
#define _COG4CON0_MD2_POSITION                              0x2
#define _COG4CON0_MD2_SIZE                                  0x1
#define _COG4CON0_MD2_LENGTH                                0x1
#define _COG4CON0_MD2_MASK                                  0x4
#define _COG4CON0_CS0_POSN                                  0x3
#define _COG4CON0_CS0_POSITION                              0x3
#define _COG4CON0_CS0_SIZE                                  0x1
#define _COG4CON0_CS0_LENGTH                                0x1
#define _COG4CON0_CS0_MASK                                  0x8
#define _COG4CON0_CS1_POSN                                  0x4
#define _COG4CON0_CS1_POSITION                              0x4
#define _COG4CON0_CS1_SIZE                                  0x1
#define _COG4CON0_CS1_LENGTH                                0x1
#define _COG4CON0_CS1_MASK                                  0x10
#define _COG4CON0_G4MD_POSN                                 0x0
#define _COG4CON0_G4MD_POSITION                             0x0
#define _COG4CON0_G4MD_SIZE                                 0x3
#define _COG4CON0_G4MD_LENGTH                               0x3
#define _COG4CON0_G4MD_MASK                                 0x7
#define _COG4CON0_G4CS_POSN                                 0x3
#define _COG4CON0_G4CS_POSITION                             0x3
#define _COG4CON0_G4CS_SIZE                                 0x2
#define _COG4CON0_G4CS_LENGTH                               0x2
#define _COG4CON0_G4CS_MASK                                 0x18
#define _COG4CON0_G4LD_POSN                                 0x6
#define _COG4CON0_G4LD_POSITION                             0x6
#define _COG4CON0_G4LD_SIZE                                 0x1
#define _COG4CON0_G4LD_LENGTH                               0x1
#define _COG4CON0_G4LD_MASK                                 0x40
#define _COG4CON0_G4EN_POSN                                 0x7
#define _COG4CON0_G4EN_POSITION                             0x7
#define _COG4CON0_G4EN_SIZE                                 0x1
#define _COG4CON0_G4EN_LENGTH                               0x1
#define _COG4CON0_G4EN_MASK                                 0x80
#define _COG4CON0_G4MD0_POSN                                0x0
#define _COG4CON0_G4MD0_POSITION                            0x0
#define _COG4CON0_G4MD0_SIZE                                0x1
#define _COG4CON0_G4MD0_LENGTH                              0x1
#define _COG4CON0_G4MD0_MASK                                0x1
#define _COG4CON0_G4MD1_POSN                                0x1
#define _COG4CON0_G4MD1_POSITION                            0x1
#define _COG4CON0_G4MD1_SIZE                                0x1
#define _COG4CON0_G4MD1_LENGTH                              0x1
#define _COG4CON0_G4MD1_MASK                                0x2
#define _COG4CON0_G4MD2_POSN                                0x2
#define _COG4CON0_G4MD2_POSITION                            0x2
#define _COG4CON0_G4MD2_SIZE                                0x1
#define _COG4CON0_G4MD2_LENGTH                              0x1
#define _COG4CON0_G4MD2_MASK                                0x4
#define _COG4CON0_G4CS0_POSN                                0x3
#define _COG4CON0_G4CS0_POSITION                            0x3
#define _COG4CON0_G4CS0_SIZE                                0x1
#define _COG4CON0_G4CS0_LENGTH                              0x1
#define _COG4CON0_G4CS0_MASK                                0x8
#define _COG4CON0_G4CS1_POSN                                0x4
#define _COG4CON0_G4CS1_POSITION                            0x4
#define _COG4CON0_G4CS1_SIZE                                0x1
#define _COG4CON0_G4CS1_LENGTH                              0x1
#define _COG4CON0_G4CS1_MASK                                0x10

// Register: COG4CON1
#define COG4CON1 COG4CON1
extern volatile unsigned char           COG4CON1            __at(0x894);
#ifndef _LIB_BUILD
asm("COG4CON1 equ 0894h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POLA                   :1;
        unsigned POLB                   :1;
        unsigned POLC                   :1;
        unsigned POLD                   :1;
        unsigned                        :2;
        unsigned FDBS                   :1;
        unsigned RDBS                   :1;
    };
    struct {
        unsigned G4POLA                 :1;
        unsigned G4POLB                 :1;
        unsigned G4POLC                 :1;
        unsigned G4POLD                 :1;
        unsigned                        :2;
        unsigned G4FDBS                 :1;
        unsigned G4RDBS                 :1;
    };
} COG4CON1bits_t;
extern volatile COG4CON1bits_t COG4CON1bits __at(0x894);
// bitfield macros
#define _COG4CON1_POLA_POSN                                 0x0
#define _COG4CON1_POLA_POSITION                             0x0
#define _COG4CON1_POLA_SIZE                                 0x1
#define _COG4CON1_POLA_LENGTH                               0x1
#define _COG4CON1_POLA_MASK                                 0x1
#define _COG4CON1_POLB_POSN                                 0x1
#define _COG4CON1_POLB_POSITION                             0x1
#define _COG4CON1_POLB_SIZE                                 0x1
#define _COG4CON1_POLB_LENGTH                               0x1
#define _COG4CON1_POLB_MASK                                 0x2
#define _COG4CON1_POLC_POSN                                 0x2
#define _COG4CON1_POLC_POSITION                             0x2
#define _COG4CON1_POLC_SIZE                                 0x1
#define _COG4CON1_POLC_LENGTH                               0x1
#define _COG4CON1_POLC_MASK                                 0x4
#define _COG4CON1_POLD_POSN                                 0x3
#define _COG4CON1_POLD_POSITION                             0x3
#define _COG4CON1_POLD_SIZE                                 0x1
#define _COG4CON1_POLD_LENGTH                               0x1
#define _COG4CON1_POLD_MASK                                 0x8
#define _COG4CON1_FDBS_POSN                                 0x6
#define _COG4CON1_FDBS_POSITION                             0x6
#define _COG4CON1_FDBS_SIZE                                 0x1
#define _COG4CON1_FDBS_LENGTH                               0x1
#define _COG4CON1_FDBS_MASK                                 0x40
#define _COG4CON1_RDBS_POSN                                 0x7
#define _COG4CON1_RDBS_POSITION                             0x7
#define _COG4CON1_RDBS_SIZE                                 0x1
#define _COG4CON1_RDBS_LENGTH                               0x1
#define _COG4CON1_RDBS_MASK                                 0x80
#define _COG4CON1_G4POLA_POSN                               0x0
#define _COG4CON1_G4POLA_POSITION                           0x0
#define _COG4CON1_G4POLA_SIZE                               0x1
#define _COG4CON1_G4POLA_LENGTH                             0x1
#define _COG4CON1_G4POLA_MASK                               0x1
#define _COG4CON1_G4POLB_POSN                               0x1
#define _COG4CON1_G4POLB_POSITION                           0x1
#define _COG4CON1_G4POLB_SIZE                               0x1
#define _COG4CON1_G4POLB_LENGTH                             0x1
#define _COG4CON1_G4POLB_MASK                               0x2
#define _COG4CON1_G4POLC_POSN                               0x2
#define _COG4CON1_G4POLC_POSITION                           0x2
#define _COG4CON1_G4POLC_SIZE                               0x1
#define _COG4CON1_G4POLC_LENGTH                             0x1
#define _COG4CON1_G4POLC_MASK                               0x4
#define _COG4CON1_G4POLD_POSN                               0x3
#define _COG4CON1_G4POLD_POSITION                           0x3
#define _COG4CON1_G4POLD_SIZE                               0x1
#define _COG4CON1_G4POLD_LENGTH                             0x1
#define _COG4CON1_G4POLD_MASK                               0x8
#define _COG4CON1_G4FDBS_POSN                               0x6
#define _COG4CON1_G4FDBS_POSITION                           0x6
#define _COG4CON1_G4FDBS_SIZE                               0x1
#define _COG4CON1_G4FDBS_LENGTH                             0x1
#define _COG4CON1_G4FDBS_MASK                               0x40
#define _COG4CON1_G4RDBS_POSN                               0x7
#define _COG4CON1_G4RDBS_POSITION                           0x7
#define _COG4CON1_G4RDBS_SIZE                               0x1
#define _COG4CON1_G4RDBS_LENGTH                             0x1
#define _COG4CON1_G4RDBS_MASK                               0x80

// Register: COG4RIS0
#define COG4RIS0 COG4RIS0
extern volatile unsigned char           COG4RIS0            __at(0x895);
#ifndef _LIB_BUILD
asm("COG4RIS0 equ 0895h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RIS0                   :1;
        unsigned RIS1                   :1;
        unsigned RIS2                   :1;
        unsigned RIS3                   :1;
        unsigned RIS4                   :1;
        unsigned RIS5                   :1;
        unsigned RIS6                   :1;
        unsigned RIS7                   :1;
    };
    struct {
        unsigned G4RIS0                 :1;
        unsigned G4RIS1                 :1;
        unsigned G4RIS2                 :1;
        unsigned G4RIS3                 :1;
        unsigned G4RIS4                 :1;
        unsigned G4RIS5                 :1;
        unsigned G4RIS6                 :1;
        unsigned G4RIS7                 :1;
    };
} COG4RIS0bits_t;
extern volatile COG4RIS0bits_t COG4RIS0bits __at(0x895);
// bitfield macros
#define _COG4RIS0_RIS0_POSN                                 0x0
#define _COG4RIS0_RIS0_POSITION                             0x0
#define _COG4RIS0_RIS0_SIZE                                 0x1
#define _COG4RIS0_RIS0_LENGTH                               0x1
#define _COG4RIS0_RIS0_MASK                                 0x1
#define _COG4RIS0_RIS1_POSN                                 0x1
#define _COG4RIS0_RIS1_POSITION                             0x1
#define _COG4RIS0_RIS1_SIZE                                 0x1
#define _COG4RIS0_RIS1_LENGTH                               0x1
#define _COG4RIS0_RIS1_MASK                                 0x2
#define _COG4RIS0_RIS2_POSN                                 0x2
#define _COG4RIS0_RIS2_POSITION                             0x2
#define _COG4RIS0_RIS2_SIZE                                 0x1
#define _COG4RIS0_RIS2_LENGTH                               0x1
#define _COG4RIS0_RIS2_MASK                                 0x4
#define _COG4RIS0_RIS3_POSN                                 0x3
#define _COG4RIS0_RIS3_POSITION                             0x3
#define _COG4RIS0_RIS3_SIZE                                 0x1
#define _COG4RIS0_RIS3_LENGTH                               0x1
#define _COG4RIS0_RIS3_MASK                                 0x8
#define _COG4RIS0_RIS4_POSN                                 0x4
#define _COG4RIS0_RIS4_POSITION                             0x4
#define _COG4RIS0_RIS4_SIZE                                 0x1
#define _COG4RIS0_RIS4_LENGTH                               0x1
#define _COG4RIS0_RIS4_MASK                                 0x10
#define _COG4RIS0_RIS5_POSN                                 0x5
#define _COG4RIS0_RIS5_POSITION                             0x5
#define _COG4RIS0_RIS5_SIZE                                 0x1
#define _COG4RIS0_RIS5_LENGTH                               0x1
#define _COG4RIS0_RIS5_MASK                                 0x20
#define _COG4RIS0_RIS6_POSN                                 0x6
#define _COG4RIS0_RIS6_POSITION                             0x6
#define _COG4RIS0_RIS6_SIZE                                 0x1
#define _COG4RIS0_RIS6_LENGTH                               0x1
#define _COG4RIS0_RIS6_MASK                                 0x40
#define _COG4RIS0_RIS7_POSN                                 0x7
#define _COG4RIS0_RIS7_POSITION                             0x7
#define _COG4RIS0_RIS7_SIZE                                 0x1
#define _COG4RIS0_RIS7_LENGTH                               0x1
#define _COG4RIS0_RIS7_MASK                                 0x80
#define _COG4RIS0_G4RIS0_POSN                               0x0
#define _COG4RIS0_G4RIS0_POSITION                           0x0
#define _COG4RIS0_G4RIS0_SIZE                               0x1
#define _COG4RIS0_G4RIS0_LENGTH                             0x1
#define _COG4RIS0_G4RIS0_MASK                               0x1
#define _COG4RIS0_G4RIS1_POSN                               0x1
#define _COG4RIS0_G4RIS1_POSITION                           0x1
#define _COG4RIS0_G4RIS1_SIZE                               0x1
#define _COG4RIS0_G4RIS1_LENGTH                             0x1
#define _COG4RIS0_G4RIS1_MASK                               0x2
#define _COG4RIS0_G4RIS2_POSN                               0x2
#define _COG4RIS0_G4RIS2_POSITION                           0x2
#define _COG4RIS0_G4RIS2_SIZE                               0x1
#define _COG4RIS0_G4RIS2_LENGTH                             0x1
#define _COG4RIS0_G4RIS2_MASK                               0x4
#define _COG4RIS0_G4RIS3_POSN                               0x3
#define _COG4RIS0_G4RIS3_POSITION                           0x3
#define _COG4RIS0_G4RIS3_SIZE                               0x1
#define _COG4RIS0_G4RIS3_LENGTH                             0x1
#define _COG4RIS0_G4RIS3_MASK                               0x8
#define _COG4RIS0_G4RIS4_POSN                               0x4
#define _COG4RIS0_G4RIS4_POSITION                           0x4
#define _COG4RIS0_G4RIS4_SIZE                               0x1
#define _COG4RIS0_G4RIS4_LENGTH                             0x1
#define _COG4RIS0_G4RIS4_MASK                               0x10
#define _COG4RIS0_G4RIS5_POSN                               0x5
#define _COG4RIS0_G4RIS5_POSITION                           0x5
#define _COG4RIS0_G4RIS5_SIZE                               0x1
#define _COG4RIS0_G4RIS5_LENGTH                             0x1
#define _COG4RIS0_G4RIS5_MASK                               0x20
#define _COG4RIS0_G4RIS6_POSN                               0x6
#define _COG4RIS0_G4RIS6_POSITION                           0x6
#define _COG4RIS0_G4RIS6_SIZE                               0x1
#define _COG4RIS0_G4RIS6_LENGTH                             0x1
#define _COG4RIS0_G4RIS6_MASK                               0x40
#define _COG4RIS0_G4RIS7_POSN                               0x7
#define _COG4RIS0_G4RIS7_POSITION                           0x7
#define _COG4RIS0_G4RIS7_SIZE                               0x1
#define _COG4RIS0_G4RIS7_LENGTH                             0x1
#define _COG4RIS0_G4RIS7_MASK                               0x80

// Register: COG4RIS1
#define COG4RIS1 COG4RIS1
extern volatile unsigned char           COG4RIS1            __at(0x896);
#ifndef _LIB_BUILD
asm("COG4RIS1 equ 0896h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RIS8                   :1;
        unsigned RIS9                   :1;
        unsigned RIS10                  :1;
        unsigned RIS11                  :1;
        unsigned RIS12                  :1;
        unsigned RIS13                  :1;
        unsigned RIS14                  :1;
        unsigned RIS15                  :1;
    };
    struct {
        unsigned G4RIS8                 :1;
        unsigned G4RIS9                 :1;
        unsigned G4RIS10                :1;
        unsigned G4RIS11                :1;
        unsigned G4RIS12                :1;
        unsigned G4RIS13                :1;
        unsigned G4RIS14                :1;
        unsigned G4RIS15                :1;
    };
} COG4RIS1bits_t;
extern volatile COG4RIS1bits_t COG4RIS1bits __at(0x896);
// bitfield macros
#define _COG4RIS1_RIS8_POSN                                 0x0
#define _COG4RIS1_RIS8_POSITION                             0x0
#define _COG4RIS1_RIS8_SIZE                                 0x1
#define _COG4RIS1_RIS8_LENGTH                               0x1
#define _COG4RIS1_RIS8_MASK                                 0x1
#define _COG4RIS1_RIS9_POSN                                 0x1
#define _COG4RIS1_RIS9_POSITION                             0x1
#define _COG4RIS1_RIS9_SIZE                                 0x1
#define _COG4RIS1_RIS9_LENGTH                               0x1
#define _COG4RIS1_RIS9_MASK                                 0x2
#define _COG4RIS1_RIS10_POSN                                0x2
#define _COG4RIS1_RIS10_POSITION                            0x2
#define _COG4RIS1_RIS10_SIZE                                0x1
#define _COG4RIS1_RIS10_LENGTH                              0x1
#define _COG4RIS1_RIS10_MASK                                0x4
#define _COG4RIS1_RIS11_POSN                                0x3
#define _COG4RIS1_RIS11_POSITION                            0x3
#define _COG4RIS1_RIS11_SIZE                                0x1
#define _COG4RIS1_RIS11_LENGTH                              0x1
#define _COG4RIS1_RIS11_MASK                                0x8
#define _COG4RIS1_RIS12_POSN                                0x4
#define _COG4RIS1_RIS12_POSITION                            0x4
#define _COG4RIS1_RIS12_SIZE                                0x1
#define _COG4RIS1_RIS12_LENGTH                              0x1
#define _COG4RIS1_RIS12_MASK                                0x10
#define _COG4RIS1_RIS13_POSN                                0x5
#define _COG4RIS1_RIS13_POSITION                            0x5
#define _COG4RIS1_RIS13_SIZE                                0x1
#define _COG4RIS1_RIS13_LENGTH                              0x1
#define _COG4RIS1_RIS13_MASK                                0x20
#define _COG4RIS1_RIS14_POSN                                0x6
#define _COG4RIS1_RIS14_POSITION                            0x6
#define _COG4RIS1_RIS14_SIZE                                0x1
#define _COG4RIS1_RIS14_LENGTH                              0x1
#define _COG4RIS1_RIS14_MASK                                0x40
#define _COG4RIS1_RIS15_POSN                                0x7
#define _COG4RIS1_RIS15_POSITION                            0x7
#define _COG4RIS1_RIS15_SIZE                                0x1
#define _COG4RIS1_RIS15_LENGTH                              0x1
#define _COG4RIS1_RIS15_MASK                                0x80
#define _COG4RIS1_G4RIS8_POSN                               0x0
#define _COG4RIS1_G4RIS8_POSITION                           0x0
#define _COG4RIS1_G4RIS8_SIZE                               0x1
#define _COG4RIS1_G4RIS8_LENGTH                             0x1
#define _COG4RIS1_G4RIS8_MASK                               0x1
#define _COG4RIS1_G4RIS9_POSN                               0x1
#define _COG4RIS1_G4RIS9_POSITION                           0x1
#define _COG4RIS1_G4RIS9_SIZE                               0x1
#define _COG4RIS1_G4RIS9_LENGTH                             0x1
#define _COG4RIS1_G4RIS9_MASK                               0x2
#define _COG4RIS1_G4RIS10_POSN                              0x2
#define _COG4RIS1_G4RIS10_POSITION                          0x2
#define _COG4RIS1_G4RIS10_SIZE                              0x1
#define _COG4RIS1_G4RIS10_LENGTH                            0x1
#define _COG4RIS1_G4RIS10_MASK                              0x4
#define _COG4RIS1_G4RIS11_POSN                              0x3
#define _COG4RIS1_G4RIS11_POSITION                          0x3
#define _COG4RIS1_G4RIS11_SIZE                              0x1
#define _COG4RIS1_G4RIS11_LENGTH                            0x1
#define _COG4RIS1_G4RIS11_MASK                              0x8
#define _COG4RIS1_G4RIS12_POSN                              0x4
#define _COG4RIS1_G4RIS12_POSITION                          0x4
#define _COG4RIS1_G4RIS12_SIZE                              0x1
#define _COG4RIS1_G4RIS12_LENGTH                            0x1
#define _COG4RIS1_G4RIS12_MASK                              0x10
#define _COG4RIS1_G4RIS13_POSN                              0x5
#define _COG4RIS1_G4RIS13_POSITION                          0x5
#define _COG4RIS1_G4RIS13_SIZE                              0x1
#define _COG4RIS1_G4RIS13_LENGTH                            0x1
#define _COG4RIS1_G4RIS13_MASK                              0x20
#define _COG4RIS1_G4RIS14_POSN                              0x6
#define _COG4RIS1_G4RIS14_POSITION                          0x6
#define _COG4RIS1_G4RIS14_SIZE                              0x1
#define _COG4RIS1_G4RIS14_LENGTH                            0x1
#define _COG4RIS1_G4RIS14_MASK                              0x40
#define _COG4RIS1_G4RIS15_POSN                              0x7
#define _COG4RIS1_G4RIS15_POSITION                          0x7
#define _COG4RIS1_G4RIS15_SIZE                              0x1
#define _COG4RIS1_G4RIS15_LENGTH                            0x1
#define _COG4RIS1_G4RIS15_MASK                              0x80

// Register: COG4RSIM0
#define COG4RSIM0 COG4RSIM0
extern volatile unsigned char           COG4RSIM0           __at(0x897);
#ifndef _LIB_BUILD
asm("COG4RSIM0 equ 0897h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RSIM0                  :1;
        unsigned RSIM1                  :1;
        unsigned RSIM2                  :1;
        unsigned RSIM3                  :1;
        unsigned RSIM4                  :1;
        unsigned RSIM5                  :1;
        unsigned RSIM6                  :1;
        unsigned RSIM7                  :1;
    };
    struct {
        unsigned G4RSIM0                :1;
        unsigned G4RSIM1                :1;
        unsigned G4RSIM2                :1;
        unsigned G4RSIM3                :1;
        unsigned G4RSIM4                :1;
        unsigned G4RSIM5                :1;
        unsigned G4RSIM6                :1;
        unsigned G4RSIM7                :1;
    };
} COG4RSIM0bits_t;
extern volatile COG4RSIM0bits_t COG4RSIM0bits __at(0x897);
// bitfield macros
#define _COG4RSIM0_RSIM0_POSN                               0x0
#define _COG4RSIM0_RSIM0_POSITION                           0x0
#define _COG4RSIM0_RSIM0_SIZE                               0x1
#define _COG4RSIM0_RSIM0_LENGTH                             0x1
#define _COG4RSIM0_RSIM0_MASK                               0x1
#define _COG4RSIM0_RSIM1_POSN                               0x1
#define _COG4RSIM0_RSIM1_POSITION                           0x1
#define _COG4RSIM0_RSIM1_SIZE                               0x1
#define _COG4RSIM0_RSIM1_LENGTH                             0x1
#define _COG4RSIM0_RSIM1_MASK                               0x2
#define _COG4RSIM0_RSIM2_POSN                               0x2
#define _COG4RSIM0_RSIM2_POSITION                           0x2
#define _COG4RSIM0_RSIM2_SIZE                               0x1
#define _COG4RSIM0_RSIM2_LENGTH                             0x1
#define _COG4RSIM0_RSIM2_MASK                               0x4
#define _COG4RSIM0_RSIM3_POSN                               0x3
#define _COG4RSIM0_RSIM3_POSITION                           0x3
#define _COG4RSIM0_RSIM3_SIZE                               0x1
#define _COG4RSIM0_RSIM3_LENGTH                             0x1
#define _COG4RSIM0_RSIM3_MASK                               0x8
#define _COG4RSIM0_RSIM4_POSN                               0x4
#define _COG4RSIM0_RSIM4_POSITION                           0x4
#define _COG4RSIM0_RSIM4_SIZE                               0x1
#define _COG4RSIM0_RSIM4_LENGTH                             0x1
#define _COG4RSIM0_RSIM4_MASK                               0x10
#define _COG4RSIM0_RSIM5_POSN                               0x5
#define _COG4RSIM0_RSIM5_POSITION                           0x5
#define _COG4RSIM0_RSIM5_SIZE                               0x1
#define _COG4RSIM0_RSIM5_LENGTH                             0x1
#define _COG4RSIM0_RSIM5_MASK                               0x20
#define _COG4RSIM0_RSIM6_POSN                               0x6
#define _COG4RSIM0_RSIM6_POSITION                           0x6
#define _COG4RSIM0_RSIM6_SIZE                               0x1
#define _COG4RSIM0_RSIM6_LENGTH                             0x1
#define _COG4RSIM0_RSIM6_MASK                               0x40
#define _COG4RSIM0_RSIM7_POSN                               0x7
#define _COG4RSIM0_RSIM7_POSITION                           0x7
#define _COG4RSIM0_RSIM7_SIZE                               0x1
#define _COG4RSIM0_RSIM7_LENGTH                             0x1
#define _COG4RSIM0_RSIM7_MASK                               0x80
#define _COG4RSIM0_G4RSIM0_POSN                             0x0
#define _COG4RSIM0_G4RSIM0_POSITION                         0x0
#define _COG4RSIM0_G4RSIM0_SIZE                             0x1
#define _COG4RSIM0_G4RSIM0_LENGTH                           0x1
#define _COG4RSIM0_G4RSIM0_MASK                             0x1
#define _COG4RSIM0_G4RSIM1_POSN                             0x1
#define _COG4RSIM0_G4RSIM1_POSITION                         0x1
#define _COG4RSIM0_G4RSIM1_SIZE                             0x1
#define _COG4RSIM0_G4RSIM1_LENGTH                           0x1
#define _COG4RSIM0_G4RSIM1_MASK                             0x2
#define _COG4RSIM0_G4RSIM2_POSN                             0x2
#define _COG4RSIM0_G4RSIM2_POSITION                         0x2
#define _COG4RSIM0_G4RSIM2_SIZE                             0x1
#define _COG4RSIM0_G4RSIM2_LENGTH                           0x1
#define _COG4RSIM0_G4RSIM2_MASK                             0x4
#define _COG4RSIM0_G4RSIM3_POSN                             0x3
#define _COG4RSIM0_G4RSIM3_POSITION                         0x3
#define _COG4RSIM0_G4RSIM3_SIZE                             0x1
#define _COG4RSIM0_G4RSIM3_LENGTH                           0x1
#define _COG4RSIM0_G4RSIM3_MASK                             0x8
#define _COG4RSIM0_G4RSIM4_POSN                             0x4
#define _COG4RSIM0_G4RSIM4_POSITION                         0x4
#define _COG4RSIM0_G4RSIM4_SIZE                             0x1
#define _COG4RSIM0_G4RSIM4_LENGTH                           0x1
#define _COG4RSIM0_G4RSIM4_MASK                             0x10
#define _COG4RSIM0_G4RSIM5_POSN                             0x5
#define _COG4RSIM0_G4RSIM5_POSITION                         0x5
#define _COG4RSIM0_G4RSIM5_SIZE                             0x1
#define _COG4RSIM0_G4RSIM5_LENGTH                           0x1
#define _COG4RSIM0_G4RSIM5_MASK                             0x20
#define _COG4RSIM0_G4RSIM6_POSN                             0x6
#define _COG4RSIM0_G4RSIM6_POSITION                         0x6
#define _COG4RSIM0_G4RSIM6_SIZE                             0x1
#define _COG4RSIM0_G4RSIM6_LENGTH                           0x1
#define _COG4RSIM0_G4RSIM6_MASK                             0x40
#define _COG4RSIM0_G4RSIM7_POSN                             0x7
#define _COG4RSIM0_G4RSIM7_POSITION                         0x7
#define _COG4RSIM0_G4RSIM7_SIZE                             0x1
#define _COG4RSIM0_G4RSIM7_LENGTH                           0x1
#define _COG4RSIM0_G4RSIM7_MASK                             0x80

// Register: COG4RSIM1
#define COG4RSIM1 COG4RSIM1
extern volatile unsigned char           COG4RSIM1           __at(0x898);
#ifndef _LIB_BUILD
asm("COG4RSIM1 equ 0898h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RSIM8                  :1;
        unsigned RSIM9                  :1;
        unsigned RSIM10                 :1;
        unsigned RSIM11                 :1;
        unsigned RSIM12                 :1;
        unsigned RSIM13                 :1;
        unsigned RSIM14                 :1;
        unsigned RSIM15                 :1;
    };
    struct {
        unsigned G4RSIM8                :1;
        unsigned G4RSIM9                :1;
        unsigned G4RSIM10               :1;
        unsigned G4RSIM11               :1;
        unsigned G4RSIM12               :1;
        unsigned G4RSIM13               :1;
        unsigned G4RSIM14               :1;
        unsigned G4RSIM15               :1;
    };
} COG4RSIM1bits_t;
extern volatile COG4RSIM1bits_t COG4RSIM1bits __at(0x898);
// bitfield macros
#define _COG4RSIM1_RSIM8_POSN                               0x0
#define _COG4RSIM1_RSIM8_POSITION                           0x0
#define _COG4RSIM1_RSIM8_SIZE                               0x1
#define _COG4RSIM1_RSIM8_LENGTH                             0x1
#define _COG4RSIM1_RSIM8_MASK                               0x1
#define _COG4RSIM1_RSIM9_POSN                               0x1
#define _COG4RSIM1_RSIM9_POSITION                           0x1
#define _COG4RSIM1_RSIM9_SIZE                               0x1
#define _COG4RSIM1_RSIM9_LENGTH                             0x1
#define _COG4RSIM1_RSIM9_MASK                               0x2
#define _COG4RSIM1_RSIM10_POSN                              0x2
#define _COG4RSIM1_RSIM10_POSITION                          0x2
#define _COG4RSIM1_RSIM10_SIZE                              0x1
#define _COG4RSIM1_RSIM10_LENGTH                            0x1
#define _COG4RSIM1_RSIM10_MASK                              0x4
#define _COG4RSIM1_RSIM11_POSN                              0x3
#define _COG4RSIM1_RSIM11_POSITION                          0x3
#define _COG4RSIM1_RSIM11_SIZE                              0x1
#define _COG4RSIM1_RSIM11_LENGTH                            0x1
#define _COG4RSIM1_RSIM11_MASK                              0x8
#define _COG4RSIM1_RSIM12_POSN                              0x4
#define _COG4RSIM1_RSIM12_POSITION                          0x4
#define _COG4RSIM1_RSIM12_SIZE                              0x1
#define _COG4RSIM1_RSIM12_LENGTH                            0x1
#define _COG4RSIM1_RSIM12_MASK                              0x10
#define _COG4RSIM1_RSIM13_POSN                              0x5
#define _COG4RSIM1_RSIM13_POSITION                          0x5
#define _COG4RSIM1_RSIM13_SIZE                              0x1
#define _COG4RSIM1_RSIM13_LENGTH                            0x1
#define _COG4RSIM1_RSIM13_MASK                              0x20
#define _COG4RSIM1_RSIM14_POSN                              0x6
#define _COG4RSIM1_RSIM14_POSITION                          0x6
#define _COG4RSIM1_RSIM14_SIZE                              0x1
#define _COG4RSIM1_RSIM14_LENGTH                            0x1
#define _COG4RSIM1_RSIM14_MASK                              0x40
#define _COG4RSIM1_RSIM15_POSN                              0x7
#define _COG4RSIM1_RSIM15_POSITION                          0x7
#define _COG4RSIM1_RSIM15_SIZE                              0x1
#define _COG4RSIM1_RSIM15_LENGTH                            0x1
#define _COG4RSIM1_RSIM15_MASK                              0x80
#define _COG4RSIM1_G4RSIM8_POSN                             0x0
#define _COG4RSIM1_G4RSIM8_POSITION                         0x0
#define _COG4RSIM1_G4RSIM8_SIZE                             0x1
#define _COG4RSIM1_G4RSIM8_LENGTH                           0x1
#define _COG4RSIM1_G4RSIM8_MASK                             0x1
#define _COG4RSIM1_G4RSIM9_POSN                             0x1
#define _COG4RSIM1_G4RSIM9_POSITION                         0x1
#define _COG4RSIM1_G4RSIM9_SIZE                             0x1
#define _COG4RSIM1_G4RSIM9_LENGTH                           0x1
#define _COG4RSIM1_G4RSIM9_MASK                             0x2
#define _COG4RSIM1_G4RSIM10_POSN                            0x2
#define _COG4RSIM1_G4RSIM10_POSITION                        0x2
#define _COG4RSIM1_G4RSIM10_SIZE                            0x1
#define _COG4RSIM1_G4RSIM10_LENGTH                          0x1
#define _COG4RSIM1_G4RSIM10_MASK                            0x4
#define _COG4RSIM1_G4RSIM11_POSN                            0x3
#define _COG4RSIM1_G4RSIM11_POSITION                        0x3
#define _COG4RSIM1_G4RSIM11_SIZE                            0x1
#define _COG4RSIM1_G4RSIM11_LENGTH                          0x1
#define _COG4RSIM1_G4RSIM11_MASK                            0x8
#define _COG4RSIM1_G4RSIM12_POSN                            0x4
#define _COG4RSIM1_G4RSIM12_POSITION                        0x4
#define _COG4RSIM1_G4RSIM12_SIZE                            0x1
#define _COG4RSIM1_G4RSIM12_LENGTH                          0x1
#define _COG4RSIM1_G4RSIM12_MASK                            0x10
#define _COG4RSIM1_G4RSIM13_POSN                            0x5
#define _COG4RSIM1_G4RSIM13_POSITION                        0x5
#define _COG4RSIM1_G4RSIM13_SIZE                            0x1
#define _COG4RSIM1_G4RSIM13_LENGTH                          0x1
#define _COG4RSIM1_G4RSIM13_MASK                            0x20
#define _COG4RSIM1_G4RSIM14_POSN                            0x6
#define _COG4RSIM1_G4RSIM14_POSITION                        0x6
#define _COG4RSIM1_G4RSIM14_SIZE                            0x1
#define _COG4RSIM1_G4RSIM14_LENGTH                          0x1
#define _COG4RSIM1_G4RSIM14_MASK                            0x40
#define _COG4RSIM1_G4RSIM15_POSN                            0x7
#define _COG4RSIM1_G4RSIM15_POSITION                        0x7
#define _COG4RSIM1_G4RSIM15_SIZE                            0x1
#define _COG4RSIM1_G4RSIM15_LENGTH                          0x1
#define _COG4RSIM1_G4RSIM15_MASK                            0x80

// Register: COG4FIS0
#define COG4FIS0 COG4FIS0
extern volatile unsigned char           COG4FIS0            __at(0x899);
#ifndef _LIB_BUILD
asm("COG4FIS0 equ 0899h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FIS0                   :1;
        unsigned FIS1                   :1;
        unsigned FIS2                   :1;
        unsigned FIS3                   :1;
        unsigned FIS4                   :1;
        unsigned FIS5                   :1;
        unsigned FIS6                   :1;
        unsigned FIS7                   :1;
    };
    struct {
        unsigned G4FIS0                 :1;
        unsigned G4FIS1                 :1;
        unsigned G4FIS2                 :1;
        unsigned G4FIS3                 :1;
        unsigned G4FIS4                 :1;
        unsigned G4FIS5                 :1;
        unsigned G4FIS6                 :1;
        unsigned G4FIS7                 :1;
    };
} COG4FIS0bits_t;
extern volatile COG4FIS0bits_t COG4FIS0bits __at(0x899);
// bitfield macros
#define _COG4FIS0_FIS0_POSN                                 0x0
#define _COG4FIS0_FIS0_POSITION                             0x0
#define _COG4FIS0_FIS0_SIZE                                 0x1
#define _COG4FIS0_FIS0_LENGTH                               0x1
#define _COG4FIS0_FIS0_MASK                                 0x1
#define _COG4FIS0_FIS1_POSN                                 0x1
#define _COG4FIS0_FIS1_POSITION                             0x1
#define _COG4FIS0_FIS1_SIZE                                 0x1
#define _COG4FIS0_FIS1_LENGTH                               0x1
#define _COG4FIS0_FIS1_MASK                                 0x2
#define _COG4FIS0_FIS2_POSN                                 0x2
#define _COG4FIS0_FIS2_POSITION                             0x2
#define _COG4FIS0_FIS2_SIZE                                 0x1
#define _COG4FIS0_FIS2_LENGTH                               0x1
#define _COG4FIS0_FIS2_MASK                                 0x4
#define _COG4FIS0_FIS3_POSN                                 0x3
#define _COG4FIS0_FIS3_POSITION                             0x3
#define _COG4FIS0_FIS3_SIZE                                 0x1
#define _COG4FIS0_FIS3_LENGTH                               0x1
#define _COG4FIS0_FIS3_MASK                                 0x8
#define _COG4FIS0_FIS4_POSN                                 0x4
#define _COG4FIS0_FIS4_POSITION                             0x4
#define _COG4FIS0_FIS4_SIZE                                 0x1
#define _COG4FIS0_FIS4_LENGTH                               0x1
#define _COG4FIS0_FIS4_MASK                                 0x10
#define _COG4FIS0_FIS5_POSN                                 0x5
#define _COG4FIS0_FIS5_POSITION                             0x5
#define _COG4FIS0_FIS5_SIZE                                 0x1
#define _COG4FIS0_FIS5_LENGTH                               0x1
#define _COG4FIS0_FIS5_MASK                                 0x20
#define _COG4FIS0_FIS6_POSN                                 0x6
#define _COG4FIS0_FIS6_POSITION                             0x6
#define _COG4FIS0_FIS6_SIZE                                 0x1
#define _COG4FIS0_FIS6_LENGTH                               0x1
#define _COG4FIS0_FIS6_MASK                                 0x40
#define _COG4FIS0_FIS7_POSN                                 0x7
#define _COG4FIS0_FIS7_POSITION                             0x7
#define _COG4FIS0_FIS7_SIZE                                 0x1
#define _COG4FIS0_FIS7_LENGTH                               0x1
#define _COG4FIS0_FIS7_MASK                                 0x80
#define _COG4FIS0_G4FIS0_POSN                               0x0
#define _COG4FIS0_G4FIS0_POSITION                           0x0
#define _COG4FIS0_G4FIS0_SIZE                               0x1
#define _COG4FIS0_G4FIS0_LENGTH                             0x1
#define _COG4FIS0_G4FIS0_MASK                               0x1
#define _COG4FIS0_G4FIS1_POSN                               0x1
#define _COG4FIS0_G4FIS1_POSITION                           0x1
#define _COG4FIS0_G4FIS1_SIZE                               0x1
#define _COG4FIS0_G4FIS1_LENGTH                             0x1
#define _COG4FIS0_G4FIS1_MASK                               0x2
#define _COG4FIS0_G4FIS2_POSN                               0x2
#define _COG4FIS0_G4FIS2_POSITION                           0x2
#define _COG4FIS0_G4FIS2_SIZE                               0x1
#define _COG4FIS0_G4FIS2_LENGTH                             0x1
#define _COG4FIS0_G4FIS2_MASK                               0x4
#define _COG4FIS0_G4FIS3_POSN                               0x3
#define _COG4FIS0_G4FIS3_POSITION                           0x3
#define _COG4FIS0_G4FIS3_SIZE                               0x1
#define _COG4FIS0_G4FIS3_LENGTH                             0x1
#define _COG4FIS0_G4FIS3_MASK                               0x8
#define _COG4FIS0_G4FIS4_POSN                               0x4
#define _COG4FIS0_G4FIS4_POSITION                           0x4
#define _COG4FIS0_G4FIS4_SIZE                               0x1
#define _COG4FIS0_G4FIS4_LENGTH                             0x1
#define _COG4FIS0_G4FIS4_MASK                               0x10
#define _COG4FIS0_G4FIS5_POSN                               0x5
#define _COG4FIS0_G4FIS5_POSITION                           0x5
#define _COG4FIS0_G4FIS5_SIZE                               0x1
#define _COG4FIS0_G4FIS5_LENGTH                             0x1
#define _COG4FIS0_G4FIS5_MASK                               0x20
#define _COG4FIS0_G4FIS6_POSN                               0x6
#define _COG4FIS0_G4FIS6_POSITION                           0x6
#define _COG4FIS0_G4FIS6_SIZE                               0x1
#define _COG4FIS0_G4FIS6_LENGTH                             0x1
#define _COG4FIS0_G4FIS6_MASK                               0x40
#define _COG4FIS0_G4FIS7_POSN                               0x7
#define _COG4FIS0_G4FIS7_POSITION                           0x7
#define _COG4FIS0_G4FIS7_SIZE                               0x1
#define _COG4FIS0_G4FIS7_LENGTH                             0x1
#define _COG4FIS0_G4FIS7_MASK                               0x80

// Register: COG4FIS1
#define COG4FIS1 COG4FIS1
extern volatile unsigned char           COG4FIS1            __at(0x89A);
#ifndef _LIB_BUILD
asm("COG4FIS1 equ 089Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FIS8                   :1;
        unsigned FIS9                   :1;
        unsigned FIS10                  :1;
        unsigned FIS11                  :1;
        unsigned FIS12                  :1;
        unsigned FIS13                  :1;
        unsigned FIS14                  :1;
        unsigned FIS15                  :1;
    };
    struct {
        unsigned G4FIS8                 :1;
        unsigned G4FIS9                 :1;
        unsigned G4FIS10                :1;
        unsigned G4FIS11                :1;
        unsigned G4FIS12                :1;
        unsigned G4FIS13                :1;
        unsigned G4FIS14                :1;
        unsigned G4FIS15                :1;
    };
} COG4FIS1bits_t;
extern volatile COG4FIS1bits_t COG4FIS1bits __at(0x89A);
// bitfield macros
#define _COG4FIS1_FIS8_POSN                                 0x0
#define _COG4FIS1_FIS8_POSITION                             0x0
#define _COG4FIS1_FIS8_SIZE                                 0x1
#define _COG4FIS1_FIS8_LENGTH                               0x1
#define _COG4FIS1_FIS8_MASK                                 0x1
#define _COG4FIS1_FIS9_POSN                                 0x1
#define _COG4FIS1_FIS9_POSITION                             0x1
#define _COG4FIS1_FIS9_SIZE                                 0x1
#define _COG4FIS1_FIS9_LENGTH                               0x1
#define _COG4FIS1_FIS9_MASK                                 0x2
#define _COG4FIS1_FIS10_POSN                                0x2
#define _COG4FIS1_FIS10_POSITION                            0x2
#define _COG4FIS1_FIS10_SIZE                                0x1
#define _COG4FIS1_FIS10_LENGTH                              0x1
#define _COG4FIS1_FIS10_MASK                                0x4
#define _COG4FIS1_FIS11_POSN                                0x3
#define _COG4FIS1_FIS11_POSITION                            0x3
#define _COG4FIS1_FIS11_SIZE                                0x1
#define _COG4FIS1_FIS11_LENGTH                              0x1
#define _COG4FIS1_FIS11_MASK                                0x8
#define _COG4FIS1_FIS12_POSN                                0x4
#define _COG4FIS1_FIS12_POSITION                            0x4
#define _COG4FIS1_FIS12_SIZE                                0x1
#define _COG4FIS1_FIS12_LENGTH                              0x1
#define _COG4FIS1_FIS12_MASK                                0x10
#define _COG4FIS1_FIS13_POSN                                0x5
#define _COG4FIS1_FIS13_POSITION                            0x5
#define _COG4FIS1_FIS13_SIZE                                0x1
#define _COG4FIS1_FIS13_LENGTH                              0x1
#define _COG4FIS1_FIS13_MASK                                0x20
#define _COG4FIS1_FIS14_POSN                                0x6
#define _COG4FIS1_FIS14_POSITION                            0x6
#define _COG4FIS1_FIS14_SIZE                                0x1
#define _COG4FIS1_FIS14_LENGTH                              0x1
#define _COG4FIS1_FIS14_MASK                                0x40
#define _COG4FIS1_FIS15_POSN                                0x7
#define _COG4FIS1_FIS15_POSITION                            0x7
#define _COG4FIS1_FIS15_SIZE                                0x1
#define _COG4FIS1_FIS15_LENGTH                              0x1
#define _COG4FIS1_FIS15_MASK                                0x80
#define _COG4FIS1_G4FIS8_POSN                               0x0
#define _COG4FIS1_G4FIS8_POSITION                           0x0
#define _COG4FIS1_G4FIS8_SIZE                               0x1
#define _COG4FIS1_G4FIS8_LENGTH                             0x1
#define _COG4FIS1_G4FIS8_MASK                               0x1
#define _COG4FIS1_G4FIS9_POSN                               0x1
#define _COG4FIS1_G4FIS9_POSITION                           0x1
#define _COG4FIS1_G4FIS9_SIZE                               0x1
#define _COG4FIS1_G4FIS9_LENGTH                             0x1
#define _COG4FIS1_G4FIS9_MASK                               0x2
#define _COG4FIS1_G4FIS10_POSN                              0x2
#define _COG4FIS1_G4FIS10_POSITION                          0x2
#define _COG4FIS1_G4FIS10_SIZE                              0x1
#define _COG4FIS1_G4FIS10_LENGTH                            0x1
#define _COG4FIS1_G4FIS10_MASK                              0x4
#define _COG4FIS1_G4FIS11_POSN                              0x3
#define _COG4FIS1_G4FIS11_POSITION                          0x3
#define _COG4FIS1_G4FIS11_SIZE                              0x1
#define _COG4FIS1_G4FIS11_LENGTH                            0x1
#define _COG4FIS1_G4FIS11_MASK                              0x8
#define _COG4FIS1_G4FIS12_POSN                              0x4
#define _COG4FIS1_G4FIS12_POSITION                          0x4
#define _COG4FIS1_G4FIS12_SIZE                              0x1
#define _COG4FIS1_G4FIS12_LENGTH                            0x1
#define _COG4FIS1_G4FIS12_MASK                              0x10
#define _COG4FIS1_G4FIS13_POSN                              0x5
#define _COG4FIS1_G4FIS13_POSITION                          0x5
#define _COG4FIS1_G4FIS13_SIZE                              0x1
#define _COG4FIS1_G4FIS13_LENGTH                            0x1
#define _COG4FIS1_G4FIS13_MASK                              0x20
#define _COG4FIS1_G4FIS14_POSN                              0x6
#define _COG4FIS1_G4FIS14_POSITION                          0x6
#define _COG4FIS1_G4FIS14_SIZE                              0x1
#define _COG4FIS1_G4FIS14_LENGTH                            0x1
#define _COG4FIS1_G4FIS14_MASK                              0x40
#define _COG4FIS1_G4FIS15_POSN                              0x7
#define _COG4FIS1_G4FIS15_POSITION                          0x7
#define _COG4FIS1_G4FIS15_SIZE                              0x1
#define _COG4FIS1_G4FIS15_LENGTH                            0x1
#define _COG4FIS1_G4FIS15_MASK                              0x80

// Register: COG4FSIM0
#define COG4FSIM0 COG4FSIM0
extern volatile unsigned char           COG4FSIM0           __at(0x89B);
#ifndef _LIB_BUILD
asm("COG4FSIM0 equ 089Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSIM0                  :1;
        unsigned FSIM1                  :1;
        unsigned FSIM2                  :1;
        unsigned FSIM3                  :1;
        unsigned FSIM4                  :1;
        unsigned FSIM5                  :1;
        unsigned FSIM6                  :1;
        unsigned FSIM7                  :1;
    };
    struct {
        unsigned G4FSIM0                :1;
        unsigned G4FSIM1                :1;
        unsigned G4FSIM2                :1;
        unsigned G4FSIM3                :1;
        unsigned G4FSIM4                :1;
        unsigned G4FSIM5                :1;
        unsigned G4FSIM6                :1;
        unsigned G4FSIM7                :1;
    };
} COG4FSIM0bits_t;
extern volatile COG4FSIM0bits_t COG4FSIM0bits __at(0x89B);
// bitfield macros
#define _COG4FSIM0_FSIM0_POSN                               0x0
#define _COG4FSIM0_FSIM0_POSITION                           0x0
#define _COG4FSIM0_FSIM0_SIZE                               0x1
#define _COG4FSIM0_FSIM0_LENGTH                             0x1
#define _COG4FSIM0_FSIM0_MASK                               0x1
#define _COG4FSIM0_FSIM1_POSN                               0x1
#define _COG4FSIM0_FSIM1_POSITION                           0x1
#define _COG4FSIM0_FSIM1_SIZE                               0x1
#define _COG4FSIM0_FSIM1_LENGTH                             0x1
#define _COG4FSIM0_FSIM1_MASK                               0x2
#define _COG4FSIM0_FSIM2_POSN                               0x2
#define _COG4FSIM0_FSIM2_POSITION                           0x2
#define _COG4FSIM0_FSIM2_SIZE                               0x1
#define _COG4FSIM0_FSIM2_LENGTH                             0x1
#define _COG4FSIM0_FSIM2_MASK                               0x4
#define _COG4FSIM0_FSIM3_POSN                               0x3
#define _COG4FSIM0_FSIM3_POSITION                           0x3
#define _COG4FSIM0_FSIM3_SIZE                               0x1
#define _COG4FSIM0_FSIM3_LENGTH                             0x1
#define _COG4FSIM0_FSIM3_MASK                               0x8
#define _COG4FSIM0_FSIM4_POSN                               0x4
#define _COG4FSIM0_FSIM4_POSITION                           0x4
#define _COG4FSIM0_FSIM4_SIZE                               0x1
#define _COG4FSIM0_FSIM4_LENGTH                             0x1
#define _COG4FSIM0_FSIM4_MASK                               0x10
#define _COG4FSIM0_FSIM5_POSN                               0x5
#define _COG4FSIM0_FSIM5_POSITION                           0x5
#define _COG4FSIM0_FSIM5_SIZE                               0x1
#define _COG4FSIM0_FSIM5_LENGTH                             0x1
#define _COG4FSIM0_FSIM5_MASK                               0x20
#define _COG4FSIM0_FSIM6_POSN                               0x6
#define _COG4FSIM0_FSIM6_POSITION                           0x6
#define _COG4FSIM0_FSIM6_SIZE                               0x1
#define _COG4FSIM0_FSIM6_LENGTH                             0x1
#define _COG4FSIM0_FSIM6_MASK                               0x40
#define _COG4FSIM0_FSIM7_POSN                               0x7
#define _COG4FSIM0_FSIM7_POSITION                           0x7
#define _COG4FSIM0_FSIM7_SIZE                               0x1
#define _COG4FSIM0_FSIM7_LENGTH                             0x1
#define _COG4FSIM0_FSIM7_MASK                               0x80
#define _COG4FSIM0_G4FSIM0_POSN                             0x0
#define _COG4FSIM0_G4FSIM0_POSITION                         0x0
#define _COG4FSIM0_G4FSIM0_SIZE                             0x1
#define _COG4FSIM0_G4FSIM0_LENGTH                           0x1
#define _COG4FSIM0_G4FSIM0_MASK                             0x1
#define _COG4FSIM0_G4FSIM1_POSN                             0x1
#define _COG4FSIM0_G4FSIM1_POSITION                         0x1
#define _COG4FSIM0_G4FSIM1_SIZE                             0x1
#define _COG4FSIM0_G4FSIM1_LENGTH                           0x1
#define _COG4FSIM0_G4FSIM1_MASK                             0x2
#define _COG4FSIM0_G4FSIM2_POSN                             0x2
#define _COG4FSIM0_G4FSIM2_POSITION                         0x2
#define _COG4FSIM0_G4FSIM2_SIZE                             0x1
#define _COG4FSIM0_G4FSIM2_LENGTH                           0x1
#define _COG4FSIM0_G4FSIM2_MASK                             0x4
#define _COG4FSIM0_G4FSIM3_POSN                             0x3
#define _COG4FSIM0_G4FSIM3_POSITION                         0x3
#define _COG4FSIM0_G4FSIM3_SIZE                             0x1
#define _COG4FSIM0_G4FSIM3_LENGTH                           0x1
#define _COG4FSIM0_G4FSIM3_MASK                             0x8
#define _COG4FSIM0_G4FSIM4_POSN                             0x4
#define _COG4FSIM0_G4FSIM4_POSITION                         0x4
#define _COG4FSIM0_G4FSIM4_SIZE                             0x1
#define _COG4FSIM0_G4FSIM4_LENGTH                           0x1
#define _COG4FSIM0_G4FSIM4_MASK                             0x10
#define _COG4FSIM0_G4FSIM5_POSN                             0x5
#define _COG4FSIM0_G4FSIM5_POSITION                         0x5
#define _COG4FSIM0_G4FSIM5_SIZE                             0x1
#define _COG4FSIM0_G4FSIM5_LENGTH                           0x1
#define _COG4FSIM0_G4FSIM5_MASK                             0x20
#define _COG4FSIM0_G4FSIM6_POSN                             0x6
#define _COG4FSIM0_G4FSIM6_POSITION                         0x6
#define _COG4FSIM0_G4FSIM6_SIZE                             0x1
#define _COG4FSIM0_G4FSIM6_LENGTH                           0x1
#define _COG4FSIM0_G4FSIM6_MASK                             0x40
#define _COG4FSIM0_G4FSIM7_POSN                             0x7
#define _COG4FSIM0_G4FSIM7_POSITION                         0x7
#define _COG4FSIM0_G4FSIM7_SIZE                             0x1
#define _COG4FSIM0_G4FSIM7_LENGTH                           0x1
#define _COG4FSIM0_G4FSIM7_MASK                             0x80

// Register: COG4FSIM1
#define COG4FSIM1 COG4FSIM1
extern volatile unsigned char           COG4FSIM1           __at(0x89C);
#ifndef _LIB_BUILD
asm("COG4FSIM1 equ 089Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSIM8                  :1;
        unsigned FSIM9                  :1;
        unsigned FSIM10                 :1;
        unsigned FSIM11                 :1;
        unsigned FSIM12                 :1;
        unsigned FSIM13                 :1;
        unsigned FSIM14                 :1;
        unsigned FSIM15                 :1;
    };
    struct {
        unsigned G4FSIM8                :1;
        unsigned G4FSIM9                :1;
        unsigned G4FSIM10               :1;
        unsigned G4FSIM11               :1;
        unsigned G4FSIM12               :1;
        unsigned G4FSIM13               :1;
        unsigned G4FSIM14               :1;
        unsigned G4FSIM15               :1;
    };
} COG4FSIM1bits_t;
extern volatile COG4FSIM1bits_t COG4FSIM1bits __at(0x89C);
// bitfield macros
#define _COG4FSIM1_FSIM8_POSN                               0x0
#define _COG4FSIM1_FSIM8_POSITION                           0x0
#define _COG4FSIM1_FSIM8_SIZE                               0x1
#define _COG4FSIM1_FSIM8_LENGTH                             0x1
#define _COG4FSIM1_FSIM8_MASK                               0x1
#define _COG4FSIM1_FSIM9_POSN                               0x1
#define _COG4FSIM1_FSIM9_POSITION                           0x1
#define _COG4FSIM1_FSIM9_SIZE                               0x1
#define _COG4FSIM1_FSIM9_LENGTH                             0x1
#define _COG4FSIM1_FSIM9_MASK                               0x2
#define _COG4FSIM1_FSIM10_POSN                              0x2
#define _COG4FSIM1_FSIM10_POSITION                          0x2
#define _COG4FSIM1_FSIM10_SIZE                              0x1
#define _COG4FSIM1_FSIM10_LENGTH                            0x1
#define _COG4FSIM1_FSIM10_MASK                              0x4
#define _COG4FSIM1_FSIM11_POSN                              0x3
#define _COG4FSIM1_FSIM11_POSITION                          0x3
#define _COG4FSIM1_FSIM11_SIZE                              0x1
#define _COG4FSIM1_FSIM11_LENGTH                            0x1
#define _COG4FSIM1_FSIM11_MASK                              0x8
#define _COG4FSIM1_FSIM12_POSN                              0x4
#define _COG4FSIM1_FSIM12_POSITION                          0x4
#define _COG4FSIM1_FSIM12_SIZE                              0x1
#define _COG4FSIM1_FSIM12_LENGTH                            0x1
#define _COG4FSIM1_FSIM12_MASK                              0x10
#define _COG4FSIM1_FSIM13_POSN                              0x5
#define _COG4FSIM1_FSIM13_POSITION                          0x5
#define _COG4FSIM1_FSIM13_SIZE                              0x1
#define _COG4FSIM1_FSIM13_LENGTH                            0x1
#define _COG4FSIM1_FSIM13_MASK                              0x20
#define _COG4FSIM1_FSIM14_POSN                              0x6
#define _COG4FSIM1_FSIM14_POSITION                          0x6
#define _COG4FSIM1_FSIM14_SIZE                              0x1
#define _COG4FSIM1_FSIM14_LENGTH                            0x1
#define _COG4FSIM1_FSIM14_MASK                              0x40
#define _COG4FSIM1_FSIM15_POSN                              0x7
#define _COG4FSIM1_FSIM15_POSITION                          0x7
#define _COG4FSIM1_FSIM15_SIZE                              0x1
#define _COG4FSIM1_FSIM15_LENGTH                            0x1
#define _COG4FSIM1_FSIM15_MASK                              0x80
#define _COG4FSIM1_G4FSIM8_POSN                             0x0
#define _COG4FSIM1_G4FSIM8_POSITION                         0x0
#define _COG4FSIM1_G4FSIM8_SIZE                             0x1
#define _COG4FSIM1_G4FSIM8_LENGTH                           0x1
#define _COG4FSIM1_G4FSIM8_MASK                             0x1
#define _COG4FSIM1_G4FSIM9_POSN                             0x1
#define _COG4FSIM1_G4FSIM9_POSITION                         0x1
#define _COG4FSIM1_G4FSIM9_SIZE                             0x1
#define _COG4FSIM1_G4FSIM9_LENGTH                           0x1
#define _COG4FSIM1_G4FSIM9_MASK                             0x2
#define _COG4FSIM1_G4FSIM10_POSN                            0x2
#define _COG4FSIM1_G4FSIM10_POSITION                        0x2
#define _COG4FSIM1_G4FSIM10_SIZE                            0x1
#define _COG4FSIM1_G4FSIM10_LENGTH                          0x1
#define _COG4FSIM1_G4FSIM10_MASK                            0x4
#define _COG4FSIM1_G4FSIM11_POSN                            0x3
#define _COG4FSIM1_G4FSIM11_POSITION                        0x3
#define _COG4FSIM1_G4FSIM11_SIZE                            0x1
#define _COG4FSIM1_G4FSIM11_LENGTH                          0x1
#define _COG4FSIM1_G4FSIM11_MASK                            0x8
#define _COG4FSIM1_G4FSIM12_POSN                            0x4
#define _COG4FSIM1_G4FSIM12_POSITION                        0x4
#define _COG4FSIM1_G4FSIM12_SIZE                            0x1
#define _COG4FSIM1_G4FSIM12_LENGTH                          0x1
#define _COG4FSIM1_G4FSIM12_MASK                            0x10
#define _COG4FSIM1_G4FSIM13_POSN                            0x5
#define _COG4FSIM1_G4FSIM13_POSITION                        0x5
#define _COG4FSIM1_G4FSIM13_SIZE                            0x1
#define _COG4FSIM1_G4FSIM13_LENGTH                          0x1
#define _COG4FSIM1_G4FSIM13_MASK                            0x20
#define _COG4FSIM1_G4FSIM14_POSN                            0x6
#define _COG4FSIM1_G4FSIM14_POSITION                        0x6
#define _COG4FSIM1_G4FSIM14_SIZE                            0x1
#define _COG4FSIM1_G4FSIM14_LENGTH                          0x1
#define _COG4FSIM1_G4FSIM14_MASK                            0x40
#define _COG4FSIM1_G4FSIM15_POSN                            0x7
#define _COG4FSIM1_G4FSIM15_POSITION                        0x7
#define _COG4FSIM1_G4FSIM15_SIZE                            0x1
#define _COG4FSIM1_G4FSIM15_LENGTH                          0x1
#define _COG4FSIM1_G4FSIM15_MASK                            0x80

// Register: COG4ASD0
#define COG4ASD0 COG4ASD0
extern volatile unsigned char           COG4ASD0            __at(0x89D);
#ifndef _LIB_BUILD
asm("COG4ASD0 equ 089Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned ASDAC                  :2;
        unsigned ASDBD                  :2;
        unsigned ASREN                  :1;
        unsigned ASE                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned ASDAC0                 :1;
        unsigned ASDAC1                 :1;
        unsigned ASDBD0                 :1;
        unsigned ASDBD1                 :1;
        unsigned ARSEN                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned G4ASDAC                :2;
        unsigned G4ASDBD                :2;
        unsigned G4ARSEN                :1;
        unsigned G4ASE                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned G4ASDAC0               :1;
        unsigned G4ASDAC1               :1;
        unsigned G4ASDBD0               :1;
        unsigned G4ASDBD1               :1;
        unsigned G4ASREN                :1;
    };
} COG4ASD0bits_t;
extern volatile COG4ASD0bits_t COG4ASD0bits __at(0x89D);
// bitfield macros
#define _COG4ASD0_ASDAC_POSN                                0x2
#define _COG4ASD0_ASDAC_POSITION                            0x2
#define _COG4ASD0_ASDAC_SIZE                                0x2
#define _COG4ASD0_ASDAC_LENGTH                              0x2
#define _COG4ASD0_ASDAC_MASK                                0xC
#define _COG4ASD0_ASDBD_POSN                                0x4
#define _COG4ASD0_ASDBD_POSITION                            0x4
#define _COG4ASD0_ASDBD_SIZE                                0x2
#define _COG4ASD0_ASDBD_LENGTH                              0x2
#define _COG4ASD0_ASDBD_MASK                                0x30
#define _COG4ASD0_ASREN_POSN                                0x6
#define _COG4ASD0_ASREN_POSITION                            0x6
#define _COG4ASD0_ASREN_SIZE                                0x1
#define _COG4ASD0_ASREN_LENGTH                              0x1
#define _COG4ASD0_ASREN_MASK                                0x40
#define _COG4ASD0_ASE_POSN                                  0x7
#define _COG4ASD0_ASE_POSITION                              0x7
#define _COG4ASD0_ASE_SIZE                                  0x1
#define _COG4ASD0_ASE_LENGTH                                0x1
#define _COG4ASD0_ASE_MASK                                  0x80
#define _COG4ASD0_ASDAC0_POSN                               0x2
#define _COG4ASD0_ASDAC0_POSITION                           0x2
#define _COG4ASD0_ASDAC0_SIZE                               0x1
#define _COG4ASD0_ASDAC0_LENGTH                             0x1
#define _COG4ASD0_ASDAC0_MASK                               0x4
#define _COG4ASD0_ASDAC1_POSN                               0x3
#define _COG4ASD0_ASDAC1_POSITION                           0x3
#define _COG4ASD0_ASDAC1_SIZE                               0x1
#define _COG4ASD0_ASDAC1_LENGTH                             0x1
#define _COG4ASD0_ASDAC1_MASK                               0x8
#define _COG4ASD0_ASDBD0_POSN                               0x4
#define _COG4ASD0_ASDBD0_POSITION                           0x4
#define _COG4ASD0_ASDBD0_SIZE                               0x1
#define _COG4ASD0_ASDBD0_LENGTH                             0x1
#define _COG4ASD0_ASDBD0_MASK                               0x10
#define _COG4ASD0_ASDBD1_POSN                               0x5
#define _COG4ASD0_ASDBD1_POSITION                           0x5
#define _COG4ASD0_ASDBD1_SIZE                               0x1
#define _COG4ASD0_ASDBD1_LENGTH                             0x1
#define _COG4ASD0_ASDBD1_MASK                               0x20
#define _COG4ASD0_ARSEN_POSN                                0x6
#define _COG4ASD0_ARSEN_POSITION                            0x6
#define _COG4ASD0_ARSEN_SIZE                                0x1
#define _COG4ASD0_ARSEN_LENGTH                              0x1
#define _COG4ASD0_ARSEN_MASK                                0x40
#define _COG4ASD0_G4ASDAC_POSN                              0x2
#define _COG4ASD0_G4ASDAC_POSITION                          0x2
#define _COG4ASD0_G4ASDAC_SIZE                              0x2
#define _COG4ASD0_G4ASDAC_LENGTH                            0x2
#define _COG4ASD0_G4ASDAC_MASK                              0xC
#define _COG4ASD0_G4ASDBD_POSN                              0x4
#define _COG4ASD0_G4ASDBD_POSITION                          0x4
#define _COG4ASD0_G4ASDBD_SIZE                              0x2
#define _COG4ASD0_G4ASDBD_LENGTH                            0x2
#define _COG4ASD0_G4ASDBD_MASK                              0x30
#define _COG4ASD0_G4ARSEN_POSN                              0x6
#define _COG4ASD0_G4ARSEN_POSITION                          0x6
#define _COG4ASD0_G4ARSEN_SIZE                              0x1
#define _COG4ASD0_G4ARSEN_LENGTH                            0x1
#define _COG4ASD0_G4ARSEN_MASK                              0x40
#define _COG4ASD0_G4ASE_POSN                                0x7
#define _COG4ASD0_G4ASE_POSITION                            0x7
#define _COG4ASD0_G4ASE_SIZE                                0x1
#define _COG4ASD0_G4ASE_LENGTH                              0x1
#define _COG4ASD0_G4ASE_MASK                                0x80
#define _COG4ASD0_G4ASDAC0_POSN                             0x2
#define _COG4ASD0_G4ASDAC0_POSITION                         0x2
#define _COG4ASD0_G4ASDAC0_SIZE                             0x1
#define _COG4ASD0_G4ASDAC0_LENGTH                           0x1
#define _COG4ASD0_G4ASDAC0_MASK                             0x4
#define _COG4ASD0_G4ASDAC1_POSN                             0x3
#define _COG4ASD0_G4ASDAC1_POSITION                         0x3
#define _COG4ASD0_G4ASDAC1_SIZE                             0x1
#define _COG4ASD0_G4ASDAC1_LENGTH                           0x1
#define _COG4ASD0_G4ASDAC1_MASK                             0x8
#define _COG4ASD0_G4ASDBD0_POSN                             0x4
#define _COG4ASD0_G4ASDBD0_POSITION                         0x4
#define _COG4ASD0_G4ASDBD0_SIZE                             0x1
#define _COG4ASD0_G4ASDBD0_LENGTH                           0x1
#define _COG4ASD0_G4ASDBD0_MASK                             0x10
#define _COG4ASD0_G4ASDBD1_POSN                             0x5
#define _COG4ASD0_G4ASDBD1_POSITION                         0x5
#define _COG4ASD0_G4ASDBD1_SIZE                             0x1
#define _COG4ASD0_G4ASDBD1_LENGTH                           0x1
#define _COG4ASD0_G4ASDBD1_MASK                             0x20
#define _COG4ASD0_G4ASREN_POSN                              0x6
#define _COG4ASD0_G4ASREN_POSITION                          0x6
#define _COG4ASD0_G4ASREN_SIZE                              0x1
#define _COG4ASD0_G4ASREN_LENGTH                            0x1
#define _COG4ASD0_G4ASREN_MASK                              0x40

// Register: COG4ASD1
#define COG4ASD1 COG4ASD1
extern volatile unsigned char           COG4ASD1            __at(0x89E);
#ifndef _LIB_BUILD
asm("COG4ASD1 equ 089Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned AS0E                   :1;
        unsigned AS1E                   :1;
        unsigned AS2E                   :1;
        unsigned AS3E                   :1;
        unsigned AS4E                   :1;
        unsigned AS5E                   :1;
        unsigned AS6E                   :1;
        unsigned AS7E                   :1;
    };
    struct {
        unsigned G4AS0E                 :1;
        unsigned G4AS1E                 :1;
        unsigned G4AS2E                 :1;
        unsigned G4AS3E                 :1;
        unsigned G4AS4E                 :1;
        unsigned G4AS5E                 :1;
        unsigned G4AS6E                 :1;
        unsigned G4AS7E                 :1;
    };
} COG4ASD1bits_t;
extern volatile COG4ASD1bits_t COG4ASD1bits __at(0x89E);
// bitfield macros
#define _COG4ASD1_AS0E_POSN                                 0x0
#define _COG4ASD1_AS0E_POSITION                             0x0
#define _COG4ASD1_AS0E_SIZE                                 0x1
#define _COG4ASD1_AS0E_LENGTH                               0x1
#define _COG4ASD1_AS0E_MASK                                 0x1
#define _COG4ASD1_AS1E_POSN                                 0x1
#define _COG4ASD1_AS1E_POSITION                             0x1
#define _COG4ASD1_AS1E_SIZE                                 0x1
#define _COG4ASD1_AS1E_LENGTH                               0x1
#define _COG4ASD1_AS1E_MASK                                 0x2
#define _COG4ASD1_AS2E_POSN                                 0x2
#define _COG4ASD1_AS2E_POSITION                             0x2
#define _COG4ASD1_AS2E_SIZE                                 0x1
#define _COG4ASD1_AS2E_LENGTH                               0x1
#define _COG4ASD1_AS2E_MASK                                 0x4
#define _COG4ASD1_AS3E_POSN                                 0x3
#define _COG4ASD1_AS3E_POSITION                             0x3
#define _COG4ASD1_AS3E_SIZE                                 0x1
#define _COG4ASD1_AS3E_LENGTH                               0x1
#define _COG4ASD1_AS3E_MASK                                 0x8
#define _COG4ASD1_AS4E_POSN                                 0x4
#define _COG4ASD1_AS4E_POSITION                             0x4
#define _COG4ASD1_AS4E_SIZE                                 0x1
#define _COG4ASD1_AS4E_LENGTH                               0x1
#define _COG4ASD1_AS4E_MASK                                 0x10
#define _COG4ASD1_AS5E_POSN                                 0x5
#define _COG4ASD1_AS5E_POSITION                             0x5
#define _COG4ASD1_AS5E_SIZE                                 0x1
#define _COG4ASD1_AS5E_LENGTH                               0x1
#define _COG4ASD1_AS5E_MASK                                 0x20
#define _COG4ASD1_AS6E_POSN                                 0x6
#define _COG4ASD1_AS6E_POSITION                             0x6
#define _COG4ASD1_AS6E_SIZE                                 0x1
#define _COG4ASD1_AS6E_LENGTH                               0x1
#define _COG4ASD1_AS6E_MASK                                 0x40
#define _COG4ASD1_AS7E_POSN                                 0x7
#define _COG4ASD1_AS7E_POSITION                             0x7
#define _COG4ASD1_AS7E_SIZE                                 0x1
#define _COG4ASD1_AS7E_LENGTH                               0x1
#define _COG4ASD1_AS7E_MASK                                 0x80
#define _COG4ASD1_G4AS0E_POSN                               0x0
#define _COG4ASD1_G4AS0E_POSITION                           0x0
#define _COG4ASD1_G4AS0E_SIZE                               0x1
#define _COG4ASD1_G4AS0E_LENGTH                             0x1
#define _COG4ASD1_G4AS0E_MASK                               0x1
#define _COG4ASD1_G4AS1E_POSN                               0x1
#define _COG4ASD1_G4AS1E_POSITION                           0x1
#define _COG4ASD1_G4AS1E_SIZE                               0x1
#define _COG4ASD1_G4AS1E_LENGTH                             0x1
#define _COG4ASD1_G4AS1E_MASK                               0x2
#define _COG4ASD1_G4AS2E_POSN                               0x2
#define _COG4ASD1_G4AS2E_POSITION                           0x2
#define _COG4ASD1_G4AS2E_SIZE                               0x1
#define _COG4ASD1_G4AS2E_LENGTH                             0x1
#define _COG4ASD1_G4AS2E_MASK                               0x4
#define _COG4ASD1_G4AS3E_POSN                               0x3
#define _COG4ASD1_G4AS3E_POSITION                           0x3
#define _COG4ASD1_G4AS3E_SIZE                               0x1
#define _COG4ASD1_G4AS3E_LENGTH                             0x1
#define _COG4ASD1_G4AS3E_MASK                               0x8
#define _COG4ASD1_G4AS4E_POSN                               0x4
#define _COG4ASD1_G4AS4E_POSITION                           0x4
#define _COG4ASD1_G4AS4E_SIZE                               0x1
#define _COG4ASD1_G4AS4E_LENGTH                             0x1
#define _COG4ASD1_G4AS4E_MASK                               0x10
#define _COG4ASD1_G4AS5E_POSN                               0x5
#define _COG4ASD1_G4AS5E_POSITION                           0x5
#define _COG4ASD1_G4AS5E_SIZE                               0x1
#define _COG4ASD1_G4AS5E_LENGTH                             0x1
#define _COG4ASD1_G4AS5E_MASK                               0x20
#define _COG4ASD1_G4AS6E_POSN                               0x6
#define _COG4ASD1_G4AS6E_POSITION                           0x6
#define _COG4ASD1_G4AS6E_SIZE                               0x1
#define _COG4ASD1_G4AS6E_LENGTH                             0x1
#define _COG4ASD1_G4AS6E_MASK                               0x40
#define _COG4ASD1_G4AS7E_POSN                               0x7
#define _COG4ASD1_G4AS7E_POSITION                           0x7
#define _COG4ASD1_G4AS7E_SIZE                               0x1
#define _COG4ASD1_G4AS7E_LENGTH                             0x1
#define _COG4ASD1_G4AS7E_MASK                               0x80

// Register: COG4STR
#define COG4STR COG4STR
extern volatile unsigned char           COG4STR             __at(0x89F);
#ifndef _LIB_BUILD
asm("COG4STR equ 089Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned SDATA                  :1;
        unsigned SDATB                  :1;
        unsigned SDATC                  :1;
        unsigned SDATD                  :1;
    };
    struct {
        unsigned G4STRA                 :1;
        unsigned G4STRB                 :1;
        unsigned G4STRC                 :1;
        unsigned G4STRD                 :1;
        unsigned G4SDATA                :1;
        unsigned G4SDATB                :1;
        unsigned G4SDATC                :1;
        unsigned G4SDATD                :1;
    };
} COG4STRbits_t;
extern volatile COG4STRbits_t COG4STRbits __at(0x89F);
// bitfield macros
#define _COG4STR_STRA_POSN                                  0x0
#define _COG4STR_STRA_POSITION                              0x0
#define _COG4STR_STRA_SIZE                                  0x1
#define _COG4STR_STRA_LENGTH                                0x1
#define _COG4STR_STRA_MASK                                  0x1
#define _COG4STR_STRB_POSN                                  0x1
#define _COG4STR_STRB_POSITION                              0x1
#define _COG4STR_STRB_SIZE                                  0x1
#define _COG4STR_STRB_LENGTH                                0x1
#define _COG4STR_STRB_MASK                                  0x2
#define _COG4STR_STRC_POSN                                  0x2
#define _COG4STR_STRC_POSITION                              0x2
#define _COG4STR_STRC_SIZE                                  0x1
#define _COG4STR_STRC_LENGTH                                0x1
#define _COG4STR_STRC_MASK                                  0x4
#define _COG4STR_STRD_POSN                                  0x3
#define _COG4STR_STRD_POSITION                              0x3
#define _COG4STR_STRD_SIZE                                  0x1
#define _COG4STR_STRD_LENGTH                                0x1
#define _COG4STR_STRD_MASK                                  0x8
#define _COG4STR_SDATA_POSN                                 0x4
#define _COG4STR_SDATA_POSITION                             0x4
#define _COG4STR_SDATA_SIZE                                 0x1
#define _COG4STR_SDATA_LENGTH                               0x1
#define _COG4STR_SDATA_MASK                                 0x10
#define _COG4STR_SDATB_POSN                                 0x5
#define _COG4STR_SDATB_POSITION                             0x5
#define _COG4STR_SDATB_SIZE                                 0x1
#define _COG4STR_SDATB_LENGTH                               0x1
#define _COG4STR_SDATB_MASK                                 0x20
#define _COG4STR_SDATC_POSN                                 0x6
#define _COG4STR_SDATC_POSITION                             0x6
#define _COG4STR_SDATC_SIZE                                 0x1
#define _COG4STR_SDATC_LENGTH                               0x1
#define _COG4STR_SDATC_MASK                                 0x40
#define _COG4STR_SDATD_POSN                                 0x7
#define _COG4STR_SDATD_POSITION                             0x7
#define _COG4STR_SDATD_SIZE                                 0x1
#define _COG4STR_SDATD_LENGTH                               0x1
#define _COG4STR_SDATD_MASK                                 0x80
#define _COG4STR_G4STRA_POSN                                0x0
#define _COG4STR_G4STRA_POSITION                            0x0
#define _COG4STR_G4STRA_SIZE                                0x1
#define _COG4STR_G4STRA_LENGTH                              0x1
#define _COG4STR_G4STRA_MASK                                0x1
#define _COG4STR_G4STRB_POSN                                0x1
#define _COG4STR_G4STRB_POSITION                            0x1
#define _COG4STR_G4STRB_SIZE                                0x1
#define _COG4STR_G4STRB_LENGTH                              0x1
#define _COG4STR_G4STRB_MASK                                0x2
#define _COG4STR_G4STRC_POSN                                0x2
#define _COG4STR_G4STRC_POSITION                            0x2
#define _COG4STR_G4STRC_SIZE                                0x1
#define _COG4STR_G4STRC_LENGTH                              0x1
#define _COG4STR_G4STRC_MASK                                0x4
#define _COG4STR_G4STRD_POSN                                0x3
#define _COG4STR_G4STRD_POSITION                            0x3
#define _COG4STR_G4STRD_SIZE                                0x1
#define _COG4STR_G4STRD_LENGTH                              0x1
#define _COG4STR_G4STRD_MASK                                0x8
#define _COG4STR_G4SDATA_POSN                               0x4
#define _COG4STR_G4SDATA_POSITION                           0x4
#define _COG4STR_G4SDATA_SIZE                               0x1
#define _COG4STR_G4SDATA_LENGTH                             0x1
#define _COG4STR_G4SDATA_MASK                               0x10
#define _COG4STR_G4SDATB_POSN                               0x5
#define _COG4STR_G4SDATB_POSITION                           0x5
#define _COG4STR_G4SDATB_SIZE                               0x1
#define _COG4STR_G4SDATB_LENGTH                             0x1
#define _COG4STR_G4SDATB_MASK                               0x20
#define _COG4STR_G4SDATC_POSN                               0x6
#define _COG4STR_G4SDATC_POSITION                           0x6
#define _COG4STR_G4SDATC_SIZE                               0x1
#define _COG4STR_G4SDATC_LENGTH                             0x1
#define _COG4STR_G4SDATC_MASK                               0x40
#define _COG4STR_G4SDATD_POSN                               0x7
#define _COG4STR_G4SDATD_POSITION                           0x7
#define _COG4STR_G4SDATD_SIZE                               0x1
#define _COG4STR_G4SDATD_LENGTH                             0x1
#define _COG4STR_G4SDATD_MASK                               0x80

// Register: CM4CON0
#define CM4CON0 CM4CON0
extern volatile unsigned char           CM4CON0             __at(0x90C);
#ifndef _LIB_BUILD
asm("CM4CON0 equ 090Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SYNC                   :1;
        unsigned HYS                    :1;
        unsigned                        :1;
        unsigned ZLF                    :1;
        unsigned POL                    :1;
        unsigned                        :1;
        unsigned OUT                    :1;
        unsigned ON                     :1;
    };
    struct {
        unsigned C4SYNC                 :1;
        unsigned C4HYS                  :1;
        unsigned C4SP                   :1;
        unsigned C4ZLF                  :1;
        unsigned C4POL                  :1;
        unsigned                        :1;
        unsigned C4OUT                  :1;
        unsigned C4ON                   :1;
    };
} CM4CON0bits_t;
extern volatile CM4CON0bits_t CM4CON0bits __at(0x90C);
// bitfield macros
#define _CM4CON0_SYNC_POSN                                  0x0
#define _CM4CON0_SYNC_POSITION                              0x0
#define _CM4CON0_SYNC_SIZE                                  0x1
#define _CM4CON0_SYNC_LENGTH                                0x1
#define _CM4CON0_SYNC_MASK                                  0x1
#define _CM4CON0_HYS_POSN                                   0x1
#define _CM4CON0_HYS_POSITION                               0x1
#define _CM4CON0_HYS_SIZE                                   0x1
#define _CM4CON0_HYS_LENGTH                                 0x1
#define _CM4CON0_HYS_MASK                                   0x2
#define _CM4CON0_ZLF_POSN                                   0x3
#define _CM4CON0_ZLF_POSITION                               0x3
#define _CM4CON0_ZLF_SIZE                                   0x1
#define _CM4CON0_ZLF_LENGTH                                 0x1
#define _CM4CON0_ZLF_MASK                                   0x8
#define _CM4CON0_POL_POSN                                   0x4
#define _CM4CON0_POL_POSITION                               0x4
#define _CM4CON0_POL_SIZE                                   0x1
#define _CM4CON0_POL_LENGTH                                 0x1
#define _CM4CON0_POL_MASK                                   0x10
#define _CM4CON0_OUT_POSN                                   0x6
#define _CM4CON0_OUT_POSITION                               0x6
#define _CM4CON0_OUT_SIZE                                   0x1
#define _CM4CON0_OUT_LENGTH                                 0x1
#define _CM4CON0_OUT_MASK                                   0x40
#define _CM4CON0_ON_POSN                                    0x7
#define _CM4CON0_ON_POSITION                                0x7
#define _CM4CON0_ON_SIZE                                    0x1
#define _CM4CON0_ON_LENGTH                                  0x1
#define _CM4CON0_ON_MASK                                    0x80
#define _CM4CON0_C4SYNC_POSN                                0x0
#define _CM4CON0_C4SYNC_POSITION                            0x0
#define _CM4CON0_C4SYNC_SIZE                                0x1
#define _CM4CON0_C4SYNC_LENGTH                              0x1
#define _CM4CON0_C4SYNC_MASK                                0x1
#define _CM4CON0_C4HYS_POSN                                 0x1
#define _CM4CON0_C4HYS_POSITION                             0x1
#define _CM4CON0_C4HYS_SIZE                                 0x1
#define _CM4CON0_C4HYS_LENGTH                               0x1
#define _CM4CON0_C4HYS_MASK                                 0x2
#define _CM4CON0_C4SP_POSN                                  0x2
#define _CM4CON0_C4SP_POSITION                              0x2
#define _CM4CON0_C4SP_SIZE                                  0x1
#define _CM4CON0_C4SP_LENGTH                                0x1
#define _CM4CON0_C4SP_MASK                                  0x4
#define _CM4CON0_C4ZLF_POSN                                 0x3
#define _CM4CON0_C4ZLF_POSITION                             0x3
#define _CM4CON0_C4ZLF_SIZE                                 0x1
#define _CM4CON0_C4ZLF_LENGTH                               0x1
#define _CM4CON0_C4ZLF_MASK                                 0x8
#define _CM4CON0_C4POL_POSN                                 0x4
#define _CM4CON0_C4POL_POSITION                             0x4
#define _CM4CON0_C4POL_SIZE                                 0x1
#define _CM4CON0_C4POL_LENGTH                               0x1
#define _CM4CON0_C4POL_MASK                                 0x10
#define _CM4CON0_C4OUT_POSN                                 0x6
#define _CM4CON0_C4OUT_POSITION                             0x6
#define _CM4CON0_C4OUT_SIZE                                 0x1
#define _CM4CON0_C4OUT_LENGTH                               0x1
#define _CM4CON0_C4OUT_MASK                                 0x40
#define _CM4CON0_C4ON_POSN                                  0x7
#define _CM4CON0_C4ON_POSITION                              0x7
#define _CM4CON0_C4ON_SIZE                                  0x1
#define _CM4CON0_C4ON_LENGTH                                0x1
#define _CM4CON0_C4ON_MASK                                  0x80

// Register: CM4CON1
#define CM4CON1 CM4CON1
extern volatile unsigned char           CM4CON1             __at(0x90D);
#ifndef _LIB_BUILD
asm("CM4CON1 equ 090Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTN                   :1;
        unsigned INTP                   :1;
    };
    struct {
        unsigned C4INTN                 :1;
        unsigned C4INTP                 :1;
    };
} CM4CON1bits_t;
extern volatile CM4CON1bits_t CM4CON1bits __at(0x90D);
// bitfield macros
#define _CM4CON1_INTN_POSN                                  0x0
#define _CM4CON1_INTN_POSITION                              0x0
#define _CM4CON1_INTN_SIZE                                  0x1
#define _CM4CON1_INTN_LENGTH                                0x1
#define _CM4CON1_INTN_MASK                                  0x1
#define _CM4CON1_INTP_POSN                                  0x1
#define _CM4CON1_INTP_POSITION                              0x1
#define _CM4CON1_INTP_SIZE                                  0x1
#define _CM4CON1_INTP_LENGTH                                0x1
#define _CM4CON1_INTP_MASK                                  0x2
#define _CM4CON1_C4INTN_POSN                                0x0
#define _CM4CON1_C4INTN_POSITION                            0x0
#define _CM4CON1_C4INTN_SIZE                                0x1
#define _CM4CON1_C4INTN_LENGTH                              0x1
#define _CM4CON1_C4INTN_MASK                                0x1
#define _CM4CON1_C4INTP_POSN                                0x1
#define _CM4CON1_C4INTP_POSITION                            0x1
#define _CM4CON1_C4INTP_SIZE                                0x1
#define _CM4CON1_C4INTP_LENGTH                              0x1
#define _CM4CON1_C4INTP_MASK                                0x2

// Register: CM4NSEL
#define CM4NSEL CM4NSEL
extern volatile unsigned char           CM4NSEL             __at(0x90E);
#ifndef _LIB_BUILD
asm("CM4NSEL equ 090Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :4;
    };
    struct {
        unsigned C4NCH                  :4;
    };
    struct {
        unsigned C4NCH0                 :1;
        unsigned C4NCH1                 :1;
        unsigned C4NCH2                 :1;
        unsigned C4NCH3                 :1;
    };
} CM4NSELbits_t;
extern volatile CM4NSELbits_t CM4NSELbits __at(0x90E);
// bitfield macros
#define _CM4NSEL_NCH_POSN                                   0x0
#define _CM4NSEL_NCH_POSITION                               0x0
#define _CM4NSEL_NCH_SIZE                                   0x4
#define _CM4NSEL_NCH_LENGTH                                 0x4
#define _CM4NSEL_NCH_MASK                                   0xF
#define _CM4NSEL_C4NCH_POSN                                 0x0
#define _CM4NSEL_C4NCH_POSITION                             0x0
#define _CM4NSEL_C4NCH_SIZE                                 0x4
#define _CM4NSEL_C4NCH_LENGTH                               0x4
#define _CM4NSEL_C4NCH_MASK                                 0xF
#define _CM4NSEL_C4NCH0_POSN                                0x0
#define _CM4NSEL_C4NCH0_POSITION                            0x0
#define _CM4NSEL_C4NCH0_SIZE                                0x1
#define _CM4NSEL_C4NCH0_LENGTH                              0x1
#define _CM4NSEL_C4NCH0_MASK                                0x1
#define _CM4NSEL_C4NCH1_POSN                                0x1
#define _CM4NSEL_C4NCH1_POSITION                            0x1
#define _CM4NSEL_C4NCH1_SIZE                                0x1
#define _CM4NSEL_C4NCH1_LENGTH                              0x1
#define _CM4NSEL_C4NCH1_MASK                                0x2
#define _CM4NSEL_C4NCH2_POSN                                0x2
#define _CM4NSEL_C4NCH2_POSITION                            0x2
#define _CM4NSEL_C4NCH2_SIZE                                0x1
#define _CM4NSEL_C4NCH2_LENGTH                              0x1
#define _CM4NSEL_C4NCH2_MASK                                0x4
#define _CM4NSEL_C4NCH3_POSN                                0x3
#define _CM4NSEL_C4NCH3_POSITION                            0x3
#define _CM4NSEL_C4NCH3_SIZE                                0x1
#define _CM4NSEL_C4NCH3_LENGTH                              0x1
#define _CM4NSEL_C4NCH3_MASK                                0x8

// Register: CM4PSEL
#define CM4PSEL CM4PSEL
extern volatile unsigned char           CM4PSEL             __at(0x90F);
#ifndef _LIB_BUILD
asm("CM4PSEL equ 090Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :4;
    };
    struct {
        unsigned PCH0                   :1;
        unsigned PCH1                   :1;
        unsigned PCH2                   :1;
        unsigned PCH3                   :1;
    };
    struct {
        unsigned C4PCH                  :4;
    };
    struct {
        unsigned C4PCH0                 :1;
        unsigned C4PCH1                 :1;
        unsigned C4PCH2                 :1;
        unsigned C4PCH3                 :1;
    };
} CM4PSELbits_t;
extern volatile CM4PSELbits_t CM4PSELbits __at(0x90F);
// bitfield macros
#define _CM4PSEL_PCH_POSN                                   0x0
#define _CM4PSEL_PCH_POSITION                               0x0
#define _CM4PSEL_PCH_SIZE                                   0x4
#define _CM4PSEL_PCH_LENGTH                                 0x4
#define _CM4PSEL_PCH_MASK                                   0xF
#define _CM4PSEL_PCH0_POSN                                  0x0
#define _CM4PSEL_PCH0_POSITION                              0x0
#define _CM4PSEL_PCH0_SIZE                                  0x1
#define _CM4PSEL_PCH0_LENGTH                                0x1
#define _CM4PSEL_PCH0_MASK                                  0x1
#define _CM4PSEL_PCH1_POSN                                  0x1
#define _CM4PSEL_PCH1_POSITION                              0x1
#define _CM4PSEL_PCH1_SIZE                                  0x1
#define _CM4PSEL_PCH1_LENGTH                                0x1
#define _CM4PSEL_PCH1_MASK                                  0x2
#define _CM4PSEL_PCH2_POSN                                  0x2
#define _CM4PSEL_PCH2_POSITION                              0x2
#define _CM4PSEL_PCH2_SIZE                                  0x1
#define _CM4PSEL_PCH2_LENGTH                                0x1
#define _CM4PSEL_PCH2_MASK                                  0x4
#define _CM4PSEL_PCH3_POSN                                  0x3
#define _CM4PSEL_PCH3_POSITION                              0x3
#define _CM4PSEL_PCH3_SIZE                                  0x1
#define _CM4PSEL_PCH3_LENGTH                                0x1
#define _CM4PSEL_PCH3_MASK                                  0x8
#define _CM4PSEL_C4PCH_POSN                                 0x0
#define _CM4PSEL_C4PCH_POSITION                             0x0
#define _CM4PSEL_C4PCH_SIZE                                 0x4
#define _CM4PSEL_C4PCH_LENGTH                               0x4
#define _CM4PSEL_C4PCH_MASK                                 0xF
#define _CM4PSEL_C4PCH0_POSN                                0x0
#define _CM4PSEL_C4PCH0_POSITION                            0x0
#define _CM4PSEL_C4PCH0_SIZE                                0x1
#define _CM4PSEL_C4PCH0_LENGTH                              0x1
#define _CM4PSEL_C4PCH0_MASK                                0x1
#define _CM4PSEL_C4PCH1_POSN                                0x1
#define _CM4PSEL_C4PCH1_POSITION                            0x1
#define _CM4PSEL_C4PCH1_SIZE                                0x1
#define _CM4PSEL_C4PCH1_LENGTH                              0x1
#define _CM4PSEL_C4PCH1_MASK                                0x2
#define _CM4PSEL_C4PCH2_POSN                                0x2
#define _CM4PSEL_C4PCH2_POSITION                            0x2
#define _CM4PSEL_C4PCH2_SIZE                                0x1
#define _CM4PSEL_C4PCH2_LENGTH                              0x1
#define _CM4PSEL_C4PCH2_MASK                                0x4
#define _CM4PSEL_C4PCH3_POSN                                0x3
#define _CM4PSEL_C4PCH3_POSITION                            0x3
#define _CM4PSEL_C4PCH3_SIZE                                0x1
#define _CM4PSEL_C4PCH3_LENGTH                              0x1
#define _CM4PSEL_C4PCH3_MASK                                0x8

// Register: CM5CON0
#define CM5CON0 CM5CON0
extern volatile unsigned char           CM5CON0             __at(0x910);
#ifndef _LIB_BUILD
asm("CM5CON0 equ 0910h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SYNC                   :1;
        unsigned HYS                    :1;
        unsigned                        :1;
        unsigned ZLF                    :1;
        unsigned POL                    :1;
        unsigned                        :1;
        unsigned OUT                    :1;
        unsigned ON                     :1;
    };
    struct {
        unsigned C5SYNC                 :1;
        unsigned C5HYS                  :1;
        unsigned C5SP                   :1;
        unsigned C5ZLF                  :1;
        unsigned C5POL                  :1;
        unsigned                        :1;
        unsigned C5OUT                  :1;
        unsigned C5ON                   :1;
    };
} CM5CON0bits_t;
extern volatile CM5CON0bits_t CM5CON0bits __at(0x910);
// bitfield macros
#define _CM5CON0_SYNC_POSN                                  0x0
#define _CM5CON0_SYNC_POSITION                              0x0
#define _CM5CON0_SYNC_SIZE                                  0x1
#define _CM5CON0_SYNC_LENGTH                                0x1
#define _CM5CON0_SYNC_MASK                                  0x1
#define _CM5CON0_HYS_POSN                                   0x1
#define _CM5CON0_HYS_POSITION                               0x1
#define _CM5CON0_HYS_SIZE                                   0x1
#define _CM5CON0_HYS_LENGTH                                 0x1
#define _CM5CON0_HYS_MASK                                   0x2
#define _CM5CON0_ZLF_POSN                                   0x3
#define _CM5CON0_ZLF_POSITION                               0x3
#define _CM5CON0_ZLF_SIZE                                   0x1
#define _CM5CON0_ZLF_LENGTH                                 0x1
#define _CM5CON0_ZLF_MASK                                   0x8
#define _CM5CON0_POL_POSN                                   0x4
#define _CM5CON0_POL_POSITION                               0x4
#define _CM5CON0_POL_SIZE                                   0x1
#define _CM5CON0_POL_LENGTH                                 0x1
#define _CM5CON0_POL_MASK                                   0x10
#define _CM5CON0_OUT_POSN                                   0x6
#define _CM5CON0_OUT_POSITION                               0x6
#define _CM5CON0_OUT_SIZE                                   0x1
#define _CM5CON0_OUT_LENGTH                                 0x1
#define _CM5CON0_OUT_MASK                                   0x40
#define _CM5CON0_ON_POSN                                    0x7
#define _CM5CON0_ON_POSITION                                0x7
#define _CM5CON0_ON_SIZE                                    0x1
#define _CM5CON0_ON_LENGTH                                  0x1
#define _CM5CON0_ON_MASK                                    0x80
#define _CM5CON0_C5SYNC_POSN                                0x0
#define _CM5CON0_C5SYNC_POSITION                            0x0
#define _CM5CON0_C5SYNC_SIZE                                0x1
#define _CM5CON0_C5SYNC_LENGTH                              0x1
#define _CM5CON0_C5SYNC_MASK                                0x1
#define _CM5CON0_C5HYS_POSN                                 0x1
#define _CM5CON0_C5HYS_POSITION                             0x1
#define _CM5CON0_C5HYS_SIZE                                 0x1
#define _CM5CON0_C5HYS_LENGTH                               0x1
#define _CM5CON0_C5HYS_MASK                                 0x2
#define _CM5CON0_C5SP_POSN                                  0x2
#define _CM5CON0_C5SP_POSITION                              0x2
#define _CM5CON0_C5SP_SIZE                                  0x1
#define _CM5CON0_C5SP_LENGTH                                0x1
#define _CM5CON0_C5SP_MASK                                  0x4
#define _CM5CON0_C5ZLF_POSN                                 0x3
#define _CM5CON0_C5ZLF_POSITION                             0x3
#define _CM5CON0_C5ZLF_SIZE                                 0x1
#define _CM5CON0_C5ZLF_LENGTH                               0x1
#define _CM5CON0_C5ZLF_MASK                                 0x8
#define _CM5CON0_C5POL_POSN                                 0x4
#define _CM5CON0_C5POL_POSITION                             0x4
#define _CM5CON0_C5POL_SIZE                                 0x1
#define _CM5CON0_C5POL_LENGTH                               0x1
#define _CM5CON0_C5POL_MASK                                 0x10
#define _CM5CON0_C5OUT_POSN                                 0x6
#define _CM5CON0_C5OUT_POSITION                             0x6
#define _CM5CON0_C5OUT_SIZE                                 0x1
#define _CM5CON0_C5OUT_LENGTH                               0x1
#define _CM5CON0_C5OUT_MASK                                 0x40
#define _CM5CON0_C5ON_POSN                                  0x7
#define _CM5CON0_C5ON_POSITION                              0x7
#define _CM5CON0_C5ON_SIZE                                  0x1
#define _CM5CON0_C5ON_LENGTH                                0x1
#define _CM5CON0_C5ON_MASK                                  0x80

// Register: CM5CON1
#define CM5CON1 CM5CON1
extern volatile unsigned char           CM5CON1             __at(0x911);
#ifndef _LIB_BUILD
asm("CM5CON1 equ 0911h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTN                   :1;
        unsigned INTP                   :1;
    };
    struct {
        unsigned C5INTN                 :1;
        unsigned C5INTP                 :1;
    };
} CM5CON1bits_t;
extern volatile CM5CON1bits_t CM5CON1bits __at(0x911);
// bitfield macros
#define _CM5CON1_INTN_POSN                                  0x0
#define _CM5CON1_INTN_POSITION                              0x0
#define _CM5CON1_INTN_SIZE                                  0x1
#define _CM5CON1_INTN_LENGTH                                0x1
#define _CM5CON1_INTN_MASK                                  0x1
#define _CM5CON1_INTP_POSN                                  0x1
#define _CM5CON1_INTP_POSITION                              0x1
#define _CM5CON1_INTP_SIZE                                  0x1
#define _CM5CON1_INTP_LENGTH                                0x1
#define _CM5CON1_INTP_MASK                                  0x2
#define _CM5CON1_C5INTN_POSN                                0x0
#define _CM5CON1_C5INTN_POSITION                            0x0
#define _CM5CON1_C5INTN_SIZE                                0x1
#define _CM5CON1_C5INTN_LENGTH                              0x1
#define _CM5CON1_C5INTN_MASK                                0x1
#define _CM5CON1_C5INTP_POSN                                0x1
#define _CM5CON1_C5INTP_POSITION                            0x1
#define _CM5CON1_C5INTP_SIZE                                0x1
#define _CM5CON1_C5INTP_LENGTH                              0x1
#define _CM5CON1_C5INTP_MASK                                0x2

// Register: CM5NSEL
#define CM5NSEL CM5NSEL
extern volatile unsigned char           CM5NSEL             __at(0x912);
#ifndef _LIB_BUILD
asm("CM5NSEL equ 0912h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :4;
    };
    struct {
        unsigned C5NCH                  :4;
    };
    struct {
        unsigned C5NCH0                 :1;
        unsigned C5NCH1                 :1;
        unsigned C5NCH2                 :1;
        unsigned C5NCH3                 :1;
    };
} CM5NSELbits_t;
extern volatile CM5NSELbits_t CM5NSELbits __at(0x912);
// bitfield macros
#define _CM5NSEL_NCH_POSN                                   0x0
#define _CM5NSEL_NCH_POSITION                               0x0
#define _CM5NSEL_NCH_SIZE                                   0x4
#define _CM5NSEL_NCH_LENGTH                                 0x4
#define _CM5NSEL_NCH_MASK                                   0xF
#define _CM5NSEL_C5NCH_POSN                                 0x0
#define _CM5NSEL_C5NCH_POSITION                             0x0
#define _CM5NSEL_C5NCH_SIZE                                 0x4
#define _CM5NSEL_C5NCH_LENGTH                               0x4
#define _CM5NSEL_C5NCH_MASK                                 0xF
#define _CM5NSEL_C5NCH0_POSN                                0x0
#define _CM5NSEL_C5NCH0_POSITION                            0x0
#define _CM5NSEL_C5NCH0_SIZE                                0x1
#define _CM5NSEL_C5NCH0_LENGTH                              0x1
#define _CM5NSEL_C5NCH0_MASK                                0x1
#define _CM5NSEL_C5NCH1_POSN                                0x1
#define _CM5NSEL_C5NCH1_POSITION                            0x1
#define _CM5NSEL_C5NCH1_SIZE                                0x1
#define _CM5NSEL_C5NCH1_LENGTH                              0x1
#define _CM5NSEL_C5NCH1_MASK                                0x2
#define _CM5NSEL_C5NCH2_POSN                                0x2
#define _CM5NSEL_C5NCH2_POSITION                            0x2
#define _CM5NSEL_C5NCH2_SIZE                                0x1
#define _CM5NSEL_C5NCH2_LENGTH                              0x1
#define _CM5NSEL_C5NCH2_MASK                                0x4
#define _CM5NSEL_C5NCH3_POSN                                0x3
#define _CM5NSEL_C5NCH3_POSITION                            0x3
#define _CM5NSEL_C5NCH3_SIZE                                0x1
#define _CM5NSEL_C5NCH3_LENGTH                              0x1
#define _CM5NSEL_C5NCH3_MASK                                0x8

// Register: CM5PSEL
#define CM5PSEL CM5PSEL
extern volatile unsigned char           CM5PSEL             __at(0x913);
#ifndef _LIB_BUILD
asm("CM5PSEL equ 0913h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :4;
    };
    struct {
        unsigned PCH0                   :1;
        unsigned PCH1                   :1;
        unsigned PCH2                   :1;
        unsigned PCH3                   :1;
    };
    struct {
        unsigned C5PCH                  :4;
    };
    struct {
        unsigned C5PCH0                 :1;
        unsigned C5PCH1                 :1;
        unsigned C5PCH2                 :1;
        unsigned C5PCH3                 :1;
    };
} CM5PSELbits_t;
extern volatile CM5PSELbits_t CM5PSELbits __at(0x913);
// bitfield macros
#define _CM5PSEL_PCH_POSN                                   0x0
#define _CM5PSEL_PCH_POSITION                               0x0
#define _CM5PSEL_PCH_SIZE                                   0x4
#define _CM5PSEL_PCH_LENGTH                                 0x4
#define _CM5PSEL_PCH_MASK                                   0xF
#define _CM5PSEL_PCH0_POSN                                  0x0
#define _CM5PSEL_PCH0_POSITION                              0x0
#define _CM5PSEL_PCH0_SIZE                                  0x1
#define _CM5PSEL_PCH0_LENGTH                                0x1
#define _CM5PSEL_PCH0_MASK                                  0x1
#define _CM5PSEL_PCH1_POSN                                  0x1
#define _CM5PSEL_PCH1_POSITION                              0x1
#define _CM5PSEL_PCH1_SIZE                                  0x1
#define _CM5PSEL_PCH1_LENGTH                                0x1
#define _CM5PSEL_PCH1_MASK                                  0x2
#define _CM5PSEL_PCH2_POSN                                  0x2
#define _CM5PSEL_PCH2_POSITION                              0x2
#define _CM5PSEL_PCH2_SIZE                                  0x1
#define _CM5PSEL_PCH2_LENGTH                                0x1
#define _CM5PSEL_PCH2_MASK                                  0x4
#define _CM5PSEL_PCH3_POSN                                  0x3
#define _CM5PSEL_PCH3_POSITION                              0x3
#define _CM5PSEL_PCH3_SIZE                                  0x1
#define _CM5PSEL_PCH3_LENGTH                                0x1
#define _CM5PSEL_PCH3_MASK                                  0x8
#define _CM5PSEL_C5PCH_POSN                                 0x0
#define _CM5PSEL_C5PCH_POSITION                             0x0
#define _CM5PSEL_C5PCH_SIZE                                 0x4
#define _CM5PSEL_C5PCH_LENGTH                               0x4
#define _CM5PSEL_C5PCH_MASK                                 0xF
#define _CM5PSEL_C5PCH0_POSN                                0x0
#define _CM5PSEL_C5PCH0_POSITION                            0x0
#define _CM5PSEL_C5PCH0_SIZE                                0x1
#define _CM5PSEL_C5PCH0_LENGTH                              0x1
#define _CM5PSEL_C5PCH0_MASK                                0x1
#define _CM5PSEL_C5PCH1_POSN                                0x1
#define _CM5PSEL_C5PCH1_POSITION                            0x1
#define _CM5PSEL_C5PCH1_SIZE                                0x1
#define _CM5PSEL_C5PCH1_LENGTH                              0x1
#define _CM5PSEL_C5PCH1_MASK                                0x2
#define _CM5PSEL_C5PCH2_POSN                                0x2
#define _CM5PSEL_C5PCH2_POSITION                            0x2
#define _CM5PSEL_C5PCH2_SIZE                                0x1
#define _CM5PSEL_C5PCH2_LENGTH                              0x1
#define _CM5PSEL_C5PCH2_MASK                                0x4
#define _CM5PSEL_C5PCH3_POSN                                0x3
#define _CM5PSEL_C5PCH3_POSITION                            0x3
#define _CM5PSEL_C5PCH3_SIZE                                0x1
#define _CM5PSEL_C5PCH3_LENGTH                              0x1
#define _CM5PSEL_C5PCH3_MASK                                0x8

// Register: CM6CON0
#define CM6CON0 CM6CON0
extern volatile unsigned char           CM6CON0             __at(0x914);
#ifndef _LIB_BUILD
asm("CM6CON0 equ 0914h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SYNC                   :1;
        unsigned HYS                    :1;
        unsigned                        :1;
        unsigned ZLF                    :1;
        unsigned POL                    :1;
        unsigned                        :1;
        unsigned OUT                    :1;
        unsigned ON                     :1;
    };
    struct {
        unsigned C6SYNC                 :1;
        unsigned C6HYS                  :1;
        unsigned C6SP                   :1;
        unsigned C6ZLF                  :1;
        unsigned C6POL                  :1;
        unsigned                        :1;
        unsigned C6OUT                  :1;
        unsigned C6ON                   :1;
    };
} CM6CON0bits_t;
extern volatile CM6CON0bits_t CM6CON0bits __at(0x914);
// bitfield macros
#define _CM6CON0_SYNC_POSN                                  0x0
#define _CM6CON0_SYNC_POSITION                              0x0
#define _CM6CON0_SYNC_SIZE                                  0x1
#define _CM6CON0_SYNC_LENGTH                                0x1
#define _CM6CON0_SYNC_MASK                                  0x1
#define _CM6CON0_HYS_POSN                                   0x1
#define _CM6CON0_HYS_POSITION                               0x1
#define _CM6CON0_HYS_SIZE                                   0x1
#define _CM6CON0_HYS_LENGTH                                 0x1
#define _CM6CON0_HYS_MASK                                   0x2
#define _CM6CON0_ZLF_POSN                                   0x3
#define _CM6CON0_ZLF_POSITION                               0x3
#define _CM6CON0_ZLF_SIZE                                   0x1
#define _CM6CON0_ZLF_LENGTH                                 0x1
#define _CM6CON0_ZLF_MASK                                   0x8
#define _CM6CON0_POL_POSN                                   0x4
#define _CM6CON0_POL_POSITION                               0x4
#define _CM6CON0_POL_SIZE                                   0x1
#define _CM6CON0_POL_LENGTH                                 0x1
#define _CM6CON0_POL_MASK                                   0x10
#define _CM6CON0_OUT_POSN                                   0x6
#define _CM6CON0_OUT_POSITION                               0x6
#define _CM6CON0_OUT_SIZE                                   0x1
#define _CM6CON0_OUT_LENGTH                                 0x1
#define _CM6CON0_OUT_MASK                                   0x40
#define _CM6CON0_ON_POSN                                    0x7
#define _CM6CON0_ON_POSITION                                0x7
#define _CM6CON0_ON_SIZE                                    0x1
#define _CM6CON0_ON_LENGTH                                  0x1
#define _CM6CON0_ON_MASK                                    0x80
#define _CM6CON0_C6SYNC_POSN                                0x0
#define _CM6CON0_C6SYNC_POSITION                            0x0
#define _CM6CON0_C6SYNC_SIZE                                0x1
#define _CM6CON0_C6SYNC_LENGTH                              0x1
#define _CM6CON0_C6SYNC_MASK                                0x1
#define _CM6CON0_C6HYS_POSN                                 0x1
#define _CM6CON0_C6HYS_POSITION                             0x1
#define _CM6CON0_C6HYS_SIZE                                 0x1
#define _CM6CON0_C6HYS_LENGTH                               0x1
#define _CM6CON0_C6HYS_MASK                                 0x2
#define _CM6CON0_C6SP_POSN                                  0x2
#define _CM6CON0_C6SP_POSITION                              0x2
#define _CM6CON0_C6SP_SIZE                                  0x1
#define _CM6CON0_C6SP_LENGTH                                0x1
#define _CM6CON0_C6SP_MASK                                  0x4
#define _CM6CON0_C6ZLF_POSN                                 0x3
#define _CM6CON0_C6ZLF_POSITION                             0x3
#define _CM6CON0_C6ZLF_SIZE                                 0x1
#define _CM6CON0_C6ZLF_LENGTH                               0x1
#define _CM6CON0_C6ZLF_MASK                                 0x8
#define _CM6CON0_C6POL_POSN                                 0x4
#define _CM6CON0_C6POL_POSITION                             0x4
#define _CM6CON0_C6POL_SIZE                                 0x1
#define _CM6CON0_C6POL_LENGTH                               0x1
#define _CM6CON0_C6POL_MASK                                 0x10
#define _CM6CON0_C6OUT_POSN                                 0x6
#define _CM6CON0_C6OUT_POSITION                             0x6
#define _CM6CON0_C6OUT_SIZE                                 0x1
#define _CM6CON0_C6OUT_LENGTH                               0x1
#define _CM6CON0_C6OUT_MASK                                 0x40
#define _CM6CON0_C6ON_POSN                                  0x7
#define _CM6CON0_C6ON_POSITION                              0x7
#define _CM6CON0_C6ON_SIZE                                  0x1
#define _CM6CON0_C6ON_LENGTH                                0x1
#define _CM6CON0_C6ON_MASK                                  0x80

// Register: CM6CON1
#define CM6CON1 CM6CON1
extern volatile unsigned char           CM6CON1             __at(0x915);
#ifndef _LIB_BUILD
asm("CM6CON1 equ 0915h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTN                   :1;
        unsigned INTP                   :1;
    };
    struct {
        unsigned C6INTN                 :1;
        unsigned C6INTP                 :1;
    };
} CM6CON1bits_t;
extern volatile CM6CON1bits_t CM6CON1bits __at(0x915);
// bitfield macros
#define _CM6CON1_INTN_POSN                                  0x0
#define _CM6CON1_INTN_POSITION                              0x0
#define _CM6CON1_INTN_SIZE                                  0x1
#define _CM6CON1_INTN_LENGTH                                0x1
#define _CM6CON1_INTN_MASK                                  0x1
#define _CM6CON1_INTP_POSN                                  0x1
#define _CM6CON1_INTP_POSITION                              0x1
#define _CM6CON1_INTP_SIZE                                  0x1
#define _CM6CON1_INTP_LENGTH                                0x1
#define _CM6CON1_INTP_MASK                                  0x2
#define _CM6CON1_C6INTN_POSN                                0x0
#define _CM6CON1_C6INTN_POSITION                            0x0
#define _CM6CON1_C6INTN_SIZE                                0x1
#define _CM6CON1_C6INTN_LENGTH                              0x1
#define _CM6CON1_C6INTN_MASK                                0x1
#define _CM6CON1_C6INTP_POSN                                0x1
#define _CM6CON1_C6INTP_POSITION                            0x1
#define _CM6CON1_C6INTP_SIZE                                0x1
#define _CM6CON1_C6INTP_LENGTH                              0x1
#define _CM6CON1_C6INTP_MASK                                0x2

// Register: CM6NSEL
#define CM6NSEL CM6NSEL
extern volatile unsigned char           CM6NSEL             __at(0x916);
#ifndef _LIB_BUILD
asm("CM6NSEL equ 0916h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :4;
    };
    struct {
        unsigned C6NCH                  :4;
    };
    struct {
        unsigned C6NCH0                 :1;
        unsigned C6NCH1                 :1;
        unsigned C6NCH2                 :1;
        unsigned C6NCH3                 :1;
    };
} CM6NSELbits_t;
extern volatile CM6NSELbits_t CM6NSELbits __at(0x916);
// bitfield macros
#define _CM6NSEL_NCH_POSN                                   0x0
#define _CM6NSEL_NCH_POSITION                               0x0
#define _CM6NSEL_NCH_SIZE                                   0x4
#define _CM6NSEL_NCH_LENGTH                                 0x4
#define _CM6NSEL_NCH_MASK                                   0xF
#define _CM6NSEL_C6NCH_POSN                                 0x0
#define _CM6NSEL_C6NCH_POSITION                             0x0
#define _CM6NSEL_C6NCH_SIZE                                 0x4
#define _CM6NSEL_C6NCH_LENGTH                               0x4
#define _CM6NSEL_C6NCH_MASK                                 0xF
#define _CM6NSEL_C6NCH0_POSN                                0x0
#define _CM6NSEL_C6NCH0_POSITION                            0x0
#define _CM6NSEL_C6NCH0_SIZE                                0x1
#define _CM6NSEL_C6NCH0_LENGTH                              0x1
#define _CM6NSEL_C6NCH0_MASK                                0x1
#define _CM6NSEL_C6NCH1_POSN                                0x1
#define _CM6NSEL_C6NCH1_POSITION                            0x1
#define _CM6NSEL_C6NCH1_SIZE                                0x1
#define _CM6NSEL_C6NCH1_LENGTH                              0x1
#define _CM6NSEL_C6NCH1_MASK                                0x2
#define _CM6NSEL_C6NCH2_POSN                                0x2
#define _CM6NSEL_C6NCH2_POSITION                            0x2
#define _CM6NSEL_C6NCH2_SIZE                                0x1
#define _CM6NSEL_C6NCH2_LENGTH                              0x1
#define _CM6NSEL_C6NCH2_MASK                                0x4
#define _CM6NSEL_C6NCH3_POSN                                0x3
#define _CM6NSEL_C6NCH3_POSITION                            0x3
#define _CM6NSEL_C6NCH3_SIZE                                0x1
#define _CM6NSEL_C6NCH3_LENGTH                              0x1
#define _CM6NSEL_C6NCH3_MASK                                0x8

// Register: CM6PSEL
#define CM6PSEL CM6PSEL
extern volatile unsigned char           CM6PSEL             __at(0x917);
#ifndef _LIB_BUILD
asm("CM6PSEL equ 0917h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :4;
    };
    struct {
        unsigned PCH0                   :1;
        unsigned PCH1                   :1;
        unsigned PCH2                   :1;
        unsigned PCH3                   :1;
    };
    struct {
        unsigned C6PCH                  :4;
    };
    struct {
        unsigned C6PCH0                 :1;
        unsigned C6PCH1                 :1;
        unsigned C6PCH2                 :1;
        unsigned C6PCH3                 :1;
    };
} CM6PSELbits_t;
extern volatile CM6PSELbits_t CM6PSELbits __at(0x917);
// bitfield macros
#define _CM6PSEL_PCH_POSN                                   0x0
#define _CM6PSEL_PCH_POSITION                               0x0
#define _CM6PSEL_PCH_SIZE                                   0x4
#define _CM6PSEL_PCH_LENGTH                                 0x4
#define _CM6PSEL_PCH_MASK                                   0xF
#define _CM6PSEL_PCH0_POSN                                  0x0
#define _CM6PSEL_PCH0_POSITION                              0x0
#define _CM6PSEL_PCH0_SIZE                                  0x1
#define _CM6PSEL_PCH0_LENGTH                                0x1
#define _CM6PSEL_PCH0_MASK                                  0x1
#define _CM6PSEL_PCH1_POSN                                  0x1
#define _CM6PSEL_PCH1_POSITION                              0x1
#define _CM6PSEL_PCH1_SIZE                                  0x1
#define _CM6PSEL_PCH1_LENGTH                                0x1
#define _CM6PSEL_PCH1_MASK                                  0x2
#define _CM6PSEL_PCH2_POSN                                  0x2
#define _CM6PSEL_PCH2_POSITION                              0x2
#define _CM6PSEL_PCH2_SIZE                                  0x1
#define _CM6PSEL_PCH2_LENGTH                                0x1
#define _CM6PSEL_PCH2_MASK                                  0x4
#define _CM6PSEL_PCH3_POSN                                  0x3
#define _CM6PSEL_PCH3_POSITION                              0x3
#define _CM6PSEL_PCH3_SIZE                                  0x1
#define _CM6PSEL_PCH3_LENGTH                                0x1
#define _CM6PSEL_PCH3_MASK                                  0x8
#define _CM6PSEL_C6PCH_POSN                                 0x0
#define _CM6PSEL_C6PCH_POSITION                             0x0
#define _CM6PSEL_C6PCH_SIZE                                 0x4
#define _CM6PSEL_C6PCH_LENGTH                               0x4
#define _CM6PSEL_C6PCH_MASK                                 0xF
#define _CM6PSEL_C6PCH0_POSN                                0x0
#define _CM6PSEL_C6PCH0_POSITION                            0x0
#define _CM6PSEL_C6PCH0_SIZE                                0x1
#define _CM6PSEL_C6PCH0_LENGTH                              0x1
#define _CM6PSEL_C6PCH0_MASK                                0x1
#define _CM6PSEL_C6PCH1_POSN                                0x1
#define _CM6PSEL_C6PCH1_POSITION                            0x1
#define _CM6PSEL_C6PCH1_SIZE                                0x1
#define _CM6PSEL_C6PCH1_LENGTH                              0x1
#define _CM6PSEL_C6PCH1_MASK                                0x2
#define _CM6PSEL_C6PCH2_POSN                                0x2
#define _CM6PSEL_C6PCH2_POSITION                            0x2
#define _CM6PSEL_C6PCH2_SIZE                                0x1
#define _CM6PSEL_C6PCH2_LENGTH                              0x1
#define _CM6PSEL_C6PCH2_MASK                                0x4
#define _CM6PSEL_C6PCH3_POSN                                0x3
#define _CM6PSEL_C6PCH3_POSITION                            0x3
#define _CM6PSEL_C6PCH3_SIZE                                0x1
#define _CM6PSEL_C6PCH3_LENGTH                              0x1
#define _CM6PSEL_C6PCH3_MASK                                0x8

// Register: CM7CON0
#define CM7CON0 CM7CON0
extern volatile unsigned char           CM7CON0             __at(0x918);
#ifndef _LIB_BUILD
asm("CM7CON0 equ 0918h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SYNC                   :1;
        unsigned HYS                    :1;
        unsigned                        :1;
        unsigned ZLF                    :1;
        unsigned POL                    :1;
        unsigned                        :1;
        unsigned OUT                    :1;
        unsigned ON                     :1;
    };
    struct {
        unsigned C7SYNC                 :1;
        unsigned C7HYS                  :1;
        unsigned C7SP                   :1;
        unsigned C7ZLF                  :1;
        unsigned C7POL                  :1;
        unsigned                        :1;
        unsigned C7OUT                  :1;
        unsigned C7ON                   :1;
    };
} CM7CON0bits_t;
extern volatile CM7CON0bits_t CM7CON0bits __at(0x918);
// bitfield macros
#define _CM7CON0_SYNC_POSN                                  0x0
#define _CM7CON0_SYNC_POSITION                              0x0
#define _CM7CON0_SYNC_SIZE                                  0x1
#define _CM7CON0_SYNC_LENGTH                                0x1
#define _CM7CON0_SYNC_MASK                                  0x1
#define _CM7CON0_HYS_POSN                                   0x1
#define _CM7CON0_HYS_POSITION                               0x1
#define _CM7CON0_HYS_SIZE                                   0x1
#define _CM7CON0_HYS_LENGTH                                 0x1
#define _CM7CON0_HYS_MASK                                   0x2
#define _CM7CON0_ZLF_POSN                                   0x3
#define _CM7CON0_ZLF_POSITION                               0x3
#define _CM7CON0_ZLF_SIZE                                   0x1
#define _CM7CON0_ZLF_LENGTH                                 0x1
#define _CM7CON0_ZLF_MASK                                   0x8
#define _CM7CON0_POL_POSN                                   0x4
#define _CM7CON0_POL_POSITION                               0x4
#define _CM7CON0_POL_SIZE                                   0x1
#define _CM7CON0_POL_LENGTH                                 0x1
#define _CM7CON0_POL_MASK                                   0x10
#define _CM7CON0_OUT_POSN                                   0x6
#define _CM7CON0_OUT_POSITION                               0x6
#define _CM7CON0_OUT_SIZE                                   0x1
#define _CM7CON0_OUT_LENGTH                                 0x1
#define _CM7CON0_OUT_MASK                                   0x40
#define _CM7CON0_ON_POSN                                    0x7
#define _CM7CON0_ON_POSITION                                0x7
#define _CM7CON0_ON_SIZE                                    0x1
#define _CM7CON0_ON_LENGTH                                  0x1
#define _CM7CON0_ON_MASK                                    0x80
#define _CM7CON0_C7SYNC_POSN                                0x0
#define _CM7CON0_C7SYNC_POSITION                            0x0
#define _CM7CON0_C7SYNC_SIZE                                0x1
#define _CM7CON0_C7SYNC_LENGTH                              0x1
#define _CM7CON0_C7SYNC_MASK                                0x1
#define _CM7CON0_C7HYS_POSN                                 0x1
#define _CM7CON0_C7HYS_POSITION                             0x1
#define _CM7CON0_C7HYS_SIZE                                 0x1
#define _CM7CON0_C7HYS_LENGTH                               0x1
#define _CM7CON0_C7HYS_MASK                                 0x2
#define _CM7CON0_C7SP_POSN                                  0x2
#define _CM7CON0_C7SP_POSITION                              0x2
#define _CM7CON0_C7SP_SIZE                                  0x1
#define _CM7CON0_C7SP_LENGTH                                0x1
#define _CM7CON0_C7SP_MASK                                  0x4
#define _CM7CON0_C7ZLF_POSN                                 0x3
#define _CM7CON0_C7ZLF_POSITION                             0x3
#define _CM7CON0_C7ZLF_SIZE                                 0x1
#define _CM7CON0_C7ZLF_LENGTH                               0x1
#define _CM7CON0_C7ZLF_MASK                                 0x8
#define _CM7CON0_C7POL_POSN                                 0x4
#define _CM7CON0_C7POL_POSITION                             0x4
#define _CM7CON0_C7POL_SIZE                                 0x1
#define _CM7CON0_C7POL_LENGTH                               0x1
#define _CM7CON0_C7POL_MASK                                 0x10
#define _CM7CON0_C7OUT_POSN                                 0x6
#define _CM7CON0_C7OUT_POSITION                             0x6
#define _CM7CON0_C7OUT_SIZE                                 0x1
#define _CM7CON0_C7OUT_LENGTH                               0x1
#define _CM7CON0_C7OUT_MASK                                 0x40
#define _CM7CON0_C7ON_POSN                                  0x7
#define _CM7CON0_C7ON_POSITION                              0x7
#define _CM7CON0_C7ON_SIZE                                  0x1
#define _CM7CON0_C7ON_LENGTH                                0x1
#define _CM7CON0_C7ON_MASK                                  0x80

// Register: CM7CON1
#define CM7CON1 CM7CON1
extern volatile unsigned char           CM7CON1             __at(0x919);
#ifndef _LIB_BUILD
asm("CM7CON1 equ 0919h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTN                   :1;
        unsigned INTP                   :1;
    };
    struct {
        unsigned C7INTN                 :1;
        unsigned C7INTP                 :1;
    };
} CM7CON1bits_t;
extern volatile CM7CON1bits_t CM7CON1bits __at(0x919);
// bitfield macros
#define _CM7CON1_INTN_POSN                                  0x0
#define _CM7CON1_INTN_POSITION                              0x0
#define _CM7CON1_INTN_SIZE                                  0x1
#define _CM7CON1_INTN_LENGTH                                0x1
#define _CM7CON1_INTN_MASK                                  0x1
#define _CM7CON1_INTP_POSN                                  0x1
#define _CM7CON1_INTP_POSITION                              0x1
#define _CM7CON1_INTP_SIZE                                  0x1
#define _CM7CON1_INTP_LENGTH                                0x1
#define _CM7CON1_INTP_MASK                                  0x2
#define _CM7CON1_C7INTN_POSN                                0x0
#define _CM7CON1_C7INTN_POSITION                            0x0
#define _CM7CON1_C7INTN_SIZE                                0x1
#define _CM7CON1_C7INTN_LENGTH                              0x1
#define _CM7CON1_C7INTN_MASK                                0x1
#define _CM7CON1_C7INTP_POSN                                0x1
#define _CM7CON1_C7INTP_POSITION                            0x1
#define _CM7CON1_C7INTP_SIZE                                0x1
#define _CM7CON1_C7INTP_LENGTH                              0x1
#define _CM7CON1_C7INTP_MASK                                0x2

// Register: CM7NSEL
#define CM7NSEL CM7NSEL
extern volatile unsigned char           CM7NSEL             __at(0x91A);
#ifndef _LIB_BUILD
asm("CM7NSEL equ 091Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :4;
    };
    struct {
        unsigned C7NCH                  :4;
    };
    struct {
        unsigned C7NCH0                 :1;
        unsigned C7NCH1                 :1;
        unsigned C7NCH2                 :1;
        unsigned C7NCH3                 :1;
    };
} CM7NSELbits_t;
extern volatile CM7NSELbits_t CM7NSELbits __at(0x91A);
// bitfield macros
#define _CM7NSEL_NCH_POSN                                   0x0
#define _CM7NSEL_NCH_POSITION                               0x0
#define _CM7NSEL_NCH_SIZE                                   0x4
#define _CM7NSEL_NCH_LENGTH                                 0x4
#define _CM7NSEL_NCH_MASK                                   0xF
#define _CM7NSEL_C7NCH_POSN                                 0x0
#define _CM7NSEL_C7NCH_POSITION                             0x0
#define _CM7NSEL_C7NCH_SIZE                                 0x4
#define _CM7NSEL_C7NCH_LENGTH                               0x4
#define _CM7NSEL_C7NCH_MASK                                 0xF
#define _CM7NSEL_C7NCH0_POSN                                0x0
#define _CM7NSEL_C7NCH0_POSITION                            0x0
#define _CM7NSEL_C7NCH0_SIZE                                0x1
#define _CM7NSEL_C7NCH0_LENGTH                              0x1
#define _CM7NSEL_C7NCH0_MASK                                0x1
#define _CM7NSEL_C7NCH1_POSN                                0x1
#define _CM7NSEL_C7NCH1_POSITION                            0x1
#define _CM7NSEL_C7NCH1_SIZE                                0x1
#define _CM7NSEL_C7NCH1_LENGTH                              0x1
#define _CM7NSEL_C7NCH1_MASK                                0x2
#define _CM7NSEL_C7NCH2_POSN                                0x2
#define _CM7NSEL_C7NCH2_POSITION                            0x2
#define _CM7NSEL_C7NCH2_SIZE                                0x1
#define _CM7NSEL_C7NCH2_LENGTH                              0x1
#define _CM7NSEL_C7NCH2_MASK                                0x4
#define _CM7NSEL_C7NCH3_POSN                                0x3
#define _CM7NSEL_C7NCH3_POSITION                            0x3
#define _CM7NSEL_C7NCH3_SIZE                                0x1
#define _CM7NSEL_C7NCH3_LENGTH                              0x1
#define _CM7NSEL_C7NCH3_MASK                                0x8

// Register: CM7PSEL
#define CM7PSEL CM7PSEL
extern volatile unsigned char           CM7PSEL             __at(0x91B);
#ifndef _LIB_BUILD
asm("CM7PSEL equ 091Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :4;
    };
    struct {
        unsigned PCH0                   :1;
        unsigned PCH1                   :1;
        unsigned PCH2                   :1;
        unsigned PCH3                   :1;
    };
    struct {
        unsigned C7PCH                  :4;
    };
    struct {
        unsigned C7PCH0                 :1;
        unsigned C7PCH1                 :1;
        unsigned C7PCH2                 :1;
        unsigned C7PCH3                 :1;
    };
} CM7PSELbits_t;
extern volatile CM7PSELbits_t CM7PSELbits __at(0x91B);
// bitfield macros
#define _CM7PSEL_PCH_POSN                                   0x0
#define _CM7PSEL_PCH_POSITION                               0x0
#define _CM7PSEL_PCH_SIZE                                   0x4
#define _CM7PSEL_PCH_LENGTH                                 0x4
#define _CM7PSEL_PCH_MASK                                   0xF
#define _CM7PSEL_PCH0_POSN                                  0x0
#define _CM7PSEL_PCH0_POSITION                              0x0
#define _CM7PSEL_PCH0_SIZE                                  0x1
#define _CM7PSEL_PCH0_LENGTH                                0x1
#define _CM7PSEL_PCH0_MASK                                  0x1
#define _CM7PSEL_PCH1_POSN                                  0x1
#define _CM7PSEL_PCH1_POSITION                              0x1
#define _CM7PSEL_PCH1_SIZE                                  0x1
#define _CM7PSEL_PCH1_LENGTH                                0x1
#define _CM7PSEL_PCH1_MASK                                  0x2
#define _CM7PSEL_PCH2_POSN                                  0x2
#define _CM7PSEL_PCH2_POSITION                              0x2
#define _CM7PSEL_PCH2_SIZE                                  0x1
#define _CM7PSEL_PCH2_LENGTH                                0x1
#define _CM7PSEL_PCH2_MASK                                  0x4
#define _CM7PSEL_PCH3_POSN                                  0x3
#define _CM7PSEL_PCH3_POSITION                              0x3
#define _CM7PSEL_PCH3_SIZE                                  0x1
#define _CM7PSEL_PCH3_LENGTH                                0x1
#define _CM7PSEL_PCH3_MASK                                  0x8
#define _CM7PSEL_C7PCH_POSN                                 0x0
#define _CM7PSEL_C7PCH_POSITION                             0x0
#define _CM7PSEL_C7PCH_SIZE                                 0x4
#define _CM7PSEL_C7PCH_LENGTH                               0x4
#define _CM7PSEL_C7PCH_MASK                                 0xF
#define _CM7PSEL_C7PCH0_POSN                                0x0
#define _CM7PSEL_C7PCH0_POSITION                            0x0
#define _CM7PSEL_C7PCH0_SIZE                                0x1
#define _CM7PSEL_C7PCH0_LENGTH                              0x1
#define _CM7PSEL_C7PCH0_MASK                                0x1
#define _CM7PSEL_C7PCH1_POSN                                0x1
#define _CM7PSEL_C7PCH1_POSITION                            0x1
#define _CM7PSEL_C7PCH1_SIZE                                0x1
#define _CM7PSEL_C7PCH1_LENGTH                              0x1
#define _CM7PSEL_C7PCH1_MASK                                0x2
#define _CM7PSEL_C7PCH2_POSN                                0x2
#define _CM7PSEL_C7PCH2_POSITION                            0x2
#define _CM7PSEL_C7PCH2_SIZE                                0x1
#define _CM7PSEL_C7PCH2_LENGTH                              0x1
#define _CM7PSEL_C7PCH2_MASK                                0x4
#define _CM7PSEL_C7PCH3_POSN                                0x3
#define _CM7PSEL_C7PCH3_POSITION                            0x3
#define _CM7PSEL_C7PCH3_SIZE                                0x1
#define _CM7PSEL_C7PCH3_LENGTH                              0x1
#define _CM7PSEL_C7PCH3_MASK                                0x8

// Register: CM8CON0
#define CM8CON0 CM8CON0
extern volatile unsigned char           CM8CON0             __at(0x91C);
#ifndef _LIB_BUILD
asm("CM8CON0 equ 091Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SYNC                   :1;
        unsigned HYS                    :1;
        unsigned                        :1;
        unsigned ZLF                    :1;
        unsigned POL                    :1;
        unsigned                        :1;
        unsigned OUT                    :1;
        unsigned ON                     :1;
    };
    struct {
        unsigned C8SYNC                 :1;
        unsigned C8HYS                  :1;
        unsigned C8SP                   :1;
        unsigned C8ZLF                  :1;
        unsigned C8POL                  :1;
        unsigned                        :1;
        unsigned C8OUT                  :1;
        unsigned C8ON                   :1;
    };
} CM8CON0bits_t;
extern volatile CM8CON0bits_t CM8CON0bits __at(0x91C);
// bitfield macros
#define _CM8CON0_SYNC_POSN                                  0x0
#define _CM8CON0_SYNC_POSITION                              0x0
#define _CM8CON0_SYNC_SIZE                                  0x1
#define _CM8CON0_SYNC_LENGTH                                0x1
#define _CM8CON0_SYNC_MASK                                  0x1
#define _CM8CON0_HYS_POSN                                   0x1
#define _CM8CON0_HYS_POSITION                               0x1
#define _CM8CON0_HYS_SIZE                                   0x1
#define _CM8CON0_HYS_LENGTH                                 0x1
#define _CM8CON0_HYS_MASK                                   0x2
#define _CM8CON0_ZLF_POSN                                   0x3
#define _CM8CON0_ZLF_POSITION                               0x3
#define _CM8CON0_ZLF_SIZE                                   0x1
#define _CM8CON0_ZLF_LENGTH                                 0x1
#define _CM8CON0_ZLF_MASK                                   0x8
#define _CM8CON0_POL_POSN                                   0x4
#define _CM8CON0_POL_POSITION                               0x4
#define _CM8CON0_POL_SIZE                                   0x1
#define _CM8CON0_POL_LENGTH                                 0x1
#define _CM8CON0_POL_MASK                                   0x10
#define _CM8CON0_OUT_POSN                                   0x6
#define _CM8CON0_OUT_POSITION                               0x6
#define _CM8CON0_OUT_SIZE                                   0x1
#define _CM8CON0_OUT_LENGTH                                 0x1
#define _CM8CON0_OUT_MASK                                   0x40
#define _CM8CON0_ON_POSN                                    0x7
#define _CM8CON0_ON_POSITION                                0x7
#define _CM8CON0_ON_SIZE                                    0x1
#define _CM8CON0_ON_LENGTH                                  0x1
#define _CM8CON0_ON_MASK                                    0x80
#define _CM8CON0_C8SYNC_POSN                                0x0
#define _CM8CON0_C8SYNC_POSITION                            0x0
#define _CM8CON0_C8SYNC_SIZE                                0x1
#define _CM8CON0_C8SYNC_LENGTH                              0x1
#define _CM8CON0_C8SYNC_MASK                                0x1
#define _CM8CON0_C8HYS_POSN                                 0x1
#define _CM8CON0_C8HYS_POSITION                             0x1
#define _CM8CON0_C8HYS_SIZE                                 0x1
#define _CM8CON0_C8HYS_LENGTH                               0x1
#define _CM8CON0_C8HYS_MASK                                 0x2
#define _CM8CON0_C8SP_POSN                                  0x2
#define _CM8CON0_C8SP_POSITION                              0x2
#define _CM8CON0_C8SP_SIZE                                  0x1
#define _CM8CON0_C8SP_LENGTH                                0x1
#define _CM8CON0_C8SP_MASK                                  0x4
#define _CM8CON0_C8ZLF_POSN                                 0x3
#define _CM8CON0_C8ZLF_POSITION                             0x3
#define _CM8CON0_C8ZLF_SIZE                                 0x1
#define _CM8CON0_C8ZLF_LENGTH                               0x1
#define _CM8CON0_C8ZLF_MASK                                 0x8
#define _CM8CON0_C8POL_POSN                                 0x4
#define _CM8CON0_C8POL_POSITION                             0x4
#define _CM8CON0_C8POL_SIZE                                 0x1
#define _CM8CON0_C8POL_LENGTH                               0x1
#define _CM8CON0_C8POL_MASK                                 0x10
#define _CM8CON0_C8OUT_POSN                                 0x6
#define _CM8CON0_C8OUT_POSITION                             0x6
#define _CM8CON0_C8OUT_SIZE                                 0x1
#define _CM8CON0_C8OUT_LENGTH                               0x1
#define _CM8CON0_C8OUT_MASK                                 0x40
#define _CM8CON0_C8ON_POSN                                  0x7
#define _CM8CON0_C8ON_POSITION                              0x7
#define _CM8CON0_C8ON_SIZE                                  0x1
#define _CM8CON0_C8ON_LENGTH                                0x1
#define _CM8CON0_C8ON_MASK                                  0x80

// Register: CM8CON1
#define CM8CON1 CM8CON1
extern volatile unsigned char           CM8CON1             __at(0x91D);
#ifndef _LIB_BUILD
asm("CM8CON1 equ 091Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTN                   :1;
        unsigned INTP                   :1;
    };
    struct {
        unsigned C8INTN                 :1;
        unsigned C8INTP                 :1;
    };
} CM8CON1bits_t;
extern volatile CM8CON1bits_t CM8CON1bits __at(0x91D);
// bitfield macros
#define _CM8CON1_INTN_POSN                                  0x0
#define _CM8CON1_INTN_POSITION                              0x0
#define _CM8CON1_INTN_SIZE                                  0x1
#define _CM8CON1_INTN_LENGTH                                0x1
#define _CM8CON1_INTN_MASK                                  0x1
#define _CM8CON1_INTP_POSN                                  0x1
#define _CM8CON1_INTP_POSITION                              0x1
#define _CM8CON1_INTP_SIZE                                  0x1
#define _CM8CON1_INTP_LENGTH                                0x1
#define _CM8CON1_INTP_MASK                                  0x2
#define _CM8CON1_C8INTN_POSN                                0x0
#define _CM8CON1_C8INTN_POSITION                            0x0
#define _CM8CON1_C8INTN_SIZE                                0x1
#define _CM8CON1_C8INTN_LENGTH                              0x1
#define _CM8CON1_C8INTN_MASK                                0x1
#define _CM8CON1_C8INTP_POSN                                0x1
#define _CM8CON1_C8INTP_POSITION                            0x1
#define _CM8CON1_C8INTP_SIZE                                0x1
#define _CM8CON1_C8INTP_LENGTH                              0x1
#define _CM8CON1_C8INTP_MASK                                0x2

// Register: CM8NSEL
#define CM8NSEL CM8NSEL
extern volatile unsigned char           CM8NSEL             __at(0x91E);
#ifndef _LIB_BUILD
asm("CM8NSEL equ 091Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCH                    :4;
    };
    struct {
        unsigned C8NCH                  :4;
    };
    struct {
        unsigned C8NCH0                 :1;
        unsigned C8NCH1                 :1;
        unsigned C8NCH2                 :1;
        unsigned C8NCH3                 :1;
    };
} CM8NSELbits_t;
extern volatile CM8NSELbits_t CM8NSELbits __at(0x91E);
// bitfield macros
#define _CM8NSEL_NCH_POSN                                   0x0
#define _CM8NSEL_NCH_POSITION                               0x0
#define _CM8NSEL_NCH_SIZE                                   0x4
#define _CM8NSEL_NCH_LENGTH                                 0x4
#define _CM8NSEL_NCH_MASK                                   0xF
#define _CM8NSEL_C8NCH_POSN                                 0x0
#define _CM8NSEL_C8NCH_POSITION                             0x0
#define _CM8NSEL_C8NCH_SIZE                                 0x4
#define _CM8NSEL_C8NCH_LENGTH                               0x4
#define _CM8NSEL_C8NCH_MASK                                 0xF
#define _CM8NSEL_C8NCH0_POSN                                0x0
#define _CM8NSEL_C8NCH0_POSITION                            0x0
#define _CM8NSEL_C8NCH0_SIZE                                0x1
#define _CM8NSEL_C8NCH0_LENGTH                              0x1
#define _CM8NSEL_C8NCH0_MASK                                0x1
#define _CM8NSEL_C8NCH1_POSN                                0x1
#define _CM8NSEL_C8NCH1_POSITION                            0x1
#define _CM8NSEL_C8NCH1_SIZE                                0x1
#define _CM8NSEL_C8NCH1_LENGTH                              0x1
#define _CM8NSEL_C8NCH1_MASK                                0x2
#define _CM8NSEL_C8NCH2_POSN                                0x2
#define _CM8NSEL_C8NCH2_POSITION                            0x2
#define _CM8NSEL_C8NCH2_SIZE                                0x1
#define _CM8NSEL_C8NCH2_LENGTH                              0x1
#define _CM8NSEL_C8NCH2_MASK                                0x4
#define _CM8NSEL_C8NCH3_POSN                                0x3
#define _CM8NSEL_C8NCH3_POSITION                            0x3
#define _CM8NSEL_C8NCH3_SIZE                                0x1
#define _CM8NSEL_C8NCH3_LENGTH                              0x1
#define _CM8NSEL_C8NCH3_MASK                                0x8

// Register: CM8PSEL
#define CM8PSEL CM8PSEL
extern volatile unsigned char           CM8PSEL             __at(0x91F);
#ifndef _LIB_BUILD
asm("CM8PSEL equ 091Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :4;
    };
    struct {
        unsigned PCH0                   :1;
        unsigned PCH1                   :1;
        unsigned PCH2                   :1;
        unsigned PCH3                   :1;
    };
    struct {
        unsigned C8PCH                  :4;
    };
    struct {
        unsigned C8PCH0                 :1;
        unsigned C8PCH1                 :1;
        unsigned C8PCH2                 :1;
        unsigned C8PCH3                 :1;
    };
} CM8PSELbits_t;
extern volatile CM8PSELbits_t CM8PSELbits __at(0x91F);
// bitfield macros
#define _CM8PSEL_PCH_POSN                                   0x0
#define _CM8PSEL_PCH_POSITION                               0x0
#define _CM8PSEL_PCH_SIZE                                   0x4
#define _CM8PSEL_PCH_LENGTH                                 0x4
#define _CM8PSEL_PCH_MASK                                   0xF
#define _CM8PSEL_PCH0_POSN                                  0x0
#define _CM8PSEL_PCH0_POSITION                              0x0
#define _CM8PSEL_PCH0_SIZE                                  0x1
#define _CM8PSEL_PCH0_LENGTH                                0x1
#define _CM8PSEL_PCH0_MASK                                  0x1
#define _CM8PSEL_PCH1_POSN                                  0x1
#define _CM8PSEL_PCH1_POSITION                              0x1
#define _CM8PSEL_PCH1_SIZE                                  0x1
#define _CM8PSEL_PCH1_LENGTH                                0x1
#define _CM8PSEL_PCH1_MASK                                  0x2
#define _CM8PSEL_PCH2_POSN                                  0x2
#define _CM8PSEL_PCH2_POSITION                              0x2
#define _CM8PSEL_PCH2_SIZE                                  0x1
#define _CM8PSEL_PCH2_LENGTH                                0x1
#define _CM8PSEL_PCH2_MASK                                  0x4
#define _CM8PSEL_PCH3_POSN                                  0x3
#define _CM8PSEL_PCH3_POSITION                              0x3
#define _CM8PSEL_PCH3_SIZE                                  0x1
#define _CM8PSEL_PCH3_LENGTH                                0x1
#define _CM8PSEL_PCH3_MASK                                  0x8
#define _CM8PSEL_C8PCH_POSN                                 0x0
#define _CM8PSEL_C8PCH_POSITION                             0x0
#define _CM8PSEL_C8PCH_SIZE                                 0x4
#define _CM8PSEL_C8PCH_LENGTH                               0x4
#define _CM8PSEL_C8PCH_MASK                                 0xF
#define _CM8PSEL_C8PCH0_POSN                                0x0
#define _CM8PSEL_C8PCH0_POSITION                            0x0
#define _CM8PSEL_C8PCH0_SIZE                                0x1
#define _CM8PSEL_C8PCH0_LENGTH                              0x1
#define _CM8PSEL_C8PCH0_MASK                                0x1
#define _CM8PSEL_C8PCH1_POSN                                0x1
#define _CM8PSEL_C8PCH1_POSITION                            0x1
#define _CM8PSEL_C8PCH1_SIZE                                0x1
#define _CM8PSEL_C8PCH1_LENGTH                              0x1
#define _CM8PSEL_C8PCH1_MASK                                0x2
#define _CM8PSEL_C8PCH2_POSN                                0x2
#define _CM8PSEL_C8PCH2_POSITION                            0x2
#define _CM8PSEL_C8PCH2_SIZE                                0x1
#define _CM8PSEL_C8PCH2_LENGTH                              0x1
#define _CM8PSEL_C8PCH2_MASK                                0x4
#define _CM8PSEL_C8PCH3_POSN                                0x3
#define _CM8PSEL_C8PCH3_POSITION                            0x3
#define _CM8PSEL_C8PCH3_SIZE                                0x1
#define _CM8PSEL_C8PCH3_LENGTH                              0x1
#define _CM8PSEL_C8PCH3_MASK                                0x8

// Register: MD4CON0
#define MD4CON0 MD4CON0
extern volatile unsigned char           MD4CON0             __at(0xD1B);
#ifndef _LIB_BUILD
asm("MD4CON0 equ 0D1Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BIT                    :1;
        unsigned                        :3;
        unsigned OPOL                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MD4BIT                 :1;
        unsigned                        :3;
        unsigned MD4OPOL                :1;
        unsigned MD4OUT                 :1;
        unsigned                        :1;
        unsigned MD4EN                  :1;
    };
} MD4CON0bits_t;
extern volatile MD4CON0bits_t MD4CON0bits __at(0xD1B);
// bitfield macros
#define _MD4CON0_BIT_POSN                                   0x0
#define _MD4CON0_BIT_POSITION                               0x0
#define _MD4CON0_BIT_SIZE                                   0x1
#define _MD4CON0_BIT_LENGTH                                 0x1
#define _MD4CON0_BIT_MASK                                   0x1
#define _MD4CON0_OPOL_POSN                                  0x4
#define _MD4CON0_OPOL_POSITION                              0x4
#define _MD4CON0_OPOL_SIZE                                  0x1
#define _MD4CON0_OPOL_LENGTH                                0x1
#define _MD4CON0_OPOL_MASK                                  0x10
#define _MD4CON0_OUT_POSN                                   0x5
#define _MD4CON0_OUT_POSITION                               0x5
#define _MD4CON0_OUT_SIZE                                   0x1
#define _MD4CON0_OUT_LENGTH                                 0x1
#define _MD4CON0_OUT_MASK                                   0x20
#define _MD4CON0_EN_POSN                                    0x7
#define _MD4CON0_EN_POSITION                                0x7
#define _MD4CON0_EN_SIZE                                    0x1
#define _MD4CON0_EN_LENGTH                                  0x1
#define _MD4CON0_EN_MASK                                    0x80
#define _MD4CON0_MD4BIT_POSN                                0x0
#define _MD4CON0_MD4BIT_POSITION                            0x0
#define _MD4CON0_MD4BIT_SIZE                                0x1
#define _MD4CON0_MD4BIT_LENGTH                              0x1
#define _MD4CON0_MD4BIT_MASK                                0x1
#define _MD4CON0_MD4OPOL_POSN                               0x4
#define _MD4CON0_MD4OPOL_POSITION                           0x4
#define _MD4CON0_MD4OPOL_SIZE                               0x1
#define _MD4CON0_MD4OPOL_LENGTH                             0x1
#define _MD4CON0_MD4OPOL_MASK                               0x10
#define _MD4CON0_MD4OUT_POSN                                0x5
#define _MD4CON0_MD4OUT_POSITION                            0x5
#define _MD4CON0_MD4OUT_SIZE                                0x1
#define _MD4CON0_MD4OUT_LENGTH                              0x1
#define _MD4CON0_MD4OUT_MASK                                0x20
#define _MD4CON0_MD4EN_POSN                                 0x7
#define _MD4CON0_MD4EN_POSITION                             0x7
#define _MD4CON0_MD4EN_SIZE                                 0x1
#define _MD4CON0_MD4EN_LENGTH                               0x1
#define _MD4CON0_MD4EN_MASK                                 0x80

// Register: MD4CON1
#define MD4CON1 MD4CON1
extern volatile unsigned char           MD4CON1             __at(0xD1C);
#ifndef _LIB_BUILD
asm("MD4CON1 equ 0D1Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLSYNC                 :1;
        unsigned CLPOL                  :1;
        unsigned                        :2;
        unsigned CHSYNC                 :1;
        unsigned CHPOL                  :1;
    };
    struct {
        unsigned MD4CLSYNC              :1;
        unsigned MD4CLPOL               :1;
        unsigned                        :2;
        unsigned MD4CHSYNC              :1;
        unsigned MD4CHPOL               :1;
    };
} MD4CON1bits_t;
extern volatile MD4CON1bits_t MD4CON1bits __at(0xD1C);
// bitfield macros
#define _MD4CON1_CLSYNC_POSN                                0x0
#define _MD4CON1_CLSYNC_POSITION                            0x0
#define _MD4CON1_CLSYNC_SIZE                                0x1
#define _MD4CON1_CLSYNC_LENGTH                              0x1
#define _MD4CON1_CLSYNC_MASK                                0x1
#define _MD4CON1_CLPOL_POSN                                 0x1
#define _MD4CON1_CLPOL_POSITION                             0x1
#define _MD4CON1_CLPOL_SIZE                                 0x1
#define _MD4CON1_CLPOL_LENGTH                               0x1
#define _MD4CON1_CLPOL_MASK                                 0x2
#define _MD4CON1_CHSYNC_POSN                                0x4
#define _MD4CON1_CHSYNC_POSITION                            0x4
#define _MD4CON1_CHSYNC_SIZE                                0x1
#define _MD4CON1_CHSYNC_LENGTH                              0x1
#define _MD4CON1_CHSYNC_MASK                                0x10
#define _MD4CON1_CHPOL_POSN                                 0x5
#define _MD4CON1_CHPOL_POSITION                             0x5
#define _MD4CON1_CHPOL_SIZE                                 0x1
#define _MD4CON1_CHPOL_LENGTH                               0x1
#define _MD4CON1_CHPOL_MASK                                 0x20
#define _MD4CON1_MD4CLSYNC_POSN                             0x0
#define _MD4CON1_MD4CLSYNC_POSITION                         0x0
#define _MD4CON1_MD4CLSYNC_SIZE                             0x1
#define _MD4CON1_MD4CLSYNC_LENGTH                           0x1
#define _MD4CON1_MD4CLSYNC_MASK                             0x1
#define _MD4CON1_MD4CLPOL_POSN                              0x1
#define _MD4CON1_MD4CLPOL_POSITION                          0x1
#define _MD4CON1_MD4CLPOL_SIZE                              0x1
#define _MD4CON1_MD4CLPOL_LENGTH                            0x1
#define _MD4CON1_MD4CLPOL_MASK                              0x2
#define _MD4CON1_MD4CHSYNC_POSN                             0x4
#define _MD4CON1_MD4CHSYNC_POSITION                         0x4
#define _MD4CON1_MD4CHSYNC_SIZE                             0x1
#define _MD4CON1_MD4CHSYNC_LENGTH                           0x1
#define _MD4CON1_MD4CHSYNC_MASK                             0x10
#define _MD4CON1_MD4CHPOL_POSN                              0x5
#define _MD4CON1_MD4CHPOL_POSITION                          0x5
#define _MD4CON1_MD4CHPOL_SIZE                              0x1
#define _MD4CON1_MD4CHPOL_LENGTH                            0x1
#define _MD4CON1_MD4CHPOL_MASK                              0x20

// Register: MD4SRC
#define MD4SRC MD4SRC
extern volatile unsigned char           MD4SRC              __at(0xD1D);
#ifndef _LIB_BUILD
asm("MD4SRC equ 0D1Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MS                     :5;
    };
    struct {
        unsigned MS0                    :1;
        unsigned MS1                    :1;
        unsigned MS2                    :1;
        unsigned MS3                    :1;
        unsigned MS4                    :1;
    };
    struct {
        unsigned MD4MS                  :5;
    };
    struct {
        unsigned MD4MS0                 :1;
        unsigned MD4MS1                 :1;
        unsigned MD4MS2                 :1;
        unsigned MD4MS3                 :1;
        unsigned MD4MS4                 :1;
    };
} MD4SRCbits_t;
extern volatile MD4SRCbits_t MD4SRCbits __at(0xD1D);
// bitfield macros
#define _MD4SRC_MS_POSN                                     0x0
#define _MD4SRC_MS_POSITION                                 0x0
#define _MD4SRC_MS_SIZE                                     0x5
#define _MD4SRC_MS_LENGTH                                   0x5
#define _MD4SRC_MS_MASK                                     0x1F
#define _MD4SRC_MS0_POSN                                    0x0
#define _MD4SRC_MS0_POSITION                                0x0
#define _MD4SRC_MS0_SIZE                                    0x1
#define _MD4SRC_MS0_LENGTH                                  0x1
#define _MD4SRC_MS0_MASK                                    0x1
#define _MD4SRC_MS1_POSN                                    0x1
#define _MD4SRC_MS1_POSITION                                0x1
#define _MD4SRC_MS1_SIZE                                    0x1
#define _MD4SRC_MS1_LENGTH                                  0x1
#define _MD4SRC_MS1_MASK                                    0x2
#define _MD4SRC_MS2_POSN                                    0x2
#define _MD4SRC_MS2_POSITION                                0x2
#define _MD4SRC_MS2_SIZE                                    0x1
#define _MD4SRC_MS2_LENGTH                                  0x1
#define _MD4SRC_MS2_MASK                                    0x4
#define _MD4SRC_MS3_POSN                                    0x3
#define _MD4SRC_MS3_POSITION                                0x3
#define _MD4SRC_MS3_SIZE                                    0x1
#define _MD4SRC_MS3_LENGTH                                  0x1
#define _MD4SRC_MS3_MASK                                    0x8
#define _MD4SRC_MS4_POSN                                    0x4
#define _MD4SRC_MS4_POSITION                                0x4
#define _MD4SRC_MS4_SIZE                                    0x1
#define _MD4SRC_MS4_LENGTH                                  0x1
#define _MD4SRC_MS4_MASK                                    0x10
#define _MD4SRC_MD4MS_POSN                                  0x0
#define _MD4SRC_MD4MS_POSITION                              0x0
#define _MD4SRC_MD4MS_SIZE                                  0x5
#define _MD4SRC_MD4MS_LENGTH                                0x5
#define _MD4SRC_MD4MS_MASK                                  0x1F
#define _MD4SRC_MD4MS0_POSN                                 0x0
#define _MD4SRC_MD4MS0_POSITION                             0x0
#define _MD4SRC_MD4MS0_SIZE                                 0x1
#define _MD4SRC_MD4MS0_LENGTH                               0x1
#define _MD4SRC_MD4MS0_MASK                                 0x1
#define _MD4SRC_MD4MS1_POSN                                 0x1
#define _MD4SRC_MD4MS1_POSITION                             0x1
#define _MD4SRC_MD4MS1_SIZE                                 0x1
#define _MD4SRC_MD4MS1_LENGTH                               0x1
#define _MD4SRC_MD4MS1_MASK                                 0x2
#define _MD4SRC_MD4MS2_POSN                                 0x2
#define _MD4SRC_MD4MS2_POSITION                             0x2
#define _MD4SRC_MD4MS2_SIZE                                 0x1
#define _MD4SRC_MD4MS2_LENGTH                               0x1
#define _MD4SRC_MD4MS2_MASK                                 0x4
#define _MD4SRC_MD4MS3_POSN                                 0x3
#define _MD4SRC_MD4MS3_POSITION                             0x3
#define _MD4SRC_MD4MS3_SIZE                                 0x1
#define _MD4SRC_MD4MS3_LENGTH                               0x1
#define _MD4SRC_MD4MS3_MASK                                 0x8
#define _MD4SRC_MD4MS4_POSN                                 0x4
#define _MD4SRC_MD4MS4_POSITION                             0x4
#define _MD4SRC_MD4MS4_SIZE                                 0x1
#define _MD4SRC_MD4MS4_LENGTH                               0x1
#define _MD4SRC_MD4MS4_MASK                                 0x10

// Register: MD4CARL
#define MD4CARL MD4CARL
extern volatile unsigned char           MD4CARL             __at(0xD1E);
#ifndef _LIB_BUILD
asm("MD4CARL equ 0D1Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CL                     :5;
    };
    struct {
        unsigned CL0                    :1;
        unsigned CL1                    :1;
        unsigned CL2                    :1;
        unsigned CL3                    :1;
        unsigned CL4                    :1;
    };
    struct {
        unsigned MD4CL                  :5;
    };
    struct {
        unsigned MD4CL0                 :1;
        unsigned MD4CL1                 :1;
        unsigned MD4CL2                 :1;
        unsigned MD4CL3                 :1;
        unsigned MD4CL4                 :1;
    };
} MD4CARLbits_t;
extern volatile MD4CARLbits_t MD4CARLbits __at(0xD1E);
// bitfield macros
#define _MD4CARL_CL_POSN                                    0x0
#define _MD4CARL_CL_POSITION                                0x0
#define _MD4CARL_CL_SIZE                                    0x5
#define _MD4CARL_CL_LENGTH                                  0x5
#define _MD4CARL_CL_MASK                                    0x1F
#define _MD4CARL_CL0_POSN                                   0x0
#define _MD4CARL_CL0_POSITION                               0x0
#define _MD4CARL_CL0_SIZE                                   0x1
#define _MD4CARL_CL0_LENGTH                                 0x1
#define _MD4CARL_CL0_MASK                                   0x1
#define _MD4CARL_CL1_POSN                                   0x1
#define _MD4CARL_CL1_POSITION                               0x1
#define _MD4CARL_CL1_SIZE                                   0x1
#define _MD4CARL_CL1_LENGTH                                 0x1
#define _MD4CARL_CL1_MASK                                   0x2
#define _MD4CARL_CL2_POSN                                   0x2
#define _MD4CARL_CL2_POSITION                               0x2
#define _MD4CARL_CL2_SIZE                                   0x1
#define _MD4CARL_CL2_LENGTH                                 0x1
#define _MD4CARL_CL2_MASK                                   0x4
#define _MD4CARL_CL3_POSN                                   0x3
#define _MD4CARL_CL3_POSITION                               0x3
#define _MD4CARL_CL3_SIZE                                   0x1
#define _MD4CARL_CL3_LENGTH                                 0x1
#define _MD4CARL_CL3_MASK                                   0x8
#define _MD4CARL_CL4_POSN                                   0x4
#define _MD4CARL_CL4_POSITION                               0x4
#define _MD4CARL_CL4_SIZE                                   0x1
#define _MD4CARL_CL4_LENGTH                                 0x1
#define _MD4CARL_CL4_MASK                                   0x10
#define _MD4CARL_MD4CL_POSN                                 0x0
#define _MD4CARL_MD4CL_POSITION                             0x0
#define _MD4CARL_MD4CL_SIZE                                 0x5
#define _MD4CARL_MD4CL_LENGTH                               0x5
#define _MD4CARL_MD4CL_MASK                                 0x1F
#define _MD4CARL_MD4CL0_POSN                                0x0
#define _MD4CARL_MD4CL0_POSITION                            0x0
#define _MD4CARL_MD4CL0_SIZE                                0x1
#define _MD4CARL_MD4CL0_LENGTH                              0x1
#define _MD4CARL_MD4CL0_MASK                                0x1
#define _MD4CARL_MD4CL1_POSN                                0x1
#define _MD4CARL_MD4CL1_POSITION                            0x1
#define _MD4CARL_MD4CL1_SIZE                                0x1
#define _MD4CARL_MD4CL1_LENGTH                              0x1
#define _MD4CARL_MD4CL1_MASK                                0x2
#define _MD4CARL_MD4CL2_POSN                                0x2
#define _MD4CARL_MD4CL2_POSITION                            0x2
#define _MD4CARL_MD4CL2_SIZE                                0x1
#define _MD4CARL_MD4CL2_LENGTH                              0x1
#define _MD4CARL_MD4CL2_MASK                                0x4
#define _MD4CARL_MD4CL3_POSN                                0x3
#define _MD4CARL_MD4CL3_POSITION                            0x3
#define _MD4CARL_MD4CL3_SIZE                                0x1
#define _MD4CARL_MD4CL3_LENGTH                              0x1
#define _MD4CARL_MD4CL3_MASK                                0x8
#define _MD4CARL_MD4CL4_POSN                                0x4
#define _MD4CARL_MD4CL4_POSITION                            0x4
#define _MD4CARL_MD4CL4_SIZE                                0x1
#define _MD4CARL_MD4CL4_LENGTH                              0x1
#define _MD4CARL_MD4CL4_MASK                                0x10

// Register: MD4CARH
#define MD4CARH MD4CARH
extern volatile unsigned char           MD4CARH             __at(0xD1F);
#ifndef _LIB_BUILD
asm("MD4CARH equ 0D1Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CH                     :5;
    };
    struct {
        unsigned CH0                    :1;
        unsigned CH1                    :1;
        unsigned CH2                    :1;
        unsigned CH3                    :1;
        unsigned CH4                    :1;
    };
    struct {
        unsigned MD4CH                  :5;
    };
    struct {
        unsigned MD4CH0                 :1;
        unsigned MD4CH1                 :1;
        unsigned MD4CH2                 :1;
        unsigned MD4CH3                 :1;
        unsigned MD4CH4                 :1;
    };
} MD4CARHbits_t;
extern volatile MD4CARHbits_t MD4CARHbits __at(0xD1F);
// bitfield macros
#define _MD4CARH_CH_POSN                                    0x0
#define _MD4CARH_CH_POSITION                                0x0
#define _MD4CARH_CH_SIZE                                    0x5
#define _MD4CARH_CH_LENGTH                                  0x5
#define _MD4CARH_CH_MASK                                    0x1F
#define _MD4CARH_CH0_POSN                                   0x0
#define _MD4CARH_CH0_POSITION                               0x0
#define _MD4CARH_CH0_SIZE                                   0x1
#define _MD4CARH_CH0_LENGTH                                 0x1
#define _MD4CARH_CH0_MASK                                   0x1
#define _MD4CARH_CH1_POSN                                   0x1
#define _MD4CARH_CH1_POSITION                               0x1
#define _MD4CARH_CH1_SIZE                                   0x1
#define _MD4CARH_CH1_LENGTH                                 0x1
#define _MD4CARH_CH1_MASK                                   0x2
#define _MD4CARH_CH2_POSN                                   0x2
#define _MD4CARH_CH2_POSITION                               0x2
#define _MD4CARH_CH2_SIZE                                   0x1
#define _MD4CARH_CH2_LENGTH                                 0x1
#define _MD4CARH_CH2_MASK                                   0x4
#define _MD4CARH_CH3_POSN                                   0x3
#define _MD4CARH_CH3_POSITION                               0x3
#define _MD4CARH_CH3_SIZE                                   0x1
#define _MD4CARH_CH3_LENGTH                                 0x1
#define _MD4CARH_CH3_MASK                                   0x8
#define _MD4CARH_CH4_POSN                                   0x4
#define _MD4CARH_CH4_POSITION                               0x4
#define _MD4CARH_CH4_SIZE                                   0x1
#define _MD4CARH_CH4_LENGTH                                 0x1
#define _MD4CARH_CH4_MASK                                   0x10
#define _MD4CARH_MD4CH_POSN                                 0x0
#define _MD4CARH_MD4CH_POSITION                             0x0
#define _MD4CARH_MD4CH_SIZE                                 0x5
#define _MD4CARH_MD4CH_LENGTH                               0x5
#define _MD4CARH_MD4CH_MASK                                 0x1F
#define _MD4CARH_MD4CH0_POSN                                0x0
#define _MD4CARH_MD4CH0_POSITION                            0x0
#define _MD4CARH_MD4CH0_SIZE                                0x1
#define _MD4CARH_MD4CH0_LENGTH                              0x1
#define _MD4CARH_MD4CH0_MASK                                0x1
#define _MD4CARH_MD4CH1_POSN                                0x1
#define _MD4CARH_MD4CH1_POSITION                            0x1
#define _MD4CARH_MD4CH1_SIZE                                0x1
#define _MD4CARH_MD4CH1_LENGTH                              0x1
#define _MD4CARH_MD4CH1_MASK                                0x2
#define _MD4CARH_MD4CH2_POSN                                0x2
#define _MD4CARH_MD4CH2_POSITION                            0x2
#define _MD4CARH_MD4CH2_SIZE                                0x1
#define _MD4CARH_MD4CH2_LENGTH                              0x1
#define _MD4CARH_MD4CH2_MASK                                0x4
#define _MD4CARH_MD4CH3_POSN                                0x3
#define _MD4CARH_MD4CH3_POSITION                            0x3
#define _MD4CARH_MD4CH3_SIZE                                0x1
#define _MD4CARH_MD4CH3_LENGTH                              0x1
#define _MD4CARH_MD4CH3_MASK                                0x8
#define _MD4CARH_MD4CH4_POSN                                0x4
#define _MD4CARH_MD4CH4_POSITION                            0x4
#define _MD4CARH_MD4CH4_SIZE                                0x1
#define _MD4CARH_MD4CH4_LENGTH                              0x1
#define _MD4CARH_MD4CH4_MASK                                0x10

// Register: PWMEN
#define PWMEN PWMEN
extern volatile unsigned char           PWMEN               __at(0xD8E);
#ifndef _LIB_BUILD
asm("PWMEN equ 0D8Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MPWM5EN                :1;
        unsigned MPWM6EN                :1;
        unsigned MPWM11EN               :1;
        unsigned MPWM12EN               :1;
    };
} PWMENbits_t;
extern volatile PWMENbits_t PWMENbits __at(0xD8E);
// bitfield macros
#define _PWMEN_MPWM5EN_POSN                                 0x0
#define _PWMEN_MPWM5EN_POSITION                             0x0
#define _PWMEN_MPWM5EN_SIZE                                 0x1
#define _PWMEN_MPWM5EN_LENGTH                               0x1
#define _PWMEN_MPWM5EN_MASK                                 0x1
#define _PWMEN_MPWM6EN_POSN                                 0x1
#define _PWMEN_MPWM6EN_POSITION                             0x1
#define _PWMEN_MPWM6EN_SIZE                                 0x1
#define _PWMEN_MPWM6EN_LENGTH                               0x1
#define _PWMEN_MPWM6EN_MASK                                 0x2
#define _PWMEN_MPWM11EN_POSN                                0x2
#define _PWMEN_MPWM11EN_POSITION                            0x2
#define _PWMEN_MPWM11EN_SIZE                                0x1
#define _PWMEN_MPWM11EN_LENGTH                              0x1
#define _PWMEN_MPWM11EN_MASK                                0x4
#define _PWMEN_MPWM12EN_POSN                                0x3
#define _PWMEN_MPWM12EN_POSITION                            0x3
#define _PWMEN_MPWM12EN_SIZE                                0x1
#define _PWMEN_MPWM12EN_LENGTH                              0x1
#define _PWMEN_MPWM12EN_MASK                                0x8

// Register: PWMLD
#define PWMLD PWMLD
extern volatile unsigned char           PWMLD               __at(0xD8F);
#ifndef _LIB_BUILD
asm("PWMLD equ 0D8Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MPWM5LD                :1;
        unsigned MPWM6LD                :1;
        unsigned MPWM11LD               :1;
        unsigned MPWM12LD               :1;
    };
} PWMLDbits_t;
extern volatile PWMLDbits_t PWMLDbits __at(0xD8F);
// bitfield macros
#define _PWMLD_MPWM5LD_POSN                                 0x0
#define _PWMLD_MPWM5LD_POSITION                             0x0
#define _PWMLD_MPWM5LD_SIZE                                 0x1
#define _PWMLD_MPWM5LD_LENGTH                               0x1
#define _PWMLD_MPWM5LD_MASK                                 0x1
#define _PWMLD_MPWM6LD_POSN                                 0x1
#define _PWMLD_MPWM6LD_POSITION                             0x1
#define _PWMLD_MPWM6LD_SIZE                                 0x1
#define _PWMLD_MPWM6LD_LENGTH                               0x1
#define _PWMLD_MPWM6LD_MASK                                 0x2
#define _PWMLD_MPWM11LD_POSN                                0x2
#define _PWMLD_MPWM11LD_POSITION                            0x2
#define _PWMLD_MPWM11LD_SIZE                                0x1
#define _PWMLD_MPWM11LD_LENGTH                              0x1
#define _PWMLD_MPWM11LD_MASK                                0x4
#define _PWMLD_MPWM12LD_POSN                                0x3
#define _PWMLD_MPWM12LD_POSITION                            0x3
#define _PWMLD_MPWM12LD_SIZE                                0x1
#define _PWMLD_MPWM12LD_LENGTH                              0x1
#define _PWMLD_MPWM12LD_MASK                                0x8

// Register: PWMOUT
#define PWMOUT PWMOUT
extern volatile unsigned char           PWMOUT              __at(0xD90);
#ifndef _LIB_BUILD
asm("PWMOUT equ 0D90h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MPWM5OUT               :1;
        unsigned MPWM6OUT               :1;
        unsigned MPWM11OUT              :1;
        unsigned MPWM12OUT              :1;
    };
} PWMOUTbits_t;
extern volatile PWMOUTbits_t PWMOUTbits __at(0xD90);
// bitfield macros
#define _PWMOUT_MPWM5OUT_POSN                               0x0
#define _PWMOUT_MPWM5OUT_POSITION                           0x0
#define _PWMOUT_MPWM5OUT_SIZE                               0x1
#define _PWMOUT_MPWM5OUT_LENGTH                             0x1
#define _PWMOUT_MPWM5OUT_MASK                               0x1
#define _PWMOUT_MPWM6OUT_POSN                               0x1
#define _PWMOUT_MPWM6OUT_POSITION                           0x1
#define _PWMOUT_MPWM6OUT_SIZE                               0x1
#define _PWMOUT_MPWM6OUT_LENGTH                             0x1
#define _PWMOUT_MPWM6OUT_MASK                               0x2
#define _PWMOUT_MPWM11OUT_POSN                              0x2
#define _PWMOUT_MPWM11OUT_POSITION                          0x2
#define _PWMOUT_MPWM11OUT_SIZE                              0x1
#define _PWMOUT_MPWM11OUT_LENGTH                            0x1
#define _PWMOUT_MPWM11OUT_MASK                              0x4
#define _PWMOUT_MPWM12OUT_POSN                              0x3
#define _PWMOUT_MPWM12OUT_POSITION                          0x3
#define _PWMOUT_MPWM12OUT_SIZE                              0x1
#define _PWMOUT_MPWM12OUT_LENGTH                            0x1
#define _PWMOUT_MPWM12OUT_MASK                              0x8

// Register: PWM5PH
#define PWM5PH PWM5PH
extern volatile unsigned short          PWM5PH              __at(0xD91);
#ifndef _LIB_BUILD
asm("PWM5PH equ 0D91h");
#endif

// Register: PWM5PHL
#define PWM5PHL PWM5PHL
extern volatile unsigned char           PWM5PHL             __at(0xD91);
#ifndef _LIB_BUILD
asm("PWM5PHL equ 0D91h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PH                     :8;
    };
    struct {
        unsigned PWM5PHL0               :1;
        unsigned PWM5PHL1               :1;
        unsigned PWM5PHL2               :1;
        unsigned PWM5PHL3               :1;
        unsigned PWM5PHL4               :1;
        unsigned PWM5PHL5               :1;
        unsigned PWM5PHL6               :1;
        unsigned PWM5PHL7               :1;
    };
    struct {
        unsigned PWM5PHL                :8;
    };
} PWM5PHLbits_t;
extern volatile PWM5PHLbits_t PWM5PHLbits __at(0xD91);
// bitfield macros
#define _PWM5PHL_PH_POSN                                    0x0
#define _PWM5PHL_PH_POSITION                                0x0
#define _PWM5PHL_PH_SIZE                                    0x8
#define _PWM5PHL_PH_LENGTH                                  0x8
#define _PWM5PHL_PH_MASK                                    0xFF
#define _PWM5PHL_PWM5PHL0_POSN                              0x0
#define _PWM5PHL_PWM5PHL0_POSITION                          0x0
#define _PWM5PHL_PWM5PHL0_SIZE                              0x1
#define _PWM5PHL_PWM5PHL0_LENGTH                            0x1
#define _PWM5PHL_PWM5PHL0_MASK                              0x1
#define _PWM5PHL_PWM5PHL1_POSN                              0x1
#define _PWM5PHL_PWM5PHL1_POSITION                          0x1
#define _PWM5PHL_PWM5PHL1_SIZE                              0x1
#define _PWM5PHL_PWM5PHL1_LENGTH                            0x1
#define _PWM5PHL_PWM5PHL1_MASK                              0x2
#define _PWM5PHL_PWM5PHL2_POSN                              0x2
#define _PWM5PHL_PWM5PHL2_POSITION                          0x2
#define _PWM5PHL_PWM5PHL2_SIZE                              0x1
#define _PWM5PHL_PWM5PHL2_LENGTH                            0x1
#define _PWM5PHL_PWM5PHL2_MASK                              0x4
#define _PWM5PHL_PWM5PHL3_POSN                              0x3
#define _PWM5PHL_PWM5PHL3_POSITION                          0x3
#define _PWM5PHL_PWM5PHL3_SIZE                              0x1
#define _PWM5PHL_PWM5PHL3_LENGTH                            0x1
#define _PWM5PHL_PWM5PHL3_MASK                              0x8
#define _PWM5PHL_PWM5PHL4_POSN                              0x4
#define _PWM5PHL_PWM5PHL4_POSITION                          0x4
#define _PWM5PHL_PWM5PHL4_SIZE                              0x1
#define _PWM5PHL_PWM5PHL4_LENGTH                            0x1
#define _PWM5PHL_PWM5PHL4_MASK                              0x10
#define _PWM5PHL_PWM5PHL5_POSN                              0x5
#define _PWM5PHL_PWM5PHL5_POSITION                          0x5
#define _PWM5PHL_PWM5PHL5_SIZE                              0x1
#define _PWM5PHL_PWM5PHL5_LENGTH                            0x1
#define _PWM5PHL_PWM5PHL5_MASK                              0x20
#define _PWM5PHL_PWM5PHL6_POSN                              0x6
#define _PWM5PHL_PWM5PHL6_POSITION                          0x6
#define _PWM5PHL_PWM5PHL6_SIZE                              0x1
#define _PWM5PHL_PWM5PHL6_LENGTH                            0x1
#define _PWM5PHL_PWM5PHL6_MASK                              0x40
#define _PWM5PHL_PWM5PHL7_POSN                              0x7
#define _PWM5PHL_PWM5PHL7_POSITION                          0x7
#define _PWM5PHL_PWM5PHL7_SIZE                              0x1
#define _PWM5PHL_PWM5PHL7_LENGTH                            0x1
#define _PWM5PHL_PWM5PHL7_MASK                              0x80
#define _PWM5PHL_PWM5PHL_POSN                               0x0
#define _PWM5PHL_PWM5PHL_POSITION                           0x0
#define _PWM5PHL_PWM5PHL_SIZE                               0x8
#define _PWM5PHL_PWM5PHL_LENGTH                             0x8
#define _PWM5PHL_PWM5PHL_MASK                               0xFF

// Register: PWM5PHH
#define PWM5PHH PWM5PHH
extern volatile unsigned char           PWM5PHH             __at(0xD92);
#ifndef _LIB_BUILD
asm("PWM5PHH equ 0D92h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PH                     :8;
    };
    struct {
        unsigned PWM5PHH0               :1;
        unsigned PWM5PHH1               :1;
        unsigned PWM5PHH2               :1;
        unsigned PWM5PHH3               :1;
        unsigned PWM5PHH4               :1;
        unsigned PWM5PHH5               :1;
        unsigned PWM5PHH6               :1;
        unsigned PWM5PHH7               :1;
    };
    struct {
        unsigned PWM5PHH                :8;
    };
} PWM5PHHbits_t;
extern volatile PWM5PHHbits_t PWM5PHHbits __at(0xD92);
// bitfield macros
#define _PWM5PHH_PH_POSN                                    0x0
#define _PWM5PHH_PH_POSITION                                0x0
#define _PWM5PHH_PH_SIZE                                    0x8
#define _PWM5PHH_PH_LENGTH                                  0x8
#define _PWM5PHH_PH_MASK                                    0xFF
#define _PWM5PHH_PWM5PHH0_POSN                              0x0
#define _PWM5PHH_PWM5PHH0_POSITION                          0x0
#define _PWM5PHH_PWM5PHH0_SIZE                              0x1
#define _PWM5PHH_PWM5PHH0_LENGTH                            0x1
#define _PWM5PHH_PWM5PHH0_MASK                              0x1
#define _PWM5PHH_PWM5PHH1_POSN                              0x1
#define _PWM5PHH_PWM5PHH1_POSITION                          0x1
#define _PWM5PHH_PWM5PHH1_SIZE                              0x1
#define _PWM5PHH_PWM5PHH1_LENGTH                            0x1
#define _PWM5PHH_PWM5PHH1_MASK                              0x2
#define _PWM5PHH_PWM5PHH2_POSN                              0x2
#define _PWM5PHH_PWM5PHH2_POSITION                          0x2
#define _PWM5PHH_PWM5PHH2_SIZE                              0x1
#define _PWM5PHH_PWM5PHH2_LENGTH                            0x1
#define _PWM5PHH_PWM5PHH2_MASK                              0x4
#define _PWM5PHH_PWM5PHH3_POSN                              0x3
#define _PWM5PHH_PWM5PHH3_POSITION                          0x3
#define _PWM5PHH_PWM5PHH3_SIZE                              0x1
#define _PWM5PHH_PWM5PHH3_LENGTH                            0x1
#define _PWM5PHH_PWM5PHH3_MASK                              0x8
#define _PWM5PHH_PWM5PHH4_POSN                              0x4
#define _PWM5PHH_PWM5PHH4_POSITION                          0x4
#define _PWM5PHH_PWM5PHH4_SIZE                              0x1
#define _PWM5PHH_PWM5PHH4_LENGTH                            0x1
#define _PWM5PHH_PWM5PHH4_MASK                              0x10
#define _PWM5PHH_PWM5PHH5_POSN                              0x5
#define _PWM5PHH_PWM5PHH5_POSITION                          0x5
#define _PWM5PHH_PWM5PHH5_SIZE                              0x1
#define _PWM5PHH_PWM5PHH5_LENGTH                            0x1
#define _PWM5PHH_PWM5PHH5_MASK                              0x20
#define _PWM5PHH_PWM5PHH6_POSN                              0x6
#define _PWM5PHH_PWM5PHH6_POSITION                          0x6
#define _PWM5PHH_PWM5PHH6_SIZE                              0x1
#define _PWM5PHH_PWM5PHH6_LENGTH                            0x1
#define _PWM5PHH_PWM5PHH6_MASK                              0x40
#define _PWM5PHH_PWM5PHH7_POSN                              0x7
#define _PWM5PHH_PWM5PHH7_POSITION                          0x7
#define _PWM5PHH_PWM5PHH7_SIZE                              0x1
#define _PWM5PHH_PWM5PHH7_LENGTH                            0x1
#define _PWM5PHH_PWM5PHH7_MASK                              0x80
#define _PWM5PHH_PWM5PHH_POSN                               0x0
#define _PWM5PHH_PWM5PHH_POSITION                           0x0
#define _PWM5PHH_PWM5PHH_SIZE                               0x8
#define _PWM5PHH_PWM5PHH_LENGTH                             0x8
#define _PWM5PHH_PWM5PHH_MASK                               0xFF

// Register: PWM5DC
#define PWM5DC PWM5DC
extern volatile unsigned short          PWM5DC              __at(0xD93);
#ifndef _LIB_BUILD
asm("PWM5DC equ 0D93h");
#endif

// Register: PWM5DCL
#define PWM5DCL PWM5DCL
extern volatile unsigned char           PWM5DCL             __at(0xD93);
#ifndef _LIB_BUILD
asm("PWM5DCL equ 0D93h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned PWM5DCL0               :1;
        unsigned PWM5DCL1               :1;
        unsigned PWM5DCL2               :1;
        unsigned PWM5DCL3               :1;
        unsigned PWM5DCL4               :1;
        unsigned PWM5DCL5               :1;
        unsigned PWM5DCL6               :1;
        unsigned PWM5DCL7               :1;
    };
    struct {
        unsigned PWM5DCL                :8;
    };
} PWM5DCLbits_t;
extern volatile PWM5DCLbits_t PWM5DCLbits __at(0xD93);
// bitfield macros
#define _PWM5DCL_DC_POSN                                    0x0
#define _PWM5DCL_DC_POSITION                                0x0
#define _PWM5DCL_DC_SIZE                                    0x8
#define _PWM5DCL_DC_LENGTH                                  0x8
#define _PWM5DCL_DC_MASK                                    0xFF
#define _PWM5DCL_PWM5DCL0_POSN                              0x0
#define _PWM5DCL_PWM5DCL0_POSITION                          0x0
#define _PWM5DCL_PWM5DCL0_SIZE                              0x1
#define _PWM5DCL_PWM5DCL0_LENGTH                            0x1
#define _PWM5DCL_PWM5DCL0_MASK                              0x1
#define _PWM5DCL_PWM5DCL1_POSN                              0x1
#define _PWM5DCL_PWM5DCL1_POSITION                          0x1
#define _PWM5DCL_PWM5DCL1_SIZE                              0x1
#define _PWM5DCL_PWM5DCL1_LENGTH                            0x1
#define _PWM5DCL_PWM5DCL1_MASK                              0x2
#define _PWM5DCL_PWM5DCL2_POSN                              0x2
#define _PWM5DCL_PWM5DCL2_POSITION                          0x2
#define _PWM5DCL_PWM5DCL2_SIZE                              0x1
#define _PWM5DCL_PWM5DCL2_LENGTH                            0x1
#define _PWM5DCL_PWM5DCL2_MASK                              0x4
#define _PWM5DCL_PWM5DCL3_POSN                              0x3
#define _PWM5DCL_PWM5DCL3_POSITION                          0x3
#define _PWM5DCL_PWM5DCL3_SIZE                              0x1
#define _PWM5DCL_PWM5DCL3_LENGTH                            0x1
#define _PWM5DCL_PWM5DCL3_MASK                              0x8
#define _PWM5DCL_PWM5DCL4_POSN                              0x4
#define _PWM5DCL_PWM5DCL4_POSITION                          0x4
#define _PWM5DCL_PWM5DCL4_SIZE                              0x1
#define _PWM5DCL_PWM5DCL4_LENGTH                            0x1
#define _PWM5DCL_PWM5DCL4_MASK                              0x10
#define _PWM5DCL_PWM5DCL5_POSN                              0x5
#define _PWM5DCL_PWM5DCL5_POSITION                          0x5
#define _PWM5DCL_PWM5DCL5_SIZE                              0x1
#define _PWM5DCL_PWM5DCL5_LENGTH                            0x1
#define _PWM5DCL_PWM5DCL5_MASK                              0x20
#define _PWM5DCL_PWM5DCL6_POSN                              0x6
#define _PWM5DCL_PWM5DCL6_POSITION                          0x6
#define _PWM5DCL_PWM5DCL6_SIZE                              0x1
#define _PWM5DCL_PWM5DCL6_LENGTH                            0x1
#define _PWM5DCL_PWM5DCL6_MASK                              0x40
#define _PWM5DCL_PWM5DCL7_POSN                              0x7
#define _PWM5DCL_PWM5DCL7_POSITION                          0x7
#define _PWM5DCL_PWM5DCL7_SIZE                              0x1
#define _PWM5DCL_PWM5DCL7_LENGTH                            0x1
#define _PWM5DCL_PWM5DCL7_MASK                              0x80
#define _PWM5DCL_PWM5DCL_POSN                               0x0
#define _PWM5DCL_PWM5DCL_POSITION                           0x0
#define _PWM5DCL_PWM5DCL_SIZE                               0x8
#define _PWM5DCL_PWM5DCL_LENGTH                             0x8
#define _PWM5DCL_PWM5DCL_MASK                               0xFF

// Register: PWM5DCH
#define PWM5DCH PWM5DCH
extern volatile unsigned char           PWM5DCH             __at(0xD94);
#ifndef _LIB_BUILD
asm("PWM5DCH equ 0D94h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned PWM5DCH0               :1;
        unsigned PWM5DCH1               :1;
        unsigned PWM5DCH2               :1;
        unsigned PWM5DCH3               :1;
        unsigned PWM5DCH4               :1;
        unsigned PWM5DCH5               :1;
        unsigned PWM5DCH6               :1;
        unsigned PWM5DCH7               :1;
    };
    struct {
        unsigned PWM5DCH                :8;
    };
} PWM5DCHbits_t;
extern volatile PWM5DCHbits_t PWM5DCHbits __at(0xD94);
// bitfield macros
#define _PWM5DCH_DC_POSN                                    0x0
#define _PWM5DCH_DC_POSITION                                0x0
#define _PWM5DCH_DC_SIZE                                    0x8
#define _PWM5DCH_DC_LENGTH                                  0x8
#define _PWM5DCH_DC_MASK                                    0xFF
#define _PWM5DCH_PWM5DCH0_POSN                              0x0
#define _PWM5DCH_PWM5DCH0_POSITION                          0x0
#define _PWM5DCH_PWM5DCH0_SIZE                              0x1
#define _PWM5DCH_PWM5DCH0_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH0_MASK                              0x1
#define _PWM5DCH_PWM5DCH1_POSN                              0x1
#define _PWM5DCH_PWM5DCH1_POSITION                          0x1
#define _PWM5DCH_PWM5DCH1_SIZE                              0x1
#define _PWM5DCH_PWM5DCH1_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH1_MASK                              0x2
#define _PWM5DCH_PWM5DCH2_POSN                              0x2
#define _PWM5DCH_PWM5DCH2_POSITION                          0x2
#define _PWM5DCH_PWM5DCH2_SIZE                              0x1
#define _PWM5DCH_PWM5DCH2_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH2_MASK                              0x4
#define _PWM5DCH_PWM5DCH3_POSN                              0x3
#define _PWM5DCH_PWM5DCH3_POSITION                          0x3
#define _PWM5DCH_PWM5DCH3_SIZE                              0x1
#define _PWM5DCH_PWM5DCH3_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH3_MASK                              0x8
#define _PWM5DCH_PWM5DCH4_POSN                              0x4
#define _PWM5DCH_PWM5DCH4_POSITION                          0x4
#define _PWM5DCH_PWM5DCH4_SIZE                              0x1
#define _PWM5DCH_PWM5DCH4_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH4_MASK                              0x10
#define _PWM5DCH_PWM5DCH5_POSN                              0x5
#define _PWM5DCH_PWM5DCH5_POSITION                          0x5
#define _PWM5DCH_PWM5DCH5_SIZE                              0x1
#define _PWM5DCH_PWM5DCH5_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH5_MASK                              0x20
#define _PWM5DCH_PWM5DCH6_POSN                              0x6
#define _PWM5DCH_PWM5DCH6_POSITION                          0x6
#define _PWM5DCH_PWM5DCH6_SIZE                              0x1
#define _PWM5DCH_PWM5DCH6_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH6_MASK                              0x40
#define _PWM5DCH_PWM5DCH7_POSN                              0x7
#define _PWM5DCH_PWM5DCH7_POSITION                          0x7
#define _PWM5DCH_PWM5DCH7_SIZE                              0x1
#define _PWM5DCH_PWM5DCH7_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH7_MASK                              0x80
#define _PWM5DCH_PWM5DCH_POSN                               0x0
#define _PWM5DCH_PWM5DCH_POSITION                           0x0
#define _PWM5DCH_PWM5DCH_SIZE                               0x8
#define _PWM5DCH_PWM5DCH_LENGTH                             0x8
#define _PWM5DCH_PWM5DCH_MASK                               0xFF

// Register: PWM5PR
#define PWM5PR PWM5PR
extern volatile unsigned short          PWM5PR              __at(0xD95);
#ifndef _LIB_BUILD
asm("PWM5PR equ 0D95h");
#endif

// Register: PWM5PRL
#define PWM5PRL PWM5PRL
extern volatile unsigned char           PWM5PRL             __at(0xD95);
#ifndef _LIB_BUILD
asm("PWM5PRL equ 0D95h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned PWM5PRL0               :1;
        unsigned PWM5PRL1               :1;
        unsigned PWM5PRL2               :1;
        unsigned PWM5PRL3               :1;
        unsigned PWM5PRL4               :1;
        unsigned PWM5PRL5               :1;
        unsigned PWM5PRL6               :1;
        unsigned PWM5PRL7               :1;
    };
    struct {
        unsigned PWM5PRL                :8;
    };
} PWM5PRLbits_t;
extern volatile PWM5PRLbits_t PWM5PRLbits __at(0xD95);
// bitfield macros
#define _PWM5PRL_PR_POSN                                    0x0
#define _PWM5PRL_PR_POSITION                                0x0
#define _PWM5PRL_PR_SIZE                                    0x8
#define _PWM5PRL_PR_LENGTH                                  0x8
#define _PWM5PRL_PR_MASK                                    0xFF
#define _PWM5PRL_PWM5PRL0_POSN                              0x0
#define _PWM5PRL_PWM5PRL0_POSITION                          0x0
#define _PWM5PRL_PWM5PRL0_SIZE                              0x1
#define _PWM5PRL_PWM5PRL0_LENGTH                            0x1
#define _PWM5PRL_PWM5PRL0_MASK                              0x1
#define _PWM5PRL_PWM5PRL1_POSN                              0x1
#define _PWM5PRL_PWM5PRL1_POSITION                          0x1
#define _PWM5PRL_PWM5PRL1_SIZE                              0x1
#define _PWM5PRL_PWM5PRL1_LENGTH                            0x1
#define _PWM5PRL_PWM5PRL1_MASK                              0x2
#define _PWM5PRL_PWM5PRL2_POSN                              0x2
#define _PWM5PRL_PWM5PRL2_POSITION                          0x2
#define _PWM5PRL_PWM5PRL2_SIZE                              0x1
#define _PWM5PRL_PWM5PRL2_LENGTH                            0x1
#define _PWM5PRL_PWM5PRL2_MASK                              0x4
#define _PWM5PRL_PWM5PRL3_POSN                              0x3
#define _PWM5PRL_PWM5PRL3_POSITION                          0x3
#define _PWM5PRL_PWM5PRL3_SIZE                              0x1
#define _PWM5PRL_PWM5PRL3_LENGTH                            0x1
#define _PWM5PRL_PWM5PRL3_MASK                              0x8
#define _PWM5PRL_PWM5PRL4_POSN                              0x4
#define _PWM5PRL_PWM5PRL4_POSITION                          0x4
#define _PWM5PRL_PWM5PRL4_SIZE                              0x1
#define _PWM5PRL_PWM5PRL4_LENGTH                            0x1
#define _PWM5PRL_PWM5PRL4_MASK                              0x10
#define _PWM5PRL_PWM5PRL5_POSN                              0x5
#define _PWM5PRL_PWM5PRL5_POSITION                          0x5
#define _PWM5PRL_PWM5PRL5_SIZE                              0x1
#define _PWM5PRL_PWM5PRL5_LENGTH                            0x1
#define _PWM5PRL_PWM5PRL5_MASK                              0x20
#define _PWM5PRL_PWM5PRL6_POSN                              0x6
#define _PWM5PRL_PWM5PRL6_POSITION                          0x6
#define _PWM5PRL_PWM5PRL6_SIZE                              0x1
#define _PWM5PRL_PWM5PRL6_LENGTH                            0x1
#define _PWM5PRL_PWM5PRL6_MASK                              0x40
#define _PWM5PRL_PWM5PRL7_POSN                              0x7
#define _PWM5PRL_PWM5PRL7_POSITION                          0x7
#define _PWM5PRL_PWM5PRL7_SIZE                              0x1
#define _PWM5PRL_PWM5PRL7_LENGTH                            0x1
#define _PWM5PRL_PWM5PRL7_MASK                              0x80
#define _PWM5PRL_PWM5PRL_POSN                               0x0
#define _PWM5PRL_PWM5PRL_POSITION                           0x0
#define _PWM5PRL_PWM5PRL_SIZE                               0x8
#define _PWM5PRL_PWM5PRL_LENGTH                             0x8
#define _PWM5PRL_PWM5PRL_MASK                               0xFF

// Register: PWM5PRH
#define PWM5PRH PWM5PRH
extern volatile unsigned char           PWM5PRH             __at(0xD96);
#ifndef _LIB_BUILD
asm("PWM5PRH equ 0D96h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned PWM5PRH0               :1;
        unsigned PWM5PRH1               :1;
        unsigned PWM5PRH2               :1;
        unsigned PWM5PRH3               :1;
        unsigned PWM5PRH4               :1;
        unsigned PWM5PRH5               :1;
        unsigned PWM5PRH6               :1;
        unsigned PWM5PRH7               :1;
    };
    struct {
        unsigned PWM5PRH                :8;
    };
} PWM5PRHbits_t;
extern volatile PWM5PRHbits_t PWM5PRHbits __at(0xD96);
// bitfield macros
#define _PWM5PRH_PR_POSN                                    0x0
#define _PWM5PRH_PR_POSITION                                0x0
#define _PWM5PRH_PR_SIZE                                    0x8
#define _PWM5PRH_PR_LENGTH                                  0x8
#define _PWM5PRH_PR_MASK                                    0xFF
#define _PWM5PRH_PWM5PRH0_POSN                              0x0
#define _PWM5PRH_PWM5PRH0_POSITION                          0x0
#define _PWM5PRH_PWM5PRH0_SIZE                              0x1
#define _PWM5PRH_PWM5PRH0_LENGTH                            0x1
#define _PWM5PRH_PWM5PRH0_MASK                              0x1
#define _PWM5PRH_PWM5PRH1_POSN                              0x1
#define _PWM5PRH_PWM5PRH1_POSITION                          0x1
#define _PWM5PRH_PWM5PRH1_SIZE                              0x1
#define _PWM5PRH_PWM5PRH1_LENGTH                            0x1
#define _PWM5PRH_PWM5PRH1_MASK                              0x2
#define _PWM5PRH_PWM5PRH2_POSN                              0x2
#define _PWM5PRH_PWM5PRH2_POSITION                          0x2
#define _PWM5PRH_PWM5PRH2_SIZE                              0x1
#define _PWM5PRH_PWM5PRH2_LENGTH                            0x1
#define _PWM5PRH_PWM5PRH2_MASK                              0x4
#define _PWM5PRH_PWM5PRH3_POSN                              0x3
#define _PWM5PRH_PWM5PRH3_POSITION                          0x3
#define _PWM5PRH_PWM5PRH3_SIZE                              0x1
#define _PWM5PRH_PWM5PRH3_LENGTH                            0x1
#define _PWM5PRH_PWM5PRH3_MASK                              0x8
#define _PWM5PRH_PWM5PRH4_POSN                              0x4
#define _PWM5PRH_PWM5PRH4_POSITION                          0x4
#define _PWM5PRH_PWM5PRH4_SIZE                              0x1
#define _PWM5PRH_PWM5PRH4_LENGTH                            0x1
#define _PWM5PRH_PWM5PRH4_MASK                              0x10
#define _PWM5PRH_PWM5PRH5_POSN                              0x5
#define _PWM5PRH_PWM5PRH5_POSITION                          0x5
#define _PWM5PRH_PWM5PRH5_SIZE                              0x1
#define _PWM5PRH_PWM5PRH5_LENGTH                            0x1
#define _PWM5PRH_PWM5PRH5_MASK                              0x20
#define _PWM5PRH_PWM5PRH6_POSN                              0x6
#define _PWM5PRH_PWM5PRH6_POSITION                          0x6
#define _PWM5PRH_PWM5PRH6_SIZE                              0x1
#define _PWM5PRH_PWM5PRH6_LENGTH                            0x1
#define _PWM5PRH_PWM5PRH6_MASK                              0x40
#define _PWM5PRH_PWM5PRH7_POSN                              0x7
#define _PWM5PRH_PWM5PRH7_POSITION                          0x7
#define _PWM5PRH_PWM5PRH7_SIZE                              0x1
#define _PWM5PRH_PWM5PRH7_LENGTH                            0x1
#define _PWM5PRH_PWM5PRH7_MASK                              0x80
#define _PWM5PRH_PWM5PRH_POSN                               0x0
#define _PWM5PRH_PWM5PRH_POSITION                           0x0
#define _PWM5PRH_PWM5PRH_SIZE                               0x8
#define _PWM5PRH_PWM5PRH_LENGTH                             0x8
#define _PWM5PRH_PWM5PRH_MASK                               0xFF

// Register: PWM5OF
#define PWM5OF PWM5OF
extern volatile unsigned short          PWM5OF              __at(0xD97);
#ifndef _LIB_BUILD
asm("PWM5OF equ 0D97h");
#endif

// Register: PWM5OFL
#define PWM5OFL PWM5OFL
extern volatile unsigned char           PWM5OFL             __at(0xD97);
#ifndef _LIB_BUILD
asm("PWM5OFL equ 0D97h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OF                     :8;
    };
    struct {
        unsigned PWM5OFL0               :1;
        unsigned PWM5OFL1               :1;
        unsigned PWM5OFL2               :1;
        unsigned PWM5OFL3               :1;
        unsigned PWM5OFL4               :1;
        unsigned PWM5OFL5               :1;
        unsigned PWM5OFL6               :1;
        unsigned PWM5OFL7               :1;
    };
    struct {
        unsigned PWM5OFL                :8;
    };
} PWM5OFLbits_t;
extern volatile PWM5OFLbits_t PWM5OFLbits __at(0xD97);
// bitfield macros
#define _PWM5OFL_OF_POSN                                    0x0
#define _PWM5OFL_OF_POSITION                                0x0
#define _PWM5OFL_OF_SIZE                                    0x8
#define _PWM5OFL_OF_LENGTH                                  0x8
#define _PWM5OFL_OF_MASK                                    0xFF
#define _PWM5OFL_PWM5OFL0_POSN                              0x0
#define _PWM5OFL_PWM5OFL0_POSITION                          0x0
#define _PWM5OFL_PWM5OFL0_SIZE                              0x1
#define _PWM5OFL_PWM5OFL0_LENGTH                            0x1
#define _PWM5OFL_PWM5OFL0_MASK                              0x1
#define _PWM5OFL_PWM5OFL1_POSN                              0x1
#define _PWM5OFL_PWM5OFL1_POSITION                          0x1
#define _PWM5OFL_PWM5OFL1_SIZE                              0x1
#define _PWM5OFL_PWM5OFL1_LENGTH                            0x1
#define _PWM5OFL_PWM5OFL1_MASK                              0x2
#define _PWM5OFL_PWM5OFL2_POSN                              0x2
#define _PWM5OFL_PWM5OFL2_POSITION                          0x2
#define _PWM5OFL_PWM5OFL2_SIZE                              0x1
#define _PWM5OFL_PWM5OFL2_LENGTH                            0x1
#define _PWM5OFL_PWM5OFL2_MASK                              0x4
#define _PWM5OFL_PWM5OFL3_POSN                              0x3
#define _PWM5OFL_PWM5OFL3_POSITION                          0x3
#define _PWM5OFL_PWM5OFL3_SIZE                              0x1
#define _PWM5OFL_PWM5OFL3_LENGTH                            0x1
#define _PWM5OFL_PWM5OFL3_MASK                              0x8
#define _PWM5OFL_PWM5OFL4_POSN                              0x4
#define _PWM5OFL_PWM5OFL4_POSITION                          0x4
#define _PWM5OFL_PWM5OFL4_SIZE                              0x1
#define _PWM5OFL_PWM5OFL4_LENGTH                            0x1
#define _PWM5OFL_PWM5OFL4_MASK                              0x10
#define _PWM5OFL_PWM5OFL5_POSN                              0x5
#define _PWM5OFL_PWM5OFL5_POSITION                          0x5
#define _PWM5OFL_PWM5OFL5_SIZE                              0x1
#define _PWM5OFL_PWM5OFL5_LENGTH                            0x1
#define _PWM5OFL_PWM5OFL5_MASK                              0x20
#define _PWM5OFL_PWM5OFL6_POSN                              0x6
#define _PWM5OFL_PWM5OFL6_POSITION                          0x6
#define _PWM5OFL_PWM5OFL6_SIZE                              0x1
#define _PWM5OFL_PWM5OFL6_LENGTH                            0x1
#define _PWM5OFL_PWM5OFL6_MASK                              0x40
#define _PWM5OFL_PWM5OFL7_POSN                              0x7
#define _PWM5OFL_PWM5OFL7_POSITION                          0x7
#define _PWM5OFL_PWM5OFL7_SIZE                              0x1
#define _PWM5OFL_PWM5OFL7_LENGTH                            0x1
#define _PWM5OFL_PWM5OFL7_MASK                              0x80
#define _PWM5OFL_PWM5OFL_POSN                               0x0
#define _PWM5OFL_PWM5OFL_POSITION                           0x0
#define _PWM5OFL_PWM5OFL_SIZE                               0x8
#define _PWM5OFL_PWM5OFL_LENGTH                             0x8
#define _PWM5OFL_PWM5OFL_MASK                               0xFF

// Register: PWM5OFH
#define PWM5OFH PWM5OFH
extern volatile unsigned char           PWM5OFH             __at(0xD98);
#ifndef _LIB_BUILD
asm("PWM5OFH equ 0D98h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OF                     :8;
    };
    struct {
        unsigned PWM5OFH0               :1;
        unsigned PWM5OFH1               :1;
        unsigned PWM5OFH2               :1;
        unsigned PWM5OFH3               :1;
        unsigned PWM5OFH4               :1;
        unsigned PWM5OFH5               :1;
        unsigned PWM5OFH6               :1;
        unsigned PWM5OFH7               :1;
    };
    struct {
        unsigned PWM5OFH                :8;
    };
} PWM5OFHbits_t;
extern volatile PWM5OFHbits_t PWM5OFHbits __at(0xD98);
// bitfield macros
#define _PWM5OFH_OF_POSN                                    0x0
#define _PWM5OFH_OF_POSITION                                0x0
#define _PWM5OFH_OF_SIZE                                    0x8
#define _PWM5OFH_OF_LENGTH                                  0x8
#define _PWM5OFH_OF_MASK                                    0xFF
#define _PWM5OFH_PWM5OFH0_POSN                              0x0
#define _PWM5OFH_PWM5OFH0_POSITION                          0x0
#define _PWM5OFH_PWM5OFH0_SIZE                              0x1
#define _PWM5OFH_PWM5OFH0_LENGTH                            0x1
#define _PWM5OFH_PWM5OFH0_MASK                              0x1
#define _PWM5OFH_PWM5OFH1_POSN                              0x1
#define _PWM5OFH_PWM5OFH1_POSITION                          0x1
#define _PWM5OFH_PWM5OFH1_SIZE                              0x1
#define _PWM5OFH_PWM5OFH1_LENGTH                            0x1
#define _PWM5OFH_PWM5OFH1_MASK                              0x2
#define _PWM5OFH_PWM5OFH2_POSN                              0x2
#define _PWM5OFH_PWM5OFH2_POSITION                          0x2
#define _PWM5OFH_PWM5OFH2_SIZE                              0x1
#define _PWM5OFH_PWM5OFH2_LENGTH                            0x1
#define _PWM5OFH_PWM5OFH2_MASK                              0x4
#define _PWM5OFH_PWM5OFH3_POSN                              0x3
#define _PWM5OFH_PWM5OFH3_POSITION                          0x3
#define _PWM5OFH_PWM5OFH3_SIZE                              0x1
#define _PWM5OFH_PWM5OFH3_LENGTH                            0x1
#define _PWM5OFH_PWM5OFH3_MASK                              0x8
#define _PWM5OFH_PWM5OFH4_POSN                              0x4
#define _PWM5OFH_PWM5OFH4_POSITION                          0x4
#define _PWM5OFH_PWM5OFH4_SIZE                              0x1
#define _PWM5OFH_PWM5OFH4_LENGTH                            0x1
#define _PWM5OFH_PWM5OFH4_MASK                              0x10
#define _PWM5OFH_PWM5OFH5_POSN                              0x5
#define _PWM5OFH_PWM5OFH5_POSITION                          0x5
#define _PWM5OFH_PWM5OFH5_SIZE                              0x1
#define _PWM5OFH_PWM5OFH5_LENGTH                            0x1
#define _PWM5OFH_PWM5OFH5_MASK                              0x20
#define _PWM5OFH_PWM5OFH6_POSN                              0x6
#define _PWM5OFH_PWM5OFH6_POSITION                          0x6
#define _PWM5OFH_PWM5OFH6_SIZE                              0x1
#define _PWM5OFH_PWM5OFH6_LENGTH                            0x1
#define _PWM5OFH_PWM5OFH6_MASK                              0x40
#define _PWM5OFH_PWM5OFH7_POSN                              0x7
#define _PWM5OFH_PWM5OFH7_POSITION                          0x7
#define _PWM5OFH_PWM5OFH7_SIZE                              0x1
#define _PWM5OFH_PWM5OFH7_LENGTH                            0x1
#define _PWM5OFH_PWM5OFH7_MASK                              0x80
#define _PWM5OFH_PWM5OFH_POSN                               0x0
#define _PWM5OFH_PWM5OFH_POSITION                           0x0
#define _PWM5OFH_PWM5OFH_SIZE                               0x8
#define _PWM5OFH_PWM5OFH_LENGTH                             0x8
#define _PWM5OFH_PWM5OFH_MASK                               0xFF

// Register: PWM5TMR
#define PWM5TMR PWM5TMR
extern volatile unsigned short          PWM5TMR             __at(0xD99);
#ifndef _LIB_BUILD
asm("PWM5TMR equ 0D99h");
#endif

// Register: PWM5TMRL
#define PWM5TMRL PWM5TMRL
extern volatile unsigned char           PWM5TMRL            __at(0xD99);
#ifndef _LIB_BUILD
asm("PWM5TMRL equ 0D99h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned PWM5TMRL0              :1;
        unsigned PWM5TMRL1              :1;
        unsigned PWM5TMRL2              :1;
        unsigned PWM5TMRL3              :1;
        unsigned PWM5TMRL4              :1;
        unsigned PWM5TMRL5              :1;
        unsigned PWM5TMRL6              :1;
        unsigned PWM5TMRL7              :1;
    };
    struct {
        unsigned PWM5TMRL               :8;
    };
} PWM5TMRLbits_t;
extern volatile PWM5TMRLbits_t PWM5TMRLbits __at(0xD99);
// bitfield macros
#define _PWM5TMRL_TMR_POSN                                  0x0
#define _PWM5TMRL_TMR_POSITION                              0x0
#define _PWM5TMRL_TMR_SIZE                                  0x8
#define _PWM5TMRL_TMR_LENGTH                                0x8
#define _PWM5TMRL_TMR_MASK                                  0xFF
#define _PWM5TMRL_PWM5TMRL0_POSN                            0x0
#define _PWM5TMRL_PWM5TMRL0_POSITION                        0x0
#define _PWM5TMRL_PWM5TMRL0_SIZE                            0x1
#define _PWM5TMRL_PWM5TMRL0_LENGTH                          0x1
#define _PWM5TMRL_PWM5TMRL0_MASK                            0x1
#define _PWM5TMRL_PWM5TMRL1_POSN                            0x1
#define _PWM5TMRL_PWM5TMRL1_POSITION                        0x1
#define _PWM5TMRL_PWM5TMRL1_SIZE                            0x1
#define _PWM5TMRL_PWM5TMRL1_LENGTH                          0x1
#define _PWM5TMRL_PWM5TMRL1_MASK                            0x2
#define _PWM5TMRL_PWM5TMRL2_POSN                            0x2
#define _PWM5TMRL_PWM5TMRL2_POSITION                        0x2
#define _PWM5TMRL_PWM5TMRL2_SIZE                            0x1
#define _PWM5TMRL_PWM5TMRL2_LENGTH                          0x1
#define _PWM5TMRL_PWM5TMRL2_MASK                            0x4
#define _PWM5TMRL_PWM5TMRL3_POSN                            0x3
#define _PWM5TMRL_PWM5TMRL3_POSITION                        0x3
#define _PWM5TMRL_PWM5TMRL3_SIZE                            0x1
#define _PWM5TMRL_PWM5TMRL3_LENGTH                          0x1
#define _PWM5TMRL_PWM5TMRL3_MASK                            0x8
#define _PWM5TMRL_PWM5TMRL4_POSN                            0x4
#define _PWM5TMRL_PWM5TMRL4_POSITION                        0x4
#define _PWM5TMRL_PWM5TMRL4_SIZE                            0x1
#define _PWM5TMRL_PWM5TMRL4_LENGTH                          0x1
#define _PWM5TMRL_PWM5TMRL4_MASK                            0x10
#define _PWM5TMRL_PWM5TMRL5_POSN                            0x5
#define _PWM5TMRL_PWM5TMRL5_POSITION                        0x5
#define _PWM5TMRL_PWM5TMRL5_SIZE                            0x1
#define _PWM5TMRL_PWM5TMRL5_LENGTH                          0x1
#define _PWM5TMRL_PWM5TMRL5_MASK                            0x20
#define _PWM5TMRL_PWM5TMRL6_POSN                            0x6
#define _PWM5TMRL_PWM5TMRL6_POSITION                        0x6
#define _PWM5TMRL_PWM5TMRL6_SIZE                            0x1
#define _PWM5TMRL_PWM5TMRL6_LENGTH                          0x1
#define _PWM5TMRL_PWM5TMRL6_MASK                            0x40
#define _PWM5TMRL_PWM5TMRL7_POSN                            0x7
#define _PWM5TMRL_PWM5TMRL7_POSITION                        0x7
#define _PWM5TMRL_PWM5TMRL7_SIZE                            0x1
#define _PWM5TMRL_PWM5TMRL7_LENGTH                          0x1
#define _PWM5TMRL_PWM5TMRL7_MASK                            0x80
#define _PWM5TMRL_PWM5TMRL_POSN                             0x0
#define _PWM5TMRL_PWM5TMRL_POSITION                         0x0
#define _PWM5TMRL_PWM5TMRL_SIZE                             0x8
#define _PWM5TMRL_PWM5TMRL_LENGTH                           0x8
#define _PWM5TMRL_PWM5TMRL_MASK                             0xFF

// Register: PWM5TMRH
#define PWM5TMRH PWM5TMRH
extern volatile unsigned char           PWM5TMRH            __at(0xD9A);
#ifndef _LIB_BUILD
asm("PWM5TMRH equ 0D9Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned PWM5TMRH0              :1;
        unsigned PWM5TMRH1              :1;
        unsigned PWM5TMRH2              :1;
        unsigned PWM5TMRH3              :1;
        unsigned PWM5TMRH4              :1;
        unsigned PWM5TMRH5              :1;
        unsigned PWM5TMRH6              :1;
        unsigned PWM5TMRH7              :1;
    };
    struct {
        unsigned PWM5TMRH               :8;
    };
} PWM5TMRHbits_t;
extern volatile PWM5TMRHbits_t PWM5TMRHbits __at(0xD9A);
// bitfield macros
#define _PWM5TMRH_TMR_POSN                                  0x0
#define _PWM5TMRH_TMR_POSITION                              0x0
#define _PWM5TMRH_TMR_SIZE                                  0x8
#define _PWM5TMRH_TMR_LENGTH                                0x8
#define _PWM5TMRH_TMR_MASK                                  0xFF
#define _PWM5TMRH_PWM5TMRH0_POSN                            0x0
#define _PWM5TMRH_PWM5TMRH0_POSITION                        0x0
#define _PWM5TMRH_PWM5TMRH0_SIZE                            0x1
#define _PWM5TMRH_PWM5TMRH0_LENGTH                          0x1
#define _PWM5TMRH_PWM5TMRH0_MASK                            0x1
#define _PWM5TMRH_PWM5TMRH1_POSN                            0x1
#define _PWM5TMRH_PWM5TMRH1_POSITION                        0x1
#define _PWM5TMRH_PWM5TMRH1_SIZE                            0x1
#define _PWM5TMRH_PWM5TMRH1_LENGTH                          0x1
#define _PWM5TMRH_PWM5TMRH1_MASK                            0x2
#define _PWM5TMRH_PWM5TMRH2_POSN                            0x2
#define _PWM5TMRH_PWM5TMRH2_POSITION                        0x2
#define _PWM5TMRH_PWM5TMRH2_SIZE                            0x1
#define _PWM5TMRH_PWM5TMRH2_LENGTH                          0x1
#define _PWM5TMRH_PWM5TMRH2_MASK                            0x4
#define _PWM5TMRH_PWM5TMRH3_POSN                            0x3
#define _PWM5TMRH_PWM5TMRH3_POSITION                        0x3
#define _PWM5TMRH_PWM5TMRH3_SIZE                            0x1
#define _PWM5TMRH_PWM5TMRH3_LENGTH                          0x1
#define _PWM5TMRH_PWM5TMRH3_MASK                            0x8
#define _PWM5TMRH_PWM5TMRH4_POSN                            0x4
#define _PWM5TMRH_PWM5TMRH4_POSITION                        0x4
#define _PWM5TMRH_PWM5TMRH4_SIZE                            0x1
#define _PWM5TMRH_PWM5TMRH4_LENGTH                          0x1
#define _PWM5TMRH_PWM5TMRH4_MASK                            0x10
#define _PWM5TMRH_PWM5TMRH5_POSN                            0x5
#define _PWM5TMRH_PWM5TMRH5_POSITION                        0x5
#define _PWM5TMRH_PWM5TMRH5_SIZE                            0x1
#define _PWM5TMRH_PWM5TMRH5_LENGTH                          0x1
#define _PWM5TMRH_PWM5TMRH5_MASK                            0x20
#define _PWM5TMRH_PWM5TMRH6_POSN                            0x6
#define _PWM5TMRH_PWM5TMRH6_POSITION                        0x6
#define _PWM5TMRH_PWM5TMRH6_SIZE                            0x1
#define _PWM5TMRH_PWM5TMRH6_LENGTH                          0x1
#define _PWM5TMRH_PWM5TMRH6_MASK                            0x40
#define _PWM5TMRH_PWM5TMRH7_POSN                            0x7
#define _PWM5TMRH_PWM5TMRH7_POSITION                        0x7
#define _PWM5TMRH_PWM5TMRH7_SIZE                            0x1
#define _PWM5TMRH_PWM5TMRH7_LENGTH                          0x1
#define _PWM5TMRH_PWM5TMRH7_MASK                            0x80
#define _PWM5TMRH_PWM5TMRH_POSN                             0x0
#define _PWM5TMRH_PWM5TMRH_POSITION                         0x0
#define _PWM5TMRH_PWM5TMRH_SIZE                             0x8
#define _PWM5TMRH_PWM5TMRH_LENGTH                           0x8
#define _PWM5TMRH_PWM5TMRH_MASK                             0xFF

// Register: PWM5CON
#define PWM5CON PWM5CON
extern volatile unsigned char           PWM5CON             __at(0xD9B);
#ifndef _LIB_BUILD
asm("PWM5CON equ 0D9Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned MODE                   :2;
        unsigned POL                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned PWM5MODE0              :1;
        unsigned PWM5MODE1              :1;
    };
    struct {
        unsigned                        :2;
        unsigned PWM5MODE               :2;
        unsigned PWM5POL                :1;
        unsigned PWM5OUT                :1;
        unsigned                        :1;
        unsigned PWM5EN                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
    };
} PWM5CONbits_t;
extern volatile PWM5CONbits_t PWM5CONbits __at(0xD9B);
// bitfield macros
#define _PWM5CON_MODE_POSN                                  0x2
#define _PWM5CON_MODE_POSITION                              0x2
#define _PWM5CON_MODE_SIZE                                  0x2
#define _PWM5CON_MODE_LENGTH                                0x2
#define _PWM5CON_MODE_MASK                                  0xC
#define _PWM5CON_POL_POSN                                   0x4
#define _PWM5CON_POL_POSITION                               0x4
#define _PWM5CON_POL_SIZE                                   0x1
#define _PWM5CON_POL_LENGTH                                 0x1
#define _PWM5CON_POL_MASK                                   0x10
#define _PWM5CON_OUT_POSN                                   0x5
#define _PWM5CON_OUT_POSITION                               0x5
#define _PWM5CON_OUT_SIZE                                   0x1
#define _PWM5CON_OUT_LENGTH                                 0x1
#define _PWM5CON_OUT_MASK                                   0x20
#define _PWM5CON_EN_POSN                                    0x7
#define _PWM5CON_EN_POSITION                                0x7
#define _PWM5CON_EN_SIZE                                    0x1
#define _PWM5CON_EN_LENGTH                                  0x1
#define _PWM5CON_EN_MASK                                    0x80
#define _PWM5CON_PWM5MODE0_POSN                             0x2
#define _PWM5CON_PWM5MODE0_POSITION                         0x2
#define _PWM5CON_PWM5MODE0_SIZE                             0x1
#define _PWM5CON_PWM5MODE0_LENGTH                           0x1
#define _PWM5CON_PWM5MODE0_MASK                             0x4
#define _PWM5CON_PWM5MODE1_POSN                             0x3
#define _PWM5CON_PWM5MODE1_POSITION                         0x3
#define _PWM5CON_PWM5MODE1_SIZE                             0x1
#define _PWM5CON_PWM5MODE1_LENGTH                           0x1
#define _PWM5CON_PWM5MODE1_MASK                             0x8
#define _PWM5CON_PWM5MODE_POSN                              0x2
#define _PWM5CON_PWM5MODE_POSITION                          0x2
#define _PWM5CON_PWM5MODE_SIZE                              0x2
#define _PWM5CON_PWM5MODE_LENGTH                            0x2
#define _PWM5CON_PWM5MODE_MASK                              0xC
#define _PWM5CON_PWM5POL_POSN                               0x4
#define _PWM5CON_PWM5POL_POSITION                           0x4
#define _PWM5CON_PWM5POL_SIZE                               0x1
#define _PWM5CON_PWM5POL_LENGTH                             0x1
#define _PWM5CON_PWM5POL_MASK                               0x10
#define _PWM5CON_PWM5OUT_POSN                               0x5
#define _PWM5CON_PWM5OUT_POSITION                           0x5
#define _PWM5CON_PWM5OUT_SIZE                               0x1
#define _PWM5CON_PWM5OUT_LENGTH                             0x1
#define _PWM5CON_PWM5OUT_MASK                               0x20
#define _PWM5CON_PWM5EN_POSN                                0x7
#define _PWM5CON_PWM5EN_POSITION                            0x7
#define _PWM5CON_PWM5EN_SIZE                                0x1
#define _PWM5CON_PWM5EN_LENGTH                              0x1
#define _PWM5CON_PWM5EN_MASK                                0x80
#define _PWM5CON_MODE0_POSN                                 0x2
#define _PWM5CON_MODE0_POSITION                             0x2
#define _PWM5CON_MODE0_SIZE                                 0x1
#define _PWM5CON_MODE0_LENGTH                               0x1
#define _PWM5CON_MODE0_MASK                                 0x4
#define _PWM5CON_MODE1_POSN                                 0x3
#define _PWM5CON_MODE1_POSITION                             0x3
#define _PWM5CON_MODE1_SIZE                                 0x1
#define _PWM5CON_MODE1_LENGTH                               0x1
#define _PWM5CON_MODE1_MASK                                 0x8

// Register: PWM5INTE
#define PWM5INTE PWM5INTE
extern volatile unsigned char           PWM5INTE            __at(0xD9C);
#ifndef _LIB_BUILD
asm("PWM5INTE equ 0D9Ch");
#endif
// aliases
extern volatile unsigned char           PWM5INTCON          __at(0xD9C);
#ifndef _LIB_BUILD
asm("PWM5INTCON equ 0D9Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRIE                   :1;
        unsigned DCIE                   :1;
        unsigned PHIE                   :1;
        unsigned OFIE                   :1;
    };
    struct {
        unsigned PWM5PRIE               :1;
        unsigned PWM5DCIE               :1;
        unsigned PWM5PHIE               :1;
        unsigned PWM5OFIE               :1;
    };
} PWM5INTEbits_t;
extern volatile PWM5INTEbits_t PWM5INTEbits __at(0xD9C);
// bitfield macros
#define _PWM5INTE_PRIE_POSN                                 0x0
#define _PWM5INTE_PRIE_POSITION                             0x0
#define _PWM5INTE_PRIE_SIZE                                 0x1
#define _PWM5INTE_PRIE_LENGTH                               0x1
#define _PWM5INTE_PRIE_MASK                                 0x1
#define _PWM5INTE_DCIE_POSN                                 0x1
#define _PWM5INTE_DCIE_POSITION                             0x1
#define _PWM5INTE_DCIE_SIZE                                 0x1
#define _PWM5INTE_DCIE_LENGTH                               0x1
#define _PWM5INTE_DCIE_MASK                                 0x2
#define _PWM5INTE_PHIE_POSN                                 0x2
#define _PWM5INTE_PHIE_POSITION                             0x2
#define _PWM5INTE_PHIE_SIZE                                 0x1
#define _PWM5INTE_PHIE_LENGTH                               0x1
#define _PWM5INTE_PHIE_MASK                                 0x4
#define _PWM5INTE_OFIE_POSN                                 0x3
#define _PWM5INTE_OFIE_POSITION                             0x3
#define _PWM5INTE_OFIE_SIZE                                 0x1
#define _PWM5INTE_OFIE_LENGTH                               0x1
#define _PWM5INTE_OFIE_MASK                                 0x8
#define _PWM5INTE_PWM5PRIE_POSN                             0x0
#define _PWM5INTE_PWM5PRIE_POSITION                         0x0
#define _PWM5INTE_PWM5PRIE_SIZE                             0x1
#define _PWM5INTE_PWM5PRIE_LENGTH                           0x1
#define _PWM5INTE_PWM5PRIE_MASK                             0x1
#define _PWM5INTE_PWM5DCIE_POSN                             0x1
#define _PWM5INTE_PWM5DCIE_POSITION                         0x1
#define _PWM5INTE_PWM5DCIE_SIZE                             0x1
#define _PWM5INTE_PWM5DCIE_LENGTH                           0x1
#define _PWM5INTE_PWM5DCIE_MASK                             0x2
#define _PWM5INTE_PWM5PHIE_POSN                             0x2
#define _PWM5INTE_PWM5PHIE_POSITION                         0x2
#define _PWM5INTE_PWM5PHIE_SIZE                             0x1
#define _PWM5INTE_PWM5PHIE_LENGTH                           0x1
#define _PWM5INTE_PWM5PHIE_MASK                             0x4
#define _PWM5INTE_PWM5OFIE_POSN                             0x3
#define _PWM5INTE_PWM5OFIE_POSITION                         0x3
#define _PWM5INTE_PWM5OFIE_SIZE                             0x1
#define _PWM5INTE_PWM5OFIE_LENGTH                           0x1
#define _PWM5INTE_PWM5OFIE_MASK                             0x8
// alias bitfield definitions
typedef union {
    struct {
        unsigned PRIE                   :1;
        unsigned DCIE                   :1;
        unsigned PHIE                   :1;
        unsigned OFIE                   :1;
    };
    struct {
        unsigned PWM5PRIE               :1;
        unsigned PWM5DCIE               :1;
        unsigned PWM5PHIE               :1;
        unsigned PWM5OFIE               :1;
    };
} PWM5INTCONbits_t;
extern volatile PWM5INTCONbits_t PWM5INTCONbits __at(0xD9C);
// bitfield macros
#define _PWM5INTCON_PRIE_POSN                               0x0
#define _PWM5INTCON_PRIE_POSITION                           0x0
#define _PWM5INTCON_PRIE_SIZE                               0x1
#define _PWM5INTCON_PRIE_LENGTH                             0x1
#define _PWM5INTCON_PRIE_MASK                               0x1
#define _PWM5INTCON_DCIE_POSN                               0x1
#define _PWM5INTCON_DCIE_POSITION                           0x1
#define _PWM5INTCON_DCIE_SIZE                               0x1
#define _PWM5INTCON_DCIE_LENGTH                             0x1
#define _PWM5INTCON_DCIE_MASK                               0x2
#define _PWM5INTCON_PHIE_POSN                               0x2
#define _PWM5INTCON_PHIE_POSITION                           0x2
#define _PWM5INTCON_PHIE_SIZE                               0x1
#define _PWM5INTCON_PHIE_LENGTH                             0x1
#define _PWM5INTCON_PHIE_MASK                               0x4
#define _PWM5INTCON_OFIE_POSN                               0x3
#define _PWM5INTCON_OFIE_POSITION                           0x3
#define _PWM5INTCON_OFIE_SIZE                               0x1
#define _PWM5INTCON_OFIE_LENGTH                             0x1
#define _PWM5INTCON_OFIE_MASK                               0x8
#define _PWM5INTCON_PWM5PRIE_POSN                           0x0
#define _PWM5INTCON_PWM5PRIE_POSITION                       0x0
#define _PWM5INTCON_PWM5PRIE_SIZE                           0x1
#define _PWM5INTCON_PWM5PRIE_LENGTH                         0x1
#define _PWM5INTCON_PWM5PRIE_MASK                           0x1
#define _PWM5INTCON_PWM5DCIE_POSN                           0x1
#define _PWM5INTCON_PWM5DCIE_POSITION                       0x1
#define _PWM5INTCON_PWM5DCIE_SIZE                           0x1
#define _PWM5INTCON_PWM5DCIE_LENGTH                         0x1
#define _PWM5INTCON_PWM5DCIE_MASK                           0x2
#define _PWM5INTCON_PWM5PHIE_POSN                           0x2
#define _PWM5INTCON_PWM5PHIE_POSITION                       0x2
#define _PWM5INTCON_PWM5PHIE_SIZE                           0x1
#define _PWM5INTCON_PWM5PHIE_LENGTH                         0x1
#define _PWM5INTCON_PWM5PHIE_MASK                           0x4
#define _PWM5INTCON_PWM5OFIE_POSN                           0x3
#define _PWM5INTCON_PWM5OFIE_POSITION                       0x3
#define _PWM5INTCON_PWM5OFIE_SIZE                           0x1
#define _PWM5INTCON_PWM5OFIE_LENGTH                         0x1
#define _PWM5INTCON_PWM5OFIE_MASK                           0x8

// Register: PWM5INTF
#define PWM5INTF PWM5INTF
extern volatile unsigned char           PWM5INTF            __at(0xD9D);
#ifndef _LIB_BUILD
asm("PWM5INTF equ 0D9Dh");
#endif
// aliases
extern volatile unsigned char           PWM5INTFLG          __at(0xD9D);
#ifndef _LIB_BUILD
asm("PWM5INTFLG equ 0D9Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRIF                   :1;
        unsigned DCIF                   :1;
        unsigned PHIF                   :1;
        unsigned OFIF                   :1;
    };
    struct {
        unsigned PWM5PRIF               :1;
        unsigned PWM5DCIF               :1;
        unsigned PWM5PHIF               :1;
        unsigned PWM5OFIF               :1;
    };
} PWM5INTFbits_t;
extern volatile PWM5INTFbits_t PWM5INTFbits __at(0xD9D);
// bitfield macros
#define _PWM5INTF_PRIF_POSN                                 0x0
#define _PWM5INTF_PRIF_POSITION                             0x0
#define _PWM5INTF_PRIF_SIZE                                 0x1
#define _PWM5INTF_PRIF_LENGTH                               0x1
#define _PWM5INTF_PRIF_MASK                                 0x1
#define _PWM5INTF_DCIF_POSN                                 0x1
#define _PWM5INTF_DCIF_POSITION                             0x1
#define _PWM5INTF_DCIF_SIZE                                 0x1
#define _PWM5INTF_DCIF_LENGTH                               0x1
#define _PWM5INTF_DCIF_MASK                                 0x2
#define _PWM5INTF_PHIF_POSN                                 0x2
#define _PWM5INTF_PHIF_POSITION                             0x2
#define _PWM5INTF_PHIF_SIZE                                 0x1
#define _PWM5INTF_PHIF_LENGTH                               0x1
#define _PWM5INTF_PHIF_MASK                                 0x4
#define _PWM5INTF_OFIF_POSN                                 0x3
#define _PWM5INTF_OFIF_POSITION                             0x3
#define _PWM5INTF_OFIF_SIZE                                 0x1
#define _PWM5INTF_OFIF_LENGTH                               0x1
#define _PWM5INTF_OFIF_MASK                                 0x8
#define _PWM5INTF_PWM5PRIF_POSN                             0x0
#define _PWM5INTF_PWM5PRIF_POSITION                         0x0
#define _PWM5INTF_PWM5PRIF_SIZE                             0x1
#define _PWM5INTF_PWM5PRIF_LENGTH                           0x1
#define _PWM5INTF_PWM5PRIF_MASK                             0x1
#define _PWM5INTF_PWM5DCIF_POSN                             0x1
#define _PWM5INTF_PWM5DCIF_POSITION                         0x1
#define _PWM5INTF_PWM5DCIF_SIZE                             0x1
#define _PWM5INTF_PWM5DCIF_LENGTH                           0x1
#define _PWM5INTF_PWM5DCIF_MASK                             0x2
#define _PWM5INTF_PWM5PHIF_POSN                             0x2
#define _PWM5INTF_PWM5PHIF_POSITION                         0x2
#define _PWM5INTF_PWM5PHIF_SIZE                             0x1
#define _PWM5INTF_PWM5PHIF_LENGTH                           0x1
#define _PWM5INTF_PWM5PHIF_MASK                             0x4
#define _PWM5INTF_PWM5OFIF_POSN                             0x3
#define _PWM5INTF_PWM5OFIF_POSITION                         0x3
#define _PWM5INTF_PWM5OFIF_SIZE                             0x1
#define _PWM5INTF_PWM5OFIF_LENGTH                           0x1
#define _PWM5INTF_PWM5OFIF_MASK                             0x8
// alias bitfield definitions
typedef union {
    struct {
        unsigned PRIF                   :1;
        unsigned DCIF                   :1;
        unsigned PHIF                   :1;
        unsigned OFIF                   :1;
    };
    struct {
        unsigned PWM5PRIF               :1;
        unsigned PWM5DCIF               :1;
        unsigned PWM5PHIF               :1;
        unsigned PWM5OFIF               :1;
    };
} PWM5INTFLGbits_t;
extern volatile PWM5INTFLGbits_t PWM5INTFLGbits __at(0xD9D);
// bitfield macros
#define _PWM5INTFLG_PRIF_POSN                               0x0
#define _PWM5INTFLG_PRIF_POSITION                           0x0
#define _PWM5INTFLG_PRIF_SIZE                               0x1
#define _PWM5INTFLG_PRIF_LENGTH                             0x1
#define _PWM5INTFLG_PRIF_MASK                               0x1
#define _PWM5INTFLG_DCIF_POSN                               0x1
#define _PWM5INTFLG_DCIF_POSITION                           0x1
#define _PWM5INTFLG_DCIF_SIZE                               0x1
#define _PWM5INTFLG_DCIF_LENGTH                             0x1
#define _PWM5INTFLG_DCIF_MASK                               0x2
#define _PWM5INTFLG_PHIF_POSN                               0x2
#define _PWM5INTFLG_PHIF_POSITION                           0x2
#define _PWM5INTFLG_PHIF_SIZE                               0x1
#define _PWM5INTFLG_PHIF_LENGTH                             0x1
#define _PWM5INTFLG_PHIF_MASK                               0x4
#define _PWM5INTFLG_OFIF_POSN                               0x3
#define _PWM5INTFLG_OFIF_POSITION                           0x3
#define _PWM5INTFLG_OFIF_SIZE                               0x1
#define _PWM5INTFLG_OFIF_LENGTH                             0x1
#define _PWM5INTFLG_OFIF_MASK                               0x8
#define _PWM5INTFLG_PWM5PRIF_POSN                           0x0
#define _PWM5INTFLG_PWM5PRIF_POSITION                       0x0
#define _PWM5INTFLG_PWM5PRIF_SIZE                           0x1
#define _PWM5INTFLG_PWM5PRIF_LENGTH                         0x1
#define _PWM5INTFLG_PWM5PRIF_MASK                           0x1
#define _PWM5INTFLG_PWM5DCIF_POSN                           0x1
#define _PWM5INTFLG_PWM5DCIF_POSITION                       0x1
#define _PWM5INTFLG_PWM5DCIF_SIZE                           0x1
#define _PWM5INTFLG_PWM5DCIF_LENGTH                         0x1
#define _PWM5INTFLG_PWM5DCIF_MASK                           0x2
#define _PWM5INTFLG_PWM5PHIF_POSN                           0x2
#define _PWM5INTFLG_PWM5PHIF_POSITION                       0x2
#define _PWM5INTFLG_PWM5PHIF_SIZE                           0x1
#define _PWM5INTFLG_PWM5PHIF_LENGTH                         0x1
#define _PWM5INTFLG_PWM5PHIF_MASK                           0x4
#define _PWM5INTFLG_PWM5OFIF_POSN                           0x3
#define _PWM5INTFLG_PWM5OFIF_POSITION                       0x3
#define _PWM5INTFLG_PWM5OFIF_SIZE                           0x1
#define _PWM5INTFLG_PWM5OFIF_LENGTH                         0x1
#define _PWM5INTFLG_PWM5OFIF_MASK                           0x8

// Register: PWM5CLKCON
#define PWM5CLKCON PWM5CLKCON
extern volatile unsigned char           PWM5CLKCON          __at(0xD9E);
#ifndef _LIB_BUILD
asm("PWM5CLKCON equ 0D9Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CS                     :2;
        unsigned                        :2;
        unsigned PS                     :3;
    };
    struct {
        unsigned PWM5CS0                :1;
        unsigned PWM5CS1                :1;
        unsigned PWM5CS2                :1;
        unsigned                        :1;
        unsigned PWM5PS0                :1;
        unsigned PWM5PS1                :1;
        unsigned PWM5PS2                :1;
    };
    struct {
        unsigned PWM5CS                 :3;
        unsigned                        :1;
        unsigned PWM5PS                 :3;
    };
    struct {
        unsigned CS0                    :1;
        unsigned CS1                    :1;
        unsigned CS2                    :1;
        unsigned                        :1;
        unsigned PS0                    :1;
        unsigned PS1                    :1;
        unsigned PS2                    :1;
    };
} PWM5CLKCONbits_t;
extern volatile PWM5CLKCONbits_t PWM5CLKCONbits __at(0xD9E);
// bitfield macros
#define _PWM5CLKCON_CS_POSN                                 0x0
#define _PWM5CLKCON_CS_POSITION                             0x0
#define _PWM5CLKCON_CS_SIZE                                 0x2
#define _PWM5CLKCON_CS_LENGTH                               0x2
#define _PWM5CLKCON_CS_MASK                                 0x3
#define _PWM5CLKCON_PS_POSN                                 0x4
#define _PWM5CLKCON_PS_POSITION                             0x4
#define _PWM5CLKCON_PS_SIZE                                 0x3
#define _PWM5CLKCON_PS_LENGTH                               0x3
#define _PWM5CLKCON_PS_MASK                                 0x70
#define _PWM5CLKCON_PWM5CS0_POSN                            0x0
#define _PWM5CLKCON_PWM5CS0_POSITION                        0x0
#define _PWM5CLKCON_PWM5CS0_SIZE                            0x1
#define _PWM5CLKCON_PWM5CS0_LENGTH                          0x1
#define _PWM5CLKCON_PWM5CS0_MASK                            0x1
#define _PWM5CLKCON_PWM5CS1_POSN                            0x1
#define _PWM5CLKCON_PWM5CS1_POSITION                        0x1
#define _PWM5CLKCON_PWM5CS1_SIZE                            0x1
#define _PWM5CLKCON_PWM5CS1_LENGTH                          0x1
#define _PWM5CLKCON_PWM5CS1_MASK                            0x2
#define _PWM5CLKCON_PWM5CS2_POSN                            0x2
#define _PWM5CLKCON_PWM5CS2_POSITION                        0x2
#define _PWM5CLKCON_PWM5CS2_SIZE                            0x1
#define _PWM5CLKCON_PWM5CS2_LENGTH                          0x1
#define _PWM5CLKCON_PWM5CS2_MASK                            0x4
#define _PWM5CLKCON_PWM5PS0_POSN                            0x4
#define _PWM5CLKCON_PWM5PS0_POSITION                        0x4
#define _PWM5CLKCON_PWM5PS0_SIZE                            0x1
#define _PWM5CLKCON_PWM5PS0_LENGTH                          0x1
#define _PWM5CLKCON_PWM5PS0_MASK                            0x10
#define _PWM5CLKCON_PWM5PS1_POSN                            0x5
#define _PWM5CLKCON_PWM5PS1_POSITION                        0x5
#define _PWM5CLKCON_PWM5PS1_SIZE                            0x1
#define _PWM5CLKCON_PWM5PS1_LENGTH                          0x1
#define _PWM5CLKCON_PWM5PS1_MASK                            0x20
#define _PWM5CLKCON_PWM5PS2_POSN                            0x6
#define _PWM5CLKCON_PWM5PS2_POSITION                        0x6
#define _PWM5CLKCON_PWM5PS2_SIZE                            0x1
#define _PWM5CLKCON_PWM5PS2_LENGTH                          0x1
#define _PWM5CLKCON_PWM5PS2_MASK                            0x40
#define _PWM5CLKCON_PWM5CS_POSN                             0x0
#define _PWM5CLKCON_PWM5CS_POSITION                         0x0
#define _PWM5CLKCON_PWM5CS_SIZE                             0x3
#define _PWM5CLKCON_PWM5CS_LENGTH                           0x3
#define _PWM5CLKCON_PWM5CS_MASK                             0x7
#define _PWM5CLKCON_PWM5PS_POSN                             0x4
#define _PWM5CLKCON_PWM5PS_POSITION                         0x4
#define _PWM5CLKCON_PWM5PS_SIZE                             0x3
#define _PWM5CLKCON_PWM5PS_LENGTH                           0x3
#define _PWM5CLKCON_PWM5PS_MASK                             0x70
#define _PWM5CLKCON_CS0_POSN                                0x0
#define _PWM5CLKCON_CS0_POSITION                            0x0
#define _PWM5CLKCON_CS0_SIZE                                0x1
#define _PWM5CLKCON_CS0_LENGTH                              0x1
#define _PWM5CLKCON_CS0_MASK                                0x1
#define _PWM5CLKCON_CS1_POSN                                0x1
#define _PWM5CLKCON_CS1_POSITION                            0x1
#define _PWM5CLKCON_CS1_SIZE                                0x1
#define _PWM5CLKCON_CS1_LENGTH                              0x1
#define _PWM5CLKCON_CS1_MASK                                0x2
#define _PWM5CLKCON_CS2_POSN                                0x2
#define _PWM5CLKCON_CS2_POSITION                            0x2
#define _PWM5CLKCON_CS2_SIZE                                0x1
#define _PWM5CLKCON_CS2_LENGTH                              0x1
#define _PWM5CLKCON_CS2_MASK                                0x4
#define _PWM5CLKCON_PS0_POSN                                0x4
#define _PWM5CLKCON_PS0_POSITION                            0x4
#define _PWM5CLKCON_PS0_SIZE                                0x1
#define _PWM5CLKCON_PS0_LENGTH                              0x1
#define _PWM5CLKCON_PS0_MASK                                0x10
#define _PWM5CLKCON_PS1_POSN                                0x5
#define _PWM5CLKCON_PS1_POSITION                            0x5
#define _PWM5CLKCON_PS1_SIZE                                0x1
#define _PWM5CLKCON_PS1_LENGTH                              0x1
#define _PWM5CLKCON_PS1_MASK                                0x20
#define _PWM5CLKCON_PS2_POSN                                0x6
#define _PWM5CLKCON_PS2_POSITION                            0x6
#define _PWM5CLKCON_PS2_SIZE                                0x1
#define _PWM5CLKCON_PS2_LENGTH                              0x1
#define _PWM5CLKCON_PS2_MASK                                0x40

// Register: PWM5LDCON
#define PWM5LDCON PWM5LDCON
extern volatile unsigned char           PWM5LDCON           __at(0xD9F);
#ifndef _LIB_BUILD
asm("PWM5LDCON equ 0D9Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LDS                    :2;
        unsigned                        :4;
        unsigned LDT                    :1;
        unsigned LDA                    :1;
    };
    struct {
        unsigned PWM5LDS0               :1;
        unsigned PWM5LDS1               :1;
    };
    struct {
        unsigned PWM5LDS                :2;
        unsigned                        :4;
        unsigned PWM5LDM                :1;
        unsigned PWM5LD                 :1;
    };
    struct {
        unsigned LDS0                   :1;
        unsigned LDS1                   :1;
    };
} PWM5LDCONbits_t;
extern volatile PWM5LDCONbits_t PWM5LDCONbits __at(0xD9F);
// bitfield macros
#define _PWM5LDCON_LDS_POSN                                 0x0
#define _PWM5LDCON_LDS_POSITION                             0x0
#define _PWM5LDCON_LDS_SIZE                                 0x2
#define _PWM5LDCON_LDS_LENGTH                               0x2
#define _PWM5LDCON_LDS_MASK                                 0x3
#define _PWM5LDCON_LDT_POSN                                 0x6
#define _PWM5LDCON_LDT_POSITION                             0x6
#define _PWM5LDCON_LDT_SIZE                                 0x1
#define _PWM5LDCON_LDT_LENGTH                               0x1
#define _PWM5LDCON_LDT_MASK                                 0x40
#define _PWM5LDCON_LDA_POSN                                 0x7
#define _PWM5LDCON_LDA_POSITION                             0x7
#define _PWM5LDCON_LDA_SIZE                                 0x1
#define _PWM5LDCON_LDA_LENGTH                               0x1
#define _PWM5LDCON_LDA_MASK                                 0x80
#define _PWM5LDCON_PWM5LDS0_POSN                            0x0
#define _PWM5LDCON_PWM5LDS0_POSITION                        0x0
#define _PWM5LDCON_PWM5LDS0_SIZE                            0x1
#define _PWM5LDCON_PWM5LDS0_LENGTH                          0x1
#define _PWM5LDCON_PWM5LDS0_MASK                            0x1
#define _PWM5LDCON_PWM5LDS1_POSN                            0x1
#define _PWM5LDCON_PWM5LDS1_POSITION                        0x1
#define _PWM5LDCON_PWM5LDS1_SIZE                            0x1
#define _PWM5LDCON_PWM5LDS1_LENGTH                          0x1
#define _PWM5LDCON_PWM5LDS1_MASK                            0x2
#define _PWM5LDCON_PWM5LDS_POSN                             0x0
#define _PWM5LDCON_PWM5LDS_POSITION                         0x0
#define _PWM5LDCON_PWM5LDS_SIZE                             0x2
#define _PWM5LDCON_PWM5LDS_LENGTH                           0x2
#define _PWM5LDCON_PWM5LDS_MASK                             0x3
#define _PWM5LDCON_PWM5LDM_POSN                             0x6
#define _PWM5LDCON_PWM5LDM_POSITION                         0x6
#define _PWM5LDCON_PWM5LDM_SIZE                             0x1
#define _PWM5LDCON_PWM5LDM_LENGTH                           0x1
#define _PWM5LDCON_PWM5LDM_MASK                             0x40
#define _PWM5LDCON_PWM5LD_POSN                              0x7
#define _PWM5LDCON_PWM5LD_POSITION                          0x7
#define _PWM5LDCON_PWM5LD_SIZE                              0x1
#define _PWM5LDCON_PWM5LD_LENGTH                            0x1
#define _PWM5LDCON_PWM5LD_MASK                              0x80
#define _PWM5LDCON_LDS0_POSN                                0x0
#define _PWM5LDCON_LDS0_POSITION                            0x0
#define _PWM5LDCON_LDS0_SIZE                                0x1
#define _PWM5LDCON_LDS0_LENGTH                              0x1
#define _PWM5LDCON_LDS0_MASK                                0x1
#define _PWM5LDCON_LDS1_POSN                                0x1
#define _PWM5LDCON_LDS1_POSITION                            0x1
#define _PWM5LDCON_LDS1_SIZE                                0x1
#define _PWM5LDCON_LDS1_LENGTH                              0x1
#define _PWM5LDCON_LDS1_MASK                                0x2

// Register: PWM5OFCON
#define PWM5OFCON PWM5OFCON
extern volatile unsigned char           PWM5OFCON           __at(0xDA0);
#ifndef _LIB_BUILD
asm("PWM5OFCON equ 0DA0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OFS                    :2;
        unsigned                        :2;
        unsigned OFO                    :1;
        unsigned OFM                    :2;
    };
    struct {
        unsigned PWM5OFS0               :1;
        unsigned PWM5OFS1               :1;
        unsigned                        :3;
        unsigned PWM5OFM0               :1;
        unsigned PWM5OFM1               :1;
    };
    struct {
        unsigned PWM5OFS                :2;
        unsigned                        :2;
        unsigned PWM5OFMC               :1;
        unsigned PWM5OFM                :2;
    };
    struct {
        unsigned OFS0                   :1;
        unsigned OFS1                   :1;
        unsigned                        :3;
        unsigned OFM0                   :1;
        unsigned OFM1                   :1;
    };
} PWM5OFCONbits_t;
extern volatile PWM5OFCONbits_t PWM5OFCONbits __at(0xDA0);
// bitfield macros
#define _PWM5OFCON_OFS_POSN                                 0x0
#define _PWM5OFCON_OFS_POSITION                             0x0
#define _PWM5OFCON_OFS_SIZE                                 0x2
#define _PWM5OFCON_OFS_LENGTH                               0x2
#define _PWM5OFCON_OFS_MASK                                 0x3
#define _PWM5OFCON_OFO_POSN                                 0x4
#define _PWM5OFCON_OFO_POSITION                             0x4
#define _PWM5OFCON_OFO_SIZE                                 0x1
#define _PWM5OFCON_OFO_LENGTH                               0x1
#define _PWM5OFCON_OFO_MASK                                 0x10
#define _PWM5OFCON_OFM_POSN                                 0x5
#define _PWM5OFCON_OFM_POSITION                             0x5
#define _PWM5OFCON_OFM_SIZE                                 0x2
#define _PWM5OFCON_OFM_LENGTH                               0x2
#define _PWM5OFCON_OFM_MASK                                 0x60
#define _PWM5OFCON_PWM5OFS0_POSN                            0x0
#define _PWM5OFCON_PWM5OFS0_POSITION                        0x0
#define _PWM5OFCON_PWM5OFS0_SIZE                            0x1
#define _PWM5OFCON_PWM5OFS0_LENGTH                          0x1
#define _PWM5OFCON_PWM5OFS0_MASK                            0x1
#define _PWM5OFCON_PWM5OFS1_POSN                            0x1
#define _PWM5OFCON_PWM5OFS1_POSITION                        0x1
#define _PWM5OFCON_PWM5OFS1_SIZE                            0x1
#define _PWM5OFCON_PWM5OFS1_LENGTH                          0x1
#define _PWM5OFCON_PWM5OFS1_MASK                            0x2
#define _PWM5OFCON_PWM5OFM0_POSN                            0x5
#define _PWM5OFCON_PWM5OFM0_POSITION                        0x5
#define _PWM5OFCON_PWM5OFM0_SIZE                            0x1
#define _PWM5OFCON_PWM5OFM0_LENGTH                          0x1
#define _PWM5OFCON_PWM5OFM0_MASK                            0x20
#define _PWM5OFCON_PWM5OFM1_POSN                            0x6
#define _PWM5OFCON_PWM5OFM1_POSITION                        0x6
#define _PWM5OFCON_PWM5OFM1_SIZE                            0x1
#define _PWM5OFCON_PWM5OFM1_LENGTH                          0x1
#define _PWM5OFCON_PWM5OFM1_MASK                            0x40
#define _PWM5OFCON_PWM5OFS_POSN                             0x0
#define _PWM5OFCON_PWM5OFS_POSITION                         0x0
#define _PWM5OFCON_PWM5OFS_SIZE                             0x2
#define _PWM5OFCON_PWM5OFS_LENGTH                           0x2
#define _PWM5OFCON_PWM5OFS_MASK                             0x3
#define _PWM5OFCON_PWM5OFMC_POSN                            0x4
#define _PWM5OFCON_PWM5OFMC_POSITION                        0x4
#define _PWM5OFCON_PWM5OFMC_SIZE                            0x1
#define _PWM5OFCON_PWM5OFMC_LENGTH                          0x1
#define _PWM5OFCON_PWM5OFMC_MASK                            0x10
#define _PWM5OFCON_PWM5OFM_POSN                             0x5
#define _PWM5OFCON_PWM5OFM_POSITION                         0x5
#define _PWM5OFCON_PWM5OFM_SIZE                             0x2
#define _PWM5OFCON_PWM5OFM_LENGTH                           0x2
#define _PWM5OFCON_PWM5OFM_MASK                             0x60
#define _PWM5OFCON_OFS0_POSN                                0x0
#define _PWM5OFCON_OFS0_POSITION                            0x0
#define _PWM5OFCON_OFS0_SIZE                                0x1
#define _PWM5OFCON_OFS0_LENGTH                              0x1
#define _PWM5OFCON_OFS0_MASK                                0x1
#define _PWM5OFCON_OFS1_POSN                                0x1
#define _PWM5OFCON_OFS1_POSITION                            0x1
#define _PWM5OFCON_OFS1_SIZE                                0x1
#define _PWM5OFCON_OFS1_LENGTH                              0x1
#define _PWM5OFCON_OFS1_MASK                                0x2
#define _PWM5OFCON_OFM0_POSN                                0x5
#define _PWM5OFCON_OFM0_POSITION                            0x5
#define _PWM5OFCON_OFM0_SIZE                                0x1
#define _PWM5OFCON_OFM0_LENGTH                              0x1
#define _PWM5OFCON_OFM0_MASK                                0x20
#define _PWM5OFCON_OFM1_POSN                                0x6
#define _PWM5OFCON_OFM1_POSITION                            0x6
#define _PWM5OFCON_OFM1_SIZE                                0x1
#define _PWM5OFCON_OFM1_LENGTH                              0x1
#define _PWM5OFCON_OFM1_MASK                                0x40

// Register: PWM6PH
#define PWM6PH PWM6PH
extern volatile unsigned short          PWM6PH              __at(0xDA1);
#ifndef _LIB_BUILD
asm("PWM6PH equ 0DA1h");
#endif

// Register: PWM6PHL
#define PWM6PHL PWM6PHL
extern volatile unsigned char           PWM6PHL             __at(0xDA1);
#ifndef _LIB_BUILD
asm("PWM6PHL equ 0DA1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PH                     :8;
    };
    struct {
        unsigned PWM6PHL0               :1;
        unsigned PWM6PHL1               :1;
        unsigned PWM6PHL2               :1;
        unsigned PWM6PHL3               :1;
        unsigned PWM6PHL4               :1;
        unsigned PWM6PHL5               :1;
        unsigned PWM6PHL6               :1;
        unsigned PWM6PHL7               :1;
    };
    struct {
        unsigned PWM6PHL                :8;
    };
} PWM6PHLbits_t;
extern volatile PWM6PHLbits_t PWM6PHLbits __at(0xDA1);
// bitfield macros
#define _PWM6PHL_PH_POSN                                    0x0
#define _PWM6PHL_PH_POSITION                                0x0
#define _PWM6PHL_PH_SIZE                                    0x8
#define _PWM6PHL_PH_LENGTH                                  0x8
#define _PWM6PHL_PH_MASK                                    0xFF
#define _PWM6PHL_PWM6PHL0_POSN                              0x0
#define _PWM6PHL_PWM6PHL0_POSITION                          0x0
#define _PWM6PHL_PWM6PHL0_SIZE                              0x1
#define _PWM6PHL_PWM6PHL0_LENGTH                            0x1
#define _PWM6PHL_PWM6PHL0_MASK                              0x1
#define _PWM6PHL_PWM6PHL1_POSN                              0x1
#define _PWM6PHL_PWM6PHL1_POSITION                          0x1
#define _PWM6PHL_PWM6PHL1_SIZE                              0x1
#define _PWM6PHL_PWM6PHL1_LENGTH                            0x1
#define _PWM6PHL_PWM6PHL1_MASK                              0x2
#define _PWM6PHL_PWM6PHL2_POSN                              0x2
#define _PWM6PHL_PWM6PHL2_POSITION                          0x2
#define _PWM6PHL_PWM6PHL2_SIZE                              0x1
#define _PWM6PHL_PWM6PHL2_LENGTH                            0x1
#define _PWM6PHL_PWM6PHL2_MASK                              0x4
#define _PWM6PHL_PWM6PHL3_POSN                              0x3
#define _PWM6PHL_PWM6PHL3_POSITION                          0x3
#define _PWM6PHL_PWM6PHL3_SIZE                              0x1
#define _PWM6PHL_PWM6PHL3_LENGTH                            0x1
#define _PWM6PHL_PWM6PHL3_MASK                              0x8
#define _PWM6PHL_PWM6PHL4_POSN                              0x4
#define _PWM6PHL_PWM6PHL4_POSITION                          0x4
#define _PWM6PHL_PWM6PHL4_SIZE                              0x1
#define _PWM6PHL_PWM6PHL4_LENGTH                            0x1
#define _PWM6PHL_PWM6PHL4_MASK                              0x10
#define _PWM6PHL_PWM6PHL5_POSN                              0x5
#define _PWM6PHL_PWM6PHL5_POSITION                          0x5
#define _PWM6PHL_PWM6PHL5_SIZE                              0x1
#define _PWM6PHL_PWM6PHL5_LENGTH                            0x1
#define _PWM6PHL_PWM6PHL5_MASK                              0x20
#define _PWM6PHL_PWM6PHL6_POSN                              0x6
#define _PWM6PHL_PWM6PHL6_POSITION                          0x6
#define _PWM6PHL_PWM6PHL6_SIZE                              0x1
#define _PWM6PHL_PWM6PHL6_LENGTH                            0x1
#define _PWM6PHL_PWM6PHL6_MASK                              0x40
#define _PWM6PHL_PWM6PHL7_POSN                              0x7
#define _PWM6PHL_PWM6PHL7_POSITION                          0x7
#define _PWM6PHL_PWM6PHL7_SIZE                              0x1
#define _PWM6PHL_PWM6PHL7_LENGTH                            0x1
#define _PWM6PHL_PWM6PHL7_MASK                              0x80
#define _PWM6PHL_PWM6PHL_POSN                               0x0
#define _PWM6PHL_PWM6PHL_POSITION                           0x0
#define _PWM6PHL_PWM6PHL_SIZE                               0x8
#define _PWM6PHL_PWM6PHL_LENGTH                             0x8
#define _PWM6PHL_PWM6PHL_MASK                               0xFF

// Register: PWM6PHH
#define PWM6PHH PWM6PHH
extern volatile unsigned char           PWM6PHH             __at(0xDA2);
#ifndef _LIB_BUILD
asm("PWM6PHH equ 0DA2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PH                     :8;
    };
    struct {
        unsigned PWM6PHH0               :1;
        unsigned PWM6PHH1               :1;
        unsigned PWM6PHH2               :1;
        unsigned PWM6PHH3               :1;
        unsigned PWM6PHH4               :1;
        unsigned PWM6PHH5               :1;
        unsigned PWM6PHH6               :1;
        unsigned PWM6PHH7               :1;
    };
    struct {
        unsigned PWM6PHH                :8;
    };
} PWM6PHHbits_t;
extern volatile PWM6PHHbits_t PWM6PHHbits __at(0xDA2);
// bitfield macros
#define _PWM6PHH_PH_POSN                                    0x0
#define _PWM6PHH_PH_POSITION                                0x0
#define _PWM6PHH_PH_SIZE                                    0x8
#define _PWM6PHH_PH_LENGTH                                  0x8
#define _PWM6PHH_PH_MASK                                    0xFF
#define _PWM6PHH_PWM6PHH0_POSN                              0x0
#define _PWM6PHH_PWM6PHH0_POSITION                          0x0
#define _PWM6PHH_PWM6PHH0_SIZE                              0x1
#define _PWM6PHH_PWM6PHH0_LENGTH                            0x1
#define _PWM6PHH_PWM6PHH0_MASK                              0x1
#define _PWM6PHH_PWM6PHH1_POSN                              0x1
#define _PWM6PHH_PWM6PHH1_POSITION                          0x1
#define _PWM6PHH_PWM6PHH1_SIZE                              0x1
#define _PWM6PHH_PWM6PHH1_LENGTH                            0x1
#define _PWM6PHH_PWM6PHH1_MASK                              0x2
#define _PWM6PHH_PWM6PHH2_POSN                              0x2
#define _PWM6PHH_PWM6PHH2_POSITION                          0x2
#define _PWM6PHH_PWM6PHH2_SIZE                              0x1
#define _PWM6PHH_PWM6PHH2_LENGTH                            0x1
#define _PWM6PHH_PWM6PHH2_MASK                              0x4
#define _PWM6PHH_PWM6PHH3_POSN                              0x3
#define _PWM6PHH_PWM6PHH3_POSITION                          0x3
#define _PWM6PHH_PWM6PHH3_SIZE                              0x1
#define _PWM6PHH_PWM6PHH3_LENGTH                            0x1
#define _PWM6PHH_PWM6PHH3_MASK                              0x8
#define _PWM6PHH_PWM6PHH4_POSN                              0x4
#define _PWM6PHH_PWM6PHH4_POSITION                          0x4
#define _PWM6PHH_PWM6PHH4_SIZE                              0x1
#define _PWM6PHH_PWM6PHH4_LENGTH                            0x1
#define _PWM6PHH_PWM6PHH4_MASK                              0x10
#define _PWM6PHH_PWM6PHH5_POSN                              0x5
#define _PWM6PHH_PWM6PHH5_POSITION                          0x5
#define _PWM6PHH_PWM6PHH5_SIZE                              0x1
#define _PWM6PHH_PWM6PHH5_LENGTH                            0x1
#define _PWM6PHH_PWM6PHH5_MASK                              0x20
#define _PWM6PHH_PWM6PHH6_POSN                              0x6
#define _PWM6PHH_PWM6PHH6_POSITION                          0x6
#define _PWM6PHH_PWM6PHH6_SIZE                              0x1
#define _PWM6PHH_PWM6PHH6_LENGTH                            0x1
#define _PWM6PHH_PWM6PHH6_MASK                              0x40
#define _PWM6PHH_PWM6PHH7_POSN                              0x7
#define _PWM6PHH_PWM6PHH7_POSITION                          0x7
#define _PWM6PHH_PWM6PHH7_SIZE                              0x1
#define _PWM6PHH_PWM6PHH7_LENGTH                            0x1
#define _PWM6PHH_PWM6PHH7_MASK                              0x80
#define _PWM6PHH_PWM6PHH_POSN                               0x0
#define _PWM6PHH_PWM6PHH_POSITION                           0x0
#define _PWM6PHH_PWM6PHH_SIZE                               0x8
#define _PWM6PHH_PWM6PHH_LENGTH                             0x8
#define _PWM6PHH_PWM6PHH_MASK                               0xFF

// Register: PWM6DC
#define PWM6DC PWM6DC
extern volatile unsigned short          PWM6DC              __at(0xDA3);
#ifndef _LIB_BUILD
asm("PWM6DC equ 0DA3h");
#endif

// Register: PWM6DCL
#define PWM6DCL PWM6DCL
extern volatile unsigned char           PWM6DCL             __at(0xDA3);
#ifndef _LIB_BUILD
asm("PWM6DCL equ 0DA3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned PWM6DCL0               :1;
        unsigned PWM6DCL1               :1;
        unsigned PWM6DCL2               :1;
        unsigned PWM6DCL3               :1;
        unsigned PWM6DCL4               :1;
        unsigned PWM6DCL5               :1;
        unsigned PWM6DCL6               :1;
        unsigned PWM6DCL7               :1;
    };
    struct {
        unsigned PWM6DCL                :8;
    };
} PWM6DCLbits_t;
extern volatile PWM6DCLbits_t PWM6DCLbits __at(0xDA3);
// bitfield macros
#define _PWM6DCL_DC_POSN                                    0x0
#define _PWM6DCL_DC_POSITION                                0x0
#define _PWM6DCL_DC_SIZE                                    0x8
#define _PWM6DCL_DC_LENGTH                                  0x8
#define _PWM6DCL_DC_MASK                                    0xFF
#define _PWM6DCL_PWM6DCL0_POSN                              0x0
#define _PWM6DCL_PWM6DCL0_POSITION                          0x0
#define _PWM6DCL_PWM6DCL0_SIZE                              0x1
#define _PWM6DCL_PWM6DCL0_LENGTH                            0x1
#define _PWM6DCL_PWM6DCL0_MASK                              0x1
#define _PWM6DCL_PWM6DCL1_POSN                              0x1
#define _PWM6DCL_PWM6DCL1_POSITION                          0x1
#define _PWM6DCL_PWM6DCL1_SIZE                              0x1
#define _PWM6DCL_PWM6DCL1_LENGTH                            0x1
#define _PWM6DCL_PWM6DCL1_MASK                              0x2
#define _PWM6DCL_PWM6DCL2_POSN                              0x2
#define _PWM6DCL_PWM6DCL2_POSITION                          0x2
#define _PWM6DCL_PWM6DCL2_SIZE                              0x1
#define _PWM6DCL_PWM6DCL2_LENGTH                            0x1
#define _PWM6DCL_PWM6DCL2_MASK                              0x4
#define _PWM6DCL_PWM6DCL3_POSN                              0x3
#define _PWM6DCL_PWM6DCL3_POSITION                          0x3
#define _PWM6DCL_PWM6DCL3_SIZE                              0x1
#define _PWM6DCL_PWM6DCL3_LENGTH                            0x1
#define _PWM6DCL_PWM6DCL3_MASK                              0x8
#define _PWM6DCL_PWM6DCL4_POSN                              0x4
#define _PWM6DCL_PWM6DCL4_POSITION                          0x4
#define _PWM6DCL_PWM6DCL4_SIZE                              0x1
#define _PWM6DCL_PWM6DCL4_LENGTH                            0x1
#define _PWM6DCL_PWM6DCL4_MASK                              0x10
#define _PWM6DCL_PWM6DCL5_POSN                              0x5
#define _PWM6DCL_PWM6DCL5_POSITION                          0x5
#define _PWM6DCL_PWM6DCL5_SIZE                              0x1
#define _PWM6DCL_PWM6DCL5_LENGTH                            0x1
#define _PWM6DCL_PWM6DCL5_MASK                              0x20
#define _PWM6DCL_PWM6DCL6_POSN                              0x6
#define _PWM6DCL_PWM6DCL6_POSITION                          0x6
#define _PWM6DCL_PWM6DCL6_SIZE                              0x1
#define _PWM6DCL_PWM6DCL6_LENGTH                            0x1
#define _PWM6DCL_PWM6DCL6_MASK                              0x40
#define _PWM6DCL_PWM6DCL7_POSN                              0x7
#define _PWM6DCL_PWM6DCL7_POSITION                          0x7
#define _PWM6DCL_PWM6DCL7_SIZE                              0x1
#define _PWM6DCL_PWM6DCL7_LENGTH                            0x1
#define _PWM6DCL_PWM6DCL7_MASK                              0x80
#define _PWM6DCL_PWM6DCL_POSN                               0x0
#define _PWM6DCL_PWM6DCL_POSITION                           0x0
#define _PWM6DCL_PWM6DCL_SIZE                               0x8
#define _PWM6DCL_PWM6DCL_LENGTH                             0x8
#define _PWM6DCL_PWM6DCL_MASK                               0xFF

// Register: PWM6DCH
#define PWM6DCH PWM6DCH
extern volatile unsigned char           PWM6DCH             __at(0xDA4);
#ifndef _LIB_BUILD
asm("PWM6DCH equ 0DA4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned PWM6DCH0               :1;
        unsigned PWM6DCH1               :1;
        unsigned PWM6DCH2               :1;
        unsigned PWM6DCH3               :1;
        unsigned PWM6DCH4               :1;
        unsigned PWM6DCH5               :1;
        unsigned PWM6DCH6               :1;
        unsigned PWM6DCH7               :1;
    };
    struct {
        unsigned PWM6DCH                :8;
    };
} PWM6DCHbits_t;
extern volatile PWM6DCHbits_t PWM6DCHbits __at(0xDA4);
// bitfield macros
#define _PWM6DCH_DC_POSN                                    0x0
#define _PWM6DCH_DC_POSITION                                0x0
#define _PWM6DCH_DC_SIZE                                    0x8
#define _PWM6DCH_DC_LENGTH                                  0x8
#define _PWM6DCH_DC_MASK                                    0xFF
#define _PWM6DCH_PWM6DCH0_POSN                              0x0
#define _PWM6DCH_PWM6DCH0_POSITION                          0x0
#define _PWM6DCH_PWM6DCH0_SIZE                              0x1
#define _PWM6DCH_PWM6DCH0_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH0_MASK                              0x1
#define _PWM6DCH_PWM6DCH1_POSN                              0x1
#define _PWM6DCH_PWM6DCH1_POSITION                          0x1
#define _PWM6DCH_PWM6DCH1_SIZE                              0x1
#define _PWM6DCH_PWM6DCH1_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH1_MASK                              0x2
#define _PWM6DCH_PWM6DCH2_POSN                              0x2
#define _PWM6DCH_PWM6DCH2_POSITION                          0x2
#define _PWM6DCH_PWM6DCH2_SIZE                              0x1
#define _PWM6DCH_PWM6DCH2_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH2_MASK                              0x4
#define _PWM6DCH_PWM6DCH3_POSN                              0x3
#define _PWM6DCH_PWM6DCH3_POSITION                          0x3
#define _PWM6DCH_PWM6DCH3_SIZE                              0x1
#define _PWM6DCH_PWM6DCH3_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH3_MASK                              0x8
#define _PWM6DCH_PWM6DCH4_POSN                              0x4
#define _PWM6DCH_PWM6DCH4_POSITION                          0x4
#define _PWM6DCH_PWM6DCH4_SIZE                              0x1
#define _PWM6DCH_PWM6DCH4_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH4_MASK                              0x10
#define _PWM6DCH_PWM6DCH5_POSN                              0x5
#define _PWM6DCH_PWM6DCH5_POSITION                          0x5
#define _PWM6DCH_PWM6DCH5_SIZE                              0x1
#define _PWM6DCH_PWM6DCH5_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH5_MASK                              0x20
#define _PWM6DCH_PWM6DCH6_POSN                              0x6
#define _PWM6DCH_PWM6DCH6_POSITION                          0x6
#define _PWM6DCH_PWM6DCH6_SIZE                              0x1
#define _PWM6DCH_PWM6DCH6_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH6_MASK                              0x40
#define _PWM6DCH_PWM6DCH7_POSN                              0x7
#define _PWM6DCH_PWM6DCH7_POSITION                          0x7
#define _PWM6DCH_PWM6DCH7_SIZE                              0x1
#define _PWM6DCH_PWM6DCH7_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH7_MASK                              0x80
#define _PWM6DCH_PWM6DCH_POSN                               0x0
#define _PWM6DCH_PWM6DCH_POSITION                           0x0
#define _PWM6DCH_PWM6DCH_SIZE                               0x8
#define _PWM6DCH_PWM6DCH_LENGTH                             0x8
#define _PWM6DCH_PWM6DCH_MASK                               0xFF

// Register: PWM6PR
#define PWM6PR PWM6PR
extern volatile unsigned short          PWM6PR              __at(0xDA5);
#ifndef _LIB_BUILD
asm("PWM6PR equ 0DA5h");
#endif

// Register: PWM6PRL
#define PWM6PRL PWM6PRL
extern volatile unsigned char           PWM6PRL             __at(0xDA5);
#ifndef _LIB_BUILD
asm("PWM6PRL equ 0DA5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned PWM6PRL0               :1;
        unsigned PWM6PRL1               :1;
        unsigned PWM6PRL2               :1;
        unsigned PWM6PRL3               :1;
        unsigned PWM6PRL4               :1;
        unsigned PWM6PRL5               :1;
        unsigned PWM6PRL6               :1;
        unsigned PWM6PRL7               :1;
    };
    struct {
        unsigned PWM6PRL                :8;
    };
} PWM6PRLbits_t;
extern volatile PWM6PRLbits_t PWM6PRLbits __at(0xDA5);
// bitfield macros
#define _PWM6PRL_PR_POSN                                    0x0
#define _PWM6PRL_PR_POSITION                                0x0
#define _PWM6PRL_PR_SIZE                                    0x8
#define _PWM6PRL_PR_LENGTH                                  0x8
#define _PWM6PRL_PR_MASK                                    0xFF
#define _PWM6PRL_PWM6PRL0_POSN                              0x0
#define _PWM6PRL_PWM6PRL0_POSITION                          0x0
#define _PWM6PRL_PWM6PRL0_SIZE                              0x1
#define _PWM6PRL_PWM6PRL0_LENGTH                            0x1
#define _PWM6PRL_PWM6PRL0_MASK                              0x1
#define _PWM6PRL_PWM6PRL1_POSN                              0x1
#define _PWM6PRL_PWM6PRL1_POSITION                          0x1
#define _PWM6PRL_PWM6PRL1_SIZE                              0x1
#define _PWM6PRL_PWM6PRL1_LENGTH                            0x1
#define _PWM6PRL_PWM6PRL1_MASK                              0x2
#define _PWM6PRL_PWM6PRL2_POSN                              0x2
#define _PWM6PRL_PWM6PRL2_POSITION                          0x2
#define _PWM6PRL_PWM6PRL2_SIZE                              0x1
#define _PWM6PRL_PWM6PRL2_LENGTH                            0x1
#define _PWM6PRL_PWM6PRL2_MASK                              0x4
#define _PWM6PRL_PWM6PRL3_POSN                              0x3
#define _PWM6PRL_PWM6PRL3_POSITION                          0x3
#define _PWM6PRL_PWM6PRL3_SIZE                              0x1
#define _PWM6PRL_PWM6PRL3_LENGTH                            0x1
#define _PWM6PRL_PWM6PRL3_MASK                              0x8
#define _PWM6PRL_PWM6PRL4_POSN                              0x4
#define _PWM6PRL_PWM6PRL4_POSITION                          0x4
#define _PWM6PRL_PWM6PRL4_SIZE                              0x1
#define _PWM6PRL_PWM6PRL4_LENGTH                            0x1
#define _PWM6PRL_PWM6PRL4_MASK                              0x10
#define _PWM6PRL_PWM6PRL5_POSN                              0x5
#define _PWM6PRL_PWM6PRL5_POSITION                          0x5
#define _PWM6PRL_PWM6PRL5_SIZE                              0x1
#define _PWM6PRL_PWM6PRL5_LENGTH                            0x1
#define _PWM6PRL_PWM6PRL5_MASK                              0x20
#define _PWM6PRL_PWM6PRL6_POSN                              0x6
#define _PWM6PRL_PWM6PRL6_POSITION                          0x6
#define _PWM6PRL_PWM6PRL6_SIZE                              0x1
#define _PWM6PRL_PWM6PRL6_LENGTH                            0x1
#define _PWM6PRL_PWM6PRL6_MASK                              0x40
#define _PWM6PRL_PWM6PRL7_POSN                              0x7
#define _PWM6PRL_PWM6PRL7_POSITION                          0x7
#define _PWM6PRL_PWM6PRL7_SIZE                              0x1
#define _PWM6PRL_PWM6PRL7_LENGTH                            0x1
#define _PWM6PRL_PWM6PRL7_MASK                              0x80
#define _PWM6PRL_PWM6PRL_POSN                               0x0
#define _PWM6PRL_PWM6PRL_POSITION                           0x0
#define _PWM6PRL_PWM6PRL_SIZE                               0x8
#define _PWM6PRL_PWM6PRL_LENGTH                             0x8
#define _PWM6PRL_PWM6PRL_MASK                               0xFF

// Register: PWM6PRH
#define PWM6PRH PWM6PRH
extern volatile unsigned char           PWM6PRH             __at(0xDA6);
#ifndef _LIB_BUILD
asm("PWM6PRH equ 0DA6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned PWM6PRH0               :1;
        unsigned PWM6PRH1               :1;
        unsigned PWM6PRH2               :1;
        unsigned PWM6PRH3               :1;
        unsigned PWM6PRH4               :1;
        unsigned PWM6PRH5               :1;
        unsigned PWM6PRH6               :1;
        unsigned PWM6PRH7               :1;
    };
    struct {
        unsigned PWM6PRH                :8;
    };
} PWM6PRHbits_t;
extern volatile PWM6PRHbits_t PWM6PRHbits __at(0xDA6);
// bitfield macros
#define _PWM6PRH_PR_POSN                                    0x0
#define _PWM6PRH_PR_POSITION                                0x0
#define _PWM6PRH_PR_SIZE                                    0x8
#define _PWM6PRH_PR_LENGTH                                  0x8
#define _PWM6PRH_PR_MASK                                    0xFF
#define _PWM6PRH_PWM6PRH0_POSN                              0x0
#define _PWM6PRH_PWM6PRH0_POSITION                          0x0
#define _PWM6PRH_PWM6PRH0_SIZE                              0x1
#define _PWM6PRH_PWM6PRH0_LENGTH                            0x1
#define _PWM6PRH_PWM6PRH0_MASK                              0x1
#define _PWM6PRH_PWM6PRH1_POSN                              0x1
#define _PWM6PRH_PWM6PRH1_POSITION                          0x1
#define _PWM6PRH_PWM6PRH1_SIZE                              0x1
#define _PWM6PRH_PWM6PRH1_LENGTH                            0x1
#define _PWM6PRH_PWM6PRH1_MASK                              0x2
#define _PWM6PRH_PWM6PRH2_POSN                              0x2
#define _PWM6PRH_PWM6PRH2_POSITION                          0x2
#define _PWM6PRH_PWM6PRH2_SIZE                              0x1
#define _PWM6PRH_PWM6PRH2_LENGTH                            0x1
#define _PWM6PRH_PWM6PRH2_MASK                              0x4
#define _PWM6PRH_PWM6PRH3_POSN                              0x3
#define _PWM6PRH_PWM6PRH3_POSITION                          0x3
#define _PWM6PRH_PWM6PRH3_SIZE                              0x1
#define _PWM6PRH_PWM6PRH3_LENGTH                            0x1
#define _PWM6PRH_PWM6PRH3_MASK                              0x8
#define _PWM6PRH_PWM6PRH4_POSN                              0x4
#define _PWM6PRH_PWM6PRH4_POSITION                          0x4
#define _PWM6PRH_PWM6PRH4_SIZE                              0x1
#define _PWM6PRH_PWM6PRH4_LENGTH                            0x1
#define _PWM6PRH_PWM6PRH4_MASK                              0x10
#define _PWM6PRH_PWM6PRH5_POSN                              0x5
#define _PWM6PRH_PWM6PRH5_POSITION                          0x5
#define _PWM6PRH_PWM6PRH5_SIZE                              0x1
#define _PWM6PRH_PWM6PRH5_LENGTH                            0x1
#define _PWM6PRH_PWM6PRH5_MASK                              0x20
#define _PWM6PRH_PWM6PRH6_POSN                              0x6
#define _PWM6PRH_PWM6PRH6_POSITION                          0x6
#define _PWM6PRH_PWM6PRH6_SIZE                              0x1
#define _PWM6PRH_PWM6PRH6_LENGTH                            0x1
#define _PWM6PRH_PWM6PRH6_MASK                              0x40
#define _PWM6PRH_PWM6PRH7_POSN                              0x7
#define _PWM6PRH_PWM6PRH7_POSITION                          0x7
#define _PWM6PRH_PWM6PRH7_SIZE                              0x1
#define _PWM6PRH_PWM6PRH7_LENGTH                            0x1
#define _PWM6PRH_PWM6PRH7_MASK                              0x80
#define _PWM6PRH_PWM6PRH_POSN                               0x0
#define _PWM6PRH_PWM6PRH_POSITION                           0x0
#define _PWM6PRH_PWM6PRH_SIZE                               0x8
#define _PWM6PRH_PWM6PRH_LENGTH                             0x8
#define _PWM6PRH_PWM6PRH_MASK                               0xFF

// Register: PWM6OF
#define PWM6OF PWM6OF
extern volatile unsigned short          PWM6OF              __at(0xDA7);
#ifndef _LIB_BUILD
asm("PWM6OF equ 0DA7h");
#endif

// Register: PWM6OFL
#define PWM6OFL PWM6OFL
extern volatile unsigned char           PWM6OFL             __at(0xDA7);
#ifndef _LIB_BUILD
asm("PWM6OFL equ 0DA7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OF                     :8;
    };
    struct {
        unsigned PWM6OFL0               :1;
        unsigned PWM6OFL1               :1;
        unsigned PWM6OFL2               :1;
        unsigned PWM6OFL3               :1;
        unsigned PWM6OFL4               :1;
        unsigned PWM6OFL5               :1;
        unsigned PWM6OFL6               :1;
        unsigned PWM6OFL7               :1;
    };
    struct {
        unsigned PWM6OFL                :8;
    };
} PWM6OFLbits_t;
extern volatile PWM6OFLbits_t PWM6OFLbits __at(0xDA7);
// bitfield macros
#define _PWM6OFL_OF_POSN                                    0x0
#define _PWM6OFL_OF_POSITION                                0x0
#define _PWM6OFL_OF_SIZE                                    0x8
#define _PWM6OFL_OF_LENGTH                                  0x8
#define _PWM6OFL_OF_MASK                                    0xFF
#define _PWM6OFL_PWM6OFL0_POSN                              0x0
#define _PWM6OFL_PWM6OFL0_POSITION                          0x0
#define _PWM6OFL_PWM6OFL0_SIZE                              0x1
#define _PWM6OFL_PWM6OFL0_LENGTH                            0x1
#define _PWM6OFL_PWM6OFL0_MASK                              0x1
#define _PWM6OFL_PWM6OFL1_POSN                              0x1
#define _PWM6OFL_PWM6OFL1_POSITION                          0x1
#define _PWM6OFL_PWM6OFL1_SIZE                              0x1
#define _PWM6OFL_PWM6OFL1_LENGTH                            0x1
#define _PWM6OFL_PWM6OFL1_MASK                              0x2
#define _PWM6OFL_PWM6OFL2_POSN                              0x2
#define _PWM6OFL_PWM6OFL2_POSITION                          0x2
#define _PWM6OFL_PWM6OFL2_SIZE                              0x1
#define _PWM6OFL_PWM6OFL2_LENGTH                            0x1
#define _PWM6OFL_PWM6OFL2_MASK                              0x4
#define _PWM6OFL_PWM6OFL3_POSN                              0x3
#define _PWM6OFL_PWM6OFL3_POSITION                          0x3
#define _PWM6OFL_PWM6OFL3_SIZE                              0x1
#define _PWM6OFL_PWM6OFL3_LENGTH                            0x1
#define _PWM6OFL_PWM6OFL3_MASK                              0x8
#define _PWM6OFL_PWM6OFL4_POSN                              0x4
#define _PWM6OFL_PWM6OFL4_POSITION                          0x4
#define _PWM6OFL_PWM6OFL4_SIZE                              0x1
#define _PWM6OFL_PWM6OFL4_LENGTH                            0x1
#define _PWM6OFL_PWM6OFL4_MASK                              0x10
#define _PWM6OFL_PWM6OFL5_POSN                              0x5
#define _PWM6OFL_PWM6OFL5_POSITION                          0x5
#define _PWM6OFL_PWM6OFL5_SIZE                              0x1
#define _PWM6OFL_PWM6OFL5_LENGTH                            0x1
#define _PWM6OFL_PWM6OFL5_MASK                              0x20
#define _PWM6OFL_PWM6OFL6_POSN                              0x6
#define _PWM6OFL_PWM6OFL6_POSITION                          0x6
#define _PWM6OFL_PWM6OFL6_SIZE                              0x1
#define _PWM6OFL_PWM6OFL6_LENGTH                            0x1
#define _PWM6OFL_PWM6OFL6_MASK                              0x40
#define _PWM6OFL_PWM6OFL7_POSN                              0x7
#define _PWM6OFL_PWM6OFL7_POSITION                          0x7
#define _PWM6OFL_PWM6OFL7_SIZE                              0x1
#define _PWM6OFL_PWM6OFL7_LENGTH                            0x1
#define _PWM6OFL_PWM6OFL7_MASK                              0x80
#define _PWM6OFL_PWM6OFL_POSN                               0x0
#define _PWM6OFL_PWM6OFL_POSITION                           0x0
#define _PWM6OFL_PWM6OFL_SIZE                               0x8
#define _PWM6OFL_PWM6OFL_LENGTH                             0x8
#define _PWM6OFL_PWM6OFL_MASK                               0xFF

// Register: PWM6OFH
#define PWM6OFH PWM6OFH
extern volatile unsigned char           PWM6OFH             __at(0xDA8);
#ifndef _LIB_BUILD
asm("PWM6OFH equ 0DA8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OF                     :8;
    };
    struct {
        unsigned PWM6OFH0               :1;
        unsigned PWM6OFH1               :1;
        unsigned PWM6OFH2               :1;
        unsigned PWM6OFH3               :1;
        unsigned PWM6OFH4               :1;
        unsigned PWM6OFH5               :1;
        unsigned PWM6OFH6               :1;
        unsigned PWM6OFH7               :1;
    };
    struct {
        unsigned PWM6OFH                :8;
    };
} PWM6OFHbits_t;
extern volatile PWM6OFHbits_t PWM6OFHbits __at(0xDA8);
// bitfield macros
#define _PWM6OFH_OF_POSN                                    0x0
#define _PWM6OFH_OF_POSITION                                0x0
#define _PWM6OFH_OF_SIZE                                    0x8
#define _PWM6OFH_OF_LENGTH                                  0x8
#define _PWM6OFH_OF_MASK                                    0xFF
#define _PWM6OFH_PWM6OFH0_POSN                              0x0
#define _PWM6OFH_PWM6OFH0_POSITION                          0x0
#define _PWM6OFH_PWM6OFH0_SIZE                              0x1
#define _PWM6OFH_PWM6OFH0_LENGTH                            0x1
#define _PWM6OFH_PWM6OFH0_MASK                              0x1
#define _PWM6OFH_PWM6OFH1_POSN                              0x1
#define _PWM6OFH_PWM6OFH1_POSITION                          0x1
#define _PWM6OFH_PWM6OFH1_SIZE                              0x1
#define _PWM6OFH_PWM6OFH1_LENGTH                            0x1
#define _PWM6OFH_PWM6OFH1_MASK                              0x2
#define _PWM6OFH_PWM6OFH2_POSN                              0x2
#define _PWM6OFH_PWM6OFH2_POSITION                          0x2
#define _PWM6OFH_PWM6OFH2_SIZE                              0x1
#define _PWM6OFH_PWM6OFH2_LENGTH                            0x1
#define _PWM6OFH_PWM6OFH2_MASK                              0x4
#define _PWM6OFH_PWM6OFH3_POSN                              0x3
#define _PWM6OFH_PWM6OFH3_POSITION                          0x3
#define _PWM6OFH_PWM6OFH3_SIZE                              0x1
#define _PWM6OFH_PWM6OFH3_LENGTH                            0x1
#define _PWM6OFH_PWM6OFH3_MASK                              0x8
#define _PWM6OFH_PWM6OFH4_POSN                              0x4
#define _PWM6OFH_PWM6OFH4_POSITION                          0x4
#define _PWM6OFH_PWM6OFH4_SIZE                              0x1
#define _PWM6OFH_PWM6OFH4_LENGTH                            0x1
#define _PWM6OFH_PWM6OFH4_MASK                              0x10
#define _PWM6OFH_PWM6OFH5_POSN                              0x5
#define _PWM6OFH_PWM6OFH5_POSITION                          0x5
#define _PWM6OFH_PWM6OFH5_SIZE                              0x1
#define _PWM6OFH_PWM6OFH5_LENGTH                            0x1
#define _PWM6OFH_PWM6OFH5_MASK                              0x20
#define _PWM6OFH_PWM6OFH6_POSN                              0x6
#define _PWM6OFH_PWM6OFH6_POSITION                          0x6
#define _PWM6OFH_PWM6OFH6_SIZE                              0x1
#define _PWM6OFH_PWM6OFH6_LENGTH                            0x1
#define _PWM6OFH_PWM6OFH6_MASK                              0x40
#define _PWM6OFH_PWM6OFH7_POSN                              0x7
#define _PWM6OFH_PWM6OFH7_POSITION                          0x7
#define _PWM6OFH_PWM6OFH7_SIZE                              0x1
#define _PWM6OFH_PWM6OFH7_LENGTH                            0x1
#define _PWM6OFH_PWM6OFH7_MASK                              0x80
#define _PWM6OFH_PWM6OFH_POSN                               0x0
#define _PWM6OFH_PWM6OFH_POSITION                           0x0
#define _PWM6OFH_PWM6OFH_SIZE                               0x8
#define _PWM6OFH_PWM6OFH_LENGTH                             0x8
#define _PWM6OFH_PWM6OFH_MASK                               0xFF

// Register: PWM6TMR
#define PWM6TMR PWM6TMR
extern volatile unsigned short          PWM6TMR             __at(0xDA9);
#ifndef _LIB_BUILD
asm("PWM6TMR equ 0DA9h");
#endif

// Register: PWM6TMRL
#define PWM6TMRL PWM6TMRL
extern volatile unsigned char           PWM6TMRL            __at(0xDA9);
#ifndef _LIB_BUILD
asm("PWM6TMRL equ 0DA9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned PWM6TMRL0              :1;
        unsigned PWM6TMRL1              :1;
        unsigned PWM6TMRL2              :1;
        unsigned PWM6TMRL3              :1;
        unsigned PWM6TMRL4              :1;
        unsigned PWM6TMRL5              :1;
        unsigned PWM6TMRL6              :1;
        unsigned PWM6TMRL7              :1;
    };
    struct {
        unsigned PWM6TMRL               :8;
    };
} PWM6TMRLbits_t;
extern volatile PWM6TMRLbits_t PWM6TMRLbits __at(0xDA9);
// bitfield macros
#define _PWM6TMRL_TMR_POSN                                  0x0
#define _PWM6TMRL_TMR_POSITION                              0x0
#define _PWM6TMRL_TMR_SIZE                                  0x8
#define _PWM6TMRL_TMR_LENGTH                                0x8
#define _PWM6TMRL_TMR_MASK                                  0xFF
#define _PWM6TMRL_PWM6TMRL0_POSN                            0x0
#define _PWM6TMRL_PWM6TMRL0_POSITION                        0x0
#define _PWM6TMRL_PWM6TMRL0_SIZE                            0x1
#define _PWM6TMRL_PWM6TMRL0_LENGTH                          0x1
#define _PWM6TMRL_PWM6TMRL0_MASK                            0x1
#define _PWM6TMRL_PWM6TMRL1_POSN                            0x1
#define _PWM6TMRL_PWM6TMRL1_POSITION                        0x1
#define _PWM6TMRL_PWM6TMRL1_SIZE                            0x1
#define _PWM6TMRL_PWM6TMRL1_LENGTH                          0x1
#define _PWM6TMRL_PWM6TMRL1_MASK                            0x2
#define _PWM6TMRL_PWM6TMRL2_POSN                            0x2
#define _PWM6TMRL_PWM6TMRL2_POSITION                        0x2
#define _PWM6TMRL_PWM6TMRL2_SIZE                            0x1
#define _PWM6TMRL_PWM6TMRL2_LENGTH                          0x1
#define _PWM6TMRL_PWM6TMRL2_MASK                            0x4
#define _PWM6TMRL_PWM6TMRL3_POSN                            0x3
#define _PWM6TMRL_PWM6TMRL3_POSITION                        0x3
#define _PWM6TMRL_PWM6TMRL3_SIZE                            0x1
#define _PWM6TMRL_PWM6TMRL3_LENGTH                          0x1
#define _PWM6TMRL_PWM6TMRL3_MASK                            0x8
#define _PWM6TMRL_PWM6TMRL4_POSN                            0x4
#define _PWM6TMRL_PWM6TMRL4_POSITION                        0x4
#define _PWM6TMRL_PWM6TMRL4_SIZE                            0x1
#define _PWM6TMRL_PWM6TMRL4_LENGTH                          0x1
#define _PWM6TMRL_PWM6TMRL4_MASK                            0x10
#define _PWM6TMRL_PWM6TMRL5_POSN                            0x5
#define _PWM6TMRL_PWM6TMRL5_POSITION                        0x5
#define _PWM6TMRL_PWM6TMRL5_SIZE                            0x1
#define _PWM6TMRL_PWM6TMRL5_LENGTH                          0x1
#define _PWM6TMRL_PWM6TMRL5_MASK                            0x20
#define _PWM6TMRL_PWM6TMRL6_POSN                            0x6
#define _PWM6TMRL_PWM6TMRL6_POSITION                        0x6
#define _PWM6TMRL_PWM6TMRL6_SIZE                            0x1
#define _PWM6TMRL_PWM6TMRL6_LENGTH                          0x1
#define _PWM6TMRL_PWM6TMRL6_MASK                            0x40
#define _PWM6TMRL_PWM6TMRL7_POSN                            0x7
#define _PWM6TMRL_PWM6TMRL7_POSITION                        0x7
#define _PWM6TMRL_PWM6TMRL7_SIZE                            0x1
#define _PWM6TMRL_PWM6TMRL7_LENGTH                          0x1
#define _PWM6TMRL_PWM6TMRL7_MASK                            0x80
#define _PWM6TMRL_PWM6TMRL_POSN                             0x0
#define _PWM6TMRL_PWM6TMRL_POSITION                         0x0
#define _PWM6TMRL_PWM6TMRL_SIZE                             0x8
#define _PWM6TMRL_PWM6TMRL_LENGTH                           0x8
#define _PWM6TMRL_PWM6TMRL_MASK                             0xFF

// Register: PWM6TMRH
#define PWM6TMRH PWM6TMRH
extern volatile unsigned char           PWM6TMRH            __at(0xDAA);
#ifndef _LIB_BUILD
asm("PWM6TMRH equ 0DAAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned PWM6TMRH0              :1;
        unsigned PWM6TMRH1              :1;
        unsigned PWM6TMRH2              :1;
        unsigned PWM6TMRH3              :1;
        unsigned PWM6TMRH4              :1;
        unsigned PWM6TMRH5              :1;
        unsigned PWM6TMRH6              :1;
        unsigned PWM6TMRH7              :1;
    };
    struct {
        unsigned PWM6TMRH               :8;
    };
} PWM6TMRHbits_t;
extern volatile PWM6TMRHbits_t PWM6TMRHbits __at(0xDAA);
// bitfield macros
#define _PWM6TMRH_TMR_POSN                                  0x0
#define _PWM6TMRH_TMR_POSITION                              0x0
#define _PWM6TMRH_TMR_SIZE                                  0x8
#define _PWM6TMRH_TMR_LENGTH                                0x8
#define _PWM6TMRH_TMR_MASK                                  0xFF
#define _PWM6TMRH_PWM6TMRH0_POSN                            0x0
#define _PWM6TMRH_PWM6TMRH0_POSITION                        0x0
#define _PWM6TMRH_PWM6TMRH0_SIZE                            0x1
#define _PWM6TMRH_PWM6TMRH0_LENGTH                          0x1
#define _PWM6TMRH_PWM6TMRH0_MASK                            0x1
#define _PWM6TMRH_PWM6TMRH1_POSN                            0x1
#define _PWM6TMRH_PWM6TMRH1_POSITION                        0x1
#define _PWM6TMRH_PWM6TMRH1_SIZE                            0x1
#define _PWM6TMRH_PWM6TMRH1_LENGTH                          0x1
#define _PWM6TMRH_PWM6TMRH1_MASK                            0x2
#define _PWM6TMRH_PWM6TMRH2_POSN                            0x2
#define _PWM6TMRH_PWM6TMRH2_POSITION                        0x2
#define _PWM6TMRH_PWM6TMRH2_SIZE                            0x1
#define _PWM6TMRH_PWM6TMRH2_LENGTH                          0x1
#define _PWM6TMRH_PWM6TMRH2_MASK                            0x4
#define _PWM6TMRH_PWM6TMRH3_POSN                            0x3
#define _PWM6TMRH_PWM6TMRH3_POSITION                        0x3
#define _PWM6TMRH_PWM6TMRH3_SIZE                            0x1
#define _PWM6TMRH_PWM6TMRH3_LENGTH                          0x1
#define _PWM6TMRH_PWM6TMRH3_MASK                            0x8
#define _PWM6TMRH_PWM6TMRH4_POSN                            0x4
#define _PWM6TMRH_PWM6TMRH4_POSITION                        0x4
#define _PWM6TMRH_PWM6TMRH4_SIZE                            0x1
#define _PWM6TMRH_PWM6TMRH4_LENGTH                          0x1
#define _PWM6TMRH_PWM6TMRH4_MASK                            0x10
#define _PWM6TMRH_PWM6TMRH5_POSN                            0x5
#define _PWM6TMRH_PWM6TMRH5_POSITION                        0x5
#define _PWM6TMRH_PWM6TMRH5_SIZE                            0x1
#define _PWM6TMRH_PWM6TMRH5_LENGTH                          0x1
#define _PWM6TMRH_PWM6TMRH5_MASK                            0x20
#define _PWM6TMRH_PWM6TMRH6_POSN                            0x6
#define _PWM6TMRH_PWM6TMRH6_POSITION                        0x6
#define _PWM6TMRH_PWM6TMRH6_SIZE                            0x1
#define _PWM6TMRH_PWM6TMRH6_LENGTH                          0x1
#define _PWM6TMRH_PWM6TMRH6_MASK                            0x40
#define _PWM6TMRH_PWM6TMRH7_POSN                            0x7
#define _PWM6TMRH_PWM6TMRH7_POSITION                        0x7
#define _PWM6TMRH_PWM6TMRH7_SIZE                            0x1
#define _PWM6TMRH_PWM6TMRH7_LENGTH                          0x1
#define _PWM6TMRH_PWM6TMRH7_MASK                            0x80
#define _PWM6TMRH_PWM6TMRH_POSN                             0x0
#define _PWM6TMRH_PWM6TMRH_POSITION                         0x0
#define _PWM6TMRH_PWM6TMRH_SIZE                             0x8
#define _PWM6TMRH_PWM6TMRH_LENGTH                           0x8
#define _PWM6TMRH_PWM6TMRH_MASK                             0xFF

// Register: PWM6CON
#define PWM6CON PWM6CON
extern volatile unsigned char           PWM6CON             __at(0xDAB);
#ifndef _LIB_BUILD
asm("PWM6CON equ 0DABh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned MODE                   :2;
        unsigned POL                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned PWM6MODE0              :1;
        unsigned PWM6MODE1              :1;
    };
    struct {
        unsigned                        :2;
        unsigned PWM6MODE               :2;
        unsigned PWM6POL                :1;
        unsigned PWM6OUT                :1;
        unsigned                        :1;
        unsigned PWM6EN                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
    };
} PWM6CONbits_t;
extern volatile PWM6CONbits_t PWM6CONbits __at(0xDAB);
// bitfield macros
#define _PWM6CON_MODE_POSN                                  0x2
#define _PWM6CON_MODE_POSITION                              0x2
#define _PWM6CON_MODE_SIZE                                  0x2
#define _PWM6CON_MODE_LENGTH                                0x2
#define _PWM6CON_MODE_MASK                                  0xC
#define _PWM6CON_POL_POSN                                   0x4
#define _PWM6CON_POL_POSITION                               0x4
#define _PWM6CON_POL_SIZE                                   0x1
#define _PWM6CON_POL_LENGTH                                 0x1
#define _PWM6CON_POL_MASK                                   0x10
#define _PWM6CON_OUT_POSN                                   0x5
#define _PWM6CON_OUT_POSITION                               0x5
#define _PWM6CON_OUT_SIZE                                   0x1
#define _PWM6CON_OUT_LENGTH                                 0x1
#define _PWM6CON_OUT_MASK                                   0x20
#define _PWM6CON_EN_POSN                                    0x7
#define _PWM6CON_EN_POSITION                                0x7
#define _PWM6CON_EN_SIZE                                    0x1
#define _PWM6CON_EN_LENGTH                                  0x1
#define _PWM6CON_EN_MASK                                    0x80
#define _PWM6CON_PWM6MODE0_POSN                             0x2
#define _PWM6CON_PWM6MODE0_POSITION                         0x2
#define _PWM6CON_PWM6MODE0_SIZE                             0x1
#define _PWM6CON_PWM6MODE0_LENGTH                           0x1
#define _PWM6CON_PWM6MODE0_MASK                             0x4
#define _PWM6CON_PWM6MODE1_POSN                             0x3
#define _PWM6CON_PWM6MODE1_POSITION                         0x3
#define _PWM6CON_PWM6MODE1_SIZE                             0x1
#define _PWM6CON_PWM6MODE1_LENGTH                           0x1
#define _PWM6CON_PWM6MODE1_MASK                             0x8
#define _PWM6CON_PWM6MODE_POSN                              0x2
#define _PWM6CON_PWM6MODE_POSITION                          0x2
#define _PWM6CON_PWM6MODE_SIZE                              0x2
#define _PWM6CON_PWM6MODE_LENGTH                            0x2
#define _PWM6CON_PWM6MODE_MASK                              0xC
#define _PWM6CON_PWM6POL_POSN                               0x4
#define _PWM6CON_PWM6POL_POSITION                           0x4
#define _PWM6CON_PWM6POL_SIZE                               0x1
#define _PWM6CON_PWM6POL_LENGTH                             0x1
#define _PWM6CON_PWM6POL_MASK                               0x10
#define _PWM6CON_PWM6OUT_POSN                               0x5
#define _PWM6CON_PWM6OUT_POSITION                           0x5
#define _PWM6CON_PWM6OUT_SIZE                               0x1
#define _PWM6CON_PWM6OUT_LENGTH                             0x1
#define _PWM6CON_PWM6OUT_MASK                               0x20
#define _PWM6CON_PWM6EN_POSN                                0x7
#define _PWM6CON_PWM6EN_POSITION                            0x7
#define _PWM6CON_PWM6EN_SIZE                                0x1
#define _PWM6CON_PWM6EN_LENGTH                              0x1
#define _PWM6CON_PWM6EN_MASK                                0x80
#define _PWM6CON_MODE0_POSN                                 0x2
#define _PWM6CON_MODE0_POSITION                             0x2
#define _PWM6CON_MODE0_SIZE                                 0x1
#define _PWM6CON_MODE0_LENGTH                               0x1
#define _PWM6CON_MODE0_MASK                                 0x4
#define _PWM6CON_MODE1_POSN                                 0x3
#define _PWM6CON_MODE1_POSITION                             0x3
#define _PWM6CON_MODE1_SIZE                                 0x1
#define _PWM6CON_MODE1_LENGTH                               0x1
#define _PWM6CON_MODE1_MASK                                 0x8

// Register: PWM6INTE
#define PWM6INTE PWM6INTE
extern volatile unsigned char           PWM6INTE            __at(0xDAC);
#ifndef _LIB_BUILD
asm("PWM6INTE equ 0DACh");
#endif
// aliases
extern volatile unsigned char           PWM6INTCON          __at(0xDAC);
#ifndef _LIB_BUILD
asm("PWM6INTCON equ 0DACh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRIE                   :1;
        unsigned DCIE                   :1;
        unsigned PHIE                   :1;
        unsigned OFIE                   :1;
    };
    struct {
        unsigned PWM6PRIE               :1;
        unsigned PWM6DCIE               :1;
        unsigned PWM6PHIE               :1;
        unsigned PWM6OFIE               :1;
    };
} PWM6INTEbits_t;
extern volatile PWM6INTEbits_t PWM6INTEbits __at(0xDAC);
// bitfield macros
#define _PWM6INTE_PRIE_POSN                                 0x0
#define _PWM6INTE_PRIE_POSITION                             0x0
#define _PWM6INTE_PRIE_SIZE                                 0x1
#define _PWM6INTE_PRIE_LENGTH                               0x1
#define _PWM6INTE_PRIE_MASK                                 0x1
#define _PWM6INTE_DCIE_POSN                                 0x1
#define _PWM6INTE_DCIE_POSITION                             0x1
#define _PWM6INTE_DCIE_SIZE                                 0x1
#define _PWM6INTE_DCIE_LENGTH                               0x1
#define _PWM6INTE_DCIE_MASK                                 0x2
#define _PWM6INTE_PHIE_POSN                                 0x2
#define _PWM6INTE_PHIE_POSITION                             0x2
#define _PWM6INTE_PHIE_SIZE                                 0x1
#define _PWM6INTE_PHIE_LENGTH                               0x1
#define _PWM6INTE_PHIE_MASK                                 0x4
#define _PWM6INTE_OFIE_POSN                                 0x3
#define _PWM6INTE_OFIE_POSITION                             0x3
#define _PWM6INTE_OFIE_SIZE                                 0x1
#define _PWM6INTE_OFIE_LENGTH                               0x1
#define _PWM6INTE_OFIE_MASK                                 0x8
#define _PWM6INTE_PWM6PRIE_POSN                             0x0
#define _PWM6INTE_PWM6PRIE_POSITION                         0x0
#define _PWM6INTE_PWM6PRIE_SIZE                             0x1
#define _PWM6INTE_PWM6PRIE_LENGTH                           0x1
#define _PWM6INTE_PWM6PRIE_MASK                             0x1
#define _PWM6INTE_PWM6DCIE_POSN                             0x1
#define _PWM6INTE_PWM6DCIE_POSITION                         0x1
#define _PWM6INTE_PWM6DCIE_SIZE                             0x1
#define _PWM6INTE_PWM6DCIE_LENGTH                           0x1
#define _PWM6INTE_PWM6DCIE_MASK                             0x2
#define _PWM6INTE_PWM6PHIE_POSN                             0x2
#define _PWM6INTE_PWM6PHIE_POSITION                         0x2
#define _PWM6INTE_PWM6PHIE_SIZE                             0x1
#define _PWM6INTE_PWM6PHIE_LENGTH                           0x1
#define _PWM6INTE_PWM6PHIE_MASK                             0x4
#define _PWM6INTE_PWM6OFIE_POSN                             0x3
#define _PWM6INTE_PWM6OFIE_POSITION                         0x3
#define _PWM6INTE_PWM6OFIE_SIZE                             0x1
#define _PWM6INTE_PWM6OFIE_LENGTH                           0x1
#define _PWM6INTE_PWM6OFIE_MASK                             0x8
// alias bitfield definitions
typedef union {
    struct {
        unsigned PRIE                   :1;
        unsigned DCIE                   :1;
        unsigned PHIE                   :1;
        unsigned OFIE                   :1;
    };
    struct {
        unsigned PWM6PRIE               :1;
        unsigned PWM6DCIE               :1;
        unsigned PWM6PHIE               :1;
        unsigned PWM6OFIE               :1;
    };
} PWM6INTCONbits_t;
extern volatile PWM6INTCONbits_t PWM6INTCONbits __at(0xDAC);
// bitfield macros
#define _PWM6INTCON_PRIE_POSN                               0x0
#define _PWM6INTCON_PRIE_POSITION                           0x0
#define _PWM6INTCON_PRIE_SIZE                               0x1
#define _PWM6INTCON_PRIE_LENGTH                             0x1
#define _PWM6INTCON_PRIE_MASK                               0x1
#define _PWM6INTCON_DCIE_POSN                               0x1
#define _PWM6INTCON_DCIE_POSITION                           0x1
#define _PWM6INTCON_DCIE_SIZE                               0x1
#define _PWM6INTCON_DCIE_LENGTH                             0x1
#define _PWM6INTCON_DCIE_MASK                               0x2
#define _PWM6INTCON_PHIE_POSN                               0x2
#define _PWM6INTCON_PHIE_POSITION                           0x2
#define _PWM6INTCON_PHIE_SIZE                               0x1
#define _PWM6INTCON_PHIE_LENGTH                             0x1
#define _PWM6INTCON_PHIE_MASK                               0x4
#define _PWM6INTCON_OFIE_POSN                               0x3
#define _PWM6INTCON_OFIE_POSITION                           0x3
#define _PWM6INTCON_OFIE_SIZE                               0x1
#define _PWM6INTCON_OFIE_LENGTH                             0x1
#define _PWM6INTCON_OFIE_MASK                               0x8
#define _PWM6INTCON_PWM6PRIE_POSN                           0x0
#define _PWM6INTCON_PWM6PRIE_POSITION                       0x0
#define _PWM6INTCON_PWM6PRIE_SIZE                           0x1
#define _PWM6INTCON_PWM6PRIE_LENGTH                         0x1
#define _PWM6INTCON_PWM6PRIE_MASK                           0x1
#define _PWM6INTCON_PWM6DCIE_POSN                           0x1
#define _PWM6INTCON_PWM6DCIE_POSITION                       0x1
#define _PWM6INTCON_PWM6DCIE_SIZE                           0x1
#define _PWM6INTCON_PWM6DCIE_LENGTH                         0x1
#define _PWM6INTCON_PWM6DCIE_MASK                           0x2
#define _PWM6INTCON_PWM6PHIE_POSN                           0x2
#define _PWM6INTCON_PWM6PHIE_POSITION                       0x2
#define _PWM6INTCON_PWM6PHIE_SIZE                           0x1
#define _PWM6INTCON_PWM6PHIE_LENGTH                         0x1
#define _PWM6INTCON_PWM6PHIE_MASK                           0x4
#define _PWM6INTCON_PWM6OFIE_POSN                           0x3
#define _PWM6INTCON_PWM6OFIE_POSITION                       0x3
#define _PWM6INTCON_PWM6OFIE_SIZE                           0x1
#define _PWM6INTCON_PWM6OFIE_LENGTH                         0x1
#define _PWM6INTCON_PWM6OFIE_MASK                           0x8

// Register: PWM6INTF
#define PWM6INTF PWM6INTF
extern volatile unsigned char           PWM6INTF            __at(0xDAD);
#ifndef _LIB_BUILD
asm("PWM6INTF equ 0DADh");
#endif
// aliases
extern volatile unsigned char           PWM6INTFLG          __at(0xDAD);
#ifndef _LIB_BUILD
asm("PWM6INTFLG equ 0DADh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRIF                   :1;
        unsigned DCIF                   :1;
        unsigned PHIF                   :1;
        unsigned OFIF                   :1;
    };
    struct {
        unsigned PWM6PRIF               :1;
        unsigned PWM6DCIF               :1;
        unsigned PWM6PHIF               :1;
        unsigned PWM6OFIF               :1;
    };
} PWM6INTFbits_t;
extern volatile PWM6INTFbits_t PWM6INTFbits __at(0xDAD);
// bitfield macros
#define _PWM6INTF_PRIF_POSN                                 0x0
#define _PWM6INTF_PRIF_POSITION                             0x0
#define _PWM6INTF_PRIF_SIZE                                 0x1
#define _PWM6INTF_PRIF_LENGTH                               0x1
#define _PWM6INTF_PRIF_MASK                                 0x1
#define _PWM6INTF_DCIF_POSN                                 0x1
#define _PWM6INTF_DCIF_POSITION                             0x1
#define _PWM6INTF_DCIF_SIZE                                 0x1
#define _PWM6INTF_DCIF_LENGTH                               0x1
#define _PWM6INTF_DCIF_MASK                                 0x2
#define _PWM6INTF_PHIF_POSN                                 0x2
#define _PWM6INTF_PHIF_POSITION                             0x2
#define _PWM6INTF_PHIF_SIZE                                 0x1
#define _PWM6INTF_PHIF_LENGTH                               0x1
#define _PWM6INTF_PHIF_MASK                                 0x4
#define _PWM6INTF_OFIF_POSN                                 0x3
#define _PWM6INTF_OFIF_POSITION                             0x3
#define _PWM6INTF_OFIF_SIZE                                 0x1
#define _PWM6INTF_OFIF_LENGTH                               0x1
#define _PWM6INTF_OFIF_MASK                                 0x8
#define _PWM6INTF_PWM6PRIF_POSN                             0x0
#define _PWM6INTF_PWM6PRIF_POSITION                         0x0
#define _PWM6INTF_PWM6PRIF_SIZE                             0x1
#define _PWM6INTF_PWM6PRIF_LENGTH                           0x1
#define _PWM6INTF_PWM6PRIF_MASK                             0x1
#define _PWM6INTF_PWM6DCIF_POSN                             0x1
#define _PWM6INTF_PWM6DCIF_POSITION                         0x1
#define _PWM6INTF_PWM6DCIF_SIZE                             0x1
#define _PWM6INTF_PWM6DCIF_LENGTH                           0x1
#define _PWM6INTF_PWM6DCIF_MASK                             0x2
#define _PWM6INTF_PWM6PHIF_POSN                             0x2
#define _PWM6INTF_PWM6PHIF_POSITION                         0x2
#define _PWM6INTF_PWM6PHIF_SIZE                             0x1
#define _PWM6INTF_PWM6PHIF_LENGTH                           0x1
#define _PWM6INTF_PWM6PHIF_MASK                             0x4
#define _PWM6INTF_PWM6OFIF_POSN                             0x3
#define _PWM6INTF_PWM6OFIF_POSITION                         0x3
#define _PWM6INTF_PWM6OFIF_SIZE                             0x1
#define _PWM6INTF_PWM6OFIF_LENGTH                           0x1
#define _PWM6INTF_PWM6OFIF_MASK                             0x8
// alias bitfield definitions
typedef union {
    struct {
        unsigned PRIF                   :1;
        unsigned DCIF                   :1;
        unsigned PHIF                   :1;
        unsigned OFIF                   :1;
    };
    struct {
        unsigned PWM6PRIF               :1;
        unsigned PWM6DCIF               :1;
        unsigned PWM6PHIF               :1;
        unsigned PWM6OFIF               :1;
    };
} PWM6INTFLGbits_t;
extern volatile PWM6INTFLGbits_t PWM6INTFLGbits __at(0xDAD);
// bitfield macros
#define _PWM6INTFLG_PRIF_POSN                               0x0
#define _PWM6INTFLG_PRIF_POSITION                           0x0
#define _PWM6INTFLG_PRIF_SIZE                               0x1
#define _PWM6INTFLG_PRIF_LENGTH                             0x1
#define _PWM6INTFLG_PRIF_MASK                               0x1
#define _PWM6INTFLG_DCIF_POSN                               0x1
#define _PWM6INTFLG_DCIF_POSITION                           0x1
#define _PWM6INTFLG_DCIF_SIZE                               0x1
#define _PWM6INTFLG_DCIF_LENGTH                             0x1
#define _PWM6INTFLG_DCIF_MASK                               0x2
#define _PWM6INTFLG_PHIF_POSN                               0x2
#define _PWM6INTFLG_PHIF_POSITION                           0x2
#define _PWM6INTFLG_PHIF_SIZE                               0x1
#define _PWM6INTFLG_PHIF_LENGTH                             0x1
#define _PWM6INTFLG_PHIF_MASK                               0x4
#define _PWM6INTFLG_OFIF_POSN                               0x3
#define _PWM6INTFLG_OFIF_POSITION                           0x3
#define _PWM6INTFLG_OFIF_SIZE                               0x1
#define _PWM6INTFLG_OFIF_LENGTH                             0x1
#define _PWM6INTFLG_OFIF_MASK                               0x8
#define _PWM6INTFLG_PWM6PRIF_POSN                           0x0
#define _PWM6INTFLG_PWM6PRIF_POSITION                       0x0
#define _PWM6INTFLG_PWM6PRIF_SIZE                           0x1
#define _PWM6INTFLG_PWM6PRIF_LENGTH                         0x1
#define _PWM6INTFLG_PWM6PRIF_MASK                           0x1
#define _PWM6INTFLG_PWM6DCIF_POSN                           0x1
#define _PWM6INTFLG_PWM6DCIF_POSITION                       0x1
#define _PWM6INTFLG_PWM6DCIF_SIZE                           0x1
#define _PWM6INTFLG_PWM6DCIF_LENGTH                         0x1
#define _PWM6INTFLG_PWM6DCIF_MASK                           0x2
#define _PWM6INTFLG_PWM6PHIF_POSN                           0x2
#define _PWM6INTFLG_PWM6PHIF_POSITION                       0x2
#define _PWM6INTFLG_PWM6PHIF_SIZE                           0x1
#define _PWM6INTFLG_PWM6PHIF_LENGTH                         0x1
#define _PWM6INTFLG_PWM6PHIF_MASK                           0x4
#define _PWM6INTFLG_PWM6OFIF_POSN                           0x3
#define _PWM6INTFLG_PWM6OFIF_POSITION                       0x3
#define _PWM6INTFLG_PWM6OFIF_SIZE                           0x1
#define _PWM6INTFLG_PWM6OFIF_LENGTH                         0x1
#define _PWM6INTFLG_PWM6OFIF_MASK                           0x8

// Register: PWM6CLKCON
#define PWM6CLKCON PWM6CLKCON
extern volatile unsigned char           PWM6CLKCON          __at(0xDAE);
#ifndef _LIB_BUILD
asm("PWM6CLKCON equ 0DAEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CS                     :2;
        unsigned                        :2;
        unsigned PS                     :3;
    };
    struct {
        unsigned PWM6CS0                :1;
        unsigned PWM6CS1                :1;
        unsigned PWM6CS2                :1;
        unsigned                        :1;
        unsigned PWM6PS0                :1;
        unsigned PWM6PS1                :1;
        unsigned PWM6PS2                :1;
    };
    struct {
        unsigned PWM6CS                 :3;
        unsigned                        :1;
        unsigned PWM6PS                 :3;
    };
    struct {
        unsigned CS0                    :1;
        unsigned CS1                    :1;
        unsigned CS2                    :1;
        unsigned                        :1;
        unsigned PS0                    :1;
        unsigned PS1                    :1;
        unsigned PS2                    :1;
    };
} PWM6CLKCONbits_t;
extern volatile PWM6CLKCONbits_t PWM6CLKCONbits __at(0xDAE);
// bitfield macros
#define _PWM6CLKCON_CS_POSN                                 0x0
#define _PWM6CLKCON_CS_POSITION                             0x0
#define _PWM6CLKCON_CS_SIZE                                 0x2
#define _PWM6CLKCON_CS_LENGTH                               0x2
#define _PWM6CLKCON_CS_MASK                                 0x3
#define _PWM6CLKCON_PS_POSN                                 0x4
#define _PWM6CLKCON_PS_POSITION                             0x4
#define _PWM6CLKCON_PS_SIZE                                 0x3
#define _PWM6CLKCON_PS_LENGTH                               0x3
#define _PWM6CLKCON_PS_MASK                                 0x70
#define _PWM6CLKCON_PWM6CS0_POSN                            0x0
#define _PWM6CLKCON_PWM6CS0_POSITION                        0x0
#define _PWM6CLKCON_PWM6CS0_SIZE                            0x1
#define _PWM6CLKCON_PWM6CS0_LENGTH                          0x1
#define _PWM6CLKCON_PWM6CS0_MASK                            0x1
#define _PWM6CLKCON_PWM6CS1_POSN                            0x1
#define _PWM6CLKCON_PWM6CS1_POSITION                        0x1
#define _PWM6CLKCON_PWM6CS1_SIZE                            0x1
#define _PWM6CLKCON_PWM6CS1_LENGTH                          0x1
#define _PWM6CLKCON_PWM6CS1_MASK                            0x2
#define _PWM6CLKCON_PWM6CS2_POSN                            0x2
#define _PWM6CLKCON_PWM6CS2_POSITION                        0x2
#define _PWM6CLKCON_PWM6CS2_SIZE                            0x1
#define _PWM6CLKCON_PWM6CS2_LENGTH                          0x1
#define _PWM6CLKCON_PWM6CS2_MASK                            0x4
#define _PWM6CLKCON_PWM6PS0_POSN                            0x4
#define _PWM6CLKCON_PWM6PS0_POSITION                        0x4
#define _PWM6CLKCON_PWM6PS0_SIZE                            0x1
#define _PWM6CLKCON_PWM6PS0_LENGTH                          0x1
#define _PWM6CLKCON_PWM6PS0_MASK                            0x10
#define _PWM6CLKCON_PWM6PS1_POSN                            0x5
#define _PWM6CLKCON_PWM6PS1_POSITION                        0x5
#define _PWM6CLKCON_PWM6PS1_SIZE                            0x1
#define _PWM6CLKCON_PWM6PS1_LENGTH                          0x1
#define _PWM6CLKCON_PWM6PS1_MASK                            0x20
#define _PWM6CLKCON_PWM6PS2_POSN                            0x6
#define _PWM6CLKCON_PWM6PS2_POSITION                        0x6
#define _PWM6CLKCON_PWM6PS2_SIZE                            0x1
#define _PWM6CLKCON_PWM6PS2_LENGTH                          0x1
#define _PWM6CLKCON_PWM6PS2_MASK                            0x40
#define _PWM6CLKCON_PWM6CS_POSN                             0x0
#define _PWM6CLKCON_PWM6CS_POSITION                         0x0
#define _PWM6CLKCON_PWM6CS_SIZE                             0x3
#define _PWM6CLKCON_PWM6CS_LENGTH                           0x3
#define _PWM6CLKCON_PWM6CS_MASK                             0x7
#define _PWM6CLKCON_PWM6PS_POSN                             0x4
#define _PWM6CLKCON_PWM6PS_POSITION                         0x4
#define _PWM6CLKCON_PWM6PS_SIZE                             0x3
#define _PWM6CLKCON_PWM6PS_LENGTH                           0x3
#define _PWM6CLKCON_PWM6PS_MASK                             0x70
#define _PWM6CLKCON_CS0_POSN                                0x0
#define _PWM6CLKCON_CS0_POSITION                            0x0
#define _PWM6CLKCON_CS0_SIZE                                0x1
#define _PWM6CLKCON_CS0_LENGTH                              0x1
#define _PWM6CLKCON_CS0_MASK                                0x1
#define _PWM6CLKCON_CS1_POSN                                0x1
#define _PWM6CLKCON_CS1_POSITION                            0x1
#define _PWM6CLKCON_CS1_SIZE                                0x1
#define _PWM6CLKCON_CS1_LENGTH                              0x1
#define _PWM6CLKCON_CS1_MASK                                0x2
#define _PWM6CLKCON_CS2_POSN                                0x2
#define _PWM6CLKCON_CS2_POSITION                            0x2
#define _PWM6CLKCON_CS2_SIZE                                0x1
#define _PWM6CLKCON_CS2_LENGTH                              0x1
#define _PWM6CLKCON_CS2_MASK                                0x4
#define _PWM6CLKCON_PS0_POSN                                0x4
#define _PWM6CLKCON_PS0_POSITION                            0x4
#define _PWM6CLKCON_PS0_SIZE                                0x1
#define _PWM6CLKCON_PS0_LENGTH                              0x1
#define _PWM6CLKCON_PS0_MASK                                0x10
#define _PWM6CLKCON_PS1_POSN                                0x5
#define _PWM6CLKCON_PS1_POSITION                            0x5
#define _PWM6CLKCON_PS1_SIZE                                0x1
#define _PWM6CLKCON_PS1_LENGTH                              0x1
#define _PWM6CLKCON_PS1_MASK                                0x20
#define _PWM6CLKCON_PS2_POSN                                0x6
#define _PWM6CLKCON_PS2_POSITION                            0x6
#define _PWM6CLKCON_PS2_SIZE                                0x1
#define _PWM6CLKCON_PS2_LENGTH                              0x1
#define _PWM6CLKCON_PS2_MASK                                0x40

// Register: PWM6LDCON
#define PWM6LDCON PWM6LDCON
extern volatile unsigned char           PWM6LDCON           __at(0xDAF);
#ifndef _LIB_BUILD
asm("PWM6LDCON equ 0DAFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LDS                    :2;
        unsigned                        :4;
        unsigned LDT                    :1;
        unsigned LDA                    :1;
    };
    struct {
        unsigned PWM6LDS0               :1;
        unsigned PWM6LDS1               :1;
    };
    struct {
        unsigned PWM6LDS                :2;
        unsigned                        :4;
        unsigned PWM6LDM                :1;
        unsigned PWM6LD                 :1;
    };
    struct {
        unsigned LDS0                   :1;
        unsigned LDS1                   :1;
    };
} PWM6LDCONbits_t;
extern volatile PWM6LDCONbits_t PWM6LDCONbits __at(0xDAF);
// bitfield macros
#define _PWM6LDCON_LDS_POSN                                 0x0
#define _PWM6LDCON_LDS_POSITION                             0x0
#define _PWM6LDCON_LDS_SIZE                                 0x2
#define _PWM6LDCON_LDS_LENGTH                               0x2
#define _PWM6LDCON_LDS_MASK                                 0x3
#define _PWM6LDCON_LDT_POSN                                 0x6
#define _PWM6LDCON_LDT_POSITION                             0x6
#define _PWM6LDCON_LDT_SIZE                                 0x1
#define _PWM6LDCON_LDT_LENGTH                               0x1
#define _PWM6LDCON_LDT_MASK                                 0x40
#define _PWM6LDCON_LDA_POSN                                 0x7
#define _PWM6LDCON_LDA_POSITION                             0x7
#define _PWM6LDCON_LDA_SIZE                                 0x1
#define _PWM6LDCON_LDA_LENGTH                               0x1
#define _PWM6LDCON_LDA_MASK                                 0x80
#define _PWM6LDCON_PWM6LDS0_POSN                            0x0
#define _PWM6LDCON_PWM6LDS0_POSITION                        0x0
#define _PWM6LDCON_PWM6LDS0_SIZE                            0x1
#define _PWM6LDCON_PWM6LDS0_LENGTH                          0x1
#define _PWM6LDCON_PWM6LDS0_MASK                            0x1
#define _PWM6LDCON_PWM6LDS1_POSN                            0x1
#define _PWM6LDCON_PWM6LDS1_POSITION                        0x1
#define _PWM6LDCON_PWM6LDS1_SIZE                            0x1
#define _PWM6LDCON_PWM6LDS1_LENGTH                          0x1
#define _PWM6LDCON_PWM6LDS1_MASK                            0x2
#define _PWM6LDCON_PWM6LDS_POSN                             0x0
#define _PWM6LDCON_PWM6LDS_POSITION                         0x0
#define _PWM6LDCON_PWM6LDS_SIZE                             0x2
#define _PWM6LDCON_PWM6LDS_LENGTH                           0x2
#define _PWM6LDCON_PWM6LDS_MASK                             0x3
#define _PWM6LDCON_PWM6LDM_POSN                             0x6
#define _PWM6LDCON_PWM6LDM_POSITION                         0x6
#define _PWM6LDCON_PWM6LDM_SIZE                             0x1
#define _PWM6LDCON_PWM6LDM_LENGTH                           0x1
#define _PWM6LDCON_PWM6LDM_MASK                             0x40
#define _PWM6LDCON_PWM6LD_POSN                              0x7
#define _PWM6LDCON_PWM6LD_POSITION                          0x7
#define _PWM6LDCON_PWM6LD_SIZE                              0x1
#define _PWM6LDCON_PWM6LD_LENGTH                            0x1
#define _PWM6LDCON_PWM6LD_MASK                              0x80
#define _PWM6LDCON_LDS0_POSN                                0x0
#define _PWM6LDCON_LDS0_POSITION                            0x0
#define _PWM6LDCON_LDS0_SIZE                                0x1
#define _PWM6LDCON_LDS0_LENGTH                              0x1
#define _PWM6LDCON_LDS0_MASK                                0x1
#define _PWM6LDCON_LDS1_POSN                                0x1
#define _PWM6LDCON_LDS1_POSITION                            0x1
#define _PWM6LDCON_LDS1_SIZE                                0x1
#define _PWM6LDCON_LDS1_LENGTH                              0x1
#define _PWM6LDCON_LDS1_MASK                                0x2

// Register: PWM6OFCON
#define PWM6OFCON PWM6OFCON
extern volatile unsigned char           PWM6OFCON           __at(0xDB0);
#ifndef _LIB_BUILD
asm("PWM6OFCON equ 0DB0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OFS                    :2;
        unsigned                        :2;
        unsigned OFO                    :1;
        unsigned OFM                    :2;
    };
    struct {
        unsigned PWM6OFS0               :1;
        unsigned PWM6OFS1               :1;
        unsigned                        :3;
        unsigned PWM6OFM0               :1;
        unsigned PWM6OFM1               :1;
    };
    struct {
        unsigned PWM6OFS                :2;
        unsigned                        :2;
        unsigned PWM6OFMC               :1;
        unsigned PWM6OFM                :2;
    };
    struct {
        unsigned OFS0                   :1;
        unsigned OFS1                   :1;
        unsigned                        :3;
        unsigned OFM0                   :1;
        unsigned OFM1                   :1;
    };
} PWM6OFCONbits_t;
extern volatile PWM6OFCONbits_t PWM6OFCONbits __at(0xDB0);
// bitfield macros
#define _PWM6OFCON_OFS_POSN                                 0x0
#define _PWM6OFCON_OFS_POSITION                             0x0
#define _PWM6OFCON_OFS_SIZE                                 0x2
#define _PWM6OFCON_OFS_LENGTH                               0x2
#define _PWM6OFCON_OFS_MASK                                 0x3
#define _PWM6OFCON_OFO_POSN                                 0x4
#define _PWM6OFCON_OFO_POSITION                             0x4
#define _PWM6OFCON_OFO_SIZE                                 0x1
#define _PWM6OFCON_OFO_LENGTH                               0x1
#define _PWM6OFCON_OFO_MASK                                 0x10
#define _PWM6OFCON_OFM_POSN                                 0x5
#define _PWM6OFCON_OFM_POSITION                             0x5
#define _PWM6OFCON_OFM_SIZE                                 0x2
#define _PWM6OFCON_OFM_LENGTH                               0x2
#define _PWM6OFCON_OFM_MASK                                 0x60
#define _PWM6OFCON_PWM6OFS0_POSN                            0x0
#define _PWM6OFCON_PWM6OFS0_POSITION                        0x0
#define _PWM6OFCON_PWM6OFS0_SIZE                            0x1
#define _PWM6OFCON_PWM6OFS0_LENGTH                          0x1
#define _PWM6OFCON_PWM6OFS0_MASK                            0x1
#define _PWM6OFCON_PWM6OFS1_POSN                            0x1
#define _PWM6OFCON_PWM6OFS1_POSITION                        0x1
#define _PWM6OFCON_PWM6OFS1_SIZE                            0x1
#define _PWM6OFCON_PWM6OFS1_LENGTH                          0x1
#define _PWM6OFCON_PWM6OFS1_MASK                            0x2
#define _PWM6OFCON_PWM6OFM0_POSN                            0x5
#define _PWM6OFCON_PWM6OFM0_POSITION                        0x5
#define _PWM6OFCON_PWM6OFM0_SIZE                            0x1
#define _PWM6OFCON_PWM6OFM0_LENGTH                          0x1
#define _PWM6OFCON_PWM6OFM0_MASK                            0x20
#define _PWM6OFCON_PWM6OFM1_POSN                            0x6
#define _PWM6OFCON_PWM6OFM1_POSITION                        0x6
#define _PWM6OFCON_PWM6OFM1_SIZE                            0x1
#define _PWM6OFCON_PWM6OFM1_LENGTH                          0x1
#define _PWM6OFCON_PWM6OFM1_MASK                            0x40
#define _PWM6OFCON_PWM6OFS_POSN                             0x0
#define _PWM6OFCON_PWM6OFS_POSITION                         0x0
#define _PWM6OFCON_PWM6OFS_SIZE                             0x2
#define _PWM6OFCON_PWM6OFS_LENGTH                           0x2
#define _PWM6OFCON_PWM6OFS_MASK                             0x3
#define _PWM6OFCON_PWM6OFMC_POSN                            0x4
#define _PWM6OFCON_PWM6OFMC_POSITION                        0x4
#define _PWM6OFCON_PWM6OFMC_SIZE                            0x1
#define _PWM6OFCON_PWM6OFMC_LENGTH                          0x1
#define _PWM6OFCON_PWM6OFMC_MASK                            0x10
#define _PWM6OFCON_PWM6OFM_POSN                             0x5
#define _PWM6OFCON_PWM6OFM_POSITION                         0x5
#define _PWM6OFCON_PWM6OFM_SIZE                             0x2
#define _PWM6OFCON_PWM6OFM_LENGTH                           0x2
#define _PWM6OFCON_PWM6OFM_MASK                             0x60
#define _PWM6OFCON_OFS0_POSN                                0x0
#define _PWM6OFCON_OFS0_POSITION                            0x0
#define _PWM6OFCON_OFS0_SIZE                                0x1
#define _PWM6OFCON_OFS0_LENGTH                              0x1
#define _PWM6OFCON_OFS0_MASK                                0x1
#define _PWM6OFCON_OFS1_POSN                                0x1
#define _PWM6OFCON_OFS1_POSITION                            0x1
#define _PWM6OFCON_OFS1_SIZE                                0x1
#define _PWM6OFCON_OFS1_LENGTH                              0x1
#define _PWM6OFCON_OFS1_MASK                                0x2
#define _PWM6OFCON_OFM0_POSN                                0x5
#define _PWM6OFCON_OFM0_POSITION                            0x5
#define _PWM6OFCON_OFM0_SIZE                                0x1
#define _PWM6OFCON_OFM0_LENGTH                              0x1
#define _PWM6OFCON_OFM0_MASK                                0x20
#define _PWM6OFCON_OFM1_POSN                                0x6
#define _PWM6OFCON_OFM1_POSITION                            0x6
#define _PWM6OFCON_OFM1_SIZE                                0x1
#define _PWM6OFCON_OFM1_LENGTH                              0x1
#define _PWM6OFCON_OFM1_MASK                                0x40

// Register: PWM11PH
#define PWM11PH PWM11PH
extern volatile unsigned short          PWM11PH             __at(0xDB1);
#ifndef _LIB_BUILD
asm("PWM11PH equ 0DB1h");
#endif

// Register: PWM11PHL
#define PWM11PHL PWM11PHL
extern volatile unsigned char           PWM11PHL            __at(0xDB1);
#ifndef _LIB_BUILD
asm("PWM11PHL equ 0DB1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PH                     :8;
    };
    struct {
        unsigned PWM11PHL0              :1;
        unsigned PWM11PHL1              :1;
        unsigned PWM11PHL2              :1;
        unsigned PWM11PHL3              :1;
        unsigned PWM11PHL4              :1;
        unsigned PWM11PHL5              :1;
        unsigned PWM11PHL6              :1;
        unsigned PWM11PHL7              :1;
    };
    struct {
        unsigned PWM11PHL               :8;
    };
} PWM11PHLbits_t;
extern volatile PWM11PHLbits_t PWM11PHLbits __at(0xDB1);
// bitfield macros
#define _PWM11PHL_PH_POSN                                   0x0
#define _PWM11PHL_PH_POSITION                               0x0
#define _PWM11PHL_PH_SIZE                                   0x8
#define _PWM11PHL_PH_LENGTH                                 0x8
#define _PWM11PHL_PH_MASK                                   0xFF
#define _PWM11PHL_PWM11PHL0_POSN                            0x0
#define _PWM11PHL_PWM11PHL0_POSITION                        0x0
#define _PWM11PHL_PWM11PHL0_SIZE                            0x1
#define _PWM11PHL_PWM11PHL0_LENGTH                          0x1
#define _PWM11PHL_PWM11PHL0_MASK                            0x1
#define _PWM11PHL_PWM11PHL1_POSN                            0x1
#define _PWM11PHL_PWM11PHL1_POSITION                        0x1
#define _PWM11PHL_PWM11PHL1_SIZE                            0x1
#define _PWM11PHL_PWM11PHL1_LENGTH                          0x1
#define _PWM11PHL_PWM11PHL1_MASK                            0x2
#define _PWM11PHL_PWM11PHL2_POSN                            0x2
#define _PWM11PHL_PWM11PHL2_POSITION                        0x2
#define _PWM11PHL_PWM11PHL2_SIZE                            0x1
#define _PWM11PHL_PWM11PHL2_LENGTH                          0x1
#define _PWM11PHL_PWM11PHL2_MASK                            0x4
#define _PWM11PHL_PWM11PHL3_POSN                            0x3
#define _PWM11PHL_PWM11PHL3_POSITION                        0x3
#define _PWM11PHL_PWM11PHL3_SIZE                            0x1
#define _PWM11PHL_PWM11PHL3_LENGTH                          0x1
#define _PWM11PHL_PWM11PHL3_MASK                            0x8
#define _PWM11PHL_PWM11PHL4_POSN                            0x4
#define _PWM11PHL_PWM11PHL4_POSITION                        0x4
#define _PWM11PHL_PWM11PHL4_SIZE                            0x1
#define _PWM11PHL_PWM11PHL4_LENGTH                          0x1
#define _PWM11PHL_PWM11PHL4_MASK                            0x10
#define _PWM11PHL_PWM11PHL5_POSN                            0x5
#define _PWM11PHL_PWM11PHL5_POSITION                        0x5
#define _PWM11PHL_PWM11PHL5_SIZE                            0x1
#define _PWM11PHL_PWM11PHL5_LENGTH                          0x1
#define _PWM11PHL_PWM11PHL5_MASK                            0x20
#define _PWM11PHL_PWM11PHL6_POSN                            0x6
#define _PWM11PHL_PWM11PHL6_POSITION                        0x6
#define _PWM11PHL_PWM11PHL6_SIZE                            0x1
#define _PWM11PHL_PWM11PHL6_LENGTH                          0x1
#define _PWM11PHL_PWM11PHL6_MASK                            0x40
#define _PWM11PHL_PWM11PHL7_POSN                            0x7
#define _PWM11PHL_PWM11PHL7_POSITION                        0x7
#define _PWM11PHL_PWM11PHL7_SIZE                            0x1
#define _PWM11PHL_PWM11PHL7_LENGTH                          0x1
#define _PWM11PHL_PWM11PHL7_MASK                            0x80
#define _PWM11PHL_PWM11PHL_POSN                             0x0
#define _PWM11PHL_PWM11PHL_POSITION                         0x0
#define _PWM11PHL_PWM11PHL_SIZE                             0x8
#define _PWM11PHL_PWM11PHL_LENGTH                           0x8
#define _PWM11PHL_PWM11PHL_MASK                             0xFF

// Register: PWM11PHH
#define PWM11PHH PWM11PHH
extern volatile unsigned char           PWM11PHH            __at(0xDB2);
#ifndef _LIB_BUILD
asm("PWM11PHH equ 0DB2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PH                     :8;
    };
    struct {
        unsigned PWM11PHH0              :1;
        unsigned PWM11PHH1              :1;
        unsigned PWM11PHH2              :1;
        unsigned PWM11PHH3              :1;
        unsigned PWM11PHH4              :1;
        unsigned PWM11PHH5              :1;
        unsigned PWM11PHH6              :1;
        unsigned PWM11PHH7              :1;
    };
    struct {
        unsigned PWM11PHH               :8;
    };
} PWM11PHHbits_t;
extern volatile PWM11PHHbits_t PWM11PHHbits __at(0xDB2);
// bitfield macros
#define _PWM11PHH_PH_POSN                                   0x0
#define _PWM11PHH_PH_POSITION                               0x0
#define _PWM11PHH_PH_SIZE                                   0x8
#define _PWM11PHH_PH_LENGTH                                 0x8
#define _PWM11PHH_PH_MASK                                   0xFF
#define _PWM11PHH_PWM11PHH0_POSN                            0x0
#define _PWM11PHH_PWM11PHH0_POSITION                        0x0
#define _PWM11PHH_PWM11PHH0_SIZE                            0x1
#define _PWM11PHH_PWM11PHH0_LENGTH                          0x1
#define _PWM11PHH_PWM11PHH0_MASK                            0x1
#define _PWM11PHH_PWM11PHH1_POSN                            0x1
#define _PWM11PHH_PWM11PHH1_POSITION                        0x1
#define _PWM11PHH_PWM11PHH1_SIZE                            0x1
#define _PWM11PHH_PWM11PHH1_LENGTH                          0x1
#define _PWM11PHH_PWM11PHH1_MASK                            0x2
#define _PWM11PHH_PWM11PHH2_POSN                            0x2
#define _PWM11PHH_PWM11PHH2_POSITION                        0x2
#define _PWM11PHH_PWM11PHH2_SIZE                            0x1
#define _PWM11PHH_PWM11PHH2_LENGTH                          0x1
#define _PWM11PHH_PWM11PHH2_MASK                            0x4
#define _PWM11PHH_PWM11PHH3_POSN                            0x3
#define _PWM11PHH_PWM11PHH3_POSITION                        0x3
#define _PWM11PHH_PWM11PHH3_SIZE                            0x1
#define _PWM11PHH_PWM11PHH3_LENGTH                          0x1
#define _PWM11PHH_PWM11PHH3_MASK                            0x8
#define _PWM11PHH_PWM11PHH4_POSN                            0x4
#define _PWM11PHH_PWM11PHH4_POSITION                        0x4
#define _PWM11PHH_PWM11PHH4_SIZE                            0x1
#define _PWM11PHH_PWM11PHH4_LENGTH                          0x1
#define _PWM11PHH_PWM11PHH4_MASK                            0x10
#define _PWM11PHH_PWM11PHH5_POSN                            0x5
#define _PWM11PHH_PWM11PHH5_POSITION                        0x5
#define _PWM11PHH_PWM11PHH5_SIZE                            0x1
#define _PWM11PHH_PWM11PHH5_LENGTH                          0x1
#define _PWM11PHH_PWM11PHH5_MASK                            0x20
#define _PWM11PHH_PWM11PHH6_POSN                            0x6
#define _PWM11PHH_PWM11PHH6_POSITION                        0x6
#define _PWM11PHH_PWM11PHH6_SIZE                            0x1
#define _PWM11PHH_PWM11PHH6_LENGTH                          0x1
#define _PWM11PHH_PWM11PHH6_MASK                            0x40
#define _PWM11PHH_PWM11PHH7_POSN                            0x7
#define _PWM11PHH_PWM11PHH7_POSITION                        0x7
#define _PWM11PHH_PWM11PHH7_SIZE                            0x1
#define _PWM11PHH_PWM11PHH7_LENGTH                          0x1
#define _PWM11PHH_PWM11PHH7_MASK                            0x80
#define _PWM11PHH_PWM11PHH_POSN                             0x0
#define _PWM11PHH_PWM11PHH_POSITION                         0x0
#define _PWM11PHH_PWM11PHH_SIZE                             0x8
#define _PWM11PHH_PWM11PHH_LENGTH                           0x8
#define _PWM11PHH_PWM11PHH_MASK                             0xFF

// Register: PWM11DC
#define PWM11DC PWM11DC
extern volatile unsigned short          PWM11DC             __at(0xDB3);
#ifndef _LIB_BUILD
asm("PWM11DC equ 0DB3h");
#endif

// Register: PWM11DCL
#define PWM11DCL PWM11DCL
extern volatile unsigned char           PWM11DCL            __at(0xDB3);
#ifndef _LIB_BUILD
asm("PWM11DCL equ 0DB3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned PWM11DCL0              :1;
        unsigned PWM11DCL1              :1;
        unsigned PWM11DCL2              :1;
        unsigned PWM11DCL3              :1;
        unsigned PWM11DCL4              :1;
        unsigned PWM11DCL5              :1;
        unsigned PWM11DCL6              :1;
        unsigned PWM11DCL7              :1;
    };
    struct {
        unsigned PWM11DCL               :8;
    };
} PWM11DCLbits_t;
extern volatile PWM11DCLbits_t PWM11DCLbits __at(0xDB3);
// bitfield macros
#define _PWM11DCL_DC_POSN                                   0x0
#define _PWM11DCL_DC_POSITION                               0x0
#define _PWM11DCL_DC_SIZE                                   0x8
#define _PWM11DCL_DC_LENGTH                                 0x8
#define _PWM11DCL_DC_MASK                                   0xFF
#define _PWM11DCL_PWM11DCL0_POSN                            0x0
#define _PWM11DCL_PWM11DCL0_POSITION                        0x0
#define _PWM11DCL_PWM11DCL0_SIZE                            0x1
#define _PWM11DCL_PWM11DCL0_LENGTH                          0x1
#define _PWM11DCL_PWM11DCL0_MASK                            0x1
#define _PWM11DCL_PWM11DCL1_POSN                            0x1
#define _PWM11DCL_PWM11DCL1_POSITION                        0x1
#define _PWM11DCL_PWM11DCL1_SIZE                            0x1
#define _PWM11DCL_PWM11DCL1_LENGTH                          0x1
#define _PWM11DCL_PWM11DCL1_MASK                            0x2
#define _PWM11DCL_PWM11DCL2_POSN                            0x2
#define _PWM11DCL_PWM11DCL2_POSITION                        0x2
#define _PWM11DCL_PWM11DCL2_SIZE                            0x1
#define _PWM11DCL_PWM11DCL2_LENGTH                          0x1
#define _PWM11DCL_PWM11DCL2_MASK                            0x4
#define _PWM11DCL_PWM11DCL3_POSN                            0x3
#define _PWM11DCL_PWM11DCL3_POSITION                        0x3
#define _PWM11DCL_PWM11DCL3_SIZE                            0x1
#define _PWM11DCL_PWM11DCL3_LENGTH                          0x1
#define _PWM11DCL_PWM11DCL3_MASK                            0x8
#define _PWM11DCL_PWM11DCL4_POSN                            0x4
#define _PWM11DCL_PWM11DCL4_POSITION                        0x4
#define _PWM11DCL_PWM11DCL4_SIZE                            0x1
#define _PWM11DCL_PWM11DCL4_LENGTH                          0x1
#define _PWM11DCL_PWM11DCL4_MASK                            0x10
#define _PWM11DCL_PWM11DCL5_POSN                            0x5
#define _PWM11DCL_PWM11DCL5_POSITION                        0x5
#define _PWM11DCL_PWM11DCL5_SIZE                            0x1
#define _PWM11DCL_PWM11DCL5_LENGTH                          0x1
#define _PWM11DCL_PWM11DCL5_MASK                            0x20
#define _PWM11DCL_PWM11DCL6_POSN                            0x6
#define _PWM11DCL_PWM11DCL6_POSITION                        0x6
#define _PWM11DCL_PWM11DCL6_SIZE                            0x1
#define _PWM11DCL_PWM11DCL6_LENGTH                          0x1
#define _PWM11DCL_PWM11DCL6_MASK                            0x40
#define _PWM11DCL_PWM11DCL7_POSN                            0x7
#define _PWM11DCL_PWM11DCL7_POSITION                        0x7
#define _PWM11DCL_PWM11DCL7_SIZE                            0x1
#define _PWM11DCL_PWM11DCL7_LENGTH                          0x1
#define _PWM11DCL_PWM11DCL7_MASK                            0x80
#define _PWM11DCL_PWM11DCL_POSN                             0x0
#define _PWM11DCL_PWM11DCL_POSITION                         0x0
#define _PWM11DCL_PWM11DCL_SIZE                             0x8
#define _PWM11DCL_PWM11DCL_LENGTH                           0x8
#define _PWM11DCL_PWM11DCL_MASK                             0xFF

// Register: PWM11DCH
#define PWM11DCH PWM11DCH
extern volatile unsigned char           PWM11DCH            __at(0xDB4);
#ifndef _LIB_BUILD
asm("PWM11DCH equ 0DB4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned PWM11DCH0              :1;
        unsigned PWM11DCH1              :1;
        unsigned PWM11DCH2              :1;
        unsigned PWM11DCH3              :1;
        unsigned PWM11DCH4              :1;
        unsigned PWM11DCH5              :1;
        unsigned PWM11DCH6              :1;
        unsigned PWM11DCH7              :1;
    };
    struct {
        unsigned PWM11DCH               :8;
    };
} PWM11DCHbits_t;
extern volatile PWM11DCHbits_t PWM11DCHbits __at(0xDB4);
// bitfield macros
#define _PWM11DCH_DC_POSN                                   0x0
#define _PWM11DCH_DC_POSITION                               0x0
#define _PWM11DCH_DC_SIZE                                   0x8
#define _PWM11DCH_DC_LENGTH                                 0x8
#define _PWM11DCH_DC_MASK                                   0xFF
#define _PWM11DCH_PWM11DCH0_POSN                            0x0
#define _PWM11DCH_PWM11DCH0_POSITION                        0x0
#define _PWM11DCH_PWM11DCH0_SIZE                            0x1
#define _PWM11DCH_PWM11DCH0_LENGTH                          0x1
#define _PWM11DCH_PWM11DCH0_MASK                            0x1
#define _PWM11DCH_PWM11DCH1_POSN                            0x1
#define _PWM11DCH_PWM11DCH1_POSITION                        0x1
#define _PWM11DCH_PWM11DCH1_SIZE                            0x1
#define _PWM11DCH_PWM11DCH1_LENGTH                          0x1
#define _PWM11DCH_PWM11DCH1_MASK                            0x2
#define _PWM11DCH_PWM11DCH2_POSN                            0x2
#define _PWM11DCH_PWM11DCH2_POSITION                        0x2
#define _PWM11DCH_PWM11DCH2_SIZE                            0x1
#define _PWM11DCH_PWM11DCH2_LENGTH                          0x1
#define _PWM11DCH_PWM11DCH2_MASK                            0x4
#define _PWM11DCH_PWM11DCH3_POSN                            0x3
#define _PWM11DCH_PWM11DCH3_POSITION                        0x3
#define _PWM11DCH_PWM11DCH3_SIZE                            0x1
#define _PWM11DCH_PWM11DCH3_LENGTH                          0x1
#define _PWM11DCH_PWM11DCH3_MASK                            0x8
#define _PWM11DCH_PWM11DCH4_POSN                            0x4
#define _PWM11DCH_PWM11DCH4_POSITION                        0x4
#define _PWM11DCH_PWM11DCH4_SIZE                            0x1
#define _PWM11DCH_PWM11DCH4_LENGTH                          0x1
#define _PWM11DCH_PWM11DCH4_MASK                            0x10
#define _PWM11DCH_PWM11DCH5_POSN                            0x5
#define _PWM11DCH_PWM11DCH5_POSITION                        0x5
#define _PWM11DCH_PWM11DCH5_SIZE                            0x1
#define _PWM11DCH_PWM11DCH5_LENGTH                          0x1
#define _PWM11DCH_PWM11DCH5_MASK                            0x20
#define _PWM11DCH_PWM11DCH6_POSN                            0x6
#define _PWM11DCH_PWM11DCH6_POSITION                        0x6
#define _PWM11DCH_PWM11DCH6_SIZE                            0x1
#define _PWM11DCH_PWM11DCH6_LENGTH                          0x1
#define _PWM11DCH_PWM11DCH6_MASK                            0x40
#define _PWM11DCH_PWM11DCH7_POSN                            0x7
#define _PWM11DCH_PWM11DCH7_POSITION                        0x7
#define _PWM11DCH_PWM11DCH7_SIZE                            0x1
#define _PWM11DCH_PWM11DCH7_LENGTH                          0x1
#define _PWM11DCH_PWM11DCH7_MASK                            0x80
#define _PWM11DCH_PWM11DCH_POSN                             0x0
#define _PWM11DCH_PWM11DCH_POSITION                         0x0
#define _PWM11DCH_PWM11DCH_SIZE                             0x8
#define _PWM11DCH_PWM11DCH_LENGTH                           0x8
#define _PWM11DCH_PWM11DCH_MASK                             0xFF

// Register: PWM11PR
#define PWM11PR PWM11PR
extern volatile unsigned short          PWM11PR             __at(0xDB5);
#ifndef _LIB_BUILD
asm("PWM11PR equ 0DB5h");
#endif

// Register: PWM11PRL
#define PWM11PRL PWM11PRL
extern volatile unsigned char           PWM11PRL            __at(0xDB5);
#ifndef _LIB_BUILD
asm("PWM11PRL equ 0DB5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned PWM11PRL0              :1;
        unsigned PWM11PRL1              :1;
        unsigned PWM11PRL2              :1;
        unsigned PWM11PRL3              :1;
        unsigned PWM11PRL4              :1;
        unsigned PWM11PRL5              :1;
        unsigned PWM11PRL6              :1;
        unsigned PWM11PRL7              :1;
    };
    struct {
        unsigned PWM11PRL               :8;
    };
} PWM11PRLbits_t;
extern volatile PWM11PRLbits_t PWM11PRLbits __at(0xDB5);
// bitfield macros
#define _PWM11PRL_PR_POSN                                   0x0
#define _PWM11PRL_PR_POSITION                               0x0
#define _PWM11PRL_PR_SIZE                                   0x8
#define _PWM11PRL_PR_LENGTH                                 0x8
#define _PWM11PRL_PR_MASK                                   0xFF
#define _PWM11PRL_PWM11PRL0_POSN                            0x0
#define _PWM11PRL_PWM11PRL0_POSITION                        0x0
#define _PWM11PRL_PWM11PRL0_SIZE                            0x1
#define _PWM11PRL_PWM11PRL0_LENGTH                          0x1
#define _PWM11PRL_PWM11PRL0_MASK                            0x1
#define _PWM11PRL_PWM11PRL1_POSN                            0x1
#define _PWM11PRL_PWM11PRL1_POSITION                        0x1
#define _PWM11PRL_PWM11PRL1_SIZE                            0x1
#define _PWM11PRL_PWM11PRL1_LENGTH                          0x1
#define _PWM11PRL_PWM11PRL1_MASK                            0x2
#define _PWM11PRL_PWM11PRL2_POSN                            0x2
#define _PWM11PRL_PWM11PRL2_POSITION                        0x2
#define _PWM11PRL_PWM11PRL2_SIZE                            0x1
#define _PWM11PRL_PWM11PRL2_LENGTH                          0x1
#define _PWM11PRL_PWM11PRL2_MASK                            0x4
#define _PWM11PRL_PWM11PRL3_POSN                            0x3
#define _PWM11PRL_PWM11PRL3_POSITION                        0x3
#define _PWM11PRL_PWM11PRL3_SIZE                            0x1
#define _PWM11PRL_PWM11PRL3_LENGTH                          0x1
#define _PWM11PRL_PWM11PRL3_MASK                            0x8
#define _PWM11PRL_PWM11PRL4_POSN                            0x4
#define _PWM11PRL_PWM11PRL4_POSITION                        0x4
#define _PWM11PRL_PWM11PRL4_SIZE                            0x1
#define _PWM11PRL_PWM11PRL4_LENGTH                          0x1
#define _PWM11PRL_PWM11PRL4_MASK                            0x10
#define _PWM11PRL_PWM11PRL5_POSN                            0x5
#define _PWM11PRL_PWM11PRL5_POSITION                        0x5
#define _PWM11PRL_PWM11PRL5_SIZE                            0x1
#define _PWM11PRL_PWM11PRL5_LENGTH                          0x1
#define _PWM11PRL_PWM11PRL5_MASK                            0x20
#define _PWM11PRL_PWM11PRL6_POSN                            0x6
#define _PWM11PRL_PWM11PRL6_POSITION                        0x6
#define _PWM11PRL_PWM11PRL6_SIZE                            0x1
#define _PWM11PRL_PWM11PRL6_LENGTH                          0x1
#define _PWM11PRL_PWM11PRL6_MASK                            0x40
#define _PWM11PRL_PWM11PRL7_POSN                            0x7
#define _PWM11PRL_PWM11PRL7_POSITION                        0x7
#define _PWM11PRL_PWM11PRL7_SIZE                            0x1
#define _PWM11PRL_PWM11PRL7_LENGTH                          0x1
#define _PWM11PRL_PWM11PRL7_MASK                            0x80
#define _PWM11PRL_PWM11PRL_POSN                             0x0
#define _PWM11PRL_PWM11PRL_POSITION                         0x0
#define _PWM11PRL_PWM11PRL_SIZE                             0x8
#define _PWM11PRL_PWM11PRL_LENGTH                           0x8
#define _PWM11PRL_PWM11PRL_MASK                             0xFF

// Register: PWM11PRH
#define PWM11PRH PWM11PRH
extern volatile unsigned char           PWM11PRH            __at(0xDB6);
#ifndef _LIB_BUILD
asm("PWM11PRH equ 0DB6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned PWM11PRH0              :1;
        unsigned PWM11PRH1              :1;
        unsigned PWM11PRH2              :1;
        unsigned PWM11PRH3              :1;
        unsigned PWM11PRH4              :1;
        unsigned PWM11PRH5              :1;
        unsigned PWM11PRH6              :1;
        unsigned PWM11PRH7              :1;
    };
    struct {
        unsigned PWM11PRH               :8;
    };
} PWM11PRHbits_t;
extern volatile PWM11PRHbits_t PWM11PRHbits __at(0xDB6);
// bitfield macros
#define _PWM11PRH_PR_POSN                                   0x0
#define _PWM11PRH_PR_POSITION                               0x0
#define _PWM11PRH_PR_SIZE                                   0x8
#define _PWM11PRH_PR_LENGTH                                 0x8
#define _PWM11PRH_PR_MASK                                   0xFF
#define _PWM11PRH_PWM11PRH0_POSN                            0x0
#define _PWM11PRH_PWM11PRH0_POSITION                        0x0
#define _PWM11PRH_PWM11PRH0_SIZE                            0x1
#define _PWM11PRH_PWM11PRH0_LENGTH                          0x1
#define _PWM11PRH_PWM11PRH0_MASK                            0x1
#define _PWM11PRH_PWM11PRH1_POSN                            0x1
#define _PWM11PRH_PWM11PRH1_POSITION                        0x1
#define _PWM11PRH_PWM11PRH1_SIZE                            0x1
#define _PWM11PRH_PWM11PRH1_LENGTH                          0x1
#define _PWM11PRH_PWM11PRH1_MASK                            0x2
#define _PWM11PRH_PWM11PRH2_POSN                            0x2
#define _PWM11PRH_PWM11PRH2_POSITION                        0x2
#define _PWM11PRH_PWM11PRH2_SIZE                            0x1
#define _PWM11PRH_PWM11PRH2_LENGTH                          0x1
#define _PWM11PRH_PWM11PRH2_MASK                            0x4
#define _PWM11PRH_PWM11PRH3_POSN                            0x3
#define _PWM11PRH_PWM11PRH3_POSITION                        0x3
#define _PWM11PRH_PWM11PRH3_SIZE                            0x1
#define _PWM11PRH_PWM11PRH3_LENGTH                          0x1
#define _PWM11PRH_PWM11PRH3_MASK                            0x8
#define _PWM11PRH_PWM11PRH4_POSN                            0x4
#define _PWM11PRH_PWM11PRH4_POSITION                        0x4
#define _PWM11PRH_PWM11PRH4_SIZE                            0x1
#define _PWM11PRH_PWM11PRH4_LENGTH                          0x1
#define _PWM11PRH_PWM11PRH4_MASK                            0x10
#define _PWM11PRH_PWM11PRH5_POSN                            0x5
#define _PWM11PRH_PWM11PRH5_POSITION                        0x5
#define _PWM11PRH_PWM11PRH5_SIZE                            0x1
#define _PWM11PRH_PWM11PRH5_LENGTH                          0x1
#define _PWM11PRH_PWM11PRH5_MASK                            0x20
#define _PWM11PRH_PWM11PRH6_POSN                            0x6
#define _PWM11PRH_PWM11PRH6_POSITION                        0x6
#define _PWM11PRH_PWM11PRH6_SIZE                            0x1
#define _PWM11PRH_PWM11PRH6_LENGTH                          0x1
#define _PWM11PRH_PWM11PRH6_MASK                            0x40
#define _PWM11PRH_PWM11PRH7_POSN                            0x7
#define _PWM11PRH_PWM11PRH7_POSITION                        0x7
#define _PWM11PRH_PWM11PRH7_SIZE                            0x1
#define _PWM11PRH_PWM11PRH7_LENGTH                          0x1
#define _PWM11PRH_PWM11PRH7_MASK                            0x80
#define _PWM11PRH_PWM11PRH_POSN                             0x0
#define _PWM11PRH_PWM11PRH_POSITION                         0x0
#define _PWM11PRH_PWM11PRH_SIZE                             0x8
#define _PWM11PRH_PWM11PRH_LENGTH                           0x8
#define _PWM11PRH_PWM11PRH_MASK                             0xFF

// Register: PWM11OF
#define PWM11OF PWM11OF
extern volatile unsigned short          PWM11OF             __at(0xDB7);
#ifndef _LIB_BUILD
asm("PWM11OF equ 0DB7h");
#endif

// Register: PWM11OFL
#define PWM11OFL PWM11OFL
extern volatile unsigned char           PWM11OFL            __at(0xDB7);
#ifndef _LIB_BUILD
asm("PWM11OFL equ 0DB7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OF                     :8;
    };
    struct {
        unsigned PWM11OFL0              :1;
        unsigned PWM11OFL1              :1;
        unsigned PWM11OFL2              :1;
        unsigned PWM11OFL3              :1;
        unsigned PWM11OFL4              :1;
        unsigned PWM11OFL5              :1;
        unsigned PWM11OFL6              :1;
        unsigned PWM11OFL7              :1;
    };
    struct {
        unsigned PWM11OFL               :8;
    };
} PWM11OFLbits_t;
extern volatile PWM11OFLbits_t PWM11OFLbits __at(0xDB7);
// bitfield macros
#define _PWM11OFL_OF_POSN                                   0x0
#define _PWM11OFL_OF_POSITION                               0x0
#define _PWM11OFL_OF_SIZE                                   0x8
#define _PWM11OFL_OF_LENGTH                                 0x8
#define _PWM11OFL_OF_MASK                                   0xFF
#define _PWM11OFL_PWM11OFL0_POSN                            0x0
#define _PWM11OFL_PWM11OFL0_POSITION                        0x0
#define _PWM11OFL_PWM11OFL0_SIZE                            0x1
#define _PWM11OFL_PWM11OFL0_LENGTH                          0x1
#define _PWM11OFL_PWM11OFL0_MASK                            0x1
#define _PWM11OFL_PWM11OFL1_POSN                            0x1
#define _PWM11OFL_PWM11OFL1_POSITION                        0x1
#define _PWM11OFL_PWM11OFL1_SIZE                            0x1
#define _PWM11OFL_PWM11OFL1_LENGTH                          0x1
#define _PWM11OFL_PWM11OFL1_MASK                            0x2
#define _PWM11OFL_PWM11OFL2_POSN                            0x2
#define _PWM11OFL_PWM11OFL2_POSITION                        0x2
#define _PWM11OFL_PWM11OFL2_SIZE                            0x1
#define _PWM11OFL_PWM11OFL2_LENGTH                          0x1
#define _PWM11OFL_PWM11OFL2_MASK                            0x4
#define _PWM11OFL_PWM11OFL3_POSN                            0x3
#define _PWM11OFL_PWM11OFL3_POSITION                        0x3
#define _PWM11OFL_PWM11OFL3_SIZE                            0x1
#define _PWM11OFL_PWM11OFL3_LENGTH                          0x1
#define _PWM11OFL_PWM11OFL3_MASK                            0x8
#define _PWM11OFL_PWM11OFL4_POSN                            0x4
#define _PWM11OFL_PWM11OFL4_POSITION                        0x4
#define _PWM11OFL_PWM11OFL4_SIZE                            0x1
#define _PWM11OFL_PWM11OFL4_LENGTH                          0x1
#define _PWM11OFL_PWM11OFL4_MASK                            0x10
#define _PWM11OFL_PWM11OFL5_POSN                            0x5
#define _PWM11OFL_PWM11OFL5_POSITION                        0x5
#define _PWM11OFL_PWM11OFL5_SIZE                            0x1
#define _PWM11OFL_PWM11OFL5_LENGTH                          0x1
#define _PWM11OFL_PWM11OFL5_MASK                            0x20
#define _PWM11OFL_PWM11OFL6_POSN                            0x6
#define _PWM11OFL_PWM11OFL6_POSITION                        0x6
#define _PWM11OFL_PWM11OFL6_SIZE                            0x1
#define _PWM11OFL_PWM11OFL6_LENGTH                          0x1
#define _PWM11OFL_PWM11OFL6_MASK                            0x40
#define _PWM11OFL_PWM11OFL7_POSN                            0x7
#define _PWM11OFL_PWM11OFL7_POSITION                        0x7
#define _PWM11OFL_PWM11OFL7_SIZE                            0x1
#define _PWM11OFL_PWM11OFL7_LENGTH                          0x1
#define _PWM11OFL_PWM11OFL7_MASK                            0x80
#define _PWM11OFL_PWM11OFL_POSN                             0x0
#define _PWM11OFL_PWM11OFL_POSITION                         0x0
#define _PWM11OFL_PWM11OFL_SIZE                             0x8
#define _PWM11OFL_PWM11OFL_LENGTH                           0x8
#define _PWM11OFL_PWM11OFL_MASK                             0xFF

// Register: PWM11OFH
#define PWM11OFH PWM11OFH
extern volatile unsigned char           PWM11OFH            __at(0xDB8);
#ifndef _LIB_BUILD
asm("PWM11OFH equ 0DB8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OF                     :8;
    };
    struct {
        unsigned PWM11OFH0              :1;
        unsigned PWM11OFH1              :1;
        unsigned PWM11OFH2              :1;
        unsigned PWM11OFH3              :1;
        unsigned PWM11OFH4              :1;
        unsigned PWM11OFH5              :1;
        unsigned PWM11OFH6              :1;
        unsigned PWM11OFH7              :1;
    };
    struct {
        unsigned PWM11OFH               :8;
    };
} PWM11OFHbits_t;
extern volatile PWM11OFHbits_t PWM11OFHbits __at(0xDB8);
// bitfield macros
#define _PWM11OFH_OF_POSN                                   0x0
#define _PWM11OFH_OF_POSITION                               0x0
#define _PWM11OFH_OF_SIZE                                   0x8
#define _PWM11OFH_OF_LENGTH                                 0x8
#define _PWM11OFH_OF_MASK                                   0xFF
#define _PWM11OFH_PWM11OFH0_POSN                            0x0
#define _PWM11OFH_PWM11OFH0_POSITION                        0x0
#define _PWM11OFH_PWM11OFH0_SIZE                            0x1
#define _PWM11OFH_PWM11OFH0_LENGTH                          0x1
#define _PWM11OFH_PWM11OFH0_MASK                            0x1
#define _PWM11OFH_PWM11OFH1_POSN                            0x1
#define _PWM11OFH_PWM11OFH1_POSITION                        0x1
#define _PWM11OFH_PWM11OFH1_SIZE                            0x1
#define _PWM11OFH_PWM11OFH1_LENGTH                          0x1
#define _PWM11OFH_PWM11OFH1_MASK                            0x2
#define _PWM11OFH_PWM11OFH2_POSN                            0x2
#define _PWM11OFH_PWM11OFH2_POSITION                        0x2
#define _PWM11OFH_PWM11OFH2_SIZE                            0x1
#define _PWM11OFH_PWM11OFH2_LENGTH                          0x1
#define _PWM11OFH_PWM11OFH2_MASK                            0x4
#define _PWM11OFH_PWM11OFH3_POSN                            0x3
#define _PWM11OFH_PWM11OFH3_POSITION                        0x3
#define _PWM11OFH_PWM11OFH3_SIZE                            0x1
#define _PWM11OFH_PWM11OFH3_LENGTH                          0x1
#define _PWM11OFH_PWM11OFH3_MASK                            0x8
#define _PWM11OFH_PWM11OFH4_POSN                            0x4
#define _PWM11OFH_PWM11OFH4_POSITION                        0x4
#define _PWM11OFH_PWM11OFH4_SIZE                            0x1
#define _PWM11OFH_PWM11OFH4_LENGTH                          0x1
#define _PWM11OFH_PWM11OFH4_MASK                            0x10
#define _PWM11OFH_PWM11OFH5_POSN                            0x5
#define _PWM11OFH_PWM11OFH5_POSITION                        0x5
#define _PWM11OFH_PWM11OFH5_SIZE                            0x1
#define _PWM11OFH_PWM11OFH5_LENGTH                          0x1
#define _PWM11OFH_PWM11OFH5_MASK                            0x20
#define _PWM11OFH_PWM11OFH6_POSN                            0x6
#define _PWM11OFH_PWM11OFH6_POSITION                        0x6
#define _PWM11OFH_PWM11OFH6_SIZE                            0x1
#define _PWM11OFH_PWM11OFH6_LENGTH                          0x1
#define _PWM11OFH_PWM11OFH6_MASK                            0x40
#define _PWM11OFH_PWM11OFH7_POSN                            0x7
#define _PWM11OFH_PWM11OFH7_POSITION                        0x7
#define _PWM11OFH_PWM11OFH7_SIZE                            0x1
#define _PWM11OFH_PWM11OFH7_LENGTH                          0x1
#define _PWM11OFH_PWM11OFH7_MASK                            0x80
#define _PWM11OFH_PWM11OFH_POSN                             0x0
#define _PWM11OFH_PWM11OFH_POSITION                         0x0
#define _PWM11OFH_PWM11OFH_SIZE                             0x8
#define _PWM11OFH_PWM11OFH_LENGTH                           0x8
#define _PWM11OFH_PWM11OFH_MASK                             0xFF

// Register: PWM11TMR
#define PWM11TMR PWM11TMR
extern volatile unsigned short          PWM11TMR            __at(0xDB9);
#ifndef _LIB_BUILD
asm("PWM11TMR equ 0DB9h");
#endif

// Register: PWM11TMRL
#define PWM11TMRL PWM11TMRL
extern volatile unsigned char           PWM11TMRL           __at(0xDB9);
#ifndef _LIB_BUILD
asm("PWM11TMRL equ 0DB9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned PWM11TMRL0             :1;
        unsigned PWM11TMRL1             :1;
        unsigned PWM11TMRL2             :1;
        unsigned PWM11TMRL3             :1;
        unsigned PWM11TMRL4             :1;
        unsigned PWM11TMRL5             :1;
        unsigned PWM11TMRL6             :1;
        unsigned PWM11TMRL7             :1;
    };
    struct {
        unsigned PWM11TMRL              :8;
    };
} PWM11TMRLbits_t;
extern volatile PWM11TMRLbits_t PWM11TMRLbits __at(0xDB9);
// bitfield macros
#define _PWM11TMRL_TMR_POSN                                 0x0
#define _PWM11TMRL_TMR_POSITION                             0x0
#define _PWM11TMRL_TMR_SIZE                                 0x8
#define _PWM11TMRL_TMR_LENGTH                               0x8
#define _PWM11TMRL_TMR_MASK                                 0xFF
#define _PWM11TMRL_PWM11TMRL0_POSN                          0x0
#define _PWM11TMRL_PWM11TMRL0_POSITION                      0x0
#define _PWM11TMRL_PWM11TMRL0_SIZE                          0x1
#define _PWM11TMRL_PWM11TMRL0_LENGTH                        0x1
#define _PWM11TMRL_PWM11TMRL0_MASK                          0x1
#define _PWM11TMRL_PWM11TMRL1_POSN                          0x1
#define _PWM11TMRL_PWM11TMRL1_POSITION                      0x1
#define _PWM11TMRL_PWM11TMRL1_SIZE                          0x1
#define _PWM11TMRL_PWM11TMRL1_LENGTH                        0x1
#define _PWM11TMRL_PWM11TMRL1_MASK                          0x2
#define _PWM11TMRL_PWM11TMRL2_POSN                          0x2
#define _PWM11TMRL_PWM11TMRL2_POSITION                      0x2
#define _PWM11TMRL_PWM11TMRL2_SIZE                          0x1
#define _PWM11TMRL_PWM11TMRL2_LENGTH                        0x1
#define _PWM11TMRL_PWM11TMRL2_MASK                          0x4
#define _PWM11TMRL_PWM11TMRL3_POSN                          0x3
#define _PWM11TMRL_PWM11TMRL3_POSITION                      0x3
#define _PWM11TMRL_PWM11TMRL3_SIZE                          0x1
#define _PWM11TMRL_PWM11TMRL3_LENGTH                        0x1
#define _PWM11TMRL_PWM11TMRL3_MASK                          0x8
#define _PWM11TMRL_PWM11TMRL4_POSN                          0x4
#define _PWM11TMRL_PWM11TMRL4_POSITION                      0x4
#define _PWM11TMRL_PWM11TMRL4_SIZE                          0x1
#define _PWM11TMRL_PWM11TMRL4_LENGTH                        0x1
#define _PWM11TMRL_PWM11TMRL4_MASK                          0x10
#define _PWM11TMRL_PWM11TMRL5_POSN                          0x5
#define _PWM11TMRL_PWM11TMRL5_POSITION                      0x5
#define _PWM11TMRL_PWM11TMRL5_SIZE                          0x1
#define _PWM11TMRL_PWM11TMRL5_LENGTH                        0x1
#define _PWM11TMRL_PWM11TMRL5_MASK                          0x20
#define _PWM11TMRL_PWM11TMRL6_POSN                          0x6
#define _PWM11TMRL_PWM11TMRL6_POSITION                      0x6
#define _PWM11TMRL_PWM11TMRL6_SIZE                          0x1
#define _PWM11TMRL_PWM11TMRL6_LENGTH                        0x1
#define _PWM11TMRL_PWM11TMRL6_MASK                          0x40
#define _PWM11TMRL_PWM11TMRL7_POSN                          0x7
#define _PWM11TMRL_PWM11TMRL7_POSITION                      0x7
#define _PWM11TMRL_PWM11TMRL7_SIZE                          0x1
#define _PWM11TMRL_PWM11TMRL7_LENGTH                        0x1
#define _PWM11TMRL_PWM11TMRL7_MASK                          0x80
#define _PWM11TMRL_PWM11TMRL_POSN                           0x0
#define _PWM11TMRL_PWM11TMRL_POSITION                       0x0
#define _PWM11TMRL_PWM11TMRL_SIZE                           0x8
#define _PWM11TMRL_PWM11TMRL_LENGTH                         0x8
#define _PWM11TMRL_PWM11TMRL_MASK                           0xFF

// Register: PWM11TMRH
#define PWM11TMRH PWM11TMRH
extern volatile unsigned char           PWM11TMRH           __at(0xDBA);
#ifndef _LIB_BUILD
asm("PWM11TMRH equ 0DBAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned PWM11TMRH0             :1;
        unsigned PWM11TMRH1             :1;
        unsigned PWM11TMRH2             :1;
        unsigned PWM11TMRH3             :1;
        unsigned PWM11TMRH4             :1;
        unsigned PWM11TMRH5             :1;
        unsigned PWM11TMRH6             :1;
        unsigned PWM11TMRH7             :1;
    };
    struct {
        unsigned PWM11TMRH              :8;
    };
} PWM11TMRHbits_t;
extern volatile PWM11TMRHbits_t PWM11TMRHbits __at(0xDBA);
// bitfield macros
#define _PWM11TMRH_TMR_POSN                                 0x0
#define _PWM11TMRH_TMR_POSITION                             0x0
#define _PWM11TMRH_TMR_SIZE                                 0x8
#define _PWM11TMRH_TMR_LENGTH                               0x8
#define _PWM11TMRH_TMR_MASK                                 0xFF
#define _PWM11TMRH_PWM11TMRH0_POSN                          0x0
#define _PWM11TMRH_PWM11TMRH0_POSITION                      0x0
#define _PWM11TMRH_PWM11TMRH0_SIZE                          0x1
#define _PWM11TMRH_PWM11TMRH0_LENGTH                        0x1
#define _PWM11TMRH_PWM11TMRH0_MASK                          0x1
#define _PWM11TMRH_PWM11TMRH1_POSN                          0x1
#define _PWM11TMRH_PWM11TMRH1_POSITION                      0x1
#define _PWM11TMRH_PWM11TMRH1_SIZE                          0x1
#define _PWM11TMRH_PWM11TMRH1_LENGTH                        0x1
#define _PWM11TMRH_PWM11TMRH1_MASK                          0x2
#define _PWM11TMRH_PWM11TMRH2_POSN                          0x2
#define _PWM11TMRH_PWM11TMRH2_POSITION                      0x2
#define _PWM11TMRH_PWM11TMRH2_SIZE                          0x1
#define _PWM11TMRH_PWM11TMRH2_LENGTH                        0x1
#define _PWM11TMRH_PWM11TMRH2_MASK                          0x4
#define _PWM11TMRH_PWM11TMRH3_POSN                          0x3
#define _PWM11TMRH_PWM11TMRH3_POSITION                      0x3
#define _PWM11TMRH_PWM11TMRH3_SIZE                          0x1
#define _PWM11TMRH_PWM11TMRH3_LENGTH                        0x1
#define _PWM11TMRH_PWM11TMRH3_MASK                          0x8
#define _PWM11TMRH_PWM11TMRH4_POSN                          0x4
#define _PWM11TMRH_PWM11TMRH4_POSITION                      0x4
#define _PWM11TMRH_PWM11TMRH4_SIZE                          0x1
#define _PWM11TMRH_PWM11TMRH4_LENGTH                        0x1
#define _PWM11TMRH_PWM11TMRH4_MASK                          0x10
#define _PWM11TMRH_PWM11TMRH5_POSN                          0x5
#define _PWM11TMRH_PWM11TMRH5_POSITION                      0x5
#define _PWM11TMRH_PWM11TMRH5_SIZE                          0x1
#define _PWM11TMRH_PWM11TMRH5_LENGTH                        0x1
#define _PWM11TMRH_PWM11TMRH5_MASK                          0x20
#define _PWM11TMRH_PWM11TMRH6_POSN                          0x6
#define _PWM11TMRH_PWM11TMRH6_POSITION                      0x6
#define _PWM11TMRH_PWM11TMRH6_SIZE                          0x1
#define _PWM11TMRH_PWM11TMRH6_LENGTH                        0x1
#define _PWM11TMRH_PWM11TMRH6_MASK                          0x40
#define _PWM11TMRH_PWM11TMRH7_POSN                          0x7
#define _PWM11TMRH_PWM11TMRH7_POSITION                      0x7
#define _PWM11TMRH_PWM11TMRH7_SIZE                          0x1
#define _PWM11TMRH_PWM11TMRH7_LENGTH                        0x1
#define _PWM11TMRH_PWM11TMRH7_MASK                          0x80
#define _PWM11TMRH_PWM11TMRH_POSN                           0x0
#define _PWM11TMRH_PWM11TMRH_POSITION                       0x0
#define _PWM11TMRH_PWM11TMRH_SIZE                           0x8
#define _PWM11TMRH_PWM11TMRH_LENGTH                         0x8
#define _PWM11TMRH_PWM11TMRH_MASK                           0xFF

// Register: PWM11CON
#define PWM11CON PWM11CON
extern volatile unsigned char           PWM11CON            __at(0xDBB);
#ifndef _LIB_BUILD
asm("PWM11CON equ 0DBBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned MODE                   :2;
        unsigned POL                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned PWM11MODE0             :1;
        unsigned PWM11MODE1             :1;
    };
    struct {
        unsigned                        :2;
        unsigned PWM11MODE              :2;
        unsigned PWM11POL               :1;
        unsigned PWM11OUT               :1;
        unsigned                        :1;
        unsigned PWM11EN                :1;
    };
    struct {
        unsigned                        :2;
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
    };
} PWM11CONbits_t;
extern volatile PWM11CONbits_t PWM11CONbits __at(0xDBB);
// bitfield macros
#define _PWM11CON_MODE_POSN                                 0x2
#define _PWM11CON_MODE_POSITION                             0x2
#define _PWM11CON_MODE_SIZE                                 0x2
#define _PWM11CON_MODE_LENGTH                               0x2
#define _PWM11CON_MODE_MASK                                 0xC
#define _PWM11CON_POL_POSN                                  0x4
#define _PWM11CON_POL_POSITION                              0x4
#define _PWM11CON_POL_SIZE                                  0x1
#define _PWM11CON_POL_LENGTH                                0x1
#define _PWM11CON_POL_MASK                                  0x10
#define _PWM11CON_OUT_POSN                                  0x5
#define _PWM11CON_OUT_POSITION                              0x5
#define _PWM11CON_OUT_SIZE                                  0x1
#define _PWM11CON_OUT_LENGTH                                0x1
#define _PWM11CON_OUT_MASK                                  0x20
#define _PWM11CON_EN_POSN                                   0x7
#define _PWM11CON_EN_POSITION                               0x7
#define _PWM11CON_EN_SIZE                                   0x1
#define _PWM11CON_EN_LENGTH                                 0x1
#define _PWM11CON_EN_MASK                                   0x80
#define _PWM11CON_PWM11MODE0_POSN                           0x2
#define _PWM11CON_PWM11MODE0_POSITION                       0x2
#define _PWM11CON_PWM11MODE0_SIZE                           0x1
#define _PWM11CON_PWM11MODE0_LENGTH                         0x1
#define _PWM11CON_PWM11MODE0_MASK                           0x4
#define _PWM11CON_PWM11MODE1_POSN                           0x3
#define _PWM11CON_PWM11MODE1_POSITION                       0x3
#define _PWM11CON_PWM11MODE1_SIZE                           0x1
#define _PWM11CON_PWM11MODE1_LENGTH                         0x1
#define _PWM11CON_PWM11MODE1_MASK                           0x8
#define _PWM11CON_PWM11MODE_POSN                            0x2
#define _PWM11CON_PWM11MODE_POSITION                        0x2
#define _PWM11CON_PWM11MODE_SIZE                            0x2
#define _PWM11CON_PWM11MODE_LENGTH                          0x2
#define _PWM11CON_PWM11MODE_MASK                            0xC
#define _PWM11CON_PWM11POL_POSN                             0x4
#define _PWM11CON_PWM11POL_POSITION                         0x4
#define _PWM11CON_PWM11POL_SIZE                             0x1
#define _PWM11CON_PWM11POL_LENGTH                           0x1
#define _PWM11CON_PWM11POL_MASK                             0x10
#define _PWM11CON_PWM11OUT_POSN                             0x5
#define _PWM11CON_PWM11OUT_POSITION                         0x5
#define _PWM11CON_PWM11OUT_SIZE                             0x1
#define _PWM11CON_PWM11OUT_LENGTH                           0x1
#define _PWM11CON_PWM11OUT_MASK                             0x20
#define _PWM11CON_PWM11EN_POSN                              0x7
#define _PWM11CON_PWM11EN_POSITION                          0x7
#define _PWM11CON_PWM11EN_SIZE                              0x1
#define _PWM11CON_PWM11EN_LENGTH                            0x1
#define _PWM11CON_PWM11EN_MASK                              0x80
#define _PWM11CON_MODE0_POSN                                0x2
#define _PWM11CON_MODE0_POSITION                            0x2
#define _PWM11CON_MODE0_SIZE                                0x1
#define _PWM11CON_MODE0_LENGTH                              0x1
#define _PWM11CON_MODE0_MASK                                0x4
#define _PWM11CON_MODE1_POSN                                0x3
#define _PWM11CON_MODE1_POSITION                            0x3
#define _PWM11CON_MODE1_SIZE                                0x1
#define _PWM11CON_MODE1_LENGTH                              0x1
#define _PWM11CON_MODE1_MASK                                0x8

// Register: PWM11INTE
#define PWM11INTE PWM11INTE
extern volatile unsigned char           PWM11INTE           __at(0xDBC);
#ifndef _LIB_BUILD
asm("PWM11INTE equ 0DBCh");
#endif
// aliases
extern volatile unsigned char           PWM11INTCON         __at(0xDBC);
#ifndef _LIB_BUILD
asm("PWM11INTCON equ 0DBCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRIE                   :1;
        unsigned DCIE                   :1;
        unsigned PHIE                   :1;
        unsigned OFIE                   :1;
    };
    struct {
        unsigned PWM11PRIE              :1;
        unsigned PWM11DCIE              :1;
        unsigned PWM11PHIE              :1;
        unsigned PWM11OFIE              :1;
    };
} PWM11INTEbits_t;
extern volatile PWM11INTEbits_t PWM11INTEbits __at(0xDBC);
// bitfield macros
#define _PWM11INTE_PRIE_POSN                                0x0
#define _PWM11INTE_PRIE_POSITION                            0x0
#define _PWM11INTE_PRIE_SIZE                                0x1
#define _PWM11INTE_PRIE_LENGTH                              0x1
#define _PWM11INTE_PRIE_MASK                                0x1
#define _PWM11INTE_DCIE_POSN                                0x1
#define _PWM11INTE_DCIE_POSITION                            0x1
#define _PWM11INTE_DCIE_SIZE                                0x1
#define _PWM11INTE_DCIE_LENGTH                              0x1
#define _PWM11INTE_DCIE_MASK                                0x2
#define _PWM11INTE_PHIE_POSN                                0x2
#define _PWM11INTE_PHIE_POSITION                            0x2
#define _PWM11INTE_PHIE_SIZE                                0x1
#define _PWM11INTE_PHIE_LENGTH                              0x1
#define _PWM11INTE_PHIE_MASK                                0x4
#define _PWM11INTE_OFIE_POSN                                0x3
#define _PWM11INTE_OFIE_POSITION                            0x3
#define _PWM11INTE_OFIE_SIZE                                0x1
#define _PWM11INTE_OFIE_LENGTH                              0x1
#define _PWM11INTE_OFIE_MASK                                0x8
#define _PWM11INTE_PWM11PRIE_POSN                           0x0
#define _PWM11INTE_PWM11PRIE_POSITION                       0x0
#define _PWM11INTE_PWM11PRIE_SIZE                           0x1
#define _PWM11INTE_PWM11PRIE_LENGTH                         0x1
#define _PWM11INTE_PWM11PRIE_MASK                           0x1
#define _PWM11INTE_PWM11DCIE_POSN                           0x1
#define _PWM11INTE_PWM11DCIE_POSITION                       0x1
#define _PWM11INTE_PWM11DCIE_SIZE                           0x1
#define _PWM11INTE_PWM11DCIE_LENGTH                         0x1
#define _PWM11INTE_PWM11DCIE_MASK                           0x2
#define _PWM11INTE_PWM11PHIE_POSN                           0x2
#define _PWM11INTE_PWM11PHIE_POSITION                       0x2
#define _PWM11INTE_PWM11PHIE_SIZE                           0x1
#define _PWM11INTE_PWM11PHIE_LENGTH                         0x1
#define _PWM11INTE_PWM11PHIE_MASK                           0x4
#define _PWM11INTE_PWM11OFIE_POSN                           0x3
#define _PWM11INTE_PWM11OFIE_POSITION                       0x3
#define _PWM11INTE_PWM11OFIE_SIZE                           0x1
#define _PWM11INTE_PWM11OFIE_LENGTH                         0x1
#define _PWM11INTE_PWM11OFIE_MASK                           0x8
// alias bitfield definitions
typedef union {
    struct {
        unsigned PRIE                   :1;
        unsigned DCIE                   :1;
        unsigned PHIE                   :1;
        unsigned OFIE                   :1;
    };
    struct {
        unsigned PWM11PRIE              :1;
        unsigned PWM11DCIE              :1;
        unsigned PWM11PHIE              :1;
        unsigned PWM11OFIE              :1;
    };
} PWM11INTCONbits_t;
extern volatile PWM11INTCONbits_t PWM11INTCONbits __at(0xDBC);
// bitfield macros
#define _PWM11INTCON_PRIE_POSN                              0x0
#define _PWM11INTCON_PRIE_POSITION                          0x0
#define _PWM11INTCON_PRIE_SIZE                              0x1
#define _PWM11INTCON_PRIE_LENGTH                            0x1
#define _PWM11INTCON_PRIE_MASK                              0x1
#define _PWM11INTCON_DCIE_POSN                              0x1
#define _PWM11INTCON_DCIE_POSITION                          0x1
#define _PWM11INTCON_DCIE_SIZE                              0x1
#define _PWM11INTCON_DCIE_LENGTH                            0x1
#define _PWM11INTCON_DCIE_MASK                              0x2
#define _PWM11INTCON_PHIE_POSN                              0x2
#define _PWM11INTCON_PHIE_POSITION                          0x2
#define _PWM11INTCON_PHIE_SIZE                              0x1
#define _PWM11INTCON_PHIE_LENGTH                            0x1
#define _PWM11INTCON_PHIE_MASK                              0x4
#define _PWM11INTCON_OFIE_POSN                              0x3
#define _PWM11INTCON_OFIE_POSITION                          0x3
#define _PWM11INTCON_OFIE_SIZE                              0x1
#define _PWM11INTCON_OFIE_LENGTH                            0x1
#define _PWM11INTCON_OFIE_MASK                              0x8
#define _PWM11INTCON_PWM11PRIE_POSN                         0x0
#define _PWM11INTCON_PWM11PRIE_POSITION                     0x0
#define _PWM11INTCON_PWM11PRIE_SIZE                         0x1
#define _PWM11INTCON_PWM11PRIE_LENGTH                       0x1
#define _PWM11INTCON_PWM11PRIE_MASK                         0x1
#define _PWM11INTCON_PWM11DCIE_POSN                         0x1
#define _PWM11INTCON_PWM11DCIE_POSITION                     0x1
#define _PWM11INTCON_PWM11DCIE_SIZE                         0x1
#define _PWM11INTCON_PWM11DCIE_LENGTH                       0x1
#define _PWM11INTCON_PWM11DCIE_MASK                         0x2
#define _PWM11INTCON_PWM11PHIE_POSN                         0x2
#define _PWM11INTCON_PWM11PHIE_POSITION                     0x2
#define _PWM11INTCON_PWM11PHIE_SIZE                         0x1
#define _PWM11INTCON_PWM11PHIE_LENGTH                       0x1
#define _PWM11INTCON_PWM11PHIE_MASK                         0x4
#define _PWM11INTCON_PWM11OFIE_POSN                         0x3
#define _PWM11INTCON_PWM11OFIE_POSITION                     0x3
#define _PWM11INTCON_PWM11OFIE_SIZE                         0x1
#define _PWM11INTCON_PWM11OFIE_LENGTH                       0x1
#define _PWM11INTCON_PWM11OFIE_MASK                         0x8

// Register: PWM11INTF
#define PWM11INTF PWM11INTF
extern volatile unsigned char           PWM11INTF           __at(0xDBD);
#ifndef _LIB_BUILD
asm("PWM11INTF equ 0DBDh");
#endif
// aliases
extern volatile unsigned char           PWM11INTFLG         __at(0xDBD);
#ifndef _LIB_BUILD
asm("PWM11INTFLG equ 0DBDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRIF                   :1;
        unsigned DCIF                   :1;
        unsigned PHIF                   :1;
        unsigned OFIF                   :1;
    };
    struct {
        unsigned PWM11PRIF              :1;
        unsigned PWM11DCIF              :1;
        unsigned PWM11PHIF              :1;
        unsigned PWM11OFIF              :1;
    };
} PWM11INTFbits_t;
extern volatile PWM11INTFbits_t PWM11INTFbits __at(0xDBD);
// bitfield macros
#define _PWM11INTF_PRIF_POSN                                0x0
#define _PWM11INTF_PRIF_POSITION                            0x0
#define _PWM11INTF_PRIF_SIZE                                0x1
#define _PWM11INTF_PRIF_LENGTH                              0x1
#define _PWM11INTF_PRIF_MASK                                0x1
#define _PWM11INTF_DCIF_POSN                                0x1
#define _PWM11INTF_DCIF_POSITION                            0x1
#define _PWM11INTF_DCIF_SIZE                                0x1
#define _PWM11INTF_DCIF_LENGTH                              0x1
#define _PWM11INTF_DCIF_MASK                                0x2
#define _PWM11INTF_PHIF_POSN                                0x2
#define _PWM11INTF_PHIF_POSITION                            0x2
#define _PWM11INTF_PHIF_SIZE                                0x1
#define _PWM11INTF_PHIF_LENGTH                              0x1
#define _PWM11INTF_PHIF_MASK                                0x4
#define _PWM11INTF_OFIF_POSN                                0x3
#define _PWM11INTF_OFIF_POSITION                            0x3
#define _PWM11INTF_OFIF_SIZE                                0x1
#define _PWM11INTF_OFIF_LENGTH                              0x1
#define _PWM11INTF_OFIF_MASK                                0x8
#define _PWM11INTF_PWM11PRIF_POSN                           0x0
#define _PWM11INTF_PWM11PRIF_POSITION                       0x0
#define _PWM11INTF_PWM11PRIF_SIZE                           0x1
#define _PWM11INTF_PWM11PRIF_LENGTH                         0x1
#define _PWM11INTF_PWM11PRIF_MASK                           0x1
#define _PWM11INTF_PWM11DCIF_POSN                           0x1
#define _PWM11INTF_PWM11DCIF_POSITION                       0x1
#define _PWM11INTF_PWM11DCIF_SIZE                           0x1
#define _PWM11INTF_PWM11DCIF_LENGTH                         0x1
#define _PWM11INTF_PWM11DCIF_MASK                           0x2
#define _PWM11INTF_PWM11PHIF_POSN                           0x2
#define _PWM11INTF_PWM11PHIF_POSITION                       0x2
#define _PWM11INTF_PWM11PHIF_SIZE                           0x1
#define _PWM11INTF_PWM11PHIF_LENGTH                         0x1
#define _PWM11INTF_PWM11PHIF_MASK                           0x4
#define _PWM11INTF_PWM11OFIF_POSN                           0x3
#define _PWM11INTF_PWM11OFIF_POSITION                       0x3
#define _PWM11INTF_PWM11OFIF_SIZE                           0x1
#define _PWM11INTF_PWM11OFIF_LENGTH                         0x1
#define _PWM11INTF_PWM11OFIF_MASK                           0x8
// alias bitfield definitions
typedef union {
    struct {
        unsigned PRIF                   :1;
        unsigned DCIF                   :1;
        unsigned PHIF                   :1;
        unsigned OFIF                   :1;
    };
    struct {
        unsigned PWM11PRIF              :1;
        unsigned PWM11DCIF              :1;
        unsigned PWM11PHIF              :1;
        unsigned PWM11OFIF              :1;
    };
} PWM11INTFLGbits_t;
extern volatile PWM11INTFLGbits_t PWM11INTFLGbits __at(0xDBD);
// bitfield macros
#define _PWM11INTFLG_PRIF_POSN                              0x0
#define _PWM11INTFLG_PRIF_POSITION                          0x0
#define _PWM11INTFLG_PRIF_SIZE                              0x1
#define _PWM11INTFLG_PRIF_LENGTH                            0x1
#define _PWM11INTFLG_PRIF_MASK                              0x1
#define _PWM11INTFLG_DCIF_POSN                              0x1
#define _PWM11INTFLG_DCIF_POSITION                          0x1
#define _PWM11INTFLG_DCIF_SIZE                              0x1
#define _PWM11INTFLG_DCIF_LENGTH                            0x1
#define _PWM11INTFLG_DCIF_MASK                              0x2
#define _PWM11INTFLG_PHIF_POSN                              0x2
#define _PWM11INTFLG_PHIF_POSITION                          0x2
#define _PWM11INTFLG_PHIF_SIZE                              0x1
#define _PWM11INTFLG_PHIF_LENGTH                            0x1
#define _PWM11INTFLG_PHIF_MASK                              0x4
#define _PWM11INTFLG_OFIF_POSN                              0x3
#define _PWM11INTFLG_OFIF_POSITION                          0x3
#define _PWM11INTFLG_OFIF_SIZE                              0x1
#define _PWM11INTFLG_OFIF_LENGTH                            0x1
#define _PWM11INTFLG_OFIF_MASK                              0x8
#define _PWM11INTFLG_PWM11PRIF_POSN                         0x0
#define _PWM11INTFLG_PWM11PRIF_POSITION                     0x0
#define _PWM11INTFLG_PWM11PRIF_SIZE                         0x1
#define _PWM11INTFLG_PWM11PRIF_LENGTH                       0x1
#define _PWM11INTFLG_PWM11PRIF_MASK                         0x1
#define _PWM11INTFLG_PWM11DCIF_POSN                         0x1
#define _PWM11INTFLG_PWM11DCIF_POSITION                     0x1
#define _PWM11INTFLG_PWM11DCIF_SIZE                         0x1
#define _PWM11INTFLG_PWM11DCIF_LENGTH                       0x1
#define _PWM11INTFLG_PWM11DCIF_MASK                         0x2
#define _PWM11INTFLG_PWM11PHIF_POSN                         0x2
#define _PWM11INTFLG_PWM11PHIF_POSITION                     0x2
#define _PWM11INTFLG_PWM11PHIF_SIZE                         0x1
#define _PWM11INTFLG_PWM11PHIF_LENGTH                       0x1
#define _PWM11INTFLG_PWM11PHIF_MASK                         0x4
#define _PWM11INTFLG_PWM11OFIF_POSN                         0x3
#define _PWM11INTFLG_PWM11OFIF_POSITION                     0x3
#define _PWM11INTFLG_PWM11OFIF_SIZE                         0x1
#define _PWM11INTFLG_PWM11OFIF_LENGTH                       0x1
#define _PWM11INTFLG_PWM11OFIF_MASK                         0x8

// Register: PWM11CLKCON
#define PWM11CLKCON PWM11CLKCON
extern volatile unsigned char           PWM11CLKCON         __at(0xDBE);
#ifndef _LIB_BUILD
asm("PWM11CLKCON equ 0DBEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CS                     :2;
        unsigned                        :2;
        unsigned PS                     :3;
    };
    struct {
        unsigned PWM11CS0               :1;
        unsigned PWM11CS1               :1;
        unsigned PWM11CS2               :1;
        unsigned                        :1;
        unsigned PWM11PS0               :1;
        unsigned PWM11PS1               :1;
        unsigned PWM11PS2               :1;
    };
    struct {
        unsigned PWM11CS                :3;
        unsigned                        :1;
        unsigned PWM11PS                :3;
    };
    struct {
        unsigned CS0                    :1;
        unsigned CS1                    :1;
        unsigned CS2                    :1;
        unsigned                        :1;
        unsigned PS0                    :1;
        unsigned PS1                    :1;
        unsigned PS2                    :1;
    };
} PWM11CLKCONbits_t;
extern volatile PWM11CLKCONbits_t PWM11CLKCONbits __at(0xDBE);
// bitfield macros
#define _PWM11CLKCON_CS_POSN                                0x0
#define _PWM11CLKCON_CS_POSITION                            0x0
#define _PWM11CLKCON_CS_SIZE                                0x2
#define _PWM11CLKCON_CS_LENGTH                              0x2
#define _PWM11CLKCON_CS_MASK                                0x3
#define _PWM11CLKCON_PS_POSN                                0x4
#define _PWM11CLKCON_PS_POSITION                            0x4
#define _PWM11CLKCON_PS_SIZE                                0x3
#define _PWM11CLKCON_PS_LENGTH                              0x3
#define _PWM11CLKCON_PS_MASK                                0x70
#define _PWM11CLKCON_PWM11CS0_POSN                          0x0
#define _PWM11CLKCON_PWM11CS0_POSITION                      0x0
#define _PWM11CLKCON_PWM11CS0_SIZE                          0x1
#define _PWM11CLKCON_PWM11CS0_LENGTH                        0x1
#define _PWM11CLKCON_PWM11CS0_MASK                          0x1
#define _PWM11CLKCON_PWM11CS1_POSN                          0x1
#define _PWM11CLKCON_PWM11CS1_POSITION                      0x1
#define _PWM11CLKCON_PWM11CS1_SIZE                          0x1
#define _PWM11CLKCON_PWM11CS1_LENGTH                        0x1
#define _PWM11CLKCON_PWM11CS1_MASK                          0x2
#define _PWM11CLKCON_PWM11CS2_POSN                          0x2
#define _PWM11CLKCON_PWM11CS2_POSITION                      0x2
#define _PWM11CLKCON_PWM11CS2_SIZE                          0x1
#define _PWM11CLKCON_PWM11CS2_LENGTH                        0x1
#define _PWM11CLKCON_PWM11CS2_MASK                          0x4
#define _PWM11CLKCON_PWM11PS0_POSN                          0x4
#define _PWM11CLKCON_PWM11PS0_POSITION                      0x4
#define _PWM11CLKCON_PWM11PS0_SIZE                          0x1
#define _PWM11CLKCON_PWM11PS0_LENGTH                        0x1
#define _PWM11CLKCON_PWM11PS0_MASK                          0x10
#define _PWM11CLKCON_PWM11PS1_POSN                          0x5
#define _PWM11CLKCON_PWM11PS1_POSITION                      0x5
#define _PWM11CLKCON_PWM11PS1_SIZE                          0x1
#define _PWM11CLKCON_PWM11PS1_LENGTH                        0x1
#define _PWM11CLKCON_PWM11PS1_MASK                          0x20
#define _PWM11CLKCON_PWM11PS2_POSN                          0x6
#define _PWM11CLKCON_PWM11PS2_POSITION                      0x6
#define _PWM11CLKCON_PWM11PS2_SIZE                          0x1
#define _PWM11CLKCON_PWM11PS2_LENGTH                        0x1
#define _PWM11CLKCON_PWM11PS2_MASK                          0x40
#define _PWM11CLKCON_PWM11CS_POSN                           0x0
#define _PWM11CLKCON_PWM11CS_POSITION                       0x0
#define _PWM11CLKCON_PWM11CS_SIZE                           0x3
#define _PWM11CLKCON_PWM11CS_LENGTH                         0x3
#define _PWM11CLKCON_PWM11CS_MASK                           0x7
#define _PWM11CLKCON_PWM11PS_POSN                           0x4
#define _PWM11CLKCON_PWM11PS_POSITION                       0x4
#define _PWM11CLKCON_PWM11PS_SIZE                           0x3
#define _PWM11CLKCON_PWM11PS_LENGTH                         0x3
#define _PWM11CLKCON_PWM11PS_MASK                           0x70
#define _PWM11CLKCON_CS0_POSN                               0x0
#define _PWM11CLKCON_CS0_POSITION                           0x0
#define _PWM11CLKCON_CS0_SIZE                               0x1
#define _PWM11CLKCON_CS0_LENGTH                             0x1
#define _PWM11CLKCON_CS0_MASK                               0x1
#define _PWM11CLKCON_CS1_POSN                               0x1
#define _PWM11CLKCON_CS1_POSITION                           0x1
#define _PWM11CLKCON_CS1_SIZE                               0x1
#define _PWM11CLKCON_CS1_LENGTH                             0x1
#define _PWM11CLKCON_CS1_MASK                               0x2
#define _PWM11CLKCON_CS2_POSN                               0x2
#define _PWM11CLKCON_CS2_POSITION                           0x2
#define _PWM11CLKCON_CS2_SIZE                               0x1
#define _PWM11CLKCON_CS2_LENGTH                             0x1
#define _PWM11CLKCON_CS2_MASK                               0x4
#define _PWM11CLKCON_PS0_POSN                               0x4
#define _PWM11CLKCON_PS0_POSITION                           0x4
#define _PWM11CLKCON_PS0_SIZE                               0x1
#define _PWM11CLKCON_PS0_LENGTH                             0x1
#define _PWM11CLKCON_PS0_MASK                               0x10
#define _PWM11CLKCON_PS1_POSN                               0x5
#define _PWM11CLKCON_PS1_POSITION                           0x5
#define _PWM11CLKCON_PS1_SIZE                               0x1
#define _PWM11CLKCON_PS1_LENGTH                             0x1
#define _PWM11CLKCON_PS1_MASK                               0x20
#define _PWM11CLKCON_PS2_POSN                               0x6
#define _PWM11CLKCON_PS2_POSITION                           0x6
#define _PWM11CLKCON_PS2_SIZE                               0x1
#define _PWM11CLKCON_PS2_LENGTH                             0x1
#define _PWM11CLKCON_PS2_MASK                               0x40

// Register: PWM11LDCON
#define PWM11LDCON PWM11LDCON
extern volatile unsigned char           PWM11LDCON          __at(0xDBF);
#ifndef _LIB_BUILD
asm("PWM11LDCON equ 0DBFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LDS                    :2;
        unsigned                        :4;
        unsigned LDT                    :1;
        unsigned LDA                    :1;
    };
    struct {
        unsigned PWM11LDS0              :1;
        unsigned PWM11LDS1              :1;
    };
    struct {
        unsigned PWM11LDS               :2;
        unsigned                        :4;
        unsigned PWM11LDM               :1;
        unsigned PWM11LD                :1;
    };
    struct {
        unsigned LDS0                   :1;
        unsigned LDS1                   :1;
    };
} PWM11LDCONbits_t;
extern volatile PWM11LDCONbits_t PWM11LDCONbits __at(0xDBF);
// bitfield macros
#define _PWM11LDCON_LDS_POSN                                0x0
#define _PWM11LDCON_LDS_POSITION                            0x0
#define _PWM11LDCON_LDS_SIZE                                0x2
#define _PWM11LDCON_LDS_LENGTH                              0x2
#define _PWM11LDCON_LDS_MASK                                0x3
#define _PWM11LDCON_LDT_POSN                                0x6
#define _PWM11LDCON_LDT_POSITION                            0x6
#define _PWM11LDCON_LDT_SIZE                                0x1
#define _PWM11LDCON_LDT_LENGTH                              0x1
#define _PWM11LDCON_LDT_MASK                                0x40
#define _PWM11LDCON_LDA_POSN                                0x7
#define _PWM11LDCON_LDA_POSITION                            0x7
#define _PWM11LDCON_LDA_SIZE                                0x1
#define _PWM11LDCON_LDA_LENGTH                              0x1
#define _PWM11LDCON_LDA_MASK                                0x80
#define _PWM11LDCON_PWM11LDS0_POSN                          0x0
#define _PWM11LDCON_PWM11LDS0_POSITION                      0x0
#define _PWM11LDCON_PWM11LDS0_SIZE                          0x1
#define _PWM11LDCON_PWM11LDS0_LENGTH                        0x1
#define _PWM11LDCON_PWM11LDS0_MASK                          0x1
#define _PWM11LDCON_PWM11LDS1_POSN                          0x1
#define _PWM11LDCON_PWM11LDS1_POSITION                      0x1
#define _PWM11LDCON_PWM11LDS1_SIZE                          0x1
#define _PWM11LDCON_PWM11LDS1_LENGTH                        0x1
#define _PWM11LDCON_PWM11LDS1_MASK                          0x2
#define _PWM11LDCON_PWM11LDS_POSN                           0x0
#define _PWM11LDCON_PWM11LDS_POSITION                       0x0
#define _PWM11LDCON_PWM11LDS_SIZE                           0x2
#define _PWM11LDCON_PWM11LDS_LENGTH                         0x2
#define _PWM11LDCON_PWM11LDS_MASK                           0x3
#define _PWM11LDCON_PWM11LDM_POSN                           0x6
#define _PWM11LDCON_PWM11LDM_POSITION                       0x6
#define _PWM11LDCON_PWM11LDM_SIZE                           0x1
#define _PWM11LDCON_PWM11LDM_LENGTH                         0x1
#define _PWM11LDCON_PWM11LDM_MASK                           0x40
#define _PWM11LDCON_PWM11LD_POSN                            0x7
#define _PWM11LDCON_PWM11LD_POSITION                        0x7
#define _PWM11LDCON_PWM11LD_SIZE                            0x1
#define _PWM11LDCON_PWM11LD_LENGTH                          0x1
#define _PWM11LDCON_PWM11LD_MASK                            0x80
#define _PWM11LDCON_LDS0_POSN                               0x0
#define _PWM11LDCON_LDS0_POSITION                           0x0
#define _PWM11LDCON_LDS0_SIZE                               0x1
#define _PWM11LDCON_LDS0_LENGTH                             0x1
#define _PWM11LDCON_LDS0_MASK                               0x1
#define _PWM11LDCON_LDS1_POSN                               0x1
#define _PWM11LDCON_LDS1_POSITION                           0x1
#define _PWM11LDCON_LDS1_SIZE                               0x1
#define _PWM11LDCON_LDS1_LENGTH                             0x1
#define _PWM11LDCON_LDS1_MASK                               0x2

// Register: PWM11OFCON
#define PWM11OFCON PWM11OFCON
extern volatile unsigned char           PWM11OFCON          __at(0xDC0);
#ifndef _LIB_BUILD
asm("PWM11OFCON equ 0DC0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OFS                    :2;
        unsigned                        :2;
        unsigned OFO                    :1;
        unsigned OFM                    :2;
    };
    struct {
        unsigned PWM11OFS0              :1;
        unsigned PWM11OFS1              :1;
        unsigned                        :3;
        unsigned PWM11OFM0              :1;
        unsigned PWM11OFM1              :1;
    };
    struct {
        unsigned PWM11OFS               :2;
        unsigned                        :2;
        unsigned PWM11OFMC              :1;
        unsigned PWM11OFM               :2;
    };
    struct {
        unsigned OFS0                   :1;
        unsigned OFS1                   :1;
        unsigned                        :3;
        unsigned OFM0                   :1;
        unsigned OFM1                   :1;
    };
} PWM11OFCONbits_t;
extern volatile PWM11OFCONbits_t PWM11OFCONbits __at(0xDC0);
// bitfield macros
#define _PWM11OFCON_OFS_POSN                                0x0
#define _PWM11OFCON_OFS_POSITION                            0x0
#define _PWM11OFCON_OFS_SIZE                                0x2
#define _PWM11OFCON_OFS_LENGTH                              0x2
#define _PWM11OFCON_OFS_MASK                                0x3
#define _PWM11OFCON_OFO_POSN                                0x4
#define _PWM11OFCON_OFO_POSITION                            0x4
#define _PWM11OFCON_OFO_SIZE                                0x1
#define _PWM11OFCON_OFO_LENGTH                              0x1
#define _PWM11OFCON_OFO_MASK                                0x10
#define _PWM11OFCON_OFM_POSN                                0x5
#define _PWM11OFCON_OFM_POSITION                            0x5
#define _PWM11OFCON_OFM_SIZE                                0x2
#define _PWM11OFCON_OFM_LENGTH                              0x2
#define _PWM11OFCON_OFM_MASK                                0x60
#define _PWM11OFCON_PWM11OFS0_POSN                          0x0
#define _PWM11OFCON_PWM11OFS0_POSITION                      0x0
#define _PWM11OFCON_PWM11OFS0_SIZE                          0x1
#define _PWM11OFCON_PWM11OFS0_LENGTH                        0x1
#define _PWM11OFCON_PWM11OFS0_MASK                          0x1
#define _PWM11OFCON_PWM11OFS1_POSN                          0x1
#define _PWM11OFCON_PWM11OFS1_POSITION                      0x1
#define _PWM11OFCON_PWM11OFS1_SIZE                          0x1
#define _PWM11OFCON_PWM11OFS1_LENGTH                        0x1
#define _PWM11OFCON_PWM11OFS1_MASK                          0x2
#define _PWM11OFCON_PWM11OFM0_POSN                          0x5
#define _PWM11OFCON_PWM11OFM0_POSITION                      0x5
#define _PWM11OFCON_PWM11OFM0_SIZE                          0x1
#define _PWM11OFCON_PWM11OFM0_LENGTH                        0x1
#define _PWM11OFCON_PWM11OFM0_MASK                          0x20
#define _PWM11OFCON_PWM11OFM1_POSN                          0x6
#define _PWM11OFCON_PWM11OFM1_POSITION                      0x6
#define _PWM11OFCON_PWM11OFM1_SIZE                          0x1
#define _PWM11OFCON_PWM11OFM1_LENGTH                        0x1
#define _PWM11OFCON_PWM11OFM1_MASK                          0x40
#define _PWM11OFCON_PWM11OFS_POSN                           0x0
#define _PWM11OFCON_PWM11OFS_POSITION                       0x0
#define _PWM11OFCON_PWM11OFS_SIZE                           0x2
#define _PWM11OFCON_PWM11OFS_LENGTH                         0x2
#define _PWM11OFCON_PWM11OFS_MASK                           0x3
#define _PWM11OFCON_PWM11OFMC_POSN                          0x4
#define _PWM11OFCON_PWM11OFMC_POSITION                      0x4
#define _PWM11OFCON_PWM11OFMC_SIZE                          0x1
#define _PWM11OFCON_PWM11OFMC_LENGTH                        0x1
#define _PWM11OFCON_PWM11OFMC_MASK                          0x10
#define _PWM11OFCON_PWM11OFM_POSN                           0x5
#define _PWM11OFCON_PWM11OFM_POSITION                       0x5
#define _PWM11OFCON_PWM11OFM_SIZE                           0x2
#define _PWM11OFCON_PWM11OFM_LENGTH                         0x2
#define _PWM11OFCON_PWM11OFM_MASK                           0x60
#define _PWM11OFCON_OFS0_POSN                               0x0
#define _PWM11OFCON_OFS0_POSITION                           0x0
#define _PWM11OFCON_OFS0_SIZE                               0x1
#define _PWM11OFCON_OFS0_LENGTH                             0x1
#define _PWM11OFCON_OFS0_MASK                               0x1
#define _PWM11OFCON_OFS1_POSN                               0x1
#define _PWM11OFCON_OFS1_POSITION                           0x1
#define _PWM11OFCON_OFS1_SIZE                               0x1
#define _PWM11OFCON_OFS1_LENGTH                             0x1
#define _PWM11OFCON_OFS1_MASK                               0x2
#define _PWM11OFCON_OFM0_POSN                               0x5
#define _PWM11OFCON_OFM0_POSITION                           0x5
#define _PWM11OFCON_OFM0_SIZE                               0x1
#define _PWM11OFCON_OFM0_LENGTH                             0x1
#define _PWM11OFCON_OFM0_MASK                               0x20
#define _PWM11OFCON_OFM1_POSN                               0x6
#define _PWM11OFCON_OFM1_POSITION                           0x6
#define _PWM11OFCON_OFM1_SIZE                               0x1
#define _PWM11OFCON_OFM1_LENGTH                             0x1
#define _PWM11OFCON_OFM1_MASK                               0x40

// Register: PWM12PH
#define PWM12PH PWM12PH
extern volatile unsigned short          PWM12PH             __at(0xDC1);
#ifndef _LIB_BUILD
asm("PWM12PH equ 0DC1h");
#endif

// Register: PWM12PHL
#define PWM12PHL PWM12PHL
extern volatile unsigned char           PWM12PHL            __at(0xDC1);
#ifndef _LIB_BUILD
asm("PWM12PHL equ 0DC1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PH                     :8;
    };
    struct {
        unsigned PWM12PHL0              :1;
        unsigned PWM12PHL1              :1;
        unsigned PWM12PHL2              :1;
        unsigned PWM12PHL3              :1;
        unsigned PWM12PHL4              :1;
        unsigned PWM12PHL5              :1;
        unsigned PWM12PHL6              :1;
        unsigned PWM12PHL7              :1;
    };
    struct {
        unsigned PWM12PHL               :8;
    };
} PWM12PHLbits_t;
extern volatile PWM12PHLbits_t PWM12PHLbits __at(0xDC1);
// bitfield macros
#define _PWM12PHL_PH_POSN                                   0x0
#define _PWM12PHL_PH_POSITION                               0x0
#define _PWM12PHL_PH_SIZE                                   0x8
#define _PWM12PHL_PH_LENGTH                                 0x8
#define _PWM12PHL_PH_MASK                                   0xFF
#define _PWM12PHL_PWM12PHL0_POSN                            0x0
#define _PWM12PHL_PWM12PHL0_POSITION                        0x0
#define _PWM12PHL_PWM12PHL0_SIZE                            0x1
#define _PWM12PHL_PWM12PHL0_LENGTH                          0x1
#define _PWM12PHL_PWM12PHL0_MASK                            0x1
#define _PWM12PHL_PWM12PHL1_POSN                            0x1
#define _PWM12PHL_PWM12PHL1_POSITION                        0x1
#define _PWM12PHL_PWM12PHL1_SIZE                            0x1
#define _PWM12PHL_PWM12PHL1_LENGTH                          0x1
#define _PWM12PHL_PWM12PHL1_MASK                            0x2
#define _PWM12PHL_PWM12PHL2_POSN                            0x2
#define _PWM12PHL_PWM12PHL2_POSITION                        0x2
#define _PWM12PHL_PWM12PHL2_SIZE                            0x1
#define _PWM12PHL_PWM12PHL2_LENGTH                          0x1
#define _PWM12PHL_PWM12PHL2_MASK                            0x4
#define _PWM12PHL_PWM12PHL3_POSN                            0x3
#define _PWM12PHL_PWM12PHL3_POSITION                        0x3
#define _PWM12PHL_PWM12PHL3_SIZE                            0x1
#define _PWM12PHL_PWM12PHL3_LENGTH                          0x1
#define _PWM12PHL_PWM12PHL3_MASK                            0x8
#define _PWM12PHL_PWM12PHL4_POSN                            0x4
#define _PWM12PHL_PWM12PHL4_POSITION                        0x4
#define _PWM12PHL_PWM12PHL4_SIZE                            0x1
#define _PWM12PHL_PWM12PHL4_LENGTH                          0x1
#define _PWM12PHL_PWM12PHL4_MASK                            0x10
#define _PWM12PHL_PWM12PHL5_POSN                            0x5
#define _PWM12PHL_PWM12PHL5_POSITION                        0x5
#define _PWM12PHL_PWM12PHL5_SIZE                            0x1
#define _PWM12PHL_PWM12PHL5_LENGTH                          0x1
#define _PWM12PHL_PWM12PHL5_MASK                            0x20
#define _PWM12PHL_PWM12PHL6_POSN                            0x6
#define _PWM12PHL_PWM12PHL6_POSITION                        0x6
#define _PWM12PHL_PWM12PHL6_SIZE                            0x1
#define _PWM12PHL_PWM12PHL6_LENGTH                          0x1
#define _PWM12PHL_PWM12PHL6_MASK                            0x40
#define _PWM12PHL_PWM12PHL7_POSN                            0x7
#define _PWM12PHL_PWM12PHL7_POSITION                        0x7
#define _PWM12PHL_PWM12PHL7_SIZE                            0x1
#define _PWM12PHL_PWM12PHL7_LENGTH                          0x1
#define _PWM12PHL_PWM12PHL7_MASK                            0x80
#define _PWM12PHL_PWM12PHL_POSN                             0x0
#define _PWM12PHL_PWM12PHL_POSITION                         0x0
#define _PWM12PHL_PWM12PHL_SIZE                             0x8
#define _PWM12PHL_PWM12PHL_LENGTH                           0x8
#define _PWM12PHL_PWM12PHL_MASK                             0xFF

// Register: PWM12PHH
#define PWM12PHH PWM12PHH
extern volatile unsigned char           PWM12PHH            __at(0xDC2);
#ifndef _LIB_BUILD
asm("PWM12PHH equ 0DC2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PH                     :8;
    };
    struct {
        unsigned PWM12PHH0              :1;
        unsigned PWM12PHH1              :1;
        unsigned PWM12PHH2              :1;
        unsigned PWM12PHH3              :1;
        unsigned PWM12PHH4              :1;
        unsigned PWM12PHH5              :1;
        unsigned PWM12PHH6              :1;
        unsigned PWM12PHH7              :1;
    };
    struct {
        unsigned PWM12PHH               :8;
    };
} PWM12PHHbits_t;
extern volatile PWM12PHHbits_t PWM12PHHbits __at(0xDC2);
// bitfield macros
#define _PWM12PHH_PH_POSN                                   0x0
#define _PWM12PHH_PH_POSITION                               0x0
#define _PWM12PHH_PH_SIZE                                   0x8
#define _PWM12PHH_PH_LENGTH                                 0x8
#define _PWM12PHH_PH_MASK                                   0xFF
#define _PWM12PHH_PWM12PHH0_POSN                            0x0
#define _PWM12PHH_PWM12PHH0_POSITION                        0x0
#define _PWM12PHH_PWM12PHH0_SIZE                            0x1
#define _PWM12PHH_PWM12PHH0_LENGTH                          0x1
#define _PWM12PHH_PWM12PHH0_MASK                            0x1
#define _PWM12PHH_PWM12PHH1_POSN                            0x1
#define _PWM12PHH_PWM12PHH1_POSITION                        0x1
#define _PWM12PHH_PWM12PHH1_SIZE                            0x1
#define _PWM12PHH_PWM12PHH1_LENGTH                          0x1
#define _PWM12PHH_PWM12PHH1_MASK                            0x2
#define _PWM12PHH_PWM12PHH2_POSN                            0x2
#define _PWM12PHH_PWM12PHH2_POSITION                        0x2
#define _PWM12PHH_PWM12PHH2_SIZE                            0x1
#define _PWM12PHH_PWM12PHH2_LENGTH                          0x1
#define _PWM12PHH_PWM12PHH2_MASK                            0x4
#define _PWM12PHH_PWM12PHH3_POSN                            0x3
#define _PWM12PHH_PWM12PHH3_POSITION                        0x3
#define _PWM12PHH_PWM12PHH3_SIZE                            0x1
#define _PWM12PHH_PWM12PHH3_LENGTH                          0x1
#define _PWM12PHH_PWM12PHH3_MASK                            0x8
#define _PWM12PHH_PWM12PHH4_POSN                            0x4
#define _PWM12PHH_PWM12PHH4_POSITION                        0x4
#define _PWM12PHH_PWM12PHH4_SIZE                            0x1
#define _PWM12PHH_PWM12PHH4_LENGTH                          0x1
#define _PWM12PHH_PWM12PHH4_MASK                            0x10
#define _PWM12PHH_PWM12PHH5_POSN                            0x5
#define _PWM12PHH_PWM12PHH5_POSITION                        0x5
#define _PWM12PHH_PWM12PHH5_SIZE                            0x1
#define _PWM12PHH_PWM12PHH5_LENGTH                          0x1
#define _PWM12PHH_PWM12PHH5_MASK                            0x20
#define _PWM12PHH_PWM12PHH6_POSN                            0x6
#define _PWM12PHH_PWM12PHH6_POSITION                        0x6
#define _PWM12PHH_PWM12PHH6_SIZE                            0x1
#define _PWM12PHH_PWM12PHH6_LENGTH                          0x1
#define _PWM12PHH_PWM12PHH6_MASK                            0x40
#define _PWM12PHH_PWM12PHH7_POSN                            0x7
#define _PWM12PHH_PWM12PHH7_POSITION                        0x7
#define _PWM12PHH_PWM12PHH7_SIZE                            0x1
#define _PWM12PHH_PWM12PHH7_LENGTH                          0x1
#define _PWM12PHH_PWM12PHH7_MASK                            0x80
#define _PWM12PHH_PWM12PHH_POSN                             0x0
#define _PWM12PHH_PWM12PHH_POSITION                         0x0
#define _PWM12PHH_PWM12PHH_SIZE                             0x8
#define _PWM12PHH_PWM12PHH_LENGTH                           0x8
#define _PWM12PHH_PWM12PHH_MASK                             0xFF

// Register: PWM12DC
#define PWM12DC PWM12DC
extern volatile unsigned short          PWM12DC             __at(0xDC3);
#ifndef _LIB_BUILD
asm("PWM12DC equ 0DC3h");
#endif

// Register: PWM12DCL
#define PWM12DCL PWM12DCL
extern volatile unsigned char           PWM12DCL            __at(0xDC3);
#ifndef _LIB_BUILD
asm("PWM12DCL equ 0DC3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned PWM12DCL0              :1;
        unsigned PWM12DCL1              :1;
        unsigned PWM12DCL2              :1;
        unsigned PWM12DCL3              :1;
        unsigned PWM12DCL4              :1;
        unsigned PWM12DCL5              :1;
        unsigned PWM12DCL6              :1;
        unsigned PWM12DCL7              :1;
    };
    struct {
        unsigned PWM12DCL               :8;
    };
} PWM12DCLbits_t;
extern volatile PWM12DCLbits_t PWM12DCLbits __at(0xDC3);
// bitfield macros
#define _PWM12DCL_DC_POSN                                   0x0
#define _PWM12DCL_DC_POSITION                               0x0
#define _PWM12DCL_DC_SIZE                                   0x8
#define _PWM12DCL_DC_LENGTH                                 0x8
#define _PWM12DCL_DC_MASK                                   0xFF
#define _PWM12DCL_PWM12DCL0_POSN                            0x0
#define _PWM12DCL_PWM12DCL0_POSITION                        0x0
#define _PWM12DCL_PWM12DCL0_SIZE                            0x1
#define _PWM12DCL_PWM12DCL0_LENGTH                          0x1
#define _PWM12DCL_PWM12DCL0_MASK                            0x1
#define _PWM12DCL_PWM12DCL1_POSN                            0x1
#define _PWM12DCL_PWM12DCL1_POSITION                        0x1
#define _PWM12DCL_PWM12DCL1_SIZE                            0x1
#define _PWM12DCL_PWM12DCL1_LENGTH                          0x1
#define _PWM12DCL_PWM12DCL1_MASK                            0x2
#define _PWM12DCL_PWM12DCL2_POSN                            0x2
#define _PWM12DCL_PWM12DCL2_POSITION                        0x2
#define _PWM12DCL_PWM12DCL2_SIZE                            0x1
#define _PWM12DCL_PWM12DCL2_LENGTH                          0x1
#define _PWM12DCL_PWM12DCL2_MASK                            0x4
#define _PWM12DCL_PWM12DCL3_POSN                            0x3
#define _PWM12DCL_PWM12DCL3_POSITION                        0x3
#define _PWM12DCL_PWM12DCL3_SIZE                            0x1
#define _PWM12DCL_PWM12DCL3_LENGTH                          0x1
#define _PWM12DCL_PWM12DCL3_MASK                            0x8
#define _PWM12DCL_PWM12DCL4_POSN                            0x4
#define _PWM12DCL_PWM12DCL4_POSITION                        0x4
#define _PWM12DCL_PWM12DCL4_SIZE                            0x1
#define _PWM12DCL_PWM12DCL4_LENGTH                          0x1
#define _PWM12DCL_PWM12DCL4_MASK                            0x10
#define _PWM12DCL_PWM12DCL5_POSN                            0x5
#define _PWM12DCL_PWM12DCL5_POSITION                        0x5
#define _PWM12DCL_PWM12DCL5_SIZE                            0x1
#define _PWM12DCL_PWM12DCL5_LENGTH                          0x1
#define _PWM12DCL_PWM12DCL5_MASK                            0x20
#define _PWM12DCL_PWM12DCL6_POSN                            0x6
#define _PWM12DCL_PWM12DCL6_POSITION                        0x6
#define _PWM12DCL_PWM12DCL6_SIZE                            0x1
#define _PWM12DCL_PWM12DCL6_LENGTH                          0x1
#define _PWM12DCL_PWM12DCL6_MASK                            0x40
#define _PWM12DCL_PWM12DCL7_POSN                            0x7
#define _PWM12DCL_PWM12DCL7_POSITION                        0x7
#define _PWM12DCL_PWM12DCL7_SIZE                            0x1
#define _PWM12DCL_PWM12DCL7_LENGTH                          0x1
#define _PWM12DCL_PWM12DCL7_MASK                            0x80
#define _PWM12DCL_PWM12DCL_POSN                             0x0
#define _PWM12DCL_PWM12DCL_POSITION                         0x0
#define _PWM12DCL_PWM12DCL_SIZE                             0x8
#define _PWM12DCL_PWM12DCL_LENGTH                           0x8
#define _PWM12DCL_PWM12DCL_MASK                             0xFF

// Register: PWM12DCH
#define PWM12DCH PWM12DCH
extern volatile unsigned char           PWM12DCH            __at(0xDC4);
#ifndef _LIB_BUILD
asm("PWM12DCH equ 0DC4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DC                     :8;
    };
    struct {
        unsigned PWM12DCH0              :1;
        unsigned PWM12DCH1              :1;
        unsigned PWM12DCH2              :1;
        unsigned PWM12DCH3              :1;
        unsigned PWM12DCH4              :1;
        unsigned PWM12DCH5              :1;
        unsigned PWM12DCH6              :1;
        unsigned PWM12DCH7              :1;
    };
    struct {
        unsigned PWM12DCH               :8;
    };
} PWM12DCHbits_t;
extern volatile PWM12DCHbits_t PWM12DCHbits __at(0xDC4);
// bitfield macros
#define _PWM12DCH_DC_POSN                                   0x0
#define _PWM12DCH_DC_POSITION                               0x0
#define _PWM12DCH_DC_SIZE                                   0x8
#define _PWM12DCH_DC_LENGTH                                 0x8
#define _PWM12DCH_DC_MASK                                   0xFF
#define _PWM12DCH_PWM12DCH0_POSN                            0x0
#define _PWM12DCH_PWM12DCH0_POSITION                        0x0
#define _PWM12DCH_PWM12DCH0_SIZE                            0x1
#define _PWM12DCH_PWM12DCH0_LENGTH                          0x1
#define _PWM12DCH_PWM12DCH0_MASK                            0x1
#define _PWM12DCH_PWM12DCH1_POSN                            0x1
#define _PWM12DCH_PWM12DCH1_POSITION                        0x1
#define _PWM12DCH_PWM12DCH1_SIZE                            0x1
#define _PWM12DCH_PWM12DCH1_LENGTH                          0x1
#define _PWM12DCH_PWM12DCH1_MASK                            0x2
#define _PWM12DCH_PWM12DCH2_POSN                            0x2
#define _PWM12DCH_PWM12DCH2_POSITION                        0x2
#define _PWM12DCH_PWM12DCH2_SIZE                            0x1
#define _PWM12DCH_PWM12DCH2_LENGTH                          0x1
#define _PWM12DCH_PWM12DCH2_MASK                            0x4
#define _PWM12DCH_PWM12DCH3_POSN                            0x3
#define _PWM12DCH_PWM12DCH3_POSITION                        0x3
#define _PWM12DCH_PWM12DCH3_SIZE                            0x1
#define _PWM12DCH_PWM12DCH3_LENGTH                          0x1
#define _PWM12DCH_PWM12DCH3_MASK                            0x8
#define _PWM12DCH_PWM12DCH4_POSN                            0x4
#define _PWM12DCH_PWM12DCH4_POSITION                        0x4
#define _PWM12DCH_PWM12DCH4_SIZE                            0x1
#define _PWM12DCH_PWM12DCH4_LENGTH                          0x1
#define _PWM12DCH_PWM12DCH4_MASK                            0x10
#define _PWM12DCH_PWM12DCH5_POSN                            0x5
#define _PWM12DCH_PWM12DCH5_POSITION                        0x5
#define _PWM12DCH_PWM12DCH5_SIZE                            0x1
#define _PWM12DCH_PWM12DCH5_LENGTH                          0x1
#define _PWM12DCH_PWM12DCH5_MASK                            0x20
#define _PWM12DCH_PWM12DCH6_POSN                            0x6
#define _PWM12DCH_PWM12DCH6_POSITION                        0x6
#define _PWM12DCH_PWM12DCH6_SIZE                            0x1
#define _PWM12DCH_PWM12DCH6_LENGTH                          0x1
#define _PWM12DCH_PWM12DCH6_MASK                            0x40
#define _PWM12DCH_PWM12DCH7_POSN                            0x7
#define _PWM12DCH_PWM12DCH7_POSITION                        0x7
#define _PWM12DCH_PWM12DCH7_SIZE                            0x1
#define _PWM12DCH_PWM12DCH7_LENGTH                          0x1
#define _PWM12DCH_PWM12DCH7_MASK                            0x80
#define _PWM12DCH_PWM12DCH_POSN                             0x0
#define _PWM12DCH_PWM12DCH_POSITION                         0x0
#define _PWM12DCH_PWM12DCH_SIZE                             0x8
#define _PWM12DCH_PWM12DCH_LENGTH                           0x8
#define _PWM12DCH_PWM12DCH_MASK                             0xFF

// Register: PWM12PR
#define PWM12PR PWM12PR
extern volatile unsigned short          PWM12PR             __at(0xDC5);
#ifndef _LIB_BUILD
asm("PWM12PR equ 0DC5h");
#endif

// Register: PWM12PRL
#define PWM12PRL PWM12PRL
extern volatile unsigned char           PWM12PRL            __at(0xDC5);
#ifndef _LIB_BUILD
asm("PWM12PRL equ 0DC5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned PWM12PRL0              :1;
        unsigned PWM12PRL1              :1;
        unsigned PWM12PRL2              :1;
        unsigned PWM12PRL3              :1;
        unsigned PWM12PRL4              :1;
        unsigned PWM12PRL5              :1;
        unsigned PWM12PRL6              :1;
        unsigned PWM12PRL7              :1;
    };
    struct {
        unsigned PWM12PRL               :8;
    };
} PWM12PRLbits_t;
extern volatile PWM12PRLbits_t PWM12PRLbits __at(0xDC5);
// bitfield macros
#define _PWM12PRL_PR_POSN                                   0x0
#define _PWM12PRL_PR_POSITION                               0x0
#define _PWM12PRL_PR_SIZE                                   0x8
#define _PWM12PRL_PR_LENGTH                                 0x8
#define _PWM12PRL_PR_MASK                                   0xFF
#define _PWM12PRL_PWM12PRL0_POSN                            0x0
#define _PWM12PRL_PWM12PRL0_POSITION                        0x0
#define _PWM12PRL_PWM12PRL0_SIZE                            0x1
#define _PWM12PRL_PWM12PRL0_LENGTH                          0x1
#define _PWM12PRL_PWM12PRL0_MASK                            0x1
#define _PWM12PRL_PWM12PRL1_POSN                            0x1
#define _PWM12PRL_PWM12PRL1_POSITION                        0x1
#define _PWM12PRL_PWM12PRL1_SIZE                            0x1
#define _PWM12PRL_PWM12PRL1_LENGTH                          0x1
#define _PWM12PRL_PWM12PRL1_MASK                            0x2
#define _PWM12PRL_PWM12PRL2_POSN                            0x2
#define _PWM12PRL_PWM12PRL2_POSITION                        0x2
#define _PWM12PRL_PWM12PRL2_SIZE                            0x1
#define _PWM12PRL_PWM12PRL2_LENGTH                          0x1
#define _PWM12PRL_PWM12PRL2_MASK                            0x4
#define _PWM12PRL_PWM12PRL3_POSN                            0x3
#define _PWM12PRL_PWM12PRL3_POSITION                        0x3
#define _PWM12PRL_PWM12PRL3_SIZE                            0x1
#define _PWM12PRL_PWM12PRL3_LENGTH                          0x1
#define _PWM12PRL_PWM12PRL3_MASK                            0x8
#define _PWM12PRL_PWM12PRL4_POSN                            0x4
#define _PWM12PRL_PWM12PRL4_POSITION                        0x4
#define _PWM12PRL_PWM12PRL4_SIZE                            0x1
#define _PWM12PRL_PWM12PRL4_LENGTH                          0x1
#define _PWM12PRL_PWM12PRL4_MASK                            0x10
#define _PWM12PRL_PWM12PRL5_POSN                            0x5
#define _PWM12PRL_PWM12PRL5_POSITION                        0x5
#define _PWM12PRL_PWM12PRL5_SIZE                            0x1
#define _PWM12PRL_PWM12PRL5_LENGTH                          0x1
#define _PWM12PRL_PWM12PRL5_MASK                            0x20
#define _PWM12PRL_PWM12PRL6_POSN                            0x6
#define _PWM12PRL_PWM12PRL6_POSITION                        0x6
#define _PWM12PRL_PWM12PRL6_SIZE                            0x1
#define _PWM12PRL_PWM12PRL6_LENGTH                          0x1
#define _PWM12PRL_PWM12PRL6_MASK                            0x40
#define _PWM12PRL_PWM12PRL7_POSN                            0x7
#define _PWM12PRL_PWM12PRL7_POSITION                        0x7
#define _PWM12PRL_PWM12PRL7_SIZE                            0x1
#define _PWM12PRL_PWM12PRL7_LENGTH                          0x1
#define _PWM12PRL_PWM12PRL7_MASK                            0x80
#define _PWM12PRL_PWM12PRL_POSN                             0x0
#define _PWM12PRL_PWM12PRL_POSITION                         0x0
#define _PWM12PRL_PWM12PRL_SIZE                             0x8
#define _PWM12PRL_PWM12PRL_LENGTH                           0x8
#define _PWM12PRL_PWM12PRL_MASK                             0xFF

// Register: PWM12PRH
#define PWM12PRH PWM12PRH
extern volatile unsigned char           PWM12PRH            __at(0xDC6);
#ifndef _LIB_BUILD
asm("PWM12PRH equ 0DC6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR                     :8;
    };
    struct {
        unsigned PWM12PRH0              :1;
        unsigned PWM12PRH1              :1;
        unsigned PWM12PRH2              :1;
        unsigned PWM12PRH3              :1;
        unsigned PWM12PRH4              :1;
        unsigned PWM12PRH5              :1;
        unsigned PWM12PRH6              :1;
        unsigned PWM12PRH7              :1;
    };
    struct {
        unsigned PWM12PRH               :8;
    };
} PWM12PRHbits_t;
extern volatile PWM12PRHbits_t PWM12PRHbits __at(0xDC6);
// bitfield macros
#define _PWM12PRH_PR_POSN                                   0x0
#define _PWM12PRH_PR_POSITION                               0x0
#define _PWM12PRH_PR_SIZE                                   0x8
#define _PWM12PRH_PR_LENGTH                                 0x8
#define _PWM12PRH_PR_MASK                                   0xFF
#define _PWM12PRH_PWM12PRH0_POSN                            0x0
#define _PWM12PRH_PWM12PRH0_POSITION                        0x0
#define _PWM12PRH_PWM12PRH0_SIZE                            0x1
#define _PWM12PRH_PWM12PRH0_LENGTH                          0x1
#define _PWM12PRH_PWM12PRH0_MASK                            0x1
#define _PWM12PRH_PWM12PRH1_POSN                            0x1
#define _PWM12PRH_PWM12PRH1_POSITION                        0x1
#define _PWM12PRH_PWM12PRH1_SIZE                            0x1
#define _PWM12PRH_PWM12PRH1_LENGTH                          0x1
#define _PWM12PRH_PWM12PRH1_MASK                            0x2
#define _PWM12PRH_PWM12PRH2_POSN                            0x2
#define _PWM12PRH_PWM12PRH2_POSITION                        0x2
#define _PWM12PRH_PWM12PRH2_SIZE                            0x1
#define _PWM12PRH_PWM12PRH2_LENGTH                          0x1
#define _PWM12PRH_PWM12PRH2_MASK                            0x4
#define _PWM12PRH_PWM12PRH3_POSN                            0x3
#define _PWM12PRH_PWM12PRH3_POSITION                        0x3
#define _PWM12PRH_PWM12PRH3_SIZE                            0x1
#define _PWM12PRH_PWM12PRH3_LENGTH                          0x1
#define _PWM12PRH_PWM12PRH3_MASK                            0x8
#define _PWM12PRH_PWM12PRH4_POSN                            0x4
#define _PWM12PRH_PWM12PRH4_POSITION                        0x4
#define _PWM12PRH_PWM12PRH4_SIZE                            0x1
#define _PWM12PRH_PWM12PRH4_LENGTH                          0x1
#define _PWM12PRH_PWM12PRH4_MASK                            0x10
#define _PWM12PRH_PWM12PRH5_POSN                            0x5
#define _PWM12PRH_PWM12PRH5_POSITION                        0x5
#define _PWM12PRH_PWM12PRH5_SIZE                            0x1
#define _PWM12PRH_PWM12PRH5_LENGTH                          0x1
#define _PWM12PRH_PWM12PRH5_MASK                            0x20
#define _PWM12PRH_PWM12PRH6_POSN                            0x6
#define _PWM12PRH_PWM12PRH6_POSITION                        0x6
#define _PWM12PRH_PWM12PRH6_SIZE                            0x1
#define _PWM12PRH_PWM12PRH6_LENGTH                          0x1
#define _PWM12PRH_PWM12PRH6_MASK                            0x40
#define _PWM12PRH_PWM12PRH7_POSN                            0x7
#define _PWM12PRH_PWM12PRH7_POSITION                        0x7
#define _PWM12PRH_PWM12PRH7_SIZE                            0x1
#define _PWM12PRH_PWM12PRH7_LENGTH                          0x1
#define _PWM12PRH_PWM12PRH7_MASK                            0x80
#define _PWM12PRH_PWM12PRH_POSN                             0x0
#define _PWM12PRH_PWM12PRH_POSITION                         0x0
#define _PWM12PRH_PWM12PRH_SIZE                             0x8
#define _PWM12PRH_PWM12PRH_LENGTH                           0x8
#define _PWM12PRH_PWM12PRH_MASK                             0xFF

// Register: PWM12OF
#define PWM12OF PWM12OF
extern volatile unsigned short          PWM12OF             __at(0xDC7);
#ifndef _LIB_BUILD
asm("PWM12OF equ 0DC7h");
#endif

// Register: PWM12OFL
#define PWM12OFL PWM12OFL
extern volatile unsigned char           PWM12OFL            __at(0xDC7);
#ifndef _LIB_BUILD
asm("PWM12OFL equ 0DC7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OF                     :8;
    };
    struct {
        unsigned PWM12OFL0              :1;
        unsigned PWM12OFL1              :1;
        unsigned PWM12OFL2              :1;
        unsigned PWM12OFL3              :1;
        unsigned PWM12OFL4              :1;
        unsigned PWM12OFL5              :1;
        unsigned PWM12OFL6              :1;
        unsigned PWM12OFL7              :1;
    };
    struct {
        unsigned PWM12OFL               :8;
    };
} PWM12OFLbits_t;
extern volatile PWM12OFLbits_t PWM12OFLbits __at(0xDC7);
// bitfield macros
#define _PWM12OFL_OF_POSN                                   0x0
#define _PWM12OFL_OF_POSITION                               0x0
#define _PWM12OFL_OF_SIZE                                   0x8
#define _PWM12OFL_OF_LENGTH                                 0x8
#define _PWM12OFL_OF_MASK                                   0xFF
#define _PWM12OFL_PWM12OFL0_POSN                            0x0
#define _PWM12OFL_PWM12OFL0_POSITION                        0x0
#define _PWM12OFL_PWM12OFL0_SIZE                            0x1
#define _PWM12OFL_PWM12OFL0_LENGTH                          0x1
#define _PWM12OFL_PWM12OFL0_MASK                            0x1
#define _PWM12OFL_PWM12OFL1_POSN                            0x1
#define _PWM12OFL_PWM12OFL1_POSITION                        0x1
#define _PWM12OFL_PWM12OFL1_SIZE                            0x1
#define _PWM12OFL_PWM12OFL1_LENGTH                          0x1
#define _PWM12OFL_PWM12OFL1_MASK                            0x2
#define _PWM12OFL_PWM12OFL2_POSN                            0x2
#define _PWM12OFL_PWM12OFL2_POSITION                        0x2
#define _PWM12OFL_PWM12OFL2_SIZE                            0x1
#define _PWM12OFL_PWM12OFL2_LENGTH                          0x1
#define _PWM12OFL_PWM12OFL2_MASK                            0x4
#define _PWM12OFL_PWM12OFL3_POSN                            0x3
#define _PWM12OFL_PWM12OFL3_POSITION                        0x3
#define _PWM12OFL_PWM12OFL3_SIZE                            0x1
#define _PWM12OFL_PWM12OFL3_LENGTH                          0x1
#define _PWM12OFL_PWM12OFL3_MASK                            0x8
#define _PWM12OFL_PWM12OFL4_POSN                            0x4
#define _PWM12OFL_PWM12OFL4_POSITION                        0x4
#define _PWM12OFL_PWM12OFL4_SIZE                            0x1
#define _PWM12OFL_PWM12OFL4_LENGTH                          0x1
#define _PWM12OFL_PWM12OFL4_MASK                            0x10
#define _PWM12OFL_PWM12OFL5_POSN                            0x5
#define _PWM12OFL_PWM12OFL5_POSITION                        0x5
#define _PWM12OFL_PWM12OFL5_SIZE                            0x1
#define _PWM12OFL_PWM12OFL5_LENGTH                          0x1
#define _PWM12OFL_PWM12OFL5_MASK                            0x20
#define _PWM12OFL_PWM12OFL6_POSN                            0x6
#define _PWM12OFL_PWM12OFL6_POSITION                        0x6
#define _PWM12OFL_PWM12OFL6_SIZE                            0x1
#define _PWM12OFL_PWM12OFL6_LENGTH                          0x1
#define _PWM12OFL_PWM12OFL6_MASK                            0x40
#define _PWM12OFL_PWM12OFL7_POSN                            0x7
#define _PWM12OFL_PWM12OFL7_POSITION                        0x7
#define _PWM12OFL_PWM12OFL7_SIZE                            0x1
#define _PWM12OFL_PWM12OFL7_LENGTH                          0x1
#define _PWM12OFL_PWM12OFL7_MASK                            0x80
#define _PWM12OFL_PWM12OFL_POSN                             0x0
#define _PWM12OFL_PWM12OFL_POSITION                         0x0
#define _PWM12OFL_PWM12OFL_SIZE                             0x8
#define _PWM12OFL_PWM12OFL_LENGTH                           0x8
#define _PWM12OFL_PWM12OFL_MASK                             0xFF

// Register: PWM12OFH
#define PWM12OFH PWM12OFH
extern volatile unsigned char           PWM12OFH            __at(0xDC8);
#ifndef _LIB_BUILD
asm("PWM12OFH equ 0DC8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OF                     :8;
    };
    struct {
        unsigned PWM12OFH0              :1;
        unsigned PWM12OFH1              :1;
        unsigned PWM12OFH2              :1;
        unsigned PWM12OFH3              :1;
        unsigned PWM12OFH4              :1;
        unsigned PWM12OFH5              :1;
        unsigned PWM12OFH6              :1;
        unsigned PWM12OFH7              :1;
    };
    struct {
        unsigned PWM12OFH               :8;
    };
} PWM12OFHbits_t;
extern volatile PWM12OFHbits_t PWM12OFHbits __at(0xDC8);
// bitfield macros
#define _PWM12OFH_OF_POSN                                   0x0
#define _PWM12OFH_OF_POSITION                               0x0
#define _PWM12OFH_OF_SIZE                                   0x8
#define _PWM12OFH_OF_LENGTH                                 0x8
#define _PWM12OFH_OF_MASK                                   0xFF
#define _PWM12OFH_PWM12OFH0_POSN                            0x0
#define _PWM12OFH_PWM12OFH0_POSITION                        0x0
#define _PWM12OFH_PWM12OFH0_SIZE                            0x1
#define _PWM12OFH_PWM12OFH0_LENGTH                          0x1
#define _PWM12OFH_PWM12OFH0_MASK                            0x1
#define _PWM12OFH_PWM12OFH1_POSN                            0x1
#define _PWM12OFH_PWM12OFH1_POSITION                        0x1
#define _PWM12OFH_PWM12OFH1_SIZE                            0x1
#define _PWM12OFH_PWM12OFH1_LENGTH                          0x1
#define _PWM12OFH_PWM12OFH1_MASK                            0x2
#define _PWM12OFH_PWM12OFH2_POSN                            0x2
#define _PWM12OFH_PWM12OFH2_POSITION                        0x2
#define _PWM12OFH_PWM12OFH2_SIZE                            0x1
#define _PWM12OFH_PWM12OFH2_LENGTH                          0x1
#define _PWM12OFH_PWM12OFH2_MASK                            0x4
#define _PWM12OFH_PWM12OFH3_POSN                            0x3
#define _PWM12OFH_PWM12OFH3_POSITION                        0x3
#define _PWM12OFH_PWM12OFH3_SIZE                            0x1
#define _PWM12OFH_PWM12OFH3_LENGTH                          0x1
#define _PWM12OFH_PWM12OFH3_MASK                            0x8
#define _PWM12OFH_PWM12OFH4_POSN                            0x4
#define _PWM12OFH_PWM12OFH4_POSITION                        0x4
#define _PWM12OFH_PWM12OFH4_SIZE                            0x1
#define _PWM12OFH_PWM12OFH4_LENGTH                          0x1
#define _PWM12OFH_PWM12OFH4_MASK                            0x10
#define _PWM12OFH_PWM12OFH5_POSN                            0x5
#define _PWM12OFH_PWM12OFH5_POSITION                        0x5
#define _PWM12OFH_PWM12OFH5_SIZE                            0x1
#define _PWM12OFH_PWM12OFH5_LENGTH                          0x1
#define _PWM12OFH_PWM12OFH5_MASK                            0x20
#define _PWM12OFH_PWM12OFH6_POSN                            0x6
#define _PWM12OFH_PWM12OFH6_POSITION                        0x6
#define _PWM12OFH_PWM12OFH6_SIZE                            0x1
#define _PWM12OFH_PWM12OFH6_LENGTH                          0x1
#define _PWM12OFH_PWM12OFH6_MASK                            0x40
#define _PWM12OFH_PWM12OFH7_POSN                            0x7
#define _PWM12OFH_PWM12OFH7_POSITION                        0x7
#define _PWM12OFH_PWM12OFH7_SIZE                            0x1
#define _PWM12OFH_PWM12OFH7_LENGTH                          0x1
#define _PWM12OFH_PWM12OFH7_MASK                            0x80
#define _PWM12OFH_PWM12OFH_POSN                             0x0
#define _PWM12OFH_PWM12OFH_POSITION                         0x0
#define _PWM12OFH_PWM12OFH_SIZE                             0x8
#define _PWM12OFH_PWM12OFH_LENGTH                           0x8
#define _PWM12OFH_PWM12OFH_MASK                             0xFF

// Register: PWM12TMR
#define PWM12TMR PWM12TMR
extern volatile unsigned short          PWM12TMR            __at(0xDC9);
#ifndef _LIB_BUILD
asm("PWM12TMR equ 0DC9h");
#endif

// Register: PWM12TMRL
#define PWM12TMRL PWM12TMRL
extern volatile unsigned char           PWM12TMRL           __at(0xDC9);
#ifndef _LIB_BUILD
asm("PWM12TMRL equ 0DC9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned PWM12TMRL0             :1;
        unsigned PWM12TMRL1             :1;
        unsigned PWM12TMRL2             :1;
        unsigned PWM12TMRL3             :1;
        unsigned PWM12TMRL4             :1;
        unsigned PWM12TMRL5             :1;
        unsigned PWM12TMRL6             :1;
        unsigned PWM12TMRL7             :1;
    };
    struct {
        unsigned PWM12TMRL              :8;
    };
} PWM12TMRLbits_t;
extern volatile PWM12TMRLbits_t PWM12TMRLbits __at(0xDC9);
// bitfield macros
#define _PWM12TMRL_TMR_POSN                                 0x0
#define _PWM12TMRL_TMR_POSITION                             0x0
#define _PWM12TMRL_TMR_SIZE                                 0x8
#define _PWM12TMRL_TMR_LENGTH                               0x8
#define _PWM12TMRL_TMR_MASK                                 0xFF
#define _PWM12TMRL_PWM12TMRL0_POSN                          0x0
#define _PWM12TMRL_PWM12TMRL0_POSITION                      0x0
#define _PWM12TMRL_PWM12TMRL0_SIZE                          0x1
#define _PWM12TMRL_PWM12TMRL0_LENGTH                        0x1
#define _PWM12TMRL_PWM12TMRL0_MASK                          0x1
#define _PWM12TMRL_PWM12TMRL1_POSN                          0x1
#define _PWM12TMRL_PWM12TMRL1_POSITION                      0x1
#define _PWM12TMRL_PWM12TMRL1_SIZE                          0x1
#define _PWM12TMRL_PWM12TMRL1_LENGTH                        0x1
#define _PWM12TMRL_PWM12TMRL1_MASK                          0x2
#define _PWM12TMRL_PWM12TMRL2_POSN                          0x2
#define _PWM12TMRL_PWM12TMRL2_POSITION                      0x2
#define _PWM12TMRL_PWM12TMRL2_SIZE                          0x1
#define _PWM12TMRL_PWM12TMRL2_LENGTH                        0x1
#define _PWM12TMRL_PWM12TMRL2_MASK                          0x4
#define _PWM12TMRL_PWM12TMRL3_POSN                          0x3
#define _PWM12TMRL_PWM12TMRL3_POSITION                      0x3
#define _PWM12TMRL_PWM12TMRL3_SIZE                          0x1
#define _PWM12TMRL_PWM12TMRL3_LENGTH                        0x1
#define _PWM12TMRL_PWM12TMRL3_MASK                          0x8
#define _PWM12TMRL_PWM12TMRL4_POSN                          0x4
#define _PWM12TMRL_PWM12TMRL4_POSITION                      0x4
#define _PWM12TMRL_PWM12TMRL4_SIZE                          0x1
#define _PWM12TMRL_PWM12TMRL4_LENGTH                        0x1
#define _PWM12TMRL_PWM12TMRL4_MASK                          0x10
#define _PWM12TMRL_PWM12TMRL5_POSN                          0x5
#define _PWM12TMRL_PWM12TMRL5_POSITION                      0x5
#define _PWM12TMRL_PWM12TMRL5_SIZE                          0x1
#define _PWM12TMRL_PWM12TMRL5_LENGTH                        0x1
#define _PWM12TMRL_PWM12TMRL5_MASK                          0x20
#define _PWM12TMRL_PWM12TMRL6_POSN                          0x6
#define _PWM12TMRL_PWM12TMRL6_POSITION                      0x6
#define _PWM12TMRL_PWM12TMRL6_SIZE                          0x1
#define _PWM12TMRL_PWM12TMRL6_LENGTH                        0x1
#define _PWM12TMRL_PWM12TMRL6_MASK                          0x40
#define _PWM12TMRL_PWM12TMRL7_POSN                          0x7
#define _PWM12TMRL_PWM12TMRL7_POSITION                      0x7
#define _PWM12TMRL_PWM12TMRL7_SIZE                          0x1
#define _PWM12TMRL_PWM12TMRL7_LENGTH                        0x1
#define _PWM12TMRL_PWM12TMRL7_MASK                          0x80
#define _PWM12TMRL_PWM12TMRL_POSN                           0x0
#define _PWM12TMRL_PWM12TMRL_POSITION                       0x0
#define _PWM12TMRL_PWM12TMRL_SIZE                           0x8
#define _PWM12TMRL_PWM12TMRL_LENGTH                         0x8
#define _PWM12TMRL_PWM12TMRL_MASK                           0xFF

// Register: PWM12TMRH
#define PWM12TMRH PWM12TMRH
extern volatile unsigned char           PWM12TMRH           __at(0xDCA);
#ifndef _LIB_BUILD
asm("PWM12TMRH equ 0DCAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR                    :8;
    };
    struct {
        unsigned PWM12TMRH0             :1;
        unsigned PWM12TMRH1             :1;
        unsigned PWM12TMRH2             :1;
        unsigned PWM12TMRH3             :1;
        unsigned PWM12TMRH4             :1;
        unsigned PWM12TMRH5             :1;
        unsigned PWM12TMRH6             :1;
        unsigned PWM12TMRH7             :1;
    };
    struct {
        unsigned PWM12TMRH              :8;
    };
} PWM12TMRHbits_t;
extern volatile PWM12TMRHbits_t PWM12TMRHbits __at(0xDCA);
// bitfield macros
#define _PWM12TMRH_TMR_POSN                                 0x0
#define _PWM12TMRH_TMR_POSITION                             0x0
#define _PWM12TMRH_TMR_SIZE                                 0x8
#define _PWM12TMRH_TMR_LENGTH                               0x8
#define _PWM12TMRH_TMR_MASK                                 0xFF
#define _PWM12TMRH_PWM12TMRH0_POSN                          0x0
#define _PWM12TMRH_PWM12TMRH0_POSITION                      0x0
#define _PWM12TMRH_PWM12TMRH0_SIZE                          0x1
#define _PWM12TMRH_PWM12TMRH0_LENGTH                        0x1
#define _PWM12TMRH_PWM12TMRH0_MASK                          0x1
#define _PWM12TMRH_PWM12TMRH1_POSN                          0x1
#define _PWM12TMRH_PWM12TMRH1_POSITION                      0x1
#define _PWM12TMRH_PWM12TMRH1_SIZE                          0x1
#define _PWM12TMRH_PWM12TMRH1_LENGTH                        0x1
#define _PWM12TMRH_PWM12TMRH1_MASK                          0x2
#define _PWM12TMRH_PWM12TMRH2_POSN                          0x2
#define _PWM12TMRH_PWM12TMRH2_POSITION                      0x2
#define _PWM12TMRH_PWM12TMRH2_SIZE                          0x1
#define _PWM12TMRH_PWM12TMRH2_LENGTH                        0x1
#define _PWM12TMRH_PWM12TMRH2_MASK                          0x4
#define _PWM12TMRH_PWM12TMRH3_POSN                          0x3
#define _PWM12TMRH_PWM12TMRH3_POSITION                      0x3
#define _PWM12TMRH_PWM12TMRH3_SIZE                          0x1
#define _PWM12TMRH_PWM12TMRH3_LENGTH                        0x1
#define _PWM12TMRH_PWM12TMRH3_MASK                          0x8
#define _PWM12TMRH_PWM12TMRH4_POSN                          0x4
#define _PWM12TMRH_PWM12TMRH4_POSITION                      0x4
#define _PWM12TMRH_PWM12TMRH4_SIZE                          0x1
#define _PWM12TMRH_PWM12TMRH4_LENGTH                        0x1
#define _PWM12TMRH_PWM12TMRH4_MASK                          0x10
#define _PWM12TMRH_PWM12TMRH5_POSN                          0x5
#define _PWM12TMRH_PWM12TMRH5_POSITION                      0x5
#define _PWM12TMRH_PWM12TMRH5_SIZE                          0x1
#define _PWM12TMRH_PWM12TMRH5_LENGTH                        0x1
#define _PWM12TMRH_PWM12TMRH5_MASK                          0x20
#define _PWM12TMRH_PWM12TMRH6_POSN                          0x6
#define _PWM12TMRH_PWM12TMRH6_POSITION                      0x6
#define _PWM12TMRH_PWM12TMRH6_SIZE                          0x1
#define _PWM12TMRH_PWM12TMRH6_LENGTH                        0x1
#define _PWM12TMRH_PWM12TMRH6_MASK                          0x40
#define _PWM12TMRH_PWM12TMRH7_POSN                          0x7
#define _PWM12TMRH_PWM12TMRH7_POSITION                      0x7
#define _PWM12TMRH_PWM12TMRH7_SIZE                          0x1
#define _PWM12TMRH_PWM12TMRH7_LENGTH                        0x1
#define _PWM12TMRH_PWM12TMRH7_MASK                          0x80
#define _PWM12TMRH_PWM12TMRH_POSN                           0x0
#define _PWM12TMRH_PWM12TMRH_POSITION                       0x0
#define _PWM12TMRH_PWM12TMRH_SIZE                           0x8
#define _PWM12TMRH_PWM12TMRH_LENGTH                         0x8
#define _PWM12TMRH_PWM12TMRH_MASK                           0xFF

// Register: PWM12CON
#define PWM12CON PWM12CON
extern volatile unsigned char           PWM12CON            __at(0xDCB);
#ifndef _LIB_BUILD
asm("PWM12CON equ 0DCBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned MODE                   :2;
        unsigned POL                    :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned PWM12MODE0             :1;
        unsigned PWM12MODE1             :1;
    };
    struct {
        unsigned                        :2;
        unsigned PWM12MODE              :2;
        unsigned PWM12POL               :1;
        unsigned PWM12OUT               :1;
        unsigned                        :1;
        unsigned PWM12EN                :1;
    };
    struct {
        unsigned                        :2;
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
    };
} PWM12CONbits_t;
extern volatile PWM12CONbits_t PWM12CONbits __at(0xDCB);
// bitfield macros
#define _PWM12CON_MODE_POSN                                 0x2
#define _PWM12CON_MODE_POSITION                             0x2
#define _PWM12CON_MODE_SIZE                                 0x2
#define _PWM12CON_MODE_LENGTH                               0x2
#define _PWM12CON_MODE_MASK                                 0xC
#define _PWM12CON_POL_POSN                                  0x4
#define _PWM12CON_POL_POSITION                              0x4
#define _PWM12CON_POL_SIZE                                  0x1
#define _PWM12CON_POL_LENGTH                                0x1
#define _PWM12CON_POL_MASK                                  0x10
#define _PWM12CON_OUT_POSN                                  0x5
#define _PWM12CON_OUT_POSITION                              0x5
#define _PWM12CON_OUT_SIZE                                  0x1
#define _PWM12CON_OUT_LENGTH                                0x1
#define _PWM12CON_OUT_MASK                                  0x20
#define _PWM12CON_EN_POSN                                   0x7
#define _PWM12CON_EN_POSITION                               0x7
#define _PWM12CON_EN_SIZE                                   0x1
#define _PWM12CON_EN_LENGTH                                 0x1
#define _PWM12CON_EN_MASK                                   0x80
#define _PWM12CON_PWM12MODE0_POSN                           0x2
#define _PWM12CON_PWM12MODE0_POSITION                       0x2
#define _PWM12CON_PWM12MODE0_SIZE                           0x1
#define _PWM12CON_PWM12MODE0_LENGTH                         0x1
#define _PWM12CON_PWM12MODE0_MASK                           0x4
#define _PWM12CON_PWM12MODE1_POSN                           0x3
#define _PWM12CON_PWM12MODE1_POSITION                       0x3
#define _PWM12CON_PWM12MODE1_SIZE                           0x1
#define _PWM12CON_PWM12MODE1_LENGTH                         0x1
#define _PWM12CON_PWM12MODE1_MASK                           0x8
#define _PWM12CON_PWM12MODE_POSN                            0x2
#define _PWM12CON_PWM12MODE_POSITION                        0x2
#define _PWM12CON_PWM12MODE_SIZE                            0x2
#define _PWM12CON_PWM12MODE_LENGTH                          0x2
#define _PWM12CON_PWM12MODE_MASK                            0xC
#define _PWM12CON_PWM12POL_POSN                             0x4
#define _PWM12CON_PWM12POL_POSITION                         0x4
#define _PWM12CON_PWM12POL_SIZE                             0x1
#define _PWM12CON_PWM12POL_LENGTH                           0x1
#define _PWM12CON_PWM12POL_MASK                             0x10
#define _PWM12CON_PWM12OUT_POSN                             0x5
#define _PWM12CON_PWM12OUT_POSITION                         0x5
#define _PWM12CON_PWM12OUT_SIZE                             0x1
#define _PWM12CON_PWM12OUT_LENGTH                           0x1
#define _PWM12CON_PWM12OUT_MASK                             0x20
#define _PWM12CON_PWM12EN_POSN                              0x7
#define _PWM12CON_PWM12EN_POSITION                          0x7
#define _PWM12CON_PWM12EN_SIZE                              0x1
#define _PWM12CON_PWM12EN_LENGTH                            0x1
#define _PWM12CON_PWM12EN_MASK                              0x80
#define _PWM12CON_MODE0_POSN                                0x2
#define _PWM12CON_MODE0_POSITION                            0x2
#define _PWM12CON_MODE0_SIZE                                0x1
#define _PWM12CON_MODE0_LENGTH                              0x1
#define _PWM12CON_MODE0_MASK                                0x4
#define _PWM12CON_MODE1_POSN                                0x3
#define _PWM12CON_MODE1_POSITION                            0x3
#define _PWM12CON_MODE1_SIZE                                0x1
#define _PWM12CON_MODE1_LENGTH                              0x1
#define _PWM12CON_MODE1_MASK                                0x8

// Register: PWM12INTE
#define PWM12INTE PWM12INTE
extern volatile unsigned char           PWM12INTE           __at(0xDCC);
#ifndef _LIB_BUILD
asm("PWM12INTE equ 0DCCh");
#endif
// aliases
extern volatile unsigned char           PWM12INTCON         __at(0xDCC);
#ifndef _LIB_BUILD
asm("PWM12INTCON equ 0DCCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRIE                   :1;
        unsigned DCIE                   :1;
        unsigned PHIE                   :1;
        unsigned OFIE                   :1;
    };
    struct {
        unsigned PWM12PRIE              :1;
        unsigned PWM12DCIE              :1;
        unsigned PWM12PHIE              :1;
        unsigned PWM12OFIE              :1;
    };
} PWM12INTEbits_t;
extern volatile PWM12INTEbits_t PWM12INTEbits __at(0xDCC);
// bitfield macros
#define _PWM12INTE_PRIE_POSN                                0x0
#define _PWM12INTE_PRIE_POSITION                            0x0
#define _PWM12INTE_PRIE_SIZE                                0x1
#define _PWM12INTE_PRIE_LENGTH                              0x1
#define _PWM12INTE_PRIE_MASK                                0x1
#define _PWM12INTE_DCIE_POSN                                0x1
#define _PWM12INTE_DCIE_POSITION                            0x1
#define _PWM12INTE_DCIE_SIZE                                0x1
#define _PWM12INTE_DCIE_LENGTH                              0x1
#define _PWM12INTE_DCIE_MASK                                0x2
#define _PWM12INTE_PHIE_POSN                                0x2
#define _PWM12INTE_PHIE_POSITION                            0x2
#define _PWM12INTE_PHIE_SIZE                                0x1
#define _PWM12INTE_PHIE_LENGTH                              0x1
#define _PWM12INTE_PHIE_MASK                                0x4
#define _PWM12INTE_OFIE_POSN                                0x3
#define _PWM12INTE_OFIE_POSITION                            0x3
#define _PWM12INTE_OFIE_SIZE                                0x1
#define _PWM12INTE_OFIE_LENGTH                              0x1
#define _PWM12INTE_OFIE_MASK                                0x8
#define _PWM12INTE_PWM12PRIE_POSN                           0x0
#define _PWM12INTE_PWM12PRIE_POSITION                       0x0
#define _PWM12INTE_PWM12PRIE_SIZE                           0x1
#define _PWM12INTE_PWM12PRIE_LENGTH                         0x1
#define _PWM12INTE_PWM12PRIE_MASK                           0x1
#define _PWM12INTE_PWM12DCIE_POSN                           0x1
#define _PWM12INTE_PWM12DCIE_POSITION                       0x1
#define _PWM12INTE_PWM12DCIE_SIZE                           0x1
#define _PWM12INTE_PWM12DCIE_LENGTH                         0x1
#define _PWM12INTE_PWM12DCIE_MASK                           0x2
#define _PWM12INTE_PWM12PHIE_POSN                           0x2
#define _PWM12INTE_PWM12PHIE_POSITION                       0x2
#define _PWM12INTE_PWM12PHIE_SIZE                           0x1
#define _PWM12INTE_PWM12PHIE_LENGTH                         0x1
#define _PWM12INTE_PWM12PHIE_MASK                           0x4
#define _PWM12INTE_PWM12OFIE_POSN                           0x3
#define _PWM12INTE_PWM12OFIE_POSITION                       0x3
#define _PWM12INTE_PWM12OFIE_SIZE                           0x1
#define _PWM12INTE_PWM12OFIE_LENGTH                         0x1
#define _PWM12INTE_PWM12OFIE_MASK                           0x8
// alias bitfield definitions
typedef union {
    struct {
        unsigned PRIE                   :1;
        unsigned DCIE                   :1;
        unsigned PHIE                   :1;
        unsigned OFIE                   :1;
    };
    struct {
        unsigned PWM12PRIE              :1;
        unsigned PWM12DCIE              :1;
        unsigned PWM12PHIE              :1;
        unsigned PWM12OFIE              :1;
    };
} PWM12INTCONbits_t;
extern volatile PWM12INTCONbits_t PWM12INTCONbits __at(0xDCC);
// bitfield macros
#define _PWM12INTCON_PRIE_POSN                              0x0
#define _PWM12INTCON_PRIE_POSITION                          0x0
#define _PWM12INTCON_PRIE_SIZE                              0x1
#define _PWM12INTCON_PRIE_LENGTH                            0x1
#define _PWM12INTCON_PRIE_MASK                              0x1
#define _PWM12INTCON_DCIE_POSN                              0x1
#define _PWM12INTCON_DCIE_POSITION                          0x1
#define _PWM12INTCON_DCIE_SIZE                              0x1
#define _PWM12INTCON_DCIE_LENGTH                            0x1
#define _PWM12INTCON_DCIE_MASK                              0x2
#define _PWM12INTCON_PHIE_POSN                              0x2
#define _PWM12INTCON_PHIE_POSITION                          0x2
#define _PWM12INTCON_PHIE_SIZE                              0x1
#define _PWM12INTCON_PHIE_LENGTH                            0x1
#define _PWM12INTCON_PHIE_MASK                              0x4
#define _PWM12INTCON_OFIE_POSN                              0x3
#define _PWM12INTCON_OFIE_POSITION                          0x3
#define _PWM12INTCON_OFIE_SIZE                              0x1
#define _PWM12INTCON_OFIE_LENGTH                            0x1
#define _PWM12INTCON_OFIE_MASK                              0x8
#define _PWM12INTCON_PWM12PRIE_POSN                         0x0
#define _PWM12INTCON_PWM12PRIE_POSITION                     0x0
#define _PWM12INTCON_PWM12PRIE_SIZE                         0x1
#define _PWM12INTCON_PWM12PRIE_LENGTH                       0x1
#define _PWM12INTCON_PWM12PRIE_MASK                         0x1
#define _PWM12INTCON_PWM12DCIE_POSN                         0x1
#define _PWM12INTCON_PWM12DCIE_POSITION                     0x1
#define _PWM12INTCON_PWM12DCIE_SIZE                         0x1
#define _PWM12INTCON_PWM12DCIE_LENGTH                       0x1
#define _PWM12INTCON_PWM12DCIE_MASK                         0x2
#define _PWM12INTCON_PWM12PHIE_POSN                         0x2
#define _PWM12INTCON_PWM12PHIE_POSITION                     0x2
#define _PWM12INTCON_PWM12PHIE_SIZE                         0x1
#define _PWM12INTCON_PWM12PHIE_LENGTH                       0x1
#define _PWM12INTCON_PWM12PHIE_MASK                         0x4
#define _PWM12INTCON_PWM12OFIE_POSN                         0x3
#define _PWM12INTCON_PWM12OFIE_POSITION                     0x3
#define _PWM12INTCON_PWM12OFIE_SIZE                         0x1
#define _PWM12INTCON_PWM12OFIE_LENGTH                       0x1
#define _PWM12INTCON_PWM12OFIE_MASK                         0x8

// Register: PWM12INTF
#define PWM12INTF PWM12INTF
extern volatile unsigned char           PWM12INTF           __at(0xDCD);
#ifndef _LIB_BUILD
asm("PWM12INTF equ 0DCDh");
#endif
// aliases
extern volatile unsigned char           PWM12INTFLG         __at(0xDCD);
#ifndef _LIB_BUILD
asm("PWM12INTFLG equ 0DCDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRIF                   :1;
        unsigned DCIF                   :1;
        unsigned PHIF                   :1;
        unsigned OFIF                   :1;
    };
    struct {
        unsigned PWM12PRIF              :1;
        unsigned PWM12DCIF              :1;
        unsigned PWM12PHIF              :1;
        unsigned PWM12OFIF              :1;
    };
} PWM12INTFbits_t;
extern volatile PWM12INTFbits_t PWM12INTFbits __at(0xDCD);
// bitfield macros
#define _PWM12INTF_PRIF_POSN                                0x0
#define _PWM12INTF_PRIF_POSITION                            0x0
#define _PWM12INTF_PRIF_SIZE                                0x1
#define _PWM12INTF_PRIF_LENGTH                              0x1
#define _PWM12INTF_PRIF_MASK                                0x1
#define _PWM12INTF_DCIF_POSN                                0x1
#define _PWM12INTF_DCIF_POSITION                            0x1
#define _PWM12INTF_DCIF_SIZE                                0x1
#define _PWM12INTF_DCIF_LENGTH                              0x1
#define _PWM12INTF_DCIF_MASK                                0x2
#define _PWM12INTF_PHIF_POSN                                0x2
#define _PWM12INTF_PHIF_POSITION                            0x2
#define _PWM12INTF_PHIF_SIZE                                0x1
#define _PWM12INTF_PHIF_LENGTH                              0x1
#define _PWM12INTF_PHIF_MASK                                0x4
#define _PWM12INTF_OFIF_POSN                                0x3
#define _PWM12INTF_OFIF_POSITION                            0x3
#define _PWM12INTF_OFIF_SIZE                                0x1
#define _PWM12INTF_OFIF_LENGTH                              0x1
#define _PWM12INTF_OFIF_MASK                                0x8
#define _PWM12INTF_PWM12PRIF_POSN                           0x0
#define _PWM12INTF_PWM12PRIF_POSITION                       0x0
#define _PWM12INTF_PWM12PRIF_SIZE                           0x1
#define _PWM12INTF_PWM12PRIF_LENGTH                         0x1
#define _PWM12INTF_PWM12PRIF_MASK                           0x1
#define _PWM12INTF_PWM12DCIF_POSN                           0x1
#define _PWM12INTF_PWM12DCIF_POSITION                       0x1
#define _PWM12INTF_PWM12DCIF_SIZE                           0x1
#define _PWM12INTF_PWM12DCIF_LENGTH                         0x1
#define _PWM12INTF_PWM12DCIF_MASK                           0x2
#define _PWM12INTF_PWM12PHIF_POSN                           0x2
#define _PWM12INTF_PWM12PHIF_POSITION                       0x2
#define _PWM12INTF_PWM12PHIF_SIZE                           0x1
#define _PWM12INTF_PWM12PHIF_LENGTH                         0x1
#define _PWM12INTF_PWM12PHIF_MASK                           0x4
#define _PWM12INTF_PWM12OFIF_POSN                           0x3
#define _PWM12INTF_PWM12OFIF_POSITION                       0x3
#define _PWM12INTF_PWM12OFIF_SIZE                           0x1
#define _PWM12INTF_PWM12OFIF_LENGTH                         0x1
#define _PWM12INTF_PWM12OFIF_MASK                           0x8
// alias bitfield definitions
typedef union {
    struct {
        unsigned PRIF                   :1;
        unsigned DCIF                   :1;
        unsigned PHIF                   :1;
        unsigned OFIF                   :1;
    };
    struct {
        unsigned PWM12PRIF              :1;
        unsigned PWM12DCIF              :1;
        unsigned PWM12PHIF              :1;
        unsigned PWM12OFIF              :1;
    };
} PWM12INTFLGbits_t;
extern volatile PWM12INTFLGbits_t PWM12INTFLGbits __at(0xDCD);
// bitfield macros
#define _PWM12INTFLG_PRIF_POSN                              0x0
#define _PWM12INTFLG_PRIF_POSITION                          0x0
#define _PWM12INTFLG_PRIF_SIZE                              0x1
#define _PWM12INTFLG_PRIF_LENGTH                            0x1
#define _PWM12INTFLG_PRIF_MASK                              0x1
#define _PWM12INTFLG_DCIF_POSN                              0x1
#define _PWM12INTFLG_DCIF_POSITION                          0x1
#define _PWM12INTFLG_DCIF_SIZE                              0x1
#define _PWM12INTFLG_DCIF_LENGTH                            0x1
#define _PWM12INTFLG_DCIF_MASK                              0x2
#define _PWM12INTFLG_PHIF_POSN                              0x2
#define _PWM12INTFLG_PHIF_POSITION                          0x2
#define _PWM12INTFLG_PHIF_SIZE                              0x1
#define _PWM12INTFLG_PHIF_LENGTH                            0x1
#define _PWM12INTFLG_PHIF_MASK                              0x4
#define _PWM12INTFLG_OFIF_POSN                              0x3
#define _PWM12INTFLG_OFIF_POSITION                          0x3
#define _PWM12INTFLG_OFIF_SIZE                              0x1
#define _PWM12INTFLG_OFIF_LENGTH                            0x1
#define _PWM12INTFLG_OFIF_MASK                              0x8
#define _PWM12INTFLG_PWM12PRIF_POSN                         0x0
#define _PWM12INTFLG_PWM12PRIF_POSITION                     0x0
#define _PWM12INTFLG_PWM12PRIF_SIZE                         0x1
#define _PWM12INTFLG_PWM12PRIF_LENGTH                       0x1
#define _PWM12INTFLG_PWM12PRIF_MASK                         0x1
#define _PWM12INTFLG_PWM12DCIF_POSN                         0x1
#define _PWM12INTFLG_PWM12DCIF_POSITION                     0x1
#define _PWM12INTFLG_PWM12DCIF_SIZE                         0x1
#define _PWM12INTFLG_PWM12DCIF_LENGTH                       0x1
#define _PWM12INTFLG_PWM12DCIF_MASK                         0x2
#define _PWM12INTFLG_PWM12PHIF_POSN                         0x2
#define _PWM12INTFLG_PWM12PHIF_POSITION                     0x2
#define _PWM12INTFLG_PWM12PHIF_SIZE                         0x1
#define _PWM12INTFLG_PWM12PHIF_LENGTH                       0x1
#define _PWM12INTFLG_PWM12PHIF_MASK                         0x4
#define _PWM12INTFLG_PWM12OFIF_POSN                         0x3
#define _PWM12INTFLG_PWM12OFIF_POSITION                     0x3
#define _PWM12INTFLG_PWM12OFIF_SIZE                         0x1
#define _PWM12INTFLG_PWM12OFIF_LENGTH                       0x1
#define _PWM12INTFLG_PWM12OFIF_MASK                         0x8

// Register: PWM12CLKCON
#define PWM12CLKCON PWM12CLKCON
extern volatile unsigned char           PWM12CLKCON         __at(0xDCE);
#ifndef _LIB_BUILD
asm("PWM12CLKCON equ 0DCEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CS                     :2;
        unsigned                        :2;
        unsigned PS                     :3;
    };
    struct {
        unsigned PWM12CS0               :1;
        unsigned PWM12CS1               :1;
        unsigned PWM12CS2               :1;
        unsigned                        :1;
        unsigned PWM12PS0               :1;
        unsigned PWM12PS1               :1;
        unsigned PWM12PS2               :1;
    };
    struct {
        unsigned PWM12CS                :3;
        unsigned                        :1;
        unsigned PWM12PS                :3;
    };
    struct {
        unsigned CS0                    :1;
        unsigned CS1                    :1;
        unsigned CS2                    :1;
        unsigned                        :1;
        unsigned PS0                    :1;
        unsigned PS1                    :1;
        unsigned PS2                    :1;
    };
} PWM12CLKCONbits_t;
extern volatile PWM12CLKCONbits_t PWM12CLKCONbits __at(0xDCE);
// bitfield macros
#define _PWM12CLKCON_CS_POSN                                0x0
#define _PWM12CLKCON_CS_POSITION                            0x0
#define _PWM12CLKCON_CS_SIZE                                0x2
#define _PWM12CLKCON_CS_LENGTH                              0x2
#define _PWM12CLKCON_CS_MASK                                0x3
#define _PWM12CLKCON_PS_POSN                                0x4
#define _PWM12CLKCON_PS_POSITION                            0x4
#define _PWM12CLKCON_PS_SIZE                                0x3
#define _PWM12CLKCON_PS_LENGTH                              0x3
#define _PWM12CLKCON_PS_MASK                                0x70
#define _PWM12CLKCON_PWM12CS0_POSN                          0x0
#define _PWM12CLKCON_PWM12CS0_POSITION                      0x0
#define _PWM12CLKCON_PWM12CS0_SIZE                          0x1
#define _PWM12CLKCON_PWM12CS0_LENGTH                        0x1
#define _PWM12CLKCON_PWM12CS0_MASK                          0x1
#define _PWM12CLKCON_PWM12CS1_POSN                          0x1
#define _PWM12CLKCON_PWM12CS1_POSITION                      0x1
#define _PWM12CLKCON_PWM12CS1_SIZE                          0x1
#define _PWM12CLKCON_PWM12CS1_LENGTH                        0x1
#define _PWM12CLKCON_PWM12CS1_MASK                          0x2
#define _PWM12CLKCON_PWM12CS2_POSN                          0x2
#define _PWM12CLKCON_PWM12CS2_POSITION                      0x2
#define _PWM12CLKCON_PWM12CS2_SIZE                          0x1
#define _PWM12CLKCON_PWM12CS2_LENGTH                        0x1
#define _PWM12CLKCON_PWM12CS2_MASK                          0x4
#define _PWM12CLKCON_PWM12PS0_POSN                          0x4
#define _PWM12CLKCON_PWM12PS0_POSITION                      0x4
#define _PWM12CLKCON_PWM12PS0_SIZE                          0x1
#define _PWM12CLKCON_PWM12PS0_LENGTH                        0x1
#define _PWM12CLKCON_PWM12PS0_MASK                          0x10
#define _PWM12CLKCON_PWM12PS1_POSN                          0x5
#define _PWM12CLKCON_PWM12PS1_POSITION                      0x5
#define _PWM12CLKCON_PWM12PS1_SIZE                          0x1
#define _PWM12CLKCON_PWM12PS1_LENGTH                        0x1
#define _PWM12CLKCON_PWM12PS1_MASK                          0x20
#define _PWM12CLKCON_PWM12PS2_POSN                          0x6
#define _PWM12CLKCON_PWM12PS2_POSITION                      0x6
#define _PWM12CLKCON_PWM12PS2_SIZE                          0x1
#define _PWM12CLKCON_PWM12PS2_LENGTH                        0x1
#define _PWM12CLKCON_PWM12PS2_MASK                          0x40
#define _PWM12CLKCON_PWM12CS_POSN                           0x0
#define _PWM12CLKCON_PWM12CS_POSITION                       0x0
#define _PWM12CLKCON_PWM12CS_SIZE                           0x3
#define _PWM12CLKCON_PWM12CS_LENGTH                         0x3
#define _PWM12CLKCON_PWM12CS_MASK                           0x7
#define _PWM12CLKCON_PWM12PS_POSN                           0x4
#define _PWM12CLKCON_PWM12PS_POSITION                       0x4
#define _PWM12CLKCON_PWM12PS_SIZE                           0x3
#define _PWM12CLKCON_PWM12PS_LENGTH                         0x3
#define _PWM12CLKCON_PWM12PS_MASK                           0x70
#define _PWM12CLKCON_CS0_POSN                               0x0
#define _PWM12CLKCON_CS0_POSITION                           0x0
#define _PWM12CLKCON_CS0_SIZE                               0x1
#define _PWM12CLKCON_CS0_LENGTH                             0x1
#define _PWM12CLKCON_CS0_MASK                               0x1
#define _PWM12CLKCON_CS1_POSN                               0x1
#define _PWM12CLKCON_CS1_POSITION                           0x1
#define _PWM12CLKCON_CS1_SIZE                               0x1
#define _PWM12CLKCON_CS1_LENGTH                             0x1
#define _PWM12CLKCON_CS1_MASK                               0x2
#define _PWM12CLKCON_CS2_POSN                               0x2
#define _PWM12CLKCON_CS2_POSITION                           0x2
#define _PWM12CLKCON_CS2_SIZE                               0x1
#define _PWM12CLKCON_CS2_LENGTH                             0x1
#define _PWM12CLKCON_CS2_MASK                               0x4
#define _PWM12CLKCON_PS0_POSN                               0x4
#define _PWM12CLKCON_PS0_POSITION                           0x4
#define _PWM12CLKCON_PS0_SIZE                               0x1
#define _PWM12CLKCON_PS0_LENGTH                             0x1
#define _PWM12CLKCON_PS0_MASK                               0x10
#define _PWM12CLKCON_PS1_POSN                               0x5
#define _PWM12CLKCON_PS1_POSITION                           0x5
#define _PWM12CLKCON_PS1_SIZE                               0x1
#define _PWM12CLKCON_PS1_LENGTH                             0x1
#define _PWM12CLKCON_PS1_MASK                               0x20
#define _PWM12CLKCON_PS2_POSN                               0x6
#define _PWM12CLKCON_PS2_POSITION                           0x6
#define _PWM12CLKCON_PS2_SIZE                               0x1
#define _PWM12CLKCON_PS2_LENGTH                             0x1
#define _PWM12CLKCON_PS2_MASK                               0x40

// Register: PWM12LDCON
#define PWM12LDCON PWM12LDCON
extern volatile unsigned char           PWM12LDCON          __at(0xDCF);
#ifndef _LIB_BUILD
asm("PWM12LDCON equ 0DCFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LDS                    :2;
        unsigned                        :4;
        unsigned LDT                    :1;
        unsigned LDA                    :1;
    };
    struct {
        unsigned PWM12LDS0              :1;
        unsigned PWM12LDS1              :1;
    };
    struct {
        unsigned PWM12LDS               :2;
        unsigned                        :4;
        unsigned PWM12LDM               :1;
        unsigned PWM12LD                :1;
    };
    struct {
        unsigned LDS0                   :1;
        unsigned LDS1                   :1;
    };
} PWM12LDCONbits_t;
extern volatile PWM12LDCONbits_t PWM12LDCONbits __at(0xDCF);
// bitfield macros
#define _PWM12LDCON_LDS_POSN                                0x0
#define _PWM12LDCON_LDS_POSITION                            0x0
#define _PWM12LDCON_LDS_SIZE                                0x2
#define _PWM12LDCON_LDS_LENGTH                              0x2
#define _PWM12LDCON_LDS_MASK                                0x3
#define _PWM12LDCON_LDT_POSN                                0x6
#define _PWM12LDCON_LDT_POSITION                            0x6
#define _PWM12LDCON_LDT_SIZE                                0x1
#define _PWM12LDCON_LDT_LENGTH                              0x1
#define _PWM12LDCON_LDT_MASK                                0x40
#define _PWM12LDCON_LDA_POSN                                0x7
#define _PWM12LDCON_LDA_POSITION                            0x7
#define _PWM12LDCON_LDA_SIZE                                0x1
#define _PWM12LDCON_LDA_LENGTH                              0x1
#define _PWM12LDCON_LDA_MASK                                0x80
#define _PWM12LDCON_PWM12LDS0_POSN                          0x0
#define _PWM12LDCON_PWM12LDS0_POSITION                      0x0
#define _PWM12LDCON_PWM12LDS0_SIZE                          0x1
#define _PWM12LDCON_PWM12LDS0_LENGTH                        0x1
#define _PWM12LDCON_PWM12LDS0_MASK                          0x1
#define _PWM12LDCON_PWM12LDS1_POSN                          0x1
#define _PWM12LDCON_PWM12LDS1_POSITION                      0x1
#define _PWM12LDCON_PWM12LDS1_SIZE                          0x1
#define _PWM12LDCON_PWM12LDS1_LENGTH                        0x1
#define _PWM12LDCON_PWM12LDS1_MASK                          0x2
#define _PWM12LDCON_PWM12LDS_POSN                           0x0
#define _PWM12LDCON_PWM12LDS_POSITION                       0x0
#define _PWM12LDCON_PWM12LDS_SIZE                           0x2
#define _PWM12LDCON_PWM12LDS_LENGTH                         0x2
#define _PWM12LDCON_PWM12LDS_MASK                           0x3
#define _PWM12LDCON_PWM12LDM_POSN                           0x6
#define _PWM12LDCON_PWM12LDM_POSITION                       0x6
#define _PWM12LDCON_PWM12LDM_SIZE                           0x1
#define _PWM12LDCON_PWM12LDM_LENGTH                         0x1
#define _PWM12LDCON_PWM12LDM_MASK                           0x40
#define _PWM12LDCON_PWM12LD_POSN                            0x7
#define _PWM12LDCON_PWM12LD_POSITION                        0x7
#define _PWM12LDCON_PWM12LD_SIZE                            0x1
#define _PWM12LDCON_PWM12LD_LENGTH                          0x1
#define _PWM12LDCON_PWM12LD_MASK                            0x80
#define _PWM12LDCON_LDS0_POSN                               0x0
#define _PWM12LDCON_LDS0_POSITION                           0x0
#define _PWM12LDCON_LDS0_SIZE                               0x1
#define _PWM12LDCON_LDS0_LENGTH                             0x1
#define _PWM12LDCON_LDS0_MASK                               0x1
#define _PWM12LDCON_LDS1_POSN                               0x1
#define _PWM12LDCON_LDS1_POSITION                           0x1
#define _PWM12LDCON_LDS1_SIZE                               0x1
#define _PWM12LDCON_LDS1_LENGTH                             0x1
#define _PWM12LDCON_LDS1_MASK                               0x2

// Register: PWM12OFCON
#define PWM12OFCON PWM12OFCON
extern volatile unsigned char           PWM12OFCON          __at(0xDD0);
#ifndef _LIB_BUILD
asm("PWM12OFCON equ 0DD0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned OFS                    :2;
        unsigned                        :2;
        unsigned OFO                    :1;
        unsigned OFM                    :2;
    };
    struct {
        unsigned PWM12OFS0              :1;
        unsigned PWM12OFS1              :1;
        unsigned                        :3;
        unsigned PWM12OFM0              :1;
        unsigned PWM12OFM1              :1;
    };
    struct {
        unsigned PWM12OFS               :2;
        unsigned                        :2;
        unsigned PWM12OFMC              :1;
        unsigned PWM12OFM               :2;
    };
    struct {
        unsigned OFS0                   :1;
        unsigned OFS1                   :1;
        unsigned                        :3;
        unsigned OFM0                   :1;
        unsigned OFM1                   :1;
    };
} PWM12OFCONbits_t;
extern volatile PWM12OFCONbits_t PWM12OFCONbits __at(0xDD0);
// bitfield macros
#define _PWM12OFCON_OFS_POSN                                0x0
#define _PWM12OFCON_OFS_POSITION                            0x0
#define _PWM12OFCON_OFS_SIZE                                0x2
#define _PWM12OFCON_OFS_LENGTH                              0x2
#define _PWM12OFCON_OFS_MASK                                0x3
#define _PWM12OFCON_OFO_POSN                                0x4
#define _PWM12OFCON_OFO_POSITION                            0x4
#define _PWM12OFCON_OFO_SIZE                                0x1
#define _PWM12OFCON_OFO_LENGTH                              0x1
#define _PWM12OFCON_OFO_MASK                                0x10
#define _PWM12OFCON_OFM_POSN                                0x5
#define _PWM12OFCON_OFM_POSITION                            0x5
#define _PWM12OFCON_OFM_SIZE                                0x2
#define _PWM12OFCON_OFM_LENGTH                              0x2
#define _PWM12OFCON_OFM_MASK                                0x60
#define _PWM12OFCON_PWM12OFS0_POSN                          0x0
#define _PWM12OFCON_PWM12OFS0_POSITION                      0x0
#define _PWM12OFCON_PWM12OFS0_SIZE                          0x1
#define _PWM12OFCON_PWM12OFS0_LENGTH                        0x1
#define _PWM12OFCON_PWM12OFS0_MASK                          0x1
#define _PWM12OFCON_PWM12OFS1_POSN                          0x1
#define _PWM12OFCON_PWM12OFS1_POSITION                      0x1
#define _PWM12OFCON_PWM12OFS1_SIZE                          0x1
#define _PWM12OFCON_PWM12OFS1_LENGTH                        0x1
#define _PWM12OFCON_PWM12OFS1_MASK                          0x2
#define _PWM12OFCON_PWM12OFM0_POSN                          0x5
#define _PWM12OFCON_PWM12OFM0_POSITION                      0x5
#define _PWM12OFCON_PWM12OFM0_SIZE                          0x1
#define _PWM12OFCON_PWM12OFM0_LENGTH                        0x1
#define _PWM12OFCON_PWM12OFM0_MASK                          0x20
#define _PWM12OFCON_PWM12OFM1_POSN                          0x6
#define _PWM12OFCON_PWM12OFM1_POSITION                      0x6
#define _PWM12OFCON_PWM12OFM1_SIZE                          0x1
#define _PWM12OFCON_PWM12OFM1_LENGTH                        0x1
#define _PWM12OFCON_PWM12OFM1_MASK                          0x40
#define _PWM12OFCON_PWM12OFS_POSN                           0x0
#define _PWM12OFCON_PWM12OFS_POSITION                       0x0
#define _PWM12OFCON_PWM12OFS_SIZE                           0x2
#define _PWM12OFCON_PWM12OFS_LENGTH                         0x2
#define _PWM12OFCON_PWM12OFS_MASK                           0x3
#define _PWM12OFCON_PWM12OFMC_POSN                          0x4
#define _PWM12OFCON_PWM12OFMC_POSITION                      0x4
#define _PWM12OFCON_PWM12OFMC_SIZE                          0x1
#define _PWM12OFCON_PWM12OFMC_LENGTH                        0x1
#define _PWM12OFCON_PWM12OFMC_MASK                          0x10
#define _PWM12OFCON_PWM12OFM_POSN                           0x5
#define _PWM12OFCON_PWM12OFM_POSITION                       0x5
#define _PWM12OFCON_PWM12OFM_SIZE                           0x2
#define _PWM12OFCON_PWM12OFM_LENGTH                         0x2
#define _PWM12OFCON_PWM12OFM_MASK                           0x60
#define _PWM12OFCON_OFS0_POSN                               0x0
#define _PWM12OFCON_OFS0_POSITION                           0x0
#define _PWM12OFCON_OFS0_SIZE                               0x1
#define _PWM12OFCON_OFS0_LENGTH                             0x1
#define _PWM12OFCON_OFS0_MASK                               0x1
#define _PWM12OFCON_OFS1_POSN                               0x1
#define _PWM12OFCON_OFS1_POSITION                           0x1
#define _PWM12OFCON_OFS1_SIZE                               0x1
#define _PWM12OFCON_OFS1_LENGTH                             0x1
#define _PWM12OFCON_OFS1_MASK                               0x2
#define _PWM12OFCON_OFM0_POSN                               0x5
#define _PWM12OFCON_OFM0_POSITION                           0x5
#define _PWM12OFCON_OFM0_SIZE                               0x1
#define _PWM12OFCON_OFM0_LENGTH                             0x1
#define _PWM12OFCON_OFM0_MASK                               0x20
#define _PWM12OFCON_OFM1_POSN                               0x6
#define _PWM12OFCON_OFM1_POSITION                           0x6
#define _PWM12OFCON_OFM1_SIZE                               0x1
#define _PWM12OFCON_OFM1_LENGTH                             0x1
#define _PWM12OFCON_OFM1_MASK                               0x40

// Register: PPSLOCK
#define PPSLOCK PPSLOCK
extern volatile unsigned char           PPSLOCK             __at(0xE0C);
#ifndef _LIB_BUILD
asm("PPSLOCK equ 0E0Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PPSLOCKED              :1;
    };
} PPSLOCKbits_t;
extern volatile PPSLOCKbits_t PPSLOCKbits __at(0xE0C);
// bitfield macros
#define _PPSLOCK_PPSLOCKED_POSN                             0x0
#define _PPSLOCK_PPSLOCKED_POSITION                         0x0
#define _PPSLOCK_PPSLOCKED_SIZE                             0x1
#define _PPSLOCK_PPSLOCKED_LENGTH                           0x1
#define _PPSLOCK_PPSLOCKED_MASK                             0x1

// Register: INTPPS
#define INTPPS INTPPS
extern volatile unsigned char           INTPPS              __at(0xE0D);
#ifndef _LIB_BUILD
asm("INTPPS equ 0E0Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTPPS                 :6;
    };
} INTPPSbits_t;
extern volatile INTPPSbits_t INTPPSbits __at(0xE0D);
// bitfield macros
#define _INTPPS_INTPPS_POSN                                 0x0
#define _INTPPS_INTPPS_POSITION                             0x0
#define _INTPPS_INTPPS_SIZE                                 0x6
#define _INTPPS_INTPPS_LENGTH                               0x6
#define _INTPPS_INTPPS_MASK                                 0x3F

// Register: T0CKIPPS
#define T0CKIPPS T0CKIPPS
extern volatile unsigned char           T0CKIPPS            __at(0xE0E);
#ifndef _LIB_BUILD
asm("T0CKIPPS equ 0E0Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T0CKIPPS               :6;
    };
} T0CKIPPSbits_t;
extern volatile T0CKIPPSbits_t T0CKIPPSbits __at(0xE0E);
// bitfield macros
#define _T0CKIPPS_T0CKIPPS_POSN                             0x0
#define _T0CKIPPS_T0CKIPPS_POSITION                         0x0
#define _T0CKIPPS_T0CKIPPS_SIZE                             0x6
#define _T0CKIPPS_T0CKIPPS_LENGTH                           0x6
#define _T0CKIPPS_T0CKIPPS_MASK                             0x3F

// Register: T1CKIPPS
#define T1CKIPPS T1CKIPPS
extern volatile unsigned char           T1CKIPPS            __at(0xE0F);
#ifndef _LIB_BUILD
asm("T1CKIPPS equ 0E0Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T1CKIPPS               :6;
    };
} T1CKIPPSbits_t;
extern volatile T1CKIPPSbits_t T1CKIPPSbits __at(0xE0F);
// bitfield macros
#define _T1CKIPPS_T1CKIPPS_POSN                             0x0
#define _T1CKIPPS_T1CKIPPS_POSITION                         0x0
#define _T1CKIPPS_T1CKIPPS_SIZE                             0x6
#define _T1CKIPPS_T1CKIPPS_LENGTH                           0x6
#define _T1CKIPPS_T1CKIPPS_MASK                             0x3F

// Register: T1GPPS
#define T1GPPS T1GPPS
extern volatile unsigned char           T1GPPS              __at(0xE10);
#ifndef _LIB_BUILD
asm("T1GPPS equ 0E10h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T1GPPS                 :6;
    };
} T1GPPSbits_t;
extern volatile T1GPPSbits_t T1GPPSbits __at(0xE10);
// bitfield macros
#define _T1GPPS_T1GPPS_POSN                                 0x0
#define _T1GPPS_T1GPPS_POSITION                             0x0
#define _T1GPPS_T1GPPS_SIZE                                 0x6
#define _T1GPPS_T1GPPS_LENGTH                               0x6
#define _T1GPPS_T1GPPS_MASK                                 0x3F

// Register: T3CKIPPS
#define T3CKIPPS T3CKIPPS
extern volatile unsigned char           T3CKIPPS            __at(0xE11);
#ifndef _LIB_BUILD
asm("T3CKIPPS equ 0E11h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T3CKIPPS               :6;
    };
} T3CKIPPSbits_t;
extern volatile T3CKIPPSbits_t T3CKIPPSbits __at(0xE11);
// bitfield macros
#define _T3CKIPPS_T3CKIPPS_POSN                             0x0
#define _T3CKIPPS_T3CKIPPS_POSITION                         0x0
#define _T3CKIPPS_T3CKIPPS_SIZE                             0x6
#define _T3CKIPPS_T3CKIPPS_LENGTH                           0x6
#define _T3CKIPPS_T3CKIPPS_MASK                             0x3F

// Register: T3GPPS
#define T3GPPS T3GPPS
extern volatile unsigned char           T3GPPS              __at(0xE12);
#ifndef _LIB_BUILD
asm("T3GPPS equ 0E12h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T3GPPS                 :6;
    };
} T3GPPSbits_t;
extern volatile T3GPPSbits_t T3GPPSbits __at(0xE12);
// bitfield macros
#define _T3GPPS_T3GPPS_POSN                                 0x0
#define _T3GPPS_T3GPPS_POSITION                             0x0
#define _T3GPPS_T3GPPS_SIZE                                 0x6
#define _T3GPPS_T3GPPS_LENGTH                               0x6
#define _T3GPPS_T3GPPS_MASK                                 0x3F

// Register: T5CKIPPS
#define T5CKIPPS T5CKIPPS
extern volatile unsigned char           T5CKIPPS            __at(0xE13);
#ifndef _LIB_BUILD
asm("T5CKIPPS equ 0E13h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T5CKIPPS               :6;
    };
} T5CKIPPSbits_t;
extern volatile T5CKIPPSbits_t T5CKIPPSbits __at(0xE13);
// bitfield macros
#define _T5CKIPPS_T5CKIPPS_POSN                             0x0
#define _T5CKIPPS_T5CKIPPS_POSITION                         0x0
#define _T5CKIPPS_T5CKIPPS_SIZE                             0x6
#define _T5CKIPPS_T5CKIPPS_LENGTH                           0x6
#define _T5CKIPPS_T5CKIPPS_MASK                             0x3F

// Register: T5GPPS
#define T5GPPS T5GPPS
extern volatile unsigned char           T5GPPS              __at(0xE14);
#ifndef _LIB_BUILD
asm("T5GPPS equ 0E14h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T5GPPS                 :6;
    };
} T5GPPSbits_t;
extern volatile T5GPPSbits_t T5GPPSbits __at(0xE14);
// bitfield macros
#define _T5GPPS_T5GPPS_POSN                                 0x0
#define _T5GPPS_T5GPPS_POSITION                             0x0
#define _T5GPPS_T5GPPS_SIZE                                 0x6
#define _T5GPPS_T5GPPS_LENGTH                               0x6
#define _T5GPPS_T5GPPS_MASK                                 0x3F

// Register: T2INPPS
#define T2INPPS T2INPPS
extern volatile unsigned char           T2INPPS             __at(0xE15);
#ifndef _LIB_BUILD
asm("T2INPPS equ 0E15h");
#endif
// aliases
extern volatile unsigned char           T2CKIPPS            __at(0xE15);
#ifndef _LIB_BUILD
asm("T2CKIPPS equ 0E15h");
#endif
extern volatile unsigned char           T2PPS               __at(0xE15);
#ifndef _LIB_BUILD
asm("T2PPS equ 0E15h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T2INPPS                :6;
    };
} T2INPPSbits_t;
extern volatile T2INPPSbits_t T2INPPSbits __at(0xE15);
// bitfield macros
#define _T2INPPS_T2INPPS_POSN                               0x0
#define _T2INPPS_T2INPPS_POSITION                           0x0
#define _T2INPPS_T2INPPS_SIZE                               0x6
#define _T2INPPS_T2INPPS_LENGTH                             0x6
#define _T2INPPS_T2INPPS_MASK                               0x3F
// alias bitfield definitions
typedef union {
    struct {
        unsigned T2INPPS                :6;
    };
} T2CKIPPSbits_t;
extern volatile T2CKIPPSbits_t T2CKIPPSbits __at(0xE15);
// bitfield macros
#define _T2CKIPPS_T2INPPS_POSN                              0x0
#define _T2CKIPPS_T2INPPS_POSITION                          0x0
#define _T2CKIPPS_T2INPPS_SIZE                              0x6
#define _T2CKIPPS_T2INPPS_LENGTH                            0x6
#define _T2CKIPPS_T2INPPS_MASK                              0x3F
typedef union {
    struct {
        unsigned T2INPPS                :6;
    };
} T2PPSbits_t;
extern volatile T2PPSbits_t T2PPSbits __at(0xE15);
// bitfield macros
#define _T2PPS_T2INPPS_POSN                                 0x0
#define _T2PPS_T2INPPS_POSITION                             0x0
#define _T2PPS_T2INPPS_SIZE                                 0x6
#define _T2PPS_T2INPPS_LENGTH                               0x6
#define _T2PPS_T2INPPS_MASK                                 0x3F

// Register: T4INPPS
#define T4INPPS T4INPPS
extern volatile unsigned char           T4INPPS             __at(0xE16);
#ifndef _LIB_BUILD
asm("T4INPPS equ 0E16h");
#endif
// aliases
extern volatile unsigned char           T4CKIPPS            __at(0xE16);
#ifndef _LIB_BUILD
asm("T4CKIPPS equ 0E16h");
#endif
extern volatile unsigned char           T4PPS               __at(0xE16);
#ifndef _LIB_BUILD
asm("T4PPS equ 0E16h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T4INPPS                :6;
    };
} T4INPPSbits_t;
extern volatile T4INPPSbits_t T4INPPSbits __at(0xE16);
// bitfield macros
#define _T4INPPS_T4INPPS_POSN                               0x0
#define _T4INPPS_T4INPPS_POSITION                           0x0
#define _T4INPPS_T4INPPS_SIZE                               0x6
#define _T4INPPS_T4INPPS_LENGTH                             0x6
#define _T4INPPS_T4INPPS_MASK                               0x3F
// alias bitfield definitions
typedef union {
    struct {
        unsigned T4INPPS                :6;
    };
} T4CKIPPSbits_t;
extern volatile T4CKIPPSbits_t T4CKIPPSbits __at(0xE16);
// bitfield macros
#define _T4CKIPPS_T4INPPS_POSN                              0x0
#define _T4CKIPPS_T4INPPS_POSITION                          0x0
#define _T4CKIPPS_T4INPPS_SIZE                              0x6
#define _T4CKIPPS_T4INPPS_LENGTH                            0x6
#define _T4CKIPPS_T4INPPS_MASK                              0x3F
typedef union {
    struct {
        unsigned T4INPPS                :6;
    };
} T4PPSbits_t;
extern volatile T4PPSbits_t T4PPSbits __at(0xE16);
// bitfield macros
#define _T4PPS_T4INPPS_POSN                                 0x0
#define _T4PPS_T4INPPS_POSITION                             0x0
#define _T4PPS_T4INPPS_SIZE                                 0x6
#define _T4PPS_T4INPPS_LENGTH                               0x6
#define _T4PPS_T4INPPS_MASK                                 0x3F

// Register: T6INPPS
#define T6INPPS T6INPPS
extern volatile unsigned char           T6INPPS             __at(0xE17);
#ifndef _LIB_BUILD
asm("T6INPPS equ 0E17h");
#endif
// aliases
extern volatile unsigned char           T6CKIPPS            __at(0xE17);
#ifndef _LIB_BUILD
asm("T6CKIPPS equ 0E17h");
#endif
extern volatile unsigned char           T6PPS               __at(0xE17);
#ifndef _LIB_BUILD
asm("T6PPS equ 0E17h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T6INPPS                :6;
    };
} T6INPPSbits_t;
extern volatile T6INPPSbits_t T6INPPSbits __at(0xE17);
// bitfield macros
#define _T6INPPS_T6INPPS_POSN                               0x0
#define _T6INPPS_T6INPPS_POSITION                           0x0
#define _T6INPPS_T6INPPS_SIZE                               0x6
#define _T6INPPS_T6INPPS_LENGTH                             0x6
#define _T6INPPS_T6INPPS_MASK                               0x3F
// alias bitfield definitions
typedef union {
    struct {
        unsigned T6INPPS                :6;
    };
} T6CKIPPSbits_t;
extern volatile T6CKIPPSbits_t T6CKIPPSbits __at(0xE17);
// bitfield macros
#define _T6CKIPPS_T6INPPS_POSN                              0x0
#define _T6CKIPPS_T6INPPS_POSITION                          0x0
#define _T6CKIPPS_T6INPPS_SIZE                              0x6
#define _T6CKIPPS_T6INPPS_LENGTH                            0x6
#define _T6CKIPPS_T6INPPS_MASK                              0x3F
typedef union {
    struct {
        unsigned T6INPPS                :6;
    };
} T6PPSbits_t;
extern volatile T6PPSbits_t T6PPSbits __at(0xE17);
// bitfield macros
#define _T6PPS_T6INPPS_POSN                                 0x0
#define _T6PPS_T6INPPS_POSITION                             0x0
#define _T6PPS_T6INPPS_SIZE                                 0x6
#define _T6PPS_T6INPPS_LENGTH                               0x6
#define _T6PPS_T6INPPS_MASK                                 0x3F

// Register: T8INPPS
#define T8INPPS T8INPPS
extern volatile unsigned char           T8INPPS             __at(0xE18);
#ifndef _LIB_BUILD
asm("T8INPPS equ 0E18h");
#endif
// aliases
extern volatile unsigned char           T8CKIPPS            __at(0xE18);
#ifndef _LIB_BUILD
asm("T8CKIPPS equ 0E18h");
#endif
extern volatile unsigned char           T8PPS               __at(0xE18);
#ifndef _LIB_BUILD
asm("T8PPS equ 0E18h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T8INPPS                :6;
    };
} T8INPPSbits_t;
extern volatile T8INPPSbits_t T8INPPSbits __at(0xE18);
// bitfield macros
#define _T8INPPS_T8INPPS_POSN                               0x0
#define _T8INPPS_T8INPPS_POSITION                           0x0
#define _T8INPPS_T8INPPS_SIZE                               0x6
#define _T8INPPS_T8INPPS_LENGTH                             0x6
#define _T8INPPS_T8INPPS_MASK                               0x3F
// alias bitfield definitions
typedef union {
    struct {
        unsigned T8INPPS                :6;
    };
} T8CKIPPSbits_t;
extern volatile T8CKIPPSbits_t T8CKIPPSbits __at(0xE18);
// bitfield macros
#define _T8CKIPPS_T8INPPS_POSN                              0x0
#define _T8CKIPPS_T8INPPS_POSITION                          0x0
#define _T8CKIPPS_T8INPPS_SIZE                              0x6
#define _T8CKIPPS_T8INPPS_LENGTH                            0x6
#define _T8CKIPPS_T8INPPS_MASK                              0x3F
typedef union {
    struct {
        unsigned T8INPPS                :6;
    };
} T8PPSbits_t;
extern volatile T8PPSbits_t T8PPSbits __at(0xE18);
// bitfield macros
#define _T8PPS_T8INPPS_POSN                                 0x0
#define _T8PPS_T8INPPS_POSITION                             0x0
#define _T8PPS_T8INPPS_SIZE                                 0x6
#define _T8PPS_T8INPPS_LENGTH                               0x6
#define _T8PPS_T8INPPS_MASK                                 0x3F

// Register: CCP1PPS
#define CCP1PPS CCP1PPS
extern volatile unsigned char           CCP1PPS             __at(0xE19);
#ifndef _LIB_BUILD
asm("CCP1PPS equ 0E19h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP1PPS                :6;
    };
} CCP1PPSbits_t;
extern volatile CCP1PPSbits_t CCP1PPSbits __at(0xE19);
// bitfield macros
#define _CCP1PPS_CCP1PPS_POSN                               0x0
#define _CCP1PPS_CCP1PPS_POSITION                           0x0
#define _CCP1PPS_CCP1PPS_SIZE                               0x6
#define _CCP1PPS_CCP1PPS_LENGTH                             0x6
#define _CCP1PPS_CCP1PPS_MASK                               0x3F

// Register: CCP2PPS
#define CCP2PPS CCP2PPS
extern volatile unsigned char           CCP2PPS             __at(0xE1A);
#ifndef _LIB_BUILD
asm("CCP2PPS equ 0E1Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2PPS                :6;
    };
} CCP2PPSbits_t;
extern volatile CCP2PPSbits_t CCP2PPSbits __at(0xE1A);
// bitfield macros
#define _CCP2PPS_CCP2PPS_POSN                               0x0
#define _CCP2PPS_CCP2PPS_POSITION                           0x0
#define _CCP2PPS_CCP2PPS_SIZE                               0x6
#define _CCP2PPS_CCP2PPS_LENGTH                             0x6
#define _CCP2PPS_CCP2PPS_MASK                               0x3F

// Register: CCP7PPS
#define CCP7PPS CCP7PPS
extern volatile unsigned char           CCP7PPS             __at(0xE1B);
#ifndef _LIB_BUILD
asm("CCP7PPS equ 0E1Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP7PPS                :6;
    };
} CCP7PPSbits_t;
extern volatile CCP7PPSbits_t CCP7PPSbits __at(0xE1B);
// bitfield macros
#define _CCP7PPS_CCP7PPS_POSN                               0x0
#define _CCP7PPS_CCP7PPS_POSITION                           0x0
#define _CCP7PPS_CCP7PPS_SIZE                               0x6
#define _CCP7PPS_CCP7PPS_LENGTH                             0x6
#define _CCP7PPS_CCP7PPS_MASK                               0x3F

// Register: CCP8PPS
#define CCP8PPS CCP8PPS
extern volatile unsigned char           CCP8PPS             __at(0xE1C);
#ifndef _LIB_BUILD
asm("CCP8PPS equ 0E1Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP8PPS                :6;
    };
} CCP8PPSbits_t;
extern volatile CCP8PPSbits_t CCP8PPSbits __at(0xE1C);
// bitfield macros
#define _CCP8PPS_CCP8PPS_POSN                               0x0
#define _CCP8PPS_CCP8PPS_POSITION                           0x0
#define _CCP8PPS_CCP8PPS_SIZE                               0x6
#define _CCP8PPS_CCP8PPS_LENGTH                             0x6
#define _CCP8PPS_CCP8PPS_MASK                               0x3F

// Register: COG1INPPS
#define COG1INPPS COG1INPPS
extern volatile unsigned char           COG1INPPS           __at(0xE1D);
#ifndef _LIB_BUILD
asm("COG1INPPS equ 0E1Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned COG1INPPS              :6;
    };
} COG1INPPSbits_t;
extern volatile COG1INPPSbits_t COG1INPPSbits __at(0xE1D);
// bitfield macros
#define _COG1INPPS_COG1INPPS_POSN                           0x0
#define _COG1INPPS_COG1INPPS_POSITION                       0x0
#define _COG1INPPS_COG1INPPS_SIZE                           0x6
#define _COG1INPPS_COG1INPPS_LENGTH                         0x6
#define _COG1INPPS_COG1INPPS_MASK                           0x3F

// Register: COG2INPPS
#define COG2INPPS COG2INPPS
extern volatile unsigned char           COG2INPPS           __at(0xE1E);
#ifndef _LIB_BUILD
asm("COG2INPPS equ 0E1Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned COG2INPPS              :6;
    };
} COG2INPPSbits_t;
extern volatile COG2INPPSbits_t COG2INPPSbits __at(0xE1E);
// bitfield macros
#define _COG2INPPS_COG2INPPS_POSN                           0x0
#define _COG2INPPS_COG2INPPS_POSITION                       0x0
#define _COG2INPPS_COG2INPPS_SIZE                           0x6
#define _COG2INPPS_COG2INPPS_LENGTH                         0x6
#define _COG2INPPS_COG2INPPS_MASK                           0x3F

// Register: COG3INPPS
#define COG3INPPS COG3INPPS
extern volatile unsigned char           COG3INPPS           __at(0xE1F);
#ifndef _LIB_BUILD
asm("COG3INPPS equ 0E1Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned COG3INPPS              :6;
    };
} COG3INPPSbits_t;
extern volatile COG3INPPSbits_t COG3INPPSbits __at(0xE1F);
// bitfield macros
#define _COG3INPPS_COG3INPPS_POSN                           0x0
#define _COG3INPPS_COG3INPPS_POSITION                       0x0
#define _COG3INPPS_COG3INPPS_SIZE                           0x6
#define _COG3INPPS_COG3INPPS_LENGTH                         0x6
#define _COG3INPPS_COG3INPPS_MASK                           0x3F

// Register: COG4INPPS
#define COG4INPPS COG4INPPS
extern volatile unsigned char           COG4INPPS           __at(0xE20);
#ifndef _LIB_BUILD
asm("COG4INPPS equ 0E20h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned COG4INPPS              :6;
    };
} COG4INPPSbits_t;
extern volatile COG4INPPSbits_t COG4INPPSbits __at(0xE20);
// bitfield macros
#define _COG4INPPS_COG4INPPS_POSN                           0x0
#define _COG4INPPS_COG4INPPS_POSITION                       0x0
#define _COG4INPPS_COG4INPPS_SIZE                           0x6
#define _COG4INPPS_COG4INPPS_LENGTH                         0x6
#define _COG4INPPS_COG4INPPS_MASK                           0x3F

// Register: MD1CLPPS
#define MD1CLPPS MD1CLPPS
extern volatile unsigned char           MD1CLPPS            __at(0xE21);
#ifndef _LIB_BUILD
asm("MD1CLPPS equ 0E21h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD1CLPPS               :6;
    };
} MD1CLPPSbits_t;
extern volatile MD1CLPPSbits_t MD1CLPPSbits __at(0xE21);
// bitfield macros
#define _MD1CLPPS_MD1CLPPS_POSN                             0x0
#define _MD1CLPPS_MD1CLPPS_POSITION                         0x0
#define _MD1CLPPS_MD1CLPPS_SIZE                             0x6
#define _MD1CLPPS_MD1CLPPS_LENGTH                           0x6
#define _MD1CLPPS_MD1CLPPS_MASK                             0x3F

// Register: MD1CHPPS
#define MD1CHPPS MD1CHPPS
extern volatile unsigned char           MD1CHPPS            __at(0xE22);
#ifndef _LIB_BUILD
asm("MD1CHPPS equ 0E22h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD1CHPPS               :6;
    };
} MD1CHPPSbits_t;
extern volatile MD1CHPPSbits_t MD1CHPPSbits __at(0xE22);
// bitfield macros
#define _MD1CHPPS_MD1CHPPS_POSN                             0x0
#define _MD1CHPPS_MD1CHPPS_POSITION                         0x0
#define _MD1CHPPS_MD1CHPPS_SIZE                             0x6
#define _MD1CHPPS_MD1CHPPS_LENGTH                           0x6
#define _MD1CHPPS_MD1CHPPS_MASK                             0x3F

// Register: MD1MODPPS
#define MD1MODPPS MD1MODPPS
extern volatile unsigned char           MD1MODPPS           __at(0xE23);
#ifndef _LIB_BUILD
asm("MD1MODPPS equ 0E23h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD1MODPPS              :6;
    };
} MD1MODPPSbits_t;
extern volatile MD1MODPPSbits_t MD1MODPPSbits __at(0xE23);
// bitfield macros
#define _MD1MODPPS_MD1MODPPS_POSN                           0x0
#define _MD1MODPPS_MD1MODPPS_POSITION                       0x0
#define _MD1MODPPS_MD1MODPPS_SIZE                           0x6
#define _MD1MODPPS_MD1MODPPS_LENGTH                         0x6
#define _MD1MODPPS_MD1MODPPS_MASK                           0x3F

// Register: MD2CLPPS
#define MD2CLPPS MD2CLPPS
extern volatile unsigned char           MD2CLPPS            __at(0xE24);
#ifndef _LIB_BUILD
asm("MD2CLPPS equ 0E24h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD2CLPPS               :6;
    };
} MD2CLPPSbits_t;
extern volatile MD2CLPPSbits_t MD2CLPPSbits __at(0xE24);
// bitfield macros
#define _MD2CLPPS_MD2CLPPS_POSN                             0x0
#define _MD2CLPPS_MD2CLPPS_POSITION                         0x0
#define _MD2CLPPS_MD2CLPPS_SIZE                             0x6
#define _MD2CLPPS_MD2CLPPS_LENGTH                           0x6
#define _MD2CLPPS_MD2CLPPS_MASK                             0x3F

// Register: MD2CHPPS
#define MD2CHPPS MD2CHPPS
extern volatile unsigned char           MD2CHPPS            __at(0xE25);
#ifndef _LIB_BUILD
asm("MD2CHPPS equ 0E25h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD2CHPPS               :6;
    };
} MD2CHPPSbits_t;
extern volatile MD2CHPPSbits_t MD2CHPPSbits __at(0xE25);
// bitfield macros
#define _MD2CHPPS_MD2CHPPS_POSN                             0x0
#define _MD2CHPPS_MD2CHPPS_POSITION                         0x0
#define _MD2CHPPS_MD2CHPPS_SIZE                             0x6
#define _MD2CHPPS_MD2CHPPS_LENGTH                           0x6
#define _MD2CHPPS_MD2CHPPS_MASK                             0x3F

// Register: MD2MODPPS
#define MD2MODPPS MD2MODPPS
extern volatile unsigned char           MD2MODPPS           __at(0xE26);
#ifndef _LIB_BUILD
asm("MD2MODPPS equ 0E26h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD2MODPPS              :6;
    };
} MD2MODPPSbits_t;
extern volatile MD2MODPPSbits_t MD2MODPPSbits __at(0xE26);
// bitfield macros
#define _MD2MODPPS_MD2MODPPS_POSN                           0x0
#define _MD2MODPPS_MD2MODPPS_POSITION                       0x0
#define _MD2MODPPS_MD2MODPPS_SIZE                           0x6
#define _MD2MODPPS_MD2MODPPS_LENGTH                         0x6
#define _MD2MODPPS_MD2MODPPS_MASK                           0x3F

// Register: MD3CLPPS
#define MD3CLPPS MD3CLPPS
extern volatile unsigned char           MD3CLPPS            __at(0xE27);
#ifndef _LIB_BUILD
asm("MD3CLPPS equ 0E27h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD3CLPPS               :6;
    };
} MD3CLPPSbits_t;
extern volatile MD3CLPPSbits_t MD3CLPPSbits __at(0xE27);
// bitfield macros
#define _MD3CLPPS_MD3CLPPS_POSN                             0x0
#define _MD3CLPPS_MD3CLPPS_POSITION                         0x0
#define _MD3CLPPS_MD3CLPPS_SIZE                             0x6
#define _MD3CLPPS_MD3CLPPS_LENGTH                           0x6
#define _MD3CLPPS_MD3CLPPS_MASK                             0x3F

// Register: MD3CHPPS
#define MD3CHPPS MD3CHPPS
extern volatile unsigned char           MD3CHPPS            __at(0xE28);
#ifndef _LIB_BUILD
asm("MD3CHPPS equ 0E28h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD3CHPPS               :6;
    };
} MD3CHPPSbits_t;
extern volatile MD3CHPPSbits_t MD3CHPPSbits __at(0xE28);
// bitfield macros
#define _MD3CHPPS_MD3CHPPS_POSN                             0x0
#define _MD3CHPPS_MD3CHPPS_POSITION                         0x0
#define _MD3CHPPS_MD3CHPPS_SIZE                             0x6
#define _MD3CHPPS_MD3CHPPS_LENGTH                           0x6
#define _MD3CHPPS_MD3CHPPS_MASK                             0x3F

// Register: MD3MODPPS
#define MD3MODPPS MD3MODPPS
extern volatile unsigned char           MD3MODPPS           __at(0xE29);
#ifndef _LIB_BUILD
asm("MD3MODPPS equ 0E29h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD3MODPPS              :6;
    };
} MD3MODPPSbits_t;
extern volatile MD3MODPPSbits_t MD3MODPPSbits __at(0xE29);
// bitfield macros
#define _MD3MODPPS_MD3MODPPS_POSN                           0x0
#define _MD3MODPPS_MD3MODPPS_POSITION                       0x0
#define _MD3MODPPS_MD3MODPPS_SIZE                           0x6
#define _MD3MODPPS_MD3MODPPS_LENGTH                         0x6
#define _MD3MODPPS_MD3MODPPS_MASK                           0x3F

// Register: MD4CLPPS
#define MD4CLPPS MD4CLPPS
extern volatile unsigned char           MD4CLPPS            __at(0xE2A);
#ifndef _LIB_BUILD
asm("MD4CLPPS equ 0E2Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD4CLPPS               :6;
    };
} MD4CLPPSbits_t;
extern volatile MD4CLPPSbits_t MD4CLPPSbits __at(0xE2A);
// bitfield macros
#define _MD4CLPPS_MD4CLPPS_POSN                             0x0
#define _MD4CLPPS_MD4CLPPS_POSITION                         0x0
#define _MD4CLPPS_MD4CLPPS_SIZE                             0x6
#define _MD4CLPPS_MD4CLPPS_LENGTH                           0x6
#define _MD4CLPPS_MD4CLPPS_MASK                             0x3F

// Register: MD4CHPPS
#define MD4CHPPS MD4CHPPS
extern volatile unsigned char           MD4CHPPS            __at(0xE2B);
#ifndef _LIB_BUILD
asm("MD4CHPPS equ 0E2Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD4CHPPS               :6;
    };
} MD4CHPPSbits_t;
extern volatile MD4CHPPSbits_t MD4CHPPSbits __at(0xE2B);
// bitfield macros
#define _MD4CHPPS_MD4CHPPS_POSN                             0x0
#define _MD4CHPPS_MD4CHPPS_POSITION                         0x0
#define _MD4CHPPS_MD4CHPPS_SIZE                             0x6
#define _MD4CHPPS_MD4CHPPS_LENGTH                           0x6
#define _MD4CHPPS_MD4CHPPS_MASK                             0x3F

// Register: MD4MODPPS
#define MD4MODPPS MD4MODPPS
extern volatile unsigned char           MD4MODPPS           __at(0xE2C);
#ifndef _LIB_BUILD
asm("MD4MODPPS equ 0E2Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MD4MODPPS              :6;
    };
} MD4MODPPSbits_t;
extern volatile MD4MODPPSbits_t MD4MODPPSbits __at(0xE2C);
// bitfield macros
#define _MD4MODPPS_MD4MODPPS_POSN                           0x0
#define _MD4MODPPS_MD4MODPPS_POSITION                       0x0
#define _MD4MODPPS_MD4MODPPS_SIZE                           0x6
#define _MD4MODPPS_MD4MODPPS_LENGTH                         0x6
#define _MD4MODPPS_MD4MODPPS_MASK                           0x3F

// Register: PRG1RPPS
#define PRG1RPPS PRG1RPPS
extern volatile unsigned char           PRG1RPPS            __at(0xE2D);
#ifndef _LIB_BUILD
asm("PRG1RPPS equ 0E2Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRG1RPPS               :6;
    };
} PRG1RPPSbits_t;
extern volatile PRG1RPPSbits_t PRG1RPPSbits __at(0xE2D);
// bitfield macros
#define _PRG1RPPS_PRG1RPPS_POSN                             0x0
#define _PRG1RPPS_PRG1RPPS_POSITION                         0x0
#define _PRG1RPPS_PRG1RPPS_SIZE                             0x6
#define _PRG1RPPS_PRG1RPPS_LENGTH                           0x6
#define _PRG1RPPS_PRG1RPPS_MASK                             0x3F

// Register: PRG1FPPS
#define PRG1FPPS PRG1FPPS
extern volatile unsigned char           PRG1FPPS            __at(0xE2E);
#ifndef _LIB_BUILD
asm("PRG1FPPS equ 0E2Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRG1FPPS               :6;
    };
} PRG1FPPSbits_t;
extern volatile PRG1FPPSbits_t PRG1FPPSbits __at(0xE2E);
// bitfield macros
#define _PRG1FPPS_PRG1FPPS_POSN                             0x0
#define _PRG1FPPS_PRG1FPPS_POSITION                         0x0
#define _PRG1FPPS_PRG1FPPS_SIZE                             0x6
#define _PRG1FPPS_PRG1FPPS_LENGTH                           0x6
#define _PRG1FPPS_PRG1FPPS_MASK                             0x3F

// Register: PRG2RPPS
#define PRG2RPPS PRG2RPPS
extern volatile unsigned char           PRG2RPPS            __at(0xE2F);
#ifndef _LIB_BUILD
asm("PRG2RPPS equ 0E2Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRG2RPPS               :6;
    };
} PRG2RPPSbits_t;
extern volatile PRG2RPPSbits_t PRG2RPPSbits __at(0xE2F);
// bitfield macros
#define _PRG2RPPS_PRG2RPPS_POSN                             0x0
#define _PRG2RPPS_PRG2RPPS_POSITION                         0x0
#define _PRG2RPPS_PRG2RPPS_SIZE                             0x6
#define _PRG2RPPS_PRG2RPPS_LENGTH                           0x6
#define _PRG2RPPS_PRG2RPPS_MASK                             0x3F

// Register: PRG2FPPS
#define PRG2FPPS PRG2FPPS
extern volatile unsigned char           PRG2FPPS            __at(0xE30);
#ifndef _LIB_BUILD
asm("PRG2FPPS equ 0E30h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRG2FPPS               :6;
    };
} PRG2FPPSbits_t;
extern volatile PRG2FPPSbits_t PRG2FPPSbits __at(0xE30);
// bitfield macros
#define _PRG2FPPS_PRG2FPPS_POSN                             0x0
#define _PRG2FPPS_PRG2FPPS_POSITION                         0x0
#define _PRG2FPPS_PRG2FPPS_SIZE                             0x6
#define _PRG2FPPS_PRG2FPPS_LENGTH                           0x6
#define _PRG2FPPS_PRG2FPPS_MASK                             0x3F

// Register: PRG3RPPS
#define PRG3RPPS PRG3RPPS
extern volatile unsigned char           PRG3RPPS            __at(0xE31);
#ifndef _LIB_BUILD
asm("PRG3RPPS equ 0E31h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRG3RPPS               :6;
    };
} PRG3RPPSbits_t;
extern volatile PRG3RPPSbits_t PRG3RPPSbits __at(0xE31);
// bitfield macros
#define _PRG3RPPS_PRG3RPPS_POSN                             0x0
#define _PRG3RPPS_PRG3RPPS_POSITION                         0x0
#define _PRG3RPPS_PRG3RPPS_SIZE                             0x6
#define _PRG3RPPS_PRG3RPPS_LENGTH                           0x6
#define _PRG3RPPS_PRG3RPPS_MASK                             0x3F

// Register: PRG3FPPS
#define PRG3FPPS PRG3FPPS
extern volatile unsigned char           PRG3FPPS            __at(0xE32);
#ifndef _LIB_BUILD
asm("PRG3FPPS equ 0E32h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRG3FPPS               :6;
    };
} PRG3FPPSbits_t;
extern volatile PRG3FPPSbits_t PRG3FPPSbits __at(0xE32);
// bitfield macros
#define _PRG3FPPS_PRG3FPPS_POSN                             0x0
#define _PRG3FPPS_PRG3FPPS_POSITION                         0x0
#define _PRG3FPPS_PRG3FPPS_SIZE                             0x6
#define _PRG3FPPS_PRG3FPPS_LENGTH                           0x6
#define _PRG3FPPS_PRG3FPPS_MASK                             0x3F

// Register: PRG4RPPS
#define PRG4RPPS PRG4RPPS
extern volatile unsigned char           PRG4RPPS            __at(0xE33);
#ifndef _LIB_BUILD
asm("PRG4RPPS equ 0E33h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRG4RPPS               :6;
    };
} PRG4RPPSbits_t;
extern volatile PRG4RPPSbits_t PRG4RPPSbits __at(0xE33);
// bitfield macros
#define _PRG4RPPS_PRG4RPPS_POSN                             0x0
#define _PRG4RPPS_PRG4RPPS_POSITION                         0x0
#define _PRG4RPPS_PRG4RPPS_SIZE                             0x6
#define _PRG4RPPS_PRG4RPPS_LENGTH                           0x6
#define _PRG4RPPS_PRG4RPPS_MASK                             0x3F

// Register: PRG4FPPS
#define PRG4FPPS PRG4FPPS
extern volatile unsigned char           PRG4FPPS            __at(0xE34);
#ifndef _LIB_BUILD
asm("PRG4FPPS equ 0E34h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRG4FPPS               :6;
    };
} PRG4FPPSbits_t;
extern volatile PRG4FPPSbits_t PRG4FPPSbits __at(0xE34);
// bitfield macros
#define _PRG4FPPS_PRG4FPPS_POSN                             0x0
#define _PRG4FPPS_PRG4FPPS_POSITION                         0x0
#define _PRG4FPPS_PRG4FPPS_SIZE                             0x6
#define _PRG4FPPS_PRG4FPPS_LENGTH                           0x6
#define _PRG4FPPS_PRG4FPPS_MASK                             0x3F

// Register: CLCIN0PPS
#define CLCIN0PPS CLCIN0PPS
extern volatile unsigned char           CLCIN0PPS           __at(0xE35);
#ifndef _LIB_BUILD
asm("CLCIN0PPS equ 0E35h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLCIN0PPS              :6;
    };
} CLCIN0PPSbits_t;
extern volatile CLCIN0PPSbits_t CLCIN0PPSbits __at(0xE35);
// bitfield macros
#define _CLCIN0PPS_CLCIN0PPS_POSN                           0x0
#define _CLCIN0PPS_CLCIN0PPS_POSITION                       0x0
#define _CLCIN0PPS_CLCIN0PPS_SIZE                           0x6
#define _CLCIN0PPS_CLCIN0PPS_LENGTH                         0x6
#define _CLCIN0PPS_CLCIN0PPS_MASK                           0x3F

// Register: CLCIN1PPS
#define CLCIN1PPS CLCIN1PPS
extern volatile unsigned char           CLCIN1PPS           __at(0xE36);
#ifndef _LIB_BUILD
asm("CLCIN1PPS equ 0E36h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLCIN1PPS              :6;
    };
} CLCIN1PPSbits_t;
extern volatile CLCIN1PPSbits_t CLCIN1PPSbits __at(0xE36);
// bitfield macros
#define _CLCIN1PPS_CLCIN1PPS_POSN                           0x0
#define _CLCIN1PPS_CLCIN1PPS_POSITION                       0x0
#define _CLCIN1PPS_CLCIN1PPS_SIZE                           0x6
#define _CLCIN1PPS_CLCIN1PPS_LENGTH                         0x6
#define _CLCIN1PPS_CLCIN1PPS_MASK                           0x3F

// Register: CLCIN2PPS
#define CLCIN2PPS CLCIN2PPS
extern volatile unsigned char           CLCIN2PPS           __at(0xE37);
#ifndef _LIB_BUILD
asm("CLCIN2PPS equ 0E37h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLCIN2PPS              :6;
    };
} CLCIN2PPSbits_t;
extern volatile CLCIN2PPSbits_t CLCIN2PPSbits __at(0xE37);
// bitfield macros
#define _CLCIN2PPS_CLCIN2PPS_POSN                           0x0
#define _CLCIN2PPS_CLCIN2PPS_POSITION                       0x0
#define _CLCIN2PPS_CLCIN2PPS_SIZE                           0x6
#define _CLCIN2PPS_CLCIN2PPS_LENGTH                         0x6
#define _CLCIN2PPS_CLCIN2PPS_MASK                           0x3F

// Register: CLCIN3PPS
#define CLCIN3PPS CLCIN3PPS
extern volatile unsigned char           CLCIN3PPS           __at(0xE38);
#ifndef _LIB_BUILD
asm("CLCIN3PPS equ 0E38h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLCIN3PPS              :6;
    };
} CLCIN3PPSbits_t;
extern volatile CLCIN3PPSbits_t CLCIN3PPSbits __at(0xE38);
// bitfield macros
#define _CLCIN3PPS_CLCIN3PPS_POSN                           0x0
#define _CLCIN3PPS_CLCIN3PPS_POSITION                       0x0
#define _CLCIN3PPS_CLCIN3PPS_SIZE                           0x6
#define _CLCIN3PPS_CLCIN3PPS_LENGTH                         0x6
#define _CLCIN3PPS_CLCIN3PPS_MASK                           0x3F

// Register: ADCACTPPS
#define ADCACTPPS ADCACTPPS
extern volatile unsigned char           ADCACTPPS           __at(0xE39);
#ifndef _LIB_BUILD
asm("ADCACTPPS equ 0E39h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADCACTPPS              :6;
    };
} ADCACTPPSbits_t;
extern volatile ADCACTPPSbits_t ADCACTPPSbits __at(0xE39);
// bitfield macros
#define _ADCACTPPS_ADCACTPPS_POSN                           0x0
#define _ADCACTPPS_ADCACTPPS_POSITION                       0x0
#define _ADCACTPPS_ADCACTPPS_SIZE                           0x6
#define _ADCACTPPS_ADCACTPPS_LENGTH                         0x6
#define _ADCACTPPS_ADCACTPPS_MASK                           0x3F

// Register: SSPCLKPPS
#define SSPCLKPPS SSPCLKPPS
extern volatile unsigned char           SSPCLKPPS           __at(0xE3A);
#ifndef _LIB_BUILD
asm("SSPCLKPPS equ 0E3Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPCLKPPS              :6;
    };
} SSPCLKPPSbits_t;
extern volatile SSPCLKPPSbits_t SSPCLKPPSbits __at(0xE3A);
// bitfield macros
#define _SSPCLKPPS_SSPCLKPPS_POSN                           0x0
#define _SSPCLKPPS_SSPCLKPPS_POSITION                       0x0
#define _SSPCLKPPS_SSPCLKPPS_SIZE                           0x6
#define _SSPCLKPPS_SSPCLKPPS_LENGTH                         0x6
#define _SSPCLKPPS_SSPCLKPPS_MASK                           0x3F

// Register: SSPDATPPS
#define SSPDATPPS SSPDATPPS
extern volatile unsigned char           SSPDATPPS           __at(0xE3B);
#ifndef _LIB_BUILD
asm("SSPDATPPS equ 0E3Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPDATPPS              :6;
    };
} SSPDATPPSbits_t;
extern volatile SSPDATPPSbits_t SSPDATPPSbits __at(0xE3B);
// bitfield macros
#define _SSPDATPPS_SSPDATPPS_POSN                           0x0
#define _SSPDATPPS_SSPDATPPS_POSITION                       0x0
#define _SSPDATPPS_SSPDATPPS_SIZE                           0x6
#define _SSPDATPPS_SSPDATPPS_LENGTH                         0x6
#define _SSPDATPPS_SSPDATPPS_MASK                           0x3F

// Register: SSPSSPPS
#define SSPSSPPS SSPSSPPS
extern volatile unsigned char           SSPSSPPS            __at(0xE3C);
#ifndef _LIB_BUILD
asm("SSPSSPPS equ 0E3Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPSSPPS               :6;
    };
} SSPSSPPSbits_t;
extern volatile SSPSSPPSbits_t SSPSSPPSbits __at(0xE3C);
// bitfield macros
#define _SSPSSPPS_SSPSSPPS_POSN                             0x0
#define _SSPSSPPS_SSPSSPPS_POSITION                         0x0
#define _SSPSSPPS_SSPSSPPS_SIZE                             0x6
#define _SSPSSPPS_SSPSSPPS_LENGTH                           0x6
#define _SSPSSPPS_SSPSSPPS_MASK                             0x3F

// Register: RXPPS
#define RXPPS RXPPS
extern volatile unsigned char           RXPPS               __at(0xE3D);
#ifndef _LIB_BUILD
asm("RXPPS equ 0E3Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXPPS                  :6;
    };
} RXPPSbits_t;
extern volatile RXPPSbits_t RXPPSbits __at(0xE3D);
// bitfield macros
#define _RXPPS_RXPPS_POSN                                   0x0
#define _RXPPS_RXPPS_POSITION                               0x0
#define _RXPPS_RXPPS_SIZE                                   0x6
#define _RXPPS_RXPPS_LENGTH                                 0x6
#define _RXPPS_RXPPS_MASK                                   0x3F

// Register: CKPPS
#define CKPPS CKPPS
extern volatile unsigned char           CKPPS               __at(0xE3E);
#ifndef _LIB_BUILD
asm("CKPPS equ 0E3Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CKPPS                  :6;
    };
} CKPPSbits_t;
extern volatile CKPPSbits_t CKPPSbits __at(0xE3E);
// bitfield macros
#define _CKPPS_CKPPS_POSN                                   0x0
#define _CKPPS_CKPPS_POSITION                               0x0
#define _CKPPS_CKPPS_SIZE                                   0x6
#define _CKPPS_CKPPS_LENGTH                                 0x6
#define _CKPPS_CKPPS_MASK                                   0x3F

// Register: RA0PPS
#define RA0PPS RA0PPS
extern volatile unsigned char           RA0PPS              __at(0xE90);
#ifndef _LIB_BUILD
asm("RA0PPS equ 0E90h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA0PPS                 :6;
    };
} RA0PPSbits_t;
extern volatile RA0PPSbits_t RA0PPSbits __at(0xE90);
// bitfield macros
#define _RA0PPS_RA0PPS_POSN                                 0x0
#define _RA0PPS_RA0PPS_POSITION                             0x0
#define _RA0PPS_RA0PPS_SIZE                                 0x6
#define _RA0PPS_RA0PPS_LENGTH                               0x6
#define _RA0PPS_RA0PPS_MASK                                 0x3F

// Register: RA1PPS
#define RA1PPS RA1PPS
extern volatile unsigned char           RA1PPS              __at(0xE91);
#ifndef _LIB_BUILD
asm("RA1PPS equ 0E91h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA1PPS                 :6;
    };
} RA1PPSbits_t;
extern volatile RA1PPSbits_t RA1PPSbits __at(0xE91);
// bitfield macros
#define _RA1PPS_RA1PPS_POSN                                 0x0
#define _RA1PPS_RA1PPS_POSITION                             0x0
#define _RA1PPS_RA1PPS_SIZE                                 0x6
#define _RA1PPS_RA1PPS_LENGTH                               0x6
#define _RA1PPS_RA1PPS_MASK                                 0x3F

// Register: RA2PPS
#define RA2PPS RA2PPS
extern volatile unsigned char           RA2PPS              __at(0xE92);
#ifndef _LIB_BUILD
asm("RA2PPS equ 0E92h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA2PPS                 :6;
    };
} RA2PPSbits_t;
extern volatile RA2PPSbits_t RA2PPSbits __at(0xE92);
// bitfield macros
#define _RA2PPS_RA2PPS_POSN                                 0x0
#define _RA2PPS_RA2PPS_POSITION                             0x0
#define _RA2PPS_RA2PPS_SIZE                                 0x6
#define _RA2PPS_RA2PPS_LENGTH                               0x6
#define _RA2PPS_RA2PPS_MASK                                 0x3F

// Register: RA3PPS
#define RA3PPS RA3PPS
extern volatile unsigned char           RA3PPS              __at(0xE93);
#ifndef _LIB_BUILD
asm("RA3PPS equ 0E93h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA3PPS                 :6;
    };
} RA3PPSbits_t;
extern volatile RA3PPSbits_t RA3PPSbits __at(0xE93);
// bitfield macros
#define _RA3PPS_RA3PPS_POSN                                 0x0
#define _RA3PPS_RA3PPS_POSITION                             0x0
#define _RA3PPS_RA3PPS_SIZE                                 0x6
#define _RA3PPS_RA3PPS_LENGTH                               0x6
#define _RA3PPS_RA3PPS_MASK                                 0x3F

// Register: RA4PPS
#define RA4PPS RA4PPS
extern volatile unsigned char           RA4PPS              __at(0xE94);
#ifndef _LIB_BUILD
asm("RA4PPS equ 0E94h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA4PPS                 :6;
    };
} RA4PPSbits_t;
extern volatile RA4PPSbits_t RA4PPSbits __at(0xE94);
// bitfield macros
#define _RA4PPS_RA4PPS_POSN                                 0x0
#define _RA4PPS_RA4PPS_POSITION                             0x0
#define _RA4PPS_RA4PPS_SIZE                                 0x6
#define _RA4PPS_RA4PPS_LENGTH                               0x6
#define _RA4PPS_RA4PPS_MASK                                 0x3F

// Register: RA5PPS
#define RA5PPS RA5PPS
extern volatile unsigned char           RA5PPS              __at(0xE95);
#ifndef _LIB_BUILD
asm("RA5PPS equ 0E95h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA5PPS                 :6;
    };
} RA5PPSbits_t;
extern volatile RA5PPSbits_t RA5PPSbits __at(0xE95);
// bitfield macros
#define _RA5PPS_RA5PPS_POSN                                 0x0
#define _RA5PPS_RA5PPS_POSITION                             0x0
#define _RA5PPS_RA5PPS_SIZE                                 0x6
#define _RA5PPS_RA5PPS_LENGTH                               0x6
#define _RA5PPS_RA5PPS_MASK                                 0x3F

// Register: RA6PPS
#define RA6PPS RA6PPS
extern volatile unsigned char           RA6PPS              __at(0xE96);
#ifndef _LIB_BUILD
asm("RA6PPS equ 0E96h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA6PPS                 :6;
    };
} RA6PPSbits_t;
extern volatile RA6PPSbits_t RA6PPSbits __at(0xE96);
// bitfield macros
#define _RA6PPS_RA6PPS_POSN                                 0x0
#define _RA6PPS_RA6PPS_POSITION                             0x0
#define _RA6PPS_RA6PPS_SIZE                                 0x6
#define _RA6PPS_RA6PPS_LENGTH                               0x6
#define _RA6PPS_RA6PPS_MASK                                 0x3F

// Register: RA7PPS
#define RA7PPS RA7PPS
extern volatile unsigned char           RA7PPS              __at(0xE97);
#ifndef _LIB_BUILD
asm("RA7PPS equ 0E97h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA7PPS                 :6;
    };
} RA7PPSbits_t;
extern volatile RA7PPSbits_t RA7PPSbits __at(0xE97);
// bitfield macros
#define _RA7PPS_RA7PPS_POSN                                 0x0
#define _RA7PPS_RA7PPS_POSITION                             0x0
#define _RA7PPS_RA7PPS_SIZE                                 0x6
#define _RA7PPS_RA7PPS_LENGTH                               0x6
#define _RA7PPS_RA7PPS_MASK                                 0x3F

// Register: RB0PPS
#define RB0PPS RB0PPS
extern volatile unsigned char           RB0PPS              __at(0xE98);
#ifndef _LIB_BUILD
asm("RB0PPS equ 0E98h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB0PPS                 :6;
    };
} RB0PPSbits_t;
extern volatile RB0PPSbits_t RB0PPSbits __at(0xE98);
// bitfield macros
#define _RB0PPS_RB0PPS_POSN                                 0x0
#define _RB0PPS_RB0PPS_POSITION                             0x0
#define _RB0PPS_RB0PPS_SIZE                                 0x6
#define _RB0PPS_RB0PPS_LENGTH                               0x6
#define _RB0PPS_RB0PPS_MASK                                 0x3F

// Register: RB1PPS
#define RB1PPS RB1PPS
extern volatile unsigned char           RB1PPS              __at(0xE99);
#ifndef _LIB_BUILD
asm("RB1PPS equ 0E99h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB1PPS                 :6;
    };
} RB1PPSbits_t;
extern volatile RB1PPSbits_t RB1PPSbits __at(0xE99);
// bitfield macros
#define _RB1PPS_RB1PPS_POSN                                 0x0
#define _RB1PPS_RB1PPS_POSITION                             0x0
#define _RB1PPS_RB1PPS_SIZE                                 0x6
#define _RB1PPS_RB1PPS_LENGTH                               0x6
#define _RB1PPS_RB1PPS_MASK                                 0x3F

// Register: RB2PPS
#define RB2PPS RB2PPS
extern volatile unsigned char           RB2PPS              __at(0xE9A);
#ifndef _LIB_BUILD
asm("RB2PPS equ 0E9Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB2PPS                 :6;
    };
} RB2PPSbits_t;
extern volatile RB2PPSbits_t RB2PPSbits __at(0xE9A);
// bitfield macros
#define _RB2PPS_RB2PPS_POSN                                 0x0
#define _RB2PPS_RB2PPS_POSITION                             0x0
#define _RB2PPS_RB2PPS_SIZE                                 0x6
#define _RB2PPS_RB2PPS_LENGTH                               0x6
#define _RB2PPS_RB2PPS_MASK                                 0x3F

// Register: RB3PPS
#define RB3PPS RB3PPS
extern volatile unsigned char           RB3PPS              __at(0xE9B);
#ifndef _LIB_BUILD
asm("RB3PPS equ 0E9Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB3PPS                 :6;
    };
} RB3PPSbits_t;
extern volatile RB3PPSbits_t RB3PPSbits __at(0xE9B);
// bitfield macros
#define _RB3PPS_RB3PPS_POSN                                 0x0
#define _RB3PPS_RB3PPS_POSITION                             0x0
#define _RB3PPS_RB3PPS_SIZE                                 0x6
#define _RB3PPS_RB3PPS_LENGTH                               0x6
#define _RB3PPS_RB3PPS_MASK                                 0x3F

// Register: RB4PPS
#define RB4PPS RB4PPS
extern volatile unsigned char           RB4PPS              __at(0xE9C);
#ifndef _LIB_BUILD
asm("RB4PPS equ 0E9Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB4PPS                 :6;
    };
} RB4PPSbits_t;
extern volatile RB4PPSbits_t RB4PPSbits __at(0xE9C);
// bitfield macros
#define _RB4PPS_RB4PPS_POSN                                 0x0
#define _RB4PPS_RB4PPS_POSITION                             0x0
#define _RB4PPS_RB4PPS_SIZE                                 0x6
#define _RB4PPS_RB4PPS_LENGTH                               0x6
#define _RB4PPS_RB4PPS_MASK                                 0x3F

// Register: RB5PPS
#define RB5PPS RB5PPS
extern volatile unsigned char           RB5PPS              __at(0xE9D);
#ifndef _LIB_BUILD
asm("RB5PPS equ 0E9Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB5PPS                 :6;
    };
} RB5PPSbits_t;
extern volatile RB5PPSbits_t RB5PPSbits __at(0xE9D);
// bitfield macros
#define _RB5PPS_RB5PPS_POSN                                 0x0
#define _RB5PPS_RB5PPS_POSITION                             0x0
#define _RB5PPS_RB5PPS_SIZE                                 0x6
#define _RB5PPS_RB5PPS_LENGTH                               0x6
#define _RB5PPS_RB5PPS_MASK                                 0x3F

// Register: RB6PPS
#define RB6PPS RB6PPS
extern volatile unsigned char           RB6PPS              __at(0xE9E);
#ifndef _LIB_BUILD
asm("RB6PPS equ 0E9Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB6PPS                 :6;
    };
} RB6PPSbits_t;
extern volatile RB6PPSbits_t RB6PPSbits __at(0xE9E);
// bitfield macros
#define _RB6PPS_RB6PPS_POSN                                 0x0
#define _RB6PPS_RB6PPS_POSITION                             0x0
#define _RB6PPS_RB6PPS_SIZE                                 0x6
#define _RB6PPS_RB6PPS_LENGTH                               0x6
#define _RB6PPS_RB6PPS_MASK                                 0x3F

// Register: RB7PPS
#define RB7PPS RB7PPS
extern volatile unsigned char           RB7PPS              __at(0xE9F);
#ifndef _LIB_BUILD
asm("RB7PPS equ 0E9Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB7PPS                 :6;
    };
} RB7PPSbits_t;
extern volatile RB7PPSbits_t RB7PPSbits __at(0xE9F);
// bitfield macros
#define _RB7PPS_RB7PPS_POSN                                 0x0
#define _RB7PPS_RB7PPS_POSITION                             0x0
#define _RB7PPS_RB7PPS_SIZE                                 0x6
#define _RB7PPS_RB7PPS_LENGTH                               0x6
#define _RB7PPS_RB7PPS_MASK                                 0x3F

// Register: RC0PPS
#define RC0PPS RC0PPS
extern volatile unsigned char           RC0PPS              __at(0xEA0);
#ifndef _LIB_BUILD
asm("RC0PPS equ 0EA0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC0PPS                 :6;
    };
} RC0PPSbits_t;
extern volatile RC0PPSbits_t RC0PPSbits __at(0xEA0);
// bitfield macros
#define _RC0PPS_RC0PPS_POSN                                 0x0
#define _RC0PPS_RC0PPS_POSITION                             0x0
#define _RC0PPS_RC0PPS_SIZE                                 0x6
#define _RC0PPS_RC0PPS_LENGTH                               0x6
#define _RC0PPS_RC0PPS_MASK                                 0x3F

// Register: RC1PPS
#define RC1PPS RC1PPS
extern volatile unsigned char           RC1PPS              __at(0xEA1);
#ifndef _LIB_BUILD
asm("RC1PPS equ 0EA1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC1PPS                 :6;
    };
} RC1PPSbits_t;
extern volatile RC1PPSbits_t RC1PPSbits __at(0xEA1);
// bitfield macros
#define _RC1PPS_RC1PPS_POSN                                 0x0
#define _RC1PPS_RC1PPS_POSITION                             0x0
#define _RC1PPS_RC1PPS_SIZE                                 0x6
#define _RC1PPS_RC1PPS_LENGTH                               0x6
#define _RC1PPS_RC1PPS_MASK                                 0x3F

// Register: RC2PPS
#define RC2PPS RC2PPS
extern volatile unsigned char           RC2PPS              __at(0xEA2);
#ifndef _LIB_BUILD
asm("RC2PPS equ 0EA2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC2PPS                 :6;
    };
} RC2PPSbits_t;
extern volatile RC2PPSbits_t RC2PPSbits __at(0xEA2);
// bitfield macros
#define _RC2PPS_RC2PPS_POSN                                 0x0
#define _RC2PPS_RC2PPS_POSITION                             0x0
#define _RC2PPS_RC2PPS_SIZE                                 0x6
#define _RC2PPS_RC2PPS_LENGTH                               0x6
#define _RC2PPS_RC2PPS_MASK                                 0x3F

// Register: RC3PPS
#define RC3PPS RC3PPS
extern volatile unsigned char           RC3PPS              __at(0xEA3);
#ifndef _LIB_BUILD
asm("RC3PPS equ 0EA3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC3PPS                 :6;
    };
} RC3PPSbits_t;
extern volatile RC3PPSbits_t RC3PPSbits __at(0xEA3);
// bitfield macros
#define _RC3PPS_RC3PPS_POSN                                 0x0
#define _RC3PPS_RC3PPS_POSITION                             0x0
#define _RC3PPS_RC3PPS_SIZE                                 0x6
#define _RC3PPS_RC3PPS_LENGTH                               0x6
#define _RC3PPS_RC3PPS_MASK                                 0x3F

// Register: RC4PPS
#define RC4PPS RC4PPS
extern volatile unsigned char           RC4PPS              __at(0xEA4);
#ifndef _LIB_BUILD
asm("RC4PPS equ 0EA4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC4PPS                 :6;
    };
} RC4PPSbits_t;
extern volatile RC4PPSbits_t RC4PPSbits __at(0xEA4);
// bitfield macros
#define _RC4PPS_RC4PPS_POSN                                 0x0
#define _RC4PPS_RC4PPS_POSITION                             0x0
#define _RC4PPS_RC4PPS_SIZE                                 0x6
#define _RC4PPS_RC4PPS_LENGTH                               0x6
#define _RC4PPS_RC4PPS_MASK                                 0x3F

// Register: RC5PPS
#define RC5PPS RC5PPS
extern volatile unsigned char           RC5PPS              __at(0xEA5);
#ifndef _LIB_BUILD
asm("RC5PPS equ 0EA5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC5PPS                 :6;
    };
} RC5PPSbits_t;
extern volatile RC5PPSbits_t RC5PPSbits __at(0xEA5);
// bitfield macros
#define _RC5PPS_RC5PPS_POSN                                 0x0
#define _RC5PPS_RC5PPS_POSITION                             0x0
#define _RC5PPS_RC5PPS_SIZE                                 0x6
#define _RC5PPS_RC5PPS_LENGTH                               0x6
#define _RC5PPS_RC5PPS_MASK                                 0x3F

// Register: RC6PPS
#define RC6PPS RC6PPS
extern volatile unsigned char           RC6PPS              __at(0xEA6);
#ifndef _LIB_BUILD
asm("RC6PPS equ 0EA6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC6PPS                 :6;
    };
} RC6PPSbits_t;
extern volatile RC6PPSbits_t RC6PPSbits __at(0xEA6);
// bitfield macros
#define _RC6PPS_RC6PPS_POSN                                 0x0
#define _RC6PPS_RC6PPS_POSITION                             0x0
#define _RC6PPS_RC6PPS_SIZE                                 0x6
#define _RC6PPS_RC6PPS_LENGTH                               0x6
#define _RC6PPS_RC6PPS_MASK                                 0x3F

// Register: RC7PPS
#define RC7PPS RC7PPS
extern volatile unsigned char           RC7PPS              __at(0xEA7);
#ifndef _LIB_BUILD
asm("RC7PPS equ 0EA7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC7PPS                 :6;
    };
} RC7PPSbits_t;
extern volatile RC7PPSbits_t RC7PPSbits __at(0xEA7);
// bitfield macros
#define _RC7PPS_RC7PPS_POSN                                 0x0
#define _RC7PPS_RC7PPS_POSITION                             0x0
#define _RC7PPS_RC7PPS_SIZE                                 0x6
#define _RC7PPS_RC7PPS_LENGTH                               0x6
#define _RC7PPS_RC7PPS_MASK                                 0x3F

// Register: RD0PPS
#define RD0PPS RD0PPS
extern volatile unsigned char           RD0PPS              __at(0xEA8);
#ifndef _LIB_BUILD
asm("RD0PPS equ 0EA8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD0PPS                 :6;
    };
} RD0PPSbits_t;
extern volatile RD0PPSbits_t RD0PPSbits __at(0xEA8);
// bitfield macros
#define _RD0PPS_RD0PPS_POSN                                 0x0
#define _RD0PPS_RD0PPS_POSITION                             0x0
#define _RD0PPS_RD0PPS_SIZE                                 0x6
#define _RD0PPS_RD0PPS_LENGTH                               0x6
#define _RD0PPS_RD0PPS_MASK                                 0x3F

// Register: RD1PPS
#define RD1PPS RD1PPS
extern volatile unsigned char           RD1PPS              __at(0xEA9);
#ifndef _LIB_BUILD
asm("RD1PPS equ 0EA9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD1PPS                 :6;
    };
} RD1PPSbits_t;
extern volatile RD1PPSbits_t RD1PPSbits __at(0xEA9);
// bitfield macros
#define _RD1PPS_RD1PPS_POSN                                 0x0
#define _RD1PPS_RD1PPS_POSITION                             0x0
#define _RD1PPS_RD1PPS_SIZE                                 0x6
#define _RD1PPS_RD1PPS_LENGTH                               0x6
#define _RD1PPS_RD1PPS_MASK                                 0x3F

// Register: RD2PPS
#define RD2PPS RD2PPS
extern volatile unsigned char           RD2PPS              __at(0xEAA);
#ifndef _LIB_BUILD
asm("RD2PPS equ 0EAAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD2PPS                 :6;
    };
} RD2PPSbits_t;
extern volatile RD2PPSbits_t RD2PPSbits __at(0xEAA);
// bitfield macros
#define _RD2PPS_RD2PPS_POSN                                 0x0
#define _RD2PPS_RD2PPS_POSITION                             0x0
#define _RD2PPS_RD2PPS_SIZE                                 0x6
#define _RD2PPS_RD2PPS_LENGTH                               0x6
#define _RD2PPS_RD2PPS_MASK                                 0x3F

// Register: RD3PPS
#define RD3PPS RD3PPS
extern volatile unsigned char           RD3PPS              __at(0xEAB);
#ifndef _LIB_BUILD
asm("RD3PPS equ 0EABh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD3PPS                 :6;
    };
} RD3PPSbits_t;
extern volatile RD3PPSbits_t RD3PPSbits __at(0xEAB);
// bitfield macros
#define _RD3PPS_RD3PPS_POSN                                 0x0
#define _RD3PPS_RD3PPS_POSITION                             0x0
#define _RD3PPS_RD3PPS_SIZE                                 0x6
#define _RD3PPS_RD3PPS_LENGTH                               0x6
#define _RD3PPS_RD3PPS_MASK                                 0x3F

// Register: RD4PPS
#define RD4PPS RD4PPS
extern volatile unsigned char           RD4PPS              __at(0xEAC);
#ifndef _LIB_BUILD
asm("RD4PPS equ 0EACh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD4PPS                 :6;
    };
} RD4PPSbits_t;
extern volatile RD4PPSbits_t RD4PPSbits __at(0xEAC);
// bitfield macros
#define _RD4PPS_RD4PPS_POSN                                 0x0
#define _RD4PPS_RD4PPS_POSITION                             0x0
#define _RD4PPS_RD4PPS_SIZE                                 0x6
#define _RD4PPS_RD4PPS_LENGTH                               0x6
#define _RD4PPS_RD4PPS_MASK                                 0x3F

// Register: RD5PPS
#define RD5PPS RD5PPS
extern volatile unsigned char           RD5PPS              __at(0xEAD);
#ifndef _LIB_BUILD
asm("RD5PPS equ 0EADh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD5PPS                 :6;
    };
} RD5PPSbits_t;
extern volatile RD5PPSbits_t RD5PPSbits __at(0xEAD);
// bitfield macros
#define _RD5PPS_RD5PPS_POSN                                 0x0
#define _RD5PPS_RD5PPS_POSITION                             0x0
#define _RD5PPS_RD5PPS_SIZE                                 0x6
#define _RD5PPS_RD5PPS_LENGTH                               0x6
#define _RD5PPS_RD5PPS_MASK                                 0x3F

// Register: RD6PPS
#define RD6PPS RD6PPS
extern volatile unsigned char           RD6PPS              __at(0xEAE);
#ifndef _LIB_BUILD
asm("RD6PPS equ 0EAEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD6PPS                 :6;
    };
} RD6PPSbits_t;
extern volatile RD6PPSbits_t RD6PPSbits __at(0xEAE);
// bitfield macros
#define _RD6PPS_RD6PPS_POSN                                 0x0
#define _RD6PPS_RD6PPS_POSITION                             0x0
#define _RD6PPS_RD6PPS_SIZE                                 0x6
#define _RD6PPS_RD6PPS_LENGTH                               0x6
#define _RD6PPS_RD6PPS_MASK                                 0x3F

// Register: RD7PPS
#define RD7PPS RD7PPS
extern volatile unsigned char           RD7PPS              __at(0xEAF);
#ifndef _LIB_BUILD
asm("RD7PPS equ 0EAFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD7PPS                 :6;
    };
} RD7PPSbits_t;
extern volatile RD7PPSbits_t RD7PPSbits __at(0xEAF);
// bitfield macros
#define _RD7PPS_RD7PPS_POSN                                 0x0
#define _RD7PPS_RD7PPS_POSITION                             0x0
#define _RD7PPS_RD7PPS_SIZE                                 0x6
#define _RD7PPS_RD7PPS_LENGTH                               0x6
#define _RD7PPS_RD7PPS_MASK                                 0x3F

// Register: RE0PPS
#define RE0PPS RE0PPS
extern volatile unsigned char           RE0PPS              __at(0xEB0);
#ifndef _LIB_BUILD
asm("RE0PPS equ 0EB0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RE0PPS                 :6;
    };
} RE0PPSbits_t;
extern volatile RE0PPSbits_t RE0PPSbits __at(0xEB0);
// bitfield macros
#define _RE0PPS_RE0PPS_POSN                                 0x0
#define _RE0PPS_RE0PPS_POSITION                             0x0
#define _RE0PPS_RE0PPS_SIZE                                 0x6
#define _RE0PPS_RE0PPS_LENGTH                               0x6
#define _RE0PPS_RE0PPS_MASK                                 0x3F

// Register: RE1PPS
#define RE1PPS RE1PPS
extern volatile unsigned char           RE1PPS              __at(0xEB1);
#ifndef _LIB_BUILD
asm("RE1PPS equ 0EB1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RE1PPS                 :6;
    };
} RE1PPSbits_t;
extern volatile RE1PPSbits_t RE1PPSbits __at(0xEB1);
// bitfield macros
#define _RE1PPS_RE1PPS_POSN                                 0x0
#define _RE1PPS_RE1PPS_POSITION                             0x0
#define _RE1PPS_RE1PPS_SIZE                                 0x6
#define _RE1PPS_RE1PPS_LENGTH                               0x6
#define _RE1PPS_RE1PPS_MASK                                 0x3F

// Register: RE2PPS
#define RE2PPS RE2PPS
extern volatile unsigned char           RE2PPS              __at(0xEB2);
#ifndef _LIB_BUILD
asm("RE2PPS equ 0EB2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RE2PPS                 :6;
    };
} RE2PPSbits_t;
extern volatile RE2PPSbits_t RE2PPSbits __at(0xEB2);
// bitfield macros
#define _RE2PPS_RE2PPS_POSN                                 0x0
#define _RE2PPS_RE2PPS_POSITION                             0x0
#define _RE2PPS_RE2PPS_SIZE                                 0x6
#define _RE2PPS_RE2PPS_LENGTH                               0x6
#define _RE2PPS_RE2PPS_MASK                                 0x3F

// Register: CLCDATA
#define CLCDATA CLCDATA
extern volatile unsigned char           CLCDATA             __at(0xF0F);
#ifndef _LIB_BUILD
asm("CLCDATA equ 0F0Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MCLC1OUT               :1;
        unsigned MCLC2OUT               :1;
        unsigned MCLC3OUT               :1;
        unsigned MLC4OUT                :1;
    };
} CLCDATAbits_t;
extern volatile CLCDATAbits_t CLCDATAbits __at(0xF0F);
// bitfield macros
#define _CLCDATA_MCLC1OUT_POSN                              0x0
#define _CLCDATA_MCLC1OUT_POSITION                          0x0
#define _CLCDATA_MCLC1OUT_SIZE                              0x1
#define _CLCDATA_MCLC1OUT_LENGTH                            0x1
#define _CLCDATA_MCLC1OUT_MASK                              0x1
#define _CLCDATA_MCLC2OUT_POSN                              0x1
#define _CLCDATA_MCLC2OUT_POSITION                          0x1
#define _CLCDATA_MCLC2OUT_SIZE                              0x1
#define _CLCDATA_MCLC2OUT_LENGTH                            0x1
#define _CLCDATA_MCLC2OUT_MASK                              0x2
#define _CLCDATA_MCLC3OUT_POSN                              0x2
#define _CLCDATA_MCLC3OUT_POSITION                          0x2
#define _CLCDATA_MCLC3OUT_SIZE                              0x1
#define _CLCDATA_MCLC3OUT_LENGTH                            0x1
#define _CLCDATA_MCLC3OUT_MASK                              0x4
#define _CLCDATA_MLC4OUT_POSN                               0x3
#define _CLCDATA_MLC4OUT_POSITION                           0x3
#define _CLCDATA_MLC4OUT_SIZE                               0x1
#define _CLCDATA_MLC4OUT_LENGTH                             0x1
#define _CLCDATA_MLC4OUT_MASK                               0x8

// Register: CLC1CON
#define CLC1CON CLC1CON
extern volatile unsigned char           CLC1CON             __at(0xF10);
#ifndef _LIB_BUILD
asm("CLC1CON equ 0F10h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1MODE                :3;
        unsigned LC1INTN                :1;
        unsigned LC1INTP                :1;
        unsigned LC1OUT                 :1;
        unsigned                        :1;
        unsigned LC1EN                  :1;
    };
    struct {
        unsigned LC1MODE0               :1;
        unsigned LC1MODE1               :1;
        unsigned LC1MODE2               :1;
    };
    struct {
        unsigned MODE                   :3;
        unsigned INTN                   :1;
        unsigned INTP                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
    };
} CLC1CONbits_t;
extern volatile CLC1CONbits_t CLC1CONbits __at(0xF10);
// bitfield macros
#define _CLC1CON_LC1MODE_POSN                               0x0
#define _CLC1CON_LC1MODE_POSITION                           0x0
#define _CLC1CON_LC1MODE_SIZE                               0x3
#define _CLC1CON_LC1MODE_LENGTH                             0x3
#define _CLC1CON_LC1MODE_MASK                               0x7
#define _CLC1CON_LC1INTN_POSN                               0x3
#define _CLC1CON_LC1INTN_POSITION                           0x3
#define _CLC1CON_LC1INTN_SIZE                               0x1
#define _CLC1CON_LC1INTN_LENGTH                             0x1
#define _CLC1CON_LC1INTN_MASK                               0x8
#define _CLC1CON_LC1INTP_POSN                               0x4
#define _CLC1CON_LC1INTP_POSITION                           0x4
#define _CLC1CON_LC1INTP_SIZE                               0x1
#define _CLC1CON_LC1INTP_LENGTH                             0x1
#define _CLC1CON_LC1INTP_MASK                               0x10
#define _CLC1CON_LC1OUT_POSN                                0x5
#define _CLC1CON_LC1OUT_POSITION                            0x5
#define _CLC1CON_LC1OUT_SIZE                                0x1
#define _CLC1CON_LC1OUT_LENGTH                              0x1
#define _CLC1CON_LC1OUT_MASK                                0x20
#define _CLC1CON_LC1EN_POSN                                 0x7
#define _CLC1CON_LC1EN_POSITION                             0x7
#define _CLC1CON_LC1EN_SIZE                                 0x1
#define _CLC1CON_LC1EN_LENGTH                               0x1
#define _CLC1CON_LC1EN_MASK                                 0x80
#define _CLC1CON_LC1MODE0_POSN                              0x0
#define _CLC1CON_LC1MODE0_POSITION                          0x0
#define _CLC1CON_LC1MODE0_SIZE                              0x1
#define _CLC1CON_LC1MODE0_LENGTH                            0x1
#define _CLC1CON_LC1MODE0_MASK                              0x1
#define _CLC1CON_LC1MODE1_POSN                              0x1
#define _CLC1CON_LC1MODE1_POSITION                          0x1
#define _CLC1CON_LC1MODE1_SIZE                              0x1
#define _CLC1CON_LC1MODE1_LENGTH                            0x1
#define _CLC1CON_LC1MODE1_MASK                              0x2
#define _CLC1CON_LC1MODE2_POSN                              0x2
#define _CLC1CON_LC1MODE2_POSITION                          0x2
#define _CLC1CON_LC1MODE2_SIZE                              0x1
#define _CLC1CON_LC1MODE2_LENGTH                            0x1
#define _CLC1CON_LC1MODE2_MASK                              0x4
#define _CLC1CON_MODE_POSN                                  0x0
#define _CLC1CON_MODE_POSITION                              0x0
#define _CLC1CON_MODE_SIZE                                  0x3
#define _CLC1CON_MODE_LENGTH                                0x3
#define _CLC1CON_MODE_MASK                                  0x7
#define _CLC1CON_INTN_POSN                                  0x3
#define _CLC1CON_INTN_POSITION                              0x3
#define _CLC1CON_INTN_SIZE                                  0x1
#define _CLC1CON_INTN_LENGTH                                0x1
#define _CLC1CON_INTN_MASK                                  0x8
#define _CLC1CON_INTP_POSN                                  0x4
#define _CLC1CON_INTP_POSITION                              0x4
#define _CLC1CON_INTP_SIZE                                  0x1
#define _CLC1CON_INTP_LENGTH                                0x1
#define _CLC1CON_INTP_MASK                                  0x10
#define _CLC1CON_OUT_POSN                                   0x5
#define _CLC1CON_OUT_POSITION                               0x5
#define _CLC1CON_OUT_SIZE                                   0x1
#define _CLC1CON_OUT_LENGTH                                 0x1
#define _CLC1CON_OUT_MASK                                   0x20
#define _CLC1CON_EN_POSN                                    0x7
#define _CLC1CON_EN_POSITION                                0x7
#define _CLC1CON_EN_SIZE                                    0x1
#define _CLC1CON_EN_LENGTH                                  0x1
#define _CLC1CON_EN_MASK                                    0x80
#define _CLC1CON_MODE0_POSN                                 0x0
#define _CLC1CON_MODE0_POSITION                             0x0
#define _CLC1CON_MODE0_SIZE                                 0x1
#define _CLC1CON_MODE0_LENGTH                               0x1
#define _CLC1CON_MODE0_MASK                                 0x1
#define _CLC1CON_MODE1_POSN                                 0x1
#define _CLC1CON_MODE1_POSITION                             0x1
#define _CLC1CON_MODE1_SIZE                                 0x1
#define _CLC1CON_MODE1_LENGTH                               0x1
#define _CLC1CON_MODE1_MASK                                 0x2
#define _CLC1CON_MODE2_POSN                                 0x2
#define _CLC1CON_MODE2_POSITION                             0x2
#define _CLC1CON_MODE2_SIZE                                 0x1
#define _CLC1CON_MODE2_LENGTH                               0x1
#define _CLC1CON_MODE2_MASK                                 0x4

// Register: CLC1POL
#define CLC1POL CLC1POL
extern volatile unsigned char           CLC1POL             __at(0xF11);
#ifndef _LIB_BUILD
asm("CLC1POL equ 0F11h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1G1POL               :1;
        unsigned LC1G2POL               :1;
        unsigned LC1G3POL               :1;
        unsigned LC1G4POL               :1;
        unsigned                        :3;
        unsigned LC1POL                 :1;
    };
    struct {
        unsigned G1POL                  :1;
        unsigned G2POL                  :1;
        unsigned G3POL                  :1;
        unsigned G4POL                  :1;
        unsigned                        :3;
        unsigned POL                    :1;
    };
} CLC1POLbits_t;
extern volatile CLC1POLbits_t CLC1POLbits __at(0xF11);
// bitfield macros
#define _CLC1POL_LC1G1POL_POSN                              0x0
#define _CLC1POL_LC1G1POL_POSITION                          0x0
#define _CLC1POL_LC1G1POL_SIZE                              0x1
#define _CLC1POL_LC1G1POL_LENGTH                            0x1
#define _CLC1POL_LC1G1POL_MASK                              0x1
#define _CLC1POL_LC1G2POL_POSN                              0x1
#define _CLC1POL_LC1G2POL_POSITION                          0x1
#define _CLC1POL_LC1G2POL_SIZE                              0x1
#define _CLC1POL_LC1G2POL_LENGTH                            0x1
#define _CLC1POL_LC1G2POL_MASK                              0x2
#define _CLC1POL_LC1G3POL_POSN                              0x2
#define _CLC1POL_LC1G3POL_POSITION                          0x2
#define _CLC1POL_LC1G3POL_SIZE                              0x1
#define _CLC1POL_LC1G3POL_LENGTH                            0x1
#define _CLC1POL_LC1G3POL_MASK                              0x4
#define _CLC1POL_LC1G4POL_POSN                              0x3
#define _CLC1POL_LC1G4POL_POSITION                          0x3
#define _CLC1POL_LC1G4POL_SIZE                              0x1
#define _CLC1POL_LC1G4POL_LENGTH                            0x1
#define _CLC1POL_LC1G4POL_MASK                              0x8
#define _CLC1POL_LC1POL_POSN                                0x7
#define _CLC1POL_LC1POL_POSITION                            0x7
#define _CLC1POL_LC1POL_SIZE                                0x1
#define _CLC1POL_LC1POL_LENGTH                              0x1
#define _CLC1POL_LC1POL_MASK                                0x80
#define _CLC1POL_G1POL_POSN                                 0x0
#define _CLC1POL_G1POL_POSITION                             0x0
#define _CLC1POL_G1POL_SIZE                                 0x1
#define _CLC1POL_G1POL_LENGTH                               0x1
#define _CLC1POL_G1POL_MASK                                 0x1
#define _CLC1POL_G2POL_POSN                                 0x1
#define _CLC1POL_G2POL_POSITION                             0x1
#define _CLC1POL_G2POL_SIZE                                 0x1
#define _CLC1POL_G2POL_LENGTH                               0x1
#define _CLC1POL_G2POL_MASK                                 0x2
#define _CLC1POL_G3POL_POSN                                 0x2
#define _CLC1POL_G3POL_POSITION                             0x2
#define _CLC1POL_G3POL_SIZE                                 0x1
#define _CLC1POL_G3POL_LENGTH                               0x1
#define _CLC1POL_G3POL_MASK                                 0x4
#define _CLC1POL_G4POL_POSN                                 0x3
#define _CLC1POL_G4POL_POSITION                             0x3
#define _CLC1POL_G4POL_SIZE                                 0x1
#define _CLC1POL_G4POL_LENGTH                               0x1
#define _CLC1POL_G4POL_MASK                                 0x8
#define _CLC1POL_POL_POSN                                   0x7
#define _CLC1POL_POL_POSITION                               0x7
#define _CLC1POL_POL_SIZE                                   0x1
#define _CLC1POL_POL_LENGTH                                 0x1
#define _CLC1POL_POL_MASK                                   0x80

// Register: CLC1SEL0
#define CLC1SEL0 CLC1SEL0
extern volatile unsigned char           CLC1SEL0            __at(0xF12);
#ifndef _LIB_BUILD
asm("CLC1SEL0 equ 0F12h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1D1S0                :1;
        unsigned LC1D1S1                :1;
        unsigned LC1D1S2                :1;
        unsigned LC1D1S3                :1;
        unsigned LC1D1S4                :1;
        unsigned LC1D1S5                :1;
    };
    struct {
        unsigned LC1D1S                 :8;
    };
    struct {
        unsigned D1S                    :8;
    };
    struct {
        unsigned D1S0                   :1;
        unsigned D1S1                   :1;
        unsigned D1S2                   :1;
        unsigned D1S3                   :1;
        unsigned D1S4                   :1;
        unsigned D1S5                   :1;
    };
} CLC1SEL0bits_t;
extern volatile CLC1SEL0bits_t CLC1SEL0bits __at(0xF12);
// bitfield macros
#define _CLC1SEL0_LC1D1S0_POSN                              0x0
#define _CLC1SEL0_LC1D1S0_POSITION                          0x0
#define _CLC1SEL0_LC1D1S0_SIZE                              0x1
#define _CLC1SEL0_LC1D1S0_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S0_MASK                              0x1
#define _CLC1SEL0_LC1D1S1_POSN                              0x1
#define _CLC1SEL0_LC1D1S1_POSITION                          0x1
#define _CLC1SEL0_LC1D1S1_SIZE                              0x1
#define _CLC1SEL0_LC1D1S1_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S1_MASK                              0x2
#define _CLC1SEL0_LC1D1S2_POSN                              0x2
#define _CLC1SEL0_LC1D1S2_POSITION                          0x2
#define _CLC1SEL0_LC1D1S2_SIZE                              0x1
#define _CLC1SEL0_LC1D1S2_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S2_MASK                              0x4
#define _CLC1SEL0_LC1D1S3_POSN                              0x3
#define _CLC1SEL0_LC1D1S3_POSITION                          0x3
#define _CLC1SEL0_LC1D1S3_SIZE                              0x1
#define _CLC1SEL0_LC1D1S3_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S3_MASK                              0x8
#define _CLC1SEL0_LC1D1S4_POSN                              0x4
#define _CLC1SEL0_LC1D1S4_POSITION                          0x4
#define _CLC1SEL0_LC1D1S4_SIZE                              0x1
#define _CLC1SEL0_LC1D1S4_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S4_MASK                              0x10
#define _CLC1SEL0_LC1D1S5_POSN                              0x5
#define _CLC1SEL0_LC1D1S5_POSITION                          0x5
#define _CLC1SEL0_LC1D1S5_SIZE                              0x1
#define _CLC1SEL0_LC1D1S5_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S5_MASK                              0x20
#define _CLC1SEL0_LC1D1S_POSN                               0x0
#define _CLC1SEL0_LC1D1S_POSITION                           0x0
#define _CLC1SEL0_LC1D1S_SIZE                               0x8
#define _CLC1SEL0_LC1D1S_LENGTH                             0x8
#define _CLC1SEL0_LC1D1S_MASK                               0xFF
#define _CLC1SEL0_D1S_POSN                                  0x0
#define _CLC1SEL0_D1S_POSITION                              0x0
#define _CLC1SEL0_D1S_SIZE                                  0x8
#define _CLC1SEL0_D1S_LENGTH                                0x8
#define _CLC1SEL0_D1S_MASK                                  0xFF
#define _CLC1SEL0_D1S0_POSN                                 0x0
#define _CLC1SEL0_D1S0_POSITION                             0x0
#define _CLC1SEL0_D1S0_SIZE                                 0x1
#define _CLC1SEL0_D1S0_LENGTH                               0x1
#define _CLC1SEL0_D1S0_MASK                                 0x1
#define _CLC1SEL0_D1S1_POSN                                 0x1
#define _CLC1SEL0_D1S1_POSITION                             0x1
#define _CLC1SEL0_D1S1_SIZE                                 0x1
#define _CLC1SEL0_D1S1_LENGTH                               0x1
#define _CLC1SEL0_D1S1_MASK                                 0x2
#define _CLC1SEL0_D1S2_POSN                                 0x2
#define _CLC1SEL0_D1S2_POSITION                             0x2
#define _CLC1SEL0_D1S2_SIZE                                 0x1
#define _CLC1SEL0_D1S2_LENGTH                               0x1
#define _CLC1SEL0_D1S2_MASK                                 0x4
#define _CLC1SEL0_D1S3_POSN                                 0x3
#define _CLC1SEL0_D1S3_POSITION                             0x3
#define _CLC1SEL0_D1S3_SIZE                                 0x1
#define _CLC1SEL0_D1S3_LENGTH                               0x1
#define _CLC1SEL0_D1S3_MASK                                 0x8
#define _CLC1SEL0_D1S4_POSN                                 0x4
#define _CLC1SEL0_D1S4_POSITION                             0x4
#define _CLC1SEL0_D1S4_SIZE                                 0x1
#define _CLC1SEL0_D1S4_LENGTH                               0x1
#define _CLC1SEL0_D1S4_MASK                                 0x10
#define _CLC1SEL0_D1S5_POSN                                 0x5
#define _CLC1SEL0_D1S5_POSITION                             0x5
#define _CLC1SEL0_D1S5_SIZE                                 0x1
#define _CLC1SEL0_D1S5_LENGTH                               0x1
#define _CLC1SEL0_D1S5_MASK                                 0x20

// Register: CLC1SEL1
#define CLC1SEL1 CLC1SEL1
extern volatile unsigned char           CLC1SEL1            __at(0xF13);
#ifndef _LIB_BUILD
asm("CLC1SEL1 equ 0F13h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1D2S0                :1;
        unsigned LC1D2S1                :1;
        unsigned LC1D2S2                :1;
        unsigned LC1D2S3                :1;
        unsigned LC1D2S4                :1;
        unsigned LC1D2S5                :1;
    };
    struct {
        unsigned LC1D2S                 :8;
    };
    struct {
        unsigned D2S                    :8;
    };
    struct {
        unsigned D2S0                   :1;
        unsigned D2S1                   :1;
        unsigned D2S2                   :1;
        unsigned D2S3                   :1;
        unsigned D2S4                   :1;
        unsigned D2S5                   :1;
    };
} CLC1SEL1bits_t;
extern volatile CLC1SEL1bits_t CLC1SEL1bits __at(0xF13);
// bitfield macros
#define _CLC1SEL1_LC1D2S0_POSN                              0x0
#define _CLC1SEL1_LC1D2S0_POSITION                          0x0
#define _CLC1SEL1_LC1D2S0_SIZE                              0x1
#define _CLC1SEL1_LC1D2S0_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S0_MASK                              0x1
#define _CLC1SEL1_LC1D2S1_POSN                              0x1
#define _CLC1SEL1_LC1D2S1_POSITION                          0x1
#define _CLC1SEL1_LC1D2S1_SIZE                              0x1
#define _CLC1SEL1_LC1D2S1_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S1_MASK                              0x2
#define _CLC1SEL1_LC1D2S2_POSN                              0x2
#define _CLC1SEL1_LC1D2S2_POSITION                          0x2
#define _CLC1SEL1_LC1D2S2_SIZE                              0x1
#define _CLC1SEL1_LC1D2S2_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S2_MASK                              0x4
#define _CLC1SEL1_LC1D2S3_POSN                              0x3
#define _CLC1SEL1_LC1D2S3_POSITION                          0x3
#define _CLC1SEL1_LC1D2S3_SIZE                              0x1
#define _CLC1SEL1_LC1D2S3_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S3_MASK                              0x8
#define _CLC1SEL1_LC1D2S4_POSN                              0x4
#define _CLC1SEL1_LC1D2S4_POSITION                          0x4
#define _CLC1SEL1_LC1D2S4_SIZE                              0x1
#define _CLC1SEL1_LC1D2S4_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S4_MASK                              0x10
#define _CLC1SEL1_LC1D2S5_POSN                              0x5
#define _CLC1SEL1_LC1D2S5_POSITION                          0x5
#define _CLC1SEL1_LC1D2S5_SIZE                              0x1
#define _CLC1SEL1_LC1D2S5_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S5_MASK                              0x20
#define _CLC1SEL1_LC1D2S_POSN                               0x0
#define _CLC1SEL1_LC1D2S_POSITION                           0x0
#define _CLC1SEL1_LC1D2S_SIZE                               0x8
#define _CLC1SEL1_LC1D2S_LENGTH                             0x8
#define _CLC1SEL1_LC1D2S_MASK                               0xFF
#define _CLC1SEL1_D2S_POSN                                  0x0
#define _CLC1SEL1_D2S_POSITION                              0x0
#define _CLC1SEL1_D2S_SIZE                                  0x8
#define _CLC1SEL1_D2S_LENGTH                                0x8
#define _CLC1SEL1_D2S_MASK                                  0xFF
#define _CLC1SEL1_D2S0_POSN                                 0x0
#define _CLC1SEL1_D2S0_POSITION                             0x0
#define _CLC1SEL1_D2S0_SIZE                                 0x1
#define _CLC1SEL1_D2S0_LENGTH                               0x1
#define _CLC1SEL1_D2S0_MASK                                 0x1
#define _CLC1SEL1_D2S1_POSN                                 0x1
#define _CLC1SEL1_D2S1_POSITION                             0x1
#define _CLC1SEL1_D2S1_SIZE                                 0x1
#define _CLC1SEL1_D2S1_LENGTH                               0x1
#define _CLC1SEL1_D2S1_MASK                                 0x2
#define _CLC1SEL1_D2S2_POSN                                 0x2
#define _CLC1SEL1_D2S2_POSITION                             0x2
#define _CLC1SEL1_D2S2_SIZE                                 0x1
#define _CLC1SEL1_D2S2_LENGTH                               0x1
#define _CLC1SEL1_D2S2_MASK                                 0x4
#define _CLC1SEL1_D2S3_POSN                                 0x3
#define _CLC1SEL1_D2S3_POSITION                             0x3
#define _CLC1SEL1_D2S3_SIZE                                 0x1
#define _CLC1SEL1_D2S3_LENGTH                               0x1
#define _CLC1SEL1_D2S3_MASK                                 0x8
#define _CLC1SEL1_D2S4_POSN                                 0x4
#define _CLC1SEL1_D2S4_POSITION                             0x4
#define _CLC1SEL1_D2S4_SIZE                                 0x1
#define _CLC1SEL1_D2S4_LENGTH                               0x1
#define _CLC1SEL1_D2S4_MASK                                 0x10
#define _CLC1SEL1_D2S5_POSN                                 0x5
#define _CLC1SEL1_D2S5_POSITION                             0x5
#define _CLC1SEL1_D2S5_SIZE                                 0x1
#define _CLC1SEL1_D2S5_LENGTH                               0x1
#define _CLC1SEL1_D2S5_MASK                                 0x20

// Register: CLC1SEL2
#define CLC1SEL2 CLC1SEL2
extern volatile unsigned char           CLC1SEL2            __at(0xF14);
#ifndef _LIB_BUILD
asm("CLC1SEL2 equ 0F14h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1D3S0                :1;
        unsigned LC1D3S1                :1;
        unsigned LC1D3S2                :1;
        unsigned LC1D3S3                :1;
        unsigned LC1D3S4                :1;
        unsigned LC1D3S5                :1;
    };
    struct {
        unsigned LC1D3S                 :8;
    };
    struct {
        unsigned D3S                    :8;
    };
    struct {
        unsigned D3S0                   :1;
        unsigned D3S1                   :1;
        unsigned D3S2                   :1;
        unsigned D3S3                   :1;
        unsigned D3S4                   :1;
        unsigned D3S5                   :1;
    };
} CLC1SEL2bits_t;
extern volatile CLC1SEL2bits_t CLC1SEL2bits __at(0xF14);
// bitfield macros
#define _CLC1SEL2_LC1D3S0_POSN                              0x0
#define _CLC1SEL2_LC1D3S0_POSITION                          0x0
#define _CLC1SEL2_LC1D3S0_SIZE                              0x1
#define _CLC1SEL2_LC1D3S0_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S0_MASK                              0x1
#define _CLC1SEL2_LC1D3S1_POSN                              0x1
#define _CLC1SEL2_LC1D3S1_POSITION                          0x1
#define _CLC1SEL2_LC1D3S1_SIZE                              0x1
#define _CLC1SEL2_LC1D3S1_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S1_MASK                              0x2
#define _CLC1SEL2_LC1D3S2_POSN                              0x2
#define _CLC1SEL2_LC1D3S2_POSITION                          0x2
#define _CLC1SEL2_LC1D3S2_SIZE                              0x1
#define _CLC1SEL2_LC1D3S2_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S2_MASK                              0x4
#define _CLC1SEL2_LC1D3S3_POSN                              0x3
#define _CLC1SEL2_LC1D3S3_POSITION                          0x3
#define _CLC1SEL2_LC1D3S3_SIZE                              0x1
#define _CLC1SEL2_LC1D3S3_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S3_MASK                              0x8
#define _CLC1SEL2_LC1D3S4_POSN                              0x4
#define _CLC1SEL2_LC1D3S4_POSITION                          0x4
#define _CLC1SEL2_LC1D3S4_SIZE                              0x1
#define _CLC1SEL2_LC1D3S4_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S4_MASK                              0x10
#define _CLC1SEL2_LC1D3S5_POSN                              0x5
#define _CLC1SEL2_LC1D3S5_POSITION                          0x5
#define _CLC1SEL2_LC1D3S5_SIZE                              0x1
#define _CLC1SEL2_LC1D3S5_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S5_MASK                              0x20
#define _CLC1SEL2_LC1D3S_POSN                               0x0
#define _CLC1SEL2_LC1D3S_POSITION                           0x0
#define _CLC1SEL2_LC1D3S_SIZE                               0x8
#define _CLC1SEL2_LC1D3S_LENGTH                             0x8
#define _CLC1SEL2_LC1D3S_MASK                               0xFF
#define _CLC1SEL2_D3S_POSN                                  0x0
#define _CLC1SEL2_D3S_POSITION                              0x0
#define _CLC1SEL2_D3S_SIZE                                  0x8
#define _CLC1SEL2_D3S_LENGTH                                0x8
#define _CLC1SEL2_D3S_MASK                                  0xFF
#define _CLC1SEL2_D3S0_POSN                                 0x0
#define _CLC1SEL2_D3S0_POSITION                             0x0
#define _CLC1SEL2_D3S0_SIZE                                 0x1
#define _CLC1SEL2_D3S0_LENGTH                               0x1
#define _CLC1SEL2_D3S0_MASK                                 0x1
#define _CLC1SEL2_D3S1_POSN                                 0x1
#define _CLC1SEL2_D3S1_POSITION                             0x1
#define _CLC1SEL2_D3S1_SIZE                                 0x1
#define _CLC1SEL2_D3S1_LENGTH                               0x1
#define _CLC1SEL2_D3S1_MASK                                 0x2
#define _CLC1SEL2_D3S2_POSN                                 0x2
#define _CLC1SEL2_D3S2_POSITION                             0x2
#define _CLC1SEL2_D3S2_SIZE                                 0x1
#define _CLC1SEL2_D3S2_LENGTH                               0x1
#define _CLC1SEL2_D3S2_MASK                                 0x4
#define _CLC1SEL2_D3S3_POSN                                 0x3
#define _CLC1SEL2_D3S3_POSITION                             0x3
#define _CLC1SEL2_D3S3_SIZE                                 0x1
#define _CLC1SEL2_D3S3_LENGTH                               0x1
#define _CLC1SEL2_D3S3_MASK                                 0x8
#define _CLC1SEL2_D3S4_POSN                                 0x4
#define _CLC1SEL2_D3S4_POSITION                             0x4
#define _CLC1SEL2_D3S4_SIZE                                 0x1
#define _CLC1SEL2_D3S4_LENGTH                               0x1
#define _CLC1SEL2_D3S4_MASK                                 0x10
#define _CLC1SEL2_D3S5_POSN                                 0x5
#define _CLC1SEL2_D3S5_POSITION                             0x5
#define _CLC1SEL2_D3S5_SIZE                                 0x1
#define _CLC1SEL2_D3S5_LENGTH                               0x1
#define _CLC1SEL2_D3S5_MASK                                 0x20

// Register: CLC1SEL3
#define CLC1SEL3 CLC1SEL3
extern volatile unsigned char           CLC1SEL3            __at(0xF15);
#ifndef _LIB_BUILD
asm("CLC1SEL3 equ 0F15h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1D4S0                :1;
        unsigned LC1D4S1                :1;
        unsigned LC1D4S2                :1;
        unsigned LC1D4S3                :1;
        unsigned LC1D4S4                :1;
        unsigned LC1D4S5                :1;
    };
    struct {
        unsigned LC1D4S                 :8;
    };
    struct {
        unsigned D4S                    :8;
    };
    struct {
        unsigned D4S0                   :1;
        unsigned D4S1                   :1;
        unsigned D4S2                   :1;
        unsigned D4S3                   :1;
        unsigned D4S4                   :1;
        unsigned D4S5                   :1;
    };
} CLC1SEL3bits_t;
extern volatile CLC1SEL3bits_t CLC1SEL3bits __at(0xF15);
// bitfield macros
#define _CLC1SEL3_LC1D4S0_POSN                              0x0
#define _CLC1SEL3_LC1D4S0_POSITION                          0x0
#define _CLC1SEL3_LC1D4S0_SIZE                              0x1
#define _CLC1SEL3_LC1D4S0_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S0_MASK                              0x1
#define _CLC1SEL3_LC1D4S1_POSN                              0x1
#define _CLC1SEL3_LC1D4S1_POSITION                          0x1
#define _CLC1SEL3_LC1D4S1_SIZE                              0x1
#define _CLC1SEL3_LC1D4S1_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S1_MASK                              0x2
#define _CLC1SEL3_LC1D4S2_POSN                              0x2
#define _CLC1SEL3_LC1D4S2_POSITION                          0x2
#define _CLC1SEL3_LC1D4S2_SIZE                              0x1
#define _CLC1SEL3_LC1D4S2_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S2_MASK                              0x4
#define _CLC1SEL3_LC1D4S3_POSN                              0x3
#define _CLC1SEL3_LC1D4S3_POSITION                          0x3
#define _CLC1SEL3_LC1D4S3_SIZE                              0x1
#define _CLC1SEL3_LC1D4S3_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S3_MASK                              0x8
#define _CLC1SEL3_LC1D4S4_POSN                              0x4
#define _CLC1SEL3_LC1D4S4_POSITION                          0x4
#define _CLC1SEL3_LC1D4S4_SIZE                              0x1
#define _CLC1SEL3_LC1D4S4_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S4_MASK                              0x10
#define _CLC1SEL3_LC1D4S5_POSN                              0x5
#define _CLC1SEL3_LC1D4S5_POSITION                          0x5
#define _CLC1SEL3_LC1D4S5_SIZE                              0x1
#define _CLC1SEL3_LC1D4S5_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S5_MASK                              0x20
#define _CLC1SEL3_LC1D4S_POSN                               0x0
#define _CLC1SEL3_LC1D4S_POSITION                           0x0
#define _CLC1SEL3_LC1D4S_SIZE                               0x8
#define _CLC1SEL3_LC1D4S_LENGTH                             0x8
#define _CLC1SEL3_LC1D4S_MASK                               0xFF
#define _CLC1SEL3_D4S_POSN                                  0x0
#define _CLC1SEL3_D4S_POSITION                              0x0
#define _CLC1SEL3_D4S_SIZE                                  0x8
#define _CLC1SEL3_D4S_LENGTH                                0x8
#define _CLC1SEL3_D4S_MASK                                  0xFF
#define _CLC1SEL3_D4S0_POSN                                 0x0
#define _CLC1SEL3_D4S0_POSITION                             0x0
#define _CLC1SEL3_D4S0_SIZE                                 0x1
#define _CLC1SEL3_D4S0_LENGTH                               0x1
#define _CLC1SEL3_D4S0_MASK                                 0x1
#define _CLC1SEL3_D4S1_POSN                                 0x1
#define _CLC1SEL3_D4S1_POSITION                             0x1
#define _CLC1SEL3_D4S1_SIZE                                 0x1
#define _CLC1SEL3_D4S1_LENGTH                               0x1
#define _CLC1SEL3_D4S1_MASK                                 0x2
#define _CLC1SEL3_D4S2_POSN                                 0x2
#define _CLC1SEL3_D4S2_POSITION                             0x2
#define _CLC1SEL3_D4S2_SIZE                                 0x1
#define _CLC1SEL3_D4S2_LENGTH                               0x1
#define _CLC1SEL3_D4S2_MASK                                 0x4
#define _CLC1SEL3_D4S3_POSN                                 0x3
#define _CLC1SEL3_D4S3_POSITION                             0x3
#define _CLC1SEL3_D4S3_SIZE                                 0x1
#define _CLC1SEL3_D4S3_LENGTH                               0x1
#define _CLC1SEL3_D4S3_MASK                                 0x8
#define _CLC1SEL3_D4S4_POSN                                 0x4
#define _CLC1SEL3_D4S4_POSITION                             0x4
#define _CLC1SEL3_D4S4_SIZE                                 0x1
#define _CLC1SEL3_D4S4_LENGTH                               0x1
#define _CLC1SEL3_D4S4_MASK                                 0x10
#define _CLC1SEL3_D4S5_POSN                                 0x5
#define _CLC1SEL3_D4S5_POSITION                             0x5
#define _CLC1SEL3_D4S5_SIZE                                 0x1
#define _CLC1SEL3_D4S5_LENGTH                               0x1
#define _CLC1SEL3_D4S5_MASK                                 0x20

// Register: CLC1GLS0
#define CLC1GLS0 CLC1GLS0
extern volatile unsigned char           CLC1GLS0            __at(0xF16);
#ifndef _LIB_BUILD
asm("CLC1GLS0 equ 0F16h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1G1D1N               :1;
        unsigned LC1G1D1T               :1;
        unsigned LC1G1D2N               :1;
        unsigned LC1G1D2T               :1;
        unsigned LC1G1D3N               :1;
        unsigned LC1G1D3T               :1;
        unsigned LC1G1D4N               :1;
        unsigned LC1G1D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC1GLS0bits_t;
extern volatile CLC1GLS0bits_t CLC1GLS0bits __at(0xF16);
// bitfield macros
#define _CLC1GLS0_LC1G1D1N_POSN                             0x0
#define _CLC1GLS0_LC1G1D1N_POSITION                         0x0
#define _CLC1GLS0_LC1G1D1N_SIZE                             0x1
#define _CLC1GLS0_LC1G1D1N_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D1N_MASK                             0x1
#define _CLC1GLS0_LC1G1D1T_POSN                             0x1
#define _CLC1GLS0_LC1G1D1T_POSITION                         0x1
#define _CLC1GLS0_LC1G1D1T_SIZE                             0x1
#define _CLC1GLS0_LC1G1D1T_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D1T_MASK                             0x2
#define _CLC1GLS0_LC1G1D2N_POSN                             0x2
#define _CLC1GLS0_LC1G1D2N_POSITION                         0x2
#define _CLC1GLS0_LC1G1D2N_SIZE                             0x1
#define _CLC1GLS0_LC1G1D2N_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D2N_MASK                             0x4
#define _CLC1GLS0_LC1G1D2T_POSN                             0x3
#define _CLC1GLS0_LC1G1D2T_POSITION                         0x3
#define _CLC1GLS0_LC1G1D2T_SIZE                             0x1
#define _CLC1GLS0_LC1G1D2T_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D2T_MASK                             0x8
#define _CLC1GLS0_LC1G1D3N_POSN                             0x4
#define _CLC1GLS0_LC1G1D3N_POSITION                         0x4
#define _CLC1GLS0_LC1G1D3N_SIZE                             0x1
#define _CLC1GLS0_LC1G1D3N_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D3N_MASK                             0x10
#define _CLC1GLS0_LC1G1D3T_POSN                             0x5
#define _CLC1GLS0_LC1G1D3T_POSITION                         0x5
#define _CLC1GLS0_LC1G1D3T_SIZE                             0x1
#define _CLC1GLS0_LC1G1D3T_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D3T_MASK                             0x20
#define _CLC1GLS0_LC1G1D4N_POSN                             0x6
#define _CLC1GLS0_LC1G1D4N_POSITION                         0x6
#define _CLC1GLS0_LC1G1D4N_SIZE                             0x1
#define _CLC1GLS0_LC1G1D4N_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D4N_MASK                             0x40
#define _CLC1GLS0_LC1G1D4T_POSN                             0x7
#define _CLC1GLS0_LC1G1D4T_POSITION                         0x7
#define _CLC1GLS0_LC1G1D4T_SIZE                             0x1
#define _CLC1GLS0_LC1G1D4T_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D4T_MASK                             0x80
#define _CLC1GLS0_D1N_POSN                                  0x0
#define _CLC1GLS0_D1N_POSITION                              0x0
#define _CLC1GLS0_D1N_SIZE                                  0x1
#define _CLC1GLS0_D1N_LENGTH                                0x1
#define _CLC1GLS0_D1N_MASK                                  0x1
#define _CLC1GLS0_D1T_POSN                                  0x1
#define _CLC1GLS0_D1T_POSITION                              0x1
#define _CLC1GLS0_D1T_SIZE                                  0x1
#define _CLC1GLS0_D1T_LENGTH                                0x1
#define _CLC1GLS0_D1T_MASK                                  0x2
#define _CLC1GLS0_D2N_POSN                                  0x2
#define _CLC1GLS0_D2N_POSITION                              0x2
#define _CLC1GLS0_D2N_SIZE                                  0x1
#define _CLC1GLS0_D2N_LENGTH                                0x1
#define _CLC1GLS0_D2N_MASK                                  0x4
#define _CLC1GLS0_D2T_POSN                                  0x3
#define _CLC1GLS0_D2T_POSITION                              0x3
#define _CLC1GLS0_D2T_SIZE                                  0x1
#define _CLC1GLS0_D2T_LENGTH                                0x1
#define _CLC1GLS0_D2T_MASK                                  0x8
#define _CLC1GLS0_D3N_POSN                                  0x4
#define _CLC1GLS0_D3N_POSITION                              0x4
#define _CLC1GLS0_D3N_SIZE                                  0x1
#define _CLC1GLS0_D3N_LENGTH                                0x1
#define _CLC1GLS0_D3N_MASK                                  0x10
#define _CLC1GLS0_D3T_POSN                                  0x5
#define _CLC1GLS0_D3T_POSITION                              0x5
#define _CLC1GLS0_D3T_SIZE                                  0x1
#define _CLC1GLS0_D3T_LENGTH                                0x1
#define _CLC1GLS0_D3T_MASK                                  0x20
#define _CLC1GLS0_D4N_POSN                                  0x6
#define _CLC1GLS0_D4N_POSITION                              0x6
#define _CLC1GLS0_D4N_SIZE                                  0x1
#define _CLC1GLS0_D4N_LENGTH                                0x1
#define _CLC1GLS0_D4N_MASK                                  0x40
#define _CLC1GLS0_D4T_POSN                                  0x7
#define _CLC1GLS0_D4T_POSITION                              0x7
#define _CLC1GLS0_D4T_SIZE                                  0x1
#define _CLC1GLS0_D4T_LENGTH                                0x1
#define _CLC1GLS0_D4T_MASK                                  0x80

// Register: CLC1GLS1
#define CLC1GLS1 CLC1GLS1
extern volatile unsigned char           CLC1GLS1            __at(0xF17);
#ifndef _LIB_BUILD
asm("CLC1GLS1 equ 0F17h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1G2D1N               :1;
        unsigned LC1G2D1T               :1;
        unsigned LC1G2D2N               :1;
        unsigned LC1G2D2T               :1;
        unsigned LC1G2D3N               :1;
        unsigned LC1G2D3T               :1;
        unsigned LC1G2D4N               :1;
        unsigned LC1G2D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC1GLS1bits_t;
extern volatile CLC1GLS1bits_t CLC1GLS1bits __at(0xF17);
// bitfield macros
#define _CLC1GLS1_LC1G2D1N_POSN                             0x0
#define _CLC1GLS1_LC1G2D1N_POSITION                         0x0
#define _CLC1GLS1_LC1G2D1N_SIZE                             0x1
#define _CLC1GLS1_LC1G2D1N_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D1N_MASK                             0x1
#define _CLC1GLS1_LC1G2D1T_POSN                             0x1
#define _CLC1GLS1_LC1G2D1T_POSITION                         0x1
#define _CLC1GLS1_LC1G2D1T_SIZE                             0x1
#define _CLC1GLS1_LC1G2D1T_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D1T_MASK                             0x2
#define _CLC1GLS1_LC1G2D2N_POSN                             0x2
#define _CLC1GLS1_LC1G2D2N_POSITION                         0x2
#define _CLC1GLS1_LC1G2D2N_SIZE                             0x1
#define _CLC1GLS1_LC1G2D2N_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D2N_MASK                             0x4
#define _CLC1GLS1_LC1G2D2T_POSN                             0x3
#define _CLC1GLS1_LC1G2D2T_POSITION                         0x3
#define _CLC1GLS1_LC1G2D2T_SIZE                             0x1
#define _CLC1GLS1_LC1G2D2T_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D2T_MASK                             0x8
#define _CLC1GLS1_LC1G2D3N_POSN                             0x4
#define _CLC1GLS1_LC1G2D3N_POSITION                         0x4
#define _CLC1GLS1_LC1G2D3N_SIZE                             0x1
#define _CLC1GLS1_LC1G2D3N_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D3N_MASK                             0x10
#define _CLC1GLS1_LC1G2D3T_POSN                             0x5
#define _CLC1GLS1_LC1G2D3T_POSITION                         0x5
#define _CLC1GLS1_LC1G2D3T_SIZE                             0x1
#define _CLC1GLS1_LC1G2D3T_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D3T_MASK                             0x20
#define _CLC1GLS1_LC1G2D4N_POSN                             0x6
#define _CLC1GLS1_LC1G2D4N_POSITION                         0x6
#define _CLC1GLS1_LC1G2D4N_SIZE                             0x1
#define _CLC1GLS1_LC1G2D4N_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D4N_MASK                             0x40
#define _CLC1GLS1_LC1G2D4T_POSN                             0x7
#define _CLC1GLS1_LC1G2D4T_POSITION                         0x7
#define _CLC1GLS1_LC1G2D4T_SIZE                             0x1
#define _CLC1GLS1_LC1G2D4T_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D4T_MASK                             0x80
#define _CLC1GLS1_D1N_POSN                                  0x0
#define _CLC1GLS1_D1N_POSITION                              0x0
#define _CLC1GLS1_D1N_SIZE                                  0x1
#define _CLC1GLS1_D1N_LENGTH                                0x1
#define _CLC1GLS1_D1N_MASK                                  0x1
#define _CLC1GLS1_D1T_POSN                                  0x1
#define _CLC1GLS1_D1T_POSITION                              0x1
#define _CLC1GLS1_D1T_SIZE                                  0x1
#define _CLC1GLS1_D1T_LENGTH                                0x1
#define _CLC1GLS1_D1T_MASK                                  0x2
#define _CLC1GLS1_D2N_POSN                                  0x2
#define _CLC1GLS1_D2N_POSITION                              0x2
#define _CLC1GLS1_D2N_SIZE                                  0x1
#define _CLC1GLS1_D2N_LENGTH                                0x1
#define _CLC1GLS1_D2N_MASK                                  0x4
#define _CLC1GLS1_D2T_POSN                                  0x3
#define _CLC1GLS1_D2T_POSITION                              0x3
#define _CLC1GLS1_D2T_SIZE                                  0x1
#define _CLC1GLS1_D2T_LENGTH                                0x1
#define _CLC1GLS1_D2T_MASK                                  0x8
#define _CLC1GLS1_D3N_POSN                                  0x4
#define _CLC1GLS1_D3N_POSITION                              0x4
#define _CLC1GLS1_D3N_SIZE                                  0x1
#define _CLC1GLS1_D3N_LENGTH                                0x1
#define _CLC1GLS1_D3N_MASK                                  0x10
#define _CLC1GLS1_D3T_POSN                                  0x5
#define _CLC1GLS1_D3T_POSITION                              0x5
#define _CLC1GLS1_D3T_SIZE                                  0x1
#define _CLC1GLS1_D3T_LENGTH                                0x1
#define _CLC1GLS1_D3T_MASK                                  0x20
#define _CLC1GLS1_D4N_POSN                                  0x6
#define _CLC1GLS1_D4N_POSITION                              0x6
#define _CLC1GLS1_D4N_SIZE                                  0x1
#define _CLC1GLS1_D4N_LENGTH                                0x1
#define _CLC1GLS1_D4N_MASK                                  0x40
#define _CLC1GLS1_D4T_POSN                                  0x7
#define _CLC1GLS1_D4T_POSITION                              0x7
#define _CLC1GLS1_D4T_SIZE                                  0x1
#define _CLC1GLS1_D4T_LENGTH                                0x1
#define _CLC1GLS1_D4T_MASK                                  0x80

// Register: CLC1GLS2
#define CLC1GLS2 CLC1GLS2
extern volatile unsigned char           CLC1GLS2            __at(0xF18);
#ifndef _LIB_BUILD
asm("CLC1GLS2 equ 0F18h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1G3D1N               :1;
        unsigned LC1G3D1T               :1;
        unsigned LC1G3D2N               :1;
        unsigned LC1G3D2T               :1;
        unsigned LC1G3D3N               :1;
        unsigned LC1G3D3T               :1;
        unsigned LC1G3D4N               :1;
        unsigned LC1G3D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC1GLS2bits_t;
extern volatile CLC1GLS2bits_t CLC1GLS2bits __at(0xF18);
// bitfield macros
#define _CLC1GLS2_LC1G3D1N_POSN                             0x0
#define _CLC1GLS2_LC1G3D1N_POSITION                         0x0
#define _CLC1GLS2_LC1G3D1N_SIZE                             0x1
#define _CLC1GLS2_LC1G3D1N_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D1N_MASK                             0x1
#define _CLC1GLS2_LC1G3D1T_POSN                             0x1
#define _CLC1GLS2_LC1G3D1T_POSITION                         0x1
#define _CLC1GLS2_LC1G3D1T_SIZE                             0x1
#define _CLC1GLS2_LC1G3D1T_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D1T_MASK                             0x2
#define _CLC1GLS2_LC1G3D2N_POSN                             0x2
#define _CLC1GLS2_LC1G3D2N_POSITION                         0x2
#define _CLC1GLS2_LC1G3D2N_SIZE                             0x1
#define _CLC1GLS2_LC1G3D2N_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D2N_MASK                             0x4
#define _CLC1GLS2_LC1G3D2T_POSN                             0x3
#define _CLC1GLS2_LC1G3D2T_POSITION                         0x3
#define _CLC1GLS2_LC1G3D2T_SIZE                             0x1
#define _CLC1GLS2_LC1G3D2T_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D2T_MASK                             0x8
#define _CLC1GLS2_LC1G3D3N_POSN                             0x4
#define _CLC1GLS2_LC1G3D3N_POSITION                         0x4
#define _CLC1GLS2_LC1G3D3N_SIZE                             0x1
#define _CLC1GLS2_LC1G3D3N_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D3N_MASK                             0x10
#define _CLC1GLS2_LC1G3D3T_POSN                             0x5
#define _CLC1GLS2_LC1G3D3T_POSITION                         0x5
#define _CLC1GLS2_LC1G3D3T_SIZE                             0x1
#define _CLC1GLS2_LC1G3D3T_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D3T_MASK                             0x20
#define _CLC1GLS2_LC1G3D4N_POSN                             0x6
#define _CLC1GLS2_LC1G3D4N_POSITION                         0x6
#define _CLC1GLS2_LC1G3D4N_SIZE                             0x1
#define _CLC1GLS2_LC1G3D4N_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D4N_MASK                             0x40
#define _CLC1GLS2_LC1G3D4T_POSN                             0x7
#define _CLC1GLS2_LC1G3D4T_POSITION                         0x7
#define _CLC1GLS2_LC1G3D4T_SIZE                             0x1
#define _CLC1GLS2_LC1G3D4T_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D4T_MASK                             0x80
#define _CLC1GLS2_D1N_POSN                                  0x0
#define _CLC1GLS2_D1N_POSITION                              0x0
#define _CLC1GLS2_D1N_SIZE                                  0x1
#define _CLC1GLS2_D1N_LENGTH                                0x1
#define _CLC1GLS2_D1N_MASK                                  0x1
#define _CLC1GLS2_D1T_POSN                                  0x1
#define _CLC1GLS2_D1T_POSITION                              0x1
#define _CLC1GLS2_D1T_SIZE                                  0x1
#define _CLC1GLS2_D1T_LENGTH                                0x1
#define _CLC1GLS2_D1T_MASK                                  0x2
#define _CLC1GLS2_D2N_POSN                                  0x2
#define _CLC1GLS2_D2N_POSITION                              0x2
#define _CLC1GLS2_D2N_SIZE                                  0x1
#define _CLC1GLS2_D2N_LENGTH                                0x1
#define _CLC1GLS2_D2N_MASK                                  0x4
#define _CLC1GLS2_D2T_POSN                                  0x3
#define _CLC1GLS2_D2T_POSITION                              0x3
#define _CLC1GLS2_D2T_SIZE                                  0x1
#define _CLC1GLS2_D2T_LENGTH                                0x1
#define _CLC1GLS2_D2T_MASK                                  0x8
#define _CLC1GLS2_D3N_POSN                                  0x4
#define _CLC1GLS2_D3N_POSITION                              0x4
#define _CLC1GLS2_D3N_SIZE                                  0x1
#define _CLC1GLS2_D3N_LENGTH                                0x1
#define _CLC1GLS2_D3N_MASK                                  0x10
#define _CLC1GLS2_D3T_POSN                                  0x5
#define _CLC1GLS2_D3T_POSITION                              0x5
#define _CLC1GLS2_D3T_SIZE                                  0x1
#define _CLC1GLS2_D3T_LENGTH                                0x1
#define _CLC1GLS2_D3T_MASK                                  0x20
#define _CLC1GLS2_D4N_POSN                                  0x6
#define _CLC1GLS2_D4N_POSITION                              0x6
#define _CLC1GLS2_D4N_SIZE                                  0x1
#define _CLC1GLS2_D4N_LENGTH                                0x1
#define _CLC1GLS2_D4N_MASK                                  0x40
#define _CLC1GLS2_D4T_POSN                                  0x7
#define _CLC1GLS2_D4T_POSITION                              0x7
#define _CLC1GLS2_D4T_SIZE                                  0x1
#define _CLC1GLS2_D4T_LENGTH                                0x1
#define _CLC1GLS2_D4T_MASK                                  0x80

// Register: CLC1GLS3
#define CLC1GLS3 CLC1GLS3
extern volatile unsigned char           CLC1GLS3            __at(0xF19);
#ifndef _LIB_BUILD
asm("CLC1GLS3 equ 0F19h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1G4D1N               :1;
        unsigned LC1G4D1T               :1;
        unsigned LC1G4D2N               :1;
        unsigned LC1G4D2T               :1;
        unsigned LC1G4D3N               :1;
        unsigned LC1G4D3T               :1;
        unsigned LC1G4D4N               :1;
        unsigned LC1G4D4T               :1;
    };
    struct {
        unsigned G4D1N                  :1;
        unsigned G4D1T                  :1;
        unsigned G4D2N                  :1;
        unsigned G4D2T                  :1;
        unsigned G4D3N                  :1;
        unsigned G4D3T                  :1;
        unsigned G4D4N                  :1;
        unsigned G4D4T                  :1;
    };
} CLC1GLS3bits_t;
extern volatile CLC1GLS3bits_t CLC1GLS3bits __at(0xF19);
// bitfield macros
#define _CLC1GLS3_LC1G4D1N_POSN                             0x0
#define _CLC1GLS3_LC1G4D1N_POSITION                         0x0
#define _CLC1GLS3_LC1G4D1N_SIZE                             0x1
#define _CLC1GLS3_LC1G4D1N_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D1N_MASK                             0x1
#define _CLC1GLS3_LC1G4D1T_POSN                             0x1
#define _CLC1GLS3_LC1G4D1T_POSITION                         0x1
#define _CLC1GLS3_LC1G4D1T_SIZE                             0x1
#define _CLC1GLS3_LC1G4D1T_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D1T_MASK                             0x2
#define _CLC1GLS3_LC1G4D2N_POSN                             0x2
#define _CLC1GLS3_LC1G4D2N_POSITION                         0x2
#define _CLC1GLS3_LC1G4D2N_SIZE                             0x1
#define _CLC1GLS3_LC1G4D2N_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D2N_MASK                             0x4
#define _CLC1GLS3_LC1G4D2T_POSN                             0x3
#define _CLC1GLS3_LC1G4D2T_POSITION                         0x3
#define _CLC1GLS3_LC1G4D2T_SIZE                             0x1
#define _CLC1GLS3_LC1G4D2T_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D2T_MASK                             0x8
#define _CLC1GLS3_LC1G4D3N_POSN                             0x4
#define _CLC1GLS3_LC1G4D3N_POSITION                         0x4
#define _CLC1GLS3_LC1G4D3N_SIZE                             0x1
#define _CLC1GLS3_LC1G4D3N_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D3N_MASK                             0x10
#define _CLC1GLS3_LC1G4D3T_POSN                             0x5
#define _CLC1GLS3_LC1G4D3T_POSITION                         0x5
#define _CLC1GLS3_LC1G4D3T_SIZE                             0x1
#define _CLC1GLS3_LC1G4D3T_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D3T_MASK                             0x20
#define _CLC1GLS3_LC1G4D4N_POSN                             0x6
#define _CLC1GLS3_LC1G4D4N_POSITION                         0x6
#define _CLC1GLS3_LC1G4D4N_SIZE                             0x1
#define _CLC1GLS3_LC1G4D4N_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D4N_MASK                             0x40
#define _CLC1GLS3_LC1G4D4T_POSN                             0x7
#define _CLC1GLS3_LC1G4D4T_POSITION                         0x7
#define _CLC1GLS3_LC1G4D4T_SIZE                             0x1
#define _CLC1GLS3_LC1G4D4T_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D4T_MASK                             0x80
#define _CLC1GLS3_G4D1N_POSN                                0x0
#define _CLC1GLS3_G4D1N_POSITION                            0x0
#define _CLC1GLS3_G4D1N_SIZE                                0x1
#define _CLC1GLS3_G4D1N_LENGTH                              0x1
#define _CLC1GLS3_G4D1N_MASK                                0x1
#define _CLC1GLS3_G4D1T_POSN                                0x1
#define _CLC1GLS3_G4D1T_POSITION                            0x1
#define _CLC1GLS3_G4D1T_SIZE                                0x1
#define _CLC1GLS3_G4D1T_LENGTH                              0x1
#define _CLC1GLS3_G4D1T_MASK                                0x2
#define _CLC1GLS3_G4D2N_POSN                                0x2
#define _CLC1GLS3_G4D2N_POSITION                            0x2
#define _CLC1GLS3_G4D2N_SIZE                                0x1
#define _CLC1GLS3_G4D2N_LENGTH                              0x1
#define _CLC1GLS3_G4D2N_MASK                                0x4
#define _CLC1GLS3_G4D2T_POSN                                0x3
#define _CLC1GLS3_G4D2T_POSITION                            0x3
#define _CLC1GLS3_G4D2T_SIZE                                0x1
#define _CLC1GLS3_G4D2T_LENGTH                              0x1
#define _CLC1GLS3_G4D2T_MASK                                0x8
#define _CLC1GLS3_G4D3N_POSN                                0x4
#define _CLC1GLS3_G4D3N_POSITION                            0x4
#define _CLC1GLS3_G4D3N_SIZE                                0x1
#define _CLC1GLS3_G4D3N_LENGTH                              0x1
#define _CLC1GLS3_G4D3N_MASK                                0x10
#define _CLC1GLS3_G4D3T_POSN                                0x5
#define _CLC1GLS3_G4D3T_POSITION                            0x5
#define _CLC1GLS3_G4D3T_SIZE                                0x1
#define _CLC1GLS3_G4D3T_LENGTH                              0x1
#define _CLC1GLS3_G4D3T_MASK                                0x20
#define _CLC1GLS3_G4D4N_POSN                                0x6
#define _CLC1GLS3_G4D4N_POSITION                            0x6
#define _CLC1GLS3_G4D4N_SIZE                                0x1
#define _CLC1GLS3_G4D4N_LENGTH                              0x1
#define _CLC1GLS3_G4D4N_MASK                                0x40
#define _CLC1GLS3_G4D4T_POSN                                0x7
#define _CLC1GLS3_G4D4T_POSITION                            0x7
#define _CLC1GLS3_G4D4T_SIZE                                0x1
#define _CLC1GLS3_G4D4T_LENGTH                              0x1
#define _CLC1GLS3_G4D4T_MASK                                0x80

// Register: CLC2CON
#define CLC2CON CLC2CON
extern volatile unsigned char           CLC2CON             __at(0xF1A);
#ifndef _LIB_BUILD
asm("CLC2CON equ 0F1Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2MODE                :3;
        unsigned LC2INTN                :1;
        unsigned LC2INTP                :1;
        unsigned LC2OUT                 :1;
        unsigned                        :1;
        unsigned LC2EN                  :1;
    };
    struct {
        unsigned LC2MODE0               :1;
        unsigned LC2MODE1               :1;
        unsigned LC2MODE2               :1;
    };
    struct {
        unsigned MODE                   :3;
        unsigned INTN                   :1;
        unsigned INTP                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
    };
} CLC2CONbits_t;
extern volatile CLC2CONbits_t CLC2CONbits __at(0xF1A);
// bitfield macros
#define _CLC2CON_LC2MODE_POSN                               0x0
#define _CLC2CON_LC2MODE_POSITION                           0x0
#define _CLC2CON_LC2MODE_SIZE                               0x3
#define _CLC2CON_LC2MODE_LENGTH                             0x3
#define _CLC2CON_LC2MODE_MASK                               0x7
#define _CLC2CON_LC2INTN_POSN                               0x3
#define _CLC2CON_LC2INTN_POSITION                           0x3
#define _CLC2CON_LC2INTN_SIZE                               0x1
#define _CLC2CON_LC2INTN_LENGTH                             0x1
#define _CLC2CON_LC2INTN_MASK                               0x8
#define _CLC2CON_LC2INTP_POSN                               0x4
#define _CLC2CON_LC2INTP_POSITION                           0x4
#define _CLC2CON_LC2INTP_SIZE                               0x1
#define _CLC2CON_LC2INTP_LENGTH                             0x1
#define _CLC2CON_LC2INTP_MASK                               0x10
#define _CLC2CON_LC2OUT_POSN                                0x5
#define _CLC2CON_LC2OUT_POSITION                            0x5
#define _CLC2CON_LC2OUT_SIZE                                0x1
#define _CLC2CON_LC2OUT_LENGTH                              0x1
#define _CLC2CON_LC2OUT_MASK                                0x20
#define _CLC2CON_LC2EN_POSN                                 0x7
#define _CLC2CON_LC2EN_POSITION                             0x7
#define _CLC2CON_LC2EN_SIZE                                 0x1
#define _CLC2CON_LC2EN_LENGTH                               0x1
#define _CLC2CON_LC2EN_MASK                                 0x80
#define _CLC2CON_LC2MODE0_POSN                              0x0
#define _CLC2CON_LC2MODE0_POSITION                          0x0
#define _CLC2CON_LC2MODE0_SIZE                              0x1
#define _CLC2CON_LC2MODE0_LENGTH                            0x1
#define _CLC2CON_LC2MODE0_MASK                              0x1
#define _CLC2CON_LC2MODE1_POSN                              0x1
#define _CLC2CON_LC2MODE1_POSITION                          0x1
#define _CLC2CON_LC2MODE1_SIZE                              0x1
#define _CLC2CON_LC2MODE1_LENGTH                            0x1
#define _CLC2CON_LC2MODE1_MASK                              0x2
#define _CLC2CON_LC2MODE2_POSN                              0x2
#define _CLC2CON_LC2MODE2_POSITION                          0x2
#define _CLC2CON_LC2MODE2_SIZE                              0x1
#define _CLC2CON_LC2MODE2_LENGTH                            0x1
#define _CLC2CON_LC2MODE2_MASK                              0x4
#define _CLC2CON_MODE_POSN                                  0x0
#define _CLC2CON_MODE_POSITION                              0x0
#define _CLC2CON_MODE_SIZE                                  0x3
#define _CLC2CON_MODE_LENGTH                                0x3
#define _CLC2CON_MODE_MASK                                  0x7
#define _CLC2CON_INTN_POSN                                  0x3
#define _CLC2CON_INTN_POSITION                              0x3
#define _CLC2CON_INTN_SIZE                                  0x1
#define _CLC2CON_INTN_LENGTH                                0x1
#define _CLC2CON_INTN_MASK                                  0x8
#define _CLC2CON_INTP_POSN                                  0x4
#define _CLC2CON_INTP_POSITION                              0x4
#define _CLC2CON_INTP_SIZE                                  0x1
#define _CLC2CON_INTP_LENGTH                                0x1
#define _CLC2CON_INTP_MASK                                  0x10
#define _CLC2CON_OUT_POSN                                   0x5
#define _CLC2CON_OUT_POSITION                               0x5
#define _CLC2CON_OUT_SIZE                                   0x1
#define _CLC2CON_OUT_LENGTH                                 0x1
#define _CLC2CON_OUT_MASK                                   0x20
#define _CLC2CON_EN_POSN                                    0x7
#define _CLC2CON_EN_POSITION                                0x7
#define _CLC2CON_EN_SIZE                                    0x1
#define _CLC2CON_EN_LENGTH                                  0x1
#define _CLC2CON_EN_MASK                                    0x80
#define _CLC2CON_MODE0_POSN                                 0x0
#define _CLC2CON_MODE0_POSITION                             0x0
#define _CLC2CON_MODE0_SIZE                                 0x1
#define _CLC2CON_MODE0_LENGTH                               0x1
#define _CLC2CON_MODE0_MASK                                 0x1
#define _CLC2CON_MODE1_POSN                                 0x1
#define _CLC2CON_MODE1_POSITION                             0x1
#define _CLC2CON_MODE1_SIZE                                 0x1
#define _CLC2CON_MODE1_LENGTH                               0x1
#define _CLC2CON_MODE1_MASK                                 0x2
#define _CLC2CON_MODE2_POSN                                 0x2
#define _CLC2CON_MODE2_POSITION                             0x2
#define _CLC2CON_MODE2_SIZE                                 0x1
#define _CLC2CON_MODE2_LENGTH                               0x1
#define _CLC2CON_MODE2_MASK                                 0x4

// Register: CLC2POL
#define CLC2POL CLC2POL
extern volatile unsigned char           CLC2POL             __at(0xF1B);
#ifndef _LIB_BUILD
asm("CLC2POL equ 0F1Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2G1POL               :1;
        unsigned LC2G2POL               :1;
        unsigned LC2G3POL               :1;
        unsigned LC2G4POL               :1;
        unsigned                        :3;
        unsigned LC2POL                 :1;
    };
    struct {
        unsigned G1POL                  :1;
        unsigned G2POL                  :1;
        unsigned G3POL                  :1;
        unsigned G4POL                  :1;
        unsigned                        :3;
        unsigned POL                    :1;
    };
} CLC2POLbits_t;
extern volatile CLC2POLbits_t CLC2POLbits __at(0xF1B);
// bitfield macros
#define _CLC2POL_LC2G1POL_POSN                              0x0
#define _CLC2POL_LC2G1POL_POSITION                          0x0
#define _CLC2POL_LC2G1POL_SIZE                              0x1
#define _CLC2POL_LC2G1POL_LENGTH                            0x1
#define _CLC2POL_LC2G1POL_MASK                              0x1
#define _CLC2POL_LC2G2POL_POSN                              0x1
#define _CLC2POL_LC2G2POL_POSITION                          0x1
#define _CLC2POL_LC2G2POL_SIZE                              0x1
#define _CLC2POL_LC2G2POL_LENGTH                            0x1
#define _CLC2POL_LC2G2POL_MASK                              0x2
#define _CLC2POL_LC2G3POL_POSN                              0x2
#define _CLC2POL_LC2G3POL_POSITION                          0x2
#define _CLC2POL_LC2G3POL_SIZE                              0x1
#define _CLC2POL_LC2G3POL_LENGTH                            0x1
#define _CLC2POL_LC2G3POL_MASK                              0x4
#define _CLC2POL_LC2G4POL_POSN                              0x3
#define _CLC2POL_LC2G4POL_POSITION                          0x3
#define _CLC2POL_LC2G4POL_SIZE                              0x1
#define _CLC2POL_LC2G4POL_LENGTH                            0x1
#define _CLC2POL_LC2G4POL_MASK                              0x8
#define _CLC2POL_LC2POL_POSN                                0x7
#define _CLC2POL_LC2POL_POSITION                            0x7
#define _CLC2POL_LC2POL_SIZE                                0x1
#define _CLC2POL_LC2POL_LENGTH                              0x1
#define _CLC2POL_LC2POL_MASK                                0x80
#define _CLC2POL_G1POL_POSN                                 0x0
#define _CLC2POL_G1POL_POSITION                             0x0
#define _CLC2POL_G1POL_SIZE                                 0x1
#define _CLC2POL_G1POL_LENGTH                               0x1
#define _CLC2POL_G1POL_MASK                                 0x1
#define _CLC2POL_G2POL_POSN                                 0x1
#define _CLC2POL_G2POL_POSITION                             0x1
#define _CLC2POL_G2POL_SIZE                                 0x1
#define _CLC2POL_G2POL_LENGTH                               0x1
#define _CLC2POL_G2POL_MASK                                 0x2
#define _CLC2POL_G3POL_POSN                                 0x2
#define _CLC2POL_G3POL_POSITION                             0x2
#define _CLC2POL_G3POL_SIZE                                 0x1
#define _CLC2POL_G3POL_LENGTH                               0x1
#define _CLC2POL_G3POL_MASK                                 0x4
#define _CLC2POL_G4POL_POSN                                 0x3
#define _CLC2POL_G4POL_POSITION                             0x3
#define _CLC2POL_G4POL_SIZE                                 0x1
#define _CLC2POL_G4POL_LENGTH                               0x1
#define _CLC2POL_G4POL_MASK                                 0x8
#define _CLC2POL_POL_POSN                                   0x7
#define _CLC2POL_POL_POSITION                               0x7
#define _CLC2POL_POL_SIZE                                   0x1
#define _CLC2POL_POL_LENGTH                                 0x1
#define _CLC2POL_POL_MASK                                   0x80

// Register: CLC2SEL0
#define CLC2SEL0 CLC2SEL0
extern volatile unsigned char           CLC2SEL0            __at(0xF1C);
#ifndef _LIB_BUILD
asm("CLC2SEL0 equ 0F1Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2D1S0                :1;
        unsigned LC2D1S1                :1;
        unsigned LC2D1S2                :1;
        unsigned LC2D1S3                :1;
        unsigned LC2D1S4                :1;
        unsigned LC2D1S5                :1;
    };
    struct {
        unsigned LC2D1S                 :8;
    };
    struct {
        unsigned D1S                    :8;
    };
    struct {
        unsigned D1S0                   :1;
        unsigned D1S1                   :1;
        unsigned D1S2                   :1;
        unsigned D1S3                   :1;
        unsigned D1S4                   :1;
        unsigned D1S5                   :1;
    };
} CLC2SEL0bits_t;
extern volatile CLC2SEL0bits_t CLC2SEL0bits __at(0xF1C);
// bitfield macros
#define _CLC2SEL0_LC2D1S0_POSN                              0x0
#define _CLC2SEL0_LC2D1S0_POSITION                          0x0
#define _CLC2SEL0_LC2D1S0_SIZE                              0x1
#define _CLC2SEL0_LC2D1S0_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S0_MASK                              0x1
#define _CLC2SEL0_LC2D1S1_POSN                              0x1
#define _CLC2SEL0_LC2D1S1_POSITION                          0x1
#define _CLC2SEL0_LC2D1S1_SIZE                              0x1
#define _CLC2SEL0_LC2D1S1_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S1_MASK                              0x2
#define _CLC2SEL0_LC2D1S2_POSN                              0x2
#define _CLC2SEL0_LC2D1S2_POSITION                          0x2
#define _CLC2SEL0_LC2D1S2_SIZE                              0x1
#define _CLC2SEL0_LC2D1S2_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S2_MASK                              0x4
#define _CLC2SEL0_LC2D1S3_POSN                              0x3
#define _CLC2SEL0_LC2D1S3_POSITION                          0x3
#define _CLC2SEL0_LC2D1S3_SIZE                              0x1
#define _CLC2SEL0_LC2D1S3_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S3_MASK                              0x8
#define _CLC2SEL0_LC2D1S4_POSN                              0x4
#define _CLC2SEL0_LC2D1S4_POSITION                          0x4
#define _CLC2SEL0_LC2D1S4_SIZE                              0x1
#define _CLC2SEL0_LC2D1S4_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S4_MASK                              0x10
#define _CLC2SEL0_LC2D1S5_POSN                              0x5
#define _CLC2SEL0_LC2D1S5_POSITION                          0x5
#define _CLC2SEL0_LC2D1S5_SIZE                              0x1
#define _CLC2SEL0_LC2D1S5_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S5_MASK                              0x20
#define _CLC2SEL0_LC2D1S_POSN                               0x0
#define _CLC2SEL0_LC2D1S_POSITION                           0x0
#define _CLC2SEL0_LC2D1S_SIZE                               0x8
#define _CLC2SEL0_LC2D1S_LENGTH                             0x8
#define _CLC2SEL0_LC2D1S_MASK                               0xFF
#define _CLC2SEL0_D1S_POSN                                  0x0
#define _CLC2SEL0_D1S_POSITION                              0x0
#define _CLC2SEL0_D1S_SIZE                                  0x8
#define _CLC2SEL0_D1S_LENGTH                                0x8
#define _CLC2SEL0_D1S_MASK                                  0xFF
#define _CLC2SEL0_D1S0_POSN                                 0x0
#define _CLC2SEL0_D1S0_POSITION                             0x0
#define _CLC2SEL0_D1S0_SIZE                                 0x1
#define _CLC2SEL0_D1S0_LENGTH                               0x1
#define _CLC2SEL0_D1S0_MASK                                 0x1
#define _CLC2SEL0_D1S1_POSN                                 0x1
#define _CLC2SEL0_D1S1_POSITION                             0x1
#define _CLC2SEL0_D1S1_SIZE                                 0x1
#define _CLC2SEL0_D1S1_LENGTH                               0x1
#define _CLC2SEL0_D1S1_MASK                                 0x2
#define _CLC2SEL0_D1S2_POSN                                 0x2
#define _CLC2SEL0_D1S2_POSITION                             0x2
#define _CLC2SEL0_D1S2_SIZE                                 0x1
#define _CLC2SEL0_D1S2_LENGTH                               0x1
#define _CLC2SEL0_D1S2_MASK                                 0x4
#define _CLC2SEL0_D1S3_POSN                                 0x3
#define _CLC2SEL0_D1S3_POSITION                             0x3
#define _CLC2SEL0_D1S3_SIZE                                 0x1
#define _CLC2SEL0_D1S3_LENGTH                               0x1
#define _CLC2SEL0_D1S3_MASK                                 0x8
#define _CLC2SEL0_D1S4_POSN                                 0x4
#define _CLC2SEL0_D1S4_POSITION                             0x4
#define _CLC2SEL0_D1S4_SIZE                                 0x1
#define _CLC2SEL0_D1S4_LENGTH                               0x1
#define _CLC2SEL0_D1S4_MASK                                 0x10
#define _CLC2SEL0_D1S5_POSN                                 0x5
#define _CLC2SEL0_D1S5_POSITION                             0x5
#define _CLC2SEL0_D1S5_SIZE                                 0x1
#define _CLC2SEL0_D1S5_LENGTH                               0x1
#define _CLC2SEL0_D1S5_MASK                                 0x20

// Register: CLC2SEL1
#define CLC2SEL1 CLC2SEL1
extern volatile unsigned char           CLC2SEL1            __at(0xF1D);
#ifndef _LIB_BUILD
asm("CLC2SEL1 equ 0F1Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2D2S0                :1;
        unsigned LC2D2S1                :1;
        unsigned LC2D2S2                :1;
        unsigned LC2D2S3                :1;
        unsigned LC2D2S4                :1;
        unsigned LC2D2S5                :1;
    };
    struct {
        unsigned LC2D2S                 :8;
    };
    struct {
        unsigned D2S                    :8;
    };
    struct {
        unsigned D2S0                   :1;
        unsigned D2S1                   :1;
        unsigned D2S2                   :1;
        unsigned D2S3                   :1;
        unsigned D2S4                   :1;
        unsigned D2S5                   :1;
    };
} CLC2SEL1bits_t;
extern volatile CLC2SEL1bits_t CLC2SEL1bits __at(0xF1D);
// bitfield macros
#define _CLC2SEL1_LC2D2S0_POSN                              0x0
#define _CLC2SEL1_LC2D2S0_POSITION                          0x0
#define _CLC2SEL1_LC2D2S0_SIZE                              0x1
#define _CLC2SEL1_LC2D2S0_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S0_MASK                              0x1
#define _CLC2SEL1_LC2D2S1_POSN                              0x1
#define _CLC2SEL1_LC2D2S1_POSITION                          0x1
#define _CLC2SEL1_LC2D2S1_SIZE                              0x1
#define _CLC2SEL1_LC2D2S1_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S1_MASK                              0x2
#define _CLC2SEL1_LC2D2S2_POSN                              0x2
#define _CLC2SEL1_LC2D2S2_POSITION                          0x2
#define _CLC2SEL1_LC2D2S2_SIZE                              0x1
#define _CLC2SEL1_LC2D2S2_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S2_MASK                              0x4
#define _CLC2SEL1_LC2D2S3_POSN                              0x3
#define _CLC2SEL1_LC2D2S3_POSITION                          0x3
#define _CLC2SEL1_LC2D2S3_SIZE                              0x1
#define _CLC2SEL1_LC2D2S3_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S3_MASK                              0x8
#define _CLC2SEL1_LC2D2S4_POSN                              0x4
#define _CLC2SEL1_LC2D2S4_POSITION                          0x4
#define _CLC2SEL1_LC2D2S4_SIZE                              0x1
#define _CLC2SEL1_LC2D2S4_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S4_MASK                              0x10
#define _CLC2SEL1_LC2D2S5_POSN                              0x5
#define _CLC2SEL1_LC2D2S5_POSITION                          0x5
#define _CLC2SEL1_LC2D2S5_SIZE                              0x1
#define _CLC2SEL1_LC2D2S5_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S5_MASK                              0x20
#define _CLC2SEL1_LC2D2S_POSN                               0x0
#define _CLC2SEL1_LC2D2S_POSITION                           0x0
#define _CLC2SEL1_LC2D2S_SIZE                               0x8
#define _CLC2SEL1_LC2D2S_LENGTH                             0x8
#define _CLC2SEL1_LC2D2S_MASK                               0xFF
#define _CLC2SEL1_D2S_POSN                                  0x0
#define _CLC2SEL1_D2S_POSITION                              0x0
#define _CLC2SEL1_D2S_SIZE                                  0x8
#define _CLC2SEL1_D2S_LENGTH                                0x8
#define _CLC2SEL1_D2S_MASK                                  0xFF
#define _CLC2SEL1_D2S0_POSN                                 0x0
#define _CLC2SEL1_D2S0_POSITION                             0x0
#define _CLC2SEL1_D2S0_SIZE                                 0x1
#define _CLC2SEL1_D2S0_LENGTH                               0x1
#define _CLC2SEL1_D2S0_MASK                                 0x1
#define _CLC2SEL1_D2S1_POSN                                 0x1
#define _CLC2SEL1_D2S1_POSITION                             0x1
#define _CLC2SEL1_D2S1_SIZE                                 0x1
#define _CLC2SEL1_D2S1_LENGTH                               0x1
#define _CLC2SEL1_D2S1_MASK                                 0x2
#define _CLC2SEL1_D2S2_POSN                                 0x2
#define _CLC2SEL1_D2S2_POSITION                             0x2
#define _CLC2SEL1_D2S2_SIZE                                 0x1
#define _CLC2SEL1_D2S2_LENGTH                               0x1
#define _CLC2SEL1_D2S2_MASK                                 0x4
#define _CLC2SEL1_D2S3_POSN                                 0x3
#define _CLC2SEL1_D2S3_POSITION                             0x3
#define _CLC2SEL1_D2S3_SIZE                                 0x1
#define _CLC2SEL1_D2S3_LENGTH                               0x1
#define _CLC2SEL1_D2S3_MASK                                 0x8
#define _CLC2SEL1_D2S4_POSN                                 0x4
#define _CLC2SEL1_D2S4_POSITION                             0x4
#define _CLC2SEL1_D2S4_SIZE                                 0x1
#define _CLC2SEL1_D2S4_LENGTH                               0x1
#define _CLC2SEL1_D2S4_MASK                                 0x10
#define _CLC2SEL1_D2S5_POSN                                 0x5
#define _CLC2SEL1_D2S5_POSITION                             0x5
#define _CLC2SEL1_D2S5_SIZE                                 0x1
#define _CLC2SEL1_D2S5_LENGTH                               0x1
#define _CLC2SEL1_D2S5_MASK                                 0x20

// Register: CLC2SEL2
#define CLC2SEL2 CLC2SEL2
extern volatile unsigned char           CLC2SEL2            __at(0xF1E);
#ifndef _LIB_BUILD
asm("CLC2SEL2 equ 0F1Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2D3S0                :1;
        unsigned LC2D3S1                :1;
        unsigned LC2D3S2                :1;
        unsigned LC2D3S3                :1;
        unsigned LC2D3S4                :1;
        unsigned LC2D3S5                :1;
    };
    struct {
        unsigned LC2D3S                 :8;
    };
    struct {
        unsigned D3S                    :8;
    };
    struct {
        unsigned D3S0                   :1;
        unsigned D3S1                   :1;
        unsigned D3S2                   :1;
        unsigned D3S3                   :1;
        unsigned D3S4                   :1;
        unsigned D3S5                   :1;
    };
} CLC2SEL2bits_t;
extern volatile CLC2SEL2bits_t CLC2SEL2bits __at(0xF1E);
// bitfield macros
#define _CLC2SEL2_LC2D3S0_POSN                              0x0
#define _CLC2SEL2_LC2D3S0_POSITION                          0x0
#define _CLC2SEL2_LC2D3S0_SIZE                              0x1
#define _CLC2SEL2_LC2D3S0_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S0_MASK                              0x1
#define _CLC2SEL2_LC2D3S1_POSN                              0x1
#define _CLC2SEL2_LC2D3S1_POSITION                          0x1
#define _CLC2SEL2_LC2D3S1_SIZE                              0x1
#define _CLC2SEL2_LC2D3S1_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S1_MASK                              0x2
#define _CLC2SEL2_LC2D3S2_POSN                              0x2
#define _CLC2SEL2_LC2D3S2_POSITION                          0x2
#define _CLC2SEL2_LC2D3S2_SIZE                              0x1
#define _CLC2SEL2_LC2D3S2_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S2_MASK                              0x4
#define _CLC2SEL2_LC2D3S3_POSN                              0x3
#define _CLC2SEL2_LC2D3S3_POSITION                          0x3
#define _CLC2SEL2_LC2D3S3_SIZE                              0x1
#define _CLC2SEL2_LC2D3S3_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S3_MASK                              0x8
#define _CLC2SEL2_LC2D3S4_POSN                              0x4
#define _CLC2SEL2_LC2D3S4_POSITION                          0x4
#define _CLC2SEL2_LC2D3S4_SIZE                              0x1
#define _CLC2SEL2_LC2D3S4_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S4_MASK                              0x10
#define _CLC2SEL2_LC2D3S5_POSN                              0x5
#define _CLC2SEL2_LC2D3S5_POSITION                          0x5
#define _CLC2SEL2_LC2D3S5_SIZE                              0x1
#define _CLC2SEL2_LC2D3S5_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S5_MASK                              0x20
#define _CLC2SEL2_LC2D3S_POSN                               0x0
#define _CLC2SEL2_LC2D3S_POSITION                           0x0
#define _CLC2SEL2_LC2D3S_SIZE                               0x8
#define _CLC2SEL2_LC2D3S_LENGTH                             0x8
#define _CLC2SEL2_LC2D3S_MASK                               0xFF
#define _CLC2SEL2_D3S_POSN                                  0x0
#define _CLC2SEL2_D3S_POSITION                              0x0
#define _CLC2SEL2_D3S_SIZE                                  0x8
#define _CLC2SEL2_D3S_LENGTH                                0x8
#define _CLC2SEL2_D3S_MASK                                  0xFF
#define _CLC2SEL2_D3S0_POSN                                 0x0
#define _CLC2SEL2_D3S0_POSITION                             0x0
#define _CLC2SEL2_D3S0_SIZE                                 0x1
#define _CLC2SEL2_D3S0_LENGTH                               0x1
#define _CLC2SEL2_D3S0_MASK                                 0x1
#define _CLC2SEL2_D3S1_POSN                                 0x1
#define _CLC2SEL2_D3S1_POSITION                             0x1
#define _CLC2SEL2_D3S1_SIZE                                 0x1
#define _CLC2SEL2_D3S1_LENGTH                               0x1
#define _CLC2SEL2_D3S1_MASK                                 0x2
#define _CLC2SEL2_D3S2_POSN                                 0x2
#define _CLC2SEL2_D3S2_POSITION                             0x2
#define _CLC2SEL2_D3S2_SIZE                                 0x1
#define _CLC2SEL2_D3S2_LENGTH                               0x1
#define _CLC2SEL2_D3S2_MASK                                 0x4
#define _CLC2SEL2_D3S3_POSN                                 0x3
#define _CLC2SEL2_D3S3_POSITION                             0x3
#define _CLC2SEL2_D3S3_SIZE                                 0x1
#define _CLC2SEL2_D3S3_LENGTH                               0x1
#define _CLC2SEL2_D3S3_MASK                                 0x8
#define _CLC2SEL2_D3S4_POSN                                 0x4
#define _CLC2SEL2_D3S4_POSITION                             0x4
#define _CLC2SEL2_D3S4_SIZE                                 0x1
#define _CLC2SEL2_D3S4_LENGTH                               0x1
#define _CLC2SEL2_D3S4_MASK                                 0x10
#define _CLC2SEL2_D3S5_POSN                                 0x5
#define _CLC2SEL2_D3S5_POSITION                             0x5
#define _CLC2SEL2_D3S5_SIZE                                 0x1
#define _CLC2SEL2_D3S5_LENGTH                               0x1
#define _CLC2SEL2_D3S5_MASK                                 0x20

// Register: CLC2SEL3
#define CLC2SEL3 CLC2SEL3
extern volatile unsigned char           CLC2SEL3            __at(0xF1F);
#ifndef _LIB_BUILD
asm("CLC2SEL3 equ 0F1Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2D4S0                :1;
        unsigned LC2D4S1                :1;
        unsigned LC2D4S2                :1;
        unsigned LC2D4S3                :1;
        unsigned LC2D4S4                :1;
        unsigned LC2D4S5                :1;
    };
    struct {
        unsigned LC2D4S                 :8;
    };
    struct {
        unsigned D4S                    :8;
    };
    struct {
        unsigned D4S0                   :1;
        unsigned D4S1                   :1;
        unsigned D4S2                   :1;
        unsigned D4S3                   :1;
        unsigned D4S4                   :1;
        unsigned D4S5                   :1;
    };
} CLC2SEL3bits_t;
extern volatile CLC2SEL3bits_t CLC2SEL3bits __at(0xF1F);
// bitfield macros
#define _CLC2SEL3_LC2D4S0_POSN                              0x0
#define _CLC2SEL3_LC2D4S0_POSITION                          0x0
#define _CLC2SEL3_LC2D4S0_SIZE                              0x1
#define _CLC2SEL3_LC2D4S0_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S0_MASK                              0x1
#define _CLC2SEL3_LC2D4S1_POSN                              0x1
#define _CLC2SEL3_LC2D4S1_POSITION                          0x1
#define _CLC2SEL3_LC2D4S1_SIZE                              0x1
#define _CLC2SEL3_LC2D4S1_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S1_MASK                              0x2
#define _CLC2SEL3_LC2D4S2_POSN                              0x2
#define _CLC2SEL3_LC2D4S2_POSITION                          0x2
#define _CLC2SEL3_LC2D4S2_SIZE                              0x1
#define _CLC2SEL3_LC2D4S2_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S2_MASK                              0x4
#define _CLC2SEL3_LC2D4S3_POSN                              0x3
#define _CLC2SEL3_LC2D4S3_POSITION                          0x3
#define _CLC2SEL3_LC2D4S3_SIZE                              0x1
#define _CLC2SEL3_LC2D4S3_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S3_MASK                              0x8
#define _CLC2SEL3_LC2D4S4_POSN                              0x4
#define _CLC2SEL3_LC2D4S4_POSITION                          0x4
#define _CLC2SEL3_LC2D4S4_SIZE                              0x1
#define _CLC2SEL3_LC2D4S4_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S4_MASK                              0x10
#define _CLC2SEL3_LC2D4S5_POSN                              0x5
#define _CLC2SEL3_LC2D4S5_POSITION                          0x5
#define _CLC2SEL3_LC2D4S5_SIZE                              0x1
#define _CLC2SEL3_LC2D4S5_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S5_MASK                              0x20
#define _CLC2SEL3_LC2D4S_POSN                               0x0
#define _CLC2SEL3_LC2D4S_POSITION                           0x0
#define _CLC2SEL3_LC2D4S_SIZE                               0x8
#define _CLC2SEL3_LC2D4S_LENGTH                             0x8
#define _CLC2SEL3_LC2D4S_MASK                               0xFF
#define _CLC2SEL3_D4S_POSN                                  0x0
#define _CLC2SEL3_D4S_POSITION                              0x0
#define _CLC2SEL3_D4S_SIZE                                  0x8
#define _CLC2SEL3_D4S_LENGTH                                0x8
#define _CLC2SEL3_D4S_MASK                                  0xFF
#define _CLC2SEL3_D4S0_POSN                                 0x0
#define _CLC2SEL3_D4S0_POSITION                             0x0
#define _CLC2SEL3_D4S0_SIZE                                 0x1
#define _CLC2SEL3_D4S0_LENGTH                               0x1
#define _CLC2SEL3_D4S0_MASK                                 0x1
#define _CLC2SEL3_D4S1_POSN                                 0x1
#define _CLC2SEL3_D4S1_POSITION                             0x1
#define _CLC2SEL3_D4S1_SIZE                                 0x1
#define _CLC2SEL3_D4S1_LENGTH                               0x1
#define _CLC2SEL3_D4S1_MASK                                 0x2
#define _CLC2SEL3_D4S2_POSN                                 0x2
#define _CLC2SEL3_D4S2_POSITION                             0x2
#define _CLC2SEL3_D4S2_SIZE                                 0x1
#define _CLC2SEL3_D4S2_LENGTH                               0x1
#define _CLC2SEL3_D4S2_MASK                                 0x4
#define _CLC2SEL3_D4S3_POSN                                 0x3
#define _CLC2SEL3_D4S3_POSITION                             0x3
#define _CLC2SEL3_D4S3_SIZE                                 0x1
#define _CLC2SEL3_D4S3_LENGTH                               0x1
#define _CLC2SEL3_D4S3_MASK                                 0x8
#define _CLC2SEL3_D4S4_POSN                                 0x4
#define _CLC2SEL3_D4S4_POSITION                             0x4
#define _CLC2SEL3_D4S4_SIZE                                 0x1
#define _CLC2SEL3_D4S4_LENGTH                               0x1
#define _CLC2SEL3_D4S4_MASK                                 0x10
#define _CLC2SEL3_D4S5_POSN                                 0x5
#define _CLC2SEL3_D4S5_POSITION                             0x5
#define _CLC2SEL3_D4S5_SIZE                                 0x1
#define _CLC2SEL3_D4S5_LENGTH                               0x1
#define _CLC2SEL3_D4S5_MASK                                 0x20

// Register: CLC2GLS0
#define CLC2GLS0 CLC2GLS0
extern volatile unsigned char           CLC2GLS0            __at(0xF20);
#ifndef _LIB_BUILD
asm("CLC2GLS0 equ 0F20h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2G1D1N               :1;
        unsigned LC2G1D1T               :1;
        unsigned LC2G1D2N               :1;
        unsigned LC2G1D2T               :1;
        unsigned LC2G1D3N               :1;
        unsigned LC2G1D3T               :1;
        unsigned LC2G1D4N               :1;
        unsigned LC2G1D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC2GLS0bits_t;
extern volatile CLC2GLS0bits_t CLC2GLS0bits __at(0xF20);
// bitfield macros
#define _CLC2GLS0_LC2G1D1N_POSN                             0x0
#define _CLC2GLS0_LC2G1D1N_POSITION                         0x0
#define _CLC2GLS0_LC2G1D1N_SIZE                             0x1
#define _CLC2GLS0_LC2G1D1N_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D1N_MASK                             0x1
#define _CLC2GLS0_LC2G1D1T_POSN                             0x1
#define _CLC2GLS0_LC2G1D1T_POSITION                         0x1
#define _CLC2GLS0_LC2G1D1T_SIZE                             0x1
#define _CLC2GLS0_LC2G1D1T_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D1T_MASK                             0x2
#define _CLC2GLS0_LC2G1D2N_POSN                             0x2
#define _CLC2GLS0_LC2G1D2N_POSITION                         0x2
#define _CLC2GLS0_LC2G1D2N_SIZE                             0x1
#define _CLC2GLS0_LC2G1D2N_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D2N_MASK                             0x4
#define _CLC2GLS0_LC2G1D2T_POSN                             0x3
#define _CLC2GLS0_LC2G1D2T_POSITION                         0x3
#define _CLC2GLS0_LC2G1D2T_SIZE                             0x1
#define _CLC2GLS0_LC2G1D2T_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D2T_MASK                             0x8
#define _CLC2GLS0_LC2G1D3N_POSN                             0x4
#define _CLC2GLS0_LC2G1D3N_POSITION                         0x4
#define _CLC2GLS0_LC2G1D3N_SIZE                             0x1
#define _CLC2GLS0_LC2G1D3N_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D3N_MASK                             0x10
#define _CLC2GLS0_LC2G1D3T_POSN                             0x5
#define _CLC2GLS0_LC2G1D3T_POSITION                         0x5
#define _CLC2GLS0_LC2G1D3T_SIZE                             0x1
#define _CLC2GLS0_LC2G1D3T_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D3T_MASK                             0x20
#define _CLC2GLS0_LC2G1D4N_POSN                             0x6
#define _CLC2GLS0_LC2G1D4N_POSITION                         0x6
#define _CLC2GLS0_LC2G1D4N_SIZE                             0x1
#define _CLC2GLS0_LC2G1D4N_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D4N_MASK                             0x40
#define _CLC2GLS0_LC2G1D4T_POSN                             0x7
#define _CLC2GLS0_LC2G1D4T_POSITION                         0x7
#define _CLC2GLS0_LC2G1D4T_SIZE                             0x1
#define _CLC2GLS0_LC2G1D4T_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D4T_MASK                             0x80
#define _CLC2GLS0_D1N_POSN                                  0x0
#define _CLC2GLS0_D1N_POSITION                              0x0
#define _CLC2GLS0_D1N_SIZE                                  0x1
#define _CLC2GLS0_D1N_LENGTH                                0x1
#define _CLC2GLS0_D1N_MASK                                  0x1
#define _CLC2GLS0_D1T_POSN                                  0x1
#define _CLC2GLS0_D1T_POSITION                              0x1
#define _CLC2GLS0_D1T_SIZE                                  0x1
#define _CLC2GLS0_D1T_LENGTH                                0x1
#define _CLC2GLS0_D1T_MASK                                  0x2
#define _CLC2GLS0_D2N_POSN                                  0x2
#define _CLC2GLS0_D2N_POSITION                              0x2
#define _CLC2GLS0_D2N_SIZE                                  0x1
#define _CLC2GLS0_D2N_LENGTH                                0x1
#define _CLC2GLS0_D2N_MASK                                  0x4
#define _CLC2GLS0_D2T_POSN                                  0x3
#define _CLC2GLS0_D2T_POSITION                              0x3
#define _CLC2GLS0_D2T_SIZE                                  0x1
#define _CLC2GLS0_D2T_LENGTH                                0x1
#define _CLC2GLS0_D2T_MASK                                  0x8
#define _CLC2GLS0_D3N_POSN                                  0x4
#define _CLC2GLS0_D3N_POSITION                              0x4
#define _CLC2GLS0_D3N_SIZE                                  0x1
#define _CLC2GLS0_D3N_LENGTH                                0x1
#define _CLC2GLS0_D3N_MASK                                  0x10
#define _CLC2GLS0_D3T_POSN                                  0x5
#define _CLC2GLS0_D3T_POSITION                              0x5
#define _CLC2GLS0_D3T_SIZE                                  0x1
#define _CLC2GLS0_D3T_LENGTH                                0x1
#define _CLC2GLS0_D3T_MASK                                  0x20
#define _CLC2GLS0_D4N_POSN                                  0x6
#define _CLC2GLS0_D4N_POSITION                              0x6
#define _CLC2GLS0_D4N_SIZE                                  0x1
#define _CLC2GLS0_D4N_LENGTH                                0x1
#define _CLC2GLS0_D4N_MASK                                  0x40
#define _CLC2GLS0_D4T_POSN                                  0x7
#define _CLC2GLS0_D4T_POSITION                              0x7
#define _CLC2GLS0_D4T_SIZE                                  0x1
#define _CLC2GLS0_D4T_LENGTH                                0x1
#define _CLC2GLS0_D4T_MASK                                  0x80

// Register: CLC2GLS1
#define CLC2GLS1 CLC2GLS1
extern volatile unsigned char           CLC2GLS1            __at(0xF21);
#ifndef _LIB_BUILD
asm("CLC2GLS1 equ 0F21h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2G2D1N               :1;
        unsigned LC2G2D1T               :1;
        unsigned LC2G2D2N               :1;
        unsigned LC2G2D2T               :1;
        unsigned LC2G2D3N               :1;
        unsigned LC2G2D3T               :1;
        unsigned LC2G2D4N               :1;
        unsigned LC2G2D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC2GLS1bits_t;
extern volatile CLC2GLS1bits_t CLC2GLS1bits __at(0xF21);
// bitfield macros
#define _CLC2GLS1_LC2G2D1N_POSN                             0x0
#define _CLC2GLS1_LC2G2D1N_POSITION                         0x0
#define _CLC2GLS1_LC2G2D1N_SIZE                             0x1
#define _CLC2GLS1_LC2G2D1N_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D1N_MASK                             0x1
#define _CLC2GLS1_LC2G2D1T_POSN                             0x1
#define _CLC2GLS1_LC2G2D1T_POSITION                         0x1
#define _CLC2GLS1_LC2G2D1T_SIZE                             0x1
#define _CLC2GLS1_LC2G2D1T_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D1T_MASK                             0x2
#define _CLC2GLS1_LC2G2D2N_POSN                             0x2
#define _CLC2GLS1_LC2G2D2N_POSITION                         0x2
#define _CLC2GLS1_LC2G2D2N_SIZE                             0x1
#define _CLC2GLS1_LC2G2D2N_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D2N_MASK                             0x4
#define _CLC2GLS1_LC2G2D2T_POSN                             0x3
#define _CLC2GLS1_LC2G2D2T_POSITION                         0x3
#define _CLC2GLS1_LC2G2D2T_SIZE                             0x1
#define _CLC2GLS1_LC2G2D2T_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D2T_MASK                             0x8
#define _CLC2GLS1_LC2G2D3N_POSN                             0x4
#define _CLC2GLS1_LC2G2D3N_POSITION                         0x4
#define _CLC2GLS1_LC2G2D3N_SIZE                             0x1
#define _CLC2GLS1_LC2G2D3N_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D3N_MASK                             0x10
#define _CLC2GLS1_LC2G2D3T_POSN                             0x5
#define _CLC2GLS1_LC2G2D3T_POSITION                         0x5
#define _CLC2GLS1_LC2G2D3T_SIZE                             0x1
#define _CLC2GLS1_LC2G2D3T_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D3T_MASK                             0x20
#define _CLC2GLS1_LC2G2D4N_POSN                             0x6
#define _CLC2GLS1_LC2G2D4N_POSITION                         0x6
#define _CLC2GLS1_LC2G2D4N_SIZE                             0x1
#define _CLC2GLS1_LC2G2D4N_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D4N_MASK                             0x40
#define _CLC2GLS1_LC2G2D4T_POSN                             0x7
#define _CLC2GLS1_LC2G2D4T_POSITION                         0x7
#define _CLC2GLS1_LC2G2D4T_SIZE                             0x1
#define _CLC2GLS1_LC2G2D4T_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D4T_MASK                             0x80
#define _CLC2GLS1_D1N_POSN                                  0x0
#define _CLC2GLS1_D1N_POSITION                              0x0
#define _CLC2GLS1_D1N_SIZE                                  0x1
#define _CLC2GLS1_D1N_LENGTH                                0x1
#define _CLC2GLS1_D1N_MASK                                  0x1
#define _CLC2GLS1_D1T_POSN                                  0x1
#define _CLC2GLS1_D1T_POSITION                              0x1
#define _CLC2GLS1_D1T_SIZE                                  0x1
#define _CLC2GLS1_D1T_LENGTH                                0x1
#define _CLC2GLS1_D1T_MASK                                  0x2
#define _CLC2GLS1_D2N_POSN                                  0x2
#define _CLC2GLS1_D2N_POSITION                              0x2
#define _CLC2GLS1_D2N_SIZE                                  0x1
#define _CLC2GLS1_D2N_LENGTH                                0x1
#define _CLC2GLS1_D2N_MASK                                  0x4
#define _CLC2GLS1_D2T_POSN                                  0x3
#define _CLC2GLS1_D2T_POSITION                              0x3
#define _CLC2GLS1_D2T_SIZE                                  0x1
#define _CLC2GLS1_D2T_LENGTH                                0x1
#define _CLC2GLS1_D2T_MASK                                  0x8
#define _CLC2GLS1_D3N_POSN                                  0x4
#define _CLC2GLS1_D3N_POSITION                              0x4
#define _CLC2GLS1_D3N_SIZE                                  0x1
#define _CLC2GLS1_D3N_LENGTH                                0x1
#define _CLC2GLS1_D3N_MASK                                  0x10
#define _CLC2GLS1_D3T_POSN                                  0x5
#define _CLC2GLS1_D3T_POSITION                              0x5
#define _CLC2GLS1_D3T_SIZE                                  0x1
#define _CLC2GLS1_D3T_LENGTH                                0x1
#define _CLC2GLS1_D3T_MASK                                  0x20
#define _CLC2GLS1_D4N_POSN                                  0x6
#define _CLC2GLS1_D4N_POSITION                              0x6
#define _CLC2GLS1_D4N_SIZE                                  0x1
#define _CLC2GLS1_D4N_LENGTH                                0x1
#define _CLC2GLS1_D4N_MASK                                  0x40
#define _CLC2GLS1_D4T_POSN                                  0x7
#define _CLC2GLS1_D4T_POSITION                              0x7
#define _CLC2GLS1_D4T_SIZE                                  0x1
#define _CLC2GLS1_D4T_LENGTH                                0x1
#define _CLC2GLS1_D4T_MASK                                  0x80

// Register: CLC2GLS2
#define CLC2GLS2 CLC2GLS2
extern volatile unsigned char           CLC2GLS2            __at(0xF22);
#ifndef _LIB_BUILD
asm("CLC2GLS2 equ 0F22h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2G3D1N               :1;
        unsigned LC2G3D1T               :1;
        unsigned LC2G3D2N               :1;
        unsigned LC2G3D2T               :1;
        unsigned LC2G3D3N               :1;
        unsigned LC2G3D3T               :1;
        unsigned LC2G3D4N               :1;
        unsigned LC2G3D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC2GLS2bits_t;
extern volatile CLC2GLS2bits_t CLC2GLS2bits __at(0xF22);
// bitfield macros
#define _CLC2GLS2_LC2G3D1N_POSN                             0x0
#define _CLC2GLS2_LC2G3D1N_POSITION                         0x0
#define _CLC2GLS2_LC2G3D1N_SIZE                             0x1
#define _CLC2GLS2_LC2G3D1N_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D1N_MASK                             0x1
#define _CLC2GLS2_LC2G3D1T_POSN                             0x1
#define _CLC2GLS2_LC2G3D1T_POSITION                         0x1
#define _CLC2GLS2_LC2G3D1T_SIZE                             0x1
#define _CLC2GLS2_LC2G3D1T_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D1T_MASK                             0x2
#define _CLC2GLS2_LC2G3D2N_POSN                             0x2
#define _CLC2GLS2_LC2G3D2N_POSITION                         0x2
#define _CLC2GLS2_LC2G3D2N_SIZE                             0x1
#define _CLC2GLS2_LC2G3D2N_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D2N_MASK                             0x4
#define _CLC2GLS2_LC2G3D2T_POSN                             0x3
#define _CLC2GLS2_LC2G3D2T_POSITION                         0x3
#define _CLC2GLS2_LC2G3D2T_SIZE                             0x1
#define _CLC2GLS2_LC2G3D2T_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D2T_MASK                             0x8
#define _CLC2GLS2_LC2G3D3N_POSN                             0x4
#define _CLC2GLS2_LC2G3D3N_POSITION                         0x4
#define _CLC2GLS2_LC2G3D3N_SIZE                             0x1
#define _CLC2GLS2_LC2G3D3N_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D3N_MASK                             0x10
#define _CLC2GLS2_LC2G3D3T_POSN                             0x5
#define _CLC2GLS2_LC2G3D3T_POSITION                         0x5
#define _CLC2GLS2_LC2G3D3T_SIZE                             0x1
#define _CLC2GLS2_LC2G3D3T_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D3T_MASK                             0x20
#define _CLC2GLS2_LC2G3D4N_POSN                             0x6
#define _CLC2GLS2_LC2G3D4N_POSITION                         0x6
#define _CLC2GLS2_LC2G3D4N_SIZE                             0x1
#define _CLC2GLS2_LC2G3D4N_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D4N_MASK                             0x40
#define _CLC2GLS2_LC2G3D4T_POSN                             0x7
#define _CLC2GLS2_LC2G3D4T_POSITION                         0x7
#define _CLC2GLS2_LC2G3D4T_SIZE                             0x1
#define _CLC2GLS2_LC2G3D4T_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D4T_MASK                             0x80
#define _CLC2GLS2_D1N_POSN                                  0x0
#define _CLC2GLS2_D1N_POSITION                              0x0
#define _CLC2GLS2_D1N_SIZE                                  0x1
#define _CLC2GLS2_D1N_LENGTH                                0x1
#define _CLC2GLS2_D1N_MASK                                  0x1
#define _CLC2GLS2_D1T_POSN                                  0x1
#define _CLC2GLS2_D1T_POSITION                              0x1
#define _CLC2GLS2_D1T_SIZE                                  0x1
#define _CLC2GLS2_D1T_LENGTH                                0x1
#define _CLC2GLS2_D1T_MASK                                  0x2
#define _CLC2GLS2_D2N_POSN                                  0x2
#define _CLC2GLS2_D2N_POSITION                              0x2
#define _CLC2GLS2_D2N_SIZE                                  0x1
#define _CLC2GLS2_D2N_LENGTH                                0x1
#define _CLC2GLS2_D2N_MASK                                  0x4
#define _CLC2GLS2_D2T_POSN                                  0x3
#define _CLC2GLS2_D2T_POSITION                              0x3
#define _CLC2GLS2_D2T_SIZE                                  0x1
#define _CLC2GLS2_D2T_LENGTH                                0x1
#define _CLC2GLS2_D2T_MASK                                  0x8
#define _CLC2GLS2_D3N_POSN                                  0x4
#define _CLC2GLS2_D3N_POSITION                              0x4
#define _CLC2GLS2_D3N_SIZE                                  0x1
#define _CLC2GLS2_D3N_LENGTH                                0x1
#define _CLC2GLS2_D3N_MASK                                  0x10
#define _CLC2GLS2_D3T_POSN                                  0x5
#define _CLC2GLS2_D3T_POSITION                              0x5
#define _CLC2GLS2_D3T_SIZE                                  0x1
#define _CLC2GLS2_D3T_LENGTH                                0x1
#define _CLC2GLS2_D3T_MASK                                  0x20
#define _CLC2GLS2_D4N_POSN                                  0x6
#define _CLC2GLS2_D4N_POSITION                              0x6
#define _CLC2GLS2_D4N_SIZE                                  0x1
#define _CLC2GLS2_D4N_LENGTH                                0x1
#define _CLC2GLS2_D4N_MASK                                  0x40
#define _CLC2GLS2_D4T_POSN                                  0x7
#define _CLC2GLS2_D4T_POSITION                              0x7
#define _CLC2GLS2_D4T_SIZE                                  0x1
#define _CLC2GLS2_D4T_LENGTH                                0x1
#define _CLC2GLS2_D4T_MASK                                  0x80

// Register: CLC2GLS3
#define CLC2GLS3 CLC2GLS3
extern volatile unsigned char           CLC2GLS3            __at(0xF23);
#ifndef _LIB_BUILD
asm("CLC2GLS3 equ 0F23h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2G4D1N               :1;
        unsigned LC2G4D1T               :1;
        unsigned LC2G4D2N               :1;
        unsigned LC2G4D2T               :1;
        unsigned LC2G4D3N               :1;
        unsigned LC2G4D3T               :1;
        unsigned LC2G4D4N               :1;
        unsigned LC2G4D4T               :1;
    };
    struct {
        unsigned G4D1N                  :1;
        unsigned G4D1T                  :1;
        unsigned G4D2N                  :1;
        unsigned G4D2T                  :1;
        unsigned G4D3N                  :1;
        unsigned G4D3T                  :1;
        unsigned G4D4N                  :1;
        unsigned G4D4T                  :1;
    };
} CLC2GLS3bits_t;
extern volatile CLC2GLS3bits_t CLC2GLS3bits __at(0xF23);
// bitfield macros
#define _CLC2GLS3_LC2G4D1N_POSN                             0x0
#define _CLC2GLS3_LC2G4D1N_POSITION                         0x0
#define _CLC2GLS3_LC2G4D1N_SIZE                             0x1
#define _CLC2GLS3_LC2G4D1N_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D1N_MASK                             0x1
#define _CLC2GLS3_LC2G4D1T_POSN                             0x1
#define _CLC2GLS3_LC2G4D1T_POSITION                         0x1
#define _CLC2GLS3_LC2G4D1T_SIZE                             0x1
#define _CLC2GLS3_LC2G4D1T_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D1T_MASK                             0x2
#define _CLC2GLS3_LC2G4D2N_POSN                             0x2
#define _CLC2GLS3_LC2G4D2N_POSITION                         0x2
#define _CLC2GLS3_LC2G4D2N_SIZE                             0x1
#define _CLC2GLS3_LC2G4D2N_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D2N_MASK                             0x4
#define _CLC2GLS3_LC2G4D2T_POSN                             0x3
#define _CLC2GLS3_LC2G4D2T_POSITION                         0x3
#define _CLC2GLS3_LC2G4D2T_SIZE                             0x1
#define _CLC2GLS3_LC2G4D2T_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D2T_MASK                             0x8
#define _CLC2GLS3_LC2G4D3N_POSN                             0x4
#define _CLC2GLS3_LC2G4D3N_POSITION                         0x4
#define _CLC2GLS3_LC2G4D3N_SIZE                             0x1
#define _CLC2GLS3_LC2G4D3N_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D3N_MASK                             0x10
#define _CLC2GLS3_LC2G4D3T_POSN                             0x5
#define _CLC2GLS3_LC2G4D3T_POSITION                         0x5
#define _CLC2GLS3_LC2G4D3T_SIZE                             0x1
#define _CLC2GLS3_LC2G4D3T_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D3T_MASK                             0x20
#define _CLC2GLS3_LC2G4D4N_POSN                             0x6
#define _CLC2GLS3_LC2G4D4N_POSITION                         0x6
#define _CLC2GLS3_LC2G4D4N_SIZE                             0x1
#define _CLC2GLS3_LC2G4D4N_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D4N_MASK                             0x40
#define _CLC2GLS3_LC2G4D4T_POSN                             0x7
#define _CLC2GLS3_LC2G4D4T_POSITION                         0x7
#define _CLC2GLS3_LC2G4D4T_SIZE                             0x1
#define _CLC2GLS3_LC2G4D4T_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D4T_MASK                             0x80
#define _CLC2GLS3_G4D1N_POSN                                0x0
#define _CLC2GLS3_G4D1N_POSITION                            0x0
#define _CLC2GLS3_G4D1N_SIZE                                0x1
#define _CLC2GLS3_G4D1N_LENGTH                              0x1
#define _CLC2GLS3_G4D1N_MASK                                0x1
#define _CLC2GLS3_G4D1T_POSN                                0x1
#define _CLC2GLS3_G4D1T_POSITION                            0x1
#define _CLC2GLS3_G4D1T_SIZE                                0x1
#define _CLC2GLS3_G4D1T_LENGTH                              0x1
#define _CLC2GLS3_G4D1T_MASK                                0x2
#define _CLC2GLS3_G4D2N_POSN                                0x2
#define _CLC2GLS3_G4D2N_POSITION                            0x2
#define _CLC2GLS3_G4D2N_SIZE                                0x1
#define _CLC2GLS3_G4D2N_LENGTH                              0x1
#define _CLC2GLS3_G4D2N_MASK                                0x4
#define _CLC2GLS3_G4D2T_POSN                                0x3
#define _CLC2GLS3_G4D2T_POSITION                            0x3
#define _CLC2GLS3_G4D2T_SIZE                                0x1
#define _CLC2GLS3_G4D2T_LENGTH                              0x1
#define _CLC2GLS3_G4D2T_MASK                                0x8
#define _CLC2GLS3_G4D3N_POSN                                0x4
#define _CLC2GLS3_G4D3N_POSITION                            0x4
#define _CLC2GLS3_G4D3N_SIZE                                0x1
#define _CLC2GLS3_G4D3N_LENGTH                              0x1
#define _CLC2GLS3_G4D3N_MASK                                0x10
#define _CLC2GLS3_G4D3T_POSN                                0x5
#define _CLC2GLS3_G4D3T_POSITION                            0x5
#define _CLC2GLS3_G4D3T_SIZE                                0x1
#define _CLC2GLS3_G4D3T_LENGTH                              0x1
#define _CLC2GLS3_G4D3T_MASK                                0x20
#define _CLC2GLS3_G4D4N_POSN                                0x6
#define _CLC2GLS3_G4D4N_POSITION                            0x6
#define _CLC2GLS3_G4D4N_SIZE                                0x1
#define _CLC2GLS3_G4D4N_LENGTH                              0x1
#define _CLC2GLS3_G4D4N_MASK                                0x40
#define _CLC2GLS3_G4D4T_POSN                                0x7
#define _CLC2GLS3_G4D4T_POSITION                            0x7
#define _CLC2GLS3_G4D4T_SIZE                                0x1
#define _CLC2GLS3_G4D4T_LENGTH                              0x1
#define _CLC2GLS3_G4D4T_MASK                                0x80

// Register: CLC3CON
#define CLC3CON CLC3CON
extern volatile unsigned char           CLC3CON             __at(0xF24);
#ifndef _LIB_BUILD
asm("CLC3CON equ 0F24h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3MODE                :3;
        unsigned LC3INTN                :1;
        unsigned LC3INTP                :1;
        unsigned LC3OUT                 :1;
        unsigned                        :1;
        unsigned LC3EN                  :1;
    };
    struct {
        unsigned LC3MODE0               :1;
        unsigned LC3MODE1               :1;
        unsigned LC3MODE2               :1;
    };
    struct {
        unsigned MODE                   :3;
        unsigned INTN                   :1;
        unsigned INTP                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
    };
} CLC3CONbits_t;
extern volatile CLC3CONbits_t CLC3CONbits __at(0xF24);
// bitfield macros
#define _CLC3CON_LC3MODE_POSN                               0x0
#define _CLC3CON_LC3MODE_POSITION                           0x0
#define _CLC3CON_LC3MODE_SIZE                               0x3
#define _CLC3CON_LC3MODE_LENGTH                             0x3
#define _CLC3CON_LC3MODE_MASK                               0x7
#define _CLC3CON_LC3INTN_POSN                               0x3
#define _CLC3CON_LC3INTN_POSITION                           0x3
#define _CLC3CON_LC3INTN_SIZE                               0x1
#define _CLC3CON_LC3INTN_LENGTH                             0x1
#define _CLC3CON_LC3INTN_MASK                               0x8
#define _CLC3CON_LC3INTP_POSN                               0x4
#define _CLC3CON_LC3INTP_POSITION                           0x4
#define _CLC3CON_LC3INTP_SIZE                               0x1
#define _CLC3CON_LC3INTP_LENGTH                             0x1
#define _CLC3CON_LC3INTP_MASK                               0x10
#define _CLC3CON_LC3OUT_POSN                                0x5
#define _CLC3CON_LC3OUT_POSITION                            0x5
#define _CLC3CON_LC3OUT_SIZE                                0x1
#define _CLC3CON_LC3OUT_LENGTH                              0x1
#define _CLC3CON_LC3OUT_MASK                                0x20
#define _CLC3CON_LC3EN_POSN                                 0x7
#define _CLC3CON_LC3EN_POSITION                             0x7
#define _CLC3CON_LC3EN_SIZE                                 0x1
#define _CLC3CON_LC3EN_LENGTH                               0x1
#define _CLC3CON_LC3EN_MASK                                 0x80
#define _CLC3CON_LC3MODE0_POSN                              0x0
#define _CLC3CON_LC3MODE0_POSITION                          0x0
#define _CLC3CON_LC3MODE0_SIZE                              0x1
#define _CLC3CON_LC3MODE0_LENGTH                            0x1
#define _CLC3CON_LC3MODE0_MASK                              0x1
#define _CLC3CON_LC3MODE1_POSN                              0x1
#define _CLC3CON_LC3MODE1_POSITION                          0x1
#define _CLC3CON_LC3MODE1_SIZE                              0x1
#define _CLC3CON_LC3MODE1_LENGTH                            0x1
#define _CLC3CON_LC3MODE1_MASK                              0x2
#define _CLC3CON_LC3MODE2_POSN                              0x2
#define _CLC3CON_LC3MODE2_POSITION                          0x2
#define _CLC3CON_LC3MODE2_SIZE                              0x1
#define _CLC3CON_LC3MODE2_LENGTH                            0x1
#define _CLC3CON_LC3MODE2_MASK                              0x4
#define _CLC3CON_MODE_POSN                                  0x0
#define _CLC3CON_MODE_POSITION                              0x0
#define _CLC3CON_MODE_SIZE                                  0x3
#define _CLC3CON_MODE_LENGTH                                0x3
#define _CLC3CON_MODE_MASK                                  0x7
#define _CLC3CON_INTN_POSN                                  0x3
#define _CLC3CON_INTN_POSITION                              0x3
#define _CLC3CON_INTN_SIZE                                  0x1
#define _CLC3CON_INTN_LENGTH                                0x1
#define _CLC3CON_INTN_MASK                                  0x8
#define _CLC3CON_INTP_POSN                                  0x4
#define _CLC3CON_INTP_POSITION                              0x4
#define _CLC3CON_INTP_SIZE                                  0x1
#define _CLC3CON_INTP_LENGTH                                0x1
#define _CLC3CON_INTP_MASK                                  0x10
#define _CLC3CON_OUT_POSN                                   0x5
#define _CLC3CON_OUT_POSITION                               0x5
#define _CLC3CON_OUT_SIZE                                   0x1
#define _CLC3CON_OUT_LENGTH                                 0x1
#define _CLC3CON_OUT_MASK                                   0x20
#define _CLC3CON_EN_POSN                                    0x7
#define _CLC3CON_EN_POSITION                                0x7
#define _CLC3CON_EN_SIZE                                    0x1
#define _CLC3CON_EN_LENGTH                                  0x1
#define _CLC3CON_EN_MASK                                    0x80
#define _CLC3CON_MODE0_POSN                                 0x0
#define _CLC3CON_MODE0_POSITION                             0x0
#define _CLC3CON_MODE0_SIZE                                 0x1
#define _CLC3CON_MODE0_LENGTH                               0x1
#define _CLC3CON_MODE0_MASK                                 0x1
#define _CLC3CON_MODE1_POSN                                 0x1
#define _CLC3CON_MODE1_POSITION                             0x1
#define _CLC3CON_MODE1_SIZE                                 0x1
#define _CLC3CON_MODE1_LENGTH                               0x1
#define _CLC3CON_MODE1_MASK                                 0x2
#define _CLC3CON_MODE2_POSN                                 0x2
#define _CLC3CON_MODE2_POSITION                             0x2
#define _CLC3CON_MODE2_SIZE                                 0x1
#define _CLC3CON_MODE2_LENGTH                               0x1
#define _CLC3CON_MODE2_MASK                                 0x4

// Register: CLC3POL
#define CLC3POL CLC3POL
extern volatile unsigned char           CLC3POL             __at(0xF25);
#ifndef _LIB_BUILD
asm("CLC3POL equ 0F25h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3G1POL               :1;
        unsigned LC3G2POL               :1;
        unsigned LC3G3POL               :1;
        unsigned LC3G4POL               :1;
        unsigned                        :3;
        unsigned LC3POL                 :1;
    };
    struct {
        unsigned G1POL                  :1;
        unsigned G2POL                  :1;
        unsigned G3POL                  :1;
        unsigned G4POL                  :1;
        unsigned                        :3;
        unsigned POL                    :1;
    };
} CLC3POLbits_t;
extern volatile CLC3POLbits_t CLC3POLbits __at(0xF25);
// bitfield macros
#define _CLC3POL_LC3G1POL_POSN                              0x0
#define _CLC3POL_LC3G1POL_POSITION                          0x0
#define _CLC3POL_LC3G1POL_SIZE                              0x1
#define _CLC3POL_LC3G1POL_LENGTH                            0x1
#define _CLC3POL_LC3G1POL_MASK                              0x1
#define _CLC3POL_LC3G2POL_POSN                              0x1
#define _CLC3POL_LC3G2POL_POSITION                          0x1
#define _CLC3POL_LC3G2POL_SIZE                              0x1
#define _CLC3POL_LC3G2POL_LENGTH                            0x1
#define _CLC3POL_LC3G2POL_MASK                              0x2
#define _CLC3POL_LC3G3POL_POSN                              0x2
#define _CLC3POL_LC3G3POL_POSITION                          0x2
#define _CLC3POL_LC3G3POL_SIZE                              0x1
#define _CLC3POL_LC3G3POL_LENGTH                            0x1
#define _CLC3POL_LC3G3POL_MASK                              0x4
#define _CLC3POL_LC3G4POL_POSN                              0x3
#define _CLC3POL_LC3G4POL_POSITION                          0x3
#define _CLC3POL_LC3G4POL_SIZE                              0x1
#define _CLC3POL_LC3G4POL_LENGTH                            0x1
#define _CLC3POL_LC3G4POL_MASK                              0x8
#define _CLC3POL_LC3POL_POSN                                0x7
#define _CLC3POL_LC3POL_POSITION                            0x7
#define _CLC3POL_LC3POL_SIZE                                0x1
#define _CLC3POL_LC3POL_LENGTH                              0x1
#define _CLC3POL_LC3POL_MASK                                0x80
#define _CLC3POL_G1POL_POSN                                 0x0
#define _CLC3POL_G1POL_POSITION                             0x0
#define _CLC3POL_G1POL_SIZE                                 0x1
#define _CLC3POL_G1POL_LENGTH                               0x1
#define _CLC3POL_G1POL_MASK                                 0x1
#define _CLC3POL_G2POL_POSN                                 0x1
#define _CLC3POL_G2POL_POSITION                             0x1
#define _CLC3POL_G2POL_SIZE                                 0x1
#define _CLC3POL_G2POL_LENGTH                               0x1
#define _CLC3POL_G2POL_MASK                                 0x2
#define _CLC3POL_G3POL_POSN                                 0x2
#define _CLC3POL_G3POL_POSITION                             0x2
#define _CLC3POL_G3POL_SIZE                                 0x1
#define _CLC3POL_G3POL_LENGTH                               0x1
#define _CLC3POL_G3POL_MASK                                 0x4
#define _CLC3POL_G4POL_POSN                                 0x3
#define _CLC3POL_G4POL_POSITION                             0x3
#define _CLC3POL_G4POL_SIZE                                 0x1
#define _CLC3POL_G4POL_LENGTH                               0x1
#define _CLC3POL_G4POL_MASK                                 0x8
#define _CLC3POL_POL_POSN                                   0x7
#define _CLC3POL_POL_POSITION                               0x7
#define _CLC3POL_POL_SIZE                                   0x1
#define _CLC3POL_POL_LENGTH                                 0x1
#define _CLC3POL_POL_MASK                                   0x80

// Register: CLC3SEL0
#define CLC3SEL0 CLC3SEL0
extern volatile unsigned char           CLC3SEL0            __at(0xF26);
#ifndef _LIB_BUILD
asm("CLC3SEL0 equ 0F26h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3D1S0                :1;
        unsigned LC3D1S1                :1;
        unsigned LC3D1S2                :1;
        unsigned LC3D1S3                :1;
        unsigned LC3D1S4                :1;
        unsigned LC3D1S5                :1;
    };
    struct {
        unsigned LC3D1S                 :8;
    };
    struct {
        unsigned D1S                    :8;
    };
    struct {
        unsigned D1S0                   :1;
        unsigned D1S1                   :1;
        unsigned D1S2                   :1;
        unsigned D1S3                   :1;
        unsigned D1S4                   :1;
        unsigned D1S5                   :1;
    };
} CLC3SEL0bits_t;
extern volatile CLC3SEL0bits_t CLC3SEL0bits __at(0xF26);
// bitfield macros
#define _CLC3SEL0_LC3D1S0_POSN                              0x0
#define _CLC3SEL0_LC3D1S0_POSITION                          0x0
#define _CLC3SEL0_LC3D1S0_SIZE                              0x1
#define _CLC3SEL0_LC3D1S0_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S0_MASK                              0x1
#define _CLC3SEL0_LC3D1S1_POSN                              0x1
#define _CLC3SEL0_LC3D1S1_POSITION                          0x1
#define _CLC3SEL0_LC3D1S1_SIZE                              0x1
#define _CLC3SEL0_LC3D1S1_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S1_MASK                              0x2
#define _CLC3SEL0_LC3D1S2_POSN                              0x2
#define _CLC3SEL0_LC3D1S2_POSITION                          0x2
#define _CLC3SEL0_LC3D1S2_SIZE                              0x1
#define _CLC3SEL0_LC3D1S2_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S2_MASK                              0x4
#define _CLC3SEL0_LC3D1S3_POSN                              0x3
#define _CLC3SEL0_LC3D1S3_POSITION                          0x3
#define _CLC3SEL0_LC3D1S3_SIZE                              0x1
#define _CLC3SEL0_LC3D1S3_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S3_MASK                              0x8
#define _CLC3SEL0_LC3D1S4_POSN                              0x4
#define _CLC3SEL0_LC3D1S4_POSITION                          0x4
#define _CLC3SEL0_LC3D1S4_SIZE                              0x1
#define _CLC3SEL0_LC3D1S4_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S4_MASK                              0x10
#define _CLC3SEL0_LC3D1S5_POSN                              0x5
#define _CLC3SEL0_LC3D1S5_POSITION                          0x5
#define _CLC3SEL0_LC3D1S5_SIZE                              0x1
#define _CLC3SEL0_LC3D1S5_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S5_MASK                              0x20
#define _CLC3SEL0_LC3D1S_POSN                               0x0
#define _CLC3SEL0_LC3D1S_POSITION                           0x0
#define _CLC3SEL0_LC3D1S_SIZE                               0x8
#define _CLC3SEL0_LC3D1S_LENGTH                             0x8
#define _CLC3SEL0_LC3D1S_MASK                               0xFF
#define _CLC3SEL0_D1S_POSN                                  0x0
#define _CLC3SEL0_D1S_POSITION                              0x0
#define _CLC3SEL0_D1S_SIZE                                  0x8
#define _CLC3SEL0_D1S_LENGTH                                0x8
#define _CLC3SEL0_D1S_MASK                                  0xFF
#define _CLC3SEL0_D1S0_POSN                                 0x0
#define _CLC3SEL0_D1S0_POSITION                             0x0
#define _CLC3SEL0_D1S0_SIZE                                 0x1
#define _CLC3SEL0_D1S0_LENGTH                               0x1
#define _CLC3SEL0_D1S0_MASK                                 0x1
#define _CLC3SEL0_D1S1_POSN                                 0x1
#define _CLC3SEL0_D1S1_POSITION                             0x1
#define _CLC3SEL0_D1S1_SIZE                                 0x1
#define _CLC3SEL0_D1S1_LENGTH                               0x1
#define _CLC3SEL0_D1S1_MASK                                 0x2
#define _CLC3SEL0_D1S2_POSN                                 0x2
#define _CLC3SEL0_D1S2_POSITION                             0x2
#define _CLC3SEL0_D1S2_SIZE                                 0x1
#define _CLC3SEL0_D1S2_LENGTH                               0x1
#define _CLC3SEL0_D1S2_MASK                                 0x4
#define _CLC3SEL0_D1S3_POSN                                 0x3
#define _CLC3SEL0_D1S3_POSITION                             0x3
#define _CLC3SEL0_D1S3_SIZE                                 0x1
#define _CLC3SEL0_D1S3_LENGTH                               0x1
#define _CLC3SEL0_D1S3_MASK                                 0x8
#define _CLC3SEL0_D1S4_POSN                                 0x4
#define _CLC3SEL0_D1S4_POSITION                             0x4
#define _CLC3SEL0_D1S4_SIZE                                 0x1
#define _CLC3SEL0_D1S4_LENGTH                               0x1
#define _CLC3SEL0_D1S4_MASK                                 0x10
#define _CLC3SEL0_D1S5_POSN                                 0x5
#define _CLC3SEL0_D1S5_POSITION                             0x5
#define _CLC3SEL0_D1S5_SIZE                                 0x1
#define _CLC3SEL0_D1S5_LENGTH                               0x1
#define _CLC3SEL0_D1S5_MASK                                 0x20

// Register: CLC3SEL1
#define CLC3SEL1 CLC3SEL1
extern volatile unsigned char           CLC3SEL1            __at(0xF27);
#ifndef _LIB_BUILD
asm("CLC3SEL1 equ 0F27h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3D2S0                :1;
        unsigned LC3D2S1                :1;
        unsigned LC3D2S2                :1;
        unsigned LC3D2S3                :1;
        unsigned LC3D2S4                :1;
        unsigned LC3D2S5                :1;
    };
    struct {
        unsigned LC3D2S                 :8;
    };
    struct {
        unsigned D2S                    :8;
    };
    struct {
        unsigned D2S0                   :1;
        unsigned D2S1                   :1;
        unsigned D2S2                   :1;
        unsigned D2S3                   :1;
        unsigned D2S4                   :1;
        unsigned D2S5                   :1;
    };
} CLC3SEL1bits_t;
extern volatile CLC3SEL1bits_t CLC3SEL1bits __at(0xF27);
// bitfield macros
#define _CLC3SEL1_LC3D2S0_POSN                              0x0
#define _CLC3SEL1_LC3D2S0_POSITION                          0x0
#define _CLC3SEL1_LC3D2S0_SIZE                              0x1
#define _CLC3SEL1_LC3D2S0_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S0_MASK                              0x1
#define _CLC3SEL1_LC3D2S1_POSN                              0x1
#define _CLC3SEL1_LC3D2S1_POSITION                          0x1
#define _CLC3SEL1_LC3D2S1_SIZE                              0x1
#define _CLC3SEL1_LC3D2S1_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S1_MASK                              0x2
#define _CLC3SEL1_LC3D2S2_POSN                              0x2
#define _CLC3SEL1_LC3D2S2_POSITION                          0x2
#define _CLC3SEL1_LC3D2S2_SIZE                              0x1
#define _CLC3SEL1_LC3D2S2_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S2_MASK                              0x4
#define _CLC3SEL1_LC3D2S3_POSN                              0x3
#define _CLC3SEL1_LC3D2S3_POSITION                          0x3
#define _CLC3SEL1_LC3D2S3_SIZE                              0x1
#define _CLC3SEL1_LC3D2S3_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S3_MASK                              0x8
#define _CLC3SEL1_LC3D2S4_POSN                              0x4
#define _CLC3SEL1_LC3D2S4_POSITION                          0x4
#define _CLC3SEL1_LC3D2S4_SIZE                              0x1
#define _CLC3SEL1_LC3D2S4_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S4_MASK                              0x10
#define _CLC3SEL1_LC3D2S5_POSN                              0x5
#define _CLC3SEL1_LC3D2S5_POSITION                          0x5
#define _CLC3SEL1_LC3D2S5_SIZE                              0x1
#define _CLC3SEL1_LC3D2S5_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S5_MASK                              0x20
#define _CLC3SEL1_LC3D2S_POSN                               0x0
#define _CLC3SEL1_LC3D2S_POSITION                           0x0
#define _CLC3SEL1_LC3D2S_SIZE                               0x8
#define _CLC3SEL1_LC3D2S_LENGTH                             0x8
#define _CLC3SEL1_LC3D2S_MASK                               0xFF
#define _CLC3SEL1_D2S_POSN                                  0x0
#define _CLC3SEL1_D2S_POSITION                              0x0
#define _CLC3SEL1_D2S_SIZE                                  0x8
#define _CLC3SEL1_D2S_LENGTH                                0x8
#define _CLC3SEL1_D2S_MASK                                  0xFF
#define _CLC3SEL1_D2S0_POSN                                 0x0
#define _CLC3SEL1_D2S0_POSITION                             0x0
#define _CLC3SEL1_D2S0_SIZE                                 0x1
#define _CLC3SEL1_D2S0_LENGTH                               0x1
#define _CLC3SEL1_D2S0_MASK                                 0x1
#define _CLC3SEL1_D2S1_POSN                                 0x1
#define _CLC3SEL1_D2S1_POSITION                             0x1
#define _CLC3SEL1_D2S1_SIZE                                 0x1
#define _CLC3SEL1_D2S1_LENGTH                               0x1
#define _CLC3SEL1_D2S1_MASK                                 0x2
#define _CLC3SEL1_D2S2_POSN                                 0x2
#define _CLC3SEL1_D2S2_POSITION                             0x2
#define _CLC3SEL1_D2S2_SIZE                                 0x1
#define _CLC3SEL1_D2S2_LENGTH                               0x1
#define _CLC3SEL1_D2S2_MASK                                 0x4
#define _CLC3SEL1_D2S3_POSN                                 0x3
#define _CLC3SEL1_D2S3_POSITION                             0x3
#define _CLC3SEL1_D2S3_SIZE                                 0x1
#define _CLC3SEL1_D2S3_LENGTH                               0x1
#define _CLC3SEL1_D2S3_MASK                                 0x8
#define _CLC3SEL1_D2S4_POSN                                 0x4
#define _CLC3SEL1_D2S4_POSITION                             0x4
#define _CLC3SEL1_D2S4_SIZE                                 0x1
#define _CLC3SEL1_D2S4_LENGTH                               0x1
#define _CLC3SEL1_D2S4_MASK                                 0x10
#define _CLC3SEL1_D2S5_POSN                                 0x5
#define _CLC3SEL1_D2S5_POSITION                             0x5
#define _CLC3SEL1_D2S5_SIZE                                 0x1
#define _CLC3SEL1_D2S5_LENGTH                               0x1
#define _CLC3SEL1_D2S5_MASK                                 0x20

// Register: CLC3SEL2
#define CLC3SEL2 CLC3SEL2
extern volatile unsigned char           CLC3SEL2            __at(0xF28);
#ifndef _LIB_BUILD
asm("CLC3SEL2 equ 0F28h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3D3S0                :1;
        unsigned LC3D3S1                :1;
        unsigned LC3D3S2                :1;
        unsigned LC3D3S3                :1;
        unsigned LC3D3S4                :1;
        unsigned LC3D3S5                :1;
    };
    struct {
        unsigned LC3D3S                 :8;
    };
    struct {
        unsigned D3S                    :8;
    };
    struct {
        unsigned D3S0                   :1;
        unsigned D3S1                   :1;
        unsigned D3S2                   :1;
        unsigned D3S3                   :1;
        unsigned D3S4                   :1;
        unsigned D3S5                   :1;
    };
} CLC3SEL2bits_t;
extern volatile CLC3SEL2bits_t CLC3SEL2bits __at(0xF28);
// bitfield macros
#define _CLC3SEL2_LC3D3S0_POSN                              0x0
#define _CLC3SEL2_LC3D3S0_POSITION                          0x0
#define _CLC3SEL2_LC3D3S0_SIZE                              0x1
#define _CLC3SEL2_LC3D3S0_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S0_MASK                              0x1
#define _CLC3SEL2_LC3D3S1_POSN                              0x1
#define _CLC3SEL2_LC3D3S1_POSITION                          0x1
#define _CLC3SEL2_LC3D3S1_SIZE                              0x1
#define _CLC3SEL2_LC3D3S1_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S1_MASK                              0x2
#define _CLC3SEL2_LC3D3S2_POSN                              0x2
#define _CLC3SEL2_LC3D3S2_POSITION                          0x2
#define _CLC3SEL2_LC3D3S2_SIZE                              0x1
#define _CLC3SEL2_LC3D3S2_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S2_MASK                              0x4
#define _CLC3SEL2_LC3D3S3_POSN                              0x3
#define _CLC3SEL2_LC3D3S3_POSITION                          0x3
#define _CLC3SEL2_LC3D3S3_SIZE                              0x1
#define _CLC3SEL2_LC3D3S3_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S3_MASK                              0x8
#define _CLC3SEL2_LC3D3S4_POSN                              0x4
#define _CLC3SEL2_LC3D3S4_POSITION                          0x4
#define _CLC3SEL2_LC3D3S4_SIZE                              0x1
#define _CLC3SEL2_LC3D3S4_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S4_MASK                              0x10
#define _CLC3SEL2_LC3D3S5_POSN                              0x5
#define _CLC3SEL2_LC3D3S5_POSITION                          0x5
#define _CLC3SEL2_LC3D3S5_SIZE                              0x1
#define _CLC3SEL2_LC3D3S5_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S5_MASK                              0x20
#define _CLC3SEL2_LC3D3S_POSN                               0x0
#define _CLC3SEL2_LC3D3S_POSITION                           0x0
#define _CLC3SEL2_LC3D3S_SIZE                               0x8
#define _CLC3SEL2_LC3D3S_LENGTH                             0x8
#define _CLC3SEL2_LC3D3S_MASK                               0xFF
#define _CLC3SEL2_D3S_POSN                                  0x0
#define _CLC3SEL2_D3S_POSITION                              0x0
#define _CLC3SEL2_D3S_SIZE                                  0x8
#define _CLC3SEL2_D3S_LENGTH                                0x8
#define _CLC3SEL2_D3S_MASK                                  0xFF
#define _CLC3SEL2_D3S0_POSN                                 0x0
#define _CLC3SEL2_D3S0_POSITION                             0x0
#define _CLC3SEL2_D3S0_SIZE                                 0x1
#define _CLC3SEL2_D3S0_LENGTH                               0x1
#define _CLC3SEL2_D3S0_MASK                                 0x1
#define _CLC3SEL2_D3S1_POSN                                 0x1
#define _CLC3SEL2_D3S1_POSITION                             0x1
#define _CLC3SEL2_D3S1_SIZE                                 0x1
#define _CLC3SEL2_D3S1_LENGTH                               0x1
#define _CLC3SEL2_D3S1_MASK                                 0x2
#define _CLC3SEL2_D3S2_POSN                                 0x2
#define _CLC3SEL2_D3S2_POSITION                             0x2
#define _CLC3SEL2_D3S2_SIZE                                 0x1
#define _CLC3SEL2_D3S2_LENGTH                               0x1
#define _CLC3SEL2_D3S2_MASK                                 0x4
#define _CLC3SEL2_D3S3_POSN                                 0x3
#define _CLC3SEL2_D3S3_POSITION                             0x3
#define _CLC3SEL2_D3S3_SIZE                                 0x1
#define _CLC3SEL2_D3S3_LENGTH                               0x1
#define _CLC3SEL2_D3S3_MASK                                 0x8
#define _CLC3SEL2_D3S4_POSN                                 0x4
#define _CLC3SEL2_D3S4_POSITION                             0x4
#define _CLC3SEL2_D3S4_SIZE                                 0x1
#define _CLC3SEL2_D3S4_LENGTH                               0x1
#define _CLC3SEL2_D3S4_MASK                                 0x10
#define _CLC3SEL2_D3S5_POSN                                 0x5
#define _CLC3SEL2_D3S5_POSITION                             0x5
#define _CLC3SEL2_D3S5_SIZE                                 0x1
#define _CLC3SEL2_D3S5_LENGTH                               0x1
#define _CLC3SEL2_D3S5_MASK                                 0x20

// Register: CLC3SEL3
#define CLC3SEL3 CLC3SEL3
extern volatile unsigned char           CLC3SEL3            __at(0xF29);
#ifndef _LIB_BUILD
asm("CLC3SEL3 equ 0F29h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3D4S0                :1;
        unsigned LC3D4S1                :1;
        unsigned LC3D4S2                :1;
        unsigned LC3D4S3                :1;
        unsigned LC3D4S4                :1;
        unsigned LC3D4S5                :1;
    };
    struct {
        unsigned LC3D4S                 :8;
    };
    struct {
        unsigned D4S                    :8;
    };
    struct {
        unsigned D4S0                   :1;
        unsigned D4S1                   :1;
        unsigned D4S2                   :1;
        unsigned D4S3                   :1;
        unsigned D4S4                   :1;
        unsigned D4S5                   :1;
    };
} CLC3SEL3bits_t;
extern volatile CLC3SEL3bits_t CLC3SEL3bits __at(0xF29);
// bitfield macros
#define _CLC3SEL3_LC3D4S0_POSN                              0x0
#define _CLC3SEL3_LC3D4S0_POSITION                          0x0
#define _CLC3SEL3_LC3D4S0_SIZE                              0x1
#define _CLC3SEL3_LC3D4S0_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S0_MASK                              0x1
#define _CLC3SEL3_LC3D4S1_POSN                              0x1
#define _CLC3SEL3_LC3D4S1_POSITION                          0x1
#define _CLC3SEL3_LC3D4S1_SIZE                              0x1
#define _CLC3SEL3_LC3D4S1_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S1_MASK                              0x2
#define _CLC3SEL3_LC3D4S2_POSN                              0x2
#define _CLC3SEL3_LC3D4S2_POSITION                          0x2
#define _CLC3SEL3_LC3D4S2_SIZE                              0x1
#define _CLC3SEL3_LC3D4S2_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S2_MASK                              0x4
#define _CLC3SEL3_LC3D4S3_POSN                              0x3
#define _CLC3SEL3_LC3D4S3_POSITION                          0x3
#define _CLC3SEL3_LC3D4S3_SIZE                              0x1
#define _CLC3SEL3_LC3D4S3_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S3_MASK                              0x8
#define _CLC3SEL3_LC3D4S4_POSN                              0x4
#define _CLC3SEL3_LC3D4S4_POSITION                          0x4
#define _CLC3SEL3_LC3D4S4_SIZE                              0x1
#define _CLC3SEL3_LC3D4S4_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S4_MASK                              0x10
#define _CLC3SEL3_LC3D4S5_POSN                              0x5
#define _CLC3SEL3_LC3D4S5_POSITION                          0x5
#define _CLC3SEL3_LC3D4S5_SIZE                              0x1
#define _CLC3SEL3_LC3D4S5_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S5_MASK                              0x20
#define _CLC3SEL3_LC3D4S_POSN                               0x0
#define _CLC3SEL3_LC3D4S_POSITION                           0x0
#define _CLC3SEL3_LC3D4S_SIZE                               0x8
#define _CLC3SEL3_LC3D4S_LENGTH                             0x8
#define _CLC3SEL3_LC3D4S_MASK                               0xFF
#define _CLC3SEL3_D4S_POSN                                  0x0
#define _CLC3SEL3_D4S_POSITION                              0x0
#define _CLC3SEL3_D4S_SIZE                                  0x8
#define _CLC3SEL3_D4S_LENGTH                                0x8
#define _CLC3SEL3_D4S_MASK                                  0xFF
#define _CLC3SEL3_D4S0_POSN                                 0x0
#define _CLC3SEL3_D4S0_POSITION                             0x0
#define _CLC3SEL3_D4S0_SIZE                                 0x1
#define _CLC3SEL3_D4S0_LENGTH                               0x1
#define _CLC3SEL3_D4S0_MASK                                 0x1
#define _CLC3SEL3_D4S1_POSN                                 0x1
#define _CLC3SEL3_D4S1_POSITION                             0x1
#define _CLC3SEL3_D4S1_SIZE                                 0x1
#define _CLC3SEL3_D4S1_LENGTH                               0x1
#define _CLC3SEL3_D4S1_MASK                                 0x2
#define _CLC3SEL3_D4S2_POSN                                 0x2
#define _CLC3SEL3_D4S2_POSITION                             0x2
#define _CLC3SEL3_D4S2_SIZE                                 0x1
#define _CLC3SEL3_D4S2_LENGTH                               0x1
#define _CLC3SEL3_D4S2_MASK                                 0x4
#define _CLC3SEL3_D4S3_POSN                                 0x3
#define _CLC3SEL3_D4S3_POSITION                             0x3
#define _CLC3SEL3_D4S3_SIZE                                 0x1
#define _CLC3SEL3_D4S3_LENGTH                               0x1
#define _CLC3SEL3_D4S3_MASK                                 0x8
#define _CLC3SEL3_D4S4_POSN                                 0x4
#define _CLC3SEL3_D4S4_POSITION                             0x4
#define _CLC3SEL3_D4S4_SIZE                                 0x1
#define _CLC3SEL3_D4S4_LENGTH                               0x1
#define _CLC3SEL3_D4S4_MASK                                 0x10
#define _CLC3SEL3_D4S5_POSN                                 0x5
#define _CLC3SEL3_D4S5_POSITION                             0x5
#define _CLC3SEL3_D4S5_SIZE                                 0x1
#define _CLC3SEL3_D4S5_LENGTH                               0x1
#define _CLC3SEL3_D4S5_MASK                                 0x20

// Register: CLC3GLS0
#define CLC3GLS0 CLC3GLS0
extern volatile unsigned char           CLC3GLS0            __at(0xF2A);
#ifndef _LIB_BUILD
asm("CLC3GLS0 equ 0F2Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3G1D1N               :1;
        unsigned LC3G1D1T               :1;
        unsigned LC3G1D2N               :1;
        unsigned LC3G1D2T               :1;
        unsigned LC3G1D3N               :1;
        unsigned LC3G1D3T               :1;
        unsigned LC3G1D4N               :1;
        unsigned LC3G1D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC3GLS0bits_t;
extern volatile CLC3GLS0bits_t CLC3GLS0bits __at(0xF2A);
// bitfield macros
#define _CLC3GLS0_LC3G1D1N_POSN                             0x0
#define _CLC3GLS0_LC3G1D1N_POSITION                         0x0
#define _CLC3GLS0_LC3G1D1N_SIZE                             0x1
#define _CLC3GLS0_LC3G1D1N_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D1N_MASK                             0x1
#define _CLC3GLS0_LC3G1D1T_POSN                             0x1
#define _CLC3GLS0_LC3G1D1T_POSITION                         0x1
#define _CLC3GLS0_LC3G1D1T_SIZE                             0x1
#define _CLC3GLS0_LC3G1D1T_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D1T_MASK                             0x2
#define _CLC3GLS0_LC3G1D2N_POSN                             0x2
#define _CLC3GLS0_LC3G1D2N_POSITION                         0x2
#define _CLC3GLS0_LC3G1D2N_SIZE                             0x1
#define _CLC3GLS0_LC3G1D2N_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D2N_MASK                             0x4
#define _CLC3GLS0_LC3G1D2T_POSN                             0x3
#define _CLC3GLS0_LC3G1D2T_POSITION                         0x3
#define _CLC3GLS0_LC3G1D2T_SIZE                             0x1
#define _CLC3GLS0_LC3G1D2T_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D2T_MASK                             0x8
#define _CLC3GLS0_LC3G1D3N_POSN                             0x4
#define _CLC3GLS0_LC3G1D3N_POSITION                         0x4
#define _CLC3GLS0_LC3G1D3N_SIZE                             0x1
#define _CLC3GLS0_LC3G1D3N_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D3N_MASK                             0x10
#define _CLC3GLS0_LC3G1D3T_POSN                             0x5
#define _CLC3GLS0_LC3G1D3T_POSITION                         0x5
#define _CLC3GLS0_LC3G1D3T_SIZE                             0x1
#define _CLC3GLS0_LC3G1D3T_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D3T_MASK                             0x20
#define _CLC3GLS0_LC3G1D4N_POSN                             0x6
#define _CLC3GLS0_LC3G1D4N_POSITION                         0x6
#define _CLC3GLS0_LC3G1D4N_SIZE                             0x1
#define _CLC3GLS0_LC3G1D4N_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D4N_MASK                             0x40
#define _CLC3GLS0_LC3G1D4T_POSN                             0x7
#define _CLC3GLS0_LC3G1D4T_POSITION                         0x7
#define _CLC3GLS0_LC3G1D4T_SIZE                             0x1
#define _CLC3GLS0_LC3G1D4T_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D4T_MASK                             0x80
#define _CLC3GLS0_D1N_POSN                                  0x0
#define _CLC3GLS0_D1N_POSITION                              0x0
#define _CLC3GLS0_D1N_SIZE                                  0x1
#define _CLC3GLS0_D1N_LENGTH                                0x1
#define _CLC3GLS0_D1N_MASK                                  0x1
#define _CLC3GLS0_D1T_POSN                                  0x1
#define _CLC3GLS0_D1T_POSITION                              0x1
#define _CLC3GLS0_D1T_SIZE                                  0x1
#define _CLC3GLS0_D1T_LENGTH                                0x1
#define _CLC3GLS0_D1T_MASK                                  0x2
#define _CLC3GLS0_D2N_POSN                                  0x2
#define _CLC3GLS0_D2N_POSITION                              0x2
#define _CLC3GLS0_D2N_SIZE                                  0x1
#define _CLC3GLS0_D2N_LENGTH                                0x1
#define _CLC3GLS0_D2N_MASK                                  0x4
#define _CLC3GLS0_D2T_POSN                                  0x3
#define _CLC3GLS0_D2T_POSITION                              0x3
#define _CLC3GLS0_D2T_SIZE                                  0x1
#define _CLC3GLS0_D2T_LENGTH                                0x1
#define _CLC3GLS0_D2T_MASK                                  0x8
#define _CLC3GLS0_D3N_POSN                                  0x4
#define _CLC3GLS0_D3N_POSITION                              0x4
#define _CLC3GLS0_D3N_SIZE                                  0x1
#define _CLC3GLS0_D3N_LENGTH                                0x1
#define _CLC3GLS0_D3N_MASK                                  0x10
#define _CLC3GLS0_D3T_POSN                                  0x5
#define _CLC3GLS0_D3T_POSITION                              0x5
#define _CLC3GLS0_D3T_SIZE                                  0x1
#define _CLC3GLS0_D3T_LENGTH                                0x1
#define _CLC3GLS0_D3T_MASK                                  0x20
#define _CLC3GLS0_D4N_POSN                                  0x6
#define _CLC3GLS0_D4N_POSITION                              0x6
#define _CLC3GLS0_D4N_SIZE                                  0x1
#define _CLC3GLS0_D4N_LENGTH                                0x1
#define _CLC3GLS0_D4N_MASK                                  0x40
#define _CLC3GLS0_D4T_POSN                                  0x7
#define _CLC3GLS0_D4T_POSITION                              0x7
#define _CLC3GLS0_D4T_SIZE                                  0x1
#define _CLC3GLS0_D4T_LENGTH                                0x1
#define _CLC3GLS0_D4T_MASK                                  0x80

// Register: CLC3GLS1
#define CLC3GLS1 CLC3GLS1
extern volatile unsigned char           CLC3GLS1            __at(0xF2B);
#ifndef _LIB_BUILD
asm("CLC3GLS1 equ 0F2Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3G2D1N               :1;
        unsigned LC3G2D1T               :1;
        unsigned LC3G2D2N               :1;
        unsigned LC3G2D2T               :1;
        unsigned LC3G2D3N               :1;
        unsigned LC3G2D3T               :1;
        unsigned LC3G2D4N               :1;
        unsigned LC3G2D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC3GLS1bits_t;
extern volatile CLC3GLS1bits_t CLC3GLS1bits __at(0xF2B);
// bitfield macros
#define _CLC3GLS1_LC3G2D1N_POSN                             0x0
#define _CLC3GLS1_LC3G2D1N_POSITION                         0x0
#define _CLC3GLS1_LC3G2D1N_SIZE                             0x1
#define _CLC3GLS1_LC3G2D1N_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D1N_MASK                             0x1
#define _CLC3GLS1_LC3G2D1T_POSN                             0x1
#define _CLC3GLS1_LC3G2D1T_POSITION                         0x1
#define _CLC3GLS1_LC3G2D1T_SIZE                             0x1
#define _CLC3GLS1_LC3G2D1T_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D1T_MASK                             0x2
#define _CLC3GLS1_LC3G2D2N_POSN                             0x2
#define _CLC3GLS1_LC3G2D2N_POSITION                         0x2
#define _CLC3GLS1_LC3G2D2N_SIZE                             0x1
#define _CLC3GLS1_LC3G2D2N_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D2N_MASK                             0x4
#define _CLC3GLS1_LC3G2D2T_POSN                             0x3
#define _CLC3GLS1_LC3G2D2T_POSITION                         0x3
#define _CLC3GLS1_LC3G2D2T_SIZE                             0x1
#define _CLC3GLS1_LC3G2D2T_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D2T_MASK                             0x8
#define _CLC3GLS1_LC3G2D3N_POSN                             0x4
#define _CLC3GLS1_LC3G2D3N_POSITION                         0x4
#define _CLC3GLS1_LC3G2D3N_SIZE                             0x1
#define _CLC3GLS1_LC3G2D3N_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D3N_MASK                             0x10
#define _CLC3GLS1_LC3G2D3T_POSN                             0x5
#define _CLC3GLS1_LC3G2D3T_POSITION                         0x5
#define _CLC3GLS1_LC3G2D3T_SIZE                             0x1
#define _CLC3GLS1_LC3G2D3T_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D3T_MASK                             0x20
#define _CLC3GLS1_LC3G2D4N_POSN                             0x6
#define _CLC3GLS1_LC3G2D4N_POSITION                         0x6
#define _CLC3GLS1_LC3G2D4N_SIZE                             0x1
#define _CLC3GLS1_LC3G2D4N_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D4N_MASK                             0x40
#define _CLC3GLS1_LC3G2D4T_POSN                             0x7
#define _CLC3GLS1_LC3G2D4T_POSITION                         0x7
#define _CLC3GLS1_LC3G2D4T_SIZE                             0x1
#define _CLC3GLS1_LC3G2D4T_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D4T_MASK                             0x80
#define _CLC3GLS1_D1N_POSN                                  0x0
#define _CLC3GLS1_D1N_POSITION                              0x0
#define _CLC3GLS1_D1N_SIZE                                  0x1
#define _CLC3GLS1_D1N_LENGTH                                0x1
#define _CLC3GLS1_D1N_MASK                                  0x1
#define _CLC3GLS1_D1T_POSN                                  0x1
#define _CLC3GLS1_D1T_POSITION                              0x1
#define _CLC3GLS1_D1T_SIZE                                  0x1
#define _CLC3GLS1_D1T_LENGTH                                0x1
#define _CLC3GLS1_D1T_MASK                                  0x2
#define _CLC3GLS1_D2N_POSN                                  0x2
#define _CLC3GLS1_D2N_POSITION                              0x2
#define _CLC3GLS1_D2N_SIZE                                  0x1
#define _CLC3GLS1_D2N_LENGTH                                0x1
#define _CLC3GLS1_D2N_MASK                                  0x4
#define _CLC3GLS1_D2T_POSN                                  0x3
#define _CLC3GLS1_D2T_POSITION                              0x3
#define _CLC3GLS1_D2T_SIZE                                  0x1
#define _CLC3GLS1_D2T_LENGTH                                0x1
#define _CLC3GLS1_D2T_MASK                                  0x8
#define _CLC3GLS1_D3N_POSN                                  0x4
#define _CLC3GLS1_D3N_POSITION                              0x4
#define _CLC3GLS1_D3N_SIZE                                  0x1
#define _CLC3GLS1_D3N_LENGTH                                0x1
#define _CLC3GLS1_D3N_MASK                                  0x10
#define _CLC3GLS1_D3T_POSN                                  0x5
#define _CLC3GLS1_D3T_POSITION                              0x5
#define _CLC3GLS1_D3T_SIZE                                  0x1
#define _CLC3GLS1_D3T_LENGTH                                0x1
#define _CLC3GLS1_D3T_MASK                                  0x20
#define _CLC3GLS1_D4N_POSN                                  0x6
#define _CLC3GLS1_D4N_POSITION                              0x6
#define _CLC3GLS1_D4N_SIZE                                  0x1
#define _CLC3GLS1_D4N_LENGTH                                0x1
#define _CLC3GLS1_D4N_MASK                                  0x40
#define _CLC3GLS1_D4T_POSN                                  0x7
#define _CLC3GLS1_D4T_POSITION                              0x7
#define _CLC3GLS1_D4T_SIZE                                  0x1
#define _CLC3GLS1_D4T_LENGTH                                0x1
#define _CLC3GLS1_D4T_MASK                                  0x80

// Register: CLC3GLS2
#define CLC3GLS2 CLC3GLS2
extern volatile unsigned char           CLC3GLS2            __at(0xF2C);
#ifndef _LIB_BUILD
asm("CLC3GLS2 equ 0F2Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3G3D1N               :1;
        unsigned LC3G3D1T               :1;
        unsigned LC3G3D2N               :1;
        unsigned LC3G3D2T               :1;
        unsigned LC3G3D3N               :1;
        unsigned LC3G3D3T               :1;
        unsigned LC3G3D4N               :1;
        unsigned LC3G3D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC3GLS2bits_t;
extern volatile CLC3GLS2bits_t CLC3GLS2bits __at(0xF2C);
// bitfield macros
#define _CLC3GLS2_LC3G3D1N_POSN                             0x0
#define _CLC3GLS2_LC3G3D1N_POSITION                         0x0
#define _CLC3GLS2_LC3G3D1N_SIZE                             0x1
#define _CLC3GLS2_LC3G3D1N_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D1N_MASK                             0x1
#define _CLC3GLS2_LC3G3D1T_POSN                             0x1
#define _CLC3GLS2_LC3G3D1T_POSITION                         0x1
#define _CLC3GLS2_LC3G3D1T_SIZE                             0x1
#define _CLC3GLS2_LC3G3D1T_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D1T_MASK                             0x2
#define _CLC3GLS2_LC3G3D2N_POSN                             0x2
#define _CLC3GLS2_LC3G3D2N_POSITION                         0x2
#define _CLC3GLS2_LC3G3D2N_SIZE                             0x1
#define _CLC3GLS2_LC3G3D2N_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D2N_MASK                             0x4
#define _CLC3GLS2_LC3G3D2T_POSN                             0x3
#define _CLC3GLS2_LC3G3D2T_POSITION                         0x3
#define _CLC3GLS2_LC3G3D2T_SIZE                             0x1
#define _CLC3GLS2_LC3G3D2T_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D2T_MASK                             0x8
#define _CLC3GLS2_LC3G3D3N_POSN                             0x4
#define _CLC3GLS2_LC3G3D3N_POSITION                         0x4
#define _CLC3GLS2_LC3G3D3N_SIZE                             0x1
#define _CLC3GLS2_LC3G3D3N_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D3N_MASK                             0x10
#define _CLC3GLS2_LC3G3D3T_POSN                             0x5
#define _CLC3GLS2_LC3G3D3T_POSITION                         0x5
#define _CLC3GLS2_LC3G3D3T_SIZE                             0x1
#define _CLC3GLS2_LC3G3D3T_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D3T_MASK                             0x20
#define _CLC3GLS2_LC3G3D4N_POSN                             0x6
#define _CLC3GLS2_LC3G3D4N_POSITION                         0x6
#define _CLC3GLS2_LC3G3D4N_SIZE                             0x1
#define _CLC3GLS2_LC3G3D4N_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D4N_MASK                             0x40
#define _CLC3GLS2_LC3G3D4T_POSN                             0x7
#define _CLC3GLS2_LC3G3D4T_POSITION                         0x7
#define _CLC3GLS2_LC3G3D4T_SIZE                             0x1
#define _CLC3GLS2_LC3G3D4T_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D4T_MASK                             0x80
#define _CLC3GLS2_D1N_POSN                                  0x0
#define _CLC3GLS2_D1N_POSITION                              0x0
#define _CLC3GLS2_D1N_SIZE                                  0x1
#define _CLC3GLS2_D1N_LENGTH                                0x1
#define _CLC3GLS2_D1N_MASK                                  0x1
#define _CLC3GLS2_D1T_POSN                                  0x1
#define _CLC3GLS2_D1T_POSITION                              0x1
#define _CLC3GLS2_D1T_SIZE                                  0x1
#define _CLC3GLS2_D1T_LENGTH                                0x1
#define _CLC3GLS2_D1T_MASK                                  0x2
#define _CLC3GLS2_D2N_POSN                                  0x2
#define _CLC3GLS2_D2N_POSITION                              0x2
#define _CLC3GLS2_D2N_SIZE                                  0x1
#define _CLC3GLS2_D2N_LENGTH                                0x1
#define _CLC3GLS2_D2N_MASK                                  0x4
#define _CLC3GLS2_D2T_POSN                                  0x3
#define _CLC3GLS2_D2T_POSITION                              0x3
#define _CLC3GLS2_D2T_SIZE                                  0x1
#define _CLC3GLS2_D2T_LENGTH                                0x1
#define _CLC3GLS2_D2T_MASK                                  0x8
#define _CLC3GLS2_D3N_POSN                                  0x4
#define _CLC3GLS2_D3N_POSITION                              0x4
#define _CLC3GLS2_D3N_SIZE                                  0x1
#define _CLC3GLS2_D3N_LENGTH                                0x1
#define _CLC3GLS2_D3N_MASK                                  0x10
#define _CLC3GLS2_D3T_POSN                                  0x5
#define _CLC3GLS2_D3T_POSITION                              0x5
#define _CLC3GLS2_D3T_SIZE                                  0x1
#define _CLC3GLS2_D3T_LENGTH                                0x1
#define _CLC3GLS2_D3T_MASK                                  0x20
#define _CLC3GLS2_D4N_POSN                                  0x6
#define _CLC3GLS2_D4N_POSITION                              0x6
#define _CLC3GLS2_D4N_SIZE                                  0x1
#define _CLC3GLS2_D4N_LENGTH                                0x1
#define _CLC3GLS2_D4N_MASK                                  0x40
#define _CLC3GLS2_D4T_POSN                                  0x7
#define _CLC3GLS2_D4T_POSITION                              0x7
#define _CLC3GLS2_D4T_SIZE                                  0x1
#define _CLC3GLS2_D4T_LENGTH                                0x1
#define _CLC3GLS2_D4T_MASK                                  0x80

// Register: CLC3GLS3
#define CLC3GLS3 CLC3GLS3
extern volatile unsigned char           CLC3GLS3            __at(0xF2D);
#ifndef _LIB_BUILD
asm("CLC3GLS3 equ 0F2Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3G4D1N               :1;
        unsigned LC3G4D1T               :1;
        unsigned LC3G4D2N               :1;
        unsigned LC3G4D2T               :1;
        unsigned LC3G4D3N               :1;
        unsigned LC3G4D3T               :1;
        unsigned LC3G4D4N               :1;
        unsigned LC3G4D4T               :1;
    };
    struct {
        unsigned G4D1N                  :1;
        unsigned G4D1T                  :1;
        unsigned G4D2N                  :1;
        unsigned G4D2T                  :1;
        unsigned G4D3N                  :1;
        unsigned G4D3T                  :1;
        unsigned G4D4N                  :1;
        unsigned G4D4T                  :1;
    };
} CLC3GLS3bits_t;
extern volatile CLC3GLS3bits_t CLC3GLS3bits __at(0xF2D);
// bitfield macros
#define _CLC3GLS3_LC3G4D1N_POSN                             0x0
#define _CLC3GLS3_LC3G4D1N_POSITION                         0x0
#define _CLC3GLS3_LC3G4D1N_SIZE                             0x1
#define _CLC3GLS3_LC3G4D1N_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D1N_MASK                             0x1
#define _CLC3GLS3_LC3G4D1T_POSN                             0x1
#define _CLC3GLS3_LC3G4D1T_POSITION                         0x1
#define _CLC3GLS3_LC3G4D1T_SIZE                             0x1
#define _CLC3GLS3_LC3G4D1T_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D1T_MASK                             0x2
#define _CLC3GLS3_LC3G4D2N_POSN                             0x2
#define _CLC3GLS3_LC3G4D2N_POSITION                         0x2
#define _CLC3GLS3_LC3G4D2N_SIZE                             0x1
#define _CLC3GLS3_LC3G4D2N_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D2N_MASK                             0x4
#define _CLC3GLS3_LC3G4D2T_POSN                             0x3
#define _CLC3GLS3_LC3G4D2T_POSITION                         0x3
#define _CLC3GLS3_LC3G4D2T_SIZE                             0x1
#define _CLC3GLS3_LC3G4D2T_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D2T_MASK                             0x8
#define _CLC3GLS3_LC3G4D3N_POSN                             0x4
#define _CLC3GLS3_LC3G4D3N_POSITION                         0x4
#define _CLC3GLS3_LC3G4D3N_SIZE                             0x1
#define _CLC3GLS3_LC3G4D3N_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D3N_MASK                             0x10
#define _CLC3GLS3_LC3G4D3T_POSN                             0x5
#define _CLC3GLS3_LC3G4D3T_POSITION                         0x5
#define _CLC3GLS3_LC3G4D3T_SIZE                             0x1
#define _CLC3GLS3_LC3G4D3T_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D3T_MASK                             0x20
#define _CLC3GLS3_LC3G4D4N_POSN                             0x6
#define _CLC3GLS3_LC3G4D4N_POSITION                         0x6
#define _CLC3GLS3_LC3G4D4N_SIZE                             0x1
#define _CLC3GLS3_LC3G4D4N_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D4N_MASK                             0x40
#define _CLC3GLS3_LC3G4D4T_POSN                             0x7
#define _CLC3GLS3_LC3G4D4T_POSITION                         0x7
#define _CLC3GLS3_LC3G4D4T_SIZE                             0x1
#define _CLC3GLS3_LC3G4D4T_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D4T_MASK                             0x80
#define _CLC3GLS3_G4D1N_POSN                                0x0
#define _CLC3GLS3_G4D1N_POSITION                            0x0
#define _CLC3GLS3_G4D1N_SIZE                                0x1
#define _CLC3GLS3_G4D1N_LENGTH                              0x1
#define _CLC3GLS3_G4D1N_MASK                                0x1
#define _CLC3GLS3_G4D1T_POSN                                0x1
#define _CLC3GLS3_G4D1T_POSITION                            0x1
#define _CLC3GLS3_G4D1T_SIZE                                0x1
#define _CLC3GLS3_G4D1T_LENGTH                              0x1
#define _CLC3GLS3_G4D1T_MASK                                0x2
#define _CLC3GLS3_G4D2N_POSN                                0x2
#define _CLC3GLS3_G4D2N_POSITION                            0x2
#define _CLC3GLS3_G4D2N_SIZE                                0x1
#define _CLC3GLS3_G4D2N_LENGTH                              0x1
#define _CLC3GLS3_G4D2N_MASK                                0x4
#define _CLC3GLS3_G4D2T_POSN                                0x3
#define _CLC3GLS3_G4D2T_POSITION                            0x3
#define _CLC3GLS3_G4D2T_SIZE                                0x1
#define _CLC3GLS3_G4D2T_LENGTH                              0x1
#define _CLC3GLS3_G4D2T_MASK                                0x8
#define _CLC3GLS3_G4D3N_POSN                                0x4
#define _CLC3GLS3_G4D3N_POSITION                            0x4
#define _CLC3GLS3_G4D3N_SIZE                                0x1
#define _CLC3GLS3_G4D3N_LENGTH                              0x1
#define _CLC3GLS3_G4D3N_MASK                                0x10
#define _CLC3GLS3_G4D3T_POSN                                0x5
#define _CLC3GLS3_G4D3T_POSITION                            0x5
#define _CLC3GLS3_G4D3T_SIZE                                0x1
#define _CLC3GLS3_G4D3T_LENGTH                              0x1
#define _CLC3GLS3_G4D3T_MASK                                0x20
#define _CLC3GLS3_G4D4N_POSN                                0x6
#define _CLC3GLS3_G4D4N_POSITION                            0x6
#define _CLC3GLS3_G4D4N_SIZE                                0x1
#define _CLC3GLS3_G4D4N_LENGTH                              0x1
#define _CLC3GLS3_G4D4N_MASK                                0x40
#define _CLC3GLS3_G4D4T_POSN                                0x7
#define _CLC3GLS3_G4D4T_POSITION                            0x7
#define _CLC3GLS3_G4D4T_SIZE                                0x1
#define _CLC3GLS3_G4D4T_LENGTH                              0x1
#define _CLC3GLS3_G4D4T_MASK                                0x80

// Register: CLC4CON
#define CLC4CON CLC4CON
extern volatile unsigned char           CLC4CON             __at(0xF2E);
#ifndef _LIB_BUILD
asm("CLC4CON equ 0F2Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4MODE                :3;
        unsigned LC4INTN                :1;
        unsigned LC4INTP                :1;
        unsigned LC4OUT                 :1;
        unsigned                        :1;
        unsigned LC4EN                  :1;
    };
    struct {
        unsigned LC4MODE0               :1;
        unsigned LC4MODE1               :1;
        unsigned LC4MODE2               :1;
    };
    struct {
        unsigned MODE                   :3;
        unsigned INTN                   :1;
        unsigned INTP                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
    };
} CLC4CONbits_t;
extern volatile CLC4CONbits_t CLC4CONbits __at(0xF2E);
// bitfield macros
#define _CLC4CON_LC4MODE_POSN                               0x0
#define _CLC4CON_LC4MODE_POSITION                           0x0
#define _CLC4CON_LC4MODE_SIZE                               0x3
#define _CLC4CON_LC4MODE_LENGTH                             0x3
#define _CLC4CON_LC4MODE_MASK                               0x7
#define _CLC4CON_LC4INTN_POSN                               0x3
#define _CLC4CON_LC4INTN_POSITION                           0x3
#define _CLC4CON_LC4INTN_SIZE                               0x1
#define _CLC4CON_LC4INTN_LENGTH                             0x1
#define _CLC4CON_LC4INTN_MASK                               0x8
#define _CLC4CON_LC4INTP_POSN                               0x4
#define _CLC4CON_LC4INTP_POSITION                           0x4
#define _CLC4CON_LC4INTP_SIZE                               0x1
#define _CLC4CON_LC4INTP_LENGTH                             0x1
#define _CLC4CON_LC4INTP_MASK                               0x10
#define _CLC4CON_LC4OUT_POSN                                0x5
#define _CLC4CON_LC4OUT_POSITION                            0x5
#define _CLC4CON_LC4OUT_SIZE                                0x1
#define _CLC4CON_LC4OUT_LENGTH                              0x1
#define _CLC4CON_LC4OUT_MASK                                0x20
#define _CLC4CON_LC4EN_POSN                                 0x7
#define _CLC4CON_LC4EN_POSITION                             0x7
#define _CLC4CON_LC4EN_SIZE                                 0x1
#define _CLC4CON_LC4EN_LENGTH                               0x1
#define _CLC4CON_LC4EN_MASK                                 0x80
#define _CLC4CON_LC4MODE0_POSN                              0x0
#define _CLC4CON_LC4MODE0_POSITION                          0x0
#define _CLC4CON_LC4MODE0_SIZE                              0x1
#define _CLC4CON_LC4MODE0_LENGTH                            0x1
#define _CLC4CON_LC4MODE0_MASK                              0x1
#define _CLC4CON_LC4MODE1_POSN                              0x1
#define _CLC4CON_LC4MODE1_POSITION                          0x1
#define _CLC4CON_LC4MODE1_SIZE                              0x1
#define _CLC4CON_LC4MODE1_LENGTH                            0x1
#define _CLC4CON_LC4MODE1_MASK                              0x2
#define _CLC4CON_LC4MODE2_POSN                              0x2
#define _CLC4CON_LC4MODE2_POSITION                          0x2
#define _CLC4CON_LC4MODE2_SIZE                              0x1
#define _CLC4CON_LC4MODE2_LENGTH                            0x1
#define _CLC4CON_LC4MODE2_MASK                              0x4
#define _CLC4CON_MODE_POSN                                  0x0
#define _CLC4CON_MODE_POSITION                              0x0
#define _CLC4CON_MODE_SIZE                                  0x3
#define _CLC4CON_MODE_LENGTH                                0x3
#define _CLC4CON_MODE_MASK                                  0x7
#define _CLC4CON_INTN_POSN                                  0x3
#define _CLC4CON_INTN_POSITION                              0x3
#define _CLC4CON_INTN_SIZE                                  0x1
#define _CLC4CON_INTN_LENGTH                                0x1
#define _CLC4CON_INTN_MASK                                  0x8
#define _CLC4CON_INTP_POSN                                  0x4
#define _CLC4CON_INTP_POSITION                              0x4
#define _CLC4CON_INTP_SIZE                                  0x1
#define _CLC4CON_INTP_LENGTH                                0x1
#define _CLC4CON_INTP_MASK                                  0x10
#define _CLC4CON_OUT_POSN                                   0x5
#define _CLC4CON_OUT_POSITION                               0x5
#define _CLC4CON_OUT_SIZE                                   0x1
#define _CLC4CON_OUT_LENGTH                                 0x1
#define _CLC4CON_OUT_MASK                                   0x20
#define _CLC4CON_EN_POSN                                    0x7
#define _CLC4CON_EN_POSITION                                0x7
#define _CLC4CON_EN_SIZE                                    0x1
#define _CLC4CON_EN_LENGTH                                  0x1
#define _CLC4CON_EN_MASK                                    0x80
#define _CLC4CON_MODE0_POSN                                 0x0
#define _CLC4CON_MODE0_POSITION                             0x0
#define _CLC4CON_MODE0_SIZE                                 0x1
#define _CLC4CON_MODE0_LENGTH                               0x1
#define _CLC4CON_MODE0_MASK                                 0x1
#define _CLC4CON_MODE1_POSN                                 0x1
#define _CLC4CON_MODE1_POSITION                             0x1
#define _CLC4CON_MODE1_SIZE                                 0x1
#define _CLC4CON_MODE1_LENGTH                               0x1
#define _CLC4CON_MODE1_MASK                                 0x2
#define _CLC4CON_MODE2_POSN                                 0x2
#define _CLC4CON_MODE2_POSITION                             0x2
#define _CLC4CON_MODE2_SIZE                                 0x1
#define _CLC4CON_MODE2_LENGTH                               0x1
#define _CLC4CON_MODE2_MASK                                 0x4

// Register: CLC4POL
#define CLC4POL CLC4POL
extern volatile unsigned char           CLC4POL             __at(0xF2F);
#ifndef _LIB_BUILD
asm("CLC4POL equ 0F2Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4G1POL               :1;
        unsigned LC4G2POL               :1;
        unsigned LC4G3POL               :1;
        unsigned LC4G4POL               :1;
        unsigned                        :3;
        unsigned LC4POL                 :1;
    };
    struct {
        unsigned G1POL                  :1;
        unsigned G2POL                  :1;
        unsigned G3POL                  :1;
        unsigned G4POL                  :1;
        unsigned                        :3;
        unsigned POL                    :1;
    };
} CLC4POLbits_t;
extern volatile CLC4POLbits_t CLC4POLbits __at(0xF2F);
// bitfield macros
#define _CLC4POL_LC4G1POL_POSN                              0x0
#define _CLC4POL_LC4G1POL_POSITION                          0x0
#define _CLC4POL_LC4G1POL_SIZE                              0x1
#define _CLC4POL_LC4G1POL_LENGTH                            0x1
#define _CLC4POL_LC4G1POL_MASK                              0x1
#define _CLC4POL_LC4G2POL_POSN                              0x1
#define _CLC4POL_LC4G2POL_POSITION                          0x1
#define _CLC4POL_LC4G2POL_SIZE                              0x1
#define _CLC4POL_LC4G2POL_LENGTH                            0x1
#define _CLC4POL_LC4G2POL_MASK                              0x2
#define _CLC4POL_LC4G3POL_POSN                              0x2
#define _CLC4POL_LC4G3POL_POSITION                          0x2
#define _CLC4POL_LC4G3POL_SIZE                              0x1
#define _CLC4POL_LC4G3POL_LENGTH                            0x1
#define _CLC4POL_LC4G3POL_MASK                              0x4
#define _CLC4POL_LC4G4POL_POSN                              0x3
#define _CLC4POL_LC4G4POL_POSITION                          0x3
#define _CLC4POL_LC4G4POL_SIZE                              0x1
#define _CLC4POL_LC4G4POL_LENGTH                            0x1
#define _CLC4POL_LC4G4POL_MASK                              0x8
#define _CLC4POL_LC4POL_POSN                                0x7
#define _CLC4POL_LC4POL_POSITION                            0x7
#define _CLC4POL_LC4POL_SIZE                                0x1
#define _CLC4POL_LC4POL_LENGTH                              0x1
#define _CLC4POL_LC4POL_MASK                                0x80
#define _CLC4POL_G1POL_POSN                                 0x0
#define _CLC4POL_G1POL_POSITION                             0x0
#define _CLC4POL_G1POL_SIZE                                 0x1
#define _CLC4POL_G1POL_LENGTH                               0x1
#define _CLC4POL_G1POL_MASK                                 0x1
#define _CLC4POL_G2POL_POSN                                 0x1
#define _CLC4POL_G2POL_POSITION                             0x1
#define _CLC4POL_G2POL_SIZE                                 0x1
#define _CLC4POL_G2POL_LENGTH                               0x1
#define _CLC4POL_G2POL_MASK                                 0x2
#define _CLC4POL_G3POL_POSN                                 0x2
#define _CLC4POL_G3POL_POSITION                             0x2
#define _CLC4POL_G3POL_SIZE                                 0x1
#define _CLC4POL_G3POL_LENGTH                               0x1
#define _CLC4POL_G3POL_MASK                                 0x4
#define _CLC4POL_G4POL_POSN                                 0x3
#define _CLC4POL_G4POL_POSITION                             0x3
#define _CLC4POL_G4POL_SIZE                                 0x1
#define _CLC4POL_G4POL_LENGTH                               0x1
#define _CLC4POL_G4POL_MASK                                 0x8
#define _CLC4POL_POL_POSN                                   0x7
#define _CLC4POL_POL_POSITION                               0x7
#define _CLC4POL_POL_SIZE                                   0x1
#define _CLC4POL_POL_LENGTH                                 0x1
#define _CLC4POL_POL_MASK                                   0x80

// Register: CLC4SEL0
#define CLC4SEL0 CLC4SEL0
extern volatile unsigned char           CLC4SEL0            __at(0xF30);
#ifndef _LIB_BUILD
asm("CLC4SEL0 equ 0F30h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4D1S0                :1;
        unsigned LC4D1S1                :1;
        unsigned LC4D1S2                :1;
        unsigned LC4D1S3                :1;
        unsigned LC4D1S4                :1;
        unsigned LC4D1S5                :1;
    };
    struct {
        unsigned LC4D1S                 :8;
    };
    struct {
        unsigned D1S                    :8;
    };
    struct {
        unsigned D1S0                   :1;
        unsigned D1S1                   :1;
        unsigned D1S2                   :1;
        unsigned D1S3                   :1;
        unsigned D1S4                   :1;
        unsigned D1S5                   :1;
    };
} CLC4SEL0bits_t;
extern volatile CLC4SEL0bits_t CLC4SEL0bits __at(0xF30);
// bitfield macros
#define _CLC4SEL0_LC4D1S0_POSN                              0x0
#define _CLC4SEL0_LC4D1S0_POSITION                          0x0
#define _CLC4SEL0_LC4D1S0_SIZE                              0x1
#define _CLC4SEL0_LC4D1S0_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S0_MASK                              0x1
#define _CLC4SEL0_LC4D1S1_POSN                              0x1
#define _CLC4SEL0_LC4D1S1_POSITION                          0x1
#define _CLC4SEL0_LC4D1S1_SIZE                              0x1
#define _CLC4SEL0_LC4D1S1_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S1_MASK                              0x2
#define _CLC4SEL0_LC4D1S2_POSN                              0x2
#define _CLC4SEL0_LC4D1S2_POSITION                          0x2
#define _CLC4SEL0_LC4D1S2_SIZE                              0x1
#define _CLC4SEL0_LC4D1S2_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S2_MASK                              0x4
#define _CLC4SEL0_LC4D1S3_POSN                              0x3
#define _CLC4SEL0_LC4D1S3_POSITION                          0x3
#define _CLC4SEL0_LC4D1S3_SIZE                              0x1
#define _CLC4SEL0_LC4D1S3_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S3_MASK                              0x8
#define _CLC4SEL0_LC4D1S4_POSN                              0x4
#define _CLC4SEL0_LC4D1S4_POSITION                          0x4
#define _CLC4SEL0_LC4D1S4_SIZE                              0x1
#define _CLC4SEL0_LC4D1S4_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S4_MASK                              0x10
#define _CLC4SEL0_LC4D1S5_POSN                              0x5
#define _CLC4SEL0_LC4D1S5_POSITION                          0x5
#define _CLC4SEL0_LC4D1S5_SIZE                              0x1
#define _CLC4SEL0_LC4D1S5_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S5_MASK                              0x20
#define _CLC4SEL0_LC4D1S_POSN                               0x0
#define _CLC4SEL0_LC4D1S_POSITION                           0x0
#define _CLC4SEL0_LC4D1S_SIZE                               0x8
#define _CLC4SEL0_LC4D1S_LENGTH                             0x8
#define _CLC4SEL0_LC4D1S_MASK                               0xFF
#define _CLC4SEL0_D1S_POSN                                  0x0
#define _CLC4SEL0_D1S_POSITION                              0x0
#define _CLC4SEL0_D1S_SIZE                                  0x8
#define _CLC4SEL0_D1S_LENGTH                                0x8
#define _CLC4SEL0_D1S_MASK                                  0xFF
#define _CLC4SEL0_D1S0_POSN                                 0x0
#define _CLC4SEL0_D1S0_POSITION                             0x0
#define _CLC4SEL0_D1S0_SIZE                                 0x1
#define _CLC4SEL0_D1S0_LENGTH                               0x1
#define _CLC4SEL0_D1S0_MASK                                 0x1
#define _CLC4SEL0_D1S1_POSN                                 0x1
#define _CLC4SEL0_D1S1_POSITION                             0x1
#define _CLC4SEL0_D1S1_SIZE                                 0x1
#define _CLC4SEL0_D1S1_LENGTH                               0x1
#define _CLC4SEL0_D1S1_MASK                                 0x2
#define _CLC4SEL0_D1S2_POSN                                 0x2
#define _CLC4SEL0_D1S2_POSITION                             0x2
#define _CLC4SEL0_D1S2_SIZE                                 0x1
#define _CLC4SEL0_D1S2_LENGTH                               0x1
#define _CLC4SEL0_D1S2_MASK                                 0x4
#define _CLC4SEL0_D1S3_POSN                                 0x3
#define _CLC4SEL0_D1S3_POSITION                             0x3
#define _CLC4SEL0_D1S3_SIZE                                 0x1
#define _CLC4SEL0_D1S3_LENGTH                               0x1
#define _CLC4SEL0_D1S3_MASK                                 0x8
#define _CLC4SEL0_D1S4_POSN                                 0x4
#define _CLC4SEL0_D1S4_POSITION                             0x4
#define _CLC4SEL0_D1S4_SIZE                                 0x1
#define _CLC4SEL0_D1S4_LENGTH                               0x1
#define _CLC4SEL0_D1S4_MASK                                 0x10
#define _CLC4SEL0_D1S5_POSN                                 0x5
#define _CLC4SEL0_D1S5_POSITION                             0x5
#define _CLC4SEL0_D1S5_SIZE                                 0x1
#define _CLC4SEL0_D1S5_LENGTH                               0x1
#define _CLC4SEL0_D1S5_MASK                                 0x20

// Register: CLC4SEL1
#define CLC4SEL1 CLC4SEL1
extern volatile unsigned char           CLC4SEL1            __at(0xF31);
#ifndef _LIB_BUILD
asm("CLC4SEL1 equ 0F31h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4D2S0                :1;
        unsigned LC4D2S1                :1;
        unsigned LC4D2S2                :1;
        unsigned LC4D2S3                :1;
        unsigned LC4D2S4                :1;
        unsigned LC4D2S5                :1;
    };
    struct {
        unsigned LC4D2S                 :8;
    };
    struct {
        unsigned D2S                    :8;
    };
    struct {
        unsigned D2S0                   :1;
        unsigned D2S1                   :1;
        unsigned D2S2                   :1;
        unsigned D2S3                   :1;
        unsigned D2S4                   :1;
        unsigned D2S5                   :1;
    };
} CLC4SEL1bits_t;
extern volatile CLC4SEL1bits_t CLC4SEL1bits __at(0xF31);
// bitfield macros
#define _CLC4SEL1_LC4D2S0_POSN                              0x0
#define _CLC4SEL1_LC4D2S0_POSITION                          0x0
#define _CLC4SEL1_LC4D2S0_SIZE                              0x1
#define _CLC4SEL1_LC4D2S0_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S0_MASK                              0x1
#define _CLC4SEL1_LC4D2S1_POSN                              0x1
#define _CLC4SEL1_LC4D2S1_POSITION                          0x1
#define _CLC4SEL1_LC4D2S1_SIZE                              0x1
#define _CLC4SEL1_LC4D2S1_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S1_MASK                              0x2
#define _CLC4SEL1_LC4D2S2_POSN                              0x2
#define _CLC4SEL1_LC4D2S2_POSITION                          0x2
#define _CLC4SEL1_LC4D2S2_SIZE                              0x1
#define _CLC4SEL1_LC4D2S2_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S2_MASK                              0x4
#define _CLC4SEL1_LC4D2S3_POSN                              0x3
#define _CLC4SEL1_LC4D2S3_POSITION                          0x3
#define _CLC4SEL1_LC4D2S3_SIZE                              0x1
#define _CLC4SEL1_LC4D2S3_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S3_MASK                              0x8
#define _CLC4SEL1_LC4D2S4_POSN                              0x4
#define _CLC4SEL1_LC4D2S4_POSITION                          0x4
#define _CLC4SEL1_LC4D2S4_SIZE                              0x1
#define _CLC4SEL1_LC4D2S4_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S4_MASK                              0x10
#define _CLC4SEL1_LC4D2S5_POSN                              0x5
#define _CLC4SEL1_LC4D2S5_POSITION                          0x5
#define _CLC4SEL1_LC4D2S5_SIZE                              0x1
#define _CLC4SEL1_LC4D2S5_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S5_MASK                              0x20
#define _CLC4SEL1_LC4D2S_POSN                               0x0
#define _CLC4SEL1_LC4D2S_POSITION                           0x0
#define _CLC4SEL1_LC4D2S_SIZE                               0x8
#define _CLC4SEL1_LC4D2S_LENGTH                             0x8
#define _CLC4SEL1_LC4D2S_MASK                               0xFF
#define _CLC4SEL1_D2S_POSN                                  0x0
#define _CLC4SEL1_D2S_POSITION                              0x0
#define _CLC4SEL1_D2S_SIZE                                  0x8
#define _CLC4SEL1_D2S_LENGTH                                0x8
#define _CLC4SEL1_D2S_MASK                                  0xFF
#define _CLC4SEL1_D2S0_POSN                                 0x0
#define _CLC4SEL1_D2S0_POSITION                             0x0
#define _CLC4SEL1_D2S0_SIZE                                 0x1
#define _CLC4SEL1_D2S0_LENGTH                               0x1
#define _CLC4SEL1_D2S0_MASK                                 0x1
#define _CLC4SEL1_D2S1_POSN                                 0x1
#define _CLC4SEL1_D2S1_POSITION                             0x1
#define _CLC4SEL1_D2S1_SIZE                                 0x1
#define _CLC4SEL1_D2S1_LENGTH                               0x1
#define _CLC4SEL1_D2S1_MASK                                 0x2
#define _CLC4SEL1_D2S2_POSN                                 0x2
#define _CLC4SEL1_D2S2_POSITION                             0x2
#define _CLC4SEL1_D2S2_SIZE                                 0x1
#define _CLC4SEL1_D2S2_LENGTH                               0x1
#define _CLC4SEL1_D2S2_MASK                                 0x4
#define _CLC4SEL1_D2S3_POSN                                 0x3
#define _CLC4SEL1_D2S3_POSITION                             0x3
#define _CLC4SEL1_D2S3_SIZE                                 0x1
#define _CLC4SEL1_D2S3_LENGTH                               0x1
#define _CLC4SEL1_D2S3_MASK                                 0x8
#define _CLC4SEL1_D2S4_POSN                                 0x4
#define _CLC4SEL1_D2S4_POSITION                             0x4
#define _CLC4SEL1_D2S4_SIZE                                 0x1
#define _CLC4SEL1_D2S4_LENGTH                               0x1
#define _CLC4SEL1_D2S4_MASK                                 0x10
#define _CLC4SEL1_D2S5_POSN                                 0x5
#define _CLC4SEL1_D2S5_POSITION                             0x5
#define _CLC4SEL1_D2S5_SIZE                                 0x1
#define _CLC4SEL1_D2S5_LENGTH                               0x1
#define _CLC4SEL1_D2S5_MASK                                 0x20

// Register: CLC4SEL2
#define CLC4SEL2 CLC4SEL2
extern volatile unsigned char           CLC4SEL2            __at(0xF32);
#ifndef _LIB_BUILD
asm("CLC4SEL2 equ 0F32h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4D3S0                :1;
        unsigned LC4D3S1                :1;
        unsigned LC4D3S2                :1;
        unsigned LC4D3S3                :1;
        unsigned LC4D3S4                :1;
        unsigned LC4D3S5                :1;
    };
    struct {
        unsigned LC4D3S                 :8;
    };
    struct {
        unsigned D3S                    :8;
    };
    struct {
        unsigned D3S0                   :1;
        unsigned D3S1                   :1;
        unsigned D3S2                   :1;
        unsigned D3S3                   :1;
        unsigned D3S4                   :1;
        unsigned D3S5                   :1;
    };
} CLC4SEL2bits_t;
extern volatile CLC4SEL2bits_t CLC4SEL2bits __at(0xF32);
// bitfield macros
#define _CLC4SEL2_LC4D3S0_POSN                              0x0
#define _CLC4SEL2_LC4D3S0_POSITION                          0x0
#define _CLC4SEL2_LC4D3S0_SIZE                              0x1
#define _CLC4SEL2_LC4D3S0_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S0_MASK                              0x1
#define _CLC4SEL2_LC4D3S1_POSN                              0x1
#define _CLC4SEL2_LC4D3S1_POSITION                          0x1
#define _CLC4SEL2_LC4D3S1_SIZE                              0x1
#define _CLC4SEL2_LC4D3S1_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S1_MASK                              0x2
#define _CLC4SEL2_LC4D3S2_POSN                              0x2
#define _CLC4SEL2_LC4D3S2_POSITION                          0x2
#define _CLC4SEL2_LC4D3S2_SIZE                              0x1
#define _CLC4SEL2_LC4D3S2_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S2_MASK                              0x4
#define _CLC4SEL2_LC4D3S3_POSN                              0x3
#define _CLC4SEL2_LC4D3S3_POSITION                          0x3
#define _CLC4SEL2_LC4D3S3_SIZE                              0x1
#define _CLC4SEL2_LC4D3S3_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S3_MASK                              0x8
#define _CLC4SEL2_LC4D3S4_POSN                              0x4
#define _CLC4SEL2_LC4D3S4_POSITION                          0x4
#define _CLC4SEL2_LC4D3S4_SIZE                              0x1
#define _CLC4SEL2_LC4D3S4_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S4_MASK                              0x10
#define _CLC4SEL2_LC4D3S5_POSN                              0x5
#define _CLC4SEL2_LC4D3S5_POSITION                          0x5
#define _CLC4SEL2_LC4D3S5_SIZE                              0x1
#define _CLC4SEL2_LC4D3S5_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S5_MASK                              0x20
#define _CLC4SEL2_LC4D3S_POSN                               0x0
#define _CLC4SEL2_LC4D3S_POSITION                           0x0
#define _CLC4SEL2_LC4D3S_SIZE                               0x8
#define _CLC4SEL2_LC4D3S_LENGTH                             0x8
#define _CLC4SEL2_LC4D3S_MASK                               0xFF
#define _CLC4SEL2_D3S_POSN                                  0x0
#define _CLC4SEL2_D3S_POSITION                              0x0
#define _CLC4SEL2_D3S_SIZE                                  0x8
#define _CLC4SEL2_D3S_LENGTH                                0x8
#define _CLC4SEL2_D3S_MASK                                  0xFF
#define _CLC4SEL2_D3S0_POSN                                 0x0
#define _CLC4SEL2_D3S0_POSITION                             0x0
#define _CLC4SEL2_D3S0_SIZE                                 0x1
#define _CLC4SEL2_D3S0_LENGTH                               0x1
#define _CLC4SEL2_D3S0_MASK                                 0x1
#define _CLC4SEL2_D3S1_POSN                                 0x1
#define _CLC4SEL2_D3S1_POSITION                             0x1
#define _CLC4SEL2_D3S1_SIZE                                 0x1
#define _CLC4SEL2_D3S1_LENGTH                               0x1
#define _CLC4SEL2_D3S1_MASK                                 0x2
#define _CLC4SEL2_D3S2_POSN                                 0x2
#define _CLC4SEL2_D3S2_POSITION                             0x2
#define _CLC4SEL2_D3S2_SIZE                                 0x1
#define _CLC4SEL2_D3S2_LENGTH                               0x1
#define _CLC4SEL2_D3S2_MASK                                 0x4
#define _CLC4SEL2_D3S3_POSN                                 0x3
#define _CLC4SEL2_D3S3_POSITION                             0x3
#define _CLC4SEL2_D3S3_SIZE                                 0x1
#define _CLC4SEL2_D3S3_LENGTH                               0x1
#define _CLC4SEL2_D3S3_MASK                                 0x8
#define _CLC4SEL2_D3S4_POSN                                 0x4
#define _CLC4SEL2_D3S4_POSITION                             0x4
#define _CLC4SEL2_D3S4_SIZE                                 0x1
#define _CLC4SEL2_D3S4_LENGTH                               0x1
#define _CLC4SEL2_D3S4_MASK                                 0x10
#define _CLC4SEL2_D3S5_POSN                                 0x5
#define _CLC4SEL2_D3S5_POSITION                             0x5
#define _CLC4SEL2_D3S5_SIZE                                 0x1
#define _CLC4SEL2_D3S5_LENGTH                               0x1
#define _CLC4SEL2_D3S5_MASK                                 0x20

// Register: CLC4SEL3
#define CLC4SEL3 CLC4SEL3
extern volatile unsigned char           CLC4SEL3            __at(0xF33);
#ifndef _LIB_BUILD
asm("CLC4SEL3 equ 0F33h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4D4S0                :1;
        unsigned LC4D4S1                :1;
        unsigned LC4D4S2                :1;
        unsigned LC4D4S3                :1;
        unsigned LC4D4S4                :1;
        unsigned LC4D4S5                :1;
    };
    struct {
        unsigned LC4D4S                 :8;
    };
    struct {
        unsigned D4S                    :8;
    };
    struct {
        unsigned D4S0                   :1;
        unsigned D4S1                   :1;
        unsigned D4S2                   :1;
        unsigned D4S3                   :1;
        unsigned D4S4                   :1;
        unsigned D4S5                   :1;
    };
} CLC4SEL3bits_t;
extern volatile CLC4SEL3bits_t CLC4SEL3bits __at(0xF33);
// bitfield macros
#define _CLC4SEL3_LC4D4S0_POSN                              0x0
#define _CLC4SEL3_LC4D4S0_POSITION                          0x0
#define _CLC4SEL3_LC4D4S0_SIZE                              0x1
#define _CLC4SEL3_LC4D4S0_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S0_MASK                              0x1
#define _CLC4SEL3_LC4D4S1_POSN                              0x1
#define _CLC4SEL3_LC4D4S1_POSITION                          0x1
#define _CLC4SEL3_LC4D4S1_SIZE                              0x1
#define _CLC4SEL3_LC4D4S1_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S1_MASK                              0x2
#define _CLC4SEL3_LC4D4S2_POSN                              0x2
#define _CLC4SEL3_LC4D4S2_POSITION                          0x2
#define _CLC4SEL3_LC4D4S2_SIZE                              0x1
#define _CLC4SEL3_LC4D4S2_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S2_MASK                              0x4
#define _CLC4SEL3_LC4D4S3_POSN                              0x3
#define _CLC4SEL3_LC4D4S3_POSITION                          0x3
#define _CLC4SEL3_LC4D4S3_SIZE                              0x1
#define _CLC4SEL3_LC4D4S3_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S3_MASK                              0x8
#define _CLC4SEL3_LC4D4S4_POSN                              0x4
#define _CLC4SEL3_LC4D4S4_POSITION                          0x4
#define _CLC4SEL3_LC4D4S4_SIZE                              0x1
#define _CLC4SEL3_LC4D4S4_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S4_MASK                              0x10
#define _CLC4SEL3_LC4D4S5_POSN                              0x5
#define _CLC4SEL3_LC4D4S5_POSITION                          0x5
#define _CLC4SEL3_LC4D4S5_SIZE                              0x1
#define _CLC4SEL3_LC4D4S5_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S5_MASK                              0x20
#define _CLC4SEL3_LC4D4S_POSN                               0x0
#define _CLC4SEL3_LC4D4S_POSITION                           0x0
#define _CLC4SEL3_LC4D4S_SIZE                               0x8
#define _CLC4SEL3_LC4D4S_LENGTH                             0x8
#define _CLC4SEL3_LC4D4S_MASK                               0xFF
#define _CLC4SEL3_D4S_POSN                                  0x0
#define _CLC4SEL3_D4S_POSITION                              0x0
#define _CLC4SEL3_D4S_SIZE                                  0x8
#define _CLC4SEL3_D4S_LENGTH                                0x8
#define _CLC4SEL3_D4S_MASK                                  0xFF
#define _CLC4SEL3_D4S0_POSN                                 0x0
#define _CLC4SEL3_D4S0_POSITION                             0x0
#define _CLC4SEL3_D4S0_SIZE                                 0x1
#define _CLC4SEL3_D4S0_LENGTH                               0x1
#define _CLC4SEL3_D4S0_MASK                                 0x1
#define _CLC4SEL3_D4S1_POSN                                 0x1
#define _CLC4SEL3_D4S1_POSITION                             0x1
#define _CLC4SEL3_D4S1_SIZE                                 0x1
#define _CLC4SEL3_D4S1_LENGTH                               0x1
#define _CLC4SEL3_D4S1_MASK                                 0x2
#define _CLC4SEL3_D4S2_POSN                                 0x2
#define _CLC4SEL3_D4S2_POSITION                             0x2
#define _CLC4SEL3_D4S2_SIZE                                 0x1
#define _CLC4SEL3_D4S2_LENGTH                               0x1
#define _CLC4SEL3_D4S2_MASK                                 0x4
#define _CLC4SEL3_D4S3_POSN                                 0x3
#define _CLC4SEL3_D4S3_POSITION                             0x3
#define _CLC4SEL3_D4S3_SIZE                                 0x1
#define _CLC4SEL3_D4S3_LENGTH                               0x1
#define _CLC4SEL3_D4S3_MASK                                 0x8
#define _CLC4SEL3_D4S4_POSN                                 0x4
#define _CLC4SEL3_D4S4_POSITION                             0x4
#define _CLC4SEL3_D4S4_SIZE                                 0x1
#define _CLC4SEL3_D4S4_LENGTH                               0x1
#define _CLC4SEL3_D4S4_MASK                                 0x10
#define _CLC4SEL3_D4S5_POSN                                 0x5
#define _CLC4SEL3_D4S5_POSITION                             0x5
#define _CLC4SEL3_D4S5_SIZE                                 0x1
#define _CLC4SEL3_D4S5_LENGTH                               0x1
#define _CLC4SEL3_D4S5_MASK                                 0x20

// Register: CLC4GLS0
#define CLC4GLS0 CLC4GLS0
extern volatile unsigned char           CLC4GLS0            __at(0xF34);
#ifndef _LIB_BUILD
asm("CLC4GLS0 equ 0F34h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4G1D1N               :1;
        unsigned LC4G1D1T               :1;
        unsigned LC4G1D2N               :1;
        unsigned LC4G1D2T               :1;
        unsigned LC4G1D3N               :1;
        unsigned LC4G1D3T               :1;
        unsigned LC4G1D4N               :1;
        unsigned LC4G1D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC4GLS0bits_t;
extern volatile CLC4GLS0bits_t CLC4GLS0bits __at(0xF34);
// bitfield macros
#define _CLC4GLS0_LC4G1D1N_POSN                             0x0
#define _CLC4GLS0_LC4G1D1N_POSITION                         0x0
#define _CLC4GLS0_LC4G1D1N_SIZE                             0x1
#define _CLC4GLS0_LC4G1D1N_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D1N_MASK                             0x1
#define _CLC4GLS0_LC4G1D1T_POSN                             0x1
#define _CLC4GLS0_LC4G1D1T_POSITION                         0x1
#define _CLC4GLS0_LC4G1D1T_SIZE                             0x1
#define _CLC4GLS0_LC4G1D1T_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D1T_MASK                             0x2
#define _CLC4GLS0_LC4G1D2N_POSN                             0x2
#define _CLC4GLS0_LC4G1D2N_POSITION                         0x2
#define _CLC4GLS0_LC4G1D2N_SIZE                             0x1
#define _CLC4GLS0_LC4G1D2N_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D2N_MASK                             0x4
#define _CLC4GLS0_LC4G1D2T_POSN                             0x3
#define _CLC4GLS0_LC4G1D2T_POSITION                         0x3
#define _CLC4GLS0_LC4G1D2T_SIZE                             0x1
#define _CLC4GLS0_LC4G1D2T_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D2T_MASK                             0x8
#define _CLC4GLS0_LC4G1D3N_POSN                             0x4
#define _CLC4GLS0_LC4G1D3N_POSITION                         0x4
#define _CLC4GLS0_LC4G1D3N_SIZE                             0x1
#define _CLC4GLS0_LC4G1D3N_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D3N_MASK                             0x10
#define _CLC4GLS0_LC4G1D3T_POSN                             0x5
#define _CLC4GLS0_LC4G1D3T_POSITION                         0x5
#define _CLC4GLS0_LC4G1D3T_SIZE                             0x1
#define _CLC4GLS0_LC4G1D3T_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D3T_MASK                             0x20
#define _CLC4GLS0_LC4G1D4N_POSN                             0x6
#define _CLC4GLS0_LC4G1D4N_POSITION                         0x6
#define _CLC4GLS0_LC4G1D4N_SIZE                             0x1
#define _CLC4GLS0_LC4G1D4N_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D4N_MASK                             0x40
#define _CLC4GLS0_LC4G1D4T_POSN                             0x7
#define _CLC4GLS0_LC4G1D4T_POSITION                         0x7
#define _CLC4GLS0_LC4G1D4T_SIZE                             0x1
#define _CLC4GLS0_LC4G1D4T_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D4T_MASK                             0x80
#define _CLC4GLS0_D1N_POSN                                  0x0
#define _CLC4GLS0_D1N_POSITION                              0x0
#define _CLC4GLS0_D1N_SIZE                                  0x1
#define _CLC4GLS0_D1N_LENGTH                                0x1
#define _CLC4GLS0_D1N_MASK                                  0x1
#define _CLC4GLS0_D1T_POSN                                  0x1
#define _CLC4GLS0_D1T_POSITION                              0x1
#define _CLC4GLS0_D1T_SIZE                                  0x1
#define _CLC4GLS0_D1T_LENGTH                                0x1
#define _CLC4GLS0_D1T_MASK                                  0x2
#define _CLC4GLS0_D2N_POSN                                  0x2
#define _CLC4GLS0_D2N_POSITION                              0x2
#define _CLC4GLS0_D2N_SIZE                                  0x1
#define _CLC4GLS0_D2N_LENGTH                                0x1
#define _CLC4GLS0_D2N_MASK                                  0x4
#define _CLC4GLS0_D2T_POSN                                  0x3
#define _CLC4GLS0_D2T_POSITION                              0x3
#define _CLC4GLS0_D2T_SIZE                                  0x1
#define _CLC4GLS0_D2T_LENGTH                                0x1
#define _CLC4GLS0_D2T_MASK                                  0x8
#define _CLC4GLS0_D3N_POSN                                  0x4
#define _CLC4GLS0_D3N_POSITION                              0x4
#define _CLC4GLS0_D3N_SIZE                                  0x1
#define _CLC4GLS0_D3N_LENGTH                                0x1
#define _CLC4GLS0_D3N_MASK                                  0x10
#define _CLC4GLS0_D3T_POSN                                  0x5
#define _CLC4GLS0_D3T_POSITION                              0x5
#define _CLC4GLS0_D3T_SIZE                                  0x1
#define _CLC4GLS0_D3T_LENGTH                                0x1
#define _CLC4GLS0_D3T_MASK                                  0x20
#define _CLC4GLS0_D4N_POSN                                  0x6
#define _CLC4GLS0_D4N_POSITION                              0x6
#define _CLC4GLS0_D4N_SIZE                                  0x1
#define _CLC4GLS0_D4N_LENGTH                                0x1
#define _CLC4GLS0_D4N_MASK                                  0x40
#define _CLC4GLS0_D4T_POSN                                  0x7
#define _CLC4GLS0_D4T_POSITION                              0x7
#define _CLC4GLS0_D4T_SIZE                                  0x1
#define _CLC4GLS0_D4T_LENGTH                                0x1
#define _CLC4GLS0_D4T_MASK                                  0x80

// Register: CLC4GLS1
#define CLC4GLS1 CLC4GLS1
extern volatile unsigned char           CLC4GLS1            __at(0xF35);
#ifndef _LIB_BUILD
asm("CLC4GLS1 equ 0F35h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4G2D1N               :1;
        unsigned LC4G2D1T               :1;
        unsigned LC4G2D2N               :1;
        unsigned LC4G2D2T               :1;
        unsigned LC4G2D3N               :1;
        unsigned LC4G2D3T               :1;
        unsigned LC4G2D4N               :1;
        unsigned LC4G2D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC4GLS1bits_t;
extern volatile CLC4GLS1bits_t CLC4GLS1bits __at(0xF35);
// bitfield macros
#define _CLC4GLS1_LC4G2D1N_POSN                             0x0
#define _CLC4GLS1_LC4G2D1N_POSITION                         0x0
#define _CLC4GLS1_LC4G2D1N_SIZE                             0x1
#define _CLC4GLS1_LC4G2D1N_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D1N_MASK                             0x1
#define _CLC4GLS1_LC4G2D1T_POSN                             0x1
#define _CLC4GLS1_LC4G2D1T_POSITION                         0x1
#define _CLC4GLS1_LC4G2D1T_SIZE                             0x1
#define _CLC4GLS1_LC4G2D1T_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D1T_MASK                             0x2
#define _CLC4GLS1_LC4G2D2N_POSN                             0x2
#define _CLC4GLS1_LC4G2D2N_POSITION                         0x2
#define _CLC4GLS1_LC4G2D2N_SIZE                             0x1
#define _CLC4GLS1_LC4G2D2N_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D2N_MASK                             0x4
#define _CLC4GLS1_LC4G2D2T_POSN                             0x3
#define _CLC4GLS1_LC4G2D2T_POSITION                         0x3
#define _CLC4GLS1_LC4G2D2T_SIZE                             0x1
#define _CLC4GLS1_LC4G2D2T_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D2T_MASK                             0x8
#define _CLC4GLS1_LC4G2D3N_POSN                             0x4
#define _CLC4GLS1_LC4G2D3N_POSITION                         0x4
#define _CLC4GLS1_LC4G2D3N_SIZE                             0x1
#define _CLC4GLS1_LC4G2D3N_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D3N_MASK                             0x10
#define _CLC4GLS1_LC4G2D3T_POSN                             0x5
#define _CLC4GLS1_LC4G2D3T_POSITION                         0x5
#define _CLC4GLS1_LC4G2D3T_SIZE                             0x1
#define _CLC4GLS1_LC4G2D3T_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D3T_MASK                             0x20
#define _CLC4GLS1_LC4G2D4N_POSN                             0x6
#define _CLC4GLS1_LC4G2D4N_POSITION                         0x6
#define _CLC4GLS1_LC4G2D4N_SIZE                             0x1
#define _CLC4GLS1_LC4G2D4N_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D4N_MASK                             0x40
#define _CLC4GLS1_LC4G2D4T_POSN                             0x7
#define _CLC4GLS1_LC4G2D4T_POSITION                         0x7
#define _CLC4GLS1_LC4G2D4T_SIZE                             0x1
#define _CLC4GLS1_LC4G2D4T_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D4T_MASK                             0x80
#define _CLC4GLS1_D1N_POSN                                  0x0
#define _CLC4GLS1_D1N_POSITION                              0x0
#define _CLC4GLS1_D1N_SIZE                                  0x1
#define _CLC4GLS1_D1N_LENGTH                                0x1
#define _CLC4GLS1_D1N_MASK                                  0x1
#define _CLC4GLS1_D1T_POSN                                  0x1
#define _CLC4GLS1_D1T_POSITION                              0x1
#define _CLC4GLS1_D1T_SIZE                                  0x1
#define _CLC4GLS1_D1T_LENGTH                                0x1
#define _CLC4GLS1_D1T_MASK                                  0x2
#define _CLC4GLS1_D2N_POSN                                  0x2
#define _CLC4GLS1_D2N_POSITION                              0x2
#define _CLC4GLS1_D2N_SIZE                                  0x1
#define _CLC4GLS1_D2N_LENGTH                                0x1
#define _CLC4GLS1_D2N_MASK                                  0x4
#define _CLC4GLS1_D2T_POSN                                  0x3
#define _CLC4GLS1_D2T_POSITION                              0x3
#define _CLC4GLS1_D2T_SIZE                                  0x1
#define _CLC4GLS1_D2T_LENGTH                                0x1
#define _CLC4GLS1_D2T_MASK                                  0x8
#define _CLC4GLS1_D3N_POSN                                  0x4
#define _CLC4GLS1_D3N_POSITION                              0x4
#define _CLC4GLS1_D3N_SIZE                                  0x1
#define _CLC4GLS1_D3N_LENGTH                                0x1
#define _CLC4GLS1_D3N_MASK                                  0x10
#define _CLC4GLS1_D3T_POSN                                  0x5
#define _CLC4GLS1_D3T_POSITION                              0x5
#define _CLC4GLS1_D3T_SIZE                                  0x1
#define _CLC4GLS1_D3T_LENGTH                                0x1
#define _CLC4GLS1_D3T_MASK                                  0x20
#define _CLC4GLS1_D4N_POSN                                  0x6
#define _CLC4GLS1_D4N_POSITION                              0x6
#define _CLC4GLS1_D4N_SIZE                                  0x1
#define _CLC4GLS1_D4N_LENGTH                                0x1
#define _CLC4GLS1_D4N_MASK                                  0x40
#define _CLC4GLS1_D4T_POSN                                  0x7
#define _CLC4GLS1_D4T_POSITION                              0x7
#define _CLC4GLS1_D4T_SIZE                                  0x1
#define _CLC4GLS1_D4T_LENGTH                                0x1
#define _CLC4GLS1_D4T_MASK                                  0x80

// Register: CLC4GLS2
#define CLC4GLS2 CLC4GLS2
extern volatile unsigned char           CLC4GLS2            __at(0xF36);
#ifndef _LIB_BUILD
asm("CLC4GLS2 equ 0F36h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4G3D1N               :1;
        unsigned LC4G3D1T               :1;
        unsigned LC4G3D2N               :1;
        unsigned LC4G3D2T               :1;
        unsigned LC4G3D3N               :1;
        unsigned LC4G3D3T               :1;
        unsigned LC4G3D4N               :1;
        unsigned LC4G3D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC4GLS2bits_t;
extern volatile CLC4GLS2bits_t CLC4GLS2bits __at(0xF36);
// bitfield macros
#define _CLC4GLS2_LC4G3D1N_POSN                             0x0
#define _CLC4GLS2_LC4G3D1N_POSITION                         0x0
#define _CLC4GLS2_LC4G3D1N_SIZE                             0x1
#define _CLC4GLS2_LC4G3D1N_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D1N_MASK                             0x1
#define _CLC4GLS2_LC4G3D1T_POSN                             0x1
#define _CLC4GLS2_LC4G3D1T_POSITION                         0x1
#define _CLC4GLS2_LC4G3D1T_SIZE                             0x1
#define _CLC4GLS2_LC4G3D1T_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D1T_MASK                             0x2
#define _CLC4GLS2_LC4G3D2N_POSN                             0x2
#define _CLC4GLS2_LC4G3D2N_POSITION                         0x2
#define _CLC4GLS2_LC4G3D2N_SIZE                             0x1
#define _CLC4GLS2_LC4G3D2N_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D2N_MASK                             0x4
#define _CLC4GLS2_LC4G3D2T_POSN                             0x3
#define _CLC4GLS2_LC4G3D2T_POSITION                         0x3
#define _CLC4GLS2_LC4G3D2T_SIZE                             0x1
#define _CLC4GLS2_LC4G3D2T_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D2T_MASK                             0x8
#define _CLC4GLS2_LC4G3D3N_POSN                             0x4
#define _CLC4GLS2_LC4G3D3N_POSITION                         0x4
#define _CLC4GLS2_LC4G3D3N_SIZE                             0x1
#define _CLC4GLS2_LC4G3D3N_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D3N_MASK                             0x10
#define _CLC4GLS2_LC4G3D3T_POSN                             0x5
#define _CLC4GLS2_LC4G3D3T_POSITION                         0x5
#define _CLC4GLS2_LC4G3D3T_SIZE                             0x1
#define _CLC4GLS2_LC4G3D3T_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D3T_MASK                             0x20
#define _CLC4GLS2_LC4G3D4N_POSN                             0x6
#define _CLC4GLS2_LC4G3D4N_POSITION                         0x6
#define _CLC4GLS2_LC4G3D4N_SIZE                             0x1
#define _CLC4GLS2_LC4G3D4N_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D4N_MASK                             0x40
#define _CLC4GLS2_LC4G3D4T_POSN                             0x7
#define _CLC4GLS2_LC4G3D4T_POSITION                         0x7
#define _CLC4GLS2_LC4G3D4T_SIZE                             0x1
#define _CLC4GLS2_LC4G3D4T_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D4T_MASK                             0x80
#define _CLC4GLS2_D1N_POSN                                  0x0
#define _CLC4GLS2_D1N_POSITION                              0x0
#define _CLC4GLS2_D1N_SIZE                                  0x1
#define _CLC4GLS2_D1N_LENGTH                                0x1
#define _CLC4GLS2_D1N_MASK                                  0x1
#define _CLC4GLS2_D1T_POSN                                  0x1
#define _CLC4GLS2_D1T_POSITION                              0x1
#define _CLC4GLS2_D1T_SIZE                                  0x1
#define _CLC4GLS2_D1T_LENGTH                                0x1
#define _CLC4GLS2_D1T_MASK                                  0x2
#define _CLC4GLS2_D2N_POSN                                  0x2
#define _CLC4GLS2_D2N_POSITION                              0x2
#define _CLC4GLS2_D2N_SIZE                                  0x1
#define _CLC4GLS2_D2N_LENGTH                                0x1
#define _CLC4GLS2_D2N_MASK                                  0x4
#define _CLC4GLS2_D2T_POSN                                  0x3
#define _CLC4GLS2_D2T_POSITION                              0x3
#define _CLC4GLS2_D2T_SIZE                                  0x1
#define _CLC4GLS2_D2T_LENGTH                                0x1
#define _CLC4GLS2_D2T_MASK                                  0x8
#define _CLC4GLS2_D3N_POSN                                  0x4
#define _CLC4GLS2_D3N_POSITION                              0x4
#define _CLC4GLS2_D3N_SIZE                                  0x1
#define _CLC4GLS2_D3N_LENGTH                                0x1
#define _CLC4GLS2_D3N_MASK                                  0x10
#define _CLC4GLS2_D3T_POSN                                  0x5
#define _CLC4GLS2_D3T_POSITION                              0x5
#define _CLC4GLS2_D3T_SIZE                                  0x1
#define _CLC4GLS2_D3T_LENGTH                                0x1
#define _CLC4GLS2_D3T_MASK                                  0x20
#define _CLC4GLS2_D4N_POSN                                  0x6
#define _CLC4GLS2_D4N_POSITION                              0x6
#define _CLC4GLS2_D4N_SIZE                                  0x1
#define _CLC4GLS2_D4N_LENGTH                                0x1
#define _CLC4GLS2_D4N_MASK                                  0x40
#define _CLC4GLS2_D4T_POSN                                  0x7
#define _CLC4GLS2_D4T_POSITION                              0x7
#define _CLC4GLS2_D4T_SIZE                                  0x1
#define _CLC4GLS2_D4T_LENGTH                                0x1
#define _CLC4GLS2_D4T_MASK                                  0x80

// Register: CLC4GLS3
#define CLC4GLS3 CLC4GLS3
extern volatile unsigned char           CLC4GLS3            __at(0xF37);
#ifndef _LIB_BUILD
asm("CLC4GLS3 equ 0F37h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4G4D1N               :1;
        unsigned LC4G4D1T               :1;
        unsigned LC4G4D2N               :1;
        unsigned LC4G4D2T               :1;
        unsigned LC4G4D3N               :1;
        unsigned LC4G4D3T               :1;
        unsigned LC4G4D4N               :1;
        unsigned LC4G4D4T               :1;
    };
    struct {
        unsigned G4D1N                  :1;
        unsigned G4D1T                  :1;
        unsigned G4D2N                  :1;
        unsigned G4D2T                  :1;
        unsigned G4D3N                  :1;
        unsigned G4D3T                  :1;
        unsigned G4D4N                  :1;
        unsigned G4D4T                  :1;
    };
} CLC4GLS3bits_t;
extern volatile CLC4GLS3bits_t CLC4GLS3bits __at(0xF37);
// bitfield macros
#define _CLC4GLS3_LC4G4D1N_POSN                             0x0
#define _CLC4GLS3_LC4G4D1N_POSITION                         0x0
#define _CLC4GLS3_LC4G4D1N_SIZE                             0x1
#define _CLC4GLS3_LC4G4D1N_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D1N_MASK                             0x1
#define _CLC4GLS3_LC4G4D1T_POSN                             0x1
#define _CLC4GLS3_LC4G4D1T_POSITION                         0x1
#define _CLC4GLS3_LC4G4D1T_SIZE                             0x1
#define _CLC4GLS3_LC4G4D1T_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D1T_MASK                             0x2
#define _CLC4GLS3_LC4G4D2N_POSN                             0x2
#define _CLC4GLS3_LC4G4D2N_POSITION                         0x2
#define _CLC4GLS3_LC4G4D2N_SIZE                             0x1
#define _CLC4GLS3_LC4G4D2N_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D2N_MASK                             0x4
#define _CLC4GLS3_LC4G4D2T_POSN                             0x3
#define _CLC4GLS3_LC4G4D2T_POSITION                         0x3
#define _CLC4GLS3_LC4G4D2T_SIZE                             0x1
#define _CLC4GLS3_LC4G4D2T_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D2T_MASK                             0x8
#define _CLC4GLS3_LC4G4D3N_POSN                             0x4
#define _CLC4GLS3_LC4G4D3N_POSITION                         0x4
#define _CLC4GLS3_LC4G4D3N_SIZE                             0x1
#define _CLC4GLS3_LC4G4D3N_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D3N_MASK                             0x10
#define _CLC4GLS3_LC4G4D3T_POSN                             0x5
#define _CLC4GLS3_LC4G4D3T_POSITION                         0x5
#define _CLC4GLS3_LC4G4D3T_SIZE                             0x1
#define _CLC4GLS3_LC4G4D3T_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D3T_MASK                             0x20
#define _CLC4GLS3_LC4G4D4N_POSN                             0x6
#define _CLC4GLS3_LC4G4D4N_POSITION                         0x6
#define _CLC4GLS3_LC4G4D4N_SIZE                             0x1
#define _CLC4GLS3_LC4G4D4N_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D4N_MASK                             0x40
#define _CLC4GLS3_LC4G4D4T_POSN                             0x7
#define _CLC4GLS3_LC4G4D4T_POSITION                         0x7
#define _CLC4GLS3_LC4G4D4T_SIZE                             0x1
#define _CLC4GLS3_LC4G4D4T_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D4T_MASK                             0x80
#define _CLC4GLS3_G4D1N_POSN                                0x0
#define _CLC4GLS3_G4D1N_POSITION                            0x0
#define _CLC4GLS3_G4D1N_SIZE                                0x1
#define _CLC4GLS3_G4D1N_LENGTH                              0x1
#define _CLC4GLS3_G4D1N_MASK                                0x1
#define _CLC4GLS3_G4D1T_POSN                                0x1
#define _CLC4GLS3_G4D1T_POSITION                            0x1
#define _CLC4GLS3_G4D1T_SIZE                                0x1
#define _CLC4GLS3_G4D1T_LENGTH                              0x1
#define _CLC4GLS3_G4D1T_MASK                                0x2
#define _CLC4GLS3_G4D2N_POSN                                0x2
#define _CLC4GLS3_G4D2N_POSITION                            0x2
#define _CLC4GLS3_G4D2N_SIZE                                0x1
#define _CLC4GLS3_G4D2N_LENGTH                              0x1
#define _CLC4GLS3_G4D2N_MASK                                0x4
#define _CLC4GLS3_G4D2T_POSN                                0x3
#define _CLC4GLS3_G4D2T_POSITION                            0x3
#define _CLC4GLS3_G4D2T_SIZE                                0x1
#define _CLC4GLS3_G4D2T_LENGTH                              0x1
#define _CLC4GLS3_G4D2T_MASK                                0x8
#define _CLC4GLS3_G4D3N_POSN                                0x4
#define _CLC4GLS3_G4D3N_POSITION                            0x4
#define _CLC4GLS3_G4D3N_SIZE                                0x1
#define _CLC4GLS3_G4D3N_LENGTH                              0x1
#define _CLC4GLS3_G4D3N_MASK                                0x10
#define _CLC4GLS3_G4D3T_POSN                                0x5
#define _CLC4GLS3_G4D3T_POSITION                            0x5
#define _CLC4GLS3_G4D3T_SIZE                                0x1
#define _CLC4GLS3_G4D3T_LENGTH                              0x1
#define _CLC4GLS3_G4D3T_MASK                                0x20
#define _CLC4GLS3_G4D4N_POSN                                0x6
#define _CLC4GLS3_G4D4N_POSITION                            0x6
#define _CLC4GLS3_G4D4N_SIZE                                0x1
#define _CLC4GLS3_G4D4N_LENGTH                              0x1
#define _CLC4GLS3_G4D4N_MASK                                0x40
#define _CLC4GLS3_G4D4T_POSN                                0x7
#define _CLC4GLS3_G4D4T_POSITION                            0x7
#define _CLC4GLS3_G4D4T_SIZE                                0x1
#define _CLC4GLS3_G4D4T_LENGTH                              0x1
#define _CLC4GLS3_G4D4T_MASK                                0x80

// Register: STATUS_SHAD
#define STATUS_SHAD STATUS_SHAD
extern volatile unsigned char           STATUS_SHAD         __at(0xFE4);
#ifndef _LIB_BUILD
asm("STATUS_SHAD equ 0FE4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C_SHAD                 :1;
        unsigned DC_SHAD                :1;
        unsigned Z_SHAD                 :1;
    };
} STATUS_SHADbits_t;
extern volatile STATUS_SHADbits_t STATUS_SHADbits __at(0xFE4);
// bitfield macros
#define _STATUS_SHAD_C_SHAD_POSN                            0x0
#define _STATUS_SHAD_C_SHAD_POSITION                        0x0
#define _STATUS_SHAD_C_SHAD_SIZE                            0x1
#define _STATUS_SHAD_C_SHAD_LENGTH                          0x1
#define _STATUS_SHAD_C_SHAD_MASK                            0x1
#define _STATUS_SHAD_DC_SHAD_POSN                           0x1
#define _STATUS_SHAD_DC_SHAD_POSITION                       0x1
#define _STATUS_SHAD_DC_SHAD_SIZE                           0x1
#define _STATUS_SHAD_DC_SHAD_LENGTH                         0x1
#define _STATUS_SHAD_DC_SHAD_MASK                           0x2
#define _STATUS_SHAD_Z_SHAD_POSN                            0x2
#define _STATUS_SHAD_Z_SHAD_POSITION                        0x2
#define _STATUS_SHAD_Z_SHAD_SIZE                            0x1
#define _STATUS_SHAD_Z_SHAD_LENGTH                          0x1
#define _STATUS_SHAD_Z_SHAD_MASK                            0x4

// Register: WREG_SHAD
#define WREG_SHAD WREG_SHAD
extern volatile unsigned char           WREG_SHAD           __at(0xFE5);
#ifndef _LIB_BUILD
asm("WREG_SHAD equ 0FE5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WREG_SHAD              :8;
    };
} WREG_SHADbits_t;
extern volatile WREG_SHADbits_t WREG_SHADbits __at(0xFE5);
// bitfield macros
#define _WREG_SHAD_WREG_SHAD_POSN                           0x0
#define _WREG_SHAD_WREG_SHAD_POSITION                       0x0
#define _WREG_SHAD_WREG_SHAD_SIZE                           0x8
#define _WREG_SHAD_WREG_SHAD_LENGTH                         0x8
#define _WREG_SHAD_WREG_SHAD_MASK                           0xFF

// Register: BSR_SHAD
#define BSR_SHAD BSR_SHAD
extern volatile unsigned char           BSR_SHAD            __at(0xFE6);
#ifndef _LIB_BUILD
asm("BSR_SHAD equ 0FE6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BSR_SHAD               :5;
    };
} BSR_SHADbits_t;
extern volatile BSR_SHADbits_t BSR_SHADbits __at(0xFE6);
// bitfield macros
#define _BSR_SHAD_BSR_SHAD_POSN                             0x0
#define _BSR_SHAD_BSR_SHAD_POSITION                         0x0
#define _BSR_SHAD_BSR_SHAD_SIZE                             0x5
#define _BSR_SHAD_BSR_SHAD_LENGTH                           0x5
#define _BSR_SHAD_BSR_SHAD_MASK                             0x1F

// Register: PCLATH_SHAD
#define PCLATH_SHAD PCLATH_SHAD
extern volatile unsigned char           PCLATH_SHAD         __at(0xFE7);
#ifndef _LIB_BUILD
asm("PCLATH_SHAD equ 0FE7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCLATH_SHAD            :7;
    };
} PCLATH_SHADbits_t;
extern volatile PCLATH_SHADbits_t PCLATH_SHADbits __at(0xFE7);
// bitfield macros
#define _PCLATH_SHAD_PCLATH_SHAD_POSN                       0x0
#define _PCLATH_SHAD_PCLATH_SHAD_POSITION                   0x0
#define _PCLATH_SHAD_PCLATH_SHAD_SIZE                       0x7
#define _PCLATH_SHAD_PCLATH_SHAD_LENGTH                     0x7
#define _PCLATH_SHAD_PCLATH_SHAD_MASK                       0x7F

// Register: FSR0L_SHAD
#define FSR0L_SHAD FSR0L_SHAD
extern volatile unsigned char           FSR0L_SHAD          __at(0xFE8);
#ifndef _LIB_BUILD
asm("FSR0L_SHAD equ 0FE8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR0L_SHAD             :8;
    };
} FSR0L_SHADbits_t;
extern volatile FSR0L_SHADbits_t FSR0L_SHADbits __at(0xFE8);
// bitfield macros
#define _FSR0L_SHAD_FSR0L_SHAD_POSN                         0x0
#define _FSR0L_SHAD_FSR0L_SHAD_POSITION                     0x0
#define _FSR0L_SHAD_FSR0L_SHAD_SIZE                         0x8
#define _FSR0L_SHAD_FSR0L_SHAD_LENGTH                       0x8
#define _FSR0L_SHAD_FSR0L_SHAD_MASK                         0xFF

// Register: FSR0H_SHAD
#define FSR0H_SHAD FSR0H_SHAD
extern volatile unsigned char           FSR0H_SHAD          __at(0xFE9);
#ifndef _LIB_BUILD
asm("FSR0H_SHAD equ 0FE9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR0H_SHAD             :8;
    };
} FSR0H_SHADbits_t;
extern volatile FSR0H_SHADbits_t FSR0H_SHADbits __at(0xFE9);
// bitfield macros
#define _FSR0H_SHAD_FSR0H_SHAD_POSN                         0x0
#define _FSR0H_SHAD_FSR0H_SHAD_POSITION                     0x0
#define _FSR0H_SHAD_FSR0H_SHAD_SIZE                         0x8
#define _FSR0H_SHAD_FSR0H_SHAD_LENGTH                       0x8
#define _FSR0H_SHAD_FSR0H_SHAD_MASK                         0xFF

// Register: FSR1L_SHAD
#define FSR1L_SHAD FSR1L_SHAD
extern volatile unsigned char           FSR1L_SHAD          __at(0xFEA);
#ifndef _LIB_BUILD
asm("FSR1L_SHAD equ 0FEAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR1L_SHAD             :8;
    };
} FSR1L_SHADbits_t;
extern volatile FSR1L_SHADbits_t FSR1L_SHADbits __at(0xFEA);
// bitfield macros
#define _FSR1L_SHAD_FSR1L_SHAD_POSN                         0x0
#define _FSR1L_SHAD_FSR1L_SHAD_POSITION                     0x0
#define _FSR1L_SHAD_FSR1L_SHAD_SIZE                         0x8
#define _FSR1L_SHAD_FSR1L_SHAD_LENGTH                       0x8
#define _FSR1L_SHAD_FSR1L_SHAD_MASK                         0xFF

// Register: FSR1H_SHAD
#define FSR1H_SHAD FSR1H_SHAD
extern volatile unsigned char           FSR1H_SHAD          __at(0xFEB);
#ifndef _LIB_BUILD
asm("FSR1H_SHAD equ 0FEBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR1H_SHAD             :8;
    };
} FSR1H_SHADbits_t;
extern volatile FSR1H_SHADbits_t FSR1H_SHADbits __at(0xFEB);
// bitfield macros
#define _FSR1H_SHAD_FSR1H_SHAD_POSN                         0x0
#define _FSR1H_SHAD_FSR1H_SHAD_POSITION                     0x0
#define _FSR1H_SHAD_FSR1H_SHAD_SIZE                         0x8
#define _FSR1H_SHAD_FSR1H_SHAD_LENGTH                       0x8
#define _FSR1H_SHAD_FSR1H_SHAD_MASK                         0xFF

// Register: STKPTR
#define STKPTR STKPTR
extern volatile unsigned char           STKPTR              __at(0xFED);
#ifndef _LIB_BUILD
asm("STKPTR equ 0FEDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STKPTR                 :5;
    };
} STKPTRbits_t;
extern volatile STKPTRbits_t STKPTRbits __at(0xFED);
// bitfield macros
#define _STKPTR_STKPTR_POSN                                 0x0
#define _STKPTR_STKPTR_POSITION                             0x0
#define _STKPTR_STKPTR_SIZE                                 0x5
#define _STKPTR_STKPTR_LENGTH                               0x5
#define _STKPTR_STKPTR_MASK                                 0x1F

// Register: TOSL
#define TOSL TOSL
extern volatile unsigned char           TOSL                __at(0xFEE);
#ifndef _LIB_BUILD
asm("TOSL equ 0FEEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TOSL                   :8;
    };
} TOSLbits_t;
extern volatile TOSLbits_t TOSLbits __at(0xFEE);
// bitfield macros
#define _TOSL_TOSL_POSN                                     0x0
#define _TOSL_TOSL_POSITION                                 0x0
#define _TOSL_TOSL_SIZE                                     0x8
#define _TOSL_TOSL_LENGTH                                   0x8
#define _TOSL_TOSL_MASK                                     0xFF

// Register: TOSH
#define TOSH TOSH
extern volatile unsigned char           TOSH                __at(0xFEF);
#ifndef _LIB_BUILD
asm("TOSH equ 0FEFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TOSH                   :7;
    };
} TOSHbits_t;
extern volatile TOSHbits_t TOSHbits __at(0xFEF);
// bitfield macros
#define _TOSH_TOSH_POSN                                     0x0
#define _TOSH_TOSH_POSITION                                 0x0
#define _TOSH_TOSH_SIZE                                     0x7
#define _TOSH_TOSH_LENGTH                                   0x7
#define _TOSH_TOSH_MASK                                     0x7F

/*
 * Bit Definitions
 */
#define _DEPRECATED __attribute__((__deprecated__))
#ifndef BANKMASK
#define BANKMASK(addr) ((addr)&07Fh)
#endif
#define _BIT_ACCESS(r,b) ___mkstr(BANKMASK(r)) "," ___mkstr(b)
#ifndef PAGEMASK
#define PAGEMASK(addr) ((addr)&07FFh)
#endif
// BAUD1CON<ABDEN>
extern volatile __bit                   ABDEN               __at(0xCF8);	// @ (0x19F * 8 + 0)
#define                                 ABDEN_bit           _BIT_ACCESS(BAUD1CON,0)
// BAUD1CON<ABDOVF>
extern volatile __bit                   ABDOVF              __at(0xCFF);	// @ (0x19F * 8 + 7)
#define                                 ABDOVF_bit          _BIT_ACCESS(BAUD1CON,7)
// SSP1CON2<ACKDT>
extern volatile __bit                   ACKDT               __at(0x10B5);	// @ (0x216 * 8 + 5)
#define                                 ACKDT_bit           _BIT_ACCESS(SSP1CON2,5)
// SSP1CON2<ACKEN>
extern volatile __bit                   ACKEN               __at(0x10B4);	// @ (0x216 * 8 + 4)
#define                                 ACKEN_bit           _BIT_ACCESS(SSP1CON2,4)
// SSP1CON2<ACKSTAT>
extern volatile __bit                   ACKSTAT             __at(0x10B6);	// @ (0x216 * 8 + 6)
#define                                 ACKSTAT_bit         _BIT_ACCESS(SSP1CON2,6)
// SSP1CON3<ACKTIM>
extern volatile __bit                   ACKTIM              __at(0x10BF);	// @ (0x217 * 8 + 7)
#define                                 ACKTIM_bit          _BIT_ACCESS(SSP1CON3,7)
// SSP1ADD<ADD0>
extern volatile __bit                   ADD0                __at(0x1090);	// @ (0x212 * 8 + 0)
#define                                 ADD0_bit            _BIT_ACCESS(SSP1ADD,0)
// SSP1ADD<ADD1>
extern volatile __bit                   ADD1                __at(0x1091);	// @ (0x212 * 8 + 1)
#define                                 ADD1_bit            _BIT_ACCESS(SSP1ADD,1)
// SSP1ADD<ADD2>
extern volatile __bit                   ADD2                __at(0x1092);	// @ (0x212 * 8 + 2)
#define                                 ADD2_bit            _BIT_ACCESS(SSP1ADD,2)
// SSP1ADD<ADD3>
extern volatile __bit                   ADD3                __at(0x1093);	// @ (0x212 * 8 + 3)
#define                                 ADD3_bit            _BIT_ACCESS(SSP1ADD,3)
// SSP1ADD<ADD4>
extern volatile __bit                   ADD4                __at(0x1094);	// @ (0x212 * 8 + 4)
#define                                 ADD4_bit            _BIT_ACCESS(SSP1ADD,4)
// SSP1ADD<ADD5>
extern volatile __bit                   ADD5                __at(0x1095);	// @ (0x212 * 8 + 5)
#define                                 ADD5_bit            _BIT_ACCESS(SSP1ADD,5)
// SSP1ADD<ADD6>
extern volatile __bit                   ADD6                __at(0x1096);	// @ (0x212 * 8 + 6)
#define                                 ADD6_bit            _BIT_ACCESS(SSP1ADD,6)
// SSP1ADD<ADD7>
extern volatile __bit                   ADD7                __at(0x1097);	// @ (0x212 * 8 + 7)
#define                                 ADD7_bit            _BIT_ACCESS(SSP1ADD,7)
// RC1STA<ADDEN>
extern volatile __bit                   ADDEN               __at(0xCEB);	// @ (0x19D * 8 + 3)
#define                                 ADDEN_bit           _BIT_ACCESS(RC1STA,3)
// ADCON1<ADFM>
extern volatile __bit                   ADFM                __at(0x248F);	// @ (0x491 * 8 + 7)
#define                                 ADFM_bit            _BIT_ACCESS(ADCON1,7)
// PIE1<ADIE>
extern volatile __bit                   ADIE                __at(0x48E);	// @ (0x91 * 8 + 6)
#define                                 ADIE_bit            _BIT_ACCESS(PIE1,6)
// PIR1<ADIF>
extern volatile __bit                   ADIF                __at(0x8E);	// @ (0x11 * 8 + 6)
#define                                 ADIF_bit            _BIT_ACCESS(PIR1,6)
// ADCON1<ADNREF>
extern volatile __bit                   ADNREF              __at(0x248A);	// @ (0x491 * 8 + 2)
#define                                 ADNREF_bit          _BIT_ACCESS(ADCON1,2)
// ADCON0<ADON>
extern volatile __bit                   ADON                __at(0x2480);	// @ (0x490 * 8 + 0)
#define                                 ADON_bit            _BIT_ACCESS(ADCON0,0)
// SSP1CON3<AHEN>
extern volatile __bit                   AHEN                __at(0x10B9);	// @ (0x217 * 8 + 1)
#define                                 AHEN_bit            _BIT_ACCESS(SSP1CON3,1)
// ANSELA<ANSA0>
extern volatile __bit                   ANSA0               __at(0xC60);	// @ (0x18C * 8 + 0)
#define                                 ANSA0_bit           _BIT_ACCESS(ANSELA,0)
// ANSELA<ANSA1>
extern volatile __bit                   ANSA1               __at(0xC61);	// @ (0x18C * 8 + 1)
#define                                 ANSA1_bit           _BIT_ACCESS(ANSELA,1)
// ANSELA<ANSA2>
extern volatile __bit                   ANSA2               __at(0xC62);	// @ (0x18C * 8 + 2)
#define                                 ANSA2_bit           _BIT_ACCESS(ANSELA,2)
// ANSELA<ANSA3>
extern volatile __bit                   ANSA3               __at(0xC63);	// @ (0x18C * 8 + 3)
#define                                 ANSA3_bit           _BIT_ACCESS(ANSELA,3)
// ANSELA<ANSA4>
extern volatile __bit                   ANSA4               __at(0xC64);	// @ (0x18C * 8 + 4)
#define                                 ANSA4_bit           _BIT_ACCESS(ANSELA,4)
// ANSELA<ANSA5>
extern volatile __bit                   ANSA5               __at(0xC65);	// @ (0x18C * 8 + 5)
#define                                 ANSA5_bit           _BIT_ACCESS(ANSELA,5)
// ANSELB<ANSB0>
extern volatile __bit                   ANSB0               __at(0xC68);	// @ (0x18D * 8 + 0)
#define                                 ANSB0_bit           _BIT_ACCESS(ANSELB,0)
// ANSELB<ANSB1>
extern volatile __bit                   ANSB1               __at(0xC69);	// @ (0x18D * 8 + 1)
#define                                 ANSB1_bit           _BIT_ACCESS(ANSELB,1)
// ANSELB<ANSB2>
extern volatile __bit                   ANSB2               __at(0xC6A);	// @ (0x18D * 8 + 2)
#define                                 ANSB2_bit           _BIT_ACCESS(ANSELB,2)
// ANSELB<ANSB3>
extern volatile __bit                   ANSB3               __at(0xC6B);	// @ (0x18D * 8 + 3)
#define                                 ANSB3_bit           _BIT_ACCESS(ANSELB,3)
// ANSELB<ANSB4>
extern volatile __bit                   ANSB4               __at(0xC6C);	// @ (0x18D * 8 + 4)
#define                                 ANSB4_bit           _BIT_ACCESS(ANSELB,4)
// ANSELB<ANSB5>
extern volatile __bit                   ANSB5               __at(0xC6D);	// @ (0x18D * 8 + 5)
#define                                 ANSB5_bit           _BIT_ACCESS(ANSELB,5)
// ANSELC<ANSC2>
extern volatile __bit                   ANSC2               __at(0xC72);	// @ (0x18E * 8 + 2)
#define                                 ANSC2_bit           _BIT_ACCESS(ANSELC,2)
// ANSELC<ANSC3>
extern volatile __bit                   ANSC3               __at(0xC73);	// @ (0x18E * 8 + 3)
#define                                 ANSC3_bit           _BIT_ACCESS(ANSELC,3)
// ANSELC<ANSC4>
extern volatile __bit                   ANSC4               __at(0xC74);	// @ (0x18E * 8 + 4)
#define                                 ANSC4_bit           _BIT_ACCESS(ANSELC,4)
// ANSELC<ANSC5>
extern volatile __bit                   ANSC5               __at(0xC75);	// @ (0x18E * 8 + 5)
#define                                 ANSC5_bit           _BIT_ACCESS(ANSELC,5)
// ANSELC<ANSC6>
extern volatile __bit                   ANSC6               __at(0xC76);	// @ (0x18E * 8 + 6)
#define                                 ANSC6_bit           _BIT_ACCESS(ANSELC,6)
// ANSELC<ANSC7>
extern volatile __bit                   ANSC7               __at(0xC77);	// @ (0x18E * 8 + 7)
#define                                 ANSC7_bit           _BIT_ACCESS(ANSELC,7)
// ANSELD<ANSD0>
extern volatile __bit                   ANSD0               __at(0xC78);	// @ (0x18F * 8 + 0)
#define                                 ANSD0_bit           _BIT_ACCESS(ANSELD,0)
// ANSELD<ANSD1>
extern volatile __bit                   ANSD1               __at(0xC79);	// @ (0x18F * 8 + 1)
#define                                 ANSD1_bit           _BIT_ACCESS(ANSELD,1)
// ANSELD<ANSD2>
extern volatile __bit                   ANSD2               __at(0xC7A);	// @ (0x18F * 8 + 2)
#define                                 ANSD2_bit           _BIT_ACCESS(ANSELD,2)
// ANSELD<ANSD3>
extern volatile __bit                   ANSD3               __at(0xC7B);	// @ (0x18F * 8 + 3)
#define                                 ANSD3_bit           _BIT_ACCESS(ANSELD,3)
// ANSELD<ANSD4>
extern volatile __bit                   ANSD4               __at(0xC7C);	// @ (0x18F * 8 + 4)
#define                                 ANSD4_bit           _BIT_ACCESS(ANSELD,4)
// ANSELD<ANSD5>
extern volatile __bit                   ANSD5               __at(0xC7D);	// @ (0x18F * 8 + 5)
#define                                 ANSD5_bit           _BIT_ACCESS(ANSELD,5)
// ANSELD<ANSD6>
extern volatile __bit                   ANSD6               __at(0xC7E);	// @ (0x18F * 8 + 6)
#define                                 ANSD6_bit           _BIT_ACCESS(ANSELD,6)
// ANSELD<ANSD7>
extern volatile __bit                   ANSD7               __at(0xC7F);	// @ (0x18F * 8 + 7)
#define                                 ANSD7_bit           _BIT_ACCESS(ANSELD,7)
// ANSELE<ANSE0>
extern volatile __bit                   ANSE0               __at(0xC80);	// @ (0x190 * 8 + 0)
#define                                 ANSE0_bit           _BIT_ACCESS(ANSELE,0)
// ANSELE<ANSE1>
extern volatile __bit                   ANSE1               __at(0xC81);	// @ (0x190 * 8 + 1)
#define                                 ANSE1_bit           _BIT_ACCESS(ANSELE,1)
// ANSELE<ANSE2>
extern volatile __bit                   ANSE2               __at(0xC82);	// @ (0x190 * 8 + 2)
#define                                 ANSE2_bit           _BIT_ACCESS(ANSELE,2)
// PIE2<BCL1IE>
extern volatile __bit                   BCL1IE              __at(0x493);	// @ (0x92 * 8 + 3)
#define                                 BCL1IE_bit          _BIT_ACCESS(PIE2,3)
// PIR2<BCL1IF>
extern volatile __bit                   BCL1IF              __at(0x93);	// @ (0x12 * 8 + 3)
#define                                 BCL1IF_bit          _BIT_ACCESS(PIR2,3)
// SSP1STAT<BF>
extern volatile __bit                   BF                  __at(0x10A0);	// @ (0x214 * 8 + 0)
#define                                 BF_bit              _BIT_ACCESS(SSP1STAT,0)
// SSP1CON3<BOEN>
extern volatile __bit                   BOEN                __at(0x10BC);	// @ (0x217 * 8 + 4)
#define                                 BOEN_bit            _BIT_ACCESS(SSP1CON3,4)
// BORCON<BORFS>
extern volatile __bit                   BORFS               __at(0x4EE);	// @ (0x9D * 8 + 6)
#define                                 BORFS_bit           _BIT_ACCESS(BORCON,6)
// BORCON<BORRDY>
extern volatile __bit                   BORRDY              __at(0x4E8);	// @ (0x9D * 8 + 0)
#define                                 BORRDY_bit          _BIT_ACCESS(BORCON,0)
// BAUD1CON<BRG16>
extern volatile __bit                   BRG16               __at(0xCFB);	// @ (0x19F * 8 + 3)
#define                                 BRG16_bit           _BIT_ACCESS(BAUD1CON,3)
// TX1STA<BRGH>
extern volatile __bit                   BRGH                __at(0xCF2);	// @ (0x19E * 8 + 2)
#define                                 BRGH_bit            _BIT_ACCESS(TX1STA,2)
// BSR<BSR0>
extern volatile __bit                   BSR0                __at(0x40);	// @ (0x8 * 8 + 0)
#define                                 BSR0_bit            _BIT_ACCESS(BSR,0)
// BSR<BSR1>
extern volatile __bit                   BSR1                __at(0x41);	// @ (0x8 * 8 + 1)
#define                                 BSR1_bit            _BIT_ACCESS(BSR,1)
// BSR<BSR2>
extern volatile __bit                   BSR2                __at(0x42);	// @ (0x8 * 8 + 2)
#define                                 BSR2_bit            _BIT_ACCESS(BSR,2)
// BSR<BSR3>
extern volatile __bit                   BSR3                __at(0x43);	// @ (0x8 * 8 + 3)
#define                                 BSR3_bit            _BIT_ACCESS(BSR,3)
// BSR<BSR4>
extern volatile __bit                   BSR4                __at(0x44);	// @ (0x8 * 8 + 4)
#define                                 BSR4_bit            _BIT_ACCESS(BSR,4)
// SSP1BUF<BUF0>
extern volatile __bit                   BUF0                __at(0x1088);	// @ (0x211 * 8 + 0)
#define                                 BUF0_bit            _BIT_ACCESS(SSP1BUF,0)
// SSP1BUF<BUF1>
extern volatile __bit                   BUF1                __at(0x1089);	// @ (0x211 * 8 + 1)
#define                                 BUF1_bit            _BIT_ACCESS(SSP1BUF,1)
// SSP1BUF<BUF2>
extern volatile __bit                   BUF2                __at(0x108A);	// @ (0x211 * 8 + 2)
#define                                 BUF2_bit            _BIT_ACCESS(SSP1BUF,2)
// SSP1BUF<BUF3>
extern volatile __bit                   BUF3                __at(0x108B);	// @ (0x211 * 8 + 3)
#define                                 BUF3_bit            _BIT_ACCESS(SSP1BUF,3)
// SSP1BUF<BUF4>
extern volatile __bit                   BUF4                __at(0x108C);	// @ (0x211 * 8 + 4)
#define                                 BUF4_bit            _BIT_ACCESS(SSP1BUF,4)
// SSP1BUF<BUF5>
extern volatile __bit                   BUF5                __at(0x108D);	// @ (0x211 * 8 + 5)
#define                                 BUF5_bit            _BIT_ACCESS(SSP1BUF,5)
// SSP1BUF<BUF6>
extern volatile __bit                   BUF6                __at(0x108E);	// @ (0x211 * 8 + 6)
#define                                 BUF6_bit            _BIT_ACCESS(SSP1BUF,6)
// SSP1BUF<BUF7>
extern volatile __bit                   BUF7                __at(0x108F);	// @ (0x211 * 8 + 7)
#define                                 BUF7_bit            _BIT_ACCESS(SSP1BUF,7)
// CM1CON0<C1HYS>
extern volatile __bit                   C1HYS               __at(0x891);	// @ (0x112 * 8 + 1)
#define                                 C1HYS_bit           _BIT_ACCESS(CM1CON0,1)
// PIE2<C1IE>
extern volatile __bit                   C1IE                __at(0x495);	// @ (0x92 * 8 + 5)
#define                                 C1IE_bit            _BIT_ACCESS(PIE2,5)
// PIR2<C1IF>
extern volatile __bit                   C1IF                __at(0x95);	// @ (0x12 * 8 + 5)
#define                                 C1IF_bit            _BIT_ACCESS(PIR2,5)
// CM1CON1<C1INTN>
extern volatile __bit                   C1INTN              __at(0x898);	// @ (0x113 * 8 + 0)
#define                                 C1INTN_bit          _BIT_ACCESS(CM1CON1,0)
// CM1CON1<C1INTP>
extern volatile __bit                   C1INTP              __at(0x899);	// @ (0x113 * 8 + 1)
#define                                 C1INTP_bit          _BIT_ACCESS(CM1CON1,1)
// CM1NSEL<C1NCH0>
extern volatile __bit                   C1NCH0              __at(0x8A0);	// @ (0x114 * 8 + 0)
#define                                 C1NCH0_bit          _BIT_ACCESS(CM1NSEL,0)
// CM1NSEL<C1NCH1>
extern volatile __bit                   C1NCH1              __at(0x8A1);	// @ (0x114 * 8 + 1)
#define                                 C1NCH1_bit          _BIT_ACCESS(CM1NSEL,1)
// CM1NSEL<C1NCH2>
extern volatile __bit                   C1NCH2              __at(0x8A2);	// @ (0x114 * 8 + 2)
#define                                 C1NCH2_bit          _BIT_ACCESS(CM1NSEL,2)
// CM1NSEL<C1NCH3>
extern volatile __bit                   C1NCH3              __at(0x8A3);	// @ (0x114 * 8 + 3)
#define                                 C1NCH3_bit          _BIT_ACCESS(CM1NSEL,3)
// CM1CON0<C1ON>
extern volatile __bit                   C1ON                __at(0x897);	// @ (0x112 * 8 + 7)
#define                                 C1ON_bit            _BIT_ACCESS(CM1CON0,7)
// CM1CON0<C1OUT>
extern volatile __bit                   C1OUT               __at(0x896);	// @ (0x112 * 8 + 6)
#define                                 C1OUT_bit           _BIT_ACCESS(CM1CON0,6)
// CM1PSEL<C1PCH0>
extern volatile __bit                   C1PCH0              __at(0x8A8);	// @ (0x115 * 8 + 0)
#define                                 C1PCH0_bit          _BIT_ACCESS(CM1PSEL,0)
// CM1PSEL<C1PCH1>
extern volatile __bit                   C1PCH1              __at(0x8A9);	// @ (0x115 * 8 + 1)
#define                                 C1PCH1_bit          _BIT_ACCESS(CM1PSEL,1)
// CM1PSEL<C1PCH2>
extern volatile __bit                   C1PCH2              __at(0x8AA);	// @ (0x115 * 8 + 2)
#define                                 C1PCH2_bit          _BIT_ACCESS(CM1PSEL,2)
// CM1PSEL<C1PCH3>
extern volatile __bit                   C1PCH3              __at(0x8AB);	// @ (0x115 * 8 + 3)
#define                                 C1PCH3_bit          _BIT_ACCESS(CM1PSEL,3)
// CM1CON0<C1POL>
extern volatile __bit                   C1POL               __at(0x894);	// @ (0x112 * 8 + 4)
#define                                 C1POL_bit           _BIT_ACCESS(CM1CON0,4)
// CM1CON0<C1SP>
extern volatile __bit                   C1SP                __at(0x892);	// @ (0x112 * 8 + 2)
#define                                 C1SP_bit            _BIT_ACCESS(CM1CON0,2)
// CM1CON0<C1SYNC>
extern volatile __bit                   C1SYNC              __at(0x890);	// @ (0x112 * 8 + 0)
#define                                 C1SYNC_bit          _BIT_ACCESS(CM1CON0,0)
// CCPTMRS1<C1TSEL0>
extern volatile __bit                   C1TSEL0             __at(0x14F0);	// @ (0x29E * 8 + 0)
#define                                 C1TSEL0_bit         _BIT_ACCESS(CCPTMRS1,0)
// CCPTMRS1<C1TSEL1>
extern volatile __bit                   C1TSEL1             __at(0x14F1);	// @ (0x29E * 8 + 1)
#define                                 C1TSEL1_bit         _BIT_ACCESS(CCPTMRS1,1)
// CM1CON0<C1ZLF>
extern volatile __bit                   C1ZLF               __at(0x893);	// @ (0x112 * 8 + 3)
#define                                 C1ZLF_bit           _BIT_ACCESS(CM1CON0,3)
// CM2CON0<C2HYS>
extern volatile __bit                   C2HYS               __at(0x8B1);	// @ (0x116 * 8 + 1)
#define                                 C2HYS_bit           _BIT_ACCESS(CM2CON0,1)
// PIE2<C2IE>
extern volatile __bit                   C2IE                __at(0x496);	// @ (0x92 * 8 + 6)
#define                                 C2IE_bit            _BIT_ACCESS(PIE2,6)
// PIR2<C2IF>
extern volatile __bit                   C2IF                __at(0x96);	// @ (0x12 * 8 + 6)
#define                                 C2IF_bit            _BIT_ACCESS(PIR2,6)
// CM2CON1<C2INTN>
extern volatile __bit                   C2INTN              __at(0x8B8);	// @ (0x117 * 8 + 0)
#define                                 C2INTN_bit          _BIT_ACCESS(CM2CON1,0)
// CM2CON1<C2INTP>
extern volatile __bit                   C2INTP              __at(0x8B9);	// @ (0x117 * 8 + 1)
#define                                 C2INTP_bit          _BIT_ACCESS(CM2CON1,1)
// CM2NSEL<C2NCH0>
extern volatile __bit                   C2NCH0              __at(0x8C0);	// @ (0x118 * 8 + 0)
#define                                 C2NCH0_bit          _BIT_ACCESS(CM2NSEL,0)
// CM2NSEL<C2NCH1>
extern volatile __bit                   C2NCH1              __at(0x8C1);	// @ (0x118 * 8 + 1)
#define                                 C2NCH1_bit          _BIT_ACCESS(CM2NSEL,1)
// CM2NSEL<C2NCH2>
extern volatile __bit                   C2NCH2              __at(0x8C2);	// @ (0x118 * 8 + 2)
#define                                 C2NCH2_bit          _BIT_ACCESS(CM2NSEL,2)
// CM2NSEL<C2NCH3>
extern volatile __bit                   C2NCH3              __at(0x8C3);	// @ (0x118 * 8 + 3)
#define                                 C2NCH3_bit          _BIT_ACCESS(CM2NSEL,3)
// CM2CON0<C2ON>
extern volatile __bit                   C2ON                __at(0x8B7);	// @ (0x116 * 8 + 7)
#define                                 C2ON_bit            _BIT_ACCESS(CM2CON0,7)
// CM2CON0<C2OUT>
extern volatile __bit                   C2OUT               __at(0x8B6);	// @ (0x116 * 8 + 6)
#define                                 C2OUT_bit           _BIT_ACCESS(CM2CON0,6)
// CM2PSEL<C2PCH0>
extern volatile __bit                   C2PCH0              __at(0x8C8);	// @ (0x119 * 8 + 0)
#define                                 C2PCH0_bit          _BIT_ACCESS(CM2PSEL,0)
// CM2PSEL<C2PCH1>
extern volatile __bit                   C2PCH1              __at(0x8C9);	// @ (0x119 * 8 + 1)
#define                                 C2PCH1_bit          _BIT_ACCESS(CM2PSEL,1)
// CM2PSEL<C2PCH2>
extern volatile __bit                   C2PCH2              __at(0x8CA);	// @ (0x119 * 8 + 2)
#define                                 C2PCH2_bit          _BIT_ACCESS(CM2PSEL,2)
// CM2PSEL<C2PCH3>
extern volatile __bit                   C2PCH3              __at(0x8CB);	// @ (0x119 * 8 + 3)
#define                                 C2PCH3_bit          _BIT_ACCESS(CM2PSEL,3)
// CM2CON0<C2POL>
extern volatile __bit                   C2POL               __at(0x8B4);	// @ (0x116 * 8 + 4)
#define                                 C2POL_bit           _BIT_ACCESS(CM2CON0,4)
// CM2CON0<C2SP>
extern volatile __bit                   C2SP                __at(0x8B2);	// @ (0x116 * 8 + 2)
#define                                 C2SP_bit            _BIT_ACCESS(CM2CON0,2)
// CM2CON0<C2SYNC>
extern volatile __bit                   C2SYNC              __at(0x8B0);	// @ (0x116 * 8 + 0)
#define                                 C2SYNC_bit          _BIT_ACCESS(CM2CON0,0)
// CCPTMRS1<C2TSEL0>
extern volatile __bit                   C2TSEL0             __at(0x14F2);	// @ (0x29E * 8 + 2)
#define                                 C2TSEL0_bit         _BIT_ACCESS(CCPTMRS1,2)
// CCPTMRS1<C2TSEL1>
extern volatile __bit                   C2TSEL1             __at(0x14F3);	// @ (0x29E * 8 + 3)
#define                                 C2TSEL1_bit         _BIT_ACCESS(CCPTMRS1,3)
// CM2CON0<C2ZLF>
extern volatile __bit                   C2ZLF               __at(0x8B3);	// @ (0x116 * 8 + 3)
#define                                 C2ZLF_bit           _BIT_ACCESS(CM2CON0,3)
// CM3CON0<C3HYS>
extern volatile __bit                   C3HYS               __at(0x8D1);	// @ (0x11A * 8 + 1)
#define                                 C3HYS_bit           _BIT_ACCESS(CM3CON0,1)
// PIE2<C3IE>
extern volatile __bit                   C3IE                __at(0x491);	// @ (0x92 * 8 + 1)
#define                                 C3IE_bit            _BIT_ACCESS(PIE2,1)
// PIR2<C3IF>
extern volatile __bit                   C3IF                __at(0x91);	// @ (0x12 * 8 + 1)
#define                                 C3IF_bit            _BIT_ACCESS(PIR2,1)
// CM3CON1<C3INTN>
extern volatile __bit                   C3INTN              __at(0x8D8);	// @ (0x11B * 8 + 0)
#define                                 C3INTN_bit          _BIT_ACCESS(CM3CON1,0)
// CM3CON1<C3INTP>
extern volatile __bit                   C3INTP              __at(0x8D9);	// @ (0x11B * 8 + 1)
#define                                 C3INTP_bit          _BIT_ACCESS(CM3CON1,1)
// CM3NSEL<C3NCH0>
extern volatile __bit                   C3NCH0              __at(0x8E0);	// @ (0x11C * 8 + 0)
#define                                 C3NCH0_bit          _BIT_ACCESS(CM3NSEL,0)
// CM3NSEL<C3NCH1>
extern volatile __bit                   C3NCH1              __at(0x8E1);	// @ (0x11C * 8 + 1)
#define                                 C3NCH1_bit          _BIT_ACCESS(CM3NSEL,1)
// CM3NSEL<C3NCH2>
extern volatile __bit                   C3NCH2              __at(0x8E2);	// @ (0x11C * 8 + 2)
#define                                 C3NCH2_bit          _BIT_ACCESS(CM3NSEL,2)
// CM3NSEL<C3NCH3>
extern volatile __bit                   C3NCH3              __at(0x8E3);	// @ (0x11C * 8 + 3)
#define                                 C3NCH3_bit          _BIT_ACCESS(CM3NSEL,3)
// CM3CON0<C3ON>
extern volatile __bit                   C3ON                __at(0x8D7);	// @ (0x11A * 8 + 7)
#define                                 C3ON_bit            _BIT_ACCESS(CM3CON0,7)
// CM3CON0<C3OUT>
extern volatile __bit                   C3OUT               __at(0x8D6);	// @ (0x11A * 8 + 6)
#define                                 C3OUT_bit           _BIT_ACCESS(CM3CON0,6)
// CM3PSEL<C3PCH0>
extern volatile __bit                   C3PCH0              __at(0x8E8);	// @ (0x11D * 8 + 0)
#define                                 C3PCH0_bit          _BIT_ACCESS(CM3PSEL,0)
// CM3PSEL<C3PCH1>
extern volatile __bit                   C3PCH1              __at(0x8E9);	// @ (0x11D * 8 + 1)
#define                                 C3PCH1_bit          _BIT_ACCESS(CM3PSEL,1)
// CM3PSEL<C3PCH2>
extern volatile __bit                   C3PCH2              __at(0x8EA);	// @ (0x11D * 8 + 2)
#define                                 C3PCH2_bit          _BIT_ACCESS(CM3PSEL,2)
// CM3PSEL<C3PCH3>
extern volatile __bit                   C3PCH3              __at(0x8EB);	// @ (0x11D * 8 + 3)
#define                                 C3PCH3_bit          _BIT_ACCESS(CM3PSEL,3)
// CM3CON0<C3POL>
extern volatile __bit                   C3POL               __at(0x8D4);	// @ (0x11A * 8 + 4)
#define                                 C3POL_bit           _BIT_ACCESS(CM3CON0,4)
// CM3CON0<C3SP>
extern volatile __bit                   C3SP                __at(0x8D2);	// @ (0x11A * 8 + 2)
#define                                 C3SP_bit            _BIT_ACCESS(CM3CON0,2)
// CM3CON0<C3SYNC>
extern volatile __bit                   C3SYNC              __at(0x8D0);	// @ (0x11A * 8 + 0)
#define                                 C3SYNC_bit          _BIT_ACCESS(CM3CON0,0)
// CM3CON0<C3ZLF>
extern volatile __bit                   C3ZLF               __at(0x8D3);	// @ (0x11A * 8 + 3)
#define                                 C3ZLF_bit           _BIT_ACCESS(CM3CON0,3)
// CM4CON0<C4HYS>
extern volatile __bit                   C4HYS               __at(0x4861);	// @ (0x90C * 8 + 1)
#define                                 C4HYS_bit           _BIT_ACCESS(CM4CON0,1)
// PIE2<C4IE>
extern volatile __bit                   C4IE                __at(0x492);	// @ (0x92 * 8 + 2)
#define                                 C4IE_bit            _BIT_ACCESS(PIE2,2)
// PIR2<C4IF>
extern volatile __bit                   C4IF                __at(0x92);	// @ (0x12 * 8 + 2)
#define                                 C4IF_bit            _BIT_ACCESS(PIR2,2)
// CM4CON1<C4INTN>
extern volatile __bit                   C4INTN              __at(0x4868);	// @ (0x90D * 8 + 0)
#define                                 C4INTN_bit          _BIT_ACCESS(CM4CON1,0)
// CM4CON1<C4INTP>
extern volatile __bit                   C4INTP              __at(0x4869);	// @ (0x90D * 8 + 1)
#define                                 C4INTP_bit          _BIT_ACCESS(CM4CON1,1)
// CM4NSEL<C4NCH0>
extern volatile __bit                   C4NCH0              __at(0x4870);	// @ (0x90E * 8 + 0)
#define                                 C4NCH0_bit          _BIT_ACCESS(CM4NSEL,0)
// CM4NSEL<C4NCH1>
extern volatile __bit                   C4NCH1              __at(0x4871);	// @ (0x90E * 8 + 1)
#define                                 C4NCH1_bit          _BIT_ACCESS(CM4NSEL,1)
// CM4NSEL<C4NCH2>
extern volatile __bit                   C4NCH2              __at(0x4872);	// @ (0x90E * 8 + 2)
#define                                 C4NCH2_bit          _BIT_ACCESS(CM4NSEL,2)
// CM4NSEL<C4NCH3>
extern volatile __bit                   C4NCH3              __at(0x4873);	// @ (0x90E * 8 + 3)
#define                                 C4NCH3_bit          _BIT_ACCESS(CM4NSEL,3)
// CM4CON0<C4ON>
extern volatile __bit                   C4ON                __at(0x4867);	// @ (0x90C * 8 + 7)
#define                                 C4ON_bit            _BIT_ACCESS(CM4CON0,7)
// CM4CON0<C4OUT>
extern volatile __bit                   C4OUT               __at(0x4866);	// @ (0x90C * 8 + 6)
#define                                 C4OUT_bit           _BIT_ACCESS(CM4CON0,6)
// CM4PSEL<C4PCH0>
extern volatile __bit                   C4PCH0              __at(0x4878);	// @ (0x90F * 8 + 0)
#define                                 C4PCH0_bit          _BIT_ACCESS(CM4PSEL,0)
// CM4PSEL<C4PCH1>
extern volatile __bit                   C4PCH1              __at(0x4879);	// @ (0x90F * 8 + 1)
#define                                 C4PCH1_bit          _BIT_ACCESS(CM4PSEL,1)
// CM4PSEL<C4PCH2>
extern volatile __bit                   C4PCH2              __at(0x487A);	// @ (0x90F * 8 + 2)
#define                                 C4PCH2_bit          _BIT_ACCESS(CM4PSEL,2)
// CM4PSEL<C4PCH3>
extern volatile __bit                   C4PCH3              __at(0x487B);	// @ (0x90F * 8 + 3)
#define                                 C4PCH3_bit          _BIT_ACCESS(CM4PSEL,3)
// CM4CON0<C4POL>
extern volatile __bit                   C4POL               __at(0x4864);	// @ (0x90C * 8 + 4)
#define                                 C4POL_bit           _BIT_ACCESS(CM4CON0,4)
// CM4CON0<C4SP>
extern volatile __bit                   C4SP                __at(0x4862);	// @ (0x90C * 8 + 2)
#define                                 C4SP_bit            _BIT_ACCESS(CM4CON0,2)
// CM4CON0<C4SYNC>
extern volatile __bit                   C4SYNC              __at(0x4860);	// @ (0x90C * 8 + 0)
#define                                 C4SYNC_bit          _BIT_ACCESS(CM4CON0,0)
// CM4CON0<C4ZLF>
extern volatile __bit                   C4ZLF               __at(0x4863);	// @ (0x90C * 8 + 3)
#define                                 C4ZLF_bit           _BIT_ACCESS(CM4CON0,3)
// CM5CON0<C5HYS>
extern volatile __bit                   C5HYS               __at(0x4881);	// @ (0x910 * 8 + 1)
#define                                 C5HYS_bit           _BIT_ACCESS(CM5CON0,1)
// PIE5<C5IE>
extern volatile __bit                   C5IE                __at(0x4A8);	// @ (0x95 * 8 + 0)
#define                                 C5IE_bit            _BIT_ACCESS(PIE5,0)
// PIR5<C5IF>
extern volatile __bit                   C5IF                __at(0xA8);	// @ (0x15 * 8 + 0)
#define                                 C5IF_bit            _BIT_ACCESS(PIR5,0)
// CM5CON1<C5INTN>
extern volatile __bit                   C5INTN              __at(0x4888);	// @ (0x911 * 8 + 0)
#define                                 C5INTN_bit          _BIT_ACCESS(CM5CON1,0)
// CM5CON1<C5INTP>
extern volatile __bit                   C5INTP              __at(0x4889);	// @ (0x911 * 8 + 1)
#define                                 C5INTP_bit          _BIT_ACCESS(CM5CON1,1)
// CM5NSEL<C5NCH0>
extern volatile __bit                   C5NCH0              __at(0x4890);	// @ (0x912 * 8 + 0)
#define                                 C5NCH0_bit          _BIT_ACCESS(CM5NSEL,0)
// CM5NSEL<C5NCH1>
extern volatile __bit                   C5NCH1              __at(0x4891);	// @ (0x912 * 8 + 1)
#define                                 C5NCH1_bit          _BIT_ACCESS(CM5NSEL,1)
// CM5NSEL<C5NCH2>
extern volatile __bit                   C5NCH2              __at(0x4892);	// @ (0x912 * 8 + 2)
#define                                 C5NCH2_bit          _BIT_ACCESS(CM5NSEL,2)
// CM5NSEL<C5NCH3>
extern volatile __bit                   C5NCH3              __at(0x4893);	// @ (0x912 * 8 + 3)
#define                                 C5NCH3_bit          _BIT_ACCESS(CM5NSEL,3)
// CM5CON0<C5ON>
extern volatile __bit                   C5ON                __at(0x4887);	// @ (0x910 * 8 + 7)
#define                                 C5ON_bit            _BIT_ACCESS(CM5CON0,7)
// CM5CON0<C5OUT>
extern volatile __bit                   C5OUT               __at(0x4886);	// @ (0x910 * 8 + 6)
#define                                 C5OUT_bit           _BIT_ACCESS(CM5CON0,6)
// CM5PSEL<C5PCH0>
extern volatile __bit                   C5PCH0              __at(0x4898);	// @ (0x913 * 8 + 0)
#define                                 C5PCH0_bit          _BIT_ACCESS(CM5PSEL,0)
// CM5PSEL<C5PCH1>
extern volatile __bit                   C5PCH1              __at(0x4899);	// @ (0x913 * 8 + 1)
#define                                 C5PCH1_bit          _BIT_ACCESS(CM5PSEL,1)
// CM5PSEL<C5PCH2>
extern volatile __bit                   C5PCH2              __at(0x489A);	// @ (0x913 * 8 + 2)
#define                                 C5PCH2_bit          _BIT_ACCESS(CM5PSEL,2)
// CM5PSEL<C5PCH3>
extern volatile __bit                   C5PCH3              __at(0x489B);	// @ (0x913 * 8 + 3)
#define                                 C5PCH3_bit          _BIT_ACCESS(CM5PSEL,3)
// CM5CON0<C5POL>
extern volatile __bit                   C5POL               __at(0x4884);	// @ (0x910 * 8 + 4)
#define                                 C5POL_bit           _BIT_ACCESS(CM5CON0,4)
// CM5CON0<C5SP>
extern volatile __bit                   C5SP                __at(0x4882);	// @ (0x910 * 8 + 2)
#define                                 C5SP_bit            _BIT_ACCESS(CM5CON0,2)
// CM5CON0<C5SYNC>
extern volatile __bit                   C5SYNC              __at(0x4880);	// @ (0x910 * 8 + 0)
#define                                 C5SYNC_bit          _BIT_ACCESS(CM5CON0,0)
// CM5CON0<C5ZLF>
extern volatile __bit                   C5ZLF               __at(0x4883);	// @ (0x910 * 8 + 3)
#define                                 C5ZLF_bit           _BIT_ACCESS(CM5CON0,3)
// CM6CON0<C6HYS>
extern volatile __bit                   C6HYS               __at(0x48A1);	// @ (0x914 * 8 + 1)
#define                                 C6HYS_bit           _BIT_ACCESS(CM6CON0,1)
// PIE5<C6IE>
extern volatile __bit                   C6IE                __at(0x4A9);	// @ (0x95 * 8 + 1)
#define                                 C6IE_bit            _BIT_ACCESS(PIE5,1)
// PIR5<C6IF>
extern volatile __bit                   C6IF                __at(0xA9);	// @ (0x15 * 8 + 1)
#define                                 C6IF_bit            _BIT_ACCESS(PIR5,1)
// CM6CON1<C6INTN>
extern volatile __bit                   C6INTN              __at(0x48A8);	// @ (0x915 * 8 + 0)
#define                                 C6INTN_bit          _BIT_ACCESS(CM6CON1,0)
// CM6CON1<C6INTP>
extern volatile __bit                   C6INTP              __at(0x48A9);	// @ (0x915 * 8 + 1)
#define                                 C6INTP_bit          _BIT_ACCESS(CM6CON1,1)
// CM6NSEL<C6NCH0>
extern volatile __bit                   C6NCH0              __at(0x48B0);	// @ (0x916 * 8 + 0)
#define                                 C6NCH0_bit          _BIT_ACCESS(CM6NSEL,0)
// CM6NSEL<C6NCH1>
extern volatile __bit                   C6NCH1              __at(0x48B1);	// @ (0x916 * 8 + 1)
#define                                 C6NCH1_bit          _BIT_ACCESS(CM6NSEL,1)
// CM6NSEL<C6NCH2>
extern volatile __bit                   C6NCH2              __at(0x48B2);	// @ (0x916 * 8 + 2)
#define                                 C6NCH2_bit          _BIT_ACCESS(CM6NSEL,2)
// CM6NSEL<C6NCH3>
extern volatile __bit                   C6NCH3              __at(0x48B3);	// @ (0x916 * 8 + 3)
#define                                 C6NCH3_bit          _BIT_ACCESS(CM6NSEL,3)
// CM6CON0<C6ON>
extern volatile __bit                   C6ON                __at(0x48A7);	// @ (0x914 * 8 + 7)
#define                                 C6ON_bit            _BIT_ACCESS(CM6CON0,7)
// CM6CON0<C6OUT>
extern volatile __bit                   C6OUT               __at(0x48A6);	// @ (0x914 * 8 + 6)
#define                                 C6OUT_bit           _BIT_ACCESS(CM6CON0,6)
// CM6PSEL<C6PCH0>
extern volatile __bit                   C6PCH0              __at(0x48B8);	// @ (0x917 * 8 + 0)
#define                                 C6PCH0_bit          _BIT_ACCESS(CM6PSEL,0)
// CM6PSEL<C6PCH1>
extern volatile __bit                   C6PCH1              __at(0x48B9);	// @ (0x917 * 8 + 1)
#define                                 C6PCH1_bit          _BIT_ACCESS(CM6PSEL,1)
// CM6PSEL<C6PCH2>
extern volatile __bit                   C6PCH2              __at(0x48BA);	// @ (0x917 * 8 + 2)
#define                                 C6PCH2_bit          _BIT_ACCESS(CM6PSEL,2)
// CM6PSEL<C6PCH3>
extern volatile __bit                   C6PCH3              __at(0x48BB);	// @ (0x917 * 8 + 3)
#define                                 C6PCH3_bit          _BIT_ACCESS(CM6PSEL,3)
// CM6CON0<C6POL>
extern volatile __bit                   C6POL               __at(0x48A4);	// @ (0x914 * 8 + 4)
#define                                 C6POL_bit           _BIT_ACCESS(CM6CON0,4)
// CM6CON0<C6SP>
extern volatile __bit                   C6SP                __at(0x48A2);	// @ (0x914 * 8 + 2)
#define                                 C6SP_bit            _BIT_ACCESS(CM6CON0,2)
// CM6CON0<C6SYNC>
extern volatile __bit                   C6SYNC              __at(0x48A0);	// @ (0x914 * 8 + 0)
#define                                 C6SYNC_bit          _BIT_ACCESS(CM6CON0,0)
// CM6CON0<C6ZLF>
extern volatile __bit                   C6ZLF               __at(0x48A3);	// @ (0x914 * 8 + 3)
#define                                 C6ZLF_bit           _BIT_ACCESS(CM6CON0,3)
// CM7CON0<C7HYS>
extern volatile __bit                   C7HYS               __at(0x48C1);	// @ (0x918 * 8 + 1)
#define                                 C7HYS_bit           _BIT_ACCESS(CM7CON0,1)
// PIE5<C7IE>
extern volatile __bit                   C7IE                __at(0x4AA);	// @ (0x95 * 8 + 2)
#define                                 C7IE_bit            _BIT_ACCESS(PIE5,2)
// PIR5<C7IF>
extern volatile __bit                   C7IF                __at(0xAA);	// @ (0x15 * 8 + 2)
#define                                 C7IF_bit            _BIT_ACCESS(PIR5,2)
// CM7CON1<C7INTN>
extern volatile __bit                   C7INTN              __at(0x48C8);	// @ (0x919 * 8 + 0)
#define                                 C7INTN_bit          _BIT_ACCESS(CM7CON1,0)
// CM7CON1<C7INTP>
extern volatile __bit                   C7INTP              __at(0x48C9);	// @ (0x919 * 8 + 1)
#define                                 C7INTP_bit          _BIT_ACCESS(CM7CON1,1)
// CM7NSEL<C7NCH0>
extern volatile __bit                   C7NCH0              __at(0x48D0);	// @ (0x91A * 8 + 0)
#define                                 C7NCH0_bit          _BIT_ACCESS(CM7NSEL,0)
// CM7NSEL<C7NCH1>
extern volatile __bit                   C7NCH1              __at(0x48D1);	// @ (0x91A * 8 + 1)
#define                                 C7NCH1_bit          _BIT_ACCESS(CM7NSEL,1)
// CM7NSEL<C7NCH2>
extern volatile __bit                   C7NCH2              __at(0x48D2);	// @ (0x91A * 8 + 2)
#define                                 C7NCH2_bit          _BIT_ACCESS(CM7NSEL,2)
// CM7NSEL<C7NCH3>
extern volatile __bit                   C7NCH3              __at(0x48D3);	// @ (0x91A * 8 + 3)
#define                                 C7NCH3_bit          _BIT_ACCESS(CM7NSEL,3)
// CM7CON0<C7ON>
extern volatile __bit                   C7ON                __at(0x48C7);	// @ (0x918 * 8 + 7)
#define                                 C7ON_bit            _BIT_ACCESS(CM7CON0,7)
// CM7CON0<C7OUT>
extern volatile __bit                   C7OUT               __at(0x48C6);	// @ (0x918 * 8 + 6)
#define                                 C7OUT_bit           _BIT_ACCESS(CM7CON0,6)
// CM7PSEL<C7PCH0>
extern volatile __bit                   C7PCH0              __at(0x48D8);	// @ (0x91B * 8 + 0)
#define                                 C7PCH0_bit          _BIT_ACCESS(CM7PSEL,0)
// CM7PSEL<C7PCH1>
extern volatile __bit                   C7PCH1              __at(0x48D9);	// @ (0x91B * 8 + 1)
#define                                 C7PCH1_bit          _BIT_ACCESS(CM7PSEL,1)
// CM7PSEL<C7PCH2>
extern volatile __bit                   C7PCH2              __at(0x48DA);	// @ (0x91B * 8 + 2)
#define                                 C7PCH2_bit          _BIT_ACCESS(CM7PSEL,2)
// CM7PSEL<C7PCH3>
extern volatile __bit                   C7PCH3              __at(0x48DB);	// @ (0x91B * 8 + 3)
#define                                 C7PCH3_bit          _BIT_ACCESS(CM7PSEL,3)
// CM7CON0<C7POL>
extern volatile __bit                   C7POL               __at(0x48C4);	// @ (0x918 * 8 + 4)
#define                                 C7POL_bit           _BIT_ACCESS(CM7CON0,4)
// CM7CON0<C7SP>
extern volatile __bit                   C7SP                __at(0x48C2);	// @ (0x918 * 8 + 2)
#define                                 C7SP_bit            _BIT_ACCESS(CM7CON0,2)
// CM7CON0<C7SYNC>
extern volatile __bit                   C7SYNC              __at(0x48C0);	// @ (0x918 * 8 + 0)
#define                                 C7SYNC_bit          _BIT_ACCESS(CM7CON0,0)
// CCPTMRS1<C7TSEL0>
extern volatile __bit                   C7TSEL0             __at(0x14F4);	// @ (0x29E * 8 + 4)
#define                                 C7TSEL0_bit         _BIT_ACCESS(CCPTMRS1,4)
// CCPTMRS1<C7TSEL1>
extern volatile __bit                   C7TSEL1             __at(0x14F5);	// @ (0x29E * 8 + 5)
#define                                 C7TSEL1_bit         _BIT_ACCESS(CCPTMRS1,5)
// CM7CON0<C7ZLF>
extern volatile __bit                   C7ZLF               __at(0x48C3);	// @ (0x918 * 8 + 3)
#define                                 C7ZLF_bit           _BIT_ACCESS(CM7CON0,3)
// CM8CON0<C8HYS>
extern volatile __bit                   C8HYS               __at(0x48E1);	// @ (0x91C * 8 + 1)
#define                                 C8HYS_bit           _BIT_ACCESS(CM8CON0,1)
// PIE5<C8IE>
extern volatile __bit                   C8IE                __at(0x4AB);	// @ (0x95 * 8 + 3)
#define                                 C8IE_bit            _BIT_ACCESS(PIE5,3)
// PIR5<C8IF>
extern volatile __bit                   C8IF                __at(0xAB);	// @ (0x15 * 8 + 3)
#define                                 C8IF_bit            _BIT_ACCESS(PIR5,3)
// CM8CON1<C8INTN>
extern volatile __bit                   C8INTN              __at(0x48E8);	// @ (0x91D * 8 + 0)
#define                                 C8INTN_bit          _BIT_ACCESS(CM8CON1,0)
// CM8CON1<C8INTP>
extern volatile __bit                   C8INTP              __at(0x48E9);	// @ (0x91D * 8 + 1)
#define                                 C8INTP_bit          _BIT_ACCESS(CM8CON1,1)
// CM8NSEL<C8NCH0>
extern volatile __bit                   C8NCH0              __at(0x48F0);	// @ (0x91E * 8 + 0)
#define                                 C8NCH0_bit          _BIT_ACCESS(CM8NSEL,0)
// CM8NSEL<C8NCH1>
extern volatile __bit                   C8NCH1              __at(0x48F1);	// @ (0x91E * 8 + 1)
#define                                 C8NCH1_bit          _BIT_ACCESS(CM8NSEL,1)
// CM8NSEL<C8NCH2>
extern volatile __bit                   C8NCH2              __at(0x48F2);	// @ (0x91E * 8 + 2)
#define                                 C8NCH2_bit          _BIT_ACCESS(CM8NSEL,2)
// CM8NSEL<C8NCH3>
extern volatile __bit                   C8NCH3              __at(0x48F3);	// @ (0x91E * 8 + 3)
#define                                 C8NCH3_bit          _BIT_ACCESS(CM8NSEL,3)
// CM8CON0<C8ON>
extern volatile __bit                   C8ON                __at(0x48E7);	// @ (0x91C * 8 + 7)
#define                                 C8ON_bit            _BIT_ACCESS(CM8CON0,7)
// CM8CON0<C8OUT>
extern volatile __bit                   C8OUT               __at(0x48E6);	// @ (0x91C * 8 + 6)
#define                                 C8OUT_bit           _BIT_ACCESS(CM8CON0,6)
// CM8PSEL<C8PCH0>
extern volatile __bit                   C8PCH0              __at(0x48F8);	// @ (0x91F * 8 + 0)
#define                                 C8PCH0_bit          _BIT_ACCESS(CM8PSEL,0)
// CM8PSEL<C8PCH1>
extern volatile __bit                   C8PCH1              __at(0x48F9);	// @ (0x91F * 8 + 1)
#define                                 C8PCH1_bit          _BIT_ACCESS(CM8PSEL,1)
// CM8PSEL<C8PCH2>
extern volatile __bit                   C8PCH2              __at(0x48FA);	// @ (0x91F * 8 + 2)
#define                                 C8PCH2_bit          _BIT_ACCESS(CM8PSEL,2)
// CM8PSEL<C8PCH3>
extern volatile __bit                   C8PCH3              __at(0x48FB);	// @ (0x91F * 8 + 3)
#define                                 C8PCH3_bit          _BIT_ACCESS(CM8PSEL,3)
// CM8CON0<C8POL>
extern volatile __bit                   C8POL               __at(0x48E4);	// @ (0x91C * 8 + 4)
#define                                 C8POL_bit           _BIT_ACCESS(CM8CON0,4)
// CM8CON0<C8SP>
extern volatile __bit                   C8SP                __at(0x48E2);	// @ (0x91C * 8 + 2)
#define                                 C8SP_bit            _BIT_ACCESS(CM8CON0,2)
// CM8CON0<C8SYNC>
extern volatile __bit                   C8SYNC              __at(0x48E0);	// @ (0x91C * 8 + 0)
#define                                 C8SYNC_bit          _BIT_ACCESS(CM8CON0,0)
// CM8CON0<C8ZLF>
extern volatile __bit                   C8ZLF               __at(0x48E3);	// @ (0x91C * 8 + 3)
#define                                 C8ZLF_bit           _BIT_ACCESS(CM8CON0,3)
// STATUS<CARRY>
extern volatile __bit                   CARRY               __at(0x18);	// @ (0x3 * 8 + 0)
#define                                 CARRY_bit           _BIT_ACCESS(STATUS,0)
// CCP1CAP<CCP1CTS0>
extern volatile __bit                   CCP1CTS0            __at(0x14A0);	// @ (0x294 * 8 + 0)
#define                                 CCP1CTS0_bit        _BIT_ACCESS(CCP1CAP,0)
// CCP1CAP<CCP1CTS1>
extern volatile __bit                   CCP1CTS1            __at(0x14A1);	// @ (0x294 * 8 + 1)
#define                                 CCP1CTS1_bit        _BIT_ACCESS(CCP1CAP,1)
// CCP1CAP<CCP1CTS2>
extern volatile __bit                   CCP1CTS2            __at(0x14A2);	// @ (0x294 * 8 + 2)
#define                                 CCP1CTS2_bit        _BIT_ACCESS(CCP1CAP,2)
// CCP1CAP<CCP1CTS3>
extern volatile __bit                   CCP1CTS3            __at(0x14A3);	// @ (0x294 * 8 + 3)
#define                                 CCP1CTS3_bit        _BIT_ACCESS(CCP1CAP,3)
// CCP1CON<CCP1EN>
extern volatile __bit                   CCP1EN              __at(0x149F);	// @ (0x293 * 8 + 7)
#define                                 CCP1EN_bit          _BIT_ACCESS(CCP1CON,7)
// CCP1CON<CCP1FMT>
extern volatile __bit                   CCP1FMT             __at(0x149C);	// @ (0x293 * 8 + 4)
#define                                 CCP1FMT_bit         _BIT_ACCESS(CCP1CON,4)
// PIE1<CCP1IE>
extern volatile __bit                   CCP1IE              __at(0x48A);	// @ (0x91 * 8 + 2)
#define                                 CCP1IE_bit          _BIT_ACCESS(PIE1,2)
// PIR1<CCP1IF>
extern volatile __bit                   CCP1IF              __at(0x8A);	// @ (0x11 * 8 + 2)
#define                                 CCP1IF_bit          _BIT_ACCESS(PIR1,2)
// CCP1CON<CCP1MODE0>
extern volatile __bit                   CCP1MODE0           __at(0x1498);	// @ (0x293 * 8 + 0)
#define                                 CCP1MODE0_bit       _BIT_ACCESS(CCP1CON,0)
// CCP1CON<CCP1MODE1>
extern volatile __bit                   CCP1MODE1           __at(0x1499);	// @ (0x293 * 8 + 1)
#define                                 CCP1MODE1_bit       _BIT_ACCESS(CCP1CON,1)
// CCP1CON<CCP1MODE2>
extern volatile __bit                   CCP1MODE2           __at(0x149A);	// @ (0x293 * 8 + 2)
#define                                 CCP1MODE2_bit       _BIT_ACCESS(CCP1CON,2)
// CCP1CON<CCP1MODE3>
extern volatile __bit                   CCP1MODE3           __at(0x149B);	// @ (0x293 * 8 + 3)
#define                                 CCP1MODE3_bit       _BIT_ACCESS(CCP1CON,3)
// CCP1CON<CCP1OUT>
extern volatile __bit                   CCP1OUT             __at(0x149D);	// @ (0x293 * 8 + 5)
#define                                 CCP1OUT_bit         _BIT_ACCESS(CCP1CON,5)
// CCP2CAP<CCP2CTS0>
extern volatile __bit                   CCP2CTS0            __at(0x14C0);	// @ (0x298 * 8 + 0)
#define                                 CCP2CTS0_bit        _BIT_ACCESS(CCP2CAP,0)
// CCP2CAP<CCP2CTS1>
extern volatile __bit                   CCP2CTS1            __at(0x14C1);	// @ (0x298 * 8 + 1)
#define                                 CCP2CTS1_bit        _BIT_ACCESS(CCP2CAP,1)
// CCP2CAP<CCP2CTS2>
extern volatile __bit                   CCP2CTS2            __at(0x14C2);	// @ (0x298 * 8 + 2)
#define                                 CCP2CTS2_bit        _BIT_ACCESS(CCP2CAP,2)
// CCP2CAP<CCP2CTS3>
extern volatile __bit                   CCP2CTS3            __at(0x14C3);	// @ (0x298 * 8 + 3)
#define                                 CCP2CTS3_bit        _BIT_ACCESS(CCP2CAP,3)
// CCP2CON<CCP2EN>
extern volatile __bit                   CCP2EN              __at(0x14BF);	// @ (0x297 * 8 + 7)
#define                                 CCP2EN_bit          _BIT_ACCESS(CCP2CON,7)
// CCP2CON<CCP2FMT>
extern volatile __bit                   CCP2FMT             __at(0x14BC);	// @ (0x297 * 8 + 4)
#define                                 CCP2FMT_bit         _BIT_ACCESS(CCP2CON,4)
// PIE2<CCP2IE>
extern volatile __bit                   CCP2IE              __at(0x490);	// @ (0x92 * 8 + 0)
#define                                 CCP2IE_bit          _BIT_ACCESS(PIE2,0)
// PIR2<CCP2IF>
extern volatile __bit                   CCP2IF              __at(0x90);	// @ (0x12 * 8 + 0)
#define                                 CCP2IF_bit          _BIT_ACCESS(PIR2,0)
// CCP2CON<CCP2MODE0>
extern volatile __bit                   CCP2MODE0           __at(0x14B8);	// @ (0x297 * 8 + 0)
#define                                 CCP2MODE0_bit       _BIT_ACCESS(CCP2CON,0)
// CCP2CON<CCP2MODE1>
extern volatile __bit                   CCP2MODE1           __at(0x14B9);	// @ (0x297 * 8 + 1)
#define                                 CCP2MODE1_bit       _BIT_ACCESS(CCP2CON,1)
// CCP2CON<CCP2MODE2>
extern volatile __bit                   CCP2MODE2           __at(0x14BA);	// @ (0x297 * 8 + 2)
#define                                 CCP2MODE2_bit       _BIT_ACCESS(CCP2CON,2)
// CCP2CON<CCP2MODE3>
extern volatile __bit                   CCP2MODE3           __at(0x14BB);	// @ (0x297 * 8 + 3)
#define                                 CCP2MODE3_bit       _BIT_ACCESS(CCP2CON,3)
// CCP2CON<CCP2OUT>
extern volatile __bit                   CCP2OUT             __at(0x14BD);	// @ (0x297 * 8 + 5)
#define                                 CCP2OUT_bit         _BIT_ACCESS(CCP2CON,5)
// CCP7CAP<CCP7CTS0>
extern volatile __bit                   CCP7CTS0            __at(0x14E0);	// @ (0x29C * 8 + 0)
#define                                 CCP7CTS0_bit        _BIT_ACCESS(CCP7CAP,0)
// CCP7CAP<CCP7CTS1>
extern volatile __bit                   CCP7CTS1            __at(0x14E1);	// @ (0x29C * 8 + 1)
#define                                 CCP7CTS1_bit        _BIT_ACCESS(CCP7CAP,1)
// CCP7CAP<CCP7CTS2>
extern volatile __bit                   CCP7CTS2            __at(0x14E2);	// @ (0x29C * 8 + 2)
#define                                 CCP7CTS2_bit        _BIT_ACCESS(CCP7CAP,2)
// CCP7CAP<CCP7CTS3>
extern volatile __bit                   CCP7CTS3            __at(0x14E3);	// @ (0x29C * 8 + 3)
#define                                 CCP7CTS3_bit        _BIT_ACCESS(CCP7CAP,3)
// CCP7CON<CCP7EN>
extern volatile __bit                   CCP7EN              __at(0x14DF);	// @ (0x29B * 8 + 7)
#define                                 CCP7EN_bit          _BIT_ACCESS(CCP7CON,7)
// CCP7CON<CCP7FMT>
extern volatile __bit                   CCP7FMT             __at(0x14DC);	// @ (0x29B * 8 + 4)
#define                                 CCP7FMT_bit         _BIT_ACCESS(CCP7CON,4)
// PIE5<CCP7IE>
extern volatile __bit                   CCP7IE              __at(0x4AE);	// @ (0x95 * 8 + 6)
#define                                 CCP7IE_bit          _BIT_ACCESS(PIE5,6)
// PIR5<CCP7IF>
extern volatile __bit                   CCP7IF              __at(0xAE);	// @ (0x15 * 8 + 6)
#define                                 CCP7IF_bit          _BIT_ACCESS(PIR5,6)
// CCP7CON<CCP7MODE0>
extern volatile __bit                   CCP7MODE0           __at(0x14D8);	// @ (0x29B * 8 + 0)
#define                                 CCP7MODE0_bit       _BIT_ACCESS(CCP7CON,0)
// CCP7CON<CCP7MODE1>
extern volatile __bit                   CCP7MODE1           __at(0x14D9);	// @ (0x29B * 8 + 1)
#define                                 CCP7MODE1_bit       _BIT_ACCESS(CCP7CON,1)
// CCP7CON<CCP7MODE2>
extern volatile __bit                   CCP7MODE2           __at(0x14DA);	// @ (0x29B * 8 + 2)
#define                                 CCP7MODE2_bit       _BIT_ACCESS(CCP7CON,2)
// CCP7CON<CCP7MODE3>
extern volatile __bit                   CCP7MODE3           __at(0x14DB);	// @ (0x29B * 8 + 3)
#define                                 CCP7MODE3_bit       _BIT_ACCESS(CCP7CON,3)
// CCP7CON<CCP7OUT>
extern volatile __bit                   CCP7OUT             __at(0x14DD);	// @ (0x29B * 8 + 5)
#define                                 CCP7OUT_bit         _BIT_ACCESS(CCP7CON,5)
// CCP8CAP<CCP8CTS0>
extern volatile __bit                   CCP8CTS0            __at(0x18A0);	// @ (0x314 * 8 + 0)
#define                                 CCP8CTS0_bit        _BIT_ACCESS(CCP8CAP,0)
// CCP8CAP<CCP8CTS1>
extern volatile __bit                   CCP8CTS1            __at(0x18A1);	// @ (0x314 * 8 + 1)
#define                                 CCP8CTS1_bit        _BIT_ACCESS(CCP8CAP,1)
// CCP8CAP<CCP8CTS2>
extern volatile __bit                   CCP8CTS2            __at(0x18A2);	// @ (0x314 * 8 + 2)
#define                                 CCP8CTS2_bit        _BIT_ACCESS(CCP8CAP,2)
// CCP8CAP<CCP8CTS3>
extern volatile __bit                   CCP8CTS3            __at(0x18A3);	// @ (0x314 * 8 + 3)
#define                                 CCP8CTS3_bit        _BIT_ACCESS(CCP8CAP,3)
// CCP8CON<CCP8EN>
extern volatile __bit                   CCP8EN              __at(0x189F);	// @ (0x313 * 8 + 7)
#define                                 CCP8EN_bit          _BIT_ACCESS(CCP8CON,7)
// CCP8CON<CCP8FMT>
extern volatile __bit                   CCP8FMT             __at(0x189C);	// @ (0x313 * 8 + 4)
#define                                 CCP8FMT_bit         _BIT_ACCESS(CCP8CON,4)
// PIE5<CCP8IE>
extern volatile __bit                   CCP8IE              __at(0x4AF);	// @ (0x95 * 8 + 7)
#define                                 CCP8IE_bit          _BIT_ACCESS(PIE5,7)
// PIR5<CCP8IF>
extern volatile __bit                   CCP8IF              __at(0xAF);	// @ (0x15 * 8 + 7)
#define                                 CCP8IF_bit          _BIT_ACCESS(PIR5,7)
// CCP8CON<CCP8MODE0>
extern volatile __bit                   CCP8MODE0           __at(0x1898);	// @ (0x313 * 8 + 0)
#define                                 CCP8MODE0_bit       _BIT_ACCESS(CCP8CON,0)
// CCP8CON<CCP8MODE1>
extern volatile __bit                   CCP8MODE1           __at(0x1899);	// @ (0x313 * 8 + 1)
#define                                 CCP8MODE1_bit       _BIT_ACCESS(CCP8CON,1)
// CCP8CON<CCP8MODE2>
extern volatile __bit                   CCP8MODE2           __at(0x189A);	// @ (0x313 * 8 + 2)
#define                                 CCP8MODE2_bit       _BIT_ACCESS(CCP8CON,2)
// CCP8CON<CCP8MODE3>
extern volatile __bit                   CCP8MODE3           __at(0x189B);	// @ (0x313 * 8 + 3)
#define                                 CCP8MODE3_bit       _BIT_ACCESS(CCP8CON,3)
// CCP8CON<CCP8OUT>
extern volatile __bit                   CCP8OUT             __at(0x189D);	// @ (0x313 * 8 + 5)
#define                                 CCP8OUT_bit         _BIT_ACCESS(CCP8CON,5)
// PIE1<CCPIE>
extern volatile __bit                   CCPIE               __at(0x48A);	// @ (0x91 * 8 + 2)
#define                                 CCPIE_bit           _BIT_ACCESS(PIE1,2)
// PIR1<CCPIF>
extern volatile __bit                   CCPIF               __at(0x8A);	// @ (0x11 * 8 + 2)
#define                                 CCPIF_bit           _BIT_ACCESS(PIR1,2)
// PMCON1<CFGS>
extern volatile __bit                   CFGS                __at(0xCAE);	// @ (0x195 * 8 + 6)
#define                                 CFGS_bit            _BIT_ACCESS(PMCON1,6)
// SSP1STAT<CKE>
extern volatile __bit                   CKE                 __at(0x10A6);	// @ (0x214 * 8 + 6)
#define                                 CKE_bit             _BIT_ACCESS(SSP1STAT,6)
// SSP1CON1<CKP>
extern volatile __bit                   CKP                 __at(0x10AC);	// @ (0x215 * 8 + 4)
#define                                 CKP_bit             _BIT_ACCESS(SSP1CON1,4)
// PIE3<CLC1IE>
extern volatile __bit                   CLC1IE              __at(0x498);	// @ (0x93 * 8 + 0)
#define                                 CLC1IE_bit          _BIT_ACCESS(PIE3,0)
// PIR3<CLC1IF>
extern volatile __bit                   CLC1IF              __at(0x98);	// @ (0x13 * 8 + 0)
#define                                 CLC1IF_bit          _BIT_ACCESS(PIR3,0)
// PIE3<CLC2IE>
extern volatile __bit                   CLC2IE              __at(0x499);	// @ (0x93 * 8 + 1)
#define                                 CLC2IE_bit          _BIT_ACCESS(PIE3,1)
// PIR3<CLC2IF>
extern volatile __bit                   CLC2IF              __at(0x99);	// @ (0x13 * 8 + 1)
#define                                 CLC2IF_bit          _BIT_ACCESS(PIR3,1)
// PIE3<CLC3IE>
extern volatile __bit                   CLC3IE              __at(0x49A);	// @ (0x93 * 8 + 2)
#define                                 CLC3IE_bit          _BIT_ACCESS(PIE3,2)
// PIR3<CLC3IF>
extern volatile __bit                   CLC3IF              __at(0x9A);	// @ (0x13 * 8 + 2)
#define                                 CLC3IF_bit          _BIT_ACCESS(PIR3,2)
// PIE3<CLC4IE>
extern volatile __bit                   CLC4IE              __at(0x49B);	// @ (0x93 * 8 + 3)
#define                                 CLC4IE_bit          _BIT_ACCESS(PIE3,3)
// PIR3<CLC4IF>
extern volatile __bit                   CLC4IF              __at(0x9B);	// @ (0x13 * 8 + 3)
#define                                 CLC4IF_bit          _BIT_ACCESS(PIR3,3)
// PIR2<COG1IF>
extern volatile __bit                   COG1IF              __at(0x94);	// @ (0x12 * 8 + 4)
#define                                 COG1IF_bit          _BIT_ACCESS(PIR2,4)
// PIE3<COG2IE>
extern volatile __bit                   COG2IE              __at(0x49D);	// @ (0x93 * 8 + 5)
#define                                 COG2IE_bit          _BIT_ACCESS(PIE3,5)
// PIR3<COG2IF>
extern volatile __bit                   COG2IF              __at(0x9D);	// @ (0x13 * 8 + 5)
#define                                 COG2IF_bit          _BIT_ACCESS(PIR3,5)
// PIE5<COG3IE>
extern volatile __bit                   COG3IE              __at(0x4AC);	// @ (0x95 * 8 + 4)
#define                                 COG3IE_bit          _BIT_ACCESS(PIE5,4)
// PIR5<COG3IF>
extern volatile __bit                   COG3IF              __at(0xAC);	// @ (0x15 * 8 + 4)
#define                                 COG3IF_bit          _BIT_ACCESS(PIR5,4)
// PIE5<COG4IE>
extern volatile __bit                   COG4IE              __at(0x4AD);	// @ (0x95 * 8 + 5)
#define                                 COG4IE_bit          _BIT_ACCESS(PIE5,5)
// PIR5<COG4IF>
extern volatile __bit                   COG4IF              __at(0xAD);	// @ (0x15 * 8 + 5)
#define                                 COG4IF_bit          _BIT_ACCESS(PIR5,5)
// PIE2<COGIE>
extern volatile __bit                   COGIE               __at(0x494);	// @ (0x92 * 8 + 4)
#define                                 COGIE_bit           _BIT_ACCESS(PIE2,4)
// RC1STA<CREN>
extern volatile __bit                   CREN                __at(0xCEC);	// @ (0x19D * 8 + 4)
#define                                 CREN_bit            _BIT_ACCESS(RC1STA,4)
// TX1STA<CSRC>
extern volatile __bit                   CSRC                __at(0xCF7);	// @ (0x19E * 8 + 7)
#define                                 CSRC_bit            _BIT_ACCESS(TX1STA,7)
// STATUS_SHAD<C_SHAD>
extern volatile __bit                   C_SHAD              __at(0x7F20);	// @ (0xFE4 * 8 + 0)
#define                                 C_SHAD_bit          _BIT_ACCESS(STATUS_SHAD,0)
// DAC1CON0<DAC1EN>
extern volatile __bit                   DAC1EN              __at(0x2C77);	// @ (0x58E * 8 + 7)
#define                                 DAC1EN_bit          _BIT_ACCESS(DAC1CON0,7)
// DAC1CON0<DAC1FM>
extern volatile __bit                   DAC1FM              __at(0x2C76);	// @ (0x58E * 8 + 6)
#define                                 DAC1FM_bit          _BIT_ACCESS(DAC1CON0,6)
// DACLD<DAC1LD>
extern volatile __bit                   DAC1LD              __at(0x2C68);	// @ (0x58D * 8 + 0)
#define                                 DAC1LD_bit          _BIT_ACCESS(DACLD,0)
// DAC1CON0<DAC1NSS0>
extern volatile __bit                   DAC1NSS0            __at(0x2C70);	// @ (0x58E * 8 + 0)
#define                                 DAC1NSS0_bit        _BIT_ACCESS(DAC1CON0,0)
// DAC1CON0<DAC1NSS1>
extern volatile __bit                   DAC1NSS1            __at(0x2C71);	// @ (0x58E * 8 + 1)
#define                                 DAC1NSS1_bit        _BIT_ACCESS(DAC1CON0,1)
// DAC1CON0<DAC1OE1>
extern volatile __bit                   DAC1OE1             __at(0x2C75);	// @ (0x58E * 8 + 5)
#define                                 DAC1OE1_bit         _BIT_ACCESS(DAC1CON0,5)
// DAC1CON0<DAC1OE2>
extern volatile __bit                   DAC1OE2             __at(0x2C74);	// @ (0x58E * 8 + 4)
#define                                 DAC1OE2_bit         _BIT_ACCESS(DAC1CON0,4)
// DAC1CON0<DAC1PSS0>
extern volatile __bit                   DAC1PSS0            __at(0x2C72);	// @ (0x58E * 8 + 2)
#define                                 DAC1PSS0_bit        _BIT_ACCESS(DAC1CON0,2)
// DAC1CON0<DAC1PSS1>
extern volatile __bit                   DAC1PSS1            __at(0x2C73);	// @ (0x58E * 8 + 3)
#define                                 DAC1PSS1_bit        _BIT_ACCESS(DAC1CON0,3)
// DAC1REFL<DAC1R0>
extern volatile __bit                   DAC1R0              __at(0x2C78);	// @ (0x58F * 8 + 0)
#define                                 DAC1R0_bit          _BIT_ACCESS(DAC1REFL,0)
// DAC1REFL<DAC1R1>
extern volatile __bit                   DAC1R1              __at(0x2C79);	// @ (0x58F * 8 + 1)
#define                                 DAC1R1_bit          _BIT_ACCESS(DAC1REFL,1)
// DAC1REFH<DAC1R10>
extern volatile __bit                   DAC1R10             __at(0x2C82);	// @ (0x590 * 8 + 2)
#define                                 DAC1R10_bit         _BIT_ACCESS(DAC1REFH,2)
// DAC1REFH<DAC1R11>
extern volatile __bit                   DAC1R11             __at(0x2C83);	// @ (0x590 * 8 + 3)
#define                                 DAC1R11_bit         _BIT_ACCESS(DAC1REFH,3)
// DAC1REFH<DAC1R12>
extern volatile __bit                   DAC1R12             __at(0x2C84);	// @ (0x590 * 8 + 4)
#define                                 DAC1R12_bit         _BIT_ACCESS(DAC1REFH,4)
// DAC1REFH<DAC1R13>
extern volatile __bit                   DAC1R13             __at(0x2C85);	// @ (0x590 * 8 + 5)
#define                                 DAC1R13_bit         _BIT_ACCESS(DAC1REFH,5)
// DAC1REFH<DAC1R14>
extern volatile __bit                   DAC1R14             __at(0x2C86);	// @ (0x590 * 8 + 6)
#define                                 DAC1R14_bit         _BIT_ACCESS(DAC1REFH,6)
// DAC1REFH<DAC1R15>
extern volatile __bit                   DAC1R15             __at(0x2C87);	// @ (0x590 * 8 + 7)
#define                                 DAC1R15_bit         _BIT_ACCESS(DAC1REFH,7)
// DAC1REFL<DAC1R2>
extern volatile __bit                   DAC1R2              __at(0x2C7A);	// @ (0x58F * 8 + 2)
#define                                 DAC1R2_bit          _BIT_ACCESS(DAC1REFL,2)
// DAC1REFL<DAC1R3>
extern volatile __bit                   DAC1R3              __at(0x2C7B);	// @ (0x58F * 8 + 3)
#define                                 DAC1R3_bit          _BIT_ACCESS(DAC1REFL,3)
// DAC1REFL<DAC1R4>
extern volatile __bit                   DAC1R4              __at(0x2C7C);	// @ (0x58F * 8 + 4)
#define                                 DAC1R4_bit          _BIT_ACCESS(DAC1REFL,4)
// DAC1REFL<DAC1R5>
extern volatile __bit                   DAC1R5              __at(0x2C7D);	// @ (0x58F * 8 + 5)
#define                                 DAC1R5_bit          _BIT_ACCESS(DAC1REFL,5)
// DAC1REFL<DAC1R6>
extern volatile __bit                   DAC1R6              __at(0x2C7E);	// @ (0x58F * 8 + 6)
#define                                 DAC1R6_bit          _BIT_ACCESS(DAC1REFL,6)
// DAC1REFL<DAC1R7>
extern volatile __bit                   DAC1R7              __at(0x2C7F);	// @ (0x58F * 8 + 7)
#define                                 DAC1R7_bit          _BIT_ACCESS(DAC1REFL,7)
// DAC1REFH<DAC1R8>
extern volatile __bit                   DAC1R8              __at(0x2C80);	// @ (0x590 * 8 + 0)
#define                                 DAC1R8_bit          _BIT_ACCESS(DAC1REFH,0)
// DAC1REFH<DAC1R9>
extern volatile __bit                   DAC1R9              __at(0x2C81);	// @ (0x590 * 8 + 1)
#define                                 DAC1R9_bit          _BIT_ACCESS(DAC1REFH,1)
// DAC1REFL<DAC1REF0>
extern volatile __bit                   DAC1REF0            __at(0x2C78);	// @ (0x58F * 8 + 0)
#define                                 DAC1REF0_bit        _BIT_ACCESS(DAC1REFL,0)
// DAC1REFL<DAC1REF1>
extern volatile __bit                   DAC1REF1            __at(0x2C79);	// @ (0x58F * 8 + 1)
#define                                 DAC1REF1_bit        _BIT_ACCESS(DAC1REFL,1)
// DAC1REFH<DAC1REF10>
extern volatile __bit                   DAC1REF10           __at(0x2C82);	// @ (0x590 * 8 + 2)
#define                                 DAC1REF10_bit       _BIT_ACCESS(DAC1REFH,2)
// DAC1REFH<DAC1REF11>
extern volatile __bit                   DAC1REF11           __at(0x2C83);	// @ (0x590 * 8 + 3)
#define                                 DAC1REF11_bit       _BIT_ACCESS(DAC1REFH,3)
// DAC1REFH<DAC1REF12>
extern volatile __bit                   DAC1REF12           __at(0x2C84);	// @ (0x590 * 8 + 4)
#define                                 DAC1REF12_bit       _BIT_ACCESS(DAC1REFH,4)
// DAC1REFH<DAC1REF13>
extern volatile __bit                   DAC1REF13           __at(0x2C85);	// @ (0x590 * 8 + 5)
#define                                 DAC1REF13_bit       _BIT_ACCESS(DAC1REFH,5)
// DAC1REFH<DAC1REF14>
extern volatile __bit                   DAC1REF14           __at(0x2C86);	// @ (0x590 * 8 + 6)
#define                                 DAC1REF14_bit       _BIT_ACCESS(DAC1REFH,6)
// DAC1REFH<DAC1REF15>
extern volatile __bit                   DAC1REF15           __at(0x2C87);	// @ (0x590 * 8 + 7)
#define                                 DAC1REF15_bit       _BIT_ACCESS(DAC1REFH,7)
// DAC1REFL<DAC1REF2>
extern volatile __bit                   DAC1REF2            __at(0x2C7A);	// @ (0x58F * 8 + 2)
#define                                 DAC1REF2_bit        _BIT_ACCESS(DAC1REFL,2)
// DAC1REFL<DAC1REF3>
extern volatile __bit                   DAC1REF3            __at(0x2C7B);	// @ (0x58F * 8 + 3)
#define                                 DAC1REF3_bit        _BIT_ACCESS(DAC1REFL,3)
// DAC1REFL<DAC1REF4>
extern volatile __bit                   DAC1REF4            __at(0x2C7C);	// @ (0x58F * 8 + 4)
#define                                 DAC1REF4_bit        _BIT_ACCESS(DAC1REFL,4)
// DAC1REFL<DAC1REF5>
extern volatile __bit                   DAC1REF5            __at(0x2C7D);	// @ (0x58F * 8 + 5)
#define                                 DAC1REF5_bit        _BIT_ACCESS(DAC1REFL,5)
// DAC1REFL<DAC1REF6>
extern volatile __bit                   DAC1REF6            __at(0x2C7E);	// @ (0x58F * 8 + 6)
#define                                 DAC1REF6_bit        _BIT_ACCESS(DAC1REFL,6)
// DAC1REFL<DAC1REF7>
extern volatile __bit                   DAC1REF7            __at(0x2C7F);	// @ (0x58F * 8 + 7)
#define                                 DAC1REF7_bit        _BIT_ACCESS(DAC1REFL,7)
// DAC1REFH<DAC1REF8>
extern volatile __bit                   DAC1REF8            __at(0x2C80);	// @ (0x590 * 8 + 0)
#define                                 DAC1REF8_bit        _BIT_ACCESS(DAC1REFH,0)
// DAC1REFH<DAC1REF9>
extern volatile __bit                   DAC1REF9            __at(0x2C81);	// @ (0x590 * 8 + 1)
#define                                 DAC1REF9_bit        _BIT_ACCESS(DAC1REFH,1)
// DAC2CON0<DAC2EN>
extern volatile __bit                   DAC2EN              __at(0x2C8F);	// @ (0x591 * 8 + 7)
#define                                 DAC2EN_bit          _BIT_ACCESS(DAC2CON0,7)
// DAC2CON0<DAC2FM>
extern volatile __bit                   DAC2FM              __at(0x2C8E);	// @ (0x591 * 8 + 6)
#define                                 DAC2FM_bit          _BIT_ACCESS(DAC2CON0,6)
// DACLD<DAC2LD>
extern volatile __bit                   DAC2LD              __at(0x2C69);	// @ (0x58D * 8 + 1)
#define                                 DAC2LD_bit          _BIT_ACCESS(DACLD,1)
// DAC2CON0<DAC2NSS0>
extern volatile __bit                   DAC2NSS0            __at(0x2C88);	// @ (0x591 * 8 + 0)
#define                                 DAC2NSS0_bit        _BIT_ACCESS(DAC2CON0,0)
// DAC2CON0<DAC2NSS1>
extern volatile __bit                   DAC2NSS1            __at(0x2C89);	// @ (0x591 * 8 + 1)
#define                                 DAC2NSS1_bit        _BIT_ACCESS(DAC2CON0,1)
// DAC2CON0<DAC2OE1>
extern volatile __bit                   DAC2OE1             __at(0x2C8D);	// @ (0x591 * 8 + 5)
#define                                 DAC2OE1_bit         _BIT_ACCESS(DAC2CON0,5)
// DAC2CON0<DAC2OE2>
extern volatile __bit                   DAC2OE2             __at(0x2C8C);	// @ (0x591 * 8 + 4)
#define                                 DAC2OE2_bit         _BIT_ACCESS(DAC2CON0,4)
// DAC2CON0<DAC2PSS0>
extern volatile __bit                   DAC2PSS0            __at(0x2C8A);	// @ (0x591 * 8 + 2)
#define                                 DAC2PSS0_bit        _BIT_ACCESS(DAC2CON0,2)
// DAC2CON0<DAC2PSS1>
extern volatile __bit                   DAC2PSS1            __at(0x2C8B);	// @ (0x591 * 8 + 3)
#define                                 DAC2PSS1_bit        _BIT_ACCESS(DAC2CON0,3)
// DAC2REFL<DAC2R0>
extern volatile __bit                   DAC2R0              __at(0x2C90);	// @ (0x592 * 8 + 0)
#define                                 DAC2R0_bit          _BIT_ACCESS(DAC2REFL,0)
// DAC2REFL<DAC2R1>
extern volatile __bit                   DAC2R1              __at(0x2C91);	// @ (0x592 * 8 + 1)
#define                                 DAC2R1_bit          _BIT_ACCESS(DAC2REFL,1)
// DAC2REFH<DAC2R10>
extern volatile __bit                   DAC2R10             __at(0x2C9A);	// @ (0x593 * 8 + 2)
#define                                 DAC2R10_bit         _BIT_ACCESS(DAC2REFH,2)
// DAC2REFH<DAC2R11>
extern volatile __bit                   DAC2R11             __at(0x2C9B);	// @ (0x593 * 8 + 3)
#define                                 DAC2R11_bit         _BIT_ACCESS(DAC2REFH,3)
// DAC2REFH<DAC2R12>
extern volatile __bit                   DAC2R12             __at(0x2C9C);	// @ (0x593 * 8 + 4)
#define                                 DAC2R12_bit         _BIT_ACCESS(DAC2REFH,4)
// DAC2REFH<DAC2R13>
extern volatile __bit                   DAC2R13             __at(0x2C9D);	// @ (0x593 * 8 + 5)
#define                                 DAC2R13_bit         _BIT_ACCESS(DAC2REFH,5)
// DAC2REFH<DAC2R14>
extern volatile __bit                   DAC2R14             __at(0x2C9E);	// @ (0x593 * 8 + 6)
#define                                 DAC2R14_bit         _BIT_ACCESS(DAC2REFH,6)
// DAC2REFH<DAC2R15>
extern volatile __bit                   DAC2R15             __at(0x2C9F);	// @ (0x593 * 8 + 7)
#define                                 DAC2R15_bit         _BIT_ACCESS(DAC2REFH,7)
// DAC2REFL<DAC2R2>
extern volatile __bit                   DAC2R2              __at(0x2C92);	// @ (0x592 * 8 + 2)
#define                                 DAC2R2_bit          _BIT_ACCESS(DAC2REFL,2)
// DAC2REFL<DAC2R3>
extern volatile __bit                   DAC2R3              __at(0x2C93);	// @ (0x592 * 8 + 3)
#define                                 DAC2R3_bit          _BIT_ACCESS(DAC2REFL,3)
// DAC2REFL<DAC2R4>
extern volatile __bit                   DAC2R4              __at(0x2C94);	// @ (0x592 * 8 + 4)
#define                                 DAC2R4_bit          _BIT_ACCESS(DAC2REFL,4)
// DAC2REFL<DAC2R5>
extern volatile __bit                   DAC2R5              __at(0x2C95);	// @ (0x592 * 8 + 5)
#define                                 DAC2R5_bit          _BIT_ACCESS(DAC2REFL,5)
// DAC2REFL<DAC2R6>
extern volatile __bit                   DAC2R6              __at(0x2C96);	// @ (0x592 * 8 + 6)
#define                                 DAC2R6_bit          _BIT_ACCESS(DAC2REFL,6)
// DAC2REFL<DAC2R7>
extern volatile __bit                   DAC2R7              __at(0x2C97);	// @ (0x592 * 8 + 7)
#define                                 DAC2R7_bit          _BIT_ACCESS(DAC2REFL,7)
// DAC2REFH<DAC2R8>
extern volatile __bit                   DAC2R8              __at(0x2C98);	// @ (0x593 * 8 + 0)
#define                                 DAC2R8_bit          _BIT_ACCESS(DAC2REFH,0)
// DAC2REFH<DAC2R9>
extern volatile __bit                   DAC2R9              __at(0x2C99);	// @ (0x593 * 8 + 1)
#define                                 DAC2R9_bit          _BIT_ACCESS(DAC2REFH,1)
// DAC2REFL<DAC2REF0>
extern volatile __bit                   DAC2REF0            __at(0x2C90);	// @ (0x592 * 8 + 0)
#define                                 DAC2REF0_bit        _BIT_ACCESS(DAC2REFL,0)
// DAC2REFL<DAC2REF1>
extern volatile __bit                   DAC2REF1            __at(0x2C91);	// @ (0x592 * 8 + 1)
#define                                 DAC2REF1_bit        _BIT_ACCESS(DAC2REFL,1)
// DAC2REFH<DAC2REF10>
extern volatile __bit                   DAC2REF10           __at(0x2C9A);	// @ (0x593 * 8 + 2)
#define                                 DAC2REF10_bit       _BIT_ACCESS(DAC2REFH,2)
// DAC2REFH<DAC2REF11>
extern volatile __bit                   DAC2REF11           __at(0x2C9B);	// @ (0x593 * 8 + 3)
#define                                 DAC2REF11_bit       _BIT_ACCESS(DAC2REFH,3)
// DAC2REFH<DAC2REF12>
extern volatile __bit                   DAC2REF12           __at(0x2C9C);	// @ (0x593 * 8 + 4)
#define                                 DAC2REF12_bit       _BIT_ACCESS(DAC2REFH,4)
// DAC2REFH<DAC2REF13>
extern volatile __bit                   DAC2REF13           __at(0x2C9D);	// @ (0x593 * 8 + 5)
#define                                 DAC2REF13_bit       _BIT_ACCESS(DAC2REFH,5)
// DAC2REFH<DAC2REF14>
extern volatile __bit                   DAC2REF14           __at(0x2C9E);	// @ (0x593 * 8 + 6)
#define                                 DAC2REF14_bit       _BIT_ACCESS(DAC2REFH,6)
// DAC2REFH<DAC2REF15>
extern volatile __bit                   DAC2REF15           __at(0x2C9F);	// @ (0x593 * 8 + 7)
#define                                 DAC2REF15_bit       _BIT_ACCESS(DAC2REFH,7)
// DAC2REFL<DAC2REF2>
extern volatile __bit                   DAC2REF2            __at(0x2C92);	// @ (0x592 * 8 + 2)
#define                                 DAC2REF2_bit        _BIT_ACCESS(DAC2REFL,2)
// DAC2REFL<DAC2REF3>
extern volatile __bit                   DAC2REF3            __at(0x2C93);	// @ (0x592 * 8 + 3)
#define                                 DAC2REF3_bit        _BIT_ACCESS(DAC2REFL,3)
// DAC2REFL<DAC2REF4>
extern volatile __bit                   DAC2REF4            __at(0x2C94);	// @ (0x592 * 8 + 4)
#define                                 DAC2REF4_bit        _BIT_ACCESS(DAC2REFL,4)
// DAC2REFL<DAC2REF5>
extern volatile __bit                   DAC2REF5            __at(0x2C95);	// @ (0x592 * 8 + 5)
#define                                 DAC2REF5_bit        _BIT_ACCESS(DAC2REFL,5)
// DAC2REFL<DAC2REF6>
extern volatile __bit                   DAC2REF6            __at(0x2C96);	// @ (0x592 * 8 + 6)
#define                                 DAC2REF6_bit        _BIT_ACCESS(DAC2REFL,6)
// DAC2REFL<DAC2REF7>
extern volatile __bit                   DAC2REF7            __at(0x2C97);	// @ (0x592 * 8 + 7)
#define                                 DAC2REF7_bit        _BIT_ACCESS(DAC2REFL,7)
// DAC2REFH<DAC2REF8>
extern volatile __bit                   DAC2REF8            __at(0x2C98);	// @ (0x593 * 8 + 0)
#define                                 DAC2REF8_bit        _BIT_ACCESS(DAC2REFH,0)
// DAC2REFH<DAC2REF9>
extern volatile __bit                   DAC2REF9            __at(0x2C99);	// @ (0x593 * 8 + 1)
#define                                 DAC2REF9_bit        _BIT_ACCESS(DAC2REFH,1)
// DAC3CON0<DAC3EN>
extern volatile __bit                   DAC3EN              __at(0x2CA7);	// @ (0x594 * 8 + 7)
#define                                 DAC3EN_bit          _BIT_ACCESS(DAC3CON0,7)
// DAC3CON0<DAC3NSS0>
extern volatile __bit                   DAC3NSS0            __at(0x2CA0);	// @ (0x594 * 8 + 0)
#define                                 DAC3NSS0_bit        _BIT_ACCESS(DAC3CON0,0)
// DAC3CON0<DAC3NSS1>
extern volatile __bit                   DAC3NSS1            __at(0x2CA1);	// @ (0x594 * 8 + 1)
#define                                 DAC3NSS1_bit        _BIT_ACCESS(DAC3CON0,1)
// DAC3CON0<DAC3OE1>
extern volatile __bit                   DAC3OE1             __at(0x2CA5);	// @ (0x594 * 8 + 5)
#define                                 DAC3OE1_bit         _BIT_ACCESS(DAC3CON0,5)
// DAC3CON0<DAC3OE2>
extern volatile __bit                   DAC3OE2             __at(0x2CA4);	// @ (0x594 * 8 + 4)
#define                                 DAC3OE2_bit         _BIT_ACCESS(DAC3CON0,4)
// DAC3CON0<DAC3PSS0>
extern volatile __bit                   DAC3PSS0            __at(0x2CA2);	// @ (0x594 * 8 + 2)
#define                                 DAC3PSS0_bit        _BIT_ACCESS(DAC3CON0,2)
// DAC3CON0<DAC3PSS1>
extern volatile __bit                   DAC3PSS1            __at(0x2CA3);	// @ (0x594 * 8 + 3)
#define                                 DAC3PSS1_bit        _BIT_ACCESS(DAC3CON0,3)
// DAC3REF<DAC3R0>
extern volatile __bit                   DAC3R0              __at(0x2CA8);	// @ (0x595 * 8 + 0)
#define                                 DAC3R0_bit          _BIT_ACCESS(DAC3REF,0)
// DAC3REF<DAC3R1>
extern volatile __bit                   DAC3R1              __at(0x2CA9);	// @ (0x595 * 8 + 1)
#define                                 DAC3R1_bit          _BIT_ACCESS(DAC3REF,1)
// DAC3REF<DAC3R2>
extern volatile __bit                   DAC3R2              __at(0x2CAA);	// @ (0x595 * 8 + 2)
#define                                 DAC3R2_bit          _BIT_ACCESS(DAC3REF,2)
// DAC3REF<DAC3R3>
extern volatile __bit                   DAC3R3              __at(0x2CAB);	// @ (0x595 * 8 + 3)
#define                                 DAC3R3_bit          _BIT_ACCESS(DAC3REF,3)
// DAC3REF<DAC3R4>
extern volatile __bit                   DAC3R4              __at(0x2CAC);	// @ (0x595 * 8 + 4)
#define                                 DAC3R4_bit          _BIT_ACCESS(DAC3REF,4)
// DAC3REF<DAC3REF0>
extern volatile __bit                   DAC3REF0            __at(0x2CA8);	// @ (0x595 * 8 + 0)
#define                                 DAC3REF0_bit        _BIT_ACCESS(DAC3REF,0)
// DAC3REF<DAC3REF1>
extern volatile __bit                   DAC3REF1            __at(0x2CA9);	// @ (0x595 * 8 + 1)
#define                                 DAC3REF1_bit        _BIT_ACCESS(DAC3REF,1)
// DAC3REF<DAC3REF2>
extern volatile __bit                   DAC3REF2            __at(0x2CAA);	// @ (0x595 * 8 + 2)
#define                                 DAC3REF2_bit        _BIT_ACCESS(DAC3REF,2)
// DAC3REF<DAC3REF3>
extern volatile __bit                   DAC3REF3            __at(0x2CAB);	// @ (0x595 * 8 + 3)
#define                                 DAC3REF3_bit        _BIT_ACCESS(DAC3REF,3)
// DAC3REF<DAC3REF4>
extern volatile __bit                   DAC3REF4            __at(0x2CAC);	// @ (0x595 * 8 + 4)
#define                                 DAC3REF4_bit        _BIT_ACCESS(DAC3REF,4)
// DAC4CON0<DAC4EN>
extern volatile __bit                   DAC4EN              __at(0x2CB7);	// @ (0x596 * 8 + 7)
#define                                 DAC4EN_bit          _BIT_ACCESS(DAC4CON0,7)
// DAC4CON0<DAC4NSS0>
extern volatile __bit                   DAC4NSS0            __at(0x2CB0);	// @ (0x596 * 8 + 0)
#define                                 DAC4NSS0_bit        _BIT_ACCESS(DAC4CON0,0)
// DAC4CON0<DAC4NSS1>
extern volatile __bit                   DAC4NSS1            __at(0x2CB1);	// @ (0x596 * 8 + 1)
#define                                 DAC4NSS1_bit        _BIT_ACCESS(DAC4CON0,1)
// DAC4CON0<DAC4OE1>
extern volatile __bit                   DAC4OE1             __at(0x2CB5);	// @ (0x596 * 8 + 5)
#define                                 DAC4OE1_bit         _BIT_ACCESS(DAC4CON0,5)
// DAC4CON0<DAC4OE2>
extern volatile __bit                   DAC4OE2             __at(0x2CB4);	// @ (0x596 * 8 + 4)
#define                                 DAC4OE2_bit         _BIT_ACCESS(DAC4CON0,4)
// DAC4CON0<DAC4PSS0>
extern volatile __bit                   DAC4PSS0            __at(0x2CB2);	// @ (0x596 * 8 + 2)
#define                                 DAC4PSS0_bit        _BIT_ACCESS(DAC4CON0,2)
// DAC4CON0<DAC4PSS1>
extern volatile __bit                   DAC4PSS1            __at(0x2CB3);	// @ (0x596 * 8 + 3)
#define                                 DAC4PSS1_bit        _BIT_ACCESS(DAC4CON0,3)
// DAC4REF<DAC4R0>
extern volatile __bit                   DAC4R0              __at(0x2CB8);	// @ (0x597 * 8 + 0)
#define                                 DAC4R0_bit          _BIT_ACCESS(DAC4REF,0)
// DAC4REF<DAC4R1>
extern volatile __bit                   DAC4R1              __at(0x2CB9);	// @ (0x597 * 8 + 1)
#define                                 DAC4R1_bit          _BIT_ACCESS(DAC4REF,1)
// DAC4REF<DAC4R2>
extern volatile __bit                   DAC4R2              __at(0x2CBA);	// @ (0x597 * 8 + 2)
#define                                 DAC4R2_bit          _BIT_ACCESS(DAC4REF,2)
// DAC4REF<DAC4R3>
extern volatile __bit                   DAC4R3              __at(0x2CBB);	// @ (0x597 * 8 + 3)
#define                                 DAC4R3_bit          _BIT_ACCESS(DAC4REF,3)
// DAC4REF<DAC4R4>
extern volatile __bit                   DAC4R4              __at(0x2CBC);	// @ (0x597 * 8 + 4)
#define                                 DAC4R4_bit          _BIT_ACCESS(DAC4REF,4)
// DAC4REF<DAC4REF0>
extern volatile __bit                   DAC4REF0            __at(0x2CB8);	// @ (0x597 * 8 + 0)
#define                                 DAC4REF0_bit        _BIT_ACCESS(DAC4REF,0)
// DAC4REF<DAC4REF1>
extern volatile __bit                   DAC4REF1            __at(0x2CB9);	// @ (0x597 * 8 + 1)
#define                                 DAC4REF1_bit        _BIT_ACCESS(DAC4REF,1)
// DAC4REF<DAC4REF2>
extern volatile __bit                   DAC4REF2            __at(0x2CBA);	// @ (0x597 * 8 + 2)
#define                                 DAC4REF2_bit        _BIT_ACCESS(DAC4REF,2)
// DAC4REF<DAC4REF3>
extern volatile __bit                   DAC4REF3            __at(0x2CBB);	// @ (0x597 * 8 + 3)
#define                                 DAC4REF3_bit        _BIT_ACCESS(DAC4REF,3)
// DAC4REF<DAC4REF4>
extern volatile __bit                   DAC4REF4            __at(0x2CBC);	// @ (0x597 * 8 + 4)
#define                                 DAC4REF4_bit        _BIT_ACCESS(DAC4REF,4)
// DAC5CON0<DAC5EN>
extern volatile __bit                   DAC5EN              __at(0x2CC7);	// @ (0x598 * 8 + 7)
#define                                 DAC5EN_bit          _BIT_ACCESS(DAC5CON0,7)
// DAC5CON0<DAC5FM>
extern volatile __bit                   DAC5FM              __at(0x2CC6);	// @ (0x598 * 8 + 6)
#define                                 DAC5FM_bit          _BIT_ACCESS(DAC5CON0,6)
// DACLD<DAC5LD>
extern volatile __bit                   DAC5LD              __at(0x2C6C);	// @ (0x58D * 8 + 4)
#define                                 DAC5LD_bit          _BIT_ACCESS(DACLD,4)
// DAC5CON0<DAC5NSS0>
extern volatile __bit                   DAC5NSS0            __at(0x2CC0);	// @ (0x598 * 8 + 0)
#define                                 DAC5NSS0_bit        _BIT_ACCESS(DAC5CON0,0)
// DAC5CON0<DAC5NSS1>
extern volatile __bit                   DAC5NSS1            __at(0x2CC1);	// @ (0x598 * 8 + 1)
#define                                 DAC5NSS1_bit        _BIT_ACCESS(DAC5CON0,1)
// DAC5CON0<DAC5OE1>
extern volatile __bit                   DAC5OE1             __at(0x2CC5);	// @ (0x598 * 8 + 5)
#define                                 DAC5OE1_bit         _BIT_ACCESS(DAC5CON0,5)
// DAC5CON0<DAC5OE2>
extern volatile __bit                   DAC5OE2             __at(0x2CC4);	// @ (0x598 * 8 + 4)
#define                                 DAC5OE2_bit         _BIT_ACCESS(DAC5CON0,4)
// DAC5CON0<DAC5PSS0>
extern volatile __bit                   DAC5PSS0            __at(0x2CC2);	// @ (0x598 * 8 + 2)
#define                                 DAC5PSS0_bit        _BIT_ACCESS(DAC5CON0,2)
// DAC5CON0<DAC5PSS1>
extern volatile __bit                   DAC5PSS1            __at(0x2CC3);	// @ (0x598 * 8 + 3)
#define                                 DAC5PSS1_bit        _BIT_ACCESS(DAC5CON0,3)
// DAC5REFL<DAC5R0>
extern volatile __bit                   DAC5R0              __at(0x2CC8);	// @ (0x599 * 8 + 0)
#define                                 DAC5R0_bit          _BIT_ACCESS(DAC5REFL,0)
// DAC5REFL<DAC5R1>
extern volatile __bit                   DAC5R1              __at(0x2CC9);	// @ (0x599 * 8 + 1)
#define                                 DAC5R1_bit          _BIT_ACCESS(DAC5REFL,1)
// DAC5REFH<DAC5R10>
extern volatile __bit                   DAC5R10             __at(0x2CD2);	// @ (0x59A * 8 + 2)
#define                                 DAC5R10_bit         _BIT_ACCESS(DAC5REFH,2)
// DAC5REFH<DAC5R11>
extern volatile __bit                   DAC5R11             __at(0x2CD3);	// @ (0x59A * 8 + 3)
#define                                 DAC5R11_bit         _BIT_ACCESS(DAC5REFH,3)
// DAC5REFH<DAC5R12>
extern volatile __bit                   DAC5R12             __at(0x2CD4);	// @ (0x59A * 8 + 4)
#define                                 DAC5R12_bit         _BIT_ACCESS(DAC5REFH,4)
// DAC5REFH<DAC5R13>
extern volatile __bit                   DAC5R13             __at(0x2CD5);	// @ (0x59A * 8 + 5)
#define                                 DAC5R13_bit         _BIT_ACCESS(DAC5REFH,5)
// DAC5REFH<DAC5R14>
extern volatile __bit                   DAC5R14             __at(0x2CD6);	// @ (0x59A * 8 + 6)
#define                                 DAC5R14_bit         _BIT_ACCESS(DAC5REFH,6)
// DAC5REFH<DAC5R15>
extern volatile __bit                   DAC5R15             __at(0x2CD7);	// @ (0x59A * 8 + 7)
#define                                 DAC5R15_bit         _BIT_ACCESS(DAC5REFH,7)
// DAC5REFL<DAC5R2>
extern volatile __bit                   DAC5R2              __at(0x2CCA);	// @ (0x599 * 8 + 2)
#define                                 DAC5R2_bit          _BIT_ACCESS(DAC5REFL,2)
// DAC5REFL<DAC5R3>
extern volatile __bit                   DAC5R3              __at(0x2CCB);	// @ (0x599 * 8 + 3)
#define                                 DAC5R3_bit          _BIT_ACCESS(DAC5REFL,3)
// DAC5REFL<DAC5R4>
extern volatile __bit                   DAC5R4              __at(0x2CCC);	// @ (0x599 * 8 + 4)
#define                                 DAC5R4_bit          _BIT_ACCESS(DAC5REFL,4)
// DAC5REFL<DAC5R5>
extern volatile __bit                   DAC5R5              __at(0x2CCD);	// @ (0x599 * 8 + 5)
#define                                 DAC5R5_bit          _BIT_ACCESS(DAC5REFL,5)
// DAC5REFL<DAC5R6>
extern volatile __bit                   DAC5R6              __at(0x2CCE);	// @ (0x599 * 8 + 6)
#define                                 DAC5R6_bit          _BIT_ACCESS(DAC5REFL,6)
// DAC5REFL<DAC5R7>
extern volatile __bit                   DAC5R7              __at(0x2CCF);	// @ (0x599 * 8 + 7)
#define                                 DAC5R7_bit          _BIT_ACCESS(DAC5REFL,7)
// DAC5REFH<DAC5R8>
extern volatile __bit                   DAC5R8              __at(0x2CD0);	// @ (0x59A * 8 + 0)
#define                                 DAC5R8_bit          _BIT_ACCESS(DAC5REFH,0)
// DAC5REFH<DAC5R9>
extern volatile __bit                   DAC5R9              __at(0x2CD1);	// @ (0x59A * 8 + 1)
#define                                 DAC5R9_bit          _BIT_ACCESS(DAC5REFH,1)
// DAC5REFL<DAC5REF0>
extern volatile __bit                   DAC5REF0            __at(0x2CC8);	// @ (0x599 * 8 + 0)
#define                                 DAC5REF0_bit        _BIT_ACCESS(DAC5REFL,0)
// DAC5REFL<DAC5REF1>
extern volatile __bit                   DAC5REF1            __at(0x2CC9);	// @ (0x599 * 8 + 1)
#define                                 DAC5REF1_bit        _BIT_ACCESS(DAC5REFL,1)
// DAC5REFH<DAC5REF10>
extern volatile __bit                   DAC5REF10           __at(0x2CD2);	// @ (0x59A * 8 + 2)
#define                                 DAC5REF10_bit       _BIT_ACCESS(DAC5REFH,2)
// DAC5REFH<DAC5REF11>
extern volatile __bit                   DAC5REF11           __at(0x2CD3);	// @ (0x59A * 8 + 3)
#define                                 DAC5REF11_bit       _BIT_ACCESS(DAC5REFH,3)
// DAC5REFH<DAC5REF12>
extern volatile __bit                   DAC5REF12           __at(0x2CD4);	// @ (0x59A * 8 + 4)
#define                                 DAC5REF12_bit       _BIT_ACCESS(DAC5REFH,4)
// DAC5REFH<DAC5REF13>
extern volatile __bit                   DAC5REF13           __at(0x2CD5);	// @ (0x59A * 8 + 5)
#define                                 DAC5REF13_bit       _BIT_ACCESS(DAC5REFH,5)
// DAC5REFH<DAC5REF14>
extern volatile __bit                   DAC5REF14           __at(0x2CD6);	// @ (0x59A * 8 + 6)
#define                                 DAC5REF14_bit       _BIT_ACCESS(DAC5REFH,6)
// DAC5REFH<DAC5REF15>
extern volatile __bit                   DAC5REF15           __at(0x2CD7);	// @ (0x59A * 8 + 7)
#define                                 DAC5REF15_bit       _BIT_ACCESS(DAC5REFH,7)
// DAC5REFL<DAC5REF2>
extern volatile __bit                   DAC5REF2            __at(0x2CCA);	// @ (0x599 * 8 + 2)
#define                                 DAC5REF2_bit        _BIT_ACCESS(DAC5REFL,2)
// DAC5REFL<DAC5REF3>
extern volatile __bit                   DAC5REF3            __at(0x2CCB);	// @ (0x599 * 8 + 3)
#define                                 DAC5REF3_bit        _BIT_ACCESS(DAC5REFL,3)
// DAC5REFL<DAC5REF4>
extern volatile __bit                   DAC5REF4            __at(0x2CCC);	// @ (0x599 * 8 + 4)
#define                                 DAC5REF4_bit        _BIT_ACCESS(DAC5REFL,4)
// DAC5REFL<DAC5REF5>
extern volatile __bit                   DAC5REF5            __at(0x2CCD);	// @ (0x599 * 8 + 5)
#define                                 DAC5REF5_bit        _BIT_ACCESS(DAC5REFL,5)
// DAC5REFL<DAC5REF6>
extern volatile __bit                   DAC5REF6            __at(0x2CCE);	// @ (0x599 * 8 + 6)
#define                                 DAC5REF6_bit        _BIT_ACCESS(DAC5REFL,6)
// DAC5REFL<DAC5REF7>
extern volatile __bit                   DAC5REF7            __at(0x2CCF);	// @ (0x599 * 8 + 7)
#define                                 DAC5REF7_bit        _BIT_ACCESS(DAC5REFL,7)
// DAC5REFH<DAC5REF8>
extern volatile __bit                   DAC5REF8            __at(0x2CD0);	// @ (0x59A * 8 + 0)
#define                                 DAC5REF8_bit        _BIT_ACCESS(DAC5REFH,0)
// DAC5REFH<DAC5REF9>
extern volatile __bit                   DAC5REF9            __at(0x2CD1);	// @ (0x59A * 8 + 1)
#define                                 DAC5REF9_bit        _BIT_ACCESS(DAC5REFH,1)
// DAC6CON0<DAC6EN>
extern volatile __bit                   DAC6EN              __at(0x2CDF);	// @ (0x59B * 8 + 7)
#define                                 DAC6EN_bit          _BIT_ACCESS(DAC6CON0,7)
// DAC6CON0<DAC6FM>
extern volatile __bit                   DAC6FM              __at(0x2CDE);	// @ (0x59B * 8 + 6)
#define                                 DAC6FM_bit          _BIT_ACCESS(DAC6CON0,6)
// DACLD<DAC6LD>
extern volatile __bit                   DAC6LD              __at(0x2C6D);	// @ (0x58D * 8 + 5)
#define                                 DAC6LD_bit          _BIT_ACCESS(DACLD,5)
// DAC6CON0<DAC6NSS0>
extern volatile __bit                   DAC6NSS0            __at(0x2CD8);	// @ (0x59B * 8 + 0)
#define                                 DAC6NSS0_bit        _BIT_ACCESS(DAC6CON0,0)
// DAC6CON0<DAC6NSS1>
extern volatile __bit                   DAC6NSS1            __at(0x2CD9);	// @ (0x59B * 8 + 1)
#define                                 DAC6NSS1_bit        _BIT_ACCESS(DAC6CON0,1)
// DAC6CON0<DAC6OE1>
extern volatile __bit                   DAC6OE1             __at(0x2CDD);	// @ (0x59B * 8 + 5)
#define                                 DAC6OE1_bit         _BIT_ACCESS(DAC6CON0,5)
// DAC6CON0<DAC6OE2>
extern volatile __bit                   DAC6OE2             __at(0x2CDC);	// @ (0x59B * 8 + 4)
#define                                 DAC6OE2_bit         _BIT_ACCESS(DAC6CON0,4)
// DAC6CON0<DAC6PSS0>
extern volatile __bit                   DAC6PSS0            __at(0x2CDA);	// @ (0x59B * 8 + 2)
#define                                 DAC6PSS0_bit        _BIT_ACCESS(DAC6CON0,2)
// DAC6CON0<DAC6PSS1>
extern volatile __bit                   DAC6PSS1            __at(0x2CDB);	// @ (0x59B * 8 + 3)
#define                                 DAC6PSS1_bit        _BIT_ACCESS(DAC6CON0,3)
// DAC6REFL<DAC6R0>
extern volatile __bit                   DAC6R0              __at(0x2CE0);	// @ (0x59C * 8 + 0)
#define                                 DAC6R0_bit          _BIT_ACCESS(DAC6REFL,0)
// DAC6REFL<DAC6R1>
extern volatile __bit                   DAC6R1              __at(0x2CE1);	// @ (0x59C * 8 + 1)
#define                                 DAC6R1_bit          _BIT_ACCESS(DAC6REFL,1)
// DAC6REFH<DAC6R10>
extern volatile __bit                   DAC6R10             __at(0x2CEA);	// @ (0x59D * 8 + 2)
#define                                 DAC6R10_bit         _BIT_ACCESS(DAC6REFH,2)
// DAC6REFH<DAC6R11>
extern volatile __bit                   DAC6R11             __at(0x2CEB);	// @ (0x59D * 8 + 3)
#define                                 DAC6R11_bit         _BIT_ACCESS(DAC6REFH,3)
// DAC6REFH<DAC6R12>
extern volatile __bit                   DAC6R12             __at(0x2CEC);	// @ (0x59D * 8 + 4)
#define                                 DAC6R12_bit         _BIT_ACCESS(DAC6REFH,4)
// DAC6REFH<DAC6R13>
extern volatile __bit                   DAC6R13             __at(0x2CED);	// @ (0x59D * 8 + 5)
#define                                 DAC6R13_bit         _BIT_ACCESS(DAC6REFH,5)
// DAC6REFH<DAC6R14>
extern volatile __bit                   DAC6R14             __at(0x2CEE);	// @ (0x59D * 8 + 6)
#define                                 DAC6R14_bit         _BIT_ACCESS(DAC6REFH,6)
// DAC6REFH<DAC6R15>
extern volatile __bit                   DAC6R15             __at(0x2CEF);	// @ (0x59D * 8 + 7)
#define                                 DAC6R15_bit         _BIT_ACCESS(DAC6REFH,7)
// DAC6REFL<DAC6R2>
extern volatile __bit                   DAC6R2              __at(0x2CE2);	// @ (0x59C * 8 + 2)
#define                                 DAC6R2_bit          _BIT_ACCESS(DAC6REFL,2)
// DAC6REFL<DAC6R3>
extern volatile __bit                   DAC6R3              __at(0x2CE3);	// @ (0x59C * 8 + 3)
#define                                 DAC6R3_bit          _BIT_ACCESS(DAC6REFL,3)
// DAC6REFL<DAC6R4>
extern volatile __bit                   DAC6R4              __at(0x2CE4);	// @ (0x59C * 8 + 4)
#define                                 DAC6R4_bit          _BIT_ACCESS(DAC6REFL,4)
// DAC6REFL<DAC6R5>
extern volatile __bit                   DAC6R5              __at(0x2CE5);	// @ (0x59C * 8 + 5)
#define                                 DAC6R5_bit          _BIT_ACCESS(DAC6REFL,5)
// DAC6REFL<DAC6R6>
extern volatile __bit                   DAC6R6              __at(0x2CE6);	// @ (0x59C * 8 + 6)
#define                                 DAC6R6_bit          _BIT_ACCESS(DAC6REFL,6)
// DAC6REFL<DAC6R7>
extern volatile __bit                   DAC6R7              __at(0x2CE7);	// @ (0x59C * 8 + 7)
#define                                 DAC6R7_bit          _BIT_ACCESS(DAC6REFL,7)
// DAC6REFH<DAC6R8>
extern volatile __bit                   DAC6R8              __at(0x2CE8);	// @ (0x59D * 8 + 0)
#define                                 DAC6R8_bit          _BIT_ACCESS(DAC6REFH,0)
// DAC6REFH<DAC6R9>
extern volatile __bit                   DAC6R9              __at(0x2CE9);	// @ (0x59D * 8 + 1)
#define                                 DAC6R9_bit          _BIT_ACCESS(DAC6REFH,1)
// DAC6REFL<DAC6REF0>
extern volatile __bit                   DAC6REF0            __at(0x2CE0);	// @ (0x59C * 8 + 0)
#define                                 DAC6REF0_bit        _BIT_ACCESS(DAC6REFL,0)
// DAC6REFL<DAC6REF1>
extern volatile __bit                   DAC6REF1            __at(0x2CE1);	// @ (0x59C * 8 + 1)
#define                                 DAC6REF1_bit        _BIT_ACCESS(DAC6REFL,1)
// DAC6REFH<DAC6REF10>
extern volatile __bit                   DAC6REF10           __at(0x2CEA);	// @ (0x59D * 8 + 2)
#define                                 DAC6REF10_bit       _BIT_ACCESS(DAC6REFH,2)
// DAC6REFH<DAC6REF11>
extern volatile __bit                   DAC6REF11           __at(0x2CEB);	// @ (0x59D * 8 + 3)
#define                                 DAC6REF11_bit       _BIT_ACCESS(DAC6REFH,3)
// DAC6REFH<DAC6REF12>
extern volatile __bit                   DAC6REF12           __at(0x2CEC);	// @ (0x59D * 8 + 4)
#define                                 DAC6REF12_bit       _BIT_ACCESS(DAC6REFH,4)
// DAC6REFH<DAC6REF13>
extern volatile __bit                   DAC6REF13           __at(0x2CED);	// @ (0x59D * 8 + 5)
#define                                 DAC6REF13_bit       _BIT_ACCESS(DAC6REFH,5)
// DAC6REFH<DAC6REF14>
extern volatile __bit                   DAC6REF14           __at(0x2CEE);	// @ (0x59D * 8 + 6)
#define                                 DAC6REF14_bit       _BIT_ACCESS(DAC6REFH,6)
// DAC6REFH<DAC6REF15>
extern volatile __bit                   DAC6REF15           __at(0x2CEF);	// @ (0x59D * 8 + 7)
#define                                 DAC6REF15_bit       _BIT_ACCESS(DAC6REFH,7)
// DAC6REFL<DAC6REF2>
extern volatile __bit                   DAC6REF2            __at(0x2CE2);	// @ (0x59C * 8 + 2)
#define                                 DAC6REF2_bit        _BIT_ACCESS(DAC6REFL,2)
// DAC6REFL<DAC6REF3>
extern volatile __bit                   DAC6REF3            __at(0x2CE3);	// @ (0x59C * 8 + 3)
#define                                 DAC6REF3_bit        _BIT_ACCESS(DAC6REFL,3)
// DAC6REFL<DAC6REF4>
extern volatile __bit                   DAC6REF4            __at(0x2CE4);	// @ (0x59C * 8 + 4)
#define                                 DAC6REF4_bit        _BIT_ACCESS(DAC6REFL,4)
// DAC6REFL<DAC6REF5>
extern volatile __bit                   DAC6REF5            __at(0x2CE5);	// @ (0x59C * 8 + 5)
#define                                 DAC6REF5_bit        _BIT_ACCESS(DAC6REFL,5)
// DAC6REFL<DAC6REF6>
extern volatile __bit                   DAC6REF6            __at(0x2CE6);	// @ (0x59C * 8 + 6)
#define                                 DAC6REF6_bit        _BIT_ACCESS(DAC6REFL,6)
// DAC6REFL<DAC6REF7>
extern volatile __bit                   DAC6REF7            __at(0x2CE7);	// @ (0x59C * 8 + 7)
#define                                 DAC6REF7_bit        _BIT_ACCESS(DAC6REFL,7)
// DAC6REFH<DAC6REF8>
extern volatile __bit                   DAC6REF8            __at(0x2CE8);	// @ (0x59D * 8 + 0)
#define                                 DAC6REF8_bit        _BIT_ACCESS(DAC6REFH,0)
// DAC6REFH<DAC6REF9>
extern volatile __bit                   DAC6REF9            __at(0x2CE9);	// @ (0x59D * 8 + 1)
#define                                 DAC6REF9_bit        _BIT_ACCESS(DAC6REFH,1)
// DAC7CON0<DAC7EN>
extern volatile __bit                   DAC7EN              __at(0x2CF7);	// @ (0x59E * 8 + 7)
#define                                 DAC7EN_bit          _BIT_ACCESS(DAC7CON0,7)
// DAC7CON0<DAC7NSS0>
extern volatile __bit                   DAC7NSS0            __at(0x2CF0);	// @ (0x59E * 8 + 0)
#define                                 DAC7NSS0_bit        _BIT_ACCESS(DAC7CON0,0)
// DAC7CON0<DAC7NSS1>
extern volatile __bit                   DAC7NSS1            __at(0x2CF1);	// @ (0x59E * 8 + 1)
#define                                 DAC7NSS1_bit        _BIT_ACCESS(DAC7CON0,1)
// DAC7CON0<DAC7OE1>
extern volatile __bit                   DAC7OE1             __at(0x2CF5);	// @ (0x59E * 8 + 5)
#define                                 DAC7OE1_bit         _BIT_ACCESS(DAC7CON0,5)
// DAC7CON0<DAC7OE2>
extern volatile __bit                   DAC7OE2             __at(0x2CF4);	// @ (0x59E * 8 + 4)
#define                                 DAC7OE2_bit         _BIT_ACCESS(DAC7CON0,4)
// DAC7CON0<DAC7PSS0>
extern volatile __bit                   DAC7PSS0            __at(0x2CF2);	// @ (0x59E * 8 + 2)
#define                                 DAC7PSS0_bit        _BIT_ACCESS(DAC7CON0,2)
// DAC7CON0<DAC7PSS1>
extern volatile __bit                   DAC7PSS1            __at(0x2CF3);	// @ (0x59E * 8 + 3)
#define                                 DAC7PSS1_bit        _BIT_ACCESS(DAC7CON0,3)
// DAC7REF<DAC7R0>
extern volatile __bit                   DAC7R0              __at(0x2CF8);	// @ (0x59F * 8 + 0)
#define                                 DAC7R0_bit          _BIT_ACCESS(DAC7REF,0)
// DAC7REF<DAC7R1>
extern volatile __bit                   DAC7R1              __at(0x2CF9);	// @ (0x59F * 8 + 1)
#define                                 DAC7R1_bit          _BIT_ACCESS(DAC7REF,1)
// DAC7REF<DAC7R2>
extern volatile __bit                   DAC7R2              __at(0x2CFA);	// @ (0x59F * 8 + 2)
#define                                 DAC7R2_bit          _BIT_ACCESS(DAC7REF,2)
// DAC7REF<DAC7R3>
extern volatile __bit                   DAC7R3              __at(0x2CFB);	// @ (0x59F * 8 + 3)
#define                                 DAC7R3_bit          _BIT_ACCESS(DAC7REF,3)
// DAC7REF<DAC7R4>
extern volatile __bit                   DAC7R4              __at(0x2CFC);	// @ (0x59F * 8 + 4)
#define                                 DAC7R4_bit          _BIT_ACCESS(DAC7REF,4)
// DAC7REF<DAC7REF0>
extern volatile __bit                   DAC7REF0            __at(0x2CF8);	// @ (0x59F * 8 + 0)
#define                                 DAC7REF0_bit        _BIT_ACCESS(DAC7REF,0)
// DAC7REF<DAC7REF1>
extern volatile __bit                   DAC7REF1            __at(0x2CF9);	// @ (0x59F * 8 + 1)
#define                                 DAC7REF1_bit        _BIT_ACCESS(DAC7REF,1)
// DAC7REF<DAC7REF2>
extern volatile __bit                   DAC7REF2            __at(0x2CFA);	// @ (0x59F * 8 + 2)
#define                                 DAC7REF2_bit        _BIT_ACCESS(DAC7REF,2)
// DAC7REF<DAC7REF3>
extern volatile __bit                   DAC7REF3            __at(0x2CFB);	// @ (0x59F * 8 + 3)
#define                                 DAC7REF3_bit        _BIT_ACCESS(DAC7REF,3)
// DAC7REF<DAC7REF4>
extern volatile __bit                   DAC7REF4            __at(0x2CFC);	// @ (0x59F * 8 + 4)
#define                                 DAC7REF4_bit        _BIT_ACCESS(DAC7REF,4)
// DAC8CON0<DAC8EN>
extern volatile __bit                   DAC8EN              __at(0x3067);	// @ (0x60C * 8 + 7)
#define                                 DAC8EN_bit          _BIT_ACCESS(DAC8CON0,7)
// DAC8CON0<DAC8NSS0>
extern volatile __bit                   DAC8NSS0            __at(0x3060);	// @ (0x60C * 8 + 0)
#define                                 DAC8NSS0_bit        _BIT_ACCESS(DAC8CON0,0)
// DAC8CON0<DAC8NSS1>
extern volatile __bit                   DAC8NSS1            __at(0x3061);	// @ (0x60C * 8 + 1)
#define                                 DAC8NSS1_bit        _BIT_ACCESS(DAC8CON0,1)
// DAC8CON0<DAC8OE1>
extern volatile __bit                   DAC8OE1             __at(0x3065);	// @ (0x60C * 8 + 5)
#define                                 DAC8OE1_bit         _BIT_ACCESS(DAC8CON0,5)
// DAC8CON0<DAC8OE2>
extern volatile __bit                   DAC8OE2             __at(0x3064);	// @ (0x60C * 8 + 4)
#define                                 DAC8OE2_bit         _BIT_ACCESS(DAC8CON0,4)
// DAC8CON0<DAC8PSS0>
extern volatile __bit                   DAC8PSS0            __at(0x3062);	// @ (0x60C * 8 + 2)
#define                                 DAC8PSS0_bit        _BIT_ACCESS(DAC8CON0,2)
// DAC8CON0<DAC8PSS1>
extern volatile __bit                   DAC8PSS1            __at(0x3063);	// @ (0x60C * 8 + 3)
#define                                 DAC8PSS1_bit        _BIT_ACCESS(DAC8CON0,3)
// DAC8REF<DAC8R0>
extern volatile __bit                   DAC8R0              __at(0x3068);	// @ (0x60D * 8 + 0)
#define                                 DAC8R0_bit          _BIT_ACCESS(DAC8REF,0)
// DAC8REF<DAC8R1>
extern volatile __bit                   DAC8R1              __at(0x3069);	// @ (0x60D * 8 + 1)
#define                                 DAC8R1_bit          _BIT_ACCESS(DAC8REF,1)
// DAC8REF<DAC8R2>
extern volatile __bit                   DAC8R2              __at(0x306A);	// @ (0x60D * 8 + 2)
#define                                 DAC8R2_bit          _BIT_ACCESS(DAC8REF,2)
// DAC8REF<DAC8R3>
extern volatile __bit                   DAC8R3              __at(0x306B);	// @ (0x60D * 8 + 3)
#define                                 DAC8R3_bit          _BIT_ACCESS(DAC8REF,3)
// DAC8REF<DAC8R4>
extern volatile __bit                   DAC8R4              __at(0x306C);	// @ (0x60D * 8 + 4)
#define                                 DAC8R4_bit          _BIT_ACCESS(DAC8REF,4)
// DAC8REF<DAC8REF0>
extern volatile __bit                   DAC8REF0            __at(0x3068);	// @ (0x60D * 8 + 0)
#define                                 DAC8REF0_bit        _BIT_ACCESS(DAC8REF,0)
// DAC8REF<DAC8REF1>
extern volatile __bit                   DAC8REF1            __at(0x3069);	// @ (0x60D * 8 + 1)
#define                                 DAC8REF1_bit        _BIT_ACCESS(DAC8REF,1)
// DAC8REF<DAC8REF2>
extern volatile __bit                   DAC8REF2            __at(0x306A);	// @ (0x60D * 8 + 2)
#define                                 DAC8REF2_bit        _BIT_ACCESS(DAC8REF,2)
// DAC8REF<DAC8REF3>
extern volatile __bit                   DAC8REF3            __at(0x306B);	// @ (0x60D * 8 + 3)
#define                                 DAC8REF3_bit        _BIT_ACCESS(DAC8REF,3)
// DAC8REF<DAC8REF4>
extern volatile __bit                   DAC8REF4            __at(0x306C);	// @ (0x60D * 8 + 4)
#define                                 DAC8REF4_bit        _BIT_ACCESS(DAC8REF,4)
// STATUS<DC>
extern volatile __bit                   DC                  __at(0x19);	// @ (0x3 * 8 + 1)
#define                                 DC_bit              _BIT_ACCESS(STATUS,1)
// STATUS_SHAD<DC_SHAD>
extern volatile __bit                   DC_SHAD             __at(0x7F21);	// @ (0xFE4 * 8 + 1)
#define                                 DC_SHAD_bit         _BIT_ACCESS(STATUS_SHAD,1)
// SSP1CON3<DHEN>
extern volatile __bit                   DHEN                __at(0x10B8);	// @ (0x217 * 8 + 0)
#define                                 DHEN_bit            _BIT_ACCESS(SSP1CON3,0)
// SSP1STAT<D_nA>
extern volatile __bit                   D_nA                __at(0x10A5);	// @ (0x214 * 8 + 5)
#define                                 D_nA_bit            _BIT_ACCESS(SSP1STAT,5)
// RC1STA<FERR>
extern volatile __bit                   FERR                __at(0xCEA);	// @ (0x19D * 8 + 2)
#define                                 FERR_bit            _BIT_ACCESS(RC1STA,2)
// PMCON1<FREE>
extern volatile __bit                   FREE                __at(0xCAC);	// @ (0x195 * 8 + 4)
#define                                 FREE_bit            _BIT_ACCESS(PMCON1,4)
// FVRCON<FVREN>
extern volatile __bit                   FVREN               __at(0x4F7);	// @ (0x9E * 8 + 7)
#define                                 FVREN_bit           _BIT_ACCESS(FVRCON,7)
// FVRCON<FVRRDY>
extern volatile __bit                   FVRRDY              __at(0x4F6);	// @ (0x9E * 8 + 6)
#define                                 FVRRDY_bit          _BIT_ACCESS(FVRCON,6)
// COG1ASD0<G1ARSEN>
extern volatile __bit                   G1ARSEN             __at(0x34EE);	// @ (0x69D * 8 + 6)
#define                                 G1ARSEN_bit         _BIT_ACCESS(COG1ASD0,6)
// COG1ASD1<G1AS0E>
extern volatile __bit                   G1AS0E              __at(0x34F0);	// @ (0x69E * 8 + 0)
#define                                 G1AS0E_bit          _BIT_ACCESS(COG1ASD1,0)
// COG1ASD1<G1AS1E>
extern volatile __bit                   G1AS1E              __at(0x34F1);	// @ (0x69E * 8 + 1)
#define                                 G1AS1E_bit          _BIT_ACCESS(COG1ASD1,1)
// COG1ASD1<G1AS2E>
extern volatile __bit                   G1AS2E              __at(0x34F2);	// @ (0x69E * 8 + 2)
#define                                 G1AS2E_bit          _BIT_ACCESS(COG1ASD1,2)
// COG1ASD1<G1AS3E>
extern volatile __bit                   G1AS3E              __at(0x34F3);	// @ (0x69E * 8 + 3)
#define                                 G1AS3E_bit          _BIT_ACCESS(COG1ASD1,3)
// COG1ASD1<G1AS4E>
extern volatile __bit                   G1AS4E              __at(0x34F4);	// @ (0x69E * 8 + 4)
#define                                 G1AS4E_bit          _BIT_ACCESS(COG1ASD1,4)
// COG1ASD1<G1AS5E>
extern volatile __bit                   G1AS5E              __at(0x34F5);	// @ (0x69E * 8 + 5)
#define                                 G1AS5E_bit          _BIT_ACCESS(COG1ASD1,5)
// COG1ASD1<G1AS6E>
extern volatile __bit                   G1AS6E              __at(0x34F6);	// @ (0x69E * 8 + 6)
#define                                 G1AS6E_bit          _BIT_ACCESS(COG1ASD1,6)
// COG1ASD1<G1AS7E>
extern volatile __bit                   G1AS7E              __at(0x34F7);	// @ (0x69E * 8 + 7)
#define                                 G1AS7E_bit          _BIT_ACCESS(COG1ASD1,7)
// COG1ASD0<G1ASDAC0>
extern volatile __bit                   G1ASDAC0            __at(0x34EA);	// @ (0x69D * 8 + 2)
#define                                 G1ASDAC0_bit        _BIT_ACCESS(COG1ASD0,2)
// COG1ASD0<G1ASDAC1>
extern volatile __bit                   G1ASDAC1            __at(0x34EB);	// @ (0x69D * 8 + 3)
#define                                 G1ASDAC1_bit        _BIT_ACCESS(COG1ASD0,3)
// COG1ASD0<G1ASDBD0>
extern volatile __bit                   G1ASDBD0            __at(0x34EC);	// @ (0x69D * 8 + 4)
#define                                 G1ASDBD0_bit        _BIT_ACCESS(COG1ASD0,4)
// COG1ASD0<G1ASDBD1>
extern volatile __bit                   G1ASDBD1            __at(0x34ED);	// @ (0x69D * 8 + 5)
#define                                 G1ASDBD1_bit        _BIT_ACCESS(COG1ASD0,5)
// COG1ASD0<G1ASE>
extern volatile __bit                   G1ASE               __at(0x34EF);	// @ (0x69D * 8 + 7)
#define                                 G1ASE_bit           _BIT_ACCESS(COG1ASD0,7)
// COG1ASD0<G1ASREN>
extern volatile __bit                   G1ASREN             __at(0x34EE);	// @ (0x69D * 8 + 6)
#define                                 G1ASREN_bit         _BIT_ACCESS(COG1ASD0,6)
// COG1BLKF<G1BLKF0>
extern volatile __bit                   G1BLKF0             __at(0x3480);	// @ (0x690 * 8 + 0)
#define                                 G1BLKF0_bit         _BIT_ACCESS(COG1BLKF,0)
// COG1BLKF<G1BLKF1>
extern volatile __bit                   G1BLKF1             __at(0x3481);	// @ (0x690 * 8 + 1)
#define                                 G1BLKF1_bit         _BIT_ACCESS(COG1BLKF,1)
// COG1BLKF<G1BLKF2>
extern volatile __bit                   G1BLKF2             __at(0x3482);	// @ (0x690 * 8 + 2)
#define                                 G1BLKF2_bit         _BIT_ACCESS(COG1BLKF,2)
// COG1BLKF<G1BLKF3>
extern volatile __bit                   G1BLKF3             __at(0x3483);	// @ (0x690 * 8 + 3)
#define                                 G1BLKF3_bit         _BIT_ACCESS(COG1BLKF,3)
// COG1BLKF<G1BLKF4>
extern volatile __bit                   G1BLKF4             __at(0x3484);	// @ (0x690 * 8 + 4)
#define                                 G1BLKF4_bit         _BIT_ACCESS(COG1BLKF,4)
// COG1BLKF<G1BLKF5>
extern volatile __bit                   G1BLKF5             __at(0x3485);	// @ (0x690 * 8 + 5)
#define                                 G1BLKF5_bit         _BIT_ACCESS(COG1BLKF,5)
// COG1BLKR<G1BLKR0>
extern volatile __bit                   G1BLKR0             __at(0x3478);	// @ (0x68F * 8 + 0)
#define                                 G1BLKR0_bit         _BIT_ACCESS(COG1BLKR,0)
// COG1BLKR<G1BLKR1>
extern volatile __bit                   G1BLKR1             __at(0x3479);	// @ (0x68F * 8 + 1)
#define                                 G1BLKR1_bit         _BIT_ACCESS(COG1BLKR,1)
// COG1BLKR<G1BLKR2>
extern volatile __bit                   G1BLKR2             __at(0x347A);	// @ (0x68F * 8 + 2)
#define                                 G1BLKR2_bit         _BIT_ACCESS(COG1BLKR,2)
// COG1BLKR<G1BLKR3>
extern volatile __bit                   G1BLKR3             __at(0x347B);	// @ (0x68F * 8 + 3)
#define                                 G1BLKR3_bit         _BIT_ACCESS(COG1BLKR,3)
// COG1BLKR<G1BLKR4>
extern volatile __bit                   G1BLKR4             __at(0x347C);	// @ (0x68F * 8 + 4)
#define                                 G1BLKR4_bit         _BIT_ACCESS(COG1BLKR,4)
// COG1BLKR<G1BLKR5>
extern volatile __bit                   G1BLKR5             __at(0x347D);	// @ (0x68F * 8 + 5)
#define                                 G1BLKR5_bit         _BIT_ACCESS(COG1BLKR,5)
// COG1CON0<G1CS0>
extern volatile __bit                   G1CS0               __at(0x349B);	// @ (0x693 * 8 + 3)
#define                                 G1CS0_bit           _BIT_ACCESS(COG1CON0,3)
// COG1CON0<G1CS1>
extern volatile __bit                   G1CS1               __at(0x349C);	// @ (0x693 * 8 + 4)
#define                                 G1CS1_bit           _BIT_ACCESS(COG1CON0,4)
// COG1DBF<G1DBF0>
extern volatile __bit                   G1DBF0              __at(0x3490);	// @ (0x692 * 8 + 0)
#define                                 G1DBF0_bit          _BIT_ACCESS(COG1DBF,0)
// COG1DBF<G1DBF1>
extern volatile __bit                   G1DBF1              __at(0x3491);	// @ (0x692 * 8 + 1)
#define                                 G1DBF1_bit          _BIT_ACCESS(COG1DBF,1)
// COG1DBF<G1DBF2>
extern volatile __bit                   G1DBF2              __at(0x3492);	// @ (0x692 * 8 + 2)
#define                                 G1DBF2_bit          _BIT_ACCESS(COG1DBF,2)
// COG1DBF<G1DBF3>
extern volatile __bit                   G1DBF3              __at(0x3493);	// @ (0x692 * 8 + 3)
#define                                 G1DBF3_bit          _BIT_ACCESS(COG1DBF,3)
// COG1DBF<G1DBF4>
extern volatile __bit                   G1DBF4              __at(0x3494);	// @ (0x692 * 8 + 4)
#define                                 G1DBF4_bit          _BIT_ACCESS(COG1DBF,4)
// COG1DBF<G1DBF5>
extern volatile __bit                   G1DBF5              __at(0x3495);	// @ (0x692 * 8 + 5)
#define                                 G1DBF5_bit          _BIT_ACCESS(COG1DBF,5)
// COG1DBR<G1DBR0>
extern volatile __bit                   G1DBR0              __at(0x3488);	// @ (0x691 * 8 + 0)
#define                                 G1DBR0_bit          _BIT_ACCESS(COG1DBR,0)
// COG1DBR<G1DBR1>
extern volatile __bit                   G1DBR1              __at(0x3489);	// @ (0x691 * 8 + 1)
#define                                 G1DBR1_bit          _BIT_ACCESS(COG1DBR,1)
// COG1DBR<G1DBR2>
extern volatile __bit                   G1DBR2              __at(0x348A);	// @ (0x691 * 8 + 2)
#define                                 G1DBR2_bit          _BIT_ACCESS(COG1DBR,2)
// COG1DBR<G1DBR3>
extern volatile __bit                   G1DBR3              __at(0x348B);	// @ (0x691 * 8 + 3)
#define                                 G1DBR3_bit          _BIT_ACCESS(COG1DBR,3)
// COG1DBR<G1DBR4>
extern volatile __bit                   G1DBR4              __at(0x348C);	// @ (0x691 * 8 + 4)
#define                                 G1DBR4_bit          _BIT_ACCESS(COG1DBR,4)
// COG1DBR<G1DBR5>
extern volatile __bit                   G1DBR5              __at(0x348D);	// @ (0x691 * 8 + 5)
#define                                 G1DBR5_bit          _BIT_ACCESS(COG1DBR,5)
// COG1CON0<G1EN>
extern volatile __bit                   G1EN                __at(0x349F);	// @ (0x693 * 8 + 7)
#define                                 G1EN_bit            _BIT_ACCESS(COG1CON0,7)
// COG1CON1<G1FDBS>
extern volatile __bit                   G1FDBS              __at(0x34A6);	// @ (0x694 * 8 + 6)
#define                                 G1FDBS_bit          _BIT_ACCESS(COG1CON1,6)
// COG1FIS0<G1FIS0>
extern volatile __bit                   G1FIS0              __at(0x34C8);	// @ (0x699 * 8 + 0)
#define                                 G1FIS0_bit          _BIT_ACCESS(COG1FIS0,0)
// COG1FIS0<G1FIS1>
extern volatile __bit                   G1FIS1              __at(0x34C9);	// @ (0x699 * 8 + 1)
#define                                 G1FIS1_bit          _BIT_ACCESS(COG1FIS0,1)
// COG1FIS1<G1FIS10>
extern volatile __bit                   G1FIS10             __at(0x34D2);	// @ (0x69A * 8 + 2)
#define                                 G1FIS10_bit         _BIT_ACCESS(COG1FIS1,2)
// COG1FIS1<G1FIS11>
extern volatile __bit                   G1FIS11             __at(0x34D3);	// @ (0x69A * 8 + 3)
#define                                 G1FIS11_bit         _BIT_ACCESS(COG1FIS1,3)
// COG1FIS1<G1FIS12>
extern volatile __bit                   G1FIS12             __at(0x34D4);	// @ (0x69A * 8 + 4)
#define                                 G1FIS12_bit         _BIT_ACCESS(COG1FIS1,4)
// COG1FIS1<G1FIS13>
extern volatile __bit                   G1FIS13             __at(0x34D5);	// @ (0x69A * 8 + 5)
#define                                 G1FIS13_bit         _BIT_ACCESS(COG1FIS1,5)
// COG1FIS1<G1FIS14>
extern volatile __bit                   G1FIS14             __at(0x34D6);	// @ (0x69A * 8 + 6)
#define                                 G1FIS14_bit         _BIT_ACCESS(COG1FIS1,6)
// COG1FIS1<G1FIS15>
extern volatile __bit                   G1FIS15             __at(0x34D7);	// @ (0x69A * 8 + 7)
#define                                 G1FIS15_bit         _BIT_ACCESS(COG1FIS1,7)
// COG1FIS0<G1FIS2>
extern volatile __bit                   G1FIS2              __at(0x34CA);	// @ (0x699 * 8 + 2)
#define                                 G1FIS2_bit          _BIT_ACCESS(COG1FIS0,2)
// COG1FIS0<G1FIS3>
extern volatile __bit                   G1FIS3              __at(0x34CB);	// @ (0x699 * 8 + 3)
#define                                 G1FIS3_bit          _BIT_ACCESS(COG1FIS0,3)
// COG1FIS0<G1FIS4>
extern volatile __bit                   G1FIS4              __at(0x34CC);	// @ (0x699 * 8 + 4)
#define                                 G1FIS4_bit          _BIT_ACCESS(COG1FIS0,4)
// COG1FIS0<G1FIS5>
extern volatile __bit                   G1FIS5              __at(0x34CD);	// @ (0x699 * 8 + 5)
#define                                 G1FIS5_bit          _BIT_ACCESS(COG1FIS0,5)
// COG1FIS0<G1FIS6>
extern volatile __bit                   G1FIS6              __at(0x34CE);	// @ (0x699 * 8 + 6)
#define                                 G1FIS6_bit          _BIT_ACCESS(COG1FIS0,6)
// COG1FIS0<G1FIS7>
extern volatile __bit                   G1FIS7              __at(0x34CF);	// @ (0x699 * 8 + 7)
#define                                 G1FIS7_bit          _BIT_ACCESS(COG1FIS0,7)
// COG1FIS1<G1FIS8>
extern volatile __bit                   G1FIS8              __at(0x34D0);	// @ (0x69A * 8 + 0)
#define                                 G1FIS8_bit          _BIT_ACCESS(COG1FIS1,0)
// COG1FIS1<G1FIS9>
extern volatile __bit                   G1FIS9              __at(0x34D1);	// @ (0x69A * 8 + 1)
#define                                 G1FIS9_bit          _BIT_ACCESS(COG1FIS1,1)
// COG1FSIM0<G1FSIM0>
extern volatile __bit                   G1FSIM0             __at(0x34D8);	// @ (0x69B * 8 + 0)
#define                                 G1FSIM0_bit         _BIT_ACCESS(COG1FSIM0,0)
// COG1FSIM0<G1FSIM1>
extern volatile __bit                   G1FSIM1             __at(0x34D9);	// @ (0x69B * 8 + 1)
#define                                 G1FSIM1_bit         _BIT_ACCESS(COG1FSIM0,1)
// COG1FSIM1<G1FSIM10>
extern volatile __bit                   G1FSIM10            __at(0x34E2);	// @ (0x69C * 8 + 2)
#define                                 G1FSIM10_bit        _BIT_ACCESS(COG1FSIM1,2)
// COG1FSIM1<G1FSIM11>
extern volatile __bit                   G1FSIM11            __at(0x34E3);	// @ (0x69C * 8 + 3)
#define                                 G1FSIM11_bit        _BIT_ACCESS(COG1FSIM1,3)
// COG1FSIM1<G1FSIM12>
extern volatile __bit                   G1FSIM12            __at(0x34E4);	// @ (0x69C * 8 + 4)
#define                                 G1FSIM12_bit        _BIT_ACCESS(COG1FSIM1,4)
// COG1FSIM1<G1FSIM13>
extern volatile __bit                   G1FSIM13            __at(0x34E5);	// @ (0x69C * 8 + 5)
#define                                 G1FSIM13_bit        _BIT_ACCESS(COG1FSIM1,5)
// COG1FSIM1<G1FSIM14>
extern volatile __bit                   G1FSIM14            __at(0x34E6);	// @ (0x69C * 8 + 6)
#define                                 G1FSIM14_bit        _BIT_ACCESS(COG1FSIM1,6)
// COG1FSIM1<G1FSIM15>
extern volatile __bit                   G1FSIM15            __at(0x34E7);	// @ (0x69C * 8 + 7)
#define                                 G1FSIM15_bit        _BIT_ACCESS(COG1FSIM1,7)
// COG1FSIM0<G1FSIM2>
extern volatile __bit                   G1FSIM2             __at(0x34DA);	// @ (0x69B * 8 + 2)
#define                                 G1FSIM2_bit         _BIT_ACCESS(COG1FSIM0,2)
// COG1FSIM0<G1FSIM3>
extern volatile __bit                   G1FSIM3             __at(0x34DB);	// @ (0x69B * 8 + 3)
#define                                 G1FSIM3_bit         _BIT_ACCESS(COG1FSIM0,3)
// COG1FSIM0<G1FSIM4>
extern volatile __bit                   G1FSIM4             __at(0x34DC);	// @ (0x69B * 8 + 4)
#define                                 G1FSIM4_bit         _BIT_ACCESS(COG1FSIM0,4)
// COG1FSIM0<G1FSIM5>
extern volatile __bit                   G1FSIM5             __at(0x34DD);	// @ (0x69B * 8 + 5)
#define                                 G1FSIM5_bit         _BIT_ACCESS(COG1FSIM0,5)
// COG1FSIM0<G1FSIM6>
extern volatile __bit                   G1FSIM6             __at(0x34DE);	// @ (0x69B * 8 + 6)
#define                                 G1FSIM6_bit         _BIT_ACCESS(COG1FSIM0,6)
// COG1FSIM0<G1FSIM7>
extern volatile __bit                   G1FSIM7             __at(0x34DF);	// @ (0x69B * 8 + 7)
#define                                 G1FSIM7_bit         _BIT_ACCESS(COG1FSIM0,7)
// COG1FSIM1<G1FSIM8>
extern volatile __bit                   G1FSIM8             __at(0x34E0);	// @ (0x69C * 8 + 0)
#define                                 G1FSIM8_bit         _BIT_ACCESS(COG1FSIM1,0)
// COG1FSIM1<G1FSIM9>
extern volatile __bit                   G1FSIM9             __at(0x34E1);	// @ (0x69C * 8 + 1)
#define                                 G1FSIM9_bit         _BIT_ACCESS(COG1FSIM1,1)
// COG1CON0<G1LD>
extern volatile __bit                   G1LD                __at(0x349E);	// @ (0x693 * 8 + 6)
#define                                 G1LD_bit            _BIT_ACCESS(COG1CON0,6)
// COG1CON0<G1MD0>
extern volatile __bit                   G1MD0               __at(0x3498);	// @ (0x693 * 8 + 0)
#define                                 G1MD0_bit           _BIT_ACCESS(COG1CON0,0)
// COG1CON0<G1MD1>
extern volatile __bit                   G1MD1               __at(0x3499);	// @ (0x693 * 8 + 1)
#define                                 G1MD1_bit           _BIT_ACCESS(COG1CON0,1)
// COG1CON0<G1MD2>
extern volatile __bit                   G1MD2               __at(0x349A);	// @ (0x693 * 8 + 2)
#define                                 G1MD2_bit           _BIT_ACCESS(COG1CON0,2)
// COG1PHF<G1PHF0>
extern volatile __bit                   G1PHF0              __at(0x3470);	// @ (0x68E * 8 + 0)
#define                                 G1PHF0_bit          _BIT_ACCESS(COG1PHF,0)
// COG1PHF<G1PHF1>
extern volatile __bit                   G1PHF1              __at(0x3471);	// @ (0x68E * 8 + 1)
#define                                 G1PHF1_bit          _BIT_ACCESS(COG1PHF,1)
// COG1PHF<G1PHF2>
extern volatile __bit                   G1PHF2              __at(0x3472);	// @ (0x68E * 8 + 2)
#define                                 G1PHF2_bit          _BIT_ACCESS(COG1PHF,2)
// COG1PHF<G1PHF3>
extern volatile __bit                   G1PHF3              __at(0x3473);	// @ (0x68E * 8 + 3)
#define                                 G1PHF3_bit          _BIT_ACCESS(COG1PHF,3)
// COG1PHF<G1PHF4>
extern volatile __bit                   G1PHF4              __at(0x3474);	// @ (0x68E * 8 + 4)
#define                                 G1PHF4_bit          _BIT_ACCESS(COG1PHF,4)
// COG1PHF<G1PHF5>
extern volatile __bit                   G1PHF5              __at(0x3475);	// @ (0x68E * 8 + 5)
#define                                 G1PHF5_bit          _BIT_ACCESS(COG1PHF,5)
// COG1PHR<G1PHR0>
extern volatile __bit                   G1PHR0              __at(0x3468);	// @ (0x68D * 8 + 0)
#define                                 G1PHR0_bit          _BIT_ACCESS(COG1PHR,0)
// COG1PHR<G1PHR1>
extern volatile __bit                   G1PHR1              __at(0x3469);	// @ (0x68D * 8 + 1)
#define                                 G1PHR1_bit          _BIT_ACCESS(COG1PHR,1)
// COG1PHR<G1PHR2>
extern volatile __bit                   G1PHR2              __at(0x346A);	// @ (0x68D * 8 + 2)
#define                                 G1PHR2_bit          _BIT_ACCESS(COG1PHR,2)
// COG1PHR<G1PHR3>
extern volatile __bit                   G1PHR3              __at(0x346B);	// @ (0x68D * 8 + 3)
#define                                 G1PHR3_bit          _BIT_ACCESS(COG1PHR,3)
// COG1PHR<G1PHR4>
extern volatile __bit                   G1PHR4              __at(0x346C);	// @ (0x68D * 8 + 4)
#define                                 G1PHR4_bit          _BIT_ACCESS(COG1PHR,4)
// COG1PHR<G1PHR5>
extern volatile __bit                   G1PHR5              __at(0x346D);	// @ (0x68D * 8 + 5)
#define                                 G1PHR5_bit          _BIT_ACCESS(COG1PHR,5)
// COG1CON1<G1POLA>
extern volatile __bit                   G1POLA              __at(0x34A0);	// @ (0x694 * 8 + 0)
#define                                 G1POLA_bit          _BIT_ACCESS(COG1CON1,0)
// COG1CON1<G1POLB>
extern volatile __bit                   G1POLB              __at(0x34A1);	// @ (0x694 * 8 + 1)
#define                                 G1POLB_bit          _BIT_ACCESS(COG1CON1,1)
// COG1CON1<G1POLC>
extern volatile __bit                   G1POLC              __at(0x34A2);	// @ (0x694 * 8 + 2)
#define                                 G1POLC_bit          _BIT_ACCESS(COG1CON1,2)
// COG1CON1<G1POLD>
extern volatile __bit                   G1POLD              __at(0x34A3);	// @ (0x694 * 8 + 3)
#define                                 G1POLD_bit          _BIT_ACCESS(COG1CON1,3)
// COG1CON1<G1RDBS>
extern volatile __bit                   G1RDBS              __at(0x34A7);	// @ (0x694 * 8 + 7)
#define                                 G1RDBS_bit          _BIT_ACCESS(COG1CON1,7)
// COG1RIS0<G1RIS0>
extern volatile __bit                   G1RIS0              __at(0x34A8);	// @ (0x695 * 8 + 0)
#define                                 G1RIS0_bit          _BIT_ACCESS(COG1RIS0,0)
// COG1RIS0<G1RIS1>
extern volatile __bit                   G1RIS1              __at(0x34A9);	// @ (0x695 * 8 + 1)
#define                                 G1RIS1_bit          _BIT_ACCESS(COG1RIS0,1)
// COG1RIS1<G1RIS10>
extern volatile __bit                   G1RIS10             __at(0x34B2);	// @ (0x696 * 8 + 2)
#define                                 G1RIS10_bit         _BIT_ACCESS(COG1RIS1,2)
// COG1RIS1<G1RIS11>
extern volatile __bit                   G1RIS11             __at(0x34B3);	// @ (0x696 * 8 + 3)
#define                                 G1RIS11_bit         _BIT_ACCESS(COG1RIS1,3)
// COG1RIS1<G1RIS12>
extern volatile __bit                   G1RIS12             __at(0x34B4);	// @ (0x696 * 8 + 4)
#define                                 G1RIS12_bit         _BIT_ACCESS(COG1RIS1,4)
// COG1RIS1<G1RIS13>
extern volatile __bit                   G1RIS13             __at(0x34B5);	// @ (0x696 * 8 + 5)
#define                                 G1RIS13_bit         _BIT_ACCESS(COG1RIS1,5)
// COG1RIS1<G1RIS14>
extern volatile __bit                   G1RIS14             __at(0x34B6);	// @ (0x696 * 8 + 6)
#define                                 G1RIS14_bit         _BIT_ACCESS(COG1RIS1,6)
// COG1RIS1<G1RIS15>
extern volatile __bit                   G1RIS15             __at(0x34B7);	// @ (0x696 * 8 + 7)
#define                                 G1RIS15_bit         _BIT_ACCESS(COG1RIS1,7)
// COG1RIS0<G1RIS2>
extern volatile __bit                   G1RIS2              __at(0x34AA);	// @ (0x695 * 8 + 2)
#define                                 G1RIS2_bit          _BIT_ACCESS(COG1RIS0,2)
// COG1RIS0<G1RIS3>
extern volatile __bit                   G1RIS3              __at(0x34AB);	// @ (0x695 * 8 + 3)
#define                                 G1RIS3_bit          _BIT_ACCESS(COG1RIS0,3)
// COG1RIS0<G1RIS4>
extern volatile __bit                   G1RIS4              __at(0x34AC);	// @ (0x695 * 8 + 4)
#define                                 G1RIS4_bit          _BIT_ACCESS(COG1RIS0,4)
// COG1RIS0<G1RIS5>
extern volatile __bit                   G1RIS5              __at(0x34AD);	// @ (0x695 * 8 + 5)
#define                                 G1RIS5_bit          _BIT_ACCESS(COG1RIS0,5)
// COG1RIS0<G1RIS6>
extern volatile __bit                   G1RIS6              __at(0x34AE);	// @ (0x695 * 8 + 6)
#define                                 G1RIS6_bit          _BIT_ACCESS(COG1RIS0,6)
// COG1RIS0<G1RIS7>
extern volatile __bit                   G1RIS7              __at(0x34AF);	// @ (0x695 * 8 + 7)
#define                                 G1RIS7_bit          _BIT_ACCESS(COG1RIS0,7)
// COG1RIS1<G1RIS8>
extern volatile __bit                   G1RIS8              __at(0x34B0);	// @ (0x696 * 8 + 0)
#define                                 G1RIS8_bit          _BIT_ACCESS(COG1RIS1,0)
// COG1RIS1<G1RIS9>
extern volatile __bit                   G1RIS9              __at(0x34B1);	// @ (0x696 * 8 + 1)
#define                                 G1RIS9_bit          _BIT_ACCESS(COG1RIS1,1)
// COG1RSIM0<G1RSIM0>
extern volatile __bit                   G1RSIM0             __at(0x34B8);	// @ (0x697 * 8 + 0)
#define                                 G1RSIM0_bit         _BIT_ACCESS(COG1RSIM0,0)
// COG1RSIM0<G1RSIM1>
extern volatile __bit                   G1RSIM1             __at(0x34B9);	// @ (0x697 * 8 + 1)
#define                                 G1RSIM1_bit         _BIT_ACCESS(COG1RSIM0,1)
// COG1RSIM1<G1RSIM10>
extern volatile __bit                   G1RSIM10            __at(0x34C2);	// @ (0x698 * 8 + 2)
#define                                 G1RSIM10_bit        _BIT_ACCESS(COG1RSIM1,2)
// COG1RSIM1<G1RSIM11>
extern volatile __bit                   G1RSIM11            __at(0x34C3);	// @ (0x698 * 8 + 3)
#define                                 G1RSIM11_bit        _BIT_ACCESS(COG1RSIM1,3)
// COG1RSIM1<G1RSIM12>
extern volatile __bit                   G1RSIM12            __at(0x34C4);	// @ (0x698 * 8 + 4)
#define                                 G1RSIM12_bit        _BIT_ACCESS(COG1RSIM1,4)
// COG1RSIM1<G1RSIM13>
extern volatile __bit                   G1RSIM13            __at(0x34C5);	// @ (0x698 * 8 + 5)
#define                                 G1RSIM13_bit        _BIT_ACCESS(COG1RSIM1,5)
// COG1RSIM1<G1RSIM14>
extern volatile __bit                   G1RSIM14            __at(0x34C6);	// @ (0x698 * 8 + 6)
#define                                 G1RSIM14_bit        _BIT_ACCESS(COG1RSIM1,6)
// COG1RSIM1<G1RSIM15>
extern volatile __bit                   G1RSIM15            __at(0x34C7);	// @ (0x698 * 8 + 7)
#define                                 G1RSIM15_bit        _BIT_ACCESS(COG1RSIM1,7)
// COG1RSIM0<G1RSIM2>
extern volatile __bit                   G1RSIM2             __at(0x34BA);	// @ (0x697 * 8 + 2)
#define                                 G1RSIM2_bit         _BIT_ACCESS(COG1RSIM0,2)
// COG1RSIM0<G1RSIM3>
extern volatile __bit                   G1RSIM3             __at(0x34BB);	// @ (0x697 * 8 + 3)
#define                                 G1RSIM3_bit         _BIT_ACCESS(COG1RSIM0,3)
// COG1RSIM0<G1RSIM4>
extern volatile __bit                   G1RSIM4             __at(0x34BC);	// @ (0x697 * 8 + 4)
#define                                 G1RSIM4_bit         _BIT_ACCESS(COG1RSIM0,4)
// COG1RSIM0<G1RSIM5>
extern volatile __bit                   G1RSIM5             __at(0x34BD);	// @ (0x697 * 8 + 5)
#define                                 G1RSIM5_bit         _BIT_ACCESS(COG1RSIM0,5)
// COG1RSIM0<G1RSIM6>
extern volatile __bit                   G1RSIM6             __at(0x34BE);	// @ (0x697 * 8 + 6)
#define                                 G1RSIM6_bit         _BIT_ACCESS(COG1RSIM0,6)
// COG1RSIM0<G1RSIM7>
extern volatile __bit                   G1RSIM7             __at(0x34BF);	// @ (0x697 * 8 + 7)
#define                                 G1RSIM7_bit         _BIT_ACCESS(COG1RSIM0,7)
// COG1RSIM1<G1RSIM8>
extern volatile __bit                   G1RSIM8             __at(0x34C0);	// @ (0x698 * 8 + 0)
#define                                 G1RSIM8_bit         _BIT_ACCESS(COG1RSIM1,0)
// COG1RSIM1<G1RSIM9>
extern volatile __bit                   G1RSIM9             __at(0x34C1);	// @ (0x698 * 8 + 1)
#define                                 G1RSIM9_bit         _BIT_ACCESS(COG1RSIM1,1)
// COG1STR<G1SDATA>
extern volatile __bit                   G1SDATA             __at(0x34FC);	// @ (0x69F * 8 + 4)
#define                                 G1SDATA_bit         _BIT_ACCESS(COG1STR,4)
// COG1STR<G1SDATB>
extern volatile __bit                   G1SDATB             __at(0x34FD);	// @ (0x69F * 8 + 5)
#define                                 G1SDATB_bit         _BIT_ACCESS(COG1STR,5)
// COG1STR<G1SDATC>
extern volatile __bit                   G1SDATC             __at(0x34FE);	// @ (0x69F * 8 + 6)
#define                                 G1SDATC_bit         _BIT_ACCESS(COG1STR,6)
// COG1STR<G1SDATD>
extern volatile __bit                   G1SDATD             __at(0x34FF);	// @ (0x69F * 8 + 7)
#define                                 G1SDATD_bit         _BIT_ACCESS(COG1STR,7)
// COG1STR<G1STRA>
extern volatile __bit                   G1STRA              __at(0x34F8);	// @ (0x69F * 8 + 0)
#define                                 G1STRA_bit          _BIT_ACCESS(COG1STR,0)
// COG1STR<G1STRB>
extern volatile __bit                   G1STRB              __at(0x34F9);	// @ (0x69F * 8 + 1)
#define                                 G1STRB_bit          _BIT_ACCESS(COG1STR,1)
// COG1STR<G1STRC>
extern volatile __bit                   G1STRC              __at(0x34FA);	// @ (0x69F * 8 + 2)
#define                                 G1STRC_bit          _BIT_ACCESS(COG1STR,2)
// COG1STR<G1STRD>
extern volatile __bit                   G1STRD              __at(0x34FB);	// @ (0x69F * 8 + 3)
#define                                 G1STRD_bit          _BIT_ACCESS(COG1STR,3)
// COG2ASD0<G2ARSEN>
extern volatile __bit                   G2ARSEN             __at(0x38EE);	// @ (0x71D * 8 + 6)
#define                                 G2ARSEN_bit         _BIT_ACCESS(COG2ASD0,6)
// COG2ASD1<G2AS0E>
extern volatile __bit                   G2AS0E              __at(0x38F0);	// @ (0x71E * 8 + 0)
#define                                 G2AS0E_bit          _BIT_ACCESS(COG2ASD1,0)
// COG2ASD1<G2AS1E>
extern volatile __bit                   G2AS1E              __at(0x38F1);	// @ (0x71E * 8 + 1)
#define                                 G2AS1E_bit          _BIT_ACCESS(COG2ASD1,1)
// COG2ASD1<G2AS2E>
extern volatile __bit                   G2AS2E              __at(0x38F2);	// @ (0x71E * 8 + 2)
#define                                 G2AS2E_bit          _BIT_ACCESS(COG2ASD1,2)
// COG2ASD1<G2AS3E>
extern volatile __bit                   G2AS3E              __at(0x38F3);	// @ (0x71E * 8 + 3)
#define                                 G2AS3E_bit          _BIT_ACCESS(COG2ASD1,3)
// COG2ASD1<G2AS4E>
extern volatile __bit                   G2AS4E              __at(0x38F4);	// @ (0x71E * 8 + 4)
#define                                 G2AS4E_bit          _BIT_ACCESS(COG2ASD1,4)
// COG2ASD1<G2AS5E>
extern volatile __bit                   G2AS5E              __at(0x38F5);	// @ (0x71E * 8 + 5)
#define                                 G2AS5E_bit          _BIT_ACCESS(COG2ASD1,5)
// COG2ASD1<G2AS6E>
extern volatile __bit                   G2AS6E              __at(0x38F6);	// @ (0x71E * 8 + 6)
#define                                 G2AS6E_bit          _BIT_ACCESS(COG2ASD1,6)
// COG2ASD1<G2AS7E>
extern volatile __bit                   G2AS7E              __at(0x38F7);	// @ (0x71E * 8 + 7)
#define                                 G2AS7E_bit          _BIT_ACCESS(COG2ASD1,7)
// COG2ASD0<G2ASDAC0>
extern volatile __bit                   G2ASDAC0            __at(0x38EA);	// @ (0x71D * 8 + 2)
#define                                 G2ASDAC0_bit        _BIT_ACCESS(COG2ASD0,2)
// COG2ASD0<G2ASDAC1>
extern volatile __bit                   G2ASDAC1            __at(0x38EB);	// @ (0x71D * 8 + 3)
#define                                 G2ASDAC1_bit        _BIT_ACCESS(COG2ASD0,3)
// COG2ASD0<G2ASDBD0>
extern volatile __bit                   G2ASDBD0            __at(0x38EC);	// @ (0x71D * 8 + 4)
#define                                 G2ASDBD0_bit        _BIT_ACCESS(COG2ASD0,4)
// COG2ASD0<G2ASDBD1>
extern volatile __bit                   G2ASDBD1            __at(0x38ED);	// @ (0x71D * 8 + 5)
#define                                 G2ASDBD1_bit        _BIT_ACCESS(COG2ASD0,5)
// COG2ASD0<G2ASE>
extern volatile __bit                   G2ASE               __at(0x38EF);	// @ (0x71D * 8 + 7)
#define                                 G2ASE_bit           _BIT_ACCESS(COG2ASD0,7)
// COG2ASD0<G2ASREN>
extern volatile __bit                   G2ASREN             __at(0x38EE);	// @ (0x71D * 8 + 6)
#define                                 G2ASREN_bit         _BIT_ACCESS(COG2ASD0,6)
// COG2BLKF<G2BLKF0>
extern volatile __bit                   G2BLKF0             __at(0x3880);	// @ (0x710 * 8 + 0)
#define                                 G2BLKF0_bit         _BIT_ACCESS(COG2BLKF,0)
// COG2BLKF<G2BLKF1>
extern volatile __bit                   G2BLKF1             __at(0x3881);	// @ (0x710 * 8 + 1)
#define                                 G2BLKF1_bit         _BIT_ACCESS(COG2BLKF,1)
// COG2BLKF<G2BLKF2>
extern volatile __bit                   G2BLKF2             __at(0x3882);	// @ (0x710 * 8 + 2)
#define                                 G2BLKF2_bit         _BIT_ACCESS(COG2BLKF,2)
// COG2BLKF<G2BLKF3>
extern volatile __bit                   G2BLKF3             __at(0x3883);	// @ (0x710 * 8 + 3)
#define                                 G2BLKF3_bit         _BIT_ACCESS(COG2BLKF,3)
// COG2BLKF<G2BLKF4>
extern volatile __bit                   G2BLKF4             __at(0x3884);	// @ (0x710 * 8 + 4)
#define                                 G2BLKF4_bit         _BIT_ACCESS(COG2BLKF,4)
// COG2BLKF<G2BLKF5>
extern volatile __bit                   G2BLKF5             __at(0x3885);	// @ (0x710 * 8 + 5)
#define                                 G2BLKF5_bit         _BIT_ACCESS(COG2BLKF,5)
// COG2BLKR<G2BLKR0>
extern volatile __bit                   G2BLKR0             __at(0x3878);	// @ (0x70F * 8 + 0)
#define                                 G2BLKR0_bit         _BIT_ACCESS(COG2BLKR,0)
// COG2BLKR<G2BLKR1>
extern volatile __bit                   G2BLKR1             __at(0x3879);	// @ (0x70F * 8 + 1)
#define                                 G2BLKR1_bit         _BIT_ACCESS(COG2BLKR,1)
// COG2BLKR<G2BLKR2>
extern volatile __bit                   G2BLKR2             __at(0x387A);	// @ (0x70F * 8 + 2)
#define                                 G2BLKR2_bit         _BIT_ACCESS(COG2BLKR,2)
// COG2BLKR<G2BLKR3>
extern volatile __bit                   G2BLKR3             __at(0x387B);	// @ (0x70F * 8 + 3)
#define                                 G2BLKR3_bit         _BIT_ACCESS(COG2BLKR,3)
// COG2BLKR<G2BLKR4>
extern volatile __bit                   G2BLKR4             __at(0x387C);	// @ (0x70F * 8 + 4)
#define                                 G2BLKR4_bit         _BIT_ACCESS(COG2BLKR,4)
// COG2BLKR<G2BLKR5>
extern volatile __bit                   G2BLKR5             __at(0x387D);	// @ (0x70F * 8 + 5)
#define                                 G2BLKR5_bit         _BIT_ACCESS(COG2BLKR,5)
// COG2CON0<G2CS0>
extern volatile __bit                   G2CS0               __at(0x389B);	// @ (0x713 * 8 + 3)
#define                                 G2CS0_bit           _BIT_ACCESS(COG2CON0,3)
// COG2CON0<G2CS1>
extern volatile __bit                   G2CS1               __at(0x389C);	// @ (0x713 * 8 + 4)
#define                                 G2CS1_bit           _BIT_ACCESS(COG2CON0,4)
// COG2DBF<G2DBF0>
extern volatile __bit                   G2DBF0              __at(0x3890);	// @ (0x712 * 8 + 0)
#define                                 G2DBF0_bit          _BIT_ACCESS(COG2DBF,0)
// COG2DBF<G2DBF1>
extern volatile __bit                   G2DBF1              __at(0x3891);	// @ (0x712 * 8 + 1)
#define                                 G2DBF1_bit          _BIT_ACCESS(COG2DBF,1)
// COG2DBF<G2DBF2>
extern volatile __bit                   G2DBF2              __at(0x3892);	// @ (0x712 * 8 + 2)
#define                                 G2DBF2_bit          _BIT_ACCESS(COG2DBF,2)
// COG2DBF<G2DBF3>
extern volatile __bit                   G2DBF3              __at(0x3893);	// @ (0x712 * 8 + 3)
#define                                 G2DBF3_bit          _BIT_ACCESS(COG2DBF,3)
// COG2DBF<G2DBF4>
extern volatile __bit                   G2DBF4              __at(0x3894);	// @ (0x712 * 8 + 4)
#define                                 G2DBF4_bit          _BIT_ACCESS(COG2DBF,4)
// COG2DBF<G2DBF5>
extern volatile __bit                   G2DBF5              __at(0x3895);	// @ (0x712 * 8 + 5)
#define                                 G2DBF5_bit          _BIT_ACCESS(COG2DBF,5)
// COG2DBR<G2DBR0>
extern volatile __bit                   G2DBR0              __at(0x3888);	// @ (0x711 * 8 + 0)
#define                                 G2DBR0_bit          _BIT_ACCESS(COG2DBR,0)
// COG2DBR<G2DBR1>
extern volatile __bit                   G2DBR1              __at(0x3889);	// @ (0x711 * 8 + 1)
#define                                 G2DBR1_bit          _BIT_ACCESS(COG2DBR,1)
// COG2DBR<G2DBR2>
extern volatile __bit                   G2DBR2              __at(0x388A);	// @ (0x711 * 8 + 2)
#define                                 G2DBR2_bit          _BIT_ACCESS(COG2DBR,2)
// COG2DBR<G2DBR3>
extern volatile __bit                   G2DBR3              __at(0x388B);	// @ (0x711 * 8 + 3)
#define                                 G2DBR3_bit          _BIT_ACCESS(COG2DBR,3)
// COG2DBR<G2DBR4>
extern volatile __bit                   G2DBR4              __at(0x388C);	// @ (0x711 * 8 + 4)
#define                                 G2DBR4_bit          _BIT_ACCESS(COG2DBR,4)
// COG2DBR<G2DBR5>
extern volatile __bit                   G2DBR5              __at(0x388D);	// @ (0x711 * 8 + 5)
#define                                 G2DBR5_bit          _BIT_ACCESS(COG2DBR,5)
// COG2CON0<G2EN>
extern volatile __bit                   G2EN                __at(0x389F);	// @ (0x713 * 8 + 7)
#define                                 G2EN_bit            _BIT_ACCESS(COG2CON0,7)
// COG2CON1<G2FDBS>
extern volatile __bit                   G2FDBS              __at(0x38A6);	// @ (0x714 * 8 + 6)
#define                                 G2FDBS_bit          _BIT_ACCESS(COG2CON1,6)
// COG2FIS0<G2FIS0>
extern volatile __bit                   G2FIS0              __at(0x38C8);	// @ (0x719 * 8 + 0)
#define                                 G2FIS0_bit          _BIT_ACCESS(COG2FIS0,0)
// COG2FIS0<G2FIS1>
extern volatile __bit                   G2FIS1              __at(0x38C9);	// @ (0x719 * 8 + 1)
#define                                 G2FIS1_bit          _BIT_ACCESS(COG2FIS0,1)
// COG2FIS1<G2FIS10>
extern volatile __bit                   G2FIS10             __at(0x38D2);	// @ (0x71A * 8 + 2)
#define                                 G2FIS10_bit         _BIT_ACCESS(COG2FIS1,2)
// COG2FIS1<G2FIS11>
extern volatile __bit                   G2FIS11             __at(0x38D3);	// @ (0x71A * 8 + 3)
#define                                 G2FIS11_bit         _BIT_ACCESS(COG2FIS1,3)
// COG2FIS1<G2FIS12>
extern volatile __bit                   G2FIS12             __at(0x38D4);	// @ (0x71A * 8 + 4)
#define                                 G2FIS12_bit         _BIT_ACCESS(COG2FIS1,4)
// COG2FIS1<G2FIS13>
extern volatile __bit                   G2FIS13             __at(0x38D5);	// @ (0x71A * 8 + 5)
#define                                 G2FIS13_bit         _BIT_ACCESS(COG2FIS1,5)
// COG2FIS1<G2FIS14>
extern volatile __bit                   G2FIS14             __at(0x38D6);	// @ (0x71A * 8 + 6)
#define                                 G2FIS14_bit         _BIT_ACCESS(COG2FIS1,6)
// COG2FIS1<G2FIS15>
extern volatile __bit                   G2FIS15             __at(0x38D7);	// @ (0x71A * 8 + 7)
#define                                 G2FIS15_bit         _BIT_ACCESS(COG2FIS1,7)
// COG2FIS0<G2FIS2>
extern volatile __bit                   G2FIS2              __at(0x38CA);	// @ (0x719 * 8 + 2)
#define                                 G2FIS2_bit          _BIT_ACCESS(COG2FIS0,2)
// COG2FIS0<G2FIS3>
extern volatile __bit                   G2FIS3              __at(0x38CB);	// @ (0x719 * 8 + 3)
#define                                 G2FIS3_bit          _BIT_ACCESS(COG2FIS0,3)
// COG2FIS0<G2FIS4>
extern volatile __bit                   G2FIS4              __at(0x38CC);	// @ (0x719 * 8 + 4)
#define                                 G2FIS4_bit          _BIT_ACCESS(COG2FIS0,4)
// COG2FIS0<G2FIS5>
extern volatile __bit                   G2FIS5              __at(0x38CD);	// @ (0x719 * 8 + 5)
#define                                 G2FIS5_bit          _BIT_ACCESS(COG2FIS0,5)
// COG2FIS0<G2FIS6>
extern volatile __bit                   G2FIS6              __at(0x38CE);	// @ (0x719 * 8 + 6)
#define                                 G2FIS6_bit          _BIT_ACCESS(COG2FIS0,6)
// COG2FIS0<G2FIS7>
extern volatile __bit                   G2FIS7              __at(0x38CF);	// @ (0x719 * 8 + 7)
#define                                 G2FIS7_bit          _BIT_ACCESS(COG2FIS0,7)
// COG2FIS1<G2FIS8>
extern volatile __bit                   G2FIS8              __at(0x38D0);	// @ (0x71A * 8 + 0)
#define                                 G2FIS8_bit          _BIT_ACCESS(COG2FIS1,0)
// COG2FIS1<G2FIS9>
extern volatile __bit                   G2FIS9              __at(0x38D1);	// @ (0x71A * 8 + 1)
#define                                 G2FIS9_bit          _BIT_ACCESS(COG2FIS1,1)
// COG2FSIM0<G2FSIM0>
extern volatile __bit                   G2FSIM0             __at(0x38D8);	// @ (0x71B * 8 + 0)
#define                                 G2FSIM0_bit         _BIT_ACCESS(COG2FSIM0,0)
// COG2FSIM0<G2FSIM1>
extern volatile __bit                   G2FSIM1             __at(0x38D9);	// @ (0x71B * 8 + 1)
#define                                 G2FSIM1_bit         _BIT_ACCESS(COG2FSIM0,1)
// COG2FSIM1<G2FSIM10>
extern volatile __bit                   G2FSIM10            __at(0x38E2);	// @ (0x71C * 8 + 2)
#define                                 G2FSIM10_bit        _BIT_ACCESS(COG2FSIM1,2)
// COG2FSIM1<G2FSIM11>
extern volatile __bit                   G2FSIM11            __at(0x38E3);	// @ (0x71C * 8 + 3)
#define                                 G2FSIM11_bit        _BIT_ACCESS(COG2FSIM1,3)
// COG2FSIM1<G2FSIM12>
extern volatile __bit                   G2FSIM12            __at(0x38E4);	// @ (0x71C * 8 + 4)
#define                                 G2FSIM12_bit        _BIT_ACCESS(COG2FSIM1,4)
// COG2FSIM1<G2FSIM13>
extern volatile __bit                   G2FSIM13            __at(0x38E5);	// @ (0x71C * 8 + 5)
#define                                 G2FSIM13_bit        _BIT_ACCESS(COG2FSIM1,5)
// COG2FSIM1<G2FSIM14>
extern volatile __bit                   G2FSIM14            __at(0x38E6);	// @ (0x71C * 8 + 6)
#define                                 G2FSIM14_bit        _BIT_ACCESS(COG2FSIM1,6)
// COG2FSIM1<G2FSIM15>
extern volatile __bit                   G2FSIM15            __at(0x38E7);	// @ (0x71C * 8 + 7)
#define                                 G2FSIM15_bit        _BIT_ACCESS(COG2FSIM1,7)
// COG2FSIM0<G2FSIM2>
extern volatile __bit                   G2FSIM2             __at(0x38DA);	// @ (0x71B * 8 + 2)
#define                                 G2FSIM2_bit         _BIT_ACCESS(COG2FSIM0,2)
// COG2FSIM0<G2FSIM3>
extern volatile __bit                   G2FSIM3             __at(0x38DB);	// @ (0x71B * 8 + 3)
#define                                 G2FSIM3_bit         _BIT_ACCESS(COG2FSIM0,3)
// COG2FSIM0<G2FSIM4>
extern volatile __bit                   G2FSIM4             __at(0x38DC);	// @ (0x71B * 8 + 4)
#define                                 G2FSIM4_bit         _BIT_ACCESS(COG2FSIM0,4)
// COG2FSIM0<G2FSIM5>
extern volatile __bit                   G2FSIM5             __at(0x38DD);	// @ (0x71B * 8 + 5)
#define                                 G2FSIM5_bit         _BIT_ACCESS(COG2FSIM0,5)
// COG2FSIM0<G2FSIM6>
extern volatile __bit                   G2FSIM6             __at(0x38DE);	// @ (0x71B * 8 + 6)
#define                                 G2FSIM6_bit         _BIT_ACCESS(COG2FSIM0,6)
// COG2FSIM0<G2FSIM7>
extern volatile __bit                   G2FSIM7             __at(0x38DF);	// @ (0x71B * 8 + 7)
#define                                 G2FSIM7_bit         _BIT_ACCESS(COG2FSIM0,7)
// COG2FSIM1<G2FSIM8>
extern volatile __bit                   G2FSIM8             __at(0x38E0);	// @ (0x71C * 8 + 0)
#define                                 G2FSIM8_bit         _BIT_ACCESS(COG2FSIM1,0)
// COG2FSIM1<G2FSIM9>
extern volatile __bit                   G2FSIM9             __at(0x38E1);	// @ (0x71C * 8 + 1)
#define                                 G2FSIM9_bit         _BIT_ACCESS(COG2FSIM1,1)
// COG2CON0<G2LD>
extern volatile __bit                   G2LD                __at(0x389E);	// @ (0x713 * 8 + 6)
#define                                 G2LD_bit            _BIT_ACCESS(COG2CON0,6)
// COG2CON0<G2MD0>
extern volatile __bit                   G2MD0               __at(0x3898);	// @ (0x713 * 8 + 0)
#define                                 G2MD0_bit           _BIT_ACCESS(COG2CON0,0)
// COG2CON0<G2MD1>
extern volatile __bit                   G2MD1               __at(0x3899);	// @ (0x713 * 8 + 1)
#define                                 G2MD1_bit           _BIT_ACCESS(COG2CON0,1)
// COG2CON0<G2MD2>
extern volatile __bit                   G2MD2               __at(0x389A);	// @ (0x713 * 8 + 2)
#define                                 G2MD2_bit           _BIT_ACCESS(COG2CON0,2)
// COG2PHF<G2PHF0>
extern volatile __bit                   G2PHF0              __at(0x3870);	// @ (0x70E * 8 + 0)
#define                                 G2PHF0_bit          _BIT_ACCESS(COG2PHF,0)
// COG2PHF<G2PHF1>
extern volatile __bit                   G2PHF1              __at(0x3871);	// @ (0x70E * 8 + 1)
#define                                 G2PHF1_bit          _BIT_ACCESS(COG2PHF,1)
// COG2PHF<G2PHF2>
extern volatile __bit                   G2PHF2              __at(0x3872);	// @ (0x70E * 8 + 2)
#define                                 G2PHF2_bit          _BIT_ACCESS(COG2PHF,2)
// COG2PHF<G2PHF3>
extern volatile __bit                   G2PHF3              __at(0x3873);	// @ (0x70E * 8 + 3)
#define                                 G2PHF3_bit          _BIT_ACCESS(COG2PHF,3)
// COG2PHF<G2PHF4>
extern volatile __bit                   G2PHF4              __at(0x3874);	// @ (0x70E * 8 + 4)
#define                                 G2PHF4_bit          _BIT_ACCESS(COG2PHF,4)
// COG2PHF<G2PHF5>
extern volatile __bit                   G2PHF5              __at(0x3875);	// @ (0x70E * 8 + 5)
#define                                 G2PHF5_bit          _BIT_ACCESS(COG2PHF,5)
// COG2PHR<G2PHR0>
extern volatile __bit                   G2PHR0              __at(0x3868);	// @ (0x70D * 8 + 0)
#define                                 G2PHR0_bit          _BIT_ACCESS(COG2PHR,0)
// COG2PHR<G2PHR1>
extern volatile __bit                   G2PHR1              __at(0x3869);	// @ (0x70D * 8 + 1)
#define                                 G2PHR1_bit          _BIT_ACCESS(COG2PHR,1)
// COG2PHR<G2PHR2>
extern volatile __bit                   G2PHR2              __at(0x386A);	// @ (0x70D * 8 + 2)
#define                                 G2PHR2_bit          _BIT_ACCESS(COG2PHR,2)
// COG2PHR<G2PHR3>
extern volatile __bit                   G2PHR3              __at(0x386B);	// @ (0x70D * 8 + 3)
#define                                 G2PHR3_bit          _BIT_ACCESS(COG2PHR,3)
// COG2PHR<G2PHR4>
extern volatile __bit                   G2PHR4              __at(0x386C);	// @ (0x70D * 8 + 4)
#define                                 G2PHR4_bit          _BIT_ACCESS(COG2PHR,4)
// COG2PHR<G2PHR5>
extern volatile __bit                   G2PHR5              __at(0x386D);	// @ (0x70D * 8 + 5)
#define                                 G2PHR5_bit          _BIT_ACCESS(COG2PHR,5)
// COG2CON1<G2POLA>
extern volatile __bit                   G2POLA              __at(0x38A0);	// @ (0x714 * 8 + 0)
#define                                 G2POLA_bit          _BIT_ACCESS(COG2CON1,0)
// COG2CON1<G2POLB>
extern volatile __bit                   G2POLB              __at(0x38A1);	// @ (0x714 * 8 + 1)
#define                                 G2POLB_bit          _BIT_ACCESS(COG2CON1,1)
// COG2CON1<G2POLC>
extern volatile __bit                   G2POLC              __at(0x38A2);	// @ (0x714 * 8 + 2)
#define                                 G2POLC_bit          _BIT_ACCESS(COG2CON1,2)
// COG2CON1<G2POLD>
extern volatile __bit                   G2POLD              __at(0x38A3);	// @ (0x714 * 8 + 3)
#define                                 G2POLD_bit          _BIT_ACCESS(COG2CON1,3)
// COG2CON1<G2RDBS>
extern volatile __bit                   G2RDBS              __at(0x38A7);	// @ (0x714 * 8 + 7)
#define                                 G2RDBS_bit          _BIT_ACCESS(COG2CON1,7)
// COG2RIS0<G2RIS0>
extern volatile __bit                   G2RIS0              __at(0x38A8);	// @ (0x715 * 8 + 0)
#define                                 G2RIS0_bit          _BIT_ACCESS(COG2RIS0,0)
// COG2RIS0<G2RIS1>
extern volatile __bit                   G2RIS1              __at(0x38A9);	// @ (0x715 * 8 + 1)
#define                                 G2RIS1_bit          _BIT_ACCESS(COG2RIS0,1)
// COG2RIS1<G2RIS10>
extern volatile __bit                   G2RIS10             __at(0x38B2);	// @ (0x716 * 8 + 2)
#define                                 G2RIS10_bit         _BIT_ACCESS(COG2RIS1,2)
// COG2RIS1<G2RIS11>
extern volatile __bit                   G2RIS11             __at(0x38B3);	// @ (0x716 * 8 + 3)
#define                                 G2RIS11_bit         _BIT_ACCESS(COG2RIS1,3)
// COG2RIS1<G2RIS12>
extern volatile __bit                   G2RIS12             __at(0x38B4);	// @ (0x716 * 8 + 4)
#define                                 G2RIS12_bit         _BIT_ACCESS(COG2RIS1,4)
// COG2RIS1<G2RIS13>
extern volatile __bit                   G2RIS13             __at(0x38B5);	// @ (0x716 * 8 + 5)
#define                                 G2RIS13_bit         _BIT_ACCESS(COG2RIS1,5)
// COG2RIS1<G2RIS14>
extern volatile __bit                   G2RIS14             __at(0x38B6);	// @ (0x716 * 8 + 6)
#define                                 G2RIS14_bit         _BIT_ACCESS(COG2RIS1,6)
// COG2RIS1<G2RIS15>
extern volatile __bit                   G2RIS15             __at(0x38B7);	// @ (0x716 * 8 + 7)
#define                                 G2RIS15_bit         _BIT_ACCESS(COG2RIS1,7)
// COG2RIS0<G2RIS2>
extern volatile __bit                   G2RIS2              __at(0x38AA);	// @ (0x715 * 8 + 2)
#define                                 G2RIS2_bit          _BIT_ACCESS(COG2RIS0,2)
// COG2RIS0<G2RIS3>
extern volatile __bit                   G2RIS3              __at(0x38AB);	// @ (0x715 * 8 + 3)
#define                                 G2RIS3_bit          _BIT_ACCESS(COG2RIS0,3)
// COG2RIS0<G2RIS4>
extern volatile __bit                   G2RIS4              __at(0x38AC);	// @ (0x715 * 8 + 4)
#define                                 G2RIS4_bit          _BIT_ACCESS(COG2RIS0,4)
// COG2RIS0<G2RIS5>
extern volatile __bit                   G2RIS5              __at(0x38AD);	// @ (0x715 * 8 + 5)
#define                                 G2RIS5_bit          _BIT_ACCESS(COG2RIS0,5)
// COG2RIS0<G2RIS6>
extern volatile __bit                   G2RIS6              __at(0x38AE);	// @ (0x715 * 8 + 6)
#define                                 G2RIS6_bit          _BIT_ACCESS(COG2RIS0,6)
// COG2RIS0<G2RIS7>
extern volatile __bit                   G2RIS7              __at(0x38AF);	// @ (0x715 * 8 + 7)
#define                                 G2RIS7_bit          _BIT_ACCESS(COG2RIS0,7)
// COG2RIS1<G2RIS8>
extern volatile __bit                   G2RIS8              __at(0x38B0);	// @ (0x716 * 8 + 0)
#define                                 G2RIS8_bit          _BIT_ACCESS(COG2RIS1,0)
// COG2RIS1<G2RIS9>
extern volatile __bit                   G2RIS9              __at(0x38B1);	// @ (0x716 * 8 + 1)
#define                                 G2RIS9_bit          _BIT_ACCESS(COG2RIS1,1)
// COG2RSIM0<G2RSIM0>
extern volatile __bit                   G2RSIM0             __at(0x38B8);	// @ (0x717 * 8 + 0)
#define                                 G2RSIM0_bit         _BIT_ACCESS(COG2RSIM0,0)
// COG2RSIM0<G2RSIM1>
extern volatile __bit                   G2RSIM1             __at(0x38B9);	// @ (0x717 * 8 + 1)
#define                                 G2RSIM1_bit         _BIT_ACCESS(COG2RSIM0,1)
// COG2RSIM1<G2RSIM10>
extern volatile __bit                   G2RSIM10            __at(0x38C2);	// @ (0x718 * 8 + 2)
#define                                 G2RSIM10_bit        _BIT_ACCESS(COG2RSIM1,2)
// COG2RSIM1<G2RSIM11>
extern volatile __bit                   G2RSIM11            __at(0x38C3);	// @ (0x718 * 8 + 3)
#define                                 G2RSIM11_bit        _BIT_ACCESS(COG2RSIM1,3)
// COG2RSIM1<G2RSIM12>
extern volatile __bit                   G2RSIM12            __at(0x38C4);	// @ (0x718 * 8 + 4)
#define                                 G2RSIM12_bit        _BIT_ACCESS(COG2RSIM1,4)
// COG2RSIM1<G2RSIM13>
extern volatile __bit                   G2RSIM13            __at(0x38C5);	// @ (0x718 * 8 + 5)
#define                                 G2RSIM13_bit        _BIT_ACCESS(COG2RSIM1,5)
// COG2RSIM1<G2RSIM14>
extern volatile __bit                   G2RSIM14            __at(0x38C6);	// @ (0x718 * 8 + 6)
#define                                 G2RSIM14_bit        _BIT_ACCESS(COG2RSIM1,6)
// COG2RSIM1<G2RSIM15>
extern volatile __bit                   G2RSIM15            __at(0x38C7);	// @ (0x718 * 8 + 7)
#define                                 G2RSIM15_bit        _BIT_ACCESS(COG2RSIM1,7)
// COG2RSIM0<G2RSIM2>
extern volatile __bit                   G2RSIM2             __at(0x38BA);	// @ (0x717 * 8 + 2)
#define                                 G2RSIM2_bit         _BIT_ACCESS(COG2RSIM0,2)
// COG2RSIM0<G2RSIM3>
extern volatile __bit                   G2RSIM3             __at(0x38BB);	// @ (0x717 * 8 + 3)
#define                                 G2RSIM3_bit         _BIT_ACCESS(COG2RSIM0,3)
// COG2RSIM0<G2RSIM4>
extern volatile __bit                   G2RSIM4             __at(0x38BC);	// @ (0x717 * 8 + 4)
#define                                 G2RSIM4_bit         _BIT_ACCESS(COG2RSIM0,4)
// COG2RSIM0<G2RSIM5>
extern volatile __bit                   G2RSIM5             __at(0x38BD);	// @ (0x717 * 8 + 5)
#define                                 G2RSIM5_bit         _BIT_ACCESS(COG2RSIM0,5)
// COG2RSIM0<G2RSIM6>
extern volatile __bit                   G2RSIM6             __at(0x38BE);	// @ (0x717 * 8 + 6)
#define                                 G2RSIM6_bit         _BIT_ACCESS(COG2RSIM0,6)
// COG2RSIM0<G2RSIM7>
extern volatile __bit                   G2RSIM7             __at(0x38BF);	// @ (0x717 * 8 + 7)
#define                                 G2RSIM7_bit         _BIT_ACCESS(COG2RSIM0,7)
// COG2RSIM1<G2RSIM8>
extern volatile __bit                   G2RSIM8             __at(0x38C0);	// @ (0x718 * 8 + 0)
#define                                 G2RSIM8_bit         _BIT_ACCESS(COG2RSIM1,0)
// COG2RSIM1<G2RSIM9>
extern volatile __bit                   G2RSIM9             __at(0x38C1);	// @ (0x718 * 8 + 1)
#define                                 G2RSIM9_bit         _BIT_ACCESS(COG2RSIM1,1)
// COG2STR<G2SDATA>
extern volatile __bit                   G2SDATA             __at(0x38FC);	// @ (0x71F * 8 + 4)
#define                                 G2SDATA_bit         _BIT_ACCESS(COG2STR,4)
// COG2STR<G2SDATB>
extern volatile __bit                   G2SDATB             __at(0x38FD);	// @ (0x71F * 8 + 5)
#define                                 G2SDATB_bit         _BIT_ACCESS(COG2STR,5)
// COG2STR<G2SDATC>
extern volatile __bit                   G2SDATC             __at(0x38FE);	// @ (0x71F * 8 + 6)
#define                                 G2SDATC_bit         _BIT_ACCESS(COG2STR,6)
// COG2STR<G2SDATD>
extern volatile __bit                   G2SDATD             __at(0x38FF);	// @ (0x71F * 8 + 7)
#define                                 G2SDATD_bit         _BIT_ACCESS(COG2STR,7)
// COG2STR<G2STRA>
extern volatile __bit                   G2STRA              __at(0x38F8);	// @ (0x71F * 8 + 0)
#define                                 G2STRA_bit          _BIT_ACCESS(COG2STR,0)
// COG2STR<G2STRB>
extern volatile __bit                   G2STRB              __at(0x38F9);	// @ (0x71F * 8 + 1)
#define                                 G2STRB_bit          _BIT_ACCESS(COG2STR,1)
// COG2STR<G2STRC>
extern volatile __bit                   G2STRC              __at(0x38FA);	// @ (0x71F * 8 + 2)
#define                                 G2STRC_bit          _BIT_ACCESS(COG2STR,2)
// COG2STR<G2STRD>
extern volatile __bit                   G2STRD              __at(0x38FB);	// @ (0x71F * 8 + 3)
#define                                 G2STRD_bit          _BIT_ACCESS(COG2STR,3)
// COG3ASD0<G3ARSEN>
extern volatile __bit                   G3ARSEN             __at(0x40EE);	// @ (0x81D * 8 + 6)
#define                                 G3ARSEN_bit         _BIT_ACCESS(COG3ASD0,6)
// COG3ASD1<G3AS0E>
extern volatile __bit                   G3AS0E              __at(0x40F0);	// @ (0x81E * 8 + 0)
#define                                 G3AS0E_bit          _BIT_ACCESS(COG3ASD1,0)
// COG3ASD1<G3AS1E>
extern volatile __bit                   G3AS1E              __at(0x40F1);	// @ (0x81E * 8 + 1)
#define                                 G3AS1E_bit          _BIT_ACCESS(COG3ASD1,1)
// COG3ASD1<G3AS2E>
extern volatile __bit                   G3AS2E              __at(0x40F2);	// @ (0x81E * 8 + 2)
#define                                 G3AS2E_bit          _BIT_ACCESS(COG3ASD1,2)
// COG3ASD1<G3AS3E>
extern volatile __bit                   G3AS3E              __at(0x40F3);	// @ (0x81E * 8 + 3)
#define                                 G3AS3E_bit          _BIT_ACCESS(COG3ASD1,3)
// COG3ASD1<G3AS4E>
extern volatile __bit                   G3AS4E              __at(0x40F4);	// @ (0x81E * 8 + 4)
#define                                 G3AS4E_bit          _BIT_ACCESS(COG3ASD1,4)
// COG3ASD1<G3AS5E>
extern volatile __bit                   G3AS5E              __at(0x40F5);	// @ (0x81E * 8 + 5)
#define                                 G3AS5E_bit          _BIT_ACCESS(COG3ASD1,5)
// COG3ASD1<G3AS6E>
extern volatile __bit                   G3AS6E              __at(0x40F6);	// @ (0x81E * 8 + 6)
#define                                 G3AS6E_bit          _BIT_ACCESS(COG3ASD1,6)
// COG3ASD1<G3AS7E>
extern volatile __bit                   G3AS7E              __at(0x40F7);	// @ (0x81E * 8 + 7)
#define                                 G3AS7E_bit          _BIT_ACCESS(COG3ASD1,7)
// COG3ASD0<G3ASDAC0>
extern volatile __bit                   G3ASDAC0            __at(0x40EA);	// @ (0x81D * 8 + 2)
#define                                 G3ASDAC0_bit        _BIT_ACCESS(COG3ASD0,2)
// COG3ASD0<G3ASDAC1>
extern volatile __bit                   G3ASDAC1            __at(0x40EB);	// @ (0x81D * 8 + 3)
#define                                 G3ASDAC1_bit        _BIT_ACCESS(COG3ASD0,3)
// COG3ASD0<G3ASDBD0>
extern volatile __bit                   G3ASDBD0            __at(0x40EC);	// @ (0x81D * 8 + 4)
#define                                 G3ASDBD0_bit        _BIT_ACCESS(COG3ASD0,4)
// COG3ASD0<G3ASDBD1>
extern volatile __bit                   G3ASDBD1            __at(0x40ED);	// @ (0x81D * 8 + 5)
#define                                 G3ASDBD1_bit        _BIT_ACCESS(COG3ASD0,5)
// COG3ASD0<G3ASE>
extern volatile __bit                   G3ASE               __at(0x40EF);	// @ (0x81D * 8 + 7)
#define                                 G3ASE_bit           _BIT_ACCESS(COG3ASD0,7)
// COG3ASD0<G3ASREN>
extern volatile __bit                   G3ASREN             __at(0x40EE);	// @ (0x81D * 8 + 6)
#define                                 G3ASREN_bit         _BIT_ACCESS(COG3ASD0,6)
// COG3BLKF<G3BLKF0>
extern volatile __bit                   G3BLKF0             __at(0x4080);	// @ (0x810 * 8 + 0)
#define                                 G3BLKF0_bit         _BIT_ACCESS(COG3BLKF,0)
// COG3BLKF<G3BLKF1>
extern volatile __bit                   G3BLKF1             __at(0x4081);	// @ (0x810 * 8 + 1)
#define                                 G3BLKF1_bit         _BIT_ACCESS(COG3BLKF,1)
// COG3BLKF<G3BLKF2>
extern volatile __bit                   G3BLKF2             __at(0x4082);	// @ (0x810 * 8 + 2)
#define                                 G3BLKF2_bit         _BIT_ACCESS(COG3BLKF,2)
// COG3BLKF<G3BLKF3>
extern volatile __bit                   G3BLKF3             __at(0x4083);	// @ (0x810 * 8 + 3)
#define                                 G3BLKF3_bit         _BIT_ACCESS(COG3BLKF,3)
// COG3BLKF<G3BLKF4>
extern volatile __bit                   G3BLKF4             __at(0x4084);	// @ (0x810 * 8 + 4)
#define                                 G3BLKF4_bit         _BIT_ACCESS(COG3BLKF,4)
// COG3BLKF<G3BLKF5>
extern volatile __bit                   G3BLKF5             __at(0x4085);	// @ (0x810 * 8 + 5)
#define                                 G3BLKF5_bit         _BIT_ACCESS(COG3BLKF,5)
// COG3BLKR<G3BLKR0>
extern volatile __bit                   G3BLKR0             __at(0x4078);	// @ (0x80F * 8 + 0)
#define                                 G3BLKR0_bit         _BIT_ACCESS(COG3BLKR,0)
// COG3BLKR<G3BLKR1>
extern volatile __bit                   G3BLKR1             __at(0x4079);	// @ (0x80F * 8 + 1)
#define                                 G3BLKR1_bit         _BIT_ACCESS(COG3BLKR,1)
// COG3BLKR<G3BLKR2>
extern volatile __bit                   G3BLKR2             __at(0x407A);	// @ (0x80F * 8 + 2)
#define                                 G3BLKR2_bit         _BIT_ACCESS(COG3BLKR,2)
// COG3BLKR<G3BLKR3>
extern volatile __bit                   G3BLKR3             __at(0x407B);	// @ (0x80F * 8 + 3)
#define                                 G3BLKR3_bit         _BIT_ACCESS(COG3BLKR,3)
// COG3BLKR<G3BLKR4>
extern volatile __bit                   G3BLKR4             __at(0x407C);	// @ (0x80F * 8 + 4)
#define                                 G3BLKR4_bit         _BIT_ACCESS(COG3BLKR,4)
// COG3BLKR<G3BLKR5>
extern volatile __bit                   G3BLKR5             __at(0x407D);	// @ (0x80F * 8 + 5)
#define                                 G3BLKR5_bit         _BIT_ACCESS(COG3BLKR,5)
// COG3CON0<G3CS0>
extern volatile __bit                   G3CS0               __at(0x409B);	// @ (0x813 * 8 + 3)
#define                                 G3CS0_bit           _BIT_ACCESS(COG3CON0,3)
// COG3CON0<G3CS1>
extern volatile __bit                   G3CS1               __at(0x409C);	// @ (0x813 * 8 + 4)
#define                                 G3CS1_bit           _BIT_ACCESS(COG3CON0,4)
// COG3DBF<G3DBF0>
extern volatile __bit                   G3DBF0              __at(0x4090);	// @ (0x812 * 8 + 0)
#define                                 G3DBF0_bit          _BIT_ACCESS(COG3DBF,0)
// COG3DBF<G3DBF1>
extern volatile __bit                   G3DBF1              __at(0x4091);	// @ (0x812 * 8 + 1)
#define                                 G3DBF1_bit          _BIT_ACCESS(COG3DBF,1)
// COG3DBF<G3DBF2>
extern volatile __bit                   G3DBF2              __at(0x4092);	// @ (0x812 * 8 + 2)
#define                                 G3DBF2_bit          _BIT_ACCESS(COG3DBF,2)
// COG3DBF<G3DBF3>
extern volatile __bit                   G3DBF3              __at(0x4093);	// @ (0x812 * 8 + 3)
#define                                 G3DBF3_bit          _BIT_ACCESS(COG3DBF,3)
// COG3DBF<G3DBF4>
extern volatile __bit                   G3DBF4              __at(0x4094);	// @ (0x812 * 8 + 4)
#define                                 G3DBF4_bit          _BIT_ACCESS(COG3DBF,4)
// COG3DBF<G3DBF5>
extern volatile __bit                   G3DBF5              __at(0x4095);	// @ (0x812 * 8 + 5)
#define                                 G3DBF5_bit          _BIT_ACCESS(COG3DBF,5)
// COG3DBR<G3DBR0>
extern volatile __bit                   G3DBR0              __at(0x4088);	// @ (0x811 * 8 + 0)
#define                                 G3DBR0_bit          _BIT_ACCESS(COG3DBR,0)
// COG3DBR<G3DBR1>
extern volatile __bit                   G3DBR1              __at(0x4089);	// @ (0x811 * 8 + 1)
#define                                 G3DBR1_bit          _BIT_ACCESS(COG3DBR,1)
// COG3DBR<G3DBR2>
extern volatile __bit                   G3DBR2              __at(0x408A);	// @ (0x811 * 8 + 2)
#define                                 G3DBR2_bit          _BIT_ACCESS(COG3DBR,2)
// COG3DBR<G3DBR3>
extern volatile __bit                   G3DBR3              __at(0x408B);	// @ (0x811 * 8 + 3)
#define                                 G3DBR3_bit          _BIT_ACCESS(COG3DBR,3)
// COG3DBR<G3DBR4>
extern volatile __bit                   G3DBR4              __at(0x408C);	// @ (0x811 * 8 + 4)
#define                                 G3DBR4_bit          _BIT_ACCESS(COG3DBR,4)
// COG3DBR<G3DBR5>
extern volatile __bit                   G3DBR5              __at(0x408D);	// @ (0x811 * 8 + 5)
#define                                 G3DBR5_bit          _BIT_ACCESS(COG3DBR,5)
// COG3CON0<G3EN>
extern volatile __bit                   G3EN                __at(0x409F);	// @ (0x813 * 8 + 7)
#define                                 G3EN_bit            _BIT_ACCESS(COG3CON0,7)
// COG3CON1<G3FDBS>
extern volatile __bit                   G3FDBS              __at(0x40A6);	// @ (0x814 * 8 + 6)
#define                                 G3FDBS_bit          _BIT_ACCESS(COG3CON1,6)
// COG3FIS0<G3FIS0>
extern volatile __bit                   G3FIS0              __at(0x40C8);	// @ (0x819 * 8 + 0)
#define                                 G3FIS0_bit          _BIT_ACCESS(COG3FIS0,0)
// COG3FIS0<G3FIS1>
extern volatile __bit                   G3FIS1              __at(0x40C9);	// @ (0x819 * 8 + 1)
#define                                 G3FIS1_bit          _BIT_ACCESS(COG3FIS0,1)
// COG3FIS1<G3FIS11>
extern volatile __bit                   G3FIS11             __at(0x40D3);	// @ (0x81A * 8 + 3)
#define                                 G3FIS11_bit         _BIT_ACCESS(COG3FIS1,3)
// COG3FIS1<G3FIS12>
extern volatile __bit                   G3FIS12             __at(0x40D4);	// @ (0x81A * 8 + 4)
#define                                 G3FIS12_bit         _BIT_ACCESS(COG3FIS1,4)
// COG3FIS1<G3FIS13>
extern volatile __bit                   G3FIS13             __at(0x40D5);	// @ (0x81A * 8 + 5)
#define                                 G3FIS13_bit         _BIT_ACCESS(COG3FIS1,5)
// COG3FIS1<G3FIS14>
extern volatile __bit                   G3FIS14             __at(0x40D6);	// @ (0x81A * 8 + 6)
#define                                 G3FIS14_bit         _BIT_ACCESS(COG3FIS1,6)
// COG3FIS1<G3FIS15>
extern volatile __bit                   G3FIS15             __at(0x40D7);	// @ (0x81A * 8 + 7)
#define                                 G3FIS15_bit         _BIT_ACCESS(COG3FIS1,7)
// COG3FIS0<G3FIS2>
extern volatile __bit                   G3FIS2              __at(0x40CA);	// @ (0x819 * 8 + 2)
#define                                 G3FIS2_bit          _BIT_ACCESS(COG3FIS0,2)
// COG3FIS0<G3FIS3>
extern volatile __bit                   G3FIS3              __at(0x40CB);	// @ (0x819 * 8 + 3)
#define                                 G3FIS3_bit          _BIT_ACCESS(COG3FIS0,3)
// COG3FIS0<G3FIS4>
extern volatile __bit                   G3FIS4              __at(0x40CC);	// @ (0x819 * 8 + 4)
#define                                 G3FIS4_bit          _BIT_ACCESS(COG3FIS0,4)
// COG3FIS0<G3FIS5>
extern volatile __bit                   G3FIS5              __at(0x40CD);	// @ (0x819 * 8 + 5)
#define                                 G3FIS5_bit          _BIT_ACCESS(COG3FIS0,5)
// COG3FIS0<G3FIS6>
extern volatile __bit                   G3FIS6              __at(0x40CE);	// @ (0x819 * 8 + 6)
#define                                 G3FIS6_bit          _BIT_ACCESS(COG3FIS0,6)
// COG3FIS0<G3FIS7>
extern volatile __bit                   G3FIS7              __at(0x40CF);	// @ (0x819 * 8 + 7)
#define                                 G3FIS7_bit          _BIT_ACCESS(COG3FIS0,7)
// COG3FIS1<G3FIS9>
extern volatile __bit                   G3FIS9              __at(0x40D1);	// @ (0x81A * 8 + 1)
#define                                 G3FIS9_bit          _BIT_ACCESS(COG3FIS1,1)
// COG3FSIM0<G3FSIM0>
extern volatile __bit                   G3FSIM0             __at(0x40D8);	// @ (0x81B * 8 + 0)
#define                                 G3FSIM0_bit         _BIT_ACCESS(COG3FSIM0,0)
// COG3FSIM0<G3FSIM1>
extern volatile __bit                   G3FSIM1             __at(0x40D9);	// @ (0x81B * 8 + 1)
#define                                 G3FSIM1_bit         _BIT_ACCESS(COG3FSIM0,1)
// COG3FSIM1<G3FSIM11>
extern volatile __bit                   G3FSIM11            __at(0x40E3);	// @ (0x81C * 8 + 3)
#define                                 G3FSIM11_bit        _BIT_ACCESS(COG3FSIM1,3)
// COG3FSIM1<G3FSIM12>
extern volatile __bit                   G3FSIM12            __at(0x40E4);	// @ (0x81C * 8 + 4)
#define                                 G3FSIM12_bit        _BIT_ACCESS(COG3FSIM1,4)
// COG3FSIM1<G3FSIM13>
extern volatile __bit                   G3FSIM13            __at(0x40E5);	// @ (0x81C * 8 + 5)
#define                                 G3FSIM13_bit        _BIT_ACCESS(COG3FSIM1,5)
// COG3FSIM1<G3FSIM14>
extern volatile __bit                   G3FSIM14            __at(0x40E6);	// @ (0x81C * 8 + 6)
#define                                 G3FSIM14_bit        _BIT_ACCESS(COG3FSIM1,6)
// COG3FSIM1<G3FSIM15>
extern volatile __bit                   G3FSIM15            __at(0x40E7);	// @ (0x81C * 8 + 7)
#define                                 G3FSIM15_bit        _BIT_ACCESS(COG3FSIM1,7)
// COG3FSIM0<G3FSIM2>
extern volatile __bit                   G3FSIM2             __at(0x40DA);	// @ (0x81B * 8 + 2)
#define                                 G3FSIM2_bit         _BIT_ACCESS(COG3FSIM0,2)
// COG3FSIM0<G3FSIM3>
extern volatile __bit                   G3FSIM3             __at(0x40DB);	// @ (0x81B * 8 + 3)
#define                                 G3FSIM3_bit         _BIT_ACCESS(COG3FSIM0,3)
// COG3FSIM0<G3FSIM4>
extern volatile __bit                   G3FSIM4             __at(0x40DC);	// @ (0x81B * 8 + 4)
#define                                 G3FSIM4_bit         _BIT_ACCESS(COG3FSIM0,4)
// COG3FSIM0<G3FSIM5>
extern volatile __bit                   G3FSIM5             __at(0x40DD);	// @ (0x81B * 8 + 5)
#define                                 G3FSIM5_bit         _BIT_ACCESS(COG3FSIM0,5)
// COG3FSIM0<G3FSIM6>
extern volatile __bit                   G3FSIM6             __at(0x40DE);	// @ (0x81B * 8 + 6)
#define                                 G3FSIM6_bit         _BIT_ACCESS(COG3FSIM0,6)
// COG3FSIM0<G3FSIM7>
extern volatile __bit                   G3FSIM7             __at(0x40DF);	// @ (0x81B * 8 + 7)
#define                                 G3FSIM7_bit         _BIT_ACCESS(COG3FSIM0,7)
// COG3FSIM1<G3FSIM9>
extern volatile __bit                   G3FSIM9             __at(0x40E1);	// @ (0x81C * 8 + 1)
#define                                 G3FSIM9_bit         _BIT_ACCESS(COG3FSIM1,1)
// COG3CON0<G3LD>
extern volatile __bit                   G3LD                __at(0x409E);	// @ (0x813 * 8 + 6)
#define                                 G3LD_bit            _BIT_ACCESS(COG3CON0,6)
// COG3CON0<G3MD0>
extern volatile __bit                   G3MD0               __at(0x4098);	// @ (0x813 * 8 + 0)
#define                                 G3MD0_bit           _BIT_ACCESS(COG3CON0,0)
// COG3CON0<G3MD1>
extern volatile __bit                   G3MD1               __at(0x4099);	// @ (0x813 * 8 + 1)
#define                                 G3MD1_bit           _BIT_ACCESS(COG3CON0,1)
// COG3CON0<G3MD2>
extern volatile __bit                   G3MD2               __at(0x409A);	// @ (0x813 * 8 + 2)
#define                                 G3MD2_bit           _BIT_ACCESS(COG3CON0,2)
// COG3PHF<G3PHF0>
extern volatile __bit                   G3PHF0              __at(0x4070);	// @ (0x80E * 8 + 0)
#define                                 G3PHF0_bit          _BIT_ACCESS(COG3PHF,0)
// COG3PHF<G3PHF1>
extern volatile __bit                   G3PHF1              __at(0x4071);	// @ (0x80E * 8 + 1)
#define                                 G3PHF1_bit          _BIT_ACCESS(COG3PHF,1)
// COG3PHF<G3PHF2>
extern volatile __bit                   G3PHF2              __at(0x4072);	// @ (0x80E * 8 + 2)
#define                                 G3PHF2_bit          _BIT_ACCESS(COG3PHF,2)
// COG3PHF<G3PHF3>
extern volatile __bit                   G3PHF3              __at(0x4073);	// @ (0x80E * 8 + 3)
#define                                 G3PHF3_bit          _BIT_ACCESS(COG3PHF,3)
// COG3PHF<G3PHF4>
extern volatile __bit                   G3PHF4              __at(0x4074);	// @ (0x80E * 8 + 4)
#define                                 G3PHF4_bit          _BIT_ACCESS(COG3PHF,4)
// COG3PHF<G3PHF5>
extern volatile __bit                   G3PHF5              __at(0x4075);	// @ (0x80E * 8 + 5)
#define                                 G3PHF5_bit          _BIT_ACCESS(COG3PHF,5)
// COG3PHR<G3PHR0>
extern volatile __bit                   G3PHR0              __at(0x4068);	// @ (0x80D * 8 + 0)
#define                                 G3PHR0_bit          _BIT_ACCESS(COG3PHR,0)
// COG3PHR<G3PHR1>
extern volatile __bit                   G3PHR1              __at(0x4069);	// @ (0x80D * 8 + 1)
#define                                 G3PHR1_bit          _BIT_ACCESS(COG3PHR,1)
// COG3PHR<G3PHR2>
extern volatile __bit                   G3PHR2              __at(0x406A);	// @ (0x80D * 8 + 2)
#define                                 G3PHR2_bit          _BIT_ACCESS(COG3PHR,2)
// COG3PHR<G3PHR3>
extern volatile __bit                   G3PHR3              __at(0x406B);	// @ (0x80D * 8 + 3)
#define                                 G3PHR3_bit          _BIT_ACCESS(COG3PHR,3)
// COG3PHR<G3PHR4>
extern volatile __bit                   G3PHR4              __at(0x406C);	// @ (0x80D * 8 + 4)
#define                                 G3PHR4_bit          _BIT_ACCESS(COG3PHR,4)
// COG3PHR<G3PHR5>
extern volatile __bit                   G3PHR5              __at(0x406D);	// @ (0x80D * 8 + 5)
#define                                 G3PHR5_bit          _BIT_ACCESS(COG3PHR,5)
// COG3CON1<G3POLA>
extern volatile __bit                   G3POLA              __at(0x40A0);	// @ (0x814 * 8 + 0)
#define                                 G3POLA_bit          _BIT_ACCESS(COG3CON1,0)
// COG3CON1<G3POLB>
extern volatile __bit                   G3POLB              __at(0x40A1);	// @ (0x814 * 8 + 1)
#define                                 G3POLB_bit          _BIT_ACCESS(COG3CON1,1)
// COG3CON1<G3POLC>
extern volatile __bit                   G3POLC              __at(0x40A2);	// @ (0x814 * 8 + 2)
#define                                 G3POLC_bit          _BIT_ACCESS(COG3CON1,2)
// COG3CON1<G3POLD>
extern volatile __bit                   G3POLD              __at(0x40A3);	// @ (0x814 * 8 + 3)
#define                                 G3POLD_bit          _BIT_ACCESS(COG3CON1,3)
// COG3CON1<G3RDBS>
extern volatile __bit                   G3RDBS              __at(0x40A7);	// @ (0x814 * 8 + 7)
#define                                 G3RDBS_bit          _BIT_ACCESS(COG3CON1,7)
// COG3RIS0<G3RIS0>
extern volatile __bit                   G3RIS0              __at(0x40A8);	// @ (0x815 * 8 + 0)
#define                                 G3RIS0_bit          _BIT_ACCESS(COG3RIS0,0)
// COG3RIS0<G3RIS1>
extern volatile __bit                   G3RIS1              __at(0x40A9);	// @ (0x815 * 8 + 1)
#define                                 G3RIS1_bit          _BIT_ACCESS(COG3RIS0,1)
// COG3RIS1<G3RIS11>
extern volatile __bit                   G3RIS11             __at(0x40B3);	// @ (0x816 * 8 + 3)
#define                                 G3RIS11_bit         _BIT_ACCESS(COG3RIS1,3)
// COG3RIS1<G3RIS12>
extern volatile __bit                   G3RIS12             __at(0x40B4);	// @ (0x816 * 8 + 4)
#define                                 G3RIS12_bit         _BIT_ACCESS(COG3RIS1,4)
// COG3RIS1<G3RIS13>
extern volatile __bit                   G3RIS13             __at(0x40B5);	// @ (0x816 * 8 + 5)
#define                                 G3RIS13_bit         _BIT_ACCESS(COG3RIS1,5)
// COG3RIS1<G3RIS14>
extern volatile __bit                   G3RIS14             __at(0x40B6);	// @ (0x816 * 8 + 6)
#define                                 G3RIS14_bit         _BIT_ACCESS(COG3RIS1,6)
// COG3RIS1<G3RIS15>
extern volatile __bit                   G3RIS15             __at(0x40B7);	// @ (0x816 * 8 + 7)
#define                                 G3RIS15_bit         _BIT_ACCESS(COG3RIS1,7)
// COG3RIS0<G3RIS2>
extern volatile __bit                   G3RIS2              __at(0x40AA);	// @ (0x815 * 8 + 2)
#define                                 G3RIS2_bit          _BIT_ACCESS(COG3RIS0,2)
// COG3RIS0<G3RIS3>
extern volatile __bit                   G3RIS3              __at(0x40AB);	// @ (0x815 * 8 + 3)
#define                                 G3RIS3_bit          _BIT_ACCESS(COG3RIS0,3)
// COG3RIS0<G3RIS4>
extern volatile __bit                   G3RIS4              __at(0x40AC);	// @ (0x815 * 8 + 4)
#define                                 G3RIS4_bit          _BIT_ACCESS(COG3RIS0,4)
// COG3RIS0<G3RIS5>
extern volatile __bit                   G3RIS5              __at(0x40AD);	// @ (0x815 * 8 + 5)
#define                                 G3RIS5_bit          _BIT_ACCESS(COG3RIS0,5)
// COG3RIS0<G3RIS6>
extern volatile __bit                   G3RIS6              __at(0x40AE);	// @ (0x815 * 8 + 6)
#define                                 G3RIS6_bit          _BIT_ACCESS(COG3RIS0,6)
// COG3RIS0<G3RIS7>
extern volatile __bit                   G3RIS7              __at(0x40AF);	// @ (0x815 * 8 + 7)
#define                                 G3RIS7_bit          _BIT_ACCESS(COG3RIS0,7)
// COG3RIS1<G3RIS9>
extern volatile __bit                   G3RIS9              __at(0x40B1);	// @ (0x816 * 8 + 1)
#define                                 G3RIS9_bit          _BIT_ACCESS(COG3RIS1,1)
// COG3RSIM0<G3RSIM0>
extern volatile __bit                   G3RSIM0             __at(0x40B8);	// @ (0x817 * 8 + 0)
#define                                 G3RSIM0_bit         _BIT_ACCESS(COG3RSIM0,0)
// COG3RSIM0<G3RSIM1>
extern volatile __bit                   G3RSIM1             __at(0x40B9);	// @ (0x817 * 8 + 1)
#define                                 G3RSIM1_bit         _BIT_ACCESS(COG3RSIM0,1)
// COG3RSIM1<G3RSIM11>
extern volatile __bit                   G3RSIM11            __at(0x40C3);	// @ (0x818 * 8 + 3)
#define                                 G3RSIM11_bit        _BIT_ACCESS(COG3RSIM1,3)
// COG3RSIM1<G3RSIM12>
extern volatile __bit                   G3RSIM12            __at(0x40C4);	// @ (0x818 * 8 + 4)
#define                                 G3RSIM12_bit        _BIT_ACCESS(COG3RSIM1,4)
// COG3RSIM1<G3RSIM13>
extern volatile __bit                   G3RSIM13            __at(0x40C5);	// @ (0x818 * 8 + 5)
#define                                 G3RSIM13_bit        _BIT_ACCESS(COG3RSIM1,5)
// COG3RSIM1<G3RSIM14>
extern volatile __bit                   G3RSIM14            __at(0x40C6);	// @ (0x818 * 8 + 6)
#define                                 G3RSIM14_bit        _BIT_ACCESS(COG3RSIM1,6)
// COG3RSIM1<G3RSIM15>
extern volatile __bit                   G3RSIM15            __at(0x40C7);	// @ (0x818 * 8 + 7)
#define                                 G3RSIM15_bit        _BIT_ACCESS(COG3RSIM1,7)
// COG3RSIM0<G3RSIM2>
extern volatile __bit                   G3RSIM2             __at(0x40BA);	// @ (0x817 * 8 + 2)
#define                                 G3RSIM2_bit         _BIT_ACCESS(COG3RSIM0,2)
// COG3RSIM0<G3RSIM3>
extern volatile __bit                   G3RSIM3             __at(0x40BB);	// @ (0x817 * 8 + 3)
#define                                 G3RSIM3_bit         _BIT_ACCESS(COG3RSIM0,3)
// COG3RSIM0<G3RSIM4>
extern volatile __bit                   G3RSIM4             __at(0x40BC);	// @ (0x817 * 8 + 4)
#define                                 G3RSIM4_bit         _BIT_ACCESS(COG3RSIM0,4)
// COG3RSIM0<G3RSIM5>
extern volatile __bit                   G3RSIM5             __at(0x40BD);	// @ (0x817 * 8 + 5)
#define                                 G3RSIM5_bit         _BIT_ACCESS(COG3RSIM0,5)
// COG3RSIM0<G3RSIM6>
extern volatile __bit                   G3RSIM6             __at(0x40BE);	// @ (0x817 * 8 + 6)
#define                                 G3RSIM6_bit         _BIT_ACCESS(COG3RSIM0,6)
// COG3RSIM0<G3RSIM7>
extern volatile __bit                   G3RSIM7             __at(0x40BF);	// @ (0x817 * 8 + 7)
#define                                 G3RSIM7_bit         _BIT_ACCESS(COG3RSIM0,7)
// COG3RSIM1<G3RSIM9>
extern volatile __bit                   G3RSIM9             __at(0x40C1);	// @ (0x818 * 8 + 1)
#define                                 G3RSIM9_bit         _BIT_ACCESS(COG3RSIM1,1)
// COG3STR<G3SDATA>
extern volatile __bit                   G3SDATA             __at(0x40FC);	// @ (0x81F * 8 + 4)
#define                                 G3SDATA_bit         _BIT_ACCESS(COG3STR,4)
// COG3STR<G3SDATB>
extern volatile __bit                   G3SDATB             __at(0x40FD);	// @ (0x81F * 8 + 5)
#define                                 G3SDATB_bit         _BIT_ACCESS(COG3STR,5)
// COG3STR<G3SDATC>
extern volatile __bit                   G3SDATC             __at(0x40FE);	// @ (0x81F * 8 + 6)
#define                                 G3SDATC_bit         _BIT_ACCESS(COG3STR,6)
// COG3STR<G3SDATD>
extern volatile __bit                   G3SDATD             __at(0x40FF);	// @ (0x81F * 8 + 7)
#define                                 G3SDATD_bit         _BIT_ACCESS(COG3STR,7)
// COG3STR<G3STRA>
extern volatile __bit                   G3STRA              __at(0x40F8);	// @ (0x81F * 8 + 0)
#define                                 G3STRA_bit          _BIT_ACCESS(COG3STR,0)
// COG3STR<G3STRB>
extern volatile __bit                   G3STRB              __at(0x40F9);	// @ (0x81F * 8 + 1)
#define                                 G3STRB_bit          _BIT_ACCESS(COG3STR,1)
// COG3STR<G3STRC>
extern volatile __bit                   G3STRC              __at(0x40FA);	// @ (0x81F * 8 + 2)
#define                                 G3STRC_bit          _BIT_ACCESS(COG3STR,2)
// COG3STR<G3STRD>
extern volatile __bit                   G3STRD              __at(0x40FB);	// @ (0x81F * 8 + 3)
#define                                 G3STRD_bit          _BIT_ACCESS(COG3STR,3)
// COG4ASD0<G4ARSEN>
extern volatile __bit                   G4ARSEN             __at(0x44EE);	// @ (0x89D * 8 + 6)
#define                                 G4ARSEN_bit         _BIT_ACCESS(COG4ASD0,6)
// COG4ASD1<G4AS0E>
extern volatile __bit                   G4AS0E              __at(0x44F0);	// @ (0x89E * 8 + 0)
#define                                 G4AS0E_bit          _BIT_ACCESS(COG4ASD1,0)
// COG4ASD1<G4AS1E>
extern volatile __bit                   G4AS1E              __at(0x44F1);	// @ (0x89E * 8 + 1)
#define                                 G4AS1E_bit          _BIT_ACCESS(COG4ASD1,1)
// COG4ASD1<G4AS2E>
extern volatile __bit                   G4AS2E              __at(0x44F2);	// @ (0x89E * 8 + 2)
#define                                 G4AS2E_bit          _BIT_ACCESS(COG4ASD1,2)
// COG4ASD1<G4AS3E>
extern volatile __bit                   G4AS3E              __at(0x44F3);	// @ (0x89E * 8 + 3)
#define                                 G4AS3E_bit          _BIT_ACCESS(COG4ASD1,3)
// COG4ASD1<G4AS4E>
extern volatile __bit                   G4AS4E              __at(0x44F4);	// @ (0x89E * 8 + 4)
#define                                 G4AS4E_bit          _BIT_ACCESS(COG4ASD1,4)
// COG4ASD1<G4AS5E>
extern volatile __bit                   G4AS5E              __at(0x44F5);	// @ (0x89E * 8 + 5)
#define                                 G4AS5E_bit          _BIT_ACCESS(COG4ASD1,5)
// COG4ASD1<G4AS6E>
extern volatile __bit                   G4AS6E              __at(0x44F6);	// @ (0x89E * 8 + 6)
#define                                 G4AS6E_bit          _BIT_ACCESS(COG4ASD1,6)
// COG4ASD1<G4AS7E>
extern volatile __bit                   G4AS7E              __at(0x44F7);	// @ (0x89E * 8 + 7)
#define                                 G4AS7E_bit          _BIT_ACCESS(COG4ASD1,7)
// COG4ASD0<G4ASDAC0>
extern volatile __bit                   G4ASDAC0            __at(0x44EA);	// @ (0x89D * 8 + 2)
#define                                 G4ASDAC0_bit        _BIT_ACCESS(COG4ASD0,2)
// COG4ASD0<G4ASDAC1>
extern volatile __bit                   G4ASDAC1            __at(0x44EB);	// @ (0x89D * 8 + 3)
#define                                 G4ASDAC1_bit        _BIT_ACCESS(COG4ASD0,3)
// COG4ASD0<G4ASDBD0>
extern volatile __bit                   G4ASDBD0            __at(0x44EC);	// @ (0x89D * 8 + 4)
#define                                 G4ASDBD0_bit        _BIT_ACCESS(COG4ASD0,4)
// COG4ASD0<G4ASDBD1>
extern volatile __bit                   G4ASDBD1            __at(0x44ED);	// @ (0x89D * 8 + 5)
#define                                 G4ASDBD1_bit        _BIT_ACCESS(COG4ASD0,5)
// COG4ASD0<G4ASE>
extern volatile __bit                   G4ASE               __at(0x44EF);	// @ (0x89D * 8 + 7)
#define                                 G4ASE_bit           _BIT_ACCESS(COG4ASD0,7)
// COG4ASD0<G4ASREN>
extern volatile __bit                   G4ASREN             __at(0x44EE);	// @ (0x89D * 8 + 6)
#define                                 G4ASREN_bit         _BIT_ACCESS(COG4ASD0,6)
// COG4BLKF<G4BLKF0>
extern volatile __bit                   G4BLKF0             __at(0x4480);	// @ (0x890 * 8 + 0)
#define                                 G4BLKF0_bit         _BIT_ACCESS(COG4BLKF,0)
// COG4BLKF<G4BLKF1>
extern volatile __bit                   G4BLKF1             __at(0x4481);	// @ (0x890 * 8 + 1)
#define                                 G4BLKF1_bit         _BIT_ACCESS(COG4BLKF,1)
// COG4BLKF<G4BLKF2>
extern volatile __bit                   G4BLKF2             __at(0x4482);	// @ (0x890 * 8 + 2)
#define                                 G4BLKF2_bit         _BIT_ACCESS(COG4BLKF,2)
// COG4BLKF<G4BLKF3>
extern volatile __bit                   G4BLKF3             __at(0x4483);	// @ (0x890 * 8 + 3)
#define                                 G4BLKF3_bit         _BIT_ACCESS(COG4BLKF,3)
// COG4BLKF<G4BLKF4>
extern volatile __bit                   G4BLKF4             __at(0x4484);	// @ (0x890 * 8 + 4)
#define                                 G4BLKF4_bit         _BIT_ACCESS(COG4BLKF,4)
// COG4BLKF<G4BLKF5>
extern volatile __bit                   G4BLKF5             __at(0x4485);	// @ (0x890 * 8 + 5)
#define                                 G4BLKF5_bit         _BIT_ACCESS(COG4BLKF,5)
// COG4BLKR<G4BLKR0>
extern volatile __bit                   G4BLKR0             __at(0x4478);	// @ (0x88F * 8 + 0)
#define                                 G4BLKR0_bit         _BIT_ACCESS(COG4BLKR,0)
// COG4BLKR<G4BLKR1>
extern volatile __bit                   G4BLKR1             __at(0x4479);	// @ (0x88F * 8 + 1)
#define                                 G4BLKR1_bit         _BIT_ACCESS(COG4BLKR,1)
// COG4BLKR<G4BLKR2>
extern volatile __bit                   G4BLKR2             __at(0x447A);	// @ (0x88F * 8 + 2)
#define                                 G4BLKR2_bit         _BIT_ACCESS(COG4BLKR,2)
// COG4BLKR<G4BLKR3>
extern volatile __bit                   G4BLKR3             __at(0x447B);	// @ (0x88F * 8 + 3)
#define                                 G4BLKR3_bit         _BIT_ACCESS(COG4BLKR,3)
// COG4BLKR<G4BLKR4>
extern volatile __bit                   G4BLKR4             __at(0x447C);	// @ (0x88F * 8 + 4)
#define                                 G4BLKR4_bit         _BIT_ACCESS(COG4BLKR,4)
// COG4BLKR<G4BLKR5>
extern volatile __bit                   G4BLKR5             __at(0x447D);	// @ (0x88F * 8 + 5)
#define                                 G4BLKR5_bit         _BIT_ACCESS(COG4BLKR,5)
// COG4CON0<G4CS0>
extern volatile __bit                   G4CS0               __at(0x449B);	// @ (0x893 * 8 + 3)
#define                                 G4CS0_bit           _BIT_ACCESS(COG4CON0,3)
// COG4CON0<G4CS1>
extern volatile __bit                   G4CS1               __at(0x449C);	// @ (0x893 * 8 + 4)
#define                                 G4CS1_bit           _BIT_ACCESS(COG4CON0,4)
// COG4DBF<G4DBF0>
extern volatile __bit                   G4DBF0              __at(0x4490);	// @ (0x892 * 8 + 0)
#define                                 G4DBF0_bit          _BIT_ACCESS(COG4DBF,0)
// COG4DBF<G4DBF1>
extern volatile __bit                   G4DBF1              __at(0x4491);	// @ (0x892 * 8 + 1)
#define                                 G4DBF1_bit          _BIT_ACCESS(COG4DBF,1)
// COG4DBF<G4DBF2>
extern volatile __bit                   G4DBF2              __at(0x4492);	// @ (0x892 * 8 + 2)
#define                                 G4DBF2_bit          _BIT_ACCESS(COG4DBF,2)
// COG4DBF<G4DBF3>
extern volatile __bit                   G4DBF3              __at(0x4493);	// @ (0x892 * 8 + 3)
#define                                 G4DBF3_bit          _BIT_ACCESS(COG4DBF,3)
// COG4DBF<G4DBF4>
extern volatile __bit                   G4DBF4              __at(0x4494);	// @ (0x892 * 8 + 4)
#define                                 G4DBF4_bit          _BIT_ACCESS(COG4DBF,4)
// COG4DBF<G4DBF5>
extern volatile __bit                   G4DBF5              __at(0x4495);	// @ (0x892 * 8 + 5)
#define                                 G4DBF5_bit          _BIT_ACCESS(COG4DBF,5)
// COG4DBR<G4DBR0>
extern volatile __bit                   G4DBR0              __at(0x4488);	// @ (0x891 * 8 + 0)
#define                                 G4DBR0_bit          _BIT_ACCESS(COG4DBR,0)
// COG4DBR<G4DBR1>
extern volatile __bit                   G4DBR1              __at(0x4489);	// @ (0x891 * 8 + 1)
#define                                 G4DBR1_bit          _BIT_ACCESS(COG4DBR,1)
// COG4DBR<G4DBR2>
extern volatile __bit                   G4DBR2              __at(0x448A);	// @ (0x891 * 8 + 2)
#define                                 G4DBR2_bit          _BIT_ACCESS(COG4DBR,2)
// COG4DBR<G4DBR3>
extern volatile __bit                   G4DBR3              __at(0x448B);	// @ (0x891 * 8 + 3)
#define                                 G4DBR3_bit          _BIT_ACCESS(COG4DBR,3)
// COG4DBR<G4DBR4>
extern volatile __bit                   G4DBR4              __at(0x448C);	// @ (0x891 * 8 + 4)
#define                                 G4DBR4_bit          _BIT_ACCESS(COG4DBR,4)
// COG4DBR<G4DBR5>
extern volatile __bit                   G4DBR5              __at(0x448D);	// @ (0x891 * 8 + 5)
#define                                 G4DBR5_bit          _BIT_ACCESS(COG4DBR,5)
// COG4CON0<G4EN>
extern volatile __bit                   G4EN                __at(0x449F);	// @ (0x893 * 8 + 7)
#define                                 G4EN_bit            _BIT_ACCESS(COG4CON0,7)
// COG4CON1<G4FDBS>
extern volatile __bit                   G4FDBS              __at(0x44A6);	// @ (0x894 * 8 + 6)
#define                                 G4FDBS_bit          _BIT_ACCESS(COG4CON1,6)
// COG4FIS0<G4FIS0>
extern volatile __bit                   G4FIS0              __at(0x44C8);	// @ (0x899 * 8 + 0)
#define                                 G4FIS0_bit          _BIT_ACCESS(COG4FIS0,0)
// COG4FIS0<G4FIS1>
extern volatile __bit                   G4FIS1              __at(0x44C9);	// @ (0x899 * 8 + 1)
#define                                 G4FIS1_bit          _BIT_ACCESS(COG4FIS0,1)
// COG4FIS1<G4FIS10>
extern volatile __bit                   G4FIS10             __at(0x44D2);	// @ (0x89A * 8 + 2)
#define                                 G4FIS10_bit         _BIT_ACCESS(COG4FIS1,2)
// COG4FIS1<G4FIS11>
extern volatile __bit                   G4FIS11             __at(0x44D3);	// @ (0x89A * 8 + 3)
#define                                 G4FIS11_bit         _BIT_ACCESS(COG4FIS1,3)
// COG4FIS1<G4FIS12>
extern volatile __bit                   G4FIS12             __at(0x44D4);	// @ (0x89A * 8 + 4)
#define                                 G4FIS12_bit         _BIT_ACCESS(COG4FIS1,4)
// COG4FIS1<G4FIS13>
extern volatile __bit                   G4FIS13             __at(0x44D5);	// @ (0x89A * 8 + 5)
#define                                 G4FIS13_bit         _BIT_ACCESS(COG4FIS1,5)
// COG4FIS1<G4FIS14>
extern volatile __bit                   G4FIS14             __at(0x44D6);	// @ (0x89A * 8 + 6)
#define                                 G4FIS14_bit         _BIT_ACCESS(COG4FIS1,6)
// COG4FIS1<G4FIS15>
extern volatile __bit                   G4FIS15             __at(0x44D7);	// @ (0x89A * 8 + 7)
#define                                 G4FIS15_bit         _BIT_ACCESS(COG4FIS1,7)
// COG4FIS0<G4FIS2>
extern volatile __bit                   G4FIS2              __at(0x44CA);	// @ (0x899 * 8 + 2)
#define                                 G4FIS2_bit          _BIT_ACCESS(COG4FIS0,2)
// COG4FIS0<G4FIS3>
extern volatile __bit                   G4FIS3              __at(0x44CB);	// @ (0x899 * 8 + 3)
#define                                 G4FIS3_bit          _BIT_ACCESS(COG4FIS0,3)
// COG4FIS0<G4FIS4>
extern volatile __bit                   G4FIS4              __at(0x44CC);	// @ (0x899 * 8 + 4)
#define                                 G4FIS4_bit          _BIT_ACCESS(COG4FIS0,4)
// COG4FIS0<G4FIS5>
extern volatile __bit                   G4FIS5              __at(0x44CD);	// @ (0x899 * 8 + 5)
#define                                 G4FIS5_bit          _BIT_ACCESS(COG4FIS0,5)
// COG4FIS0<G4FIS6>
extern volatile __bit                   G4FIS6              __at(0x44CE);	// @ (0x899 * 8 + 6)
#define                                 G4FIS6_bit          _BIT_ACCESS(COG4FIS0,6)
// COG4FIS0<G4FIS7>
extern volatile __bit                   G4FIS7              __at(0x44CF);	// @ (0x899 * 8 + 7)
#define                                 G4FIS7_bit          _BIT_ACCESS(COG4FIS0,7)
// COG4FIS1<G4FIS8>
extern volatile __bit                   G4FIS8              __at(0x44D0);	// @ (0x89A * 8 + 0)
#define                                 G4FIS8_bit          _BIT_ACCESS(COG4FIS1,0)
// COG4FIS1<G4FIS9>
extern volatile __bit                   G4FIS9              __at(0x44D1);	// @ (0x89A * 8 + 1)
#define                                 G4FIS9_bit          _BIT_ACCESS(COG4FIS1,1)
// COG4FSIM0<G4FSIM0>
extern volatile __bit                   G4FSIM0             __at(0x44D8);	// @ (0x89B * 8 + 0)
#define                                 G4FSIM0_bit         _BIT_ACCESS(COG4FSIM0,0)
// COG4FSIM0<G4FSIM1>
extern volatile __bit                   G4FSIM1             __at(0x44D9);	// @ (0x89B * 8 + 1)
#define                                 G4FSIM1_bit         _BIT_ACCESS(COG4FSIM0,1)
// COG4FSIM1<G4FSIM10>
extern volatile __bit                   G4FSIM10            __at(0x44E2);	// @ (0x89C * 8 + 2)
#define                                 G4FSIM10_bit        _BIT_ACCESS(COG4FSIM1,2)
// COG4FSIM1<G4FSIM11>
extern volatile __bit                   G4FSIM11            __at(0x44E3);	// @ (0x89C * 8 + 3)
#define                                 G4FSIM11_bit        _BIT_ACCESS(COG4FSIM1,3)
// COG4FSIM1<G4FSIM12>
extern volatile __bit                   G4FSIM12            __at(0x44E4);	// @ (0x89C * 8 + 4)
#define                                 G4FSIM12_bit        _BIT_ACCESS(COG4FSIM1,4)
// COG4FSIM1<G4FSIM13>
extern volatile __bit                   G4FSIM13            __at(0x44E5);	// @ (0x89C * 8 + 5)
#define                                 G4FSIM13_bit        _BIT_ACCESS(COG4FSIM1,5)
// COG4FSIM1<G4FSIM14>
extern volatile __bit                   G4FSIM14            __at(0x44E6);	// @ (0x89C * 8 + 6)
#define                                 G4FSIM14_bit        _BIT_ACCESS(COG4FSIM1,6)
// COG4FSIM1<G4FSIM15>
extern volatile __bit                   G4FSIM15            __at(0x44E7);	// @ (0x89C * 8 + 7)
#define                                 G4FSIM15_bit        _BIT_ACCESS(COG4FSIM1,7)
// COG4FSIM0<G4FSIM2>
extern volatile __bit                   G4FSIM2             __at(0x44DA);	// @ (0x89B * 8 + 2)
#define                                 G4FSIM2_bit         _BIT_ACCESS(COG4FSIM0,2)
// COG4FSIM0<G4FSIM3>
extern volatile __bit                   G4FSIM3             __at(0x44DB);	// @ (0x89B * 8 + 3)
#define                                 G4FSIM3_bit         _BIT_ACCESS(COG4FSIM0,3)
// COG4FSIM0<G4FSIM4>
extern volatile __bit                   G4FSIM4             __at(0x44DC);	// @ (0x89B * 8 + 4)
#define                                 G4FSIM4_bit         _BIT_ACCESS(COG4FSIM0,4)
// COG4FSIM0<G4FSIM5>
extern volatile __bit                   G4FSIM5             __at(0x44DD);	// @ (0x89B * 8 + 5)
#define                                 G4FSIM5_bit         _BIT_ACCESS(COG4FSIM0,5)
// COG4FSIM0<G4FSIM6>
extern volatile __bit                   G4FSIM6             __at(0x44DE);	// @ (0x89B * 8 + 6)
#define                                 G4FSIM6_bit         _BIT_ACCESS(COG4FSIM0,6)
// COG4FSIM0<G4FSIM7>
extern volatile __bit                   G4FSIM7             __at(0x44DF);	// @ (0x89B * 8 + 7)
#define                                 G4FSIM7_bit         _BIT_ACCESS(COG4FSIM0,7)
// COG4FSIM1<G4FSIM8>
extern volatile __bit                   G4FSIM8             __at(0x44E0);	// @ (0x89C * 8 + 0)
#define                                 G4FSIM8_bit         _BIT_ACCESS(COG4FSIM1,0)
// COG4FSIM1<G4FSIM9>
extern volatile __bit                   G4FSIM9             __at(0x44E1);	// @ (0x89C * 8 + 1)
#define                                 G4FSIM9_bit         _BIT_ACCESS(COG4FSIM1,1)
// COG4CON0<G4LD>
extern volatile __bit                   G4LD                __at(0x449E);	// @ (0x893 * 8 + 6)
#define                                 G4LD_bit            _BIT_ACCESS(COG4CON0,6)
// COG4CON0<G4MD0>
extern volatile __bit                   G4MD0               __at(0x4498);	// @ (0x893 * 8 + 0)
#define                                 G4MD0_bit           _BIT_ACCESS(COG4CON0,0)
// COG4CON0<G4MD1>
extern volatile __bit                   G4MD1               __at(0x4499);	// @ (0x893 * 8 + 1)
#define                                 G4MD1_bit           _BIT_ACCESS(COG4CON0,1)
// COG4CON0<G4MD2>
extern volatile __bit                   G4MD2               __at(0x449A);	// @ (0x893 * 8 + 2)
#define                                 G4MD2_bit           _BIT_ACCESS(COG4CON0,2)
// COG4PHF<G4PHF0>
extern volatile __bit                   G4PHF0              __at(0x4470);	// @ (0x88E * 8 + 0)
#define                                 G4PHF0_bit          _BIT_ACCESS(COG4PHF,0)
// COG4PHF<G4PHF1>
extern volatile __bit                   G4PHF1              __at(0x4471);	// @ (0x88E * 8 + 1)
#define                                 G4PHF1_bit          _BIT_ACCESS(COG4PHF,1)
// COG4PHF<G4PHF2>
extern volatile __bit                   G4PHF2              __at(0x4472);	// @ (0x88E * 8 + 2)
#define                                 G4PHF2_bit          _BIT_ACCESS(COG4PHF,2)
// COG4PHF<G4PHF3>
extern volatile __bit                   G4PHF3              __at(0x4473);	// @ (0x88E * 8 + 3)
#define                                 G4PHF3_bit          _BIT_ACCESS(COG4PHF,3)
// COG4PHF<G4PHF4>
extern volatile __bit                   G4PHF4              __at(0x4474);	// @ (0x88E * 8 + 4)
#define                                 G4PHF4_bit          _BIT_ACCESS(COG4PHF,4)
// COG4PHF<G4PHF5>
extern volatile __bit                   G4PHF5              __at(0x4475);	// @ (0x88E * 8 + 5)
#define                                 G4PHF5_bit          _BIT_ACCESS(COG4PHF,5)
// COG4PHR<G4PHR0>
extern volatile __bit                   G4PHR0              __at(0x4468);	// @ (0x88D * 8 + 0)
#define                                 G4PHR0_bit          _BIT_ACCESS(COG4PHR,0)
// COG4PHR<G4PHR1>
extern volatile __bit                   G4PHR1              __at(0x4469);	// @ (0x88D * 8 + 1)
#define                                 G4PHR1_bit          _BIT_ACCESS(COG4PHR,1)
// COG4PHR<G4PHR2>
extern volatile __bit                   G4PHR2              __at(0x446A);	// @ (0x88D * 8 + 2)
#define                                 G4PHR2_bit          _BIT_ACCESS(COG4PHR,2)
// COG4PHR<G4PHR3>
extern volatile __bit                   G4PHR3              __at(0x446B);	// @ (0x88D * 8 + 3)
#define                                 G4PHR3_bit          _BIT_ACCESS(COG4PHR,3)
// COG4PHR<G4PHR4>
extern volatile __bit                   G4PHR4              __at(0x446C);	// @ (0x88D * 8 + 4)
#define                                 G4PHR4_bit          _BIT_ACCESS(COG4PHR,4)
// COG4PHR<G4PHR5>
extern volatile __bit                   G4PHR5              __at(0x446D);	// @ (0x88D * 8 + 5)
#define                                 G4PHR5_bit          _BIT_ACCESS(COG4PHR,5)
// COG4CON1<G4POLA>
extern volatile __bit                   G4POLA              __at(0x44A0);	// @ (0x894 * 8 + 0)
#define                                 G4POLA_bit          _BIT_ACCESS(COG4CON1,0)
// COG4CON1<G4POLB>
extern volatile __bit                   G4POLB              __at(0x44A1);	// @ (0x894 * 8 + 1)
#define                                 G4POLB_bit          _BIT_ACCESS(COG4CON1,1)
// COG4CON1<G4POLC>
extern volatile __bit                   G4POLC              __at(0x44A2);	// @ (0x894 * 8 + 2)
#define                                 G4POLC_bit          _BIT_ACCESS(COG4CON1,2)
// COG4CON1<G4POLD>
extern volatile __bit                   G4POLD              __at(0x44A3);	// @ (0x894 * 8 + 3)
#define                                 G4POLD_bit          _BIT_ACCESS(COG4CON1,3)
// COG4CON1<G4RDBS>
extern volatile __bit                   G4RDBS              __at(0x44A7);	// @ (0x894 * 8 + 7)
#define                                 G4RDBS_bit          _BIT_ACCESS(COG4CON1,7)
// COG4RIS0<G4RIS0>
extern volatile __bit                   G4RIS0              __at(0x44A8);	// @ (0x895 * 8 + 0)
#define                                 G4RIS0_bit          _BIT_ACCESS(COG4RIS0,0)
// COG4RIS0<G4RIS1>
extern volatile __bit                   G4RIS1              __at(0x44A9);	// @ (0x895 * 8 + 1)
#define                                 G4RIS1_bit          _BIT_ACCESS(COG4RIS0,1)
// COG4RIS1<G4RIS10>
extern volatile __bit                   G4RIS10             __at(0x44B2);	// @ (0x896 * 8 + 2)
#define                                 G4RIS10_bit         _BIT_ACCESS(COG4RIS1,2)
// COG4RIS1<G4RIS11>
extern volatile __bit                   G4RIS11             __at(0x44B3);	// @ (0x896 * 8 + 3)
#define                                 G4RIS11_bit         _BIT_ACCESS(COG4RIS1,3)
// COG4RIS1<G4RIS12>
extern volatile __bit                   G4RIS12             __at(0x44B4);	// @ (0x896 * 8 + 4)
#define                                 G4RIS12_bit         _BIT_ACCESS(COG4RIS1,4)
// COG4RIS1<G4RIS13>
extern volatile __bit                   G4RIS13             __at(0x44B5);	// @ (0x896 * 8 + 5)
#define                                 G4RIS13_bit         _BIT_ACCESS(COG4RIS1,5)
// COG4RIS1<G4RIS14>
extern volatile __bit                   G4RIS14             __at(0x44B6);	// @ (0x896 * 8 + 6)
#define                                 G4RIS14_bit         _BIT_ACCESS(COG4RIS1,6)
// COG4RIS1<G4RIS15>
extern volatile __bit                   G4RIS15             __at(0x44B7);	// @ (0x896 * 8 + 7)
#define                                 G4RIS15_bit         _BIT_ACCESS(COG4RIS1,7)
// COG4RIS0<G4RIS2>
extern volatile __bit                   G4RIS2              __at(0x44AA);	// @ (0x895 * 8 + 2)
#define                                 G4RIS2_bit          _BIT_ACCESS(COG4RIS0,2)
// COG4RIS0<G4RIS3>
extern volatile __bit                   G4RIS3              __at(0x44AB);	// @ (0x895 * 8 + 3)
#define                                 G4RIS3_bit          _BIT_ACCESS(COG4RIS0,3)
// COG4RIS0<G4RIS4>
extern volatile __bit                   G4RIS4              __at(0x44AC);	// @ (0x895 * 8 + 4)
#define                                 G4RIS4_bit          _BIT_ACCESS(COG4RIS0,4)
// COG4RIS0<G4RIS5>
extern volatile __bit                   G4RIS5              __at(0x44AD);	// @ (0x895 * 8 + 5)
#define                                 G4RIS5_bit          _BIT_ACCESS(COG4RIS0,5)
// COG4RIS0<G4RIS6>
extern volatile __bit                   G4RIS6              __at(0x44AE);	// @ (0x895 * 8 + 6)
#define                                 G4RIS6_bit          _BIT_ACCESS(COG4RIS0,6)
// COG4RIS0<G4RIS7>
extern volatile __bit                   G4RIS7              __at(0x44AF);	// @ (0x895 * 8 + 7)
#define                                 G4RIS7_bit          _BIT_ACCESS(COG4RIS0,7)
// COG4RIS1<G4RIS8>
extern volatile __bit                   G4RIS8              __at(0x44B0);	// @ (0x896 * 8 + 0)
#define                                 G4RIS8_bit          _BIT_ACCESS(COG4RIS1,0)
// COG4RIS1<G4RIS9>
extern volatile __bit                   G4RIS9              __at(0x44B1);	// @ (0x896 * 8 + 1)
#define                                 G4RIS9_bit          _BIT_ACCESS(COG4RIS1,1)
// COG4RSIM0<G4RSIM0>
extern volatile __bit                   G4RSIM0             __at(0x44B8);	// @ (0x897 * 8 + 0)
#define                                 G4RSIM0_bit         _BIT_ACCESS(COG4RSIM0,0)
// COG4RSIM0<G4RSIM1>
extern volatile __bit                   G4RSIM1             __at(0x44B9);	// @ (0x897 * 8 + 1)
#define                                 G4RSIM1_bit         _BIT_ACCESS(COG4RSIM0,1)
// COG4RSIM1<G4RSIM10>
extern volatile __bit                   G4RSIM10            __at(0x44C2);	// @ (0x898 * 8 + 2)
#define                                 G4RSIM10_bit        _BIT_ACCESS(COG4RSIM1,2)
// COG4RSIM1<G4RSIM11>
extern volatile __bit                   G4RSIM11            __at(0x44C3);	// @ (0x898 * 8 + 3)
#define                                 G4RSIM11_bit        _BIT_ACCESS(COG4RSIM1,3)
// COG4RSIM1<G4RSIM12>
extern volatile __bit                   G4RSIM12            __at(0x44C4);	// @ (0x898 * 8 + 4)
#define                                 G4RSIM12_bit        _BIT_ACCESS(COG4RSIM1,4)
// COG4RSIM1<G4RSIM13>
extern volatile __bit                   G4RSIM13            __at(0x44C5);	// @ (0x898 * 8 + 5)
#define                                 G4RSIM13_bit        _BIT_ACCESS(COG4RSIM1,5)
// COG4RSIM1<G4RSIM14>
extern volatile __bit                   G4RSIM14            __at(0x44C6);	// @ (0x898 * 8 + 6)
#define                                 G4RSIM14_bit        _BIT_ACCESS(COG4RSIM1,6)
// COG4RSIM1<G4RSIM15>
extern volatile __bit                   G4RSIM15            __at(0x44C7);	// @ (0x898 * 8 + 7)
#define                                 G4RSIM15_bit        _BIT_ACCESS(COG4RSIM1,7)
// COG4RSIM0<G4RSIM2>
extern volatile __bit                   G4RSIM2             __at(0x44BA);	// @ (0x897 * 8 + 2)
#define                                 G4RSIM2_bit         _BIT_ACCESS(COG4RSIM0,2)
// COG4RSIM0<G4RSIM3>
extern volatile __bit                   G4RSIM3             __at(0x44BB);	// @ (0x897 * 8 + 3)
#define                                 G4RSIM3_bit         _BIT_ACCESS(COG4RSIM0,3)
// COG4RSIM0<G4RSIM4>
extern volatile __bit                   G4RSIM4             __at(0x44BC);	// @ (0x897 * 8 + 4)
#define                                 G4RSIM4_bit         _BIT_ACCESS(COG4RSIM0,4)
// COG4RSIM0<G4RSIM5>
extern volatile __bit                   G4RSIM5             __at(0x44BD);	// @ (0x897 * 8 + 5)
#define                                 G4RSIM5_bit         _BIT_ACCESS(COG4RSIM0,5)
// COG4RSIM0<G4RSIM6>
extern volatile __bit                   G4RSIM6             __at(0x44BE);	// @ (0x897 * 8 + 6)
#define                                 G4RSIM6_bit         _BIT_ACCESS(COG4RSIM0,6)
// COG4RSIM0<G4RSIM7>
extern volatile __bit                   G4RSIM7             __at(0x44BF);	// @ (0x897 * 8 + 7)
#define                                 G4RSIM7_bit         _BIT_ACCESS(COG4RSIM0,7)
// COG4RSIM1<G4RSIM8>
extern volatile __bit                   G4RSIM8             __at(0x44C0);	// @ (0x898 * 8 + 0)
#define                                 G4RSIM8_bit         _BIT_ACCESS(COG4RSIM1,0)
// COG4RSIM1<G4RSIM9>
extern volatile __bit                   G4RSIM9             __at(0x44C1);	// @ (0x898 * 8 + 1)
#define                                 G4RSIM9_bit         _BIT_ACCESS(COG4RSIM1,1)
// COG4STR<G4SDATA>
extern volatile __bit                   G4SDATA             __at(0x44FC);	// @ (0x89F * 8 + 4)
#define                                 G4SDATA_bit         _BIT_ACCESS(COG4STR,4)
// COG4STR<G4SDATB>
extern volatile __bit                   G4SDATB             __at(0x44FD);	// @ (0x89F * 8 + 5)
#define                                 G4SDATB_bit         _BIT_ACCESS(COG4STR,5)
// COG4STR<G4SDATC>
extern volatile __bit                   G4SDATC             __at(0x44FE);	// @ (0x89F * 8 + 6)
#define                                 G4SDATC_bit         _BIT_ACCESS(COG4STR,6)
// COG4STR<G4SDATD>
extern volatile __bit                   G4SDATD             __at(0x44FF);	// @ (0x89F * 8 + 7)
#define                                 G4SDATD_bit         _BIT_ACCESS(COG4STR,7)
// COG4STR<G4STRA>
extern volatile __bit                   G4STRA              __at(0x44F8);	// @ (0x89F * 8 + 0)
#define                                 G4STRA_bit          _BIT_ACCESS(COG4STR,0)
// COG4STR<G4STRB>
extern volatile __bit                   G4STRB              __at(0x44F9);	// @ (0x89F * 8 + 1)
#define                                 G4STRB_bit          _BIT_ACCESS(COG4STR,1)
// COG4STR<G4STRC>
extern volatile __bit                   G4STRC              __at(0x44FA);	// @ (0x89F * 8 + 2)
#define                                 G4STRC_bit          _BIT_ACCESS(COG4STR,2)
// COG4STR<G4STRD>
extern volatile __bit                   G4STRD              __at(0x44FB);	// @ (0x89F * 8 + 3)
#define                                 G4STRD_bit          _BIT_ACCESS(COG4STR,3)
// SSP1CON2<GCEN>
extern volatile __bit                   GCEN                __at(0x10B7);	// @ (0x216 * 8 + 7)
#define                                 GCEN_bit            _BIT_ACCESS(SSP1CON2,7)
// INTCON<GIE>
extern volatile __bit                   GIE                 __at(0x5F);	// @ (0xB * 8 + 7)
#define                                 GIE_bit             _BIT_ACCESS(INTCON,7)
// OSCSTAT<HFIOFL>
extern volatile __bit                   HFIOFL              __at(0x4E3);	// @ (0x9C * 8 + 3)
#define                                 HFIOFL_bit          _BIT_ACCESS(OSCSTAT,3)
// OSCSTAT<HFIOFR>
extern volatile __bit                   HFIOFR              __at(0x4E4);	// @ (0x9C * 8 + 4)
#define                                 HFIOFR_bit          _BIT_ACCESS(OSCSTAT,4)
// OSCSTAT<HFIOFS>
extern volatile __bit                   HFIOFS              __at(0x4E0);	// @ (0x9C * 8 + 0)
#define                                 HFIOFS_bit          _BIT_ACCESS(OSCSTAT,0)
// HIDRVB<HIDB0>
extern volatile __bit                   HIDB0               __at(0x2068);	// @ (0x40D * 8 + 0)
#define                                 HIDB0_bit           _BIT_ACCESS(HIDRVB,0)
// HIDRVB<HIDB1>
extern volatile __bit                   HIDB1               __at(0x2069);	// @ (0x40D * 8 + 1)
#define                                 HIDB1_bit           _BIT_ACCESS(HIDRVB,1)
// INLVLA<INLVA6>
extern volatile __bit                   INLVA6              __at(0x1C66);	// @ (0x38C * 8 + 6)
#define                                 INLVA6_bit          _BIT_ACCESS(INLVLA,6)
// INLVLA<INLVA7>
extern volatile __bit                   INLVA7              __at(0x1C67);	// @ (0x38C * 8 + 7)
#define                                 INLVA7_bit          _BIT_ACCESS(INLVLA,7)
// INLVLB<INLVB0>
extern volatile __bit                   INLVB0              __at(0x1C68);	// @ (0x38D * 8 + 0)
#define                                 INLVB0_bit          _BIT_ACCESS(INLVLB,0)
// INLVLB<INLVB1>
extern volatile __bit                   INLVB1              __at(0x1C69);	// @ (0x38D * 8 + 1)
#define                                 INLVB1_bit          _BIT_ACCESS(INLVLB,1)
// INLVLB<INLVB2>
extern volatile __bit                   INLVB2              __at(0x1C6A);	// @ (0x38D * 8 + 2)
#define                                 INLVB2_bit          _BIT_ACCESS(INLVLB,2)
// INLVLB<INLVB3>
extern volatile __bit                   INLVB3              __at(0x1C6B);	// @ (0x38D * 8 + 3)
#define                                 INLVB3_bit          _BIT_ACCESS(INLVLB,3)
// INLVLA<INLVLA0>
extern volatile __bit                   INLVLA0             __at(0x1C60);	// @ (0x38C * 8 + 0)
#define                                 INLVLA0_bit         _BIT_ACCESS(INLVLA,0)
// INLVLA<INLVLA1>
extern volatile __bit                   INLVLA1             __at(0x1C61);	// @ (0x38C * 8 + 1)
#define                                 INLVLA1_bit         _BIT_ACCESS(INLVLA,1)
// INLVLA<INLVLA2>
extern volatile __bit                   INLVLA2             __at(0x1C62);	// @ (0x38C * 8 + 2)
#define                                 INLVLA2_bit         _BIT_ACCESS(INLVLA,2)
// INLVLA<INLVLA3>
extern volatile __bit                   INLVLA3             __at(0x1C63);	// @ (0x38C * 8 + 3)
#define                                 INLVLA3_bit         _BIT_ACCESS(INLVLA,3)
// INLVLA<INLVLA4>
extern volatile __bit                   INLVLA4             __at(0x1C64);	// @ (0x38C * 8 + 4)
#define                                 INLVLA4_bit         _BIT_ACCESS(INLVLA,4)
// INLVLA<INLVLA5>
extern volatile __bit                   INLVLA5             __at(0x1C65);	// @ (0x38C * 8 + 5)
#define                                 INLVLA5_bit         _BIT_ACCESS(INLVLA,5)
// INLVLB<INLVLB4>
extern volatile __bit                   INLVLB4             __at(0x1C6C);	// @ (0x38D * 8 + 4)
#define                                 INLVLB4_bit         _BIT_ACCESS(INLVLB,4)
// INLVLB<INLVLB5>
extern volatile __bit                   INLVLB5             __at(0x1C6D);	// @ (0x38D * 8 + 5)
#define                                 INLVLB5_bit         _BIT_ACCESS(INLVLB,5)
// INLVLB<INLVLB6>
extern volatile __bit                   INLVLB6             __at(0x1C6E);	// @ (0x38D * 8 + 6)
#define                                 INLVLB6_bit         _BIT_ACCESS(INLVLB,6)
// INLVLB<INLVLB7>
extern volatile __bit                   INLVLB7             __at(0x1C6F);	// @ (0x38D * 8 + 7)
#define                                 INLVLB7_bit         _BIT_ACCESS(INLVLB,7)
// INLVLC<INLVLC0>
extern volatile __bit                   INLVLC0             __at(0x1C70);	// @ (0x38E * 8 + 0)
#define                                 INLVLC0_bit         _BIT_ACCESS(INLVLC,0)
// INLVLC<INLVLC1>
extern volatile __bit                   INLVLC1             __at(0x1C71);	// @ (0x38E * 8 + 1)
#define                                 INLVLC1_bit         _BIT_ACCESS(INLVLC,1)
// INLVLC<INLVLC2>
extern volatile __bit                   INLVLC2             __at(0x1C72);	// @ (0x38E * 8 + 2)
#define                                 INLVLC2_bit         _BIT_ACCESS(INLVLC,2)
// INLVLC<INLVLC3>
extern volatile __bit                   INLVLC3             __at(0x1C73);	// @ (0x38E * 8 + 3)
#define                                 INLVLC3_bit         _BIT_ACCESS(INLVLC,3)
// INLVLC<INLVLC4>
extern volatile __bit                   INLVLC4             __at(0x1C74);	// @ (0x38E * 8 + 4)
#define                                 INLVLC4_bit         _BIT_ACCESS(INLVLC,4)
// INLVLC<INLVLC5>
extern volatile __bit                   INLVLC5             __at(0x1C75);	// @ (0x38E * 8 + 5)
#define                                 INLVLC5_bit         _BIT_ACCESS(INLVLC,5)
// INLVLC<INLVLC6>
extern volatile __bit                   INLVLC6             __at(0x1C76);	// @ (0x38E * 8 + 6)
#define                                 INLVLC6_bit         _BIT_ACCESS(INLVLC,6)
// INLVLC<INLVLC7>
extern volatile __bit                   INLVLC7             __at(0x1C77);	// @ (0x38E * 8 + 7)
#define                                 INLVLC7_bit         _BIT_ACCESS(INLVLC,7)
// INLVLD<INLVLD0>
extern volatile __bit                   INLVLD0             __at(0x1C78);	// @ (0x38F * 8 + 0)
#define                                 INLVLD0_bit         _BIT_ACCESS(INLVLD,0)
// INLVLD<INLVLD1>
extern volatile __bit                   INLVLD1             __at(0x1C79);	// @ (0x38F * 8 + 1)
#define                                 INLVLD1_bit         _BIT_ACCESS(INLVLD,1)
// INLVLD<INLVLD2>
extern volatile __bit                   INLVLD2             __at(0x1C7A);	// @ (0x38F * 8 + 2)
#define                                 INLVLD2_bit         _BIT_ACCESS(INLVLD,2)
// INLVLD<INLVLD3>
extern volatile __bit                   INLVLD3             __at(0x1C7B);	// @ (0x38F * 8 + 3)
#define                                 INLVLD3_bit         _BIT_ACCESS(INLVLD,3)
// INLVLD<INLVLD4>
extern volatile __bit                   INLVLD4             __at(0x1C7C);	// @ (0x38F * 8 + 4)
#define                                 INLVLD4_bit         _BIT_ACCESS(INLVLD,4)
// INLVLD<INLVLD5>
extern volatile __bit                   INLVLD5             __at(0x1C7D);	// @ (0x38F * 8 + 5)
#define                                 INLVLD5_bit         _BIT_ACCESS(INLVLD,5)
// INLVLD<INLVLD6>
extern volatile __bit                   INLVLD6             __at(0x1C7E);	// @ (0x38F * 8 + 6)
#define                                 INLVLD6_bit         _BIT_ACCESS(INLVLD,6)
// INLVLD<INLVLD7>
extern volatile __bit                   INLVLD7             __at(0x1C7F);	// @ (0x38F * 8 + 7)
#define                                 INLVLD7_bit         _BIT_ACCESS(INLVLD,7)
// INLVLE<INLVLE0>
extern volatile __bit                   INLVLE0             __at(0x1C80);	// @ (0x390 * 8 + 0)
#define                                 INLVLE0_bit         _BIT_ACCESS(INLVLE,0)
// INLVLE<INLVLE1>
extern volatile __bit                   INLVLE1             __at(0x1C81);	// @ (0x390 * 8 + 1)
#define                                 INLVLE1_bit         _BIT_ACCESS(INLVLE,1)
// INLVLE<INLVLE2>
extern volatile __bit                   INLVLE2             __at(0x1C82);	// @ (0x390 * 8 + 2)
#define                                 INLVLE2_bit         _BIT_ACCESS(INLVLE,2)
// INLVLE<INLVLE3>
extern volatile __bit                   INLVLE3             __at(0x1C83);	// @ (0x390 * 8 + 3)
#define                                 INLVLE3_bit         _BIT_ACCESS(INLVLE,3)
// INTCON<INTE>
extern volatile __bit                   INTE                __at(0x5C);	// @ (0xB * 8 + 4)
#define                                 INTE_bit            _BIT_ACCESS(INTCON,4)
// OPTION_REG<INTEDG>
extern volatile __bit                   INTEDG              __at(0x4BE);	// @ (0x97 * 8 + 6)
#define                                 INTEDG_bit          _BIT_ACCESS(OPTION_REG,6)
// INTCON<INTF>
extern volatile __bit                   INTF                __at(0x59);	// @ (0xB * 8 + 1)
#define                                 INTF_bit            _BIT_ACCESS(INTCON,1)
// IOCAF<IOCAF0>
extern volatile __bit                   IOCAF0              __at(0x1C98);	// @ (0x393 * 8 + 0)
#define                                 IOCAF0_bit          _BIT_ACCESS(IOCAF,0)
// IOCAF<IOCAF1>
extern volatile __bit                   IOCAF1              __at(0x1C99);	// @ (0x393 * 8 + 1)
#define                                 IOCAF1_bit          _BIT_ACCESS(IOCAF,1)
// IOCAF<IOCAF2>
extern volatile __bit                   IOCAF2              __at(0x1C9A);	// @ (0x393 * 8 + 2)
#define                                 IOCAF2_bit          _BIT_ACCESS(IOCAF,2)
// IOCAF<IOCAF3>
extern volatile __bit                   IOCAF3              __at(0x1C9B);	// @ (0x393 * 8 + 3)
#define                                 IOCAF3_bit          _BIT_ACCESS(IOCAF,3)
// IOCAF<IOCAF4>
extern volatile __bit                   IOCAF4              __at(0x1C9C);	// @ (0x393 * 8 + 4)
#define                                 IOCAF4_bit          _BIT_ACCESS(IOCAF,4)
// IOCAF<IOCAF5>
extern volatile __bit                   IOCAF5              __at(0x1C9D);	// @ (0x393 * 8 + 5)
#define                                 IOCAF5_bit          _BIT_ACCESS(IOCAF,5)
// IOCAF<IOCAF6>
extern volatile __bit                   IOCAF6              __at(0x1C9E);	// @ (0x393 * 8 + 6)
#define                                 IOCAF6_bit          _BIT_ACCESS(IOCAF,6)
// IOCAF<IOCAF7>
extern volatile __bit                   IOCAF7              __at(0x1C9F);	// @ (0x393 * 8 + 7)
#define                                 IOCAF7_bit          _BIT_ACCESS(IOCAF,7)
// IOCAN<IOCAN0>
extern volatile __bit                   IOCAN0              __at(0x1C90);	// @ (0x392 * 8 + 0)
#define                                 IOCAN0_bit          _BIT_ACCESS(IOCAN,0)
// IOCAN<IOCAN1>
extern volatile __bit                   IOCAN1              __at(0x1C91);	// @ (0x392 * 8 + 1)
#define                                 IOCAN1_bit          _BIT_ACCESS(IOCAN,1)
// IOCAN<IOCAN2>
extern volatile __bit                   IOCAN2              __at(0x1C92);	// @ (0x392 * 8 + 2)
#define                                 IOCAN2_bit          _BIT_ACCESS(IOCAN,2)
// IOCAN<IOCAN3>
extern volatile __bit                   IOCAN3              __at(0x1C93);	// @ (0x392 * 8 + 3)
#define                                 IOCAN3_bit          _BIT_ACCESS(IOCAN,3)
// IOCAN<IOCAN4>
extern volatile __bit                   IOCAN4              __at(0x1C94);	// @ (0x392 * 8 + 4)
#define                                 IOCAN4_bit          _BIT_ACCESS(IOCAN,4)
// IOCAN<IOCAN5>
extern volatile __bit                   IOCAN5              __at(0x1C95);	// @ (0x392 * 8 + 5)
#define                                 IOCAN5_bit          _BIT_ACCESS(IOCAN,5)
// IOCAN<IOCAN6>
extern volatile __bit                   IOCAN6              __at(0x1C96);	// @ (0x392 * 8 + 6)
#define                                 IOCAN6_bit          _BIT_ACCESS(IOCAN,6)
// IOCAN<IOCAN7>
extern volatile __bit                   IOCAN7              __at(0x1C97);	// @ (0x392 * 8 + 7)
#define                                 IOCAN7_bit          _BIT_ACCESS(IOCAN,7)
// IOCAP<IOCAP0>
extern volatile __bit                   IOCAP0              __at(0x1C88);	// @ (0x391 * 8 + 0)
#define                                 IOCAP0_bit          _BIT_ACCESS(IOCAP,0)
// IOCAP<IOCAP1>
extern volatile __bit                   IOCAP1              __at(0x1C89);	// @ (0x391 * 8 + 1)
#define                                 IOCAP1_bit          _BIT_ACCESS(IOCAP,1)
// IOCAP<IOCAP2>
extern volatile __bit                   IOCAP2              __at(0x1C8A);	// @ (0x391 * 8 + 2)
#define                                 IOCAP2_bit          _BIT_ACCESS(IOCAP,2)
// IOCAP<IOCAP3>
extern volatile __bit                   IOCAP3              __at(0x1C8B);	// @ (0x391 * 8 + 3)
#define                                 IOCAP3_bit          _BIT_ACCESS(IOCAP,3)
// IOCAP<IOCAP4>
extern volatile __bit                   IOCAP4              __at(0x1C8C);	// @ (0x391 * 8 + 4)
#define                                 IOCAP4_bit          _BIT_ACCESS(IOCAP,4)
// IOCAP<IOCAP5>
extern volatile __bit                   IOCAP5              __at(0x1C8D);	// @ (0x391 * 8 + 5)
#define                                 IOCAP5_bit          _BIT_ACCESS(IOCAP,5)
// IOCAP<IOCAP6>
extern volatile __bit                   IOCAP6              __at(0x1C8E);	// @ (0x391 * 8 + 6)
#define                                 IOCAP6_bit          _BIT_ACCESS(IOCAP,6)
// IOCAP<IOCAP7>
extern volatile __bit                   IOCAP7              __at(0x1C8F);	// @ (0x391 * 8 + 7)
#define                                 IOCAP7_bit          _BIT_ACCESS(IOCAP,7)
// IOCBF<IOCBF0>
extern volatile __bit                   IOCBF0              __at(0x1CB0);	// @ (0x396 * 8 + 0)
#define                                 IOCBF0_bit          _BIT_ACCESS(IOCBF,0)
// IOCBF<IOCBF1>
extern volatile __bit                   IOCBF1              __at(0x1CB1);	// @ (0x396 * 8 + 1)
#define                                 IOCBF1_bit          _BIT_ACCESS(IOCBF,1)
// IOCBF<IOCBF2>
extern volatile __bit                   IOCBF2              __at(0x1CB2);	// @ (0x396 * 8 + 2)
#define                                 IOCBF2_bit          _BIT_ACCESS(IOCBF,2)
// IOCBF<IOCBF3>
extern volatile __bit                   IOCBF3              __at(0x1CB3);	// @ (0x396 * 8 + 3)
#define                                 IOCBF3_bit          _BIT_ACCESS(IOCBF,3)
// IOCBF<IOCBF4>
extern volatile __bit                   IOCBF4              __at(0x1CB4);	// @ (0x396 * 8 + 4)
#define                                 IOCBF4_bit          _BIT_ACCESS(IOCBF,4)
// IOCBF<IOCBF5>
extern volatile __bit                   IOCBF5              __at(0x1CB5);	// @ (0x396 * 8 + 5)
#define                                 IOCBF5_bit          _BIT_ACCESS(IOCBF,5)
// IOCBF<IOCBF6>
extern volatile __bit                   IOCBF6              __at(0x1CB6);	// @ (0x396 * 8 + 6)
#define                                 IOCBF6_bit          _BIT_ACCESS(IOCBF,6)
// IOCBF<IOCBF7>
extern volatile __bit                   IOCBF7              __at(0x1CB7);	// @ (0x396 * 8 + 7)
#define                                 IOCBF7_bit          _BIT_ACCESS(IOCBF,7)
// IOCBN<IOCBN0>
extern volatile __bit                   IOCBN0              __at(0x1CA8);	// @ (0x395 * 8 + 0)
#define                                 IOCBN0_bit          _BIT_ACCESS(IOCBN,0)
// IOCBN<IOCBN1>
extern volatile __bit                   IOCBN1              __at(0x1CA9);	// @ (0x395 * 8 + 1)
#define                                 IOCBN1_bit          _BIT_ACCESS(IOCBN,1)
// IOCBN<IOCBN2>
extern volatile __bit                   IOCBN2              __at(0x1CAA);	// @ (0x395 * 8 + 2)
#define                                 IOCBN2_bit          _BIT_ACCESS(IOCBN,2)
// IOCBN<IOCBN3>
extern volatile __bit                   IOCBN3              __at(0x1CAB);	// @ (0x395 * 8 + 3)
#define                                 IOCBN3_bit          _BIT_ACCESS(IOCBN,3)
// IOCBN<IOCBN4>
extern volatile __bit                   IOCBN4              __at(0x1CAC);	// @ (0x395 * 8 + 4)
#define                                 IOCBN4_bit          _BIT_ACCESS(IOCBN,4)
// IOCBN<IOCBN5>
extern volatile __bit                   IOCBN5              __at(0x1CAD);	// @ (0x395 * 8 + 5)
#define                                 IOCBN5_bit          _BIT_ACCESS(IOCBN,5)
// IOCBN<IOCBN6>
extern volatile __bit                   IOCBN6              __at(0x1CAE);	// @ (0x395 * 8 + 6)
#define                                 IOCBN6_bit          _BIT_ACCESS(IOCBN,6)
// IOCBN<IOCBN7>
extern volatile __bit                   IOCBN7              __at(0x1CAF);	// @ (0x395 * 8 + 7)
#define                                 IOCBN7_bit          _BIT_ACCESS(IOCBN,7)
// IOCBP<IOCBP0>
extern volatile __bit                   IOCBP0              __at(0x1CA0);	// @ (0x394 * 8 + 0)
#define                                 IOCBP0_bit          _BIT_ACCESS(IOCBP,0)
// IOCBP<IOCBP1>
extern volatile __bit                   IOCBP1              __at(0x1CA1);	// @ (0x394 * 8 + 1)
#define                                 IOCBP1_bit          _BIT_ACCESS(IOCBP,1)
// IOCBP<IOCBP2>
extern volatile __bit                   IOCBP2              __at(0x1CA2);	// @ (0x394 * 8 + 2)
#define                                 IOCBP2_bit          _BIT_ACCESS(IOCBP,2)
// IOCBP<IOCBP3>
extern volatile __bit                   IOCBP3              __at(0x1CA3);	// @ (0x394 * 8 + 3)
#define                                 IOCBP3_bit          _BIT_ACCESS(IOCBP,3)
// IOCBP<IOCBP4>
extern volatile __bit                   IOCBP4              __at(0x1CA4);	// @ (0x394 * 8 + 4)
#define                                 IOCBP4_bit          _BIT_ACCESS(IOCBP,4)
// IOCBP<IOCBP5>
extern volatile __bit                   IOCBP5              __at(0x1CA5);	// @ (0x394 * 8 + 5)
#define                                 IOCBP5_bit          _BIT_ACCESS(IOCBP,5)
// IOCBP<IOCBP6>
extern volatile __bit                   IOCBP6              __at(0x1CA6);	// @ (0x394 * 8 + 6)
#define                                 IOCBP6_bit          _BIT_ACCESS(IOCBP,6)
// IOCBP<IOCBP7>
extern volatile __bit                   IOCBP7              __at(0x1CA7);	// @ (0x394 * 8 + 7)
#define                                 IOCBP7_bit          _BIT_ACCESS(IOCBP,7)
// IOCCF<IOCCF0>
extern volatile __bit                   IOCCF0              __at(0x1CC8);	// @ (0x399 * 8 + 0)
#define                                 IOCCF0_bit          _BIT_ACCESS(IOCCF,0)
// IOCCF<IOCCF1>
extern volatile __bit                   IOCCF1              __at(0x1CC9);	// @ (0x399 * 8 + 1)
#define                                 IOCCF1_bit          _BIT_ACCESS(IOCCF,1)
// IOCCF<IOCCF2>
extern volatile __bit                   IOCCF2              __at(0x1CCA);	// @ (0x399 * 8 + 2)
#define                                 IOCCF2_bit          _BIT_ACCESS(IOCCF,2)
// IOCCF<IOCCF3>
extern volatile __bit                   IOCCF3              __at(0x1CCB);	// @ (0x399 * 8 + 3)
#define                                 IOCCF3_bit          _BIT_ACCESS(IOCCF,3)
// IOCCF<IOCCF4>
extern volatile __bit                   IOCCF4              __at(0x1CCC);	// @ (0x399 * 8 + 4)
#define                                 IOCCF4_bit          _BIT_ACCESS(IOCCF,4)
// IOCCF<IOCCF5>
extern volatile __bit                   IOCCF5              __at(0x1CCD);	// @ (0x399 * 8 + 5)
#define                                 IOCCF5_bit          _BIT_ACCESS(IOCCF,5)
// IOCCF<IOCCF6>
extern volatile __bit                   IOCCF6              __at(0x1CCE);	// @ (0x399 * 8 + 6)
#define                                 IOCCF6_bit          _BIT_ACCESS(IOCCF,6)
// IOCCF<IOCCF7>
extern volatile __bit                   IOCCF7              __at(0x1CCF);	// @ (0x399 * 8 + 7)
#define                                 IOCCF7_bit          _BIT_ACCESS(IOCCF,7)
// IOCCN<IOCCN0>
extern volatile __bit                   IOCCN0              __at(0x1CC0);	// @ (0x398 * 8 + 0)
#define                                 IOCCN0_bit          _BIT_ACCESS(IOCCN,0)
// IOCCN<IOCCN1>
extern volatile __bit                   IOCCN1              __at(0x1CC1);	// @ (0x398 * 8 + 1)
#define                                 IOCCN1_bit          _BIT_ACCESS(IOCCN,1)
// IOCCN<IOCCN2>
extern volatile __bit                   IOCCN2              __at(0x1CC2);	// @ (0x398 * 8 + 2)
#define                                 IOCCN2_bit          _BIT_ACCESS(IOCCN,2)
// IOCCN<IOCCN3>
extern volatile __bit                   IOCCN3              __at(0x1CC3);	// @ (0x398 * 8 + 3)
#define                                 IOCCN3_bit          _BIT_ACCESS(IOCCN,3)
// IOCCN<IOCCN4>
extern volatile __bit                   IOCCN4              __at(0x1CC4);	// @ (0x398 * 8 + 4)
#define                                 IOCCN4_bit          _BIT_ACCESS(IOCCN,4)
// IOCCN<IOCCN5>
extern volatile __bit                   IOCCN5              __at(0x1CC5);	// @ (0x398 * 8 + 5)
#define                                 IOCCN5_bit          _BIT_ACCESS(IOCCN,5)
// IOCCN<IOCCN6>
extern volatile __bit                   IOCCN6              __at(0x1CC6);	// @ (0x398 * 8 + 6)
#define                                 IOCCN6_bit          _BIT_ACCESS(IOCCN,6)
// IOCCN<IOCCN7>
extern volatile __bit                   IOCCN7              __at(0x1CC7);	// @ (0x398 * 8 + 7)
#define                                 IOCCN7_bit          _BIT_ACCESS(IOCCN,7)
// IOCCP<IOCCP0>
extern volatile __bit                   IOCCP0              __at(0x1CB8);	// @ (0x397 * 8 + 0)
#define                                 IOCCP0_bit          _BIT_ACCESS(IOCCP,0)
// IOCCP<IOCCP1>
extern volatile __bit                   IOCCP1              __at(0x1CB9);	// @ (0x397 * 8 + 1)
#define                                 IOCCP1_bit          _BIT_ACCESS(IOCCP,1)
// IOCCP<IOCCP2>
extern volatile __bit                   IOCCP2              __at(0x1CBA);	// @ (0x397 * 8 + 2)
#define                                 IOCCP2_bit          _BIT_ACCESS(IOCCP,2)
// IOCCP<IOCCP3>
extern volatile __bit                   IOCCP3              __at(0x1CBB);	// @ (0x397 * 8 + 3)
#define                                 IOCCP3_bit          _BIT_ACCESS(IOCCP,3)
// IOCCP<IOCCP4>
extern volatile __bit                   IOCCP4              __at(0x1CBC);	// @ (0x397 * 8 + 4)
#define                                 IOCCP4_bit          _BIT_ACCESS(IOCCP,4)
// IOCCP<IOCCP5>
extern volatile __bit                   IOCCP5              __at(0x1CBD);	// @ (0x397 * 8 + 5)
#define                                 IOCCP5_bit          _BIT_ACCESS(IOCCP,5)
// IOCCP<IOCCP6>
extern volatile __bit                   IOCCP6              __at(0x1CBE);	// @ (0x397 * 8 + 6)
#define                                 IOCCP6_bit          _BIT_ACCESS(IOCCP,6)
// IOCCP<IOCCP7>
extern volatile __bit                   IOCCP7              __at(0x1CBF);	// @ (0x397 * 8 + 7)
#define                                 IOCCP7_bit          _BIT_ACCESS(IOCCP,7)
// IOCEF<IOCEF3>
extern volatile __bit                   IOCEF3              __at(0x1CFB);	// @ (0x39F * 8 + 3)
#define                                 IOCEF3_bit          _BIT_ACCESS(IOCEF,3)
// IOCEN<IOCEN3>
extern volatile __bit                   IOCEN3              __at(0x1CF3);	// @ (0x39E * 8 + 3)
#define                                 IOCEN3_bit          _BIT_ACCESS(IOCEN,3)
// IOCEP<IOCEP3>
extern volatile __bit                   IOCEP3              __at(0x1CEB);	// @ (0x39D * 8 + 3)
#define                                 IOCEP3_bit          _BIT_ACCESS(IOCEP,3)
// INTCON<IOCIE>
extern volatile __bit                   IOCIE               __at(0x5B);	// @ (0xB * 8 + 3)
#define                                 IOCIE_bit           _BIT_ACCESS(INTCON,3)
// INTCON<IOCIF>
extern volatile __bit                   IOCIF               __at(0x58);	// @ (0xB * 8 + 0)
#define                                 IOCIF_bit           _BIT_ACCESS(INTCON,0)
// OSCCON<IRCF0>
extern volatile __bit                   IRCF0               __at(0x4DB);	// @ (0x9B * 8 + 3)
#define                                 IRCF0_bit           _BIT_ACCESS(OSCCON,3)
// OSCCON<IRCF1>
extern volatile __bit                   IRCF1               __at(0x4DC);	// @ (0x9B * 8 + 4)
#define                                 IRCF1_bit           _BIT_ACCESS(OSCCON,4)
// OSCCON<IRCF2>
extern volatile __bit                   IRCF2               __at(0x4DD);	// @ (0x9B * 8 + 5)
#define                                 IRCF2_bit           _BIT_ACCESS(OSCCON,5)
// OSCCON<IRCF3>
extern volatile __bit                   IRCF3               __at(0x4DE);	// @ (0x9B * 8 + 6)
#define                                 IRCF3_bit           _BIT_ACCESS(OSCCON,6)
// LATA<LATA0>
extern volatile __bit                   LATA0               __at(0x860);	// @ (0x10C * 8 + 0)
#define                                 LATA0_bit           _BIT_ACCESS(LATA,0)
// LATA<LATA1>
extern volatile __bit                   LATA1               __at(0x861);	// @ (0x10C * 8 + 1)
#define                                 LATA1_bit           _BIT_ACCESS(LATA,1)
// LATA<LATA2>
extern volatile __bit                   LATA2               __at(0x862);	// @ (0x10C * 8 + 2)
#define                                 LATA2_bit           _BIT_ACCESS(LATA,2)
// LATA<LATA3>
extern volatile __bit                   LATA3               __at(0x863);	// @ (0x10C * 8 + 3)
#define                                 LATA3_bit           _BIT_ACCESS(LATA,3)
// LATA<LATA4>
extern volatile __bit                   LATA4               __at(0x864);	// @ (0x10C * 8 + 4)
#define                                 LATA4_bit           _BIT_ACCESS(LATA,4)
// LATA<LATA5>
extern volatile __bit                   LATA5               __at(0x865);	// @ (0x10C * 8 + 5)
#define                                 LATA5_bit           _BIT_ACCESS(LATA,5)
// LATA<LATA6>
extern volatile __bit                   LATA6               __at(0x866);	// @ (0x10C * 8 + 6)
#define                                 LATA6_bit           _BIT_ACCESS(LATA,6)
// LATA<LATA7>
extern volatile __bit                   LATA7               __at(0x867);	// @ (0x10C * 8 + 7)
#define                                 LATA7_bit           _BIT_ACCESS(LATA,7)
// LATB<LATB0>
extern volatile __bit                   LATB0               __at(0x868);	// @ (0x10D * 8 + 0)
#define                                 LATB0_bit           _BIT_ACCESS(LATB,0)
// LATB<LATB1>
extern volatile __bit                   LATB1               __at(0x869);	// @ (0x10D * 8 + 1)
#define                                 LATB1_bit           _BIT_ACCESS(LATB,1)
// LATB<LATB2>
extern volatile __bit                   LATB2               __at(0x86A);	// @ (0x10D * 8 + 2)
#define                                 LATB2_bit           _BIT_ACCESS(LATB,2)
// LATB<LATB3>
extern volatile __bit                   LATB3               __at(0x86B);	// @ (0x10D * 8 + 3)
#define                                 LATB3_bit           _BIT_ACCESS(LATB,3)
// LATB<LATB4>
extern volatile __bit                   LATB4               __at(0x86C);	// @ (0x10D * 8 + 4)
#define                                 LATB4_bit           _BIT_ACCESS(LATB,4)
// LATB<LATB5>
extern volatile __bit                   LATB5               __at(0x86D);	// @ (0x10D * 8 + 5)
#define                                 LATB5_bit           _BIT_ACCESS(LATB,5)
// LATB<LATB6>
extern volatile __bit                   LATB6               __at(0x86E);	// @ (0x10D * 8 + 6)
#define                                 LATB6_bit           _BIT_ACCESS(LATB,6)
// LATB<LATB7>
extern volatile __bit                   LATB7               __at(0x86F);	// @ (0x10D * 8 + 7)
#define                                 LATB7_bit           _BIT_ACCESS(LATB,7)
// LATC<LATC0>
extern volatile __bit                   LATC0               __at(0x870);	// @ (0x10E * 8 + 0)
#define                                 LATC0_bit           _BIT_ACCESS(LATC,0)
// LATC<LATC1>
extern volatile __bit                   LATC1               __at(0x871);	// @ (0x10E * 8 + 1)
#define                                 LATC1_bit           _BIT_ACCESS(LATC,1)
// LATC<LATC2>
extern volatile __bit                   LATC2               __at(0x872);	// @ (0x10E * 8 + 2)
#define                                 LATC2_bit           _BIT_ACCESS(LATC,2)
// LATC<LATC3>
extern volatile __bit                   LATC3               __at(0x873);	// @ (0x10E * 8 + 3)
#define                                 LATC3_bit           _BIT_ACCESS(LATC,3)
// LATC<LATC4>
extern volatile __bit                   LATC4               __at(0x874);	// @ (0x10E * 8 + 4)
#define                                 LATC4_bit           _BIT_ACCESS(LATC,4)
// LATC<LATC5>
extern volatile __bit                   LATC5               __at(0x875);	// @ (0x10E * 8 + 5)
#define                                 LATC5_bit           _BIT_ACCESS(LATC,5)
// LATC<LATC6>
extern volatile __bit                   LATC6               __at(0x876);	// @ (0x10E * 8 + 6)
#define                                 LATC6_bit           _BIT_ACCESS(LATC,6)
// LATC<LATC7>
extern volatile __bit                   LATC7               __at(0x877);	// @ (0x10E * 8 + 7)
#define                                 LATC7_bit           _BIT_ACCESS(LATC,7)
// LATD<LATD0>
extern volatile __bit                   LATD0               __at(0x878);	// @ (0x10F * 8 + 0)
#define                                 LATD0_bit           _BIT_ACCESS(LATD,0)
// LATD<LATD1>
extern volatile __bit                   LATD1               __at(0x879);	// @ (0x10F * 8 + 1)
#define                                 LATD1_bit           _BIT_ACCESS(LATD,1)
// LATD<LATD2>
extern volatile __bit                   LATD2               __at(0x87A);	// @ (0x10F * 8 + 2)
#define                                 LATD2_bit           _BIT_ACCESS(LATD,2)
// LATD<LATD3>
extern volatile __bit                   LATD3               __at(0x87B);	// @ (0x10F * 8 + 3)
#define                                 LATD3_bit           _BIT_ACCESS(LATD,3)
// LATD<LATD4>
extern volatile __bit                   LATD4               __at(0x87C);	// @ (0x10F * 8 + 4)
#define                                 LATD4_bit           _BIT_ACCESS(LATD,4)
// LATD<LATD5>
extern volatile __bit                   LATD5               __at(0x87D);	// @ (0x10F * 8 + 5)
#define                                 LATD5_bit           _BIT_ACCESS(LATD,5)
// LATD<LATD6>
extern volatile __bit                   LATD6               __at(0x87E);	// @ (0x10F * 8 + 6)
#define                                 LATD6_bit           _BIT_ACCESS(LATD,6)
// LATD<LATD7>
extern volatile __bit                   LATD7               __at(0x87F);	// @ (0x10F * 8 + 7)
#define                                 LATD7_bit           _BIT_ACCESS(LATD,7)
// LATE<LATE0>
extern volatile __bit                   LATE0               __at(0x880);	// @ (0x110 * 8 + 0)
#define                                 LATE0_bit           _BIT_ACCESS(LATE,0)
// LATE<LATE1>
extern volatile __bit                   LATE1               __at(0x881);	// @ (0x110 * 8 + 1)
#define                                 LATE1_bit           _BIT_ACCESS(LATE,1)
// LATE<LATE2>
extern volatile __bit                   LATE2               __at(0x882);	// @ (0x110 * 8 + 2)
#define                                 LATE2_bit           _BIT_ACCESS(LATE,2)
// CLC1SEL0<LC1D1S0>
extern volatile __bit                   LC1D1S0             __at(0x7890);	// @ (0xF12 * 8 + 0)
#define                                 LC1D1S0_bit         _BIT_ACCESS(CLC1SEL0,0)
// CLC1SEL0<LC1D1S1>
extern volatile __bit                   LC1D1S1             __at(0x7891);	// @ (0xF12 * 8 + 1)
#define                                 LC1D1S1_bit         _BIT_ACCESS(CLC1SEL0,1)
// CLC1SEL0<LC1D1S2>
extern volatile __bit                   LC1D1S2             __at(0x7892);	// @ (0xF12 * 8 + 2)
#define                                 LC1D1S2_bit         _BIT_ACCESS(CLC1SEL0,2)
// CLC1SEL0<LC1D1S3>
extern volatile __bit                   LC1D1S3             __at(0x7893);	// @ (0xF12 * 8 + 3)
#define                                 LC1D1S3_bit         _BIT_ACCESS(CLC1SEL0,3)
// CLC1SEL0<LC1D1S4>
extern volatile __bit                   LC1D1S4             __at(0x7894);	// @ (0xF12 * 8 + 4)
#define                                 LC1D1S4_bit         _BIT_ACCESS(CLC1SEL0,4)
// CLC1SEL0<LC1D1S5>
extern volatile __bit                   LC1D1S5             __at(0x7895);	// @ (0xF12 * 8 + 5)
#define                                 LC1D1S5_bit         _BIT_ACCESS(CLC1SEL0,5)
// CLC1SEL1<LC1D2S0>
extern volatile __bit                   LC1D2S0             __at(0x7898);	// @ (0xF13 * 8 + 0)
#define                                 LC1D2S0_bit         _BIT_ACCESS(CLC1SEL1,0)
// CLC1SEL1<LC1D2S1>
extern volatile __bit                   LC1D2S1             __at(0x7899);	// @ (0xF13 * 8 + 1)
#define                                 LC1D2S1_bit         _BIT_ACCESS(CLC1SEL1,1)
// CLC1SEL1<LC1D2S2>
extern volatile __bit                   LC1D2S2             __at(0x789A);	// @ (0xF13 * 8 + 2)
#define                                 LC1D2S2_bit         _BIT_ACCESS(CLC1SEL1,2)
// CLC1SEL1<LC1D2S3>
extern volatile __bit                   LC1D2S3             __at(0x789B);	// @ (0xF13 * 8 + 3)
#define                                 LC1D2S3_bit         _BIT_ACCESS(CLC1SEL1,3)
// CLC1SEL1<LC1D2S4>
extern volatile __bit                   LC1D2S4             __at(0x789C);	// @ (0xF13 * 8 + 4)
#define                                 LC1D2S4_bit         _BIT_ACCESS(CLC1SEL1,4)
// CLC1SEL1<LC1D2S5>
extern volatile __bit                   LC1D2S5             __at(0x789D);	// @ (0xF13 * 8 + 5)
#define                                 LC1D2S5_bit         _BIT_ACCESS(CLC1SEL1,5)
// CLC1SEL2<LC1D3S0>
extern volatile __bit                   LC1D3S0             __at(0x78A0);	// @ (0xF14 * 8 + 0)
#define                                 LC1D3S0_bit         _BIT_ACCESS(CLC1SEL2,0)
// CLC1SEL2<LC1D3S1>
extern volatile __bit                   LC1D3S1             __at(0x78A1);	// @ (0xF14 * 8 + 1)
#define                                 LC1D3S1_bit         _BIT_ACCESS(CLC1SEL2,1)
// CLC1SEL2<LC1D3S2>
extern volatile __bit                   LC1D3S2             __at(0x78A2);	// @ (0xF14 * 8 + 2)
#define                                 LC1D3S2_bit         _BIT_ACCESS(CLC1SEL2,2)
// CLC1SEL2<LC1D3S3>
extern volatile __bit                   LC1D3S3             __at(0x78A3);	// @ (0xF14 * 8 + 3)
#define                                 LC1D3S3_bit         _BIT_ACCESS(CLC1SEL2,3)
// CLC1SEL2<LC1D3S4>
extern volatile __bit                   LC1D3S4             __at(0x78A4);	// @ (0xF14 * 8 + 4)
#define                                 LC1D3S4_bit         _BIT_ACCESS(CLC1SEL2,4)
// CLC1SEL2<LC1D3S5>
extern volatile __bit                   LC1D3S5             __at(0x78A5);	// @ (0xF14 * 8 + 5)
#define                                 LC1D3S5_bit         _BIT_ACCESS(CLC1SEL2,5)
// CLC1SEL3<LC1D4S0>
extern volatile __bit                   LC1D4S0             __at(0x78A8);	// @ (0xF15 * 8 + 0)
#define                                 LC1D4S0_bit         _BIT_ACCESS(CLC1SEL3,0)
// CLC1SEL3<LC1D4S1>
extern volatile __bit                   LC1D4S1             __at(0x78A9);	// @ (0xF15 * 8 + 1)
#define                                 LC1D4S1_bit         _BIT_ACCESS(CLC1SEL3,1)
// CLC1SEL3<LC1D4S2>
extern volatile __bit                   LC1D4S2             __at(0x78AA);	// @ (0xF15 * 8 + 2)
#define                                 LC1D4S2_bit         _BIT_ACCESS(CLC1SEL3,2)
// CLC1SEL3<LC1D4S3>
extern volatile __bit                   LC1D4S3             __at(0x78AB);	// @ (0xF15 * 8 + 3)
#define                                 LC1D4S3_bit         _BIT_ACCESS(CLC1SEL3,3)
// CLC1SEL3<LC1D4S4>
extern volatile __bit                   LC1D4S4             __at(0x78AC);	// @ (0xF15 * 8 + 4)
#define                                 LC1D4S4_bit         _BIT_ACCESS(CLC1SEL3,4)
// CLC1SEL3<LC1D4S5>
extern volatile __bit                   LC1D4S5             __at(0x78AD);	// @ (0xF15 * 8 + 5)
#define                                 LC1D4S5_bit         _BIT_ACCESS(CLC1SEL3,5)
// CLC1CON<LC1EN>
extern volatile __bit                   LC1EN               __at(0x7887);	// @ (0xF10 * 8 + 7)
#define                                 LC1EN_bit           _BIT_ACCESS(CLC1CON,7)
// CLC1GLS0<LC1G1D1N>
extern volatile __bit                   LC1G1D1N            __at(0x78B0);	// @ (0xF16 * 8 + 0)
#define                                 LC1G1D1N_bit        _BIT_ACCESS(CLC1GLS0,0)
// CLC1GLS0<LC1G1D1T>
extern volatile __bit                   LC1G1D1T            __at(0x78B1);	// @ (0xF16 * 8 + 1)
#define                                 LC1G1D1T_bit        _BIT_ACCESS(CLC1GLS0,1)
// CLC1GLS0<LC1G1D2N>
extern volatile __bit                   LC1G1D2N            __at(0x78B2);	// @ (0xF16 * 8 + 2)
#define                                 LC1G1D2N_bit        _BIT_ACCESS(CLC1GLS0,2)
// CLC1GLS0<LC1G1D2T>
extern volatile __bit                   LC1G1D2T            __at(0x78B3);	// @ (0xF16 * 8 + 3)
#define                                 LC1G1D2T_bit        _BIT_ACCESS(CLC1GLS0,3)
// CLC1GLS0<LC1G1D3N>
extern volatile __bit                   LC1G1D3N            __at(0x78B4);	// @ (0xF16 * 8 + 4)
#define                                 LC1G1D3N_bit        _BIT_ACCESS(CLC1GLS0,4)
// CLC1GLS0<LC1G1D3T>
extern volatile __bit                   LC1G1D3T            __at(0x78B5);	// @ (0xF16 * 8 + 5)
#define                                 LC1G1D3T_bit        _BIT_ACCESS(CLC1GLS0,5)
// CLC1GLS0<LC1G1D4N>
extern volatile __bit                   LC1G1D4N            __at(0x78B6);	// @ (0xF16 * 8 + 6)
#define                                 LC1G1D4N_bit        _BIT_ACCESS(CLC1GLS0,6)
// CLC1GLS0<LC1G1D4T>
extern volatile __bit                   LC1G1D4T            __at(0x78B7);	// @ (0xF16 * 8 + 7)
#define                                 LC1G1D4T_bit        _BIT_ACCESS(CLC1GLS0,7)
// CLC1POL<LC1G1POL>
extern volatile __bit                   LC1G1POL            __at(0x7888);	// @ (0xF11 * 8 + 0)
#define                                 LC1G1POL_bit        _BIT_ACCESS(CLC1POL,0)
// CLC1GLS1<LC1G2D1N>
extern volatile __bit                   LC1G2D1N            __at(0x78B8);	// @ (0xF17 * 8 + 0)
#define                                 LC1G2D1N_bit        _BIT_ACCESS(CLC1GLS1,0)
// CLC1GLS1<LC1G2D1T>
extern volatile __bit                   LC1G2D1T            __at(0x78B9);	// @ (0xF17 * 8 + 1)
#define                                 LC1G2D1T_bit        _BIT_ACCESS(CLC1GLS1,1)
// CLC1GLS1<LC1G2D2N>
extern volatile __bit                   LC1G2D2N            __at(0x78BA);	// @ (0xF17 * 8 + 2)
#define                                 LC1G2D2N_bit        _BIT_ACCESS(CLC1GLS1,2)
// CLC1GLS1<LC1G2D2T>
extern volatile __bit                   LC1G2D2T            __at(0x78BB);	// @ (0xF17 * 8 + 3)
#define                                 LC1G2D2T_bit        _BIT_ACCESS(CLC1GLS1,3)
// CLC1GLS1<LC1G2D3N>
extern volatile __bit                   LC1G2D3N            __at(0x78BC);	// @ (0xF17 * 8 + 4)
#define                                 LC1G2D3N_bit        _BIT_ACCESS(CLC1GLS1,4)
// CLC1GLS1<LC1G2D3T>
extern volatile __bit                   LC1G2D3T            __at(0x78BD);	// @ (0xF17 * 8 + 5)
#define                                 LC1G2D3T_bit        _BIT_ACCESS(CLC1GLS1,5)
// CLC1GLS1<LC1G2D4N>
extern volatile __bit                   LC1G2D4N            __at(0x78BE);	// @ (0xF17 * 8 + 6)
#define                                 LC1G2D4N_bit        _BIT_ACCESS(CLC1GLS1,6)
// CLC1GLS1<LC1G2D4T>
extern volatile __bit                   LC1G2D4T            __at(0x78BF);	// @ (0xF17 * 8 + 7)
#define                                 LC1G2D4T_bit        _BIT_ACCESS(CLC1GLS1,7)
// CLC1POL<LC1G2POL>
extern volatile __bit                   LC1G2POL            __at(0x7889);	// @ (0xF11 * 8 + 1)
#define                                 LC1G2POL_bit        _BIT_ACCESS(CLC1POL,1)
// CLC1GLS2<LC1G3D1N>
extern volatile __bit                   LC1G3D1N            __at(0x78C0);	// @ (0xF18 * 8 + 0)
#define                                 LC1G3D1N_bit        _BIT_ACCESS(CLC1GLS2,0)
// CLC1GLS2<LC1G3D1T>
extern volatile __bit                   LC1G3D1T            __at(0x78C1);	// @ (0xF18 * 8 + 1)
#define                                 LC1G3D1T_bit        _BIT_ACCESS(CLC1GLS2,1)
// CLC1GLS2<LC1G3D2N>
extern volatile __bit                   LC1G3D2N            __at(0x78C2);	// @ (0xF18 * 8 + 2)
#define                                 LC1G3D2N_bit        _BIT_ACCESS(CLC1GLS2,2)
// CLC1GLS2<LC1G3D2T>
extern volatile __bit                   LC1G3D2T            __at(0x78C3);	// @ (0xF18 * 8 + 3)
#define                                 LC1G3D2T_bit        _BIT_ACCESS(CLC1GLS2,3)
// CLC1GLS2<LC1G3D3N>
extern volatile __bit                   LC1G3D3N            __at(0x78C4);	// @ (0xF18 * 8 + 4)
#define                                 LC1G3D3N_bit        _BIT_ACCESS(CLC1GLS2,4)
// CLC1GLS2<LC1G3D3T>
extern volatile __bit                   LC1G3D3T            __at(0x78C5);	// @ (0xF18 * 8 + 5)
#define                                 LC1G3D3T_bit        _BIT_ACCESS(CLC1GLS2,5)
// CLC1GLS2<LC1G3D4N>
extern volatile __bit                   LC1G3D4N            __at(0x78C6);	// @ (0xF18 * 8 + 6)
#define                                 LC1G3D4N_bit        _BIT_ACCESS(CLC1GLS2,6)
// CLC1GLS2<LC1G3D4T>
extern volatile __bit                   LC1G3D4T            __at(0x78C7);	// @ (0xF18 * 8 + 7)
#define                                 LC1G3D4T_bit        _BIT_ACCESS(CLC1GLS2,7)
// CLC1POL<LC1G3POL>
extern volatile __bit                   LC1G3POL            __at(0x788A);	// @ (0xF11 * 8 + 2)
#define                                 LC1G3POL_bit        _BIT_ACCESS(CLC1POL,2)
// CLC1GLS3<LC1G4D1N>
extern volatile __bit                   LC1G4D1N            __at(0x78C8);	// @ (0xF19 * 8 + 0)
#define                                 LC1G4D1N_bit        _BIT_ACCESS(CLC1GLS3,0)
// CLC1GLS3<LC1G4D1T>
extern volatile __bit                   LC1G4D1T            __at(0x78C9);	// @ (0xF19 * 8 + 1)
#define                                 LC1G4D1T_bit        _BIT_ACCESS(CLC1GLS3,1)
// CLC1GLS3<LC1G4D2N>
extern volatile __bit                   LC1G4D2N            __at(0x78CA);	// @ (0xF19 * 8 + 2)
#define                                 LC1G4D2N_bit        _BIT_ACCESS(CLC1GLS3,2)
// CLC1GLS3<LC1G4D2T>
extern volatile __bit                   LC1G4D2T            __at(0x78CB);	// @ (0xF19 * 8 + 3)
#define                                 LC1G4D2T_bit        _BIT_ACCESS(CLC1GLS3,3)
// CLC1GLS3<LC1G4D3N>
extern volatile __bit                   LC1G4D3N            __at(0x78CC);	// @ (0xF19 * 8 + 4)
#define                                 LC1G4D3N_bit        _BIT_ACCESS(CLC1GLS3,4)
// CLC1GLS3<LC1G4D3T>
extern volatile __bit                   LC1G4D3T            __at(0x78CD);	// @ (0xF19 * 8 + 5)
#define                                 LC1G4D3T_bit        _BIT_ACCESS(CLC1GLS3,5)
// CLC1GLS3<LC1G4D4N>
extern volatile __bit                   LC1G4D4N            __at(0x78CE);	// @ (0xF19 * 8 + 6)
#define                                 LC1G4D4N_bit        _BIT_ACCESS(CLC1GLS3,6)
// CLC1GLS3<LC1G4D4T>
extern volatile __bit                   LC1G4D4T            __at(0x78CF);	// @ (0xF19 * 8 + 7)
#define                                 LC1G4D4T_bit        _BIT_ACCESS(CLC1GLS3,7)
// CLC1POL<LC1G4POL>
extern volatile __bit                   LC1G4POL            __at(0x788B);	// @ (0xF11 * 8 + 3)
#define                                 LC1G4POL_bit        _BIT_ACCESS(CLC1POL,3)
// CLC1CON<LC1INTN>
extern volatile __bit                   LC1INTN             __at(0x7883);	// @ (0xF10 * 8 + 3)
#define                                 LC1INTN_bit         _BIT_ACCESS(CLC1CON,3)
// CLC1CON<LC1INTP>
extern volatile __bit                   LC1INTP             __at(0x7884);	// @ (0xF10 * 8 + 4)
#define                                 LC1INTP_bit         _BIT_ACCESS(CLC1CON,4)
// CLC1CON<LC1MODE0>
extern volatile __bit                   LC1MODE0            __at(0x7880);	// @ (0xF10 * 8 + 0)
#define                                 LC1MODE0_bit        _BIT_ACCESS(CLC1CON,0)
// CLC1CON<LC1MODE1>
extern volatile __bit                   LC1MODE1            __at(0x7881);	// @ (0xF10 * 8 + 1)
#define                                 LC1MODE1_bit        _BIT_ACCESS(CLC1CON,1)
// CLC1CON<LC1MODE2>
extern volatile __bit                   LC1MODE2            __at(0x7882);	// @ (0xF10 * 8 + 2)
#define                                 LC1MODE2_bit        _BIT_ACCESS(CLC1CON,2)
// CLC1CON<LC1OUT>
extern volatile __bit                   LC1OUT              __at(0x7885);	// @ (0xF10 * 8 + 5)
#define                                 LC1OUT_bit          _BIT_ACCESS(CLC1CON,5)
// CLC1POL<LC1POL>
extern volatile __bit                   LC1POL              __at(0x788F);	// @ (0xF11 * 8 + 7)
#define                                 LC1POL_bit          _BIT_ACCESS(CLC1POL,7)
// CLC2SEL0<LC2D1S0>
extern volatile __bit                   LC2D1S0             __at(0x78E0);	// @ (0xF1C * 8 + 0)
#define                                 LC2D1S0_bit         _BIT_ACCESS(CLC2SEL0,0)
// CLC2SEL0<LC2D1S1>
extern volatile __bit                   LC2D1S1             __at(0x78E1);	// @ (0xF1C * 8 + 1)
#define                                 LC2D1S1_bit         _BIT_ACCESS(CLC2SEL0,1)
// CLC2SEL0<LC2D1S2>
extern volatile __bit                   LC2D1S2             __at(0x78E2);	// @ (0xF1C * 8 + 2)
#define                                 LC2D1S2_bit         _BIT_ACCESS(CLC2SEL0,2)
// CLC2SEL0<LC2D1S3>
extern volatile __bit                   LC2D1S3             __at(0x78E3);	// @ (0xF1C * 8 + 3)
#define                                 LC2D1S3_bit         _BIT_ACCESS(CLC2SEL0,3)
// CLC2SEL0<LC2D1S4>
extern volatile __bit                   LC2D1S4             __at(0x78E4);	// @ (0xF1C * 8 + 4)
#define                                 LC2D1S4_bit         _BIT_ACCESS(CLC2SEL0,4)
// CLC2SEL0<LC2D1S5>
extern volatile __bit                   LC2D1S5             __at(0x78E5);	// @ (0xF1C * 8 + 5)
#define                                 LC2D1S5_bit         _BIT_ACCESS(CLC2SEL0,5)
// CLC2SEL1<LC2D2S0>
extern volatile __bit                   LC2D2S0             __at(0x78E8);	// @ (0xF1D * 8 + 0)
#define                                 LC2D2S0_bit         _BIT_ACCESS(CLC2SEL1,0)
// CLC2SEL1<LC2D2S1>
extern volatile __bit                   LC2D2S1             __at(0x78E9);	// @ (0xF1D * 8 + 1)
#define                                 LC2D2S1_bit         _BIT_ACCESS(CLC2SEL1,1)
// CLC2SEL1<LC2D2S2>
extern volatile __bit                   LC2D2S2             __at(0x78EA);	// @ (0xF1D * 8 + 2)
#define                                 LC2D2S2_bit         _BIT_ACCESS(CLC2SEL1,2)
// CLC2SEL1<LC2D2S3>
extern volatile __bit                   LC2D2S3             __at(0x78EB);	// @ (0xF1D * 8 + 3)
#define                                 LC2D2S3_bit         _BIT_ACCESS(CLC2SEL1,3)
// CLC2SEL1<LC2D2S4>
extern volatile __bit                   LC2D2S4             __at(0x78EC);	// @ (0xF1D * 8 + 4)
#define                                 LC2D2S4_bit         _BIT_ACCESS(CLC2SEL1,4)
// CLC2SEL1<LC2D2S5>
extern volatile __bit                   LC2D2S5             __at(0x78ED);	// @ (0xF1D * 8 + 5)
#define                                 LC2D2S5_bit         _BIT_ACCESS(CLC2SEL1,5)
// CLC2SEL2<LC2D3S0>
extern volatile __bit                   LC2D3S0             __at(0x78F0);	// @ (0xF1E * 8 + 0)
#define                                 LC2D3S0_bit         _BIT_ACCESS(CLC2SEL2,0)
// CLC2SEL2<LC2D3S1>
extern volatile __bit                   LC2D3S1             __at(0x78F1);	// @ (0xF1E * 8 + 1)
#define                                 LC2D3S1_bit         _BIT_ACCESS(CLC2SEL2,1)
// CLC2SEL2<LC2D3S2>
extern volatile __bit                   LC2D3S2             __at(0x78F2);	// @ (0xF1E * 8 + 2)
#define                                 LC2D3S2_bit         _BIT_ACCESS(CLC2SEL2,2)
// CLC2SEL2<LC2D3S3>
extern volatile __bit                   LC2D3S3             __at(0x78F3);	// @ (0xF1E * 8 + 3)
#define                                 LC2D3S3_bit         _BIT_ACCESS(CLC2SEL2,3)
// CLC2SEL2<LC2D3S4>
extern volatile __bit                   LC2D3S4             __at(0x78F4);	// @ (0xF1E * 8 + 4)
#define                                 LC2D3S4_bit         _BIT_ACCESS(CLC2SEL2,4)
// CLC2SEL2<LC2D3S5>
extern volatile __bit                   LC2D3S5             __at(0x78F5);	// @ (0xF1E * 8 + 5)
#define                                 LC2D3S5_bit         _BIT_ACCESS(CLC2SEL2,5)
// CLC2SEL3<LC2D4S0>
extern volatile __bit                   LC2D4S0             __at(0x78F8);	// @ (0xF1F * 8 + 0)
#define                                 LC2D4S0_bit         _BIT_ACCESS(CLC2SEL3,0)
// CLC2SEL3<LC2D4S1>
extern volatile __bit                   LC2D4S1             __at(0x78F9);	// @ (0xF1F * 8 + 1)
#define                                 LC2D4S1_bit         _BIT_ACCESS(CLC2SEL3,1)
// CLC2SEL3<LC2D4S2>
extern volatile __bit                   LC2D4S2             __at(0x78FA);	// @ (0xF1F * 8 + 2)
#define                                 LC2D4S2_bit         _BIT_ACCESS(CLC2SEL3,2)
// CLC2SEL3<LC2D4S3>
extern volatile __bit                   LC2D4S3             __at(0x78FB);	// @ (0xF1F * 8 + 3)
#define                                 LC2D4S3_bit         _BIT_ACCESS(CLC2SEL3,3)
// CLC2SEL3<LC2D4S4>
extern volatile __bit                   LC2D4S4             __at(0x78FC);	// @ (0xF1F * 8 + 4)
#define                                 LC2D4S4_bit         _BIT_ACCESS(CLC2SEL3,4)
// CLC2SEL3<LC2D4S5>
extern volatile __bit                   LC2D4S5             __at(0x78FD);	// @ (0xF1F * 8 + 5)
#define                                 LC2D4S5_bit         _BIT_ACCESS(CLC2SEL3,5)
// CLC2CON<LC2EN>
extern volatile __bit                   LC2EN               __at(0x78D7);	// @ (0xF1A * 8 + 7)
#define                                 LC2EN_bit           _BIT_ACCESS(CLC2CON,7)
// CLC2GLS0<LC2G1D1N>
extern volatile __bit                   LC2G1D1N            __at(0x7900);	// @ (0xF20 * 8 + 0)
#define                                 LC2G1D1N_bit        _BIT_ACCESS(CLC2GLS0,0)
// CLC2GLS0<LC2G1D1T>
extern volatile __bit                   LC2G1D1T            __at(0x7901);	// @ (0xF20 * 8 + 1)
#define                                 LC2G1D1T_bit        _BIT_ACCESS(CLC2GLS0,1)
// CLC2GLS0<LC2G1D2N>
extern volatile __bit                   LC2G1D2N            __at(0x7902);	// @ (0xF20 * 8 + 2)
#define                                 LC2G1D2N_bit        _BIT_ACCESS(CLC2GLS0,2)
// CLC2GLS0<LC2G1D2T>
extern volatile __bit                   LC2G1D2T            __at(0x7903);	// @ (0xF20 * 8 + 3)
#define                                 LC2G1D2T_bit        _BIT_ACCESS(CLC2GLS0,3)
// CLC2GLS0<LC2G1D3N>
extern volatile __bit                   LC2G1D3N            __at(0x7904);	// @ (0xF20 * 8 + 4)
#define                                 LC2G1D3N_bit        _BIT_ACCESS(CLC2GLS0,4)
// CLC2GLS0<LC2G1D3T>
extern volatile __bit                   LC2G1D3T            __at(0x7905);	// @ (0xF20 * 8 + 5)
#define                                 LC2G1D3T_bit        _BIT_ACCESS(CLC2GLS0,5)
// CLC2GLS0<LC2G1D4N>
extern volatile __bit                   LC2G1D4N            __at(0x7906);	// @ (0xF20 * 8 + 6)
#define                                 LC2G1D4N_bit        _BIT_ACCESS(CLC2GLS0,6)
// CLC2GLS0<LC2G1D4T>
extern volatile __bit                   LC2G1D4T            __at(0x7907);	// @ (0xF20 * 8 + 7)
#define                                 LC2G1D4T_bit        _BIT_ACCESS(CLC2GLS0,7)
// CLC2POL<LC2G1POL>
extern volatile __bit                   LC2G1POL            __at(0x78D8);	// @ (0xF1B * 8 + 0)
#define                                 LC2G1POL_bit        _BIT_ACCESS(CLC2POL,0)
// CLC2GLS1<LC2G2D1N>
extern volatile __bit                   LC2G2D1N            __at(0x7908);	// @ (0xF21 * 8 + 0)
#define                                 LC2G2D1N_bit        _BIT_ACCESS(CLC2GLS1,0)
// CLC2GLS1<LC2G2D1T>
extern volatile __bit                   LC2G2D1T            __at(0x7909);	// @ (0xF21 * 8 + 1)
#define                                 LC2G2D1T_bit        _BIT_ACCESS(CLC2GLS1,1)
// CLC2GLS1<LC2G2D2N>
extern volatile __bit                   LC2G2D2N            __at(0x790A);	// @ (0xF21 * 8 + 2)
#define                                 LC2G2D2N_bit        _BIT_ACCESS(CLC2GLS1,2)
// CLC2GLS1<LC2G2D2T>
extern volatile __bit                   LC2G2D2T            __at(0x790B);	// @ (0xF21 * 8 + 3)
#define                                 LC2G2D2T_bit        _BIT_ACCESS(CLC2GLS1,3)
// CLC2GLS1<LC2G2D3N>
extern volatile __bit                   LC2G2D3N            __at(0x790C);	// @ (0xF21 * 8 + 4)
#define                                 LC2G2D3N_bit        _BIT_ACCESS(CLC2GLS1,4)
// CLC2GLS1<LC2G2D3T>
extern volatile __bit                   LC2G2D3T            __at(0x790D);	// @ (0xF21 * 8 + 5)
#define                                 LC2G2D3T_bit        _BIT_ACCESS(CLC2GLS1,5)
// CLC2GLS1<LC2G2D4N>
extern volatile __bit                   LC2G2D4N            __at(0x790E);	// @ (0xF21 * 8 + 6)
#define                                 LC2G2D4N_bit        _BIT_ACCESS(CLC2GLS1,6)
// CLC2GLS1<LC2G2D4T>
extern volatile __bit                   LC2G2D4T            __at(0x790F);	// @ (0xF21 * 8 + 7)
#define                                 LC2G2D4T_bit        _BIT_ACCESS(CLC2GLS1,7)
// CLC2POL<LC2G2POL>
extern volatile __bit                   LC2G2POL            __at(0x78D9);	// @ (0xF1B * 8 + 1)
#define                                 LC2G2POL_bit        _BIT_ACCESS(CLC2POL,1)
// CLC2GLS2<LC2G3D1N>
extern volatile __bit                   LC2G3D1N            __at(0x7910);	// @ (0xF22 * 8 + 0)
#define                                 LC2G3D1N_bit        _BIT_ACCESS(CLC2GLS2,0)
// CLC2GLS2<LC2G3D1T>
extern volatile __bit                   LC2G3D1T            __at(0x7911);	// @ (0xF22 * 8 + 1)
#define                                 LC2G3D1T_bit        _BIT_ACCESS(CLC2GLS2,1)
// CLC2GLS2<LC2G3D2N>
extern volatile __bit                   LC2G3D2N            __at(0x7912);	// @ (0xF22 * 8 + 2)
#define                                 LC2G3D2N_bit        _BIT_ACCESS(CLC2GLS2,2)
// CLC2GLS2<LC2G3D2T>
extern volatile __bit                   LC2G3D2T            __at(0x7913);	// @ (0xF22 * 8 + 3)
#define                                 LC2G3D2T_bit        _BIT_ACCESS(CLC2GLS2,3)
// CLC2GLS2<LC2G3D3N>
extern volatile __bit                   LC2G3D3N            __at(0x7914);	// @ (0xF22 * 8 + 4)
#define                                 LC2G3D3N_bit        _BIT_ACCESS(CLC2GLS2,4)
// CLC2GLS2<LC2G3D3T>
extern volatile __bit                   LC2G3D3T            __at(0x7915);	// @ (0xF22 * 8 + 5)
#define                                 LC2G3D3T_bit        _BIT_ACCESS(CLC2GLS2,5)
// CLC2GLS2<LC2G3D4N>
extern volatile __bit                   LC2G3D4N            __at(0x7916);	// @ (0xF22 * 8 + 6)
#define                                 LC2G3D4N_bit        _BIT_ACCESS(CLC2GLS2,6)
// CLC2GLS2<LC2G3D4T>
extern volatile __bit                   LC2G3D4T            __at(0x7917);	// @ (0xF22 * 8 + 7)
#define                                 LC2G3D4T_bit        _BIT_ACCESS(CLC2GLS2,7)
// CLC2POL<LC2G3POL>
extern volatile __bit                   LC2G3POL            __at(0x78DA);	// @ (0xF1B * 8 + 2)
#define                                 LC2G3POL_bit        _BIT_ACCESS(CLC2POL,2)
// CLC2GLS3<LC2G4D1N>
extern volatile __bit                   LC2G4D1N            __at(0x7918);	// @ (0xF23 * 8 + 0)
#define                                 LC2G4D1N_bit        _BIT_ACCESS(CLC2GLS3,0)
// CLC2GLS3<LC2G4D1T>
extern volatile __bit                   LC2G4D1T            __at(0x7919);	// @ (0xF23 * 8 + 1)
#define                                 LC2G4D1T_bit        _BIT_ACCESS(CLC2GLS3,1)
// CLC2GLS3<LC2G4D2N>
extern volatile __bit                   LC2G4D2N            __at(0x791A);	// @ (0xF23 * 8 + 2)
#define                                 LC2G4D2N_bit        _BIT_ACCESS(CLC2GLS3,2)
// CLC2GLS3<LC2G4D2T>
extern volatile __bit                   LC2G4D2T            __at(0x791B);	// @ (0xF23 * 8 + 3)
#define                                 LC2G4D2T_bit        _BIT_ACCESS(CLC2GLS3,3)
// CLC2GLS3<LC2G4D3N>
extern volatile __bit                   LC2G4D3N            __at(0x791C);	// @ (0xF23 * 8 + 4)
#define                                 LC2G4D3N_bit        _BIT_ACCESS(CLC2GLS3,4)
// CLC2GLS3<LC2G4D3T>
extern volatile __bit                   LC2G4D3T            __at(0x791D);	// @ (0xF23 * 8 + 5)
#define                                 LC2G4D3T_bit        _BIT_ACCESS(CLC2GLS3,5)
// CLC2GLS3<LC2G4D4N>
extern volatile __bit                   LC2G4D4N            __at(0x791E);	// @ (0xF23 * 8 + 6)
#define                                 LC2G4D4N_bit        _BIT_ACCESS(CLC2GLS3,6)
// CLC2GLS3<LC2G4D4T>
extern volatile __bit                   LC2G4D4T            __at(0x791F);	// @ (0xF23 * 8 + 7)
#define                                 LC2G4D4T_bit        _BIT_ACCESS(CLC2GLS3,7)
// CLC2POL<LC2G4POL>
extern volatile __bit                   LC2G4POL            __at(0x78DB);	// @ (0xF1B * 8 + 3)
#define                                 LC2G4POL_bit        _BIT_ACCESS(CLC2POL,3)
// CLC2CON<LC2INTN>
extern volatile __bit                   LC2INTN             __at(0x78D3);	// @ (0xF1A * 8 + 3)
#define                                 LC2INTN_bit         _BIT_ACCESS(CLC2CON,3)
// CLC2CON<LC2INTP>
extern volatile __bit                   LC2INTP             __at(0x78D4);	// @ (0xF1A * 8 + 4)
#define                                 LC2INTP_bit         _BIT_ACCESS(CLC2CON,4)
// CLC2CON<LC2MODE0>
extern volatile __bit                   LC2MODE0            __at(0x78D0);	// @ (0xF1A * 8 + 0)
#define                                 LC2MODE0_bit        _BIT_ACCESS(CLC2CON,0)
// CLC2CON<LC2MODE1>
extern volatile __bit                   LC2MODE1            __at(0x78D1);	// @ (0xF1A * 8 + 1)
#define                                 LC2MODE1_bit        _BIT_ACCESS(CLC2CON,1)
// CLC2CON<LC2MODE2>
extern volatile __bit                   LC2MODE2            __at(0x78D2);	// @ (0xF1A * 8 + 2)
#define                                 LC2MODE2_bit        _BIT_ACCESS(CLC2CON,2)
// CLC2CON<LC2OUT>
extern volatile __bit                   LC2OUT              __at(0x78D5);	// @ (0xF1A * 8 + 5)
#define                                 LC2OUT_bit          _BIT_ACCESS(CLC2CON,5)
// CLC2POL<LC2POL>
extern volatile __bit                   LC2POL              __at(0x78DF);	// @ (0xF1B * 8 + 7)
#define                                 LC2POL_bit          _BIT_ACCESS(CLC2POL,7)
// CLC3SEL0<LC3D1S0>
extern volatile __bit                   LC3D1S0             __at(0x7930);	// @ (0xF26 * 8 + 0)
#define                                 LC3D1S0_bit         _BIT_ACCESS(CLC3SEL0,0)
// CLC3SEL0<LC3D1S1>
extern volatile __bit                   LC3D1S1             __at(0x7931);	// @ (0xF26 * 8 + 1)
#define                                 LC3D1S1_bit         _BIT_ACCESS(CLC3SEL0,1)
// CLC3SEL0<LC3D1S2>
extern volatile __bit                   LC3D1S2             __at(0x7932);	// @ (0xF26 * 8 + 2)
#define                                 LC3D1S2_bit         _BIT_ACCESS(CLC3SEL0,2)
// CLC3SEL0<LC3D1S3>
extern volatile __bit                   LC3D1S3             __at(0x7933);	// @ (0xF26 * 8 + 3)
#define                                 LC3D1S3_bit         _BIT_ACCESS(CLC3SEL0,3)
// CLC3SEL0<LC3D1S4>
extern volatile __bit                   LC3D1S4             __at(0x7934);	// @ (0xF26 * 8 + 4)
#define                                 LC3D1S4_bit         _BIT_ACCESS(CLC3SEL0,4)
// CLC3SEL0<LC3D1S5>
extern volatile __bit                   LC3D1S5             __at(0x7935);	// @ (0xF26 * 8 + 5)
#define                                 LC3D1S5_bit         _BIT_ACCESS(CLC3SEL0,5)
// CLC3SEL1<LC3D2S0>
extern volatile __bit                   LC3D2S0             __at(0x7938);	// @ (0xF27 * 8 + 0)
#define                                 LC3D2S0_bit         _BIT_ACCESS(CLC3SEL1,0)
// CLC3SEL1<LC3D2S1>
extern volatile __bit                   LC3D2S1             __at(0x7939);	// @ (0xF27 * 8 + 1)
#define                                 LC3D2S1_bit         _BIT_ACCESS(CLC3SEL1,1)
// CLC3SEL1<LC3D2S2>
extern volatile __bit                   LC3D2S2             __at(0x793A);	// @ (0xF27 * 8 + 2)
#define                                 LC3D2S2_bit         _BIT_ACCESS(CLC3SEL1,2)
// CLC3SEL1<LC3D2S3>
extern volatile __bit                   LC3D2S3             __at(0x793B);	// @ (0xF27 * 8 + 3)
#define                                 LC3D2S3_bit         _BIT_ACCESS(CLC3SEL1,3)
// CLC3SEL1<LC3D2S4>
extern volatile __bit                   LC3D2S4             __at(0x793C);	// @ (0xF27 * 8 + 4)
#define                                 LC3D2S4_bit         _BIT_ACCESS(CLC3SEL1,4)
// CLC3SEL1<LC3D2S5>
extern volatile __bit                   LC3D2S5             __at(0x793D);	// @ (0xF27 * 8 + 5)
#define                                 LC3D2S5_bit         _BIT_ACCESS(CLC3SEL1,5)
// CLC3SEL2<LC3D3S0>
extern volatile __bit                   LC3D3S0             __at(0x7940);	// @ (0xF28 * 8 + 0)
#define                                 LC3D3S0_bit         _BIT_ACCESS(CLC3SEL2,0)
// CLC3SEL2<LC3D3S1>
extern volatile __bit                   LC3D3S1             __at(0x7941);	// @ (0xF28 * 8 + 1)
#define                                 LC3D3S1_bit         _BIT_ACCESS(CLC3SEL2,1)
// CLC3SEL2<LC3D3S2>
extern volatile __bit                   LC3D3S2             __at(0x7942);	// @ (0xF28 * 8 + 2)
#define                                 LC3D3S2_bit         _BIT_ACCESS(CLC3SEL2,2)
// CLC3SEL2<LC3D3S3>
extern volatile __bit                   LC3D3S3             __at(0x7943);	// @ (0xF28 * 8 + 3)
#define                                 LC3D3S3_bit         _BIT_ACCESS(CLC3SEL2,3)
// CLC3SEL2<LC3D3S4>
extern volatile __bit                   LC3D3S4             __at(0x7944);	// @ (0xF28 * 8 + 4)
#define                                 LC3D3S4_bit         _BIT_ACCESS(CLC3SEL2,4)
// CLC3SEL2<LC3D3S5>
extern volatile __bit                   LC3D3S5             __at(0x7945);	// @ (0xF28 * 8 + 5)
#define                                 LC3D3S5_bit         _BIT_ACCESS(CLC3SEL2,5)
// CLC3SEL3<LC3D4S0>
extern volatile __bit                   LC3D4S0             __at(0x7948);	// @ (0xF29 * 8 + 0)
#define                                 LC3D4S0_bit         _BIT_ACCESS(CLC3SEL3,0)
// CLC3SEL3<LC3D4S1>
extern volatile __bit                   LC3D4S1             __at(0x7949);	// @ (0xF29 * 8 + 1)
#define                                 LC3D4S1_bit         _BIT_ACCESS(CLC3SEL3,1)
// CLC3SEL3<LC3D4S2>
extern volatile __bit                   LC3D4S2             __at(0x794A);	// @ (0xF29 * 8 + 2)
#define                                 LC3D4S2_bit         _BIT_ACCESS(CLC3SEL3,2)
// CLC3SEL3<LC3D4S3>
extern volatile __bit                   LC3D4S3             __at(0x794B);	// @ (0xF29 * 8 + 3)
#define                                 LC3D4S3_bit         _BIT_ACCESS(CLC3SEL3,3)
// CLC3SEL3<LC3D4S4>
extern volatile __bit                   LC3D4S4             __at(0x794C);	// @ (0xF29 * 8 + 4)
#define                                 LC3D4S4_bit         _BIT_ACCESS(CLC3SEL3,4)
// CLC3SEL3<LC3D4S5>
extern volatile __bit                   LC3D4S5             __at(0x794D);	// @ (0xF29 * 8 + 5)
#define                                 LC3D4S5_bit         _BIT_ACCESS(CLC3SEL3,5)
// CLC3CON<LC3EN>
extern volatile __bit                   LC3EN               __at(0x7927);	// @ (0xF24 * 8 + 7)
#define                                 LC3EN_bit           _BIT_ACCESS(CLC3CON,7)
// CLC3GLS0<LC3G1D1N>
extern volatile __bit                   LC3G1D1N            __at(0x7950);	// @ (0xF2A * 8 + 0)
#define                                 LC3G1D1N_bit        _BIT_ACCESS(CLC3GLS0,0)
// CLC3GLS0<LC3G1D1T>
extern volatile __bit                   LC3G1D1T            __at(0x7951);	// @ (0xF2A * 8 + 1)
#define                                 LC3G1D1T_bit        _BIT_ACCESS(CLC3GLS0,1)
// CLC3GLS0<LC3G1D2N>
extern volatile __bit                   LC3G1D2N            __at(0x7952);	// @ (0xF2A * 8 + 2)
#define                                 LC3G1D2N_bit        _BIT_ACCESS(CLC3GLS0,2)
// CLC3GLS0<LC3G1D2T>
extern volatile __bit                   LC3G1D2T            __at(0x7953);	// @ (0xF2A * 8 + 3)
#define                                 LC3G1D2T_bit        _BIT_ACCESS(CLC3GLS0,3)
// CLC3GLS0<LC3G1D3N>
extern volatile __bit                   LC3G1D3N            __at(0x7954);	// @ (0xF2A * 8 + 4)
#define                                 LC3G1D3N_bit        _BIT_ACCESS(CLC3GLS0,4)
// CLC3GLS0<LC3G1D3T>
extern volatile __bit                   LC3G1D3T            __at(0x7955);	// @ (0xF2A * 8 + 5)
#define                                 LC3G1D3T_bit        _BIT_ACCESS(CLC3GLS0,5)
// CLC3GLS0<LC3G1D4N>
extern volatile __bit                   LC3G1D4N            __at(0x7956);	// @ (0xF2A * 8 + 6)
#define                                 LC3G1D4N_bit        _BIT_ACCESS(CLC3GLS0,6)
// CLC3GLS0<LC3G1D4T>
extern volatile __bit                   LC3G1D4T            __at(0x7957);	// @ (0xF2A * 8 + 7)
#define                                 LC3G1D4T_bit        _BIT_ACCESS(CLC3GLS0,7)
// CLC3POL<LC3G1POL>
extern volatile __bit                   LC3G1POL            __at(0x7928);	// @ (0xF25 * 8 + 0)
#define                                 LC3G1POL_bit        _BIT_ACCESS(CLC3POL,0)
// CLC3GLS1<LC3G2D1N>
extern volatile __bit                   LC3G2D1N            __at(0x7958);	// @ (0xF2B * 8 + 0)
#define                                 LC3G2D1N_bit        _BIT_ACCESS(CLC3GLS1,0)
// CLC3GLS1<LC3G2D1T>
extern volatile __bit                   LC3G2D1T            __at(0x7959);	// @ (0xF2B * 8 + 1)
#define                                 LC3G2D1T_bit        _BIT_ACCESS(CLC3GLS1,1)
// CLC3GLS1<LC3G2D2N>
extern volatile __bit                   LC3G2D2N            __at(0x795A);	// @ (0xF2B * 8 + 2)
#define                                 LC3G2D2N_bit        _BIT_ACCESS(CLC3GLS1,2)
// CLC3GLS1<LC3G2D2T>
extern volatile __bit                   LC3G2D2T            __at(0x795B);	// @ (0xF2B * 8 + 3)
#define                                 LC3G2D2T_bit        _BIT_ACCESS(CLC3GLS1,3)
// CLC3GLS1<LC3G2D3N>
extern volatile __bit                   LC3G2D3N            __at(0x795C);	// @ (0xF2B * 8 + 4)
#define                                 LC3G2D3N_bit        _BIT_ACCESS(CLC3GLS1,4)
// CLC3GLS1<LC3G2D3T>
extern volatile __bit                   LC3G2D3T            __at(0x795D);	// @ (0xF2B * 8 + 5)
#define                                 LC3G2D3T_bit        _BIT_ACCESS(CLC3GLS1,5)
// CLC3GLS1<LC3G2D4N>
extern volatile __bit                   LC3G2D4N            __at(0x795E);	// @ (0xF2B * 8 + 6)
#define                                 LC3G2D4N_bit        _BIT_ACCESS(CLC3GLS1,6)
// CLC3GLS1<LC3G2D4T>
extern volatile __bit                   LC3G2D4T            __at(0x795F);	// @ (0xF2B * 8 + 7)
#define                                 LC3G2D4T_bit        _BIT_ACCESS(CLC3GLS1,7)
// CLC3POL<LC3G2POL>
extern volatile __bit                   LC3G2POL            __at(0x7929);	// @ (0xF25 * 8 + 1)
#define                                 LC3G2POL_bit        _BIT_ACCESS(CLC3POL,1)
// CLC3GLS2<LC3G3D1N>
extern volatile __bit                   LC3G3D1N            __at(0x7960);	// @ (0xF2C * 8 + 0)
#define                                 LC3G3D1N_bit        _BIT_ACCESS(CLC3GLS2,0)
// CLC3GLS2<LC3G3D1T>
extern volatile __bit                   LC3G3D1T            __at(0x7961);	// @ (0xF2C * 8 + 1)
#define                                 LC3G3D1T_bit        _BIT_ACCESS(CLC3GLS2,1)
// CLC3GLS2<LC3G3D2N>
extern volatile __bit                   LC3G3D2N            __at(0x7962);	// @ (0xF2C * 8 + 2)
#define                                 LC3G3D2N_bit        _BIT_ACCESS(CLC3GLS2,2)
// CLC3GLS2<LC3G3D2T>
extern volatile __bit                   LC3G3D2T            __at(0x7963);	// @ (0xF2C * 8 + 3)
#define                                 LC3G3D2T_bit        _BIT_ACCESS(CLC3GLS2,3)
// CLC3GLS2<LC3G3D3N>
extern volatile __bit                   LC3G3D3N            __at(0x7964);	// @ (0xF2C * 8 + 4)
#define                                 LC3G3D3N_bit        _BIT_ACCESS(CLC3GLS2,4)
// CLC3GLS2<LC3G3D3T>
extern volatile __bit                   LC3G3D3T            __at(0x7965);	// @ (0xF2C * 8 + 5)
#define                                 LC3G3D3T_bit        _BIT_ACCESS(CLC3GLS2,5)
// CLC3GLS2<LC3G3D4N>
extern volatile __bit                   LC3G3D4N            __at(0x7966);	// @ (0xF2C * 8 + 6)
#define                                 LC3G3D4N_bit        _BIT_ACCESS(CLC3GLS2,6)
// CLC3GLS2<LC3G3D4T>
extern volatile __bit                   LC3G3D4T            __at(0x7967);	// @ (0xF2C * 8 + 7)
#define                                 LC3G3D4T_bit        _BIT_ACCESS(CLC3GLS2,7)
// CLC3POL<LC3G3POL>
extern volatile __bit                   LC3G3POL            __at(0x792A);	// @ (0xF25 * 8 + 2)
#define                                 LC3G3POL_bit        _BIT_ACCESS(CLC3POL,2)
// CLC3GLS3<LC3G4D1N>
extern volatile __bit                   LC3G4D1N            __at(0x7968);	// @ (0xF2D * 8 + 0)
#define                                 LC3G4D1N_bit        _BIT_ACCESS(CLC3GLS3,0)
// CLC3GLS3<LC3G4D1T>
extern volatile __bit                   LC3G4D1T            __at(0x7969);	// @ (0xF2D * 8 + 1)
#define                                 LC3G4D1T_bit        _BIT_ACCESS(CLC3GLS3,1)
// CLC3GLS3<LC3G4D2N>
extern volatile __bit                   LC3G4D2N            __at(0x796A);	// @ (0xF2D * 8 + 2)
#define                                 LC3G4D2N_bit        _BIT_ACCESS(CLC3GLS3,2)
// CLC3GLS3<LC3G4D2T>
extern volatile __bit                   LC3G4D2T            __at(0x796B);	// @ (0xF2D * 8 + 3)
#define                                 LC3G4D2T_bit        _BIT_ACCESS(CLC3GLS3,3)
// CLC3GLS3<LC3G4D3N>
extern volatile __bit                   LC3G4D3N            __at(0x796C);	// @ (0xF2D * 8 + 4)
#define                                 LC3G4D3N_bit        _BIT_ACCESS(CLC3GLS3,4)
// CLC3GLS3<LC3G4D3T>
extern volatile __bit                   LC3G4D3T            __at(0x796D);	// @ (0xF2D * 8 + 5)
#define                                 LC3G4D3T_bit        _BIT_ACCESS(CLC3GLS3,5)
// CLC3GLS3<LC3G4D4N>
extern volatile __bit                   LC3G4D4N            __at(0x796E);	// @ (0xF2D * 8 + 6)
#define                                 LC3G4D4N_bit        _BIT_ACCESS(CLC3GLS3,6)
// CLC3GLS3<LC3G4D4T>
extern volatile __bit                   LC3G4D4T            __at(0x796F);	// @ (0xF2D * 8 + 7)
#define                                 LC3G4D4T_bit        _BIT_ACCESS(CLC3GLS3,7)
// CLC3POL<LC3G4POL>
extern volatile __bit                   LC3G4POL            __at(0x792B);	// @ (0xF25 * 8 + 3)
#define                                 LC3G4POL_bit        _BIT_ACCESS(CLC3POL,3)
// CLC3CON<LC3INTN>
extern volatile __bit                   LC3INTN             __at(0x7923);	// @ (0xF24 * 8 + 3)
#define                                 LC3INTN_bit         _BIT_ACCESS(CLC3CON,3)
// CLC3CON<LC3INTP>
extern volatile __bit                   LC3INTP             __at(0x7924);	// @ (0xF24 * 8 + 4)
#define                                 LC3INTP_bit         _BIT_ACCESS(CLC3CON,4)
// CLC3CON<LC3MODE0>
extern volatile __bit                   LC3MODE0            __at(0x7920);	// @ (0xF24 * 8 + 0)
#define                                 LC3MODE0_bit        _BIT_ACCESS(CLC3CON,0)
// CLC3CON<LC3MODE1>
extern volatile __bit                   LC3MODE1            __at(0x7921);	// @ (0xF24 * 8 + 1)
#define                                 LC3MODE1_bit        _BIT_ACCESS(CLC3CON,1)
// CLC3CON<LC3MODE2>
extern volatile __bit                   LC3MODE2            __at(0x7922);	// @ (0xF24 * 8 + 2)
#define                                 LC3MODE2_bit        _BIT_ACCESS(CLC3CON,2)
// CLC3CON<LC3OUT>
extern volatile __bit                   LC3OUT              __at(0x7925);	// @ (0xF24 * 8 + 5)
#define                                 LC3OUT_bit          _BIT_ACCESS(CLC3CON,5)
// CLC3POL<LC3POL>
extern volatile __bit                   LC3POL              __at(0x792F);	// @ (0xF25 * 8 + 7)
#define                                 LC3POL_bit          _BIT_ACCESS(CLC3POL,7)
// CLC4SEL0<LC4D1S0>
extern volatile __bit                   LC4D1S0             __at(0x7980);	// @ (0xF30 * 8 + 0)
#define                                 LC4D1S0_bit         _BIT_ACCESS(CLC4SEL0,0)
// CLC4SEL0<LC4D1S1>
extern volatile __bit                   LC4D1S1             __at(0x7981);	// @ (0xF30 * 8 + 1)
#define                                 LC4D1S1_bit         _BIT_ACCESS(CLC4SEL0,1)
// CLC4SEL0<LC4D1S2>
extern volatile __bit                   LC4D1S2             __at(0x7982);	// @ (0xF30 * 8 + 2)
#define                                 LC4D1S2_bit         _BIT_ACCESS(CLC4SEL0,2)
// CLC4SEL0<LC4D1S3>
extern volatile __bit                   LC4D1S3             __at(0x7983);	// @ (0xF30 * 8 + 3)
#define                                 LC4D1S3_bit         _BIT_ACCESS(CLC4SEL0,3)
// CLC4SEL0<LC4D1S4>
extern volatile __bit                   LC4D1S4             __at(0x7984);	// @ (0xF30 * 8 + 4)
#define                                 LC4D1S4_bit         _BIT_ACCESS(CLC4SEL0,4)
// CLC4SEL0<LC4D1S5>
extern volatile __bit                   LC4D1S5             __at(0x7985);	// @ (0xF30 * 8 + 5)
#define                                 LC4D1S5_bit         _BIT_ACCESS(CLC4SEL0,5)
// CLC4SEL1<LC4D2S0>
extern volatile __bit                   LC4D2S0             __at(0x7988);	// @ (0xF31 * 8 + 0)
#define                                 LC4D2S0_bit         _BIT_ACCESS(CLC4SEL1,0)
// CLC4SEL1<LC4D2S1>
extern volatile __bit                   LC4D2S1             __at(0x7989);	// @ (0xF31 * 8 + 1)
#define                                 LC4D2S1_bit         _BIT_ACCESS(CLC4SEL1,1)
// CLC4SEL1<LC4D2S2>
extern volatile __bit                   LC4D2S2             __at(0x798A);	// @ (0xF31 * 8 + 2)
#define                                 LC4D2S2_bit         _BIT_ACCESS(CLC4SEL1,2)
// CLC4SEL1<LC4D2S3>
extern volatile __bit                   LC4D2S3             __at(0x798B);	// @ (0xF31 * 8 + 3)
#define                                 LC4D2S3_bit         _BIT_ACCESS(CLC4SEL1,3)
// CLC4SEL1<LC4D2S4>
extern volatile __bit                   LC4D2S4             __at(0x798C);	// @ (0xF31 * 8 + 4)
#define                                 LC4D2S4_bit         _BIT_ACCESS(CLC4SEL1,4)
// CLC4SEL1<LC4D2S5>
extern volatile __bit                   LC4D2S5             __at(0x798D);	// @ (0xF31 * 8 + 5)
#define                                 LC4D2S5_bit         _BIT_ACCESS(CLC4SEL1,5)
// CLC4SEL2<LC4D3S0>
extern volatile __bit                   LC4D3S0             __at(0x7990);	// @ (0xF32 * 8 + 0)
#define                                 LC4D3S0_bit         _BIT_ACCESS(CLC4SEL2,0)
// CLC4SEL2<LC4D3S1>
extern volatile __bit                   LC4D3S1             __at(0x7991);	// @ (0xF32 * 8 + 1)
#define                                 LC4D3S1_bit         _BIT_ACCESS(CLC4SEL2,1)
// CLC4SEL2<LC4D3S2>
extern volatile __bit                   LC4D3S2             __at(0x7992);	// @ (0xF32 * 8 + 2)
#define                                 LC4D3S2_bit         _BIT_ACCESS(CLC4SEL2,2)
// CLC4SEL2<LC4D3S3>
extern volatile __bit                   LC4D3S3             __at(0x7993);	// @ (0xF32 * 8 + 3)
#define                                 LC4D3S3_bit         _BIT_ACCESS(CLC4SEL2,3)
// CLC4SEL2<LC4D3S4>
extern volatile __bit                   LC4D3S4             __at(0x7994);	// @ (0xF32 * 8 + 4)
#define                                 LC4D3S4_bit         _BIT_ACCESS(CLC4SEL2,4)
// CLC4SEL2<LC4D3S5>
extern volatile __bit                   LC4D3S5             __at(0x7995);	// @ (0xF32 * 8 + 5)
#define                                 LC4D3S5_bit         _BIT_ACCESS(CLC4SEL2,5)
// CLC4SEL3<LC4D4S0>
extern volatile __bit                   LC4D4S0             __at(0x7998);	// @ (0xF33 * 8 + 0)
#define                                 LC4D4S0_bit         _BIT_ACCESS(CLC4SEL3,0)
// CLC4SEL3<LC4D4S1>
extern volatile __bit                   LC4D4S1             __at(0x7999);	// @ (0xF33 * 8 + 1)
#define                                 LC4D4S1_bit         _BIT_ACCESS(CLC4SEL3,1)
// CLC4SEL3<LC4D4S2>
extern volatile __bit                   LC4D4S2             __at(0x799A);	// @ (0xF33 * 8 + 2)
#define                                 LC4D4S2_bit         _BIT_ACCESS(CLC4SEL3,2)
// CLC4SEL3<LC4D4S3>
extern volatile __bit                   LC4D4S3             __at(0x799B);	// @ (0xF33 * 8 + 3)
#define                                 LC4D4S3_bit         _BIT_ACCESS(CLC4SEL3,3)
// CLC4SEL3<LC4D4S4>
extern volatile __bit                   LC4D4S4             __at(0x799C);	// @ (0xF33 * 8 + 4)
#define                                 LC4D4S4_bit         _BIT_ACCESS(CLC4SEL3,4)
// CLC4SEL3<LC4D4S5>
extern volatile __bit                   LC4D4S5             __at(0x799D);	// @ (0xF33 * 8 + 5)
#define                                 LC4D4S5_bit         _BIT_ACCESS(CLC4SEL3,5)
// CLC4CON<LC4EN>
extern volatile __bit                   LC4EN               __at(0x7977);	// @ (0xF2E * 8 + 7)
#define                                 LC4EN_bit           _BIT_ACCESS(CLC4CON,7)
// CLC4GLS0<LC4G1D1N>
extern volatile __bit                   LC4G1D1N            __at(0x79A0);	// @ (0xF34 * 8 + 0)
#define                                 LC4G1D1N_bit        _BIT_ACCESS(CLC4GLS0,0)
// CLC4GLS0<LC4G1D1T>
extern volatile __bit                   LC4G1D1T            __at(0x79A1);	// @ (0xF34 * 8 + 1)
#define                                 LC4G1D1T_bit        _BIT_ACCESS(CLC4GLS0,1)
// CLC4GLS0<LC4G1D2N>
extern volatile __bit                   LC4G1D2N            __at(0x79A2);	// @ (0xF34 * 8 + 2)
#define                                 LC4G1D2N_bit        _BIT_ACCESS(CLC4GLS0,2)
// CLC4GLS0<LC4G1D2T>
extern volatile __bit                   LC4G1D2T            __at(0x79A3);	// @ (0xF34 * 8 + 3)
#define                                 LC4G1D2T_bit        _BIT_ACCESS(CLC4GLS0,3)
// CLC4GLS0<LC4G1D3N>
extern volatile __bit                   LC4G1D3N            __at(0x79A4);	// @ (0xF34 * 8 + 4)
#define                                 LC4G1D3N_bit        _BIT_ACCESS(CLC4GLS0,4)
// CLC4GLS0<LC4G1D3T>
extern volatile __bit                   LC4G1D3T            __at(0x79A5);	// @ (0xF34 * 8 + 5)
#define                                 LC4G1D3T_bit        _BIT_ACCESS(CLC4GLS0,5)
// CLC4GLS0<LC4G1D4N>
extern volatile __bit                   LC4G1D4N            __at(0x79A6);	// @ (0xF34 * 8 + 6)
#define                                 LC4G1D4N_bit        _BIT_ACCESS(CLC4GLS0,6)
// CLC4GLS0<LC4G1D4T>
extern volatile __bit                   LC4G1D4T            __at(0x79A7);	// @ (0xF34 * 8 + 7)
#define                                 LC4G1D4T_bit        _BIT_ACCESS(CLC4GLS0,7)
// CLC4POL<LC4G1POL>
extern volatile __bit                   LC4G1POL            __at(0x7978);	// @ (0xF2F * 8 + 0)
#define                                 LC4G1POL_bit        _BIT_ACCESS(CLC4POL,0)
// CLC4GLS1<LC4G2D1N>
extern volatile __bit                   LC4G2D1N            __at(0x79A8);	// @ (0xF35 * 8 + 0)
#define                                 LC4G2D1N_bit        _BIT_ACCESS(CLC4GLS1,0)
// CLC4GLS1<LC4G2D1T>
extern volatile __bit                   LC4G2D1T            __at(0x79A9);	// @ (0xF35 * 8 + 1)
#define                                 LC4G2D1T_bit        _BIT_ACCESS(CLC4GLS1,1)
// CLC4GLS1<LC4G2D2N>
extern volatile __bit                   LC4G2D2N            __at(0x79AA);	// @ (0xF35 * 8 + 2)
#define                                 LC4G2D2N_bit        _BIT_ACCESS(CLC4GLS1,2)
// CLC4GLS1<LC4G2D2T>
extern volatile __bit                   LC4G2D2T            __at(0x79AB);	// @ (0xF35 * 8 + 3)
#define                                 LC4G2D2T_bit        _BIT_ACCESS(CLC4GLS1,3)
// CLC4GLS1<LC4G2D3N>
extern volatile __bit                   LC4G2D3N            __at(0x79AC);	// @ (0xF35 * 8 + 4)
#define                                 LC4G2D3N_bit        _BIT_ACCESS(CLC4GLS1,4)
// CLC4GLS1<LC4G2D3T>
extern volatile __bit                   LC4G2D3T            __at(0x79AD);	// @ (0xF35 * 8 + 5)
#define                                 LC4G2D3T_bit        _BIT_ACCESS(CLC4GLS1,5)
// CLC4GLS1<LC4G2D4N>
extern volatile __bit                   LC4G2D4N            __at(0x79AE);	// @ (0xF35 * 8 + 6)
#define                                 LC4G2D4N_bit        _BIT_ACCESS(CLC4GLS1,6)
// CLC4GLS1<LC4G2D4T>
extern volatile __bit                   LC4G2D4T            __at(0x79AF);	// @ (0xF35 * 8 + 7)
#define                                 LC4G2D4T_bit        _BIT_ACCESS(CLC4GLS1,7)
// CLC4POL<LC4G2POL>
extern volatile __bit                   LC4G2POL            __at(0x7979);	// @ (0xF2F * 8 + 1)
#define                                 LC4G2POL_bit        _BIT_ACCESS(CLC4POL,1)
// CLC4GLS2<LC4G3D1N>
extern volatile __bit                   LC4G3D1N            __at(0x79B0);	// @ (0xF36 * 8 + 0)
#define                                 LC4G3D1N_bit        _BIT_ACCESS(CLC4GLS2,0)
// CLC4GLS2<LC4G3D1T>
extern volatile __bit                   LC4G3D1T            __at(0x79B1);	// @ (0xF36 * 8 + 1)
#define                                 LC4G3D1T_bit        _BIT_ACCESS(CLC4GLS2,1)
// CLC4GLS2<LC4G3D2N>
extern volatile __bit                   LC4G3D2N            __at(0x79B2);	// @ (0xF36 * 8 + 2)
#define                                 LC4G3D2N_bit        _BIT_ACCESS(CLC4GLS2,2)
// CLC4GLS2<LC4G3D2T>
extern volatile __bit                   LC4G3D2T            __at(0x79B3);	// @ (0xF36 * 8 + 3)
#define                                 LC4G3D2T_bit        _BIT_ACCESS(CLC4GLS2,3)
// CLC4GLS2<LC4G3D3N>
extern volatile __bit                   LC4G3D3N            __at(0x79B4);	// @ (0xF36 * 8 + 4)
#define                                 LC4G3D3N_bit        _BIT_ACCESS(CLC4GLS2,4)
// CLC4GLS2<LC4G3D3T>
extern volatile __bit                   LC4G3D3T            __at(0x79B5);	// @ (0xF36 * 8 + 5)
#define                                 LC4G3D3T_bit        _BIT_ACCESS(CLC4GLS2,5)
// CLC4GLS2<LC4G3D4N>
extern volatile __bit                   LC4G3D4N            __at(0x79B6);	// @ (0xF36 * 8 + 6)
#define                                 LC4G3D4N_bit        _BIT_ACCESS(CLC4GLS2,6)
// CLC4GLS2<LC4G3D4T>
extern volatile __bit                   LC4G3D4T            __at(0x79B7);	// @ (0xF36 * 8 + 7)
#define                                 LC4G3D4T_bit        _BIT_ACCESS(CLC4GLS2,7)
// CLC4POL<LC4G3POL>
extern volatile __bit                   LC4G3POL            __at(0x797A);	// @ (0xF2F * 8 + 2)
#define                                 LC4G3POL_bit        _BIT_ACCESS(CLC4POL,2)
// CLC4GLS3<LC4G4D1N>
extern volatile __bit                   LC4G4D1N            __at(0x79B8);	// @ (0xF37 * 8 + 0)
#define                                 LC4G4D1N_bit        _BIT_ACCESS(CLC4GLS3,0)
// CLC4GLS3<LC4G4D1T>
extern volatile __bit                   LC4G4D1T            __at(0x79B9);	// @ (0xF37 * 8 + 1)
#define                                 LC4G4D1T_bit        _BIT_ACCESS(CLC4GLS3,1)
// CLC4GLS3<LC4G4D2N>
extern volatile __bit                   LC4G4D2N            __at(0x79BA);	// @ (0xF37 * 8 + 2)
#define                                 LC4G4D2N_bit        _BIT_ACCESS(CLC4GLS3,2)
// CLC4GLS3<LC4G4D2T>
extern volatile __bit                   LC4G4D2T            __at(0x79BB);	// @ (0xF37 * 8 + 3)
#define                                 LC4G4D2T_bit        _BIT_ACCESS(CLC4GLS3,3)
// CLC4GLS3<LC4G4D3N>
extern volatile __bit                   LC4G4D3N            __at(0x79BC);	// @ (0xF37 * 8 + 4)
#define                                 LC4G4D3N_bit        _BIT_ACCESS(CLC4GLS3,4)
// CLC4GLS3<LC4G4D3T>
extern volatile __bit                   LC4G4D3T            __at(0x79BD);	// @ (0xF37 * 8 + 5)
#define                                 LC4G4D3T_bit        _BIT_ACCESS(CLC4GLS3,5)
// CLC4GLS3<LC4G4D4N>
extern volatile __bit                   LC4G4D4N            __at(0x79BE);	// @ (0xF37 * 8 + 6)
#define                                 LC4G4D4N_bit        _BIT_ACCESS(CLC4GLS3,6)
// CLC4GLS3<LC4G4D4T>
extern volatile __bit                   LC4G4D4T            __at(0x79BF);	// @ (0xF37 * 8 + 7)
#define                                 LC4G4D4T_bit        _BIT_ACCESS(CLC4GLS3,7)
// CLC4POL<LC4G4POL>
extern volatile __bit                   LC4G4POL            __at(0x797B);	// @ (0xF2F * 8 + 3)
#define                                 LC4G4POL_bit        _BIT_ACCESS(CLC4POL,3)
// CLC4CON<LC4INTN>
extern volatile __bit                   LC4INTN             __at(0x7973);	// @ (0xF2E * 8 + 3)
#define                                 LC4INTN_bit         _BIT_ACCESS(CLC4CON,3)
// CLC4CON<LC4INTP>
extern volatile __bit                   LC4INTP             __at(0x7974);	// @ (0xF2E * 8 + 4)
#define                                 LC4INTP_bit         _BIT_ACCESS(CLC4CON,4)
// CLC4CON<LC4MODE0>
extern volatile __bit                   LC4MODE0            __at(0x7970);	// @ (0xF2E * 8 + 0)
#define                                 LC4MODE0_bit        _BIT_ACCESS(CLC4CON,0)
// CLC4CON<LC4MODE1>
extern volatile __bit                   LC4MODE1            __at(0x7971);	// @ (0xF2E * 8 + 1)
#define                                 LC4MODE1_bit        _BIT_ACCESS(CLC4CON,1)
// CLC4CON<LC4MODE2>
extern volatile __bit                   LC4MODE2            __at(0x7972);	// @ (0xF2E * 8 + 2)
#define                                 LC4MODE2_bit        _BIT_ACCESS(CLC4CON,2)
// CLC4CON<LC4OUT>
extern volatile __bit                   LC4OUT              __at(0x7975);	// @ (0xF2E * 8 + 5)
#define                                 LC4OUT_bit          _BIT_ACCESS(CLC4CON,5)
// CLC4POL<LC4POL>
extern volatile __bit                   LC4POL              __at(0x797F);	// @ (0xF2F * 8 + 7)
#define                                 LC4POL_bit          _BIT_ACCESS(CLC4POL,7)
// OSCSTAT<LFIOFR>
extern volatile __bit                   LFIOFR              __at(0x4E1);	// @ (0x9C * 8 + 1)
#define                                 LFIOFR_bit          _BIT_ACCESS(OSCSTAT,1)
// PMCON1<LWLO>
extern volatile __bit                   LWLO                __at(0xCAD);	// @ (0x195 * 8 + 5)
#define                                 LWLO_bit            _BIT_ACCESS(PMCON1,5)
// CMOUT<MC1OUT>
extern volatile __bit                   MC1OUT              __at(0x888);	// @ (0x111 * 8 + 0)
#define                                 MC1OUT_bit          _BIT_ACCESS(CMOUT,0)
// CMOUT<MC2OUT>
extern volatile __bit                   MC2OUT              __at(0x889);	// @ (0x111 * 8 + 1)
#define                                 MC2OUT_bit          _BIT_ACCESS(CMOUT,1)
// CMOUT<MC3OUT>
extern volatile __bit                   MC3OUT              __at(0x88A);	// @ (0x111 * 8 + 2)
#define                                 MC3OUT_bit          _BIT_ACCESS(CMOUT,2)
// CMOUT<MC4OUT>
extern volatile __bit                   MC4OUT              __at(0x88B);	// @ (0x111 * 8 + 3)
#define                                 MC4OUT_bit          _BIT_ACCESS(CMOUT,3)
// CMOUT<MC5OUT>
extern volatile __bit                   MC5OUT              __at(0x88C);	// @ (0x111 * 8 + 4)
#define                                 MC5OUT_bit          _BIT_ACCESS(CMOUT,4)
// CMOUT<MC6OUT>
extern volatile __bit                   MC6OUT              __at(0x88D);	// @ (0x111 * 8 + 5)
#define                                 MC6OUT_bit          _BIT_ACCESS(CMOUT,5)
// CMOUT<MC7OUT>
extern volatile __bit                   MC7OUT              __at(0x88E);	// @ (0x111 * 8 + 6)
#define                                 MC7OUT_bit          _BIT_ACCESS(CMOUT,6)
// CMOUT<MC8OUT>
extern volatile __bit                   MC8OUT              __at(0x88F);	// @ (0x111 * 8 + 7)
#define                                 MC8OUT_bit          _BIT_ACCESS(CMOUT,7)
// CLCDATA<MCLC1OUT>
extern volatile __bit                   MCLC1OUT            __at(0x7878);	// @ (0xF0F * 8 + 0)
#define                                 MCLC1OUT_bit        _BIT_ACCESS(CLCDATA,0)
// CLCDATA<MCLC2OUT>
extern volatile __bit                   MCLC2OUT            __at(0x7879);	// @ (0xF0F * 8 + 1)
#define                                 MCLC2OUT_bit        _BIT_ACCESS(CLCDATA,1)
// CLCDATA<MCLC3OUT>
extern volatile __bit                   MCLC3OUT            __at(0x787A);	// @ (0xF0F * 8 + 2)
#define                                 MCLC3OUT_bit        _BIT_ACCESS(CLCDATA,2)
// MD1CON0<MD1BIT>
extern volatile __bit                   MD1BIT              __at(0x18A8);	// @ (0x315 * 8 + 0)
#define                                 MD1BIT_bit          _BIT_ACCESS(MD1CON0,0)
// MD1CARH<MD1CH0>
extern volatile __bit                   MD1CH0              __at(0x18C8);	// @ (0x319 * 8 + 0)
#define                                 MD1CH0_bit          _BIT_ACCESS(MD1CARH,0)
// MD1CARH<MD1CH1>
extern volatile __bit                   MD1CH1              __at(0x18C9);	// @ (0x319 * 8 + 1)
#define                                 MD1CH1_bit          _BIT_ACCESS(MD1CARH,1)
// MD1CARH<MD1CH2>
extern volatile __bit                   MD1CH2              __at(0x18CA);	// @ (0x319 * 8 + 2)
#define                                 MD1CH2_bit          _BIT_ACCESS(MD1CARH,2)
// MD1CARH<MD1CH3>
extern volatile __bit                   MD1CH3              __at(0x18CB);	// @ (0x319 * 8 + 3)
#define                                 MD1CH3_bit          _BIT_ACCESS(MD1CARH,3)
// MD1CARH<MD1CH4>
extern volatile __bit                   MD1CH4              __at(0x18CC);	// @ (0x319 * 8 + 4)
#define                                 MD1CH4_bit          _BIT_ACCESS(MD1CARH,4)
// MD1CON1<MD1CHPOL>
extern volatile __bit                   MD1CHPOL            __at(0x18B5);	// @ (0x316 * 8 + 5)
#define                                 MD1CHPOL_bit        _BIT_ACCESS(MD1CON1,5)
// MD1CON1<MD1CHSYNC>
extern volatile __bit                   MD1CHSYNC           __at(0x18B4);	// @ (0x316 * 8 + 4)
#define                                 MD1CHSYNC_bit       _BIT_ACCESS(MD1CON1,4)
// MD1CARL<MD1CL0>
extern volatile __bit                   MD1CL0              __at(0x18C0);	// @ (0x318 * 8 + 0)
#define                                 MD1CL0_bit          _BIT_ACCESS(MD1CARL,0)
// MD1CARL<MD1CL1>
extern volatile __bit                   MD1CL1              __at(0x18C1);	// @ (0x318 * 8 + 1)
#define                                 MD1CL1_bit          _BIT_ACCESS(MD1CARL,1)
// MD1CARL<MD1CL2>
extern volatile __bit                   MD1CL2              __at(0x18C2);	// @ (0x318 * 8 + 2)
#define                                 MD1CL2_bit          _BIT_ACCESS(MD1CARL,2)
// MD1CARL<MD1CL3>
extern volatile __bit                   MD1CL3              __at(0x18C3);	// @ (0x318 * 8 + 3)
#define                                 MD1CL3_bit          _BIT_ACCESS(MD1CARL,3)
// MD1CARL<MD1CL4>
extern volatile __bit                   MD1CL4              __at(0x18C4);	// @ (0x318 * 8 + 4)
#define                                 MD1CL4_bit          _BIT_ACCESS(MD1CARL,4)
// MD1CON1<MD1CLPOL>
extern volatile __bit                   MD1CLPOL            __at(0x18B1);	// @ (0x316 * 8 + 1)
#define                                 MD1CLPOL_bit        _BIT_ACCESS(MD1CON1,1)
// MD1CON1<MD1CLSYNC>
extern volatile __bit                   MD1CLSYNC           __at(0x18B0);	// @ (0x316 * 8 + 0)
#define                                 MD1CLSYNC_bit       _BIT_ACCESS(MD1CON1,0)
// MD1CON0<MD1EN>
extern volatile __bit                   MD1EN               __at(0x18AF);	// @ (0x315 * 8 + 7)
#define                                 MD1EN_bit           _BIT_ACCESS(MD1CON0,7)
// MD1SRC<MD1MS0>
extern volatile __bit                   MD1MS0              __at(0x18B8);	// @ (0x317 * 8 + 0)
#define                                 MD1MS0_bit          _BIT_ACCESS(MD1SRC,0)
// MD1SRC<MD1MS1>
extern volatile __bit                   MD1MS1              __at(0x18B9);	// @ (0x317 * 8 + 1)
#define                                 MD1MS1_bit          _BIT_ACCESS(MD1SRC,1)
// MD1SRC<MD1MS2>
extern volatile __bit                   MD1MS2              __at(0x18BA);	// @ (0x317 * 8 + 2)
#define                                 MD1MS2_bit          _BIT_ACCESS(MD1SRC,2)
// MD1SRC<MD1MS3>
extern volatile __bit                   MD1MS3              __at(0x18BB);	// @ (0x317 * 8 + 3)
#define                                 MD1MS3_bit          _BIT_ACCESS(MD1SRC,3)
// MD1SRC<MD1MS4>
extern volatile __bit                   MD1MS4              __at(0x18BC);	// @ (0x317 * 8 + 4)
#define                                 MD1MS4_bit          _BIT_ACCESS(MD1SRC,4)
// MD1CON0<MD1OPOL>
extern volatile __bit                   MD1OPOL             __at(0x18AC);	// @ (0x315 * 8 + 4)
#define                                 MD1OPOL_bit         _BIT_ACCESS(MD1CON0,4)
// MD1CON0<MD1OUT>
extern volatile __bit                   MD1OUT              __at(0x18AD);	// @ (0x315 * 8 + 5)
#define                                 MD1OUT_bit          _BIT_ACCESS(MD1CON0,5)
// MD2CON0<MD2BIT>
extern volatile __bit                   MD2BIT              __at(0x18D8);	// @ (0x31B * 8 + 0)
#define                                 MD2BIT_bit          _BIT_ACCESS(MD2CON0,0)
// MD2CARH<MD2CH0>
extern volatile __bit                   MD2CH0              __at(0x18F8);	// @ (0x31F * 8 + 0)
#define                                 MD2CH0_bit          _BIT_ACCESS(MD2CARH,0)
// MD2CARH<MD2CH1>
extern volatile __bit                   MD2CH1              __at(0x18F9);	// @ (0x31F * 8 + 1)
#define                                 MD2CH1_bit          _BIT_ACCESS(MD2CARH,1)
// MD2CARH<MD2CH2>
extern volatile __bit                   MD2CH2              __at(0x18FA);	// @ (0x31F * 8 + 2)
#define                                 MD2CH2_bit          _BIT_ACCESS(MD2CARH,2)
// MD2CARH<MD2CH3>
extern volatile __bit                   MD2CH3              __at(0x18FB);	// @ (0x31F * 8 + 3)
#define                                 MD2CH3_bit          _BIT_ACCESS(MD2CARH,3)
// MD2CARH<MD2CH4>
extern volatile __bit                   MD2CH4              __at(0x18FC);	// @ (0x31F * 8 + 4)
#define                                 MD2CH4_bit          _BIT_ACCESS(MD2CARH,4)
// MD2CON1<MD2CHPOL>
extern volatile __bit                   MD2CHPOL            __at(0x18E5);	// @ (0x31C * 8 + 5)
#define                                 MD2CHPOL_bit        _BIT_ACCESS(MD2CON1,5)
// MD2CON1<MD2CHSYNC>
extern volatile __bit                   MD2CHSYNC           __at(0x18E4);	// @ (0x31C * 8 + 4)
#define                                 MD2CHSYNC_bit       _BIT_ACCESS(MD2CON1,4)
// MD2CARL<MD2CL0>
extern volatile __bit                   MD2CL0              __at(0x18F0);	// @ (0x31E * 8 + 0)
#define                                 MD2CL0_bit          _BIT_ACCESS(MD2CARL,0)
// MD2CARL<MD2CL1>
extern volatile __bit                   MD2CL1              __at(0x18F1);	// @ (0x31E * 8 + 1)
#define                                 MD2CL1_bit          _BIT_ACCESS(MD2CARL,1)
// MD2CARL<MD2CL2>
extern volatile __bit                   MD2CL2              __at(0x18F2);	// @ (0x31E * 8 + 2)
#define                                 MD2CL2_bit          _BIT_ACCESS(MD2CARL,2)
// MD2CARL<MD2CL3>
extern volatile __bit                   MD2CL3              __at(0x18F3);	// @ (0x31E * 8 + 3)
#define                                 MD2CL3_bit          _BIT_ACCESS(MD2CARL,3)
// MD2CARL<MD2CL4>
extern volatile __bit                   MD2CL4              __at(0x18F4);	// @ (0x31E * 8 + 4)
#define                                 MD2CL4_bit          _BIT_ACCESS(MD2CARL,4)
// MD2CON1<MD2CLPOL>
extern volatile __bit                   MD2CLPOL            __at(0x18E1);	// @ (0x31C * 8 + 1)
#define                                 MD2CLPOL_bit        _BIT_ACCESS(MD2CON1,1)
// MD2CON1<MD2CLSYNC>
extern volatile __bit                   MD2CLSYNC           __at(0x18E0);	// @ (0x31C * 8 + 0)
#define                                 MD2CLSYNC_bit       _BIT_ACCESS(MD2CON1,0)
// MD2CON0<MD2EN>
extern volatile __bit                   MD2EN               __at(0x18DF);	// @ (0x31B * 8 + 7)
#define                                 MD2EN_bit           _BIT_ACCESS(MD2CON0,7)
// MD2SRC<MD2MS0>
extern volatile __bit                   MD2MS0              __at(0x18E8);	// @ (0x31D * 8 + 0)
#define                                 MD2MS0_bit          _BIT_ACCESS(MD2SRC,0)
// MD2SRC<MD2MS1>
extern volatile __bit                   MD2MS1              __at(0x18E9);	// @ (0x31D * 8 + 1)
#define                                 MD2MS1_bit          _BIT_ACCESS(MD2SRC,1)
// MD2SRC<MD2MS2>
extern volatile __bit                   MD2MS2              __at(0x18EA);	// @ (0x31D * 8 + 2)
#define                                 MD2MS2_bit          _BIT_ACCESS(MD2SRC,2)
// MD2SRC<MD2MS3>
extern volatile __bit                   MD2MS3              __at(0x18EB);	// @ (0x31D * 8 + 3)
#define                                 MD2MS3_bit          _BIT_ACCESS(MD2SRC,3)
// MD2SRC<MD2MS4>
extern volatile __bit                   MD2MS4              __at(0x18EC);	// @ (0x31D * 8 + 4)
#define                                 MD2MS4_bit          _BIT_ACCESS(MD2SRC,4)
// MD2CON0<MD2OPOL>
extern volatile __bit                   MD2OPOL             __at(0x18DC);	// @ (0x31B * 8 + 4)
#define                                 MD2OPOL_bit         _BIT_ACCESS(MD2CON0,4)
// MD2CON0<MD2OUT>
extern volatile __bit                   MD2OUT              __at(0x18DD);	// @ (0x31B * 8 + 5)
#define                                 MD2OUT_bit          _BIT_ACCESS(MD2CON0,5)
// MD3CON0<MD3BIT>
extern volatile __bit                   MD3BIT              __at(0x10D8);	// @ (0x21B * 8 + 0)
#define                                 MD3BIT_bit          _BIT_ACCESS(MD3CON0,0)
// MD3CARH<MD3CH0>
extern volatile __bit                   MD3CH0              __at(0x10F8);	// @ (0x21F * 8 + 0)
#define                                 MD3CH0_bit          _BIT_ACCESS(MD3CARH,0)
// MD3CARH<MD3CH1>
extern volatile __bit                   MD3CH1              __at(0x10F9);	// @ (0x21F * 8 + 1)
#define                                 MD3CH1_bit          _BIT_ACCESS(MD3CARH,1)
// MD3CARH<MD3CH2>
extern volatile __bit                   MD3CH2              __at(0x10FA);	// @ (0x21F * 8 + 2)
#define                                 MD3CH2_bit          _BIT_ACCESS(MD3CARH,2)
// MD3CARH<MD3CH3>
extern volatile __bit                   MD3CH3              __at(0x10FB);	// @ (0x21F * 8 + 3)
#define                                 MD3CH3_bit          _BIT_ACCESS(MD3CARH,3)
// MD3CARH<MD3CH4>
extern volatile __bit                   MD3CH4              __at(0x10FC);	// @ (0x21F * 8 + 4)
#define                                 MD3CH4_bit          _BIT_ACCESS(MD3CARH,4)
// MD3CON1<MD3CHPOL>
extern volatile __bit                   MD3CHPOL            __at(0x10E5);	// @ (0x21C * 8 + 5)
#define                                 MD3CHPOL_bit        _BIT_ACCESS(MD3CON1,5)
// MD3CON1<MD3CHSYNC>
extern volatile __bit                   MD3CHSYNC           __at(0x10E4);	// @ (0x21C * 8 + 4)
#define                                 MD3CHSYNC_bit       _BIT_ACCESS(MD3CON1,4)
// MD3CARL<MD3CL0>
extern volatile __bit                   MD3CL0              __at(0x10F0);	// @ (0x21E * 8 + 0)
#define                                 MD3CL0_bit          _BIT_ACCESS(MD3CARL,0)
// MD3CARL<MD3CL1>
extern volatile __bit                   MD3CL1              __at(0x10F1);	// @ (0x21E * 8 + 1)
#define                                 MD3CL1_bit          _BIT_ACCESS(MD3CARL,1)
// MD3CARL<MD3CL2>
extern volatile __bit                   MD3CL2              __at(0x10F2);	// @ (0x21E * 8 + 2)
#define                                 MD3CL2_bit          _BIT_ACCESS(MD3CARL,2)
// MD3CARL<MD3CL3>
extern volatile __bit                   MD3CL3              __at(0x10F3);	// @ (0x21E * 8 + 3)
#define                                 MD3CL3_bit          _BIT_ACCESS(MD3CARL,3)
// MD3CARL<MD3CL4>
extern volatile __bit                   MD3CL4              __at(0x10F4);	// @ (0x21E * 8 + 4)
#define                                 MD3CL4_bit          _BIT_ACCESS(MD3CARL,4)
// MD3CON1<MD3CLPOL>
extern volatile __bit                   MD3CLPOL            __at(0x10E1);	// @ (0x21C * 8 + 1)
#define                                 MD3CLPOL_bit        _BIT_ACCESS(MD3CON1,1)
// MD3CON1<MD3CLSYNC>
extern volatile __bit                   MD3CLSYNC           __at(0x10E0);	// @ (0x21C * 8 + 0)
#define                                 MD3CLSYNC_bit       _BIT_ACCESS(MD3CON1,0)
// MD3CON0<MD3EN>
extern volatile __bit                   MD3EN               __at(0x10DF);	// @ (0x21B * 8 + 7)
#define                                 MD3EN_bit           _BIT_ACCESS(MD3CON0,7)
// MD3SRC<MD3MS0>
extern volatile __bit                   MD3MS0              __at(0x10E8);	// @ (0x21D * 8 + 0)
#define                                 MD3MS0_bit          _BIT_ACCESS(MD3SRC,0)
// MD3SRC<MD3MS1>
extern volatile __bit                   MD3MS1              __at(0x10E9);	// @ (0x21D * 8 + 1)
#define                                 MD3MS1_bit          _BIT_ACCESS(MD3SRC,1)
// MD3SRC<MD3MS2>
extern volatile __bit                   MD3MS2              __at(0x10EA);	// @ (0x21D * 8 + 2)
#define                                 MD3MS2_bit          _BIT_ACCESS(MD3SRC,2)
// MD3SRC<MD3MS3>
extern volatile __bit                   MD3MS3              __at(0x10EB);	// @ (0x21D * 8 + 3)
#define                                 MD3MS3_bit          _BIT_ACCESS(MD3SRC,3)
// MD3SRC<MD3MS4>
extern volatile __bit                   MD3MS4              __at(0x10EC);	// @ (0x21D * 8 + 4)
#define                                 MD3MS4_bit          _BIT_ACCESS(MD3SRC,4)
// MD3CON0<MD3OPOL>
extern volatile __bit                   MD3OPOL             __at(0x10DC);	// @ (0x21B * 8 + 4)
#define                                 MD3OPOL_bit         _BIT_ACCESS(MD3CON0,4)
// MD3CON0<MD3OUT>
extern volatile __bit                   MD3OUT              __at(0x10DD);	// @ (0x21B * 8 + 5)
#define                                 MD3OUT_bit          _BIT_ACCESS(MD3CON0,5)
// MD4CON0<MD4BIT>
extern volatile __bit                   MD4BIT              __at(0x68D8);	// @ (0xD1B * 8 + 0)
#define                                 MD4BIT_bit          _BIT_ACCESS(MD4CON0,0)
// MD4CARH<MD4CH0>
extern volatile __bit                   MD4CH0              __at(0x68F8);	// @ (0xD1F * 8 + 0)
#define                                 MD4CH0_bit          _BIT_ACCESS(MD4CARH,0)
// MD4CARH<MD4CH1>
extern volatile __bit                   MD4CH1              __at(0x68F9);	// @ (0xD1F * 8 + 1)
#define                                 MD4CH1_bit          _BIT_ACCESS(MD4CARH,1)
// MD4CARH<MD4CH2>
extern volatile __bit                   MD4CH2              __at(0x68FA);	// @ (0xD1F * 8 + 2)
#define                                 MD4CH2_bit          _BIT_ACCESS(MD4CARH,2)
// MD4CARH<MD4CH3>
extern volatile __bit                   MD4CH3              __at(0x68FB);	// @ (0xD1F * 8 + 3)
#define                                 MD4CH3_bit          _BIT_ACCESS(MD4CARH,3)
// MD4CARH<MD4CH4>
extern volatile __bit                   MD4CH4              __at(0x68FC);	// @ (0xD1F * 8 + 4)
#define                                 MD4CH4_bit          _BIT_ACCESS(MD4CARH,4)
// MD4CON1<MD4CHPOL>
extern volatile __bit                   MD4CHPOL            __at(0x68E5);	// @ (0xD1C * 8 + 5)
#define                                 MD4CHPOL_bit        _BIT_ACCESS(MD4CON1,5)
// MD4CON1<MD4CHSYNC>
extern volatile __bit                   MD4CHSYNC           __at(0x68E4);	// @ (0xD1C * 8 + 4)
#define                                 MD4CHSYNC_bit       _BIT_ACCESS(MD4CON1,4)
// MD4CARL<MD4CL0>
extern volatile __bit                   MD4CL0              __at(0x68F0);	// @ (0xD1E * 8 + 0)
#define                                 MD4CL0_bit          _BIT_ACCESS(MD4CARL,0)
// MD4CARL<MD4CL1>
extern volatile __bit                   MD4CL1              __at(0x68F1);	// @ (0xD1E * 8 + 1)
#define                                 MD4CL1_bit          _BIT_ACCESS(MD4CARL,1)
// MD4CARL<MD4CL2>
extern volatile __bit                   MD4CL2              __at(0x68F2);	// @ (0xD1E * 8 + 2)
#define                                 MD4CL2_bit          _BIT_ACCESS(MD4CARL,2)
// MD4CARL<MD4CL3>
extern volatile __bit                   MD4CL3              __at(0x68F3);	// @ (0xD1E * 8 + 3)
#define                                 MD4CL3_bit          _BIT_ACCESS(MD4CARL,3)
// MD4CARL<MD4CL4>
extern volatile __bit                   MD4CL4              __at(0x68F4);	// @ (0xD1E * 8 + 4)
#define                                 MD4CL4_bit          _BIT_ACCESS(MD4CARL,4)
// MD4CON1<MD4CLPOL>
extern volatile __bit                   MD4CLPOL            __at(0x68E1);	// @ (0xD1C * 8 + 1)
#define                                 MD4CLPOL_bit        _BIT_ACCESS(MD4CON1,1)
// MD4CON1<MD4CLSYNC>
extern volatile __bit                   MD4CLSYNC           __at(0x68E0);	// @ (0xD1C * 8 + 0)
#define                                 MD4CLSYNC_bit       _BIT_ACCESS(MD4CON1,0)
// MD4CON0<MD4EN>
extern volatile __bit                   MD4EN               __at(0x68DF);	// @ (0xD1B * 8 + 7)
#define                                 MD4EN_bit           _BIT_ACCESS(MD4CON0,7)
// MD4SRC<MD4MS0>
extern volatile __bit                   MD4MS0              __at(0x68E8);	// @ (0xD1D * 8 + 0)
#define                                 MD4MS0_bit          _BIT_ACCESS(MD4SRC,0)
// MD4SRC<MD4MS1>
extern volatile __bit                   MD4MS1              __at(0x68E9);	// @ (0xD1D * 8 + 1)
#define                                 MD4MS1_bit          _BIT_ACCESS(MD4SRC,1)
// MD4SRC<MD4MS2>
extern volatile __bit                   MD4MS2              __at(0x68EA);	// @ (0xD1D * 8 + 2)
#define                                 MD4MS2_bit          _BIT_ACCESS(MD4SRC,2)
// MD4SRC<MD4MS3>
extern volatile __bit                   MD4MS3              __at(0x68EB);	// @ (0xD1D * 8 + 3)
#define                                 MD4MS3_bit          _BIT_ACCESS(MD4SRC,3)
// MD4SRC<MD4MS4>
extern volatile __bit                   MD4MS4              __at(0x68EC);	// @ (0xD1D * 8 + 4)
#define                                 MD4MS4_bit          _BIT_ACCESS(MD4SRC,4)
// MD4CON0<MD4OPOL>
extern volatile __bit                   MD4OPOL             __at(0x68DC);	// @ (0xD1B * 8 + 4)
#define                                 MD4OPOL_bit         _BIT_ACCESS(MD4CON0,4)
// MD4CON0<MD4OUT>
extern volatile __bit                   MD4OUT              __at(0x68DD);	// @ (0xD1B * 8 + 5)
#define                                 MD4OUT_bit          _BIT_ACCESS(MD4CON0,5)
// OSCSTAT<MFIOFR>
extern volatile __bit                   MFIOFR              __at(0x4E2);	// @ (0x9C * 8 + 2)
#define                                 MFIOFR_bit          _BIT_ACCESS(OSCSTAT,2)
// CLCDATA<MLC4OUT>
extern volatile __bit                   MLC4OUT             __at(0x787B);	// @ (0xF0F * 8 + 3)
#define                                 MLC4OUT_bit         _BIT_ACCESS(CLCDATA,3)
// PWMEN<MPWM11EN>
extern volatile __bit                   MPWM11EN            __at(0x6C72);	// @ (0xD8E * 8 + 2)
#define                                 MPWM11EN_bit        _BIT_ACCESS(PWMEN,2)
// PWMLD<MPWM11LD>
extern volatile __bit                   MPWM11LD            __at(0x6C7A);	// @ (0xD8F * 8 + 2)
#define                                 MPWM11LD_bit        _BIT_ACCESS(PWMLD,2)
// PWMOUT<MPWM11OUT>
extern volatile __bit                   MPWM11OUT           __at(0x6C82);	// @ (0xD90 * 8 + 2)
#define                                 MPWM11OUT_bit       _BIT_ACCESS(PWMOUT,2)
// PWMEN<MPWM12EN>
extern volatile __bit                   MPWM12EN            __at(0x6C73);	// @ (0xD8E * 8 + 3)
#define                                 MPWM12EN_bit        _BIT_ACCESS(PWMEN,3)
// PWMLD<MPWM12LD>
extern volatile __bit                   MPWM12LD            __at(0x6C7B);	// @ (0xD8F * 8 + 3)
#define                                 MPWM12LD_bit        _BIT_ACCESS(PWMLD,3)
// PWMOUT<MPWM12OUT>
extern volatile __bit                   MPWM12OUT           __at(0x6C83);	// @ (0xD90 * 8 + 3)
#define                                 MPWM12OUT_bit       _BIT_ACCESS(PWMOUT,3)
// PWMEN<MPWM5EN>
extern volatile __bit                   MPWM5EN             __at(0x6C70);	// @ (0xD8E * 8 + 0)
#define                                 MPWM5EN_bit         _BIT_ACCESS(PWMEN,0)
// PWMLD<MPWM5LD>
extern volatile __bit                   MPWM5LD             __at(0x6C78);	// @ (0xD8F * 8 + 0)
#define                                 MPWM5LD_bit         _BIT_ACCESS(PWMLD,0)
// PWMOUT<MPWM5OUT>
extern volatile __bit                   MPWM5OUT            __at(0x6C80);	// @ (0xD90 * 8 + 0)
#define                                 MPWM5OUT_bit        _BIT_ACCESS(PWMOUT,0)
// PWMEN<MPWM6EN>
extern volatile __bit                   MPWM6EN             __at(0x6C71);	// @ (0xD8E * 8 + 1)
#define                                 MPWM6EN_bit         _BIT_ACCESS(PWMEN,1)
// PWMLD<MPWM6LD>
extern volatile __bit                   MPWM6LD             __at(0x6C79);	// @ (0xD8F * 8 + 1)
#define                                 MPWM6LD_bit         _BIT_ACCESS(PWMLD,1)
// PWMOUT<MPWM6OUT>
extern volatile __bit                   MPWM6OUT            __at(0x6C81);	// @ (0xD90 * 8 + 1)
#define                                 MPWM6OUT_bit        _BIT_ACCESS(PWMOUT,1)
// SSP1MSK<MSK0>
extern volatile __bit                   MSK0                __at(0x1098);	// @ (0x213 * 8 + 0)
#define                                 MSK0_bit            _BIT_ACCESS(SSP1MSK,0)
// SSP1MSK<MSK1>
extern volatile __bit                   MSK1                __at(0x1099);	// @ (0x213 * 8 + 1)
#define                                 MSK1_bit            _BIT_ACCESS(SSP1MSK,1)
// SSP1MSK<MSK2>
extern volatile __bit                   MSK2                __at(0x109A);	// @ (0x213 * 8 + 2)
#define                                 MSK2_bit            _BIT_ACCESS(SSP1MSK,2)
// SSP1MSK<MSK3>
extern volatile __bit                   MSK3                __at(0x109B);	// @ (0x213 * 8 + 3)
#define                                 MSK3_bit            _BIT_ACCESS(SSP1MSK,3)
// SSP1MSK<MSK4>
extern volatile __bit                   MSK4                __at(0x109C);	// @ (0x213 * 8 + 4)
#define                                 MSK4_bit            _BIT_ACCESS(SSP1MSK,4)
// SSP1MSK<MSK5>
extern volatile __bit                   MSK5                __at(0x109D);	// @ (0x213 * 8 + 5)
#define                                 MSK5_bit            _BIT_ACCESS(SSP1MSK,5)
// SSP1MSK<MSK6>
extern volatile __bit                   MSK6                __at(0x109E);	// @ (0x213 * 8 + 6)
#define                                 MSK6_bit            _BIT_ACCESS(SSP1MSK,6)
// SSP1MSK<MSK7>
extern volatile __bit                   MSK7                __at(0x109F);	// @ (0x213 * 8 + 7)
#define                                 MSK7_bit            _BIT_ACCESS(SSP1MSK,7)
// ODCONA<ODA0>
extern volatile __bit                   ODA0                __at(0x1460);	// @ (0x28C * 8 + 0)
#define                                 ODA0_bit            _BIT_ACCESS(ODCONA,0)
// ODCONA<ODA1>
extern volatile __bit                   ODA1                __at(0x1461);	// @ (0x28C * 8 + 1)
#define                                 ODA1_bit            _BIT_ACCESS(ODCONA,1)
// ODCONA<ODA2>
extern volatile __bit                   ODA2                __at(0x1462);	// @ (0x28C * 8 + 2)
#define                                 ODA2_bit            _BIT_ACCESS(ODCONA,2)
// ODCONA<ODA3>
extern volatile __bit                   ODA3                __at(0x1463);	// @ (0x28C * 8 + 3)
#define                                 ODA3_bit            _BIT_ACCESS(ODCONA,3)
// ODCONA<ODA4>
extern volatile __bit                   ODA4                __at(0x1464);	// @ (0x28C * 8 + 4)
#define                                 ODA4_bit            _BIT_ACCESS(ODCONA,4)
// ODCONA<ODA5>
extern volatile __bit                   ODA5                __at(0x1465);	// @ (0x28C * 8 + 5)
#define                                 ODA5_bit            _BIT_ACCESS(ODCONA,5)
// ODCONA<ODA6>
extern volatile __bit                   ODA6                __at(0x1466);	// @ (0x28C * 8 + 6)
#define                                 ODA6_bit            _BIT_ACCESS(ODCONA,6)
// ODCONA<ODA7>
extern volatile __bit                   ODA7                __at(0x1467);	// @ (0x28C * 8 + 7)
#define                                 ODA7_bit            _BIT_ACCESS(ODCONA,7)
// ODCONB<ODB0>
extern volatile __bit                   ODB0                __at(0x1468);	// @ (0x28D * 8 + 0)
#define                                 ODB0_bit            _BIT_ACCESS(ODCONB,0)
// ODCONB<ODB1>
extern volatile __bit                   ODB1                __at(0x1469);	// @ (0x28D * 8 + 1)
#define                                 ODB1_bit            _BIT_ACCESS(ODCONB,1)
// ODCONB<ODB2>
extern volatile __bit                   ODB2                __at(0x146A);	// @ (0x28D * 8 + 2)
#define                                 ODB2_bit            _BIT_ACCESS(ODCONB,2)
// ODCONB<ODB3>
extern volatile __bit                   ODB3                __at(0x146B);	// @ (0x28D * 8 + 3)
#define                                 ODB3_bit            _BIT_ACCESS(ODCONB,3)
// ODCONB<ODB4>
extern volatile __bit                   ODB4                __at(0x146C);	// @ (0x28D * 8 + 4)
#define                                 ODB4_bit            _BIT_ACCESS(ODCONB,4)
// ODCONB<ODB5>
extern volatile __bit                   ODB5                __at(0x146D);	// @ (0x28D * 8 + 5)
#define                                 ODB5_bit            _BIT_ACCESS(ODCONB,5)
// ODCONB<ODB6>
extern volatile __bit                   ODB6                __at(0x146E);	// @ (0x28D * 8 + 6)
#define                                 ODB6_bit            _BIT_ACCESS(ODCONB,6)
// ODCONB<ODB7>
extern volatile __bit                   ODB7                __at(0x146F);	// @ (0x28D * 8 + 7)
#define                                 ODB7_bit            _BIT_ACCESS(ODCONB,7)
// ODCONC<ODC0>
extern volatile __bit                   ODC0                __at(0x1470);	// @ (0x28E * 8 + 0)
#define                                 ODC0_bit            _BIT_ACCESS(ODCONC,0)
// ODCONC<ODC1>
extern volatile __bit                   ODC1                __at(0x1471);	// @ (0x28E * 8 + 1)
#define                                 ODC1_bit            _BIT_ACCESS(ODCONC,1)
// ODCONC<ODC2>
extern volatile __bit                   ODC2                __at(0x1472);	// @ (0x28E * 8 + 2)
#define                                 ODC2_bit            _BIT_ACCESS(ODCONC,2)
// ODCONC<ODC3>
extern volatile __bit                   ODC3                __at(0x1473);	// @ (0x28E * 8 + 3)
#define                                 ODC3_bit            _BIT_ACCESS(ODCONC,3)
// ODCONC<ODC4>
extern volatile __bit                   ODC4                __at(0x1474);	// @ (0x28E * 8 + 4)
#define                                 ODC4_bit            _BIT_ACCESS(ODCONC,4)
// ODCONC<ODC5>
extern volatile __bit                   ODC5                __at(0x1475);	// @ (0x28E * 8 + 5)
#define                                 ODC5_bit            _BIT_ACCESS(ODCONC,5)
// ODCONC<ODC6>
extern volatile __bit                   ODC6                __at(0x1476);	// @ (0x28E * 8 + 6)
#define                                 ODC6_bit            _BIT_ACCESS(ODCONC,6)
// ODCONC<ODC7>
extern volatile __bit                   ODC7                __at(0x1477);	// @ (0x28E * 8 + 7)
#define                                 ODC7_bit            _BIT_ACCESS(ODCONC,7)
// ODCOND<ODD0>
extern volatile __bit                   ODD0                __at(0x1478);	// @ (0x28F * 8 + 0)
#define                                 ODD0_bit            _BIT_ACCESS(ODCOND,0)
// ODCOND<ODD1>
extern volatile __bit                   ODD1                __at(0x1479);	// @ (0x28F * 8 + 1)
#define                                 ODD1_bit            _BIT_ACCESS(ODCOND,1)
// ODCOND<ODD2>
extern volatile __bit                   ODD2                __at(0x147A);	// @ (0x28F * 8 + 2)
#define                                 ODD2_bit            _BIT_ACCESS(ODCOND,2)
// ODCOND<ODD3>
extern volatile __bit                   ODD3                __at(0x147B);	// @ (0x28F * 8 + 3)
#define                                 ODD3_bit            _BIT_ACCESS(ODCOND,3)
// ODCOND<ODD4>
extern volatile __bit                   ODD4                __at(0x147C);	// @ (0x28F * 8 + 4)
#define                                 ODD4_bit            _BIT_ACCESS(ODCOND,4)
// ODCOND<ODD5>
extern volatile __bit                   ODD5                __at(0x147D);	// @ (0x28F * 8 + 5)
#define                                 ODD5_bit            _BIT_ACCESS(ODCOND,5)
// ODCOND<ODD6>
extern volatile __bit                   ODD6                __at(0x147E);	// @ (0x28F * 8 + 6)
#define                                 ODD6_bit            _BIT_ACCESS(ODCOND,6)
// ODCOND<ODD7>
extern volatile __bit                   ODD7                __at(0x147F);	// @ (0x28F * 8 + 7)
#define                                 ODD7_bit            _BIT_ACCESS(ODCOND,7)
// ODCONE<ODE0>
extern volatile __bit                   ODE0                __at(0x1480);	// @ (0x290 * 8 + 0)
#define                                 ODE0_bit            _BIT_ACCESS(ODCONE,0)
// ODCONE<ODE1>
extern volatile __bit                   ODE1                __at(0x1481);	// @ (0x290 * 8 + 1)
#define                                 ODE1_bit            _BIT_ACCESS(ODCONE,1)
// ODCONE<ODE2>
extern volatile __bit                   ODE2                __at(0x1482);	// @ (0x290 * 8 + 2)
#define                                 ODE2_bit            _BIT_ACCESS(ODCONE,2)
// RC1STA<OERR>
extern volatile __bit                   OERR                __at(0xCE9);	// @ (0x19D * 8 + 1)
#define                                 OERR_bit            _BIT_ACCESS(RC1STA,1)
// OPA1CON<OPA1EN>
extern volatile __bit                   OPA1EN              __at(0x288F);	// @ (0x511 * 8 + 7)
#define                                 OPA1EN_bit          _BIT_ACCESS(OPA1CON,7)
// OPA1CON<OPA1ORM0>
extern volatile __bit                   OPA1ORM0            __at(0x2888);	// @ (0x511 * 8 + 0)
#define                                 OPA1ORM0_bit        _BIT_ACCESS(OPA1CON,0)
// OPA1CON<OPA1ORM1>
extern volatile __bit                   OPA1ORM1            __at(0x2889);	// @ (0x511 * 8 + 1)
#define                                 OPA1ORM1_bit        _BIT_ACCESS(OPA1CON,1)
// OPA1CON<OPA1ORPOL>
extern volatile __bit                   OPA1ORPOL           __at(0x288A);	// @ (0x511 * 8 + 2)
#define                                 OPA1ORPOL_bit       _BIT_ACCESS(OPA1CON,2)
// OPA1CON<OPA1UG>
extern volatile __bit                   OPA1UG              __at(0x288C);	// @ (0x511 * 8 + 4)
#define                                 OPA1UG_bit          _BIT_ACCESS(OPA1CON,4)
// OPA2CON<OPA2EN>
extern volatile __bit                   OPA2EN              __at(0x28AF);	// @ (0x515 * 8 + 7)
#define                                 OPA2EN_bit          _BIT_ACCESS(OPA2CON,7)
// OPA2CON<OPA2ORM0>
extern volatile __bit                   OPA2ORM0            __at(0x28A8);	// @ (0x515 * 8 + 0)
#define                                 OPA2ORM0_bit        _BIT_ACCESS(OPA2CON,0)
// OPA2CON<OPA2ORM1>
extern volatile __bit                   OPA2ORM1            __at(0x28A9);	// @ (0x515 * 8 + 1)
#define                                 OPA2ORM1_bit        _BIT_ACCESS(OPA2CON,1)
// OPA2CON<OPA2ORPOL>
extern volatile __bit                   OPA2ORPOL           __at(0x28AA);	// @ (0x515 * 8 + 2)
#define                                 OPA2ORPOL_bit       _BIT_ACCESS(OPA2CON,2)
// OPA2CON<OPA2UG>
extern volatile __bit                   OPA2UG              __at(0x28AC);	// @ (0x515 * 8 + 4)
#define                                 OPA2UG_bit          _BIT_ACCESS(OPA2CON,4)
// OPA3CON<OPA3EN>
extern volatile __bit                   OPA3EN              __at(0x28CF);	// @ (0x519 * 8 + 7)
#define                                 OPA3EN_bit          _BIT_ACCESS(OPA3CON,7)
// OPA3CON<OPA3ORM0>
extern volatile __bit                   OPA3ORM0            __at(0x28C8);	// @ (0x519 * 8 + 0)
#define                                 OPA3ORM0_bit        _BIT_ACCESS(OPA3CON,0)
// OPA3CON<OPA3ORM1>
extern volatile __bit                   OPA3ORM1            __at(0x28C9);	// @ (0x519 * 8 + 1)
#define                                 OPA3ORM1_bit        _BIT_ACCESS(OPA3CON,1)
// OPA3CON<OPA3ORPOL>
extern volatile __bit                   OPA3ORPOL           __at(0x28CA);	// @ (0x519 * 8 + 2)
#define                                 OPA3ORPOL_bit       _BIT_ACCESS(OPA3CON,2)
// OPA3CON<OPA3SP>
extern volatile __bit                   OPA3SP              __at(0x28CE);	// @ (0x519 * 8 + 6)
#define                                 OPA3SP_bit          _BIT_ACCESS(OPA3CON,6)
// OPA3CON<OPA3UG>
extern volatile __bit                   OPA3UG              __at(0x28CC);	// @ (0x519 * 8 + 4)
#define                                 OPA3UG_bit          _BIT_ACCESS(OPA3CON,4)
// OPA4CON<OPA4EN>
extern volatile __bit                   OPA4EN              __at(0x28EF);	// @ (0x51D * 8 + 7)
#define                                 OPA4EN_bit          _BIT_ACCESS(OPA4CON,7)
// OPA4CON<OPA4ORM0>
extern volatile __bit                   OPA4ORM0            __at(0x28E8);	// @ (0x51D * 8 + 0)
#define                                 OPA4ORM0_bit        _BIT_ACCESS(OPA4CON,0)
// OPA4CON<OPA4ORM1>
extern volatile __bit                   OPA4ORM1            __at(0x28E9);	// @ (0x51D * 8 + 1)
#define                                 OPA4ORM1_bit        _BIT_ACCESS(OPA4CON,1)
// OPA4CON<OPA4ORPOL>
extern volatile __bit                   OPA4ORPOL           __at(0x28EA);	// @ (0x51D * 8 + 2)
#define                                 OPA4ORPOL_bit       _BIT_ACCESS(OPA4CON,2)
// OPA4CON<OPA4SP>
extern volatile __bit                   OPA4SP              __at(0x28EE);	// @ (0x51D * 8 + 6)
#define                                 OPA4SP_bit          _BIT_ACCESS(OPA4CON,6)
// OPA4CON<OPA4UG>
extern volatile __bit                   OPA4UG              __at(0x28EC);	// @ (0x51D * 8 + 4)
#define                                 OPA4UG_bit          _BIT_ACCESS(OPA4CON,4)
// PIE2<OSFIE>
extern volatile __bit                   OSFIE               __at(0x497);	// @ (0x92 * 8 + 7)
#define                                 OSFIE_bit           _BIT_ACCESS(PIE2,7)
// PIR2<OSFIF>
extern volatile __bit                   OSFIF               __at(0x97);	// @ (0x12 * 8 + 7)
#define                                 OSFIF_bit           _BIT_ACCESS(PIR2,7)
// OSCSTAT<OSTS>
extern volatile __bit                   OSTS                __at(0x4E5);	// @ (0x9C * 8 + 5)
#define                                 OSTS_bit            _BIT_ACCESS(OSCSTAT,5)
// CCPTMRS2<P3TSEL0>
extern volatile __bit                   P3TSEL0             __at(0x14F8);	// @ (0x29F * 8 + 0)
#define                                 P3TSEL0_bit         _BIT_ACCESS(CCPTMRS2,0)
// CCPTMRS2<P3TSEL1>
extern volatile __bit                   P3TSEL1             __at(0x14F9);	// @ (0x29F * 8 + 1)
#define                                 P3TSEL1_bit         _BIT_ACCESS(CCPTMRS2,1)
// CCPTMRS2<P4TSEL0>
extern volatile __bit                   P4TSEL0             __at(0x14FA);	// @ (0x29F * 8 + 2)
#define                                 P4TSEL0_bit         _BIT_ACCESS(CCPTMRS2,2)
// CCPTMRS2<P4TSEL1>
extern volatile __bit                   P4TSEL1             __at(0x14FB);	// @ (0x29F * 8 + 3)
#define                                 P4TSEL1_bit         _BIT_ACCESS(CCPTMRS2,3)
// CCPTMRS2<P9TSEL0>
extern volatile __bit                   P9TSEL0             __at(0x14FC);	// @ (0x29F * 8 + 4)
#define                                 P9TSEL0_bit         _BIT_ACCESS(CCPTMRS2,4)
// CCPTMRS2<P9TSEL1>
extern volatile __bit                   P9TSEL1             __at(0x14FD);	// @ (0x29F * 8 + 5)
#define                                 P9TSEL1_bit         _BIT_ACCESS(CCPTMRS2,5)
// SSP1CON3<PCIE>
extern volatile __bit                   PCIE                __at(0x10BE);	// @ (0x217 * 8 + 6)
#define                                 PCIE_bit            _BIT_ACCESS(SSP1CON3,6)
// INTCON<PEIE>
extern volatile __bit                   PEIE                __at(0x5E);	// @ (0xB * 8 + 6)
#define                                 PEIE_bit            _BIT_ACCESS(INTCON,6)
// SSP1CON2<PEN>
extern volatile __bit                   PEN                 __at(0x10B2);	// @ (0x216 * 8 + 2)
#define                                 PEN_bit             _BIT_ACCESS(SSP1CON2,2)
// OSCSTAT<PLLR>
extern volatile __bit                   PLLR                __at(0x4E6);	// @ (0x9C * 8 + 6)
#define                                 PLLR_bit            _BIT_ACCESS(OSCSTAT,6)
// PPSLOCK<PPSLOCKED>
extern volatile __bit                   PPSLOCKED           __at(0x7060);	// @ (0xE0C * 8 + 0)
#define                                 PPSLOCKED_bit       _BIT_ACCESS(PPSLOCK,0)
// OPTION_REG<PSA>
extern volatile __bit                   PSA                 __at(0x4BB);	// @ (0x97 * 8 + 3)
#define                                 PSA_bit             _BIT_ACCESS(OPTION_REG,3)
// PWM10DCL<PWM10DC0>
extern volatile __bit                   PWM10DC0            __at(0x30EE);	// @ (0x61D * 8 + 6)
#define                                 PWM10DC0_bit        _BIT_ACCESS(PWM10DCL,6)
// PWM10DCL<PWM10DC1>
extern volatile __bit                   PWM10DC1            __at(0x30EF);	// @ (0x61D * 8 + 7)
#define                                 PWM10DC1_bit        _BIT_ACCESS(PWM10DCL,7)
// PWM10DCH<PWM10DC2>
extern volatile __bit                   PWM10DC2            __at(0x30F0);	// @ (0x61E * 8 + 0)
#define                                 PWM10DC2_bit        _BIT_ACCESS(PWM10DCH,0)
// PWM10DCH<PWM10DC3>
extern volatile __bit                   PWM10DC3            __at(0x30F1);	// @ (0x61E * 8 + 1)
#define                                 PWM10DC3_bit        _BIT_ACCESS(PWM10DCH,1)
// PWM10DCH<PWM10DC4>
extern volatile __bit                   PWM10DC4            __at(0x30F2);	// @ (0x61E * 8 + 2)
#define                                 PWM10DC4_bit        _BIT_ACCESS(PWM10DCH,2)
// PWM10DCH<PWM10DC5>
extern volatile __bit                   PWM10DC5            __at(0x30F3);	// @ (0x61E * 8 + 3)
#define                                 PWM10DC5_bit        _BIT_ACCESS(PWM10DCH,3)
// PWM10DCH<PWM10DC6>
extern volatile __bit                   PWM10DC6            __at(0x30F4);	// @ (0x61E * 8 + 4)
#define                                 PWM10DC6_bit        _BIT_ACCESS(PWM10DCH,4)
// PWM10DCH<PWM10DC7>
extern volatile __bit                   PWM10DC7            __at(0x30F5);	// @ (0x61E * 8 + 5)
#define                                 PWM10DC7_bit        _BIT_ACCESS(PWM10DCH,5)
// PWM10DCH<PWM10DC8>
extern volatile __bit                   PWM10DC8            __at(0x30F6);	// @ (0x61E * 8 + 6)
#define                                 PWM10DC8_bit        _BIT_ACCESS(PWM10DCH,6)
// PWM10DCH<PWM10DC9>
extern volatile __bit                   PWM10DC9            __at(0x30F7);	// @ (0x61E * 8 + 7)
#define                                 PWM10DC9_bit        _BIT_ACCESS(PWM10DCH,7)
// PWM10CON<PWM10EN>
extern volatile __bit                   PWM10EN             __at(0x30FF);	// @ (0x61F * 8 + 7)
#define                                 PWM10EN_bit         _BIT_ACCESS(PWM10CON,7)
// PWM10CON<PWM10OUT>
extern volatile __bit                   PWM10OUT            __at(0x30FD);	// @ (0x61F * 8 + 5)
#define                                 PWM10OUT_bit        _BIT_ACCESS(PWM10CON,5)
// PWM10CON<PWM10POL>
extern volatile __bit                   PWM10POL            __at(0x30FC);	// @ (0x61F * 8 + 4)
#define                                 PWM10POL_bit        _BIT_ACCESS(PWM10CON,4)
// PWM11CLKCON<PWM11CS0>
extern volatile __bit                   PWM11CS0            __at(0x6DF0);	// @ (0xDBE * 8 + 0)
#define                                 PWM11CS0_bit        _BIT_ACCESS(PWM11CLKCON,0)
// PWM11CLKCON<PWM11CS1>
extern volatile __bit                   PWM11CS1            __at(0x6DF1);	// @ (0xDBE * 8 + 1)
#define                                 PWM11CS1_bit        _BIT_ACCESS(PWM11CLKCON,1)
// PWM11CLKCON<PWM11CS2>
extern volatile __bit                   PWM11CS2            __at(0x6DF2);	// @ (0xDBE * 8 + 2)
#define                                 PWM11CS2_bit        _BIT_ACCESS(PWM11CLKCON,2)
// PWM11DCH<PWM11DCH0>
extern volatile __bit                   PWM11DCH0           __at(0x6DA0);	// @ (0xDB4 * 8 + 0)
#define                                 PWM11DCH0_bit       _BIT_ACCESS(PWM11DCH,0)
// PWM11DCH<PWM11DCH1>
extern volatile __bit                   PWM11DCH1           __at(0x6DA1);	// @ (0xDB4 * 8 + 1)
#define                                 PWM11DCH1_bit       _BIT_ACCESS(PWM11DCH,1)
// PWM11DCH<PWM11DCH2>
extern volatile __bit                   PWM11DCH2           __at(0x6DA2);	// @ (0xDB4 * 8 + 2)
#define                                 PWM11DCH2_bit       _BIT_ACCESS(PWM11DCH,2)
// PWM11DCH<PWM11DCH3>
extern volatile __bit                   PWM11DCH3           __at(0x6DA3);	// @ (0xDB4 * 8 + 3)
#define                                 PWM11DCH3_bit       _BIT_ACCESS(PWM11DCH,3)
// PWM11DCH<PWM11DCH4>
extern volatile __bit                   PWM11DCH4           __at(0x6DA4);	// @ (0xDB4 * 8 + 4)
#define                                 PWM11DCH4_bit       _BIT_ACCESS(PWM11DCH,4)
// PWM11DCH<PWM11DCH5>
extern volatile __bit                   PWM11DCH5           __at(0x6DA5);	// @ (0xDB4 * 8 + 5)
#define                                 PWM11DCH5_bit       _BIT_ACCESS(PWM11DCH,5)
// PWM11DCH<PWM11DCH6>
extern volatile __bit                   PWM11DCH6           __at(0x6DA6);	// @ (0xDB4 * 8 + 6)
#define                                 PWM11DCH6_bit       _BIT_ACCESS(PWM11DCH,6)
// PWM11DCH<PWM11DCH7>
extern volatile __bit                   PWM11DCH7           __at(0x6DA7);	// @ (0xDB4 * 8 + 7)
#define                                 PWM11DCH7_bit       _BIT_ACCESS(PWM11DCH,7)
// PWM11INTE<PWM11DCIE>
extern volatile __bit                   PWM11DCIE           __at(0x6DE1);	// @ (0xDBC * 8 + 1)
#define                                 PWM11DCIE_bit       _BIT_ACCESS(PWM11INTE,1)
// PWM11INTF<PWM11DCIF>
extern volatile __bit                   PWM11DCIF           __at(0x6DE9);	// @ (0xDBD * 8 + 1)
#define                                 PWM11DCIF_bit       _BIT_ACCESS(PWM11INTF,1)
// PWM11DCL<PWM11DCL0>
extern volatile __bit                   PWM11DCL0           __at(0x6D98);	// @ (0xDB3 * 8 + 0)
#define                                 PWM11DCL0_bit       _BIT_ACCESS(PWM11DCL,0)
// PWM11DCL<PWM11DCL1>
extern volatile __bit                   PWM11DCL1           __at(0x6D99);	// @ (0xDB3 * 8 + 1)
#define                                 PWM11DCL1_bit       _BIT_ACCESS(PWM11DCL,1)
// PWM11DCL<PWM11DCL2>
extern volatile __bit                   PWM11DCL2           __at(0x6D9A);	// @ (0xDB3 * 8 + 2)
#define                                 PWM11DCL2_bit       _BIT_ACCESS(PWM11DCL,2)
// PWM11DCL<PWM11DCL3>
extern volatile __bit                   PWM11DCL3           __at(0x6D9B);	// @ (0xDB3 * 8 + 3)
#define                                 PWM11DCL3_bit       _BIT_ACCESS(PWM11DCL,3)
// PWM11DCL<PWM11DCL4>
extern volatile __bit                   PWM11DCL4           __at(0x6D9C);	// @ (0xDB3 * 8 + 4)
#define                                 PWM11DCL4_bit       _BIT_ACCESS(PWM11DCL,4)
// PWM11DCL<PWM11DCL5>
extern volatile __bit                   PWM11DCL5           __at(0x6D9D);	// @ (0xDB3 * 8 + 5)
#define                                 PWM11DCL5_bit       _BIT_ACCESS(PWM11DCL,5)
// PWM11DCL<PWM11DCL6>
extern volatile __bit                   PWM11DCL6           __at(0x6D9E);	// @ (0xDB3 * 8 + 6)
#define                                 PWM11DCL6_bit       _BIT_ACCESS(PWM11DCL,6)
// PWM11DCL<PWM11DCL7>
extern volatile __bit                   PWM11DCL7           __at(0x6D9F);	// @ (0xDB3 * 8 + 7)
#define                                 PWM11DCL7_bit       _BIT_ACCESS(PWM11DCL,7)
// PWM11CON<PWM11EN>
extern volatile __bit                   PWM11EN             __at(0x6DDF);	// @ (0xDBB * 8 + 7)
#define                                 PWM11EN_bit         _BIT_ACCESS(PWM11CON,7)
// PIE6<PWM11IE>
extern volatile __bit                   PWM11IE             __at(0x4B2);	// @ (0x96 * 8 + 2)
#define                                 PWM11IE_bit         _BIT_ACCESS(PIE6,2)
// PIR6<PWM11IF>
extern volatile __bit                   PWM11IF             __at(0xB2);	// @ (0x16 * 8 + 2)
#define                                 PWM11IF_bit         _BIT_ACCESS(PIR6,2)
// PWM11LDCON<PWM11LD>
extern volatile __bit                   PWM11LD             __at(0x6DFF);	// @ (0xDBF * 8 + 7)
#define                                 PWM11LD_bit         _BIT_ACCESS(PWM11LDCON,7)
// PWM11LDCON<PWM11LDM>
extern volatile __bit                   PWM11LDM            __at(0x6DFE);	// @ (0xDBF * 8 + 6)
#define                                 PWM11LDM_bit        _BIT_ACCESS(PWM11LDCON,6)
// PWM11LDCON<PWM11LDS0>
extern volatile __bit                   PWM11LDS0           __at(0x6DF8);	// @ (0xDBF * 8 + 0)
#define                                 PWM11LDS0_bit       _BIT_ACCESS(PWM11LDCON,0)
// PWM11LDCON<PWM11LDS1>
extern volatile __bit                   PWM11LDS1           __at(0x6DF9);	// @ (0xDBF * 8 + 1)
#define                                 PWM11LDS1_bit       _BIT_ACCESS(PWM11LDCON,1)
// PWM11CON<PWM11MODE0>
extern volatile __bit                   PWM11MODE0          __at(0x6DDA);	// @ (0xDBB * 8 + 2)
#define                                 PWM11MODE0_bit      _BIT_ACCESS(PWM11CON,2)
// PWM11CON<PWM11MODE1>
extern volatile __bit                   PWM11MODE1          __at(0x6DDB);	// @ (0xDBB * 8 + 3)
#define                                 PWM11MODE1_bit      _BIT_ACCESS(PWM11CON,3)
// PWM11OFH<PWM11OFH0>
extern volatile __bit                   PWM11OFH0           __at(0x6DC0);	// @ (0xDB8 * 8 + 0)
#define                                 PWM11OFH0_bit       _BIT_ACCESS(PWM11OFH,0)
// PWM11OFH<PWM11OFH1>
extern volatile __bit                   PWM11OFH1           __at(0x6DC1);	// @ (0xDB8 * 8 + 1)
#define                                 PWM11OFH1_bit       _BIT_ACCESS(PWM11OFH,1)
// PWM11OFH<PWM11OFH2>
extern volatile __bit                   PWM11OFH2           __at(0x6DC2);	// @ (0xDB8 * 8 + 2)
#define                                 PWM11OFH2_bit       _BIT_ACCESS(PWM11OFH,2)
// PWM11OFH<PWM11OFH3>
extern volatile __bit                   PWM11OFH3           __at(0x6DC3);	// @ (0xDB8 * 8 + 3)
#define                                 PWM11OFH3_bit       _BIT_ACCESS(PWM11OFH,3)
// PWM11OFH<PWM11OFH4>
extern volatile __bit                   PWM11OFH4           __at(0x6DC4);	// @ (0xDB8 * 8 + 4)
#define                                 PWM11OFH4_bit       _BIT_ACCESS(PWM11OFH,4)
// PWM11OFH<PWM11OFH5>
extern volatile __bit                   PWM11OFH5           __at(0x6DC5);	// @ (0xDB8 * 8 + 5)
#define                                 PWM11OFH5_bit       _BIT_ACCESS(PWM11OFH,5)
// PWM11OFH<PWM11OFH6>
extern volatile __bit                   PWM11OFH6           __at(0x6DC6);	// @ (0xDB8 * 8 + 6)
#define                                 PWM11OFH6_bit       _BIT_ACCESS(PWM11OFH,6)
// PWM11OFH<PWM11OFH7>
extern volatile __bit                   PWM11OFH7           __at(0x6DC7);	// @ (0xDB8 * 8 + 7)
#define                                 PWM11OFH7_bit       _BIT_ACCESS(PWM11OFH,7)
// PWM11INTE<PWM11OFIE>
extern volatile __bit                   PWM11OFIE           __at(0x6DE3);	// @ (0xDBC * 8 + 3)
#define                                 PWM11OFIE_bit       _BIT_ACCESS(PWM11INTE,3)
// PWM11INTF<PWM11OFIF>
extern volatile __bit                   PWM11OFIF           __at(0x6DEB);	// @ (0xDBD * 8 + 3)
#define                                 PWM11OFIF_bit       _BIT_ACCESS(PWM11INTF,3)
// PWM11OFL<PWM11OFL0>
extern volatile __bit                   PWM11OFL0           __at(0x6DB8);	// @ (0xDB7 * 8 + 0)
#define                                 PWM11OFL0_bit       _BIT_ACCESS(PWM11OFL,0)
// PWM11OFL<PWM11OFL1>
extern volatile __bit                   PWM11OFL1           __at(0x6DB9);	// @ (0xDB7 * 8 + 1)
#define                                 PWM11OFL1_bit       _BIT_ACCESS(PWM11OFL,1)
// PWM11OFL<PWM11OFL2>
extern volatile __bit                   PWM11OFL2           __at(0x6DBA);	// @ (0xDB7 * 8 + 2)
#define                                 PWM11OFL2_bit       _BIT_ACCESS(PWM11OFL,2)
// PWM11OFL<PWM11OFL3>
extern volatile __bit                   PWM11OFL3           __at(0x6DBB);	// @ (0xDB7 * 8 + 3)
#define                                 PWM11OFL3_bit       _BIT_ACCESS(PWM11OFL,3)
// PWM11OFL<PWM11OFL4>
extern volatile __bit                   PWM11OFL4           __at(0x6DBC);	// @ (0xDB7 * 8 + 4)
#define                                 PWM11OFL4_bit       _BIT_ACCESS(PWM11OFL,4)
// PWM11OFL<PWM11OFL5>
extern volatile __bit                   PWM11OFL5           __at(0x6DBD);	// @ (0xDB7 * 8 + 5)
#define                                 PWM11OFL5_bit       _BIT_ACCESS(PWM11OFL,5)
// PWM11OFL<PWM11OFL6>
extern volatile __bit                   PWM11OFL6           __at(0x6DBE);	// @ (0xDB7 * 8 + 6)
#define                                 PWM11OFL6_bit       _BIT_ACCESS(PWM11OFL,6)
// PWM11OFL<PWM11OFL7>
extern volatile __bit                   PWM11OFL7           __at(0x6DBF);	// @ (0xDB7 * 8 + 7)
#define                                 PWM11OFL7_bit       _BIT_ACCESS(PWM11OFL,7)
// PWM11OFCON<PWM11OFM0>
extern volatile __bit                   PWM11OFM0           __at(0x6E05);	// @ (0xDC0 * 8 + 5)
#define                                 PWM11OFM0_bit       _BIT_ACCESS(PWM11OFCON,5)
// PWM11OFCON<PWM11OFM1>
extern volatile __bit                   PWM11OFM1           __at(0x6E06);	// @ (0xDC0 * 8 + 6)
#define                                 PWM11OFM1_bit       _BIT_ACCESS(PWM11OFCON,6)
// PWM11OFCON<PWM11OFMC>
extern volatile __bit                   PWM11OFMC           __at(0x6E04);	// @ (0xDC0 * 8 + 4)
#define                                 PWM11OFMC_bit       _BIT_ACCESS(PWM11OFCON,4)
// PWM11OFCON<PWM11OFS0>
extern volatile __bit                   PWM11OFS0           __at(0x6E00);	// @ (0xDC0 * 8 + 0)
#define                                 PWM11OFS0_bit       _BIT_ACCESS(PWM11OFCON,0)
// PWM11OFCON<PWM11OFS1>
extern volatile __bit                   PWM11OFS1           __at(0x6E01);	// @ (0xDC0 * 8 + 1)
#define                                 PWM11OFS1_bit       _BIT_ACCESS(PWM11OFCON,1)
// PWM11CON<PWM11OUT>
extern volatile __bit                   PWM11OUT            __at(0x6DDD);	// @ (0xDBB * 8 + 5)
#define                                 PWM11OUT_bit        _BIT_ACCESS(PWM11CON,5)
// PWM11PHH<PWM11PHH0>
extern volatile __bit                   PWM11PHH0           __at(0x6D90);	// @ (0xDB2 * 8 + 0)
#define                                 PWM11PHH0_bit       _BIT_ACCESS(PWM11PHH,0)
// PWM11PHH<PWM11PHH1>
extern volatile __bit                   PWM11PHH1           __at(0x6D91);	// @ (0xDB2 * 8 + 1)
#define                                 PWM11PHH1_bit       _BIT_ACCESS(PWM11PHH,1)
// PWM11PHH<PWM11PHH2>
extern volatile __bit                   PWM11PHH2           __at(0x6D92);	// @ (0xDB2 * 8 + 2)
#define                                 PWM11PHH2_bit       _BIT_ACCESS(PWM11PHH,2)
// PWM11PHH<PWM11PHH3>
extern volatile __bit                   PWM11PHH3           __at(0x6D93);	// @ (0xDB2 * 8 + 3)
#define                                 PWM11PHH3_bit       _BIT_ACCESS(PWM11PHH,3)
// PWM11PHH<PWM11PHH4>
extern volatile __bit                   PWM11PHH4           __at(0x6D94);	// @ (0xDB2 * 8 + 4)
#define                                 PWM11PHH4_bit       _BIT_ACCESS(PWM11PHH,4)
// PWM11PHH<PWM11PHH5>
extern volatile __bit                   PWM11PHH5           __at(0x6D95);	// @ (0xDB2 * 8 + 5)
#define                                 PWM11PHH5_bit       _BIT_ACCESS(PWM11PHH,5)
// PWM11PHH<PWM11PHH6>
extern volatile __bit                   PWM11PHH6           __at(0x6D96);	// @ (0xDB2 * 8 + 6)
#define                                 PWM11PHH6_bit       _BIT_ACCESS(PWM11PHH,6)
// PWM11PHH<PWM11PHH7>
extern volatile __bit                   PWM11PHH7           __at(0x6D97);	// @ (0xDB2 * 8 + 7)
#define                                 PWM11PHH7_bit       _BIT_ACCESS(PWM11PHH,7)
// PWM11INTE<PWM11PHIE>
extern volatile __bit                   PWM11PHIE           __at(0x6DE2);	// @ (0xDBC * 8 + 2)
#define                                 PWM11PHIE_bit       _BIT_ACCESS(PWM11INTE,2)
// PWM11INTF<PWM11PHIF>
extern volatile __bit                   PWM11PHIF           __at(0x6DEA);	// @ (0xDBD * 8 + 2)
#define                                 PWM11PHIF_bit       _BIT_ACCESS(PWM11INTF,2)
// PWM11PHL<PWM11PHL0>
extern volatile __bit                   PWM11PHL0           __at(0x6D88);	// @ (0xDB1 * 8 + 0)
#define                                 PWM11PHL0_bit       _BIT_ACCESS(PWM11PHL,0)
// PWM11PHL<PWM11PHL1>
extern volatile __bit                   PWM11PHL1           __at(0x6D89);	// @ (0xDB1 * 8 + 1)
#define                                 PWM11PHL1_bit       _BIT_ACCESS(PWM11PHL,1)
// PWM11PHL<PWM11PHL2>
extern volatile __bit                   PWM11PHL2           __at(0x6D8A);	// @ (0xDB1 * 8 + 2)
#define                                 PWM11PHL2_bit       _BIT_ACCESS(PWM11PHL,2)
// PWM11PHL<PWM11PHL3>
extern volatile __bit                   PWM11PHL3           __at(0x6D8B);	// @ (0xDB1 * 8 + 3)
#define                                 PWM11PHL3_bit       _BIT_ACCESS(PWM11PHL,3)
// PWM11PHL<PWM11PHL4>
extern volatile __bit                   PWM11PHL4           __at(0x6D8C);	// @ (0xDB1 * 8 + 4)
#define                                 PWM11PHL4_bit       _BIT_ACCESS(PWM11PHL,4)
// PWM11PHL<PWM11PHL5>
extern volatile __bit                   PWM11PHL5           __at(0x6D8D);	// @ (0xDB1 * 8 + 5)
#define                                 PWM11PHL5_bit       _BIT_ACCESS(PWM11PHL,5)
// PWM11PHL<PWM11PHL6>
extern volatile __bit                   PWM11PHL6           __at(0x6D8E);	// @ (0xDB1 * 8 + 6)
#define                                 PWM11PHL6_bit       _BIT_ACCESS(PWM11PHL,6)
// PWM11PHL<PWM11PHL7>
extern volatile __bit                   PWM11PHL7           __at(0x6D8F);	// @ (0xDB1 * 8 + 7)
#define                                 PWM11PHL7_bit       _BIT_ACCESS(PWM11PHL,7)
// PWM11CON<PWM11POL>
extern volatile __bit                   PWM11POL            __at(0x6DDC);	// @ (0xDBB * 8 + 4)
#define                                 PWM11POL_bit        _BIT_ACCESS(PWM11CON,4)
// PWM11PRH<PWM11PRH0>
extern volatile __bit                   PWM11PRH0           __at(0x6DB0);	// @ (0xDB6 * 8 + 0)
#define                                 PWM11PRH0_bit       _BIT_ACCESS(PWM11PRH,0)
// PWM11PRH<PWM11PRH1>
extern volatile __bit                   PWM11PRH1           __at(0x6DB1);	// @ (0xDB6 * 8 + 1)
#define                                 PWM11PRH1_bit       _BIT_ACCESS(PWM11PRH,1)
// PWM11PRH<PWM11PRH2>
extern volatile __bit                   PWM11PRH2           __at(0x6DB2);	// @ (0xDB6 * 8 + 2)
#define                                 PWM11PRH2_bit       _BIT_ACCESS(PWM11PRH,2)
// PWM11PRH<PWM11PRH3>
extern volatile __bit                   PWM11PRH3           __at(0x6DB3);	// @ (0xDB6 * 8 + 3)
#define                                 PWM11PRH3_bit       _BIT_ACCESS(PWM11PRH,3)
// PWM11PRH<PWM11PRH4>
extern volatile __bit                   PWM11PRH4           __at(0x6DB4);	// @ (0xDB6 * 8 + 4)
#define                                 PWM11PRH4_bit       _BIT_ACCESS(PWM11PRH,4)
// PWM11PRH<PWM11PRH5>
extern volatile __bit                   PWM11PRH5           __at(0x6DB5);	// @ (0xDB6 * 8 + 5)
#define                                 PWM11PRH5_bit       _BIT_ACCESS(PWM11PRH,5)
// PWM11PRH<PWM11PRH6>
extern volatile __bit                   PWM11PRH6           __at(0x6DB6);	// @ (0xDB6 * 8 + 6)
#define                                 PWM11PRH6_bit       _BIT_ACCESS(PWM11PRH,6)
// PWM11PRH<PWM11PRH7>
extern volatile __bit                   PWM11PRH7           __at(0x6DB7);	// @ (0xDB6 * 8 + 7)
#define                                 PWM11PRH7_bit       _BIT_ACCESS(PWM11PRH,7)
// PWM11INTE<PWM11PRIE>
extern volatile __bit                   PWM11PRIE           __at(0x6DE0);	// @ (0xDBC * 8 + 0)
#define                                 PWM11PRIE_bit       _BIT_ACCESS(PWM11INTE,0)
// PWM11INTF<PWM11PRIF>
extern volatile __bit                   PWM11PRIF           __at(0x6DE8);	// @ (0xDBD * 8 + 0)
#define                                 PWM11PRIF_bit       _BIT_ACCESS(PWM11INTF,0)
// PWM11PRL<PWM11PRL0>
extern volatile __bit                   PWM11PRL0           __at(0x6DA8);	// @ (0xDB5 * 8 + 0)
#define                                 PWM11PRL0_bit       _BIT_ACCESS(PWM11PRL,0)
// PWM11PRL<PWM11PRL1>
extern volatile __bit                   PWM11PRL1           __at(0x6DA9);	// @ (0xDB5 * 8 + 1)
#define                                 PWM11PRL1_bit       _BIT_ACCESS(PWM11PRL,1)
// PWM11PRL<PWM11PRL2>
extern volatile __bit                   PWM11PRL2           __at(0x6DAA);	// @ (0xDB5 * 8 + 2)
#define                                 PWM11PRL2_bit       _BIT_ACCESS(PWM11PRL,2)
// PWM11PRL<PWM11PRL3>
extern volatile __bit                   PWM11PRL3           __at(0x6DAB);	// @ (0xDB5 * 8 + 3)
#define                                 PWM11PRL3_bit       _BIT_ACCESS(PWM11PRL,3)
// PWM11PRL<PWM11PRL4>
extern volatile __bit                   PWM11PRL4           __at(0x6DAC);	// @ (0xDB5 * 8 + 4)
#define                                 PWM11PRL4_bit       _BIT_ACCESS(PWM11PRL,4)
// PWM11PRL<PWM11PRL5>
extern volatile __bit                   PWM11PRL5           __at(0x6DAD);	// @ (0xDB5 * 8 + 5)
#define                                 PWM11PRL5_bit       _BIT_ACCESS(PWM11PRL,5)
// PWM11PRL<PWM11PRL6>
extern volatile __bit                   PWM11PRL6           __at(0x6DAE);	// @ (0xDB5 * 8 + 6)
#define                                 PWM11PRL6_bit       _BIT_ACCESS(PWM11PRL,6)
// PWM11PRL<PWM11PRL7>
extern volatile __bit                   PWM11PRL7           __at(0x6DAF);	// @ (0xDB5 * 8 + 7)
#define                                 PWM11PRL7_bit       _BIT_ACCESS(PWM11PRL,7)
// PWM11CLKCON<PWM11PS0>
extern volatile __bit                   PWM11PS0            __at(0x6DF4);	// @ (0xDBE * 8 + 4)
#define                                 PWM11PS0_bit        _BIT_ACCESS(PWM11CLKCON,4)
// PWM11CLKCON<PWM11PS1>
extern volatile __bit                   PWM11PS1            __at(0x6DF5);	// @ (0xDBE * 8 + 5)
#define                                 PWM11PS1_bit        _BIT_ACCESS(PWM11CLKCON,5)
// PWM11CLKCON<PWM11PS2>
extern volatile __bit                   PWM11PS2            __at(0x6DF6);	// @ (0xDBE * 8 + 6)
#define                                 PWM11PS2_bit        _BIT_ACCESS(PWM11CLKCON,6)
// PWM11TMRH<PWM11TMRH0>
extern volatile __bit                   PWM11TMRH0          __at(0x6DD0);	// @ (0xDBA * 8 + 0)
#define                                 PWM11TMRH0_bit      _BIT_ACCESS(PWM11TMRH,0)
// PWM11TMRH<PWM11TMRH1>
extern volatile __bit                   PWM11TMRH1          __at(0x6DD1);	// @ (0xDBA * 8 + 1)
#define                                 PWM11TMRH1_bit      _BIT_ACCESS(PWM11TMRH,1)
// PWM11TMRH<PWM11TMRH2>
extern volatile __bit                   PWM11TMRH2          __at(0x6DD2);	// @ (0xDBA * 8 + 2)
#define                                 PWM11TMRH2_bit      _BIT_ACCESS(PWM11TMRH,2)
// PWM11TMRH<PWM11TMRH3>
extern volatile __bit                   PWM11TMRH3          __at(0x6DD3);	// @ (0xDBA * 8 + 3)
#define                                 PWM11TMRH3_bit      _BIT_ACCESS(PWM11TMRH,3)
// PWM11TMRH<PWM11TMRH4>
extern volatile __bit                   PWM11TMRH4          __at(0x6DD4);	// @ (0xDBA * 8 + 4)
#define                                 PWM11TMRH4_bit      _BIT_ACCESS(PWM11TMRH,4)
// PWM11TMRH<PWM11TMRH5>
extern volatile __bit                   PWM11TMRH5          __at(0x6DD5);	// @ (0xDBA * 8 + 5)
#define                                 PWM11TMRH5_bit      _BIT_ACCESS(PWM11TMRH,5)
// PWM11TMRH<PWM11TMRH6>
extern volatile __bit                   PWM11TMRH6          __at(0x6DD6);	// @ (0xDBA * 8 + 6)
#define                                 PWM11TMRH6_bit      _BIT_ACCESS(PWM11TMRH,6)
// PWM11TMRH<PWM11TMRH7>
extern volatile __bit                   PWM11TMRH7          __at(0x6DD7);	// @ (0xDBA * 8 + 7)
#define                                 PWM11TMRH7_bit      _BIT_ACCESS(PWM11TMRH,7)
// PWM11TMRL<PWM11TMRL0>
extern volatile __bit                   PWM11TMRL0          __at(0x6DC8);	// @ (0xDB9 * 8 + 0)
#define                                 PWM11TMRL0_bit      _BIT_ACCESS(PWM11TMRL,0)
// PWM11TMRL<PWM11TMRL1>
extern volatile __bit                   PWM11TMRL1          __at(0x6DC9);	// @ (0xDB9 * 8 + 1)
#define                                 PWM11TMRL1_bit      _BIT_ACCESS(PWM11TMRL,1)
// PWM11TMRL<PWM11TMRL2>
extern volatile __bit                   PWM11TMRL2          __at(0x6DCA);	// @ (0xDB9 * 8 + 2)
#define                                 PWM11TMRL2_bit      _BIT_ACCESS(PWM11TMRL,2)
// PWM11TMRL<PWM11TMRL3>
extern volatile __bit                   PWM11TMRL3          __at(0x6DCB);	// @ (0xDB9 * 8 + 3)
#define                                 PWM11TMRL3_bit      _BIT_ACCESS(PWM11TMRL,3)
// PWM11TMRL<PWM11TMRL4>
extern volatile __bit                   PWM11TMRL4          __at(0x6DCC);	// @ (0xDB9 * 8 + 4)
#define                                 PWM11TMRL4_bit      _BIT_ACCESS(PWM11TMRL,4)
// PWM11TMRL<PWM11TMRL5>
extern volatile __bit                   PWM11TMRL5          __at(0x6DCD);	// @ (0xDB9 * 8 + 5)
#define                                 PWM11TMRL5_bit      _BIT_ACCESS(PWM11TMRL,5)
// PWM11TMRL<PWM11TMRL6>
extern volatile __bit                   PWM11TMRL6          __at(0x6DCE);	// @ (0xDB9 * 8 + 6)
#define                                 PWM11TMRL6_bit      _BIT_ACCESS(PWM11TMRL,6)
// PWM11TMRL<PWM11TMRL7>
extern volatile __bit                   PWM11TMRL7          __at(0x6DCF);	// @ (0xDB9 * 8 + 7)
#define                                 PWM11TMRL7_bit      _BIT_ACCESS(PWM11TMRL,7)
// PWM12CLKCON<PWM12CS0>
extern volatile __bit                   PWM12CS0            __at(0x6E70);	// @ (0xDCE * 8 + 0)
#define                                 PWM12CS0_bit        _BIT_ACCESS(PWM12CLKCON,0)
// PWM12CLKCON<PWM12CS1>
extern volatile __bit                   PWM12CS1            __at(0x6E71);	// @ (0xDCE * 8 + 1)
#define                                 PWM12CS1_bit        _BIT_ACCESS(PWM12CLKCON,1)
// PWM12CLKCON<PWM12CS2>
extern volatile __bit                   PWM12CS2            __at(0x6E72);	// @ (0xDCE * 8 + 2)
#define                                 PWM12CS2_bit        _BIT_ACCESS(PWM12CLKCON,2)
// PWM12DCH<PWM12DCH0>
extern volatile __bit                   PWM12DCH0           __at(0x6E20);	// @ (0xDC4 * 8 + 0)
#define                                 PWM12DCH0_bit       _BIT_ACCESS(PWM12DCH,0)
// PWM12DCH<PWM12DCH1>
extern volatile __bit                   PWM12DCH1           __at(0x6E21);	// @ (0xDC4 * 8 + 1)
#define                                 PWM12DCH1_bit       _BIT_ACCESS(PWM12DCH,1)
// PWM12DCH<PWM12DCH2>
extern volatile __bit                   PWM12DCH2           __at(0x6E22);	// @ (0xDC4 * 8 + 2)
#define                                 PWM12DCH2_bit       _BIT_ACCESS(PWM12DCH,2)
// PWM12DCH<PWM12DCH3>
extern volatile __bit                   PWM12DCH3           __at(0x6E23);	// @ (0xDC4 * 8 + 3)
#define                                 PWM12DCH3_bit       _BIT_ACCESS(PWM12DCH,3)
// PWM12DCH<PWM12DCH4>
extern volatile __bit                   PWM12DCH4           __at(0x6E24);	// @ (0xDC4 * 8 + 4)
#define                                 PWM12DCH4_bit       _BIT_ACCESS(PWM12DCH,4)
// PWM12DCH<PWM12DCH5>
extern volatile __bit                   PWM12DCH5           __at(0x6E25);	// @ (0xDC4 * 8 + 5)
#define                                 PWM12DCH5_bit       _BIT_ACCESS(PWM12DCH,5)
// PWM12DCH<PWM12DCH6>
extern volatile __bit                   PWM12DCH6           __at(0x6E26);	// @ (0xDC4 * 8 + 6)
#define                                 PWM12DCH6_bit       _BIT_ACCESS(PWM12DCH,6)
// PWM12DCH<PWM12DCH7>
extern volatile __bit                   PWM12DCH7           __at(0x6E27);	// @ (0xDC4 * 8 + 7)
#define                                 PWM12DCH7_bit       _BIT_ACCESS(PWM12DCH,7)
// PWM12INTE<PWM12DCIE>
extern volatile __bit                   PWM12DCIE           __at(0x6E61);	// @ (0xDCC * 8 + 1)
#define                                 PWM12DCIE_bit       _BIT_ACCESS(PWM12INTE,1)
// PWM12INTF<PWM12DCIF>
extern volatile __bit                   PWM12DCIF           __at(0x6E69);	// @ (0xDCD * 8 + 1)
#define                                 PWM12DCIF_bit       _BIT_ACCESS(PWM12INTF,1)
// PWM12DCL<PWM12DCL0>
extern volatile __bit                   PWM12DCL0           __at(0x6E18);	// @ (0xDC3 * 8 + 0)
#define                                 PWM12DCL0_bit       _BIT_ACCESS(PWM12DCL,0)
// PWM12DCL<PWM12DCL1>
extern volatile __bit                   PWM12DCL1           __at(0x6E19);	// @ (0xDC3 * 8 + 1)
#define                                 PWM12DCL1_bit       _BIT_ACCESS(PWM12DCL,1)
// PWM12DCL<PWM12DCL2>
extern volatile __bit                   PWM12DCL2           __at(0x6E1A);	// @ (0xDC3 * 8 + 2)
#define                                 PWM12DCL2_bit       _BIT_ACCESS(PWM12DCL,2)
// PWM12DCL<PWM12DCL3>
extern volatile __bit                   PWM12DCL3           __at(0x6E1B);	// @ (0xDC3 * 8 + 3)
#define                                 PWM12DCL3_bit       _BIT_ACCESS(PWM12DCL,3)
// PWM12DCL<PWM12DCL4>
extern volatile __bit                   PWM12DCL4           __at(0x6E1C);	// @ (0xDC3 * 8 + 4)
#define                                 PWM12DCL4_bit       _BIT_ACCESS(PWM12DCL,4)
// PWM12DCL<PWM12DCL5>
extern volatile __bit                   PWM12DCL5           __at(0x6E1D);	// @ (0xDC3 * 8 + 5)
#define                                 PWM12DCL5_bit       _BIT_ACCESS(PWM12DCL,5)
// PWM12DCL<PWM12DCL6>
extern volatile __bit                   PWM12DCL6           __at(0x6E1E);	// @ (0xDC3 * 8 + 6)
#define                                 PWM12DCL6_bit       _BIT_ACCESS(PWM12DCL,6)
// PWM12DCL<PWM12DCL7>
extern volatile __bit                   PWM12DCL7           __at(0x6E1F);	// @ (0xDC3 * 8 + 7)
#define                                 PWM12DCL7_bit       _BIT_ACCESS(PWM12DCL,7)
// PWM12CON<PWM12EN>
extern volatile __bit                   PWM12EN             __at(0x6E5F);	// @ (0xDCB * 8 + 7)
#define                                 PWM12EN_bit         _BIT_ACCESS(PWM12CON,7)
// PIE6<PWM12IE>
extern volatile __bit                   PWM12IE             __at(0x4B3);	// @ (0x96 * 8 + 3)
#define                                 PWM12IE_bit         _BIT_ACCESS(PIE6,3)
// PIR6<PWM12IF>
extern volatile __bit                   PWM12IF             __at(0xB3);	// @ (0x16 * 8 + 3)
#define                                 PWM12IF_bit         _BIT_ACCESS(PIR6,3)
// PWM12LDCON<PWM12LD>
extern volatile __bit                   PWM12LD             __at(0x6E7F);	// @ (0xDCF * 8 + 7)
#define                                 PWM12LD_bit         _BIT_ACCESS(PWM12LDCON,7)
// PWM12LDCON<PWM12LDM>
extern volatile __bit                   PWM12LDM            __at(0x6E7E);	// @ (0xDCF * 8 + 6)
#define                                 PWM12LDM_bit        _BIT_ACCESS(PWM12LDCON,6)
// PWM12LDCON<PWM12LDS0>
extern volatile __bit                   PWM12LDS0           __at(0x6E78);	// @ (0xDCF * 8 + 0)
#define                                 PWM12LDS0_bit       _BIT_ACCESS(PWM12LDCON,0)
// PWM12LDCON<PWM12LDS1>
extern volatile __bit                   PWM12LDS1           __at(0x6E79);	// @ (0xDCF * 8 + 1)
#define                                 PWM12LDS1_bit       _BIT_ACCESS(PWM12LDCON,1)
// PWM12CON<PWM12MODE0>
extern volatile __bit                   PWM12MODE0          __at(0x6E5A);	// @ (0xDCB * 8 + 2)
#define                                 PWM12MODE0_bit      _BIT_ACCESS(PWM12CON,2)
// PWM12CON<PWM12MODE1>
extern volatile __bit                   PWM12MODE1          __at(0x6E5B);	// @ (0xDCB * 8 + 3)
#define                                 PWM12MODE1_bit      _BIT_ACCESS(PWM12CON,3)
// PWM12OFH<PWM12OFH0>
extern volatile __bit                   PWM12OFH0           __at(0x6E40);	// @ (0xDC8 * 8 + 0)
#define                                 PWM12OFH0_bit       _BIT_ACCESS(PWM12OFH,0)
// PWM12OFH<PWM12OFH1>
extern volatile __bit                   PWM12OFH1           __at(0x6E41);	// @ (0xDC8 * 8 + 1)
#define                                 PWM12OFH1_bit       _BIT_ACCESS(PWM12OFH,1)
// PWM12OFH<PWM12OFH2>
extern volatile __bit                   PWM12OFH2           __at(0x6E42);	// @ (0xDC8 * 8 + 2)
#define                                 PWM12OFH2_bit       _BIT_ACCESS(PWM12OFH,2)
// PWM12OFH<PWM12OFH3>
extern volatile __bit                   PWM12OFH3           __at(0x6E43);	// @ (0xDC8 * 8 + 3)
#define                                 PWM12OFH3_bit       _BIT_ACCESS(PWM12OFH,3)
// PWM12OFH<PWM12OFH4>
extern volatile __bit                   PWM12OFH4           __at(0x6E44);	// @ (0xDC8 * 8 + 4)
#define                                 PWM12OFH4_bit       _BIT_ACCESS(PWM12OFH,4)
// PWM12OFH<PWM12OFH5>
extern volatile __bit                   PWM12OFH5           __at(0x6E45);	// @ (0xDC8 * 8 + 5)
#define                                 PWM12OFH5_bit       _BIT_ACCESS(PWM12OFH,5)
// PWM12OFH<PWM12OFH6>
extern volatile __bit                   PWM12OFH6           __at(0x6E46);	// @ (0xDC8 * 8 + 6)
#define                                 PWM12OFH6_bit       _BIT_ACCESS(PWM12OFH,6)
// PWM12OFH<PWM12OFH7>
extern volatile __bit                   PWM12OFH7           __at(0x6E47);	// @ (0xDC8 * 8 + 7)
#define                                 PWM12OFH7_bit       _BIT_ACCESS(PWM12OFH,7)
// PWM12INTE<PWM12OFIE>
extern volatile __bit                   PWM12OFIE           __at(0x6E63);	// @ (0xDCC * 8 + 3)
#define                                 PWM12OFIE_bit       _BIT_ACCESS(PWM12INTE,3)
// PWM12INTF<PWM12OFIF>
extern volatile __bit                   PWM12OFIF           __at(0x6E6B);	// @ (0xDCD * 8 + 3)
#define                                 PWM12OFIF_bit       _BIT_ACCESS(PWM12INTF,3)
// PWM12OFL<PWM12OFL0>
extern volatile __bit                   PWM12OFL0           __at(0x6E38);	// @ (0xDC7 * 8 + 0)
#define                                 PWM12OFL0_bit       _BIT_ACCESS(PWM12OFL,0)
// PWM12OFL<PWM12OFL1>
extern volatile __bit                   PWM12OFL1           __at(0x6E39);	// @ (0xDC7 * 8 + 1)
#define                                 PWM12OFL1_bit       _BIT_ACCESS(PWM12OFL,1)
// PWM12OFL<PWM12OFL2>
extern volatile __bit                   PWM12OFL2           __at(0x6E3A);	// @ (0xDC7 * 8 + 2)
#define                                 PWM12OFL2_bit       _BIT_ACCESS(PWM12OFL,2)
// PWM12OFL<PWM12OFL3>
extern volatile __bit                   PWM12OFL3           __at(0x6E3B);	// @ (0xDC7 * 8 + 3)
#define                                 PWM12OFL3_bit       _BIT_ACCESS(PWM12OFL,3)
// PWM12OFL<PWM12OFL4>
extern volatile __bit                   PWM12OFL4           __at(0x6E3C);	// @ (0xDC7 * 8 + 4)
#define                                 PWM12OFL4_bit       _BIT_ACCESS(PWM12OFL,4)
// PWM12OFL<PWM12OFL5>
extern volatile __bit                   PWM12OFL5           __at(0x6E3D);	// @ (0xDC7 * 8 + 5)
#define                                 PWM12OFL5_bit       _BIT_ACCESS(PWM12OFL,5)
// PWM12OFL<PWM12OFL6>
extern volatile __bit                   PWM12OFL6           __at(0x6E3E);	// @ (0xDC7 * 8 + 6)
#define                                 PWM12OFL6_bit       _BIT_ACCESS(PWM12OFL,6)
// PWM12OFL<PWM12OFL7>
extern volatile __bit                   PWM12OFL7           __at(0x6E3F);	// @ (0xDC7 * 8 + 7)
#define                                 PWM12OFL7_bit       _BIT_ACCESS(PWM12OFL,7)
// PWM12OFCON<PWM12OFM0>
extern volatile __bit                   PWM12OFM0           __at(0x6E85);	// @ (0xDD0 * 8 + 5)
#define                                 PWM12OFM0_bit       _BIT_ACCESS(PWM12OFCON,5)
// PWM12OFCON<PWM12OFM1>
extern volatile __bit                   PWM12OFM1           __at(0x6E86);	// @ (0xDD0 * 8 + 6)
#define                                 PWM12OFM1_bit       _BIT_ACCESS(PWM12OFCON,6)
// PWM12OFCON<PWM12OFMC>
extern volatile __bit                   PWM12OFMC           __at(0x6E84);	// @ (0xDD0 * 8 + 4)
#define                                 PWM12OFMC_bit       _BIT_ACCESS(PWM12OFCON,4)
// PWM12OFCON<PWM12OFS0>
extern volatile __bit                   PWM12OFS0           __at(0x6E80);	// @ (0xDD0 * 8 + 0)
#define                                 PWM12OFS0_bit       _BIT_ACCESS(PWM12OFCON,0)
// PWM12OFCON<PWM12OFS1>
extern volatile __bit                   PWM12OFS1           __at(0x6E81);	// @ (0xDD0 * 8 + 1)
#define                                 PWM12OFS1_bit       _BIT_ACCESS(PWM12OFCON,1)
// PWM12CON<PWM12OUT>
extern volatile __bit                   PWM12OUT            __at(0x6E5D);	// @ (0xDCB * 8 + 5)
#define                                 PWM12OUT_bit        _BIT_ACCESS(PWM12CON,5)
// PWM12PHH<PWM12PHH0>
extern volatile __bit                   PWM12PHH0           __at(0x6E10);	// @ (0xDC2 * 8 + 0)
#define                                 PWM12PHH0_bit       _BIT_ACCESS(PWM12PHH,0)
// PWM12PHH<PWM12PHH1>
extern volatile __bit                   PWM12PHH1           __at(0x6E11);	// @ (0xDC2 * 8 + 1)
#define                                 PWM12PHH1_bit       _BIT_ACCESS(PWM12PHH,1)
// PWM12PHH<PWM12PHH2>
extern volatile __bit                   PWM12PHH2           __at(0x6E12);	// @ (0xDC2 * 8 + 2)
#define                                 PWM12PHH2_bit       _BIT_ACCESS(PWM12PHH,2)
// PWM12PHH<PWM12PHH3>
extern volatile __bit                   PWM12PHH3           __at(0x6E13);	// @ (0xDC2 * 8 + 3)
#define                                 PWM12PHH3_bit       _BIT_ACCESS(PWM12PHH,3)
// PWM12PHH<PWM12PHH4>
extern volatile __bit                   PWM12PHH4           __at(0x6E14);	// @ (0xDC2 * 8 + 4)
#define                                 PWM12PHH4_bit       _BIT_ACCESS(PWM12PHH,4)
// PWM12PHH<PWM12PHH5>
extern volatile __bit                   PWM12PHH5           __at(0x6E15);	// @ (0xDC2 * 8 + 5)
#define                                 PWM12PHH5_bit       _BIT_ACCESS(PWM12PHH,5)
// PWM12PHH<PWM12PHH6>
extern volatile __bit                   PWM12PHH6           __at(0x6E16);	// @ (0xDC2 * 8 + 6)
#define                                 PWM12PHH6_bit       _BIT_ACCESS(PWM12PHH,6)
// PWM12PHH<PWM12PHH7>
extern volatile __bit                   PWM12PHH7           __at(0x6E17);	// @ (0xDC2 * 8 + 7)
#define                                 PWM12PHH7_bit       _BIT_ACCESS(PWM12PHH,7)
// PWM12INTE<PWM12PHIE>
extern volatile __bit                   PWM12PHIE           __at(0x6E62);	// @ (0xDCC * 8 + 2)
#define                                 PWM12PHIE_bit       _BIT_ACCESS(PWM12INTE,2)
// PWM12INTF<PWM12PHIF>
extern volatile __bit                   PWM12PHIF           __at(0x6E6A);	// @ (0xDCD * 8 + 2)
#define                                 PWM12PHIF_bit       _BIT_ACCESS(PWM12INTF,2)
// PWM12PHL<PWM12PHL0>
extern volatile __bit                   PWM12PHL0           __at(0x6E08);	// @ (0xDC1 * 8 + 0)
#define                                 PWM12PHL0_bit       _BIT_ACCESS(PWM12PHL,0)
// PWM12PHL<PWM12PHL1>
extern volatile __bit                   PWM12PHL1           __at(0x6E09);	// @ (0xDC1 * 8 + 1)
#define                                 PWM12PHL1_bit       _BIT_ACCESS(PWM12PHL,1)
// PWM12PHL<PWM12PHL2>
extern volatile __bit                   PWM12PHL2           __at(0x6E0A);	// @ (0xDC1 * 8 + 2)
#define                                 PWM12PHL2_bit       _BIT_ACCESS(PWM12PHL,2)
// PWM12PHL<PWM12PHL3>
extern volatile __bit                   PWM12PHL3           __at(0x6E0B);	// @ (0xDC1 * 8 + 3)
#define                                 PWM12PHL3_bit       _BIT_ACCESS(PWM12PHL,3)
// PWM12PHL<PWM12PHL4>
extern volatile __bit                   PWM12PHL4           __at(0x6E0C);	// @ (0xDC1 * 8 + 4)
#define                                 PWM12PHL4_bit       _BIT_ACCESS(PWM12PHL,4)
// PWM12PHL<PWM12PHL5>
extern volatile __bit                   PWM12PHL5           __at(0x6E0D);	// @ (0xDC1 * 8 + 5)
#define                                 PWM12PHL5_bit       _BIT_ACCESS(PWM12PHL,5)
// PWM12PHL<PWM12PHL6>
extern volatile __bit                   PWM12PHL6           __at(0x6E0E);	// @ (0xDC1 * 8 + 6)
#define                                 PWM12PHL6_bit       _BIT_ACCESS(PWM12PHL,6)
// PWM12PHL<PWM12PHL7>
extern volatile __bit                   PWM12PHL7           __at(0x6E0F);	// @ (0xDC1 * 8 + 7)
#define                                 PWM12PHL7_bit       _BIT_ACCESS(PWM12PHL,7)
// PWM12CON<PWM12POL>
extern volatile __bit                   PWM12POL            __at(0x6E5C);	// @ (0xDCB * 8 + 4)
#define                                 PWM12POL_bit        _BIT_ACCESS(PWM12CON,4)
// PWM12PRH<PWM12PRH0>
extern volatile __bit                   PWM12PRH0           __at(0x6E30);	// @ (0xDC6 * 8 + 0)
#define                                 PWM12PRH0_bit       _BIT_ACCESS(PWM12PRH,0)
// PWM12PRH<PWM12PRH1>
extern volatile __bit                   PWM12PRH1           __at(0x6E31);	// @ (0xDC6 * 8 + 1)
#define                                 PWM12PRH1_bit       _BIT_ACCESS(PWM12PRH,1)
// PWM12PRH<PWM12PRH2>
extern volatile __bit                   PWM12PRH2           __at(0x6E32);	// @ (0xDC6 * 8 + 2)
#define                                 PWM12PRH2_bit       _BIT_ACCESS(PWM12PRH,2)
// PWM12PRH<PWM12PRH3>
extern volatile __bit                   PWM12PRH3           __at(0x6E33);	// @ (0xDC6 * 8 + 3)
#define                                 PWM12PRH3_bit       _BIT_ACCESS(PWM12PRH,3)
// PWM12PRH<PWM12PRH4>
extern volatile __bit                   PWM12PRH4           __at(0x6E34);	// @ (0xDC6 * 8 + 4)
#define                                 PWM12PRH4_bit       _BIT_ACCESS(PWM12PRH,4)
// PWM12PRH<PWM12PRH5>
extern volatile __bit                   PWM12PRH5           __at(0x6E35);	// @ (0xDC6 * 8 + 5)
#define                                 PWM12PRH5_bit       _BIT_ACCESS(PWM12PRH,5)
// PWM12PRH<PWM12PRH6>
extern volatile __bit                   PWM12PRH6           __at(0x6E36);	// @ (0xDC6 * 8 + 6)
#define                                 PWM12PRH6_bit       _BIT_ACCESS(PWM12PRH,6)
// PWM12PRH<PWM12PRH7>
extern volatile __bit                   PWM12PRH7           __at(0x6E37);	// @ (0xDC6 * 8 + 7)
#define                                 PWM12PRH7_bit       _BIT_ACCESS(PWM12PRH,7)
// PWM12INTE<PWM12PRIE>
extern volatile __bit                   PWM12PRIE           __at(0x6E60);	// @ (0xDCC * 8 + 0)
#define                                 PWM12PRIE_bit       _BIT_ACCESS(PWM12INTE,0)
// PWM12INTF<PWM12PRIF>
extern volatile __bit                   PWM12PRIF           __at(0x6E68);	// @ (0xDCD * 8 + 0)
#define                                 PWM12PRIF_bit       _BIT_ACCESS(PWM12INTF,0)
// PWM12PRL<PWM12PRL0>
extern volatile __bit                   PWM12PRL0           __at(0x6E28);	// @ (0xDC5 * 8 + 0)
#define                                 PWM12PRL0_bit       _BIT_ACCESS(PWM12PRL,0)
// PWM12PRL<PWM12PRL1>
extern volatile __bit                   PWM12PRL1           __at(0x6E29);	// @ (0xDC5 * 8 + 1)
#define                                 PWM12PRL1_bit       _BIT_ACCESS(PWM12PRL,1)
// PWM12PRL<PWM12PRL2>
extern volatile __bit                   PWM12PRL2           __at(0x6E2A);	// @ (0xDC5 * 8 + 2)
#define                                 PWM12PRL2_bit       _BIT_ACCESS(PWM12PRL,2)
// PWM12PRL<PWM12PRL3>
extern volatile __bit                   PWM12PRL3           __at(0x6E2B);	// @ (0xDC5 * 8 + 3)
#define                                 PWM12PRL3_bit       _BIT_ACCESS(PWM12PRL,3)
// PWM12PRL<PWM12PRL4>
extern volatile __bit                   PWM12PRL4           __at(0x6E2C);	// @ (0xDC5 * 8 + 4)
#define                                 PWM12PRL4_bit       _BIT_ACCESS(PWM12PRL,4)
// PWM12PRL<PWM12PRL5>
extern volatile __bit                   PWM12PRL5           __at(0x6E2D);	// @ (0xDC5 * 8 + 5)
#define                                 PWM12PRL5_bit       _BIT_ACCESS(PWM12PRL,5)
// PWM12PRL<PWM12PRL6>
extern volatile __bit                   PWM12PRL6           __at(0x6E2E);	// @ (0xDC5 * 8 + 6)
#define                                 PWM12PRL6_bit       _BIT_ACCESS(PWM12PRL,6)
// PWM12PRL<PWM12PRL7>
extern volatile __bit                   PWM12PRL7           __at(0x6E2F);	// @ (0xDC5 * 8 + 7)
#define                                 PWM12PRL7_bit       _BIT_ACCESS(PWM12PRL,7)
// PWM12CLKCON<PWM12PS0>
extern volatile __bit                   PWM12PS0            __at(0x6E74);	// @ (0xDCE * 8 + 4)
#define                                 PWM12PS0_bit        _BIT_ACCESS(PWM12CLKCON,4)
// PWM12CLKCON<PWM12PS1>
extern volatile __bit                   PWM12PS1            __at(0x6E75);	// @ (0xDCE * 8 + 5)
#define                                 PWM12PS1_bit        _BIT_ACCESS(PWM12CLKCON,5)
// PWM12CLKCON<PWM12PS2>
extern volatile __bit                   PWM12PS2            __at(0x6E76);	// @ (0xDCE * 8 + 6)
#define                                 PWM12PS2_bit        _BIT_ACCESS(PWM12CLKCON,6)
// PWM12TMRH<PWM12TMRH0>
extern volatile __bit                   PWM12TMRH0          __at(0x6E50);	// @ (0xDCA * 8 + 0)
#define                                 PWM12TMRH0_bit      _BIT_ACCESS(PWM12TMRH,0)
// PWM12TMRH<PWM12TMRH1>
extern volatile __bit                   PWM12TMRH1          __at(0x6E51);	// @ (0xDCA * 8 + 1)
#define                                 PWM12TMRH1_bit      _BIT_ACCESS(PWM12TMRH,1)
// PWM12TMRH<PWM12TMRH2>
extern volatile __bit                   PWM12TMRH2          __at(0x6E52);	// @ (0xDCA * 8 + 2)
#define                                 PWM12TMRH2_bit      _BIT_ACCESS(PWM12TMRH,2)
// PWM12TMRH<PWM12TMRH3>
extern volatile __bit                   PWM12TMRH3          __at(0x6E53);	// @ (0xDCA * 8 + 3)
#define                                 PWM12TMRH3_bit      _BIT_ACCESS(PWM12TMRH,3)
// PWM12TMRH<PWM12TMRH4>
extern volatile __bit                   PWM12TMRH4          __at(0x6E54);	// @ (0xDCA * 8 + 4)
#define                                 PWM12TMRH4_bit      _BIT_ACCESS(PWM12TMRH,4)
// PWM12TMRH<PWM12TMRH5>
extern volatile __bit                   PWM12TMRH5          __at(0x6E55);	// @ (0xDCA * 8 + 5)
#define                                 PWM12TMRH5_bit      _BIT_ACCESS(PWM12TMRH,5)
// PWM12TMRH<PWM12TMRH6>
extern volatile __bit                   PWM12TMRH6          __at(0x6E56);	// @ (0xDCA * 8 + 6)
#define                                 PWM12TMRH6_bit      _BIT_ACCESS(PWM12TMRH,6)
// PWM12TMRH<PWM12TMRH7>
extern volatile __bit                   PWM12TMRH7          __at(0x6E57);	// @ (0xDCA * 8 + 7)
#define                                 PWM12TMRH7_bit      _BIT_ACCESS(PWM12TMRH,7)
// PWM12TMRL<PWM12TMRL0>
extern volatile __bit                   PWM12TMRL0          __at(0x6E48);	// @ (0xDC9 * 8 + 0)
#define                                 PWM12TMRL0_bit      _BIT_ACCESS(PWM12TMRL,0)
// PWM12TMRL<PWM12TMRL1>
extern volatile __bit                   PWM12TMRL1          __at(0x6E49);	// @ (0xDC9 * 8 + 1)
#define                                 PWM12TMRL1_bit      _BIT_ACCESS(PWM12TMRL,1)
// PWM12TMRL<PWM12TMRL2>
extern volatile __bit                   PWM12TMRL2          __at(0x6E4A);	// @ (0xDC9 * 8 + 2)
#define                                 PWM12TMRL2_bit      _BIT_ACCESS(PWM12TMRL,2)
// PWM12TMRL<PWM12TMRL3>
extern volatile __bit                   PWM12TMRL3          __at(0x6E4B);	// @ (0xDC9 * 8 + 3)
#define                                 PWM12TMRL3_bit      _BIT_ACCESS(PWM12TMRL,3)
// PWM12TMRL<PWM12TMRL4>
extern volatile __bit                   PWM12TMRL4          __at(0x6E4C);	// @ (0xDC9 * 8 + 4)
#define                                 PWM12TMRL4_bit      _BIT_ACCESS(PWM12TMRL,4)
// PWM12TMRL<PWM12TMRL5>
extern volatile __bit                   PWM12TMRL5          __at(0x6E4D);	// @ (0xDC9 * 8 + 5)
#define                                 PWM12TMRL5_bit      _BIT_ACCESS(PWM12TMRL,5)
// PWM12TMRL<PWM12TMRL6>
extern volatile __bit                   PWM12TMRL6          __at(0x6E4E);	// @ (0xDC9 * 8 + 6)
#define                                 PWM12TMRL6_bit      _BIT_ACCESS(PWM12TMRL,6)
// PWM12TMRL<PWM12TMRL7>
extern volatile __bit                   PWM12TMRL7          __at(0x6E4F);	// @ (0xDC9 * 8 + 7)
#define                                 PWM12TMRL7_bit      _BIT_ACCESS(PWM12TMRL,7)
// PWM3DCL<PWM3DC0>
extern volatile __bit                   PWM3DC0             __at(0x30A6);	// @ (0x614 * 8 + 6)
#define                                 PWM3DC0_bit         _BIT_ACCESS(PWM3DCL,6)
// PWM3DCL<PWM3DC1>
extern volatile __bit                   PWM3DC1             __at(0x30A7);	// @ (0x614 * 8 + 7)
#define                                 PWM3DC1_bit         _BIT_ACCESS(PWM3DCL,7)
// PWM3DCH<PWM3DC2>
extern volatile __bit                   PWM3DC2             __at(0x30A8);	// @ (0x615 * 8 + 0)
#define                                 PWM3DC2_bit         _BIT_ACCESS(PWM3DCH,0)
// PWM3DCH<PWM3DC3>
extern volatile __bit                   PWM3DC3             __at(0x30A9);	// @ (0x615 * 8 + 1)
#define                                 PWM3DC3_bit         _BIT_ACCESS(PWM3DCH,1)
// PWM3DCH<PWM3DC4>
extern volatile __bit                   PWM3DC4             __at(0x30AA);	// @ (0x615 * 8 + 2)
#define                                 PWM3DC4_bit         _BIT_ACCESS(PWM3DCH,2)
// PWM3DCH<PWM3DC5>
extern volatile __bit                   PWM3DC5             __at(0x30AB);	// @ (0x615 * 8 + 3)
#define                                 PWM3DC5_bit         _BIT_ACCESS(PWM3DCH,3)
// PWM3DCH<PWM3DC6>
extern volatile __bit                   PWM3DC6             __at(0x30AC);	// @ (0x615 * 8 + 4)
#define                                 PWM3DC6_bit         _BIT_ACCESS(PWM3DCH,4)
// PWM3DCH<PWM3DC7>
extern volatile __bit                   PWM3DC7             __at(0x30AD);	// @ (0x615 * 8 + 5)
#define                                 PWM3DC7_bit         _BIT_ACCESS(PWM3DCH,5)
// PWM3DCH<PWM3DC8>
extern volatile __bit                   PWM3DC8             __at(0x30AE);	// @ (0x615 * 8 + 6)
#define                                 PWM3DC8_bit         _BIT_ACCESS(PWM3DCH,6)
// PWM3DCH<PWM3DC9>
extern volatile __bit                   PWM3DC9             __at(0x30AF);	// @ (0x615 * 8 + 7)
#define                                 PWM3DC9_bit         _BIT_ACCESS(PWM3DCH,7)
// PWM3CON<PWM3EN>
extern volatile __bit                   PWM3EN              __at(0x30B7);	// @ (0x616 * 8 + 7)
#define                                 PWM3EN_bit          _BIT_ACCESS(PWM3CON,7)
// PWM3CON<PWM3OUT>
extern volatile __bit                   PWM3OUT             __at(0x30B5);	// @ (0x616 * 8 + 5)
#define                                 PWM3OUT_bit         _BIT_ACCESS(PWM3CON,5)
// PWM3CON<PWM3POL>
extern volatile __bit                   PWM3POL             __at(0x30B4);	// @ (0x616 * 8 + 4)
#define                                 PWM3POL_bit         _BIT_ACCESS(PWM3CON,4)
// PWM4DCL<PWM4DC0>
extern volatile __bit                   PWM4DC0             __at(0x30BE);	// @ (0x617 * 8 + 6)
#define                                 PWM4DC0_bit         _BIT_ACCESS(PWM4DCL,6)
// PWM4DCL<PWM4DC1>
extern volatile __bit                   PWM4DC1             __at(0x30BF);	// @ (0x617 * 8 + 7)
#define                                 PWM4DC1_bit         _BIT_ACCESS(PWM4DCL,7)
// PWM4DCH<PWM4DC2>
extern volatile __bit                   PWM4DC2             __at(0x30C0);	// @ (0x618 * 8 + 0)
#define                                 PWM4DC2_bit         _BIT_ACCESS(PWM4DCH,0)
// PWM4DCH<PWM4DC3>
extern volatile __bit                   PWM4DC3             __at(0x30C1);	// @ (0x618 * 8 + 1)
#define                                 PWM4DC3_bit         _BIT_ACCESS(PWM4DCH,1)
// PWM4DCH<PWM4DC4>
extern volatile __bit                   PWM4DC4             __at(0x30C2);	// @ (0x618 * 8 + 2)
#define                                 PWM4DC4_bit         _BIT_ACCESS(PWM4DCH,2)
// PWM4DCH<PWM4DC5>
extern volatile __bit                   PWM4DC5             __at(0x30C3);	// @ (0x618 * 8 + 3)
#define                                 PWM4DC5_bit         _BIT_ACCESS(PWM4DCH,3)
// PWM4DCH<PWM4DC6>
extern volatile __bit                   PWM4DC6             __at(0x30C4);	// @ (0x618 * 8 + 4)
#define                                 PWM4DC6_bit         _BIT_ACCESS(PWM4DCH,4)
// PWM4DCH<PWM4DC7>
extern volatile __bit                   PWM4DC7             __at(0x30C5);	// @ (0x618 * 8 + 5)
#define                                 PWM4DC7_bit         _BIT_ACCESS(PWM4DCH,5)
// PWM4DCH<PWM4DC8>
extern volatile __bit                   PWM4DC8             __at(0x30C6);	// @ (0x618 * 8 + 6)
#define                                 PWM4DC8_bit         _BIT_ACCESS(PWM4DCH,6)
// PWM4DCH<PWM4DC9>
extern volatile __bit                   PWM4DC9             __at(0x30C7);	// @ (0x618 * 8 + 7)
#define                                 PWM4DC9_bit         _BIT_ACCESS(PWM4DCH,7)
// PWM4CON<PWM4EN>
extern volatile __bit                   PWM4EN              __at(0x30CF);	// @ (0x619 * 8 + 7)
#define                                 PWM4EN_bit          _BIT_ACCESS(PWM4CON,7)
// PWM4CON<PWM4OUT>
extern volatile __bit                   PWM4OUT             __at(0x30CD);	// @ (0x619 * 8 + 5)
#define                                 PWM4OUT_bit         _BIT_ACCESS(PWM4CON,5)
// PWM4CON<PWM4POL>
extern volatile __bit                   PWM4POL             __at(0x30CC);	// @ (0x619 * 8 + 4)
#define                                 PWM4POL_bit         _BIT_ACCESS(PWM4CON,4)
// PWM5CLKCON<PWM5CS0>
extern volatile __bit                   PWM5CS0             __at(0x6CF0);	// @ (0xD9E * 8 + 0)
#define                                 PWM5CS0_bit         _BIT_ACCESS(PWM5CLKCON,0)
// PWM5CLKCON<PWM5CS1>
extern volatile __bit                   PWM5CS1             __at(0x6CF1);	// @ (0xD9E * 8 + 1)
#define                                 PWM5CS1_bit         _BIT_ACCESS(PWM5CLKCON,1)
// PWM5CLKCON<PWM5CS2>
extern volatile __bit                   PWM5CS2             __at(0x6CF2);	// @ (0xD9E * 8 + 2)
#define                                 PWM5CS2_bit         _BIT_ACCESS(PWM5CLKCON,2)
// PWM5DCH<PWM5DCH0>
extern volatile __bit                   PWM5DCH0            __at(0x6CA0);	// @ (0xD94 * 8 + 0)
#define                                 PWM5DCH0_bit        _BIT_ACCESS(PWM5DCH,0)
// PWM5DCH<PWM5DCH1>
extern volatile __bit                   PWM5DCH1            __at(0x6CA1);	// @ (0xD94 * 8 + 1)
#define                                 PWM5DCH1_bit        _BIT_ACCESS(PWM5DCH,1)
// PWM5DCH<PWM5DCH2>
extern volatile __bit                   PWM5DCH2            __at(0x6CA2);	// @ (0xD94 * 8 + 2)
#define                                 PWM5DCH2_bit        _BIT_ACCESS(PWM5DCH,2)
// PWM5DCH<PWM5DCH3>
extern volatile __bit                   PWM5DCH3            __at(0x6CA3);	// @ (0xD94 * 8 + 3)
#define                                 PWM5DCH3_bit        _BIT_ACCESS(PWM5DCH,3)
// PWM5DCH<PWM5DCH4>
extern volatile __bit                   PWM5DCH4            __at(0x6CA4);	// @ (0xD94 * 8 + 4)
#define                                 PWM5DCH4_bit        _BIT_ACCESS(PWM5DCH,4)
// PWM5DCH<PWM5DCH5>
extern volatile __bit                   PWM5DCH5            __at(0x6CA5);	// @ (0xD94 * 8 + 5)
#define                                 PWM5DCH5_bit        _BIT_ACCESS(PWM5DCH,5)
// PWM5DCH<PWM5DCH6>
extern volatile __bit                   PWM5DCH6            __at(0x6CA6);	// @ (0xD94 * 8 + 6)
#define                                 PWM5DCH6_bit        _BIT_ACCESS(PWM5DCH,6)
// PWM5DCH<PWM5DCH7>
extern volatile __bit                   PWM5DCH7            __at(0x6CA7);	// @ (0xD94 * 8 + 7)
#define                                 PWM5DCH7_bit        _BIT_ACCESS(PWM5DCH,7)
// PWM5INTE<PWM5DCIE>
extern volatile __bit                   PWM5DCIE            __at(0x6CE1);	// @ (0xD9C * 8 + 1)
#define                                 PWM5DCIE_bit        _BIT_ACCESS(PWM5INTE,1)
// PWM5INTF<PWM5DCIF>
extern volatile __bit                   PWM5DCIF            __at(0x6CE9);	// @ (0xD9D * 8 + 1)
#define                                 PWM5DCIF_bit        _BIT_ACCESS(PWM5INTF,1)
// PWM5DCL<PWM5DCL0>
extern volatile __bit                   PWM5DCL0            __at(0x6C98);	// @ (0xD93 * 8 + 0)
#define                                 PWM5DCL0_bit        _BIT_ACCESS(PWM5DCL,0)
// PWM5DCL<PWM5DCL1>
extern volatile __bit                   PWM5DCL1            __at(0x6C99);	// @ (0xD93 * 8 + 1)
#define                                 PWM5DCL1_bit        _BIT_ACCESS(PWM5DCL,1)
// PWM5DCL<PWM5DCL2>
extern volatile __bit                   PWM5DCL2            __at(0x6C9A);	// @ (0xD93 * 8 + 2)
#define                                 PWM5DCL2_bit        _BIT_ACCESS(PWM5DCL,2)
// PWM5DCL<PWM5DCL3>
extern volatile __bit                   PWM5DCL3            __at(0x6C9B);	// @ (0xD93 * 8 + 3)
#define                                 PWM5DCL3_bit        _BIT_ACCESS(PWM5DCL,3)
// PWM5DCL<PWM5DCL4>
extern volatile __bit                   PWM5DCL4            __at(0x6C9C);	// @ (0xD93 * 8 + 4)
#define                                 PWM5DCL4_bit        _BIT_ACCESS(PWM5DCL,4)
// PWM5DCL<PWM5DCL5>
extern volatile __bit                   PWM5DCL5            __at(0x6C9D);	// @ (0xD93 * 8 + 5)
#define                                 PWM5DCL5_bit        _BIT_ACCESS(PWM5DCL,5)
// PWM5DCL<PWM5DCL6>
extern volatile __bit                   PWM5DCL6            __at(0x6C9E);	// @ (0xD93 * 8 + 6)
#define                                 PWM5DCL6_bit        _BIT_ACCESS(PWM5DCL,6)
// PWM5DCL<PWM5DCL7>
extern volatile __bit                   PWM5DCL7            __at(0x6C9F);	// @ (0xD93 * 8 + 7)
#define                                 PWM5DCL7_bit        _BIT_ACCESS(PWM5DCL,7)
// PWM5CON<PWM5EN>
extern volatile __bit                   PWM5EN              __at(0x6CDF);	// @ (0xD9B * 8 + 7)
#define                                 PWM5EN_bit          _BIT_ACCESS(PWM5CON,7)
// PIE6<PWM5IE>
extern volatile __bit                   PWM5IE              __at(0x4B0);	// @ (0x96 * 8 + 0)
#define                                 PWM5IE_bit          _BIT_ACCESS(PIE6,0)
// PIR6<PWM5IF>
extern volatile __bit                   PWM5IF              __at(0xB0);	// @ (0x16 * 8 + 0)
#define                                 PWM5IF_bit          _BIT_ACCESS(PIR6,0)
// PWM5LDCON<PWM5LD>
extern volatile __bit                   PWM5LD              __at(0x6CFF);	// @ (0xD9F * 8 + 7)
#define                                 PWM5LD_bit          _BIT_ACCESS(PWM5LDCON,7)
// PWM5LDCON<PWM5LDM>
extern volatile __bit                   PWM5LDM             __at(0x6CFE);	// @ (0xD9F * 8 + 6)
#define                                 PWM5LDM_bit         _BIT_ACCESS(PWM5LDCON,6)
// PWM5LDCON<PWM5LDS0>
extern volatile __bit                   PWM5LDS0            __at(0x6CF8);	// @ (0xD9F * 8 + 0)
#define                                 PWM5LDS0_bit        _BIT_ACCESS(PWM5LDCON,0)
// PWM5LDCON<PWM5LDS1>
extern volatile __bit                   PWM5LDS1            __at(0x6CF9);	// @ (0xD9F * 8 + 1)
#define                                 PWM5LDS1_bit        _BIT_ACCESS(PWM5LDCON,1)
// PWM5CON<PWM5MODE0>
extern volatile __bit                   PWM5MODE0           __at(0x6CDA);	// @ (0xD9B * 8 + 2)
#define                                 PWM5MODE0_bit       _BIT_ACCESS(PWM5CON,2)
// PWM5CON<PWM5MODE1>
extern volatile __bit                   PWM5MODE1           __at(0x6CDB);	// @ (0xD9B * 8 + 3)
#define                                 PWM5MODE1_bit       _BIT_ACCESS(PWM5CON,3)
// PWM5OFH<PWM5OFH0>
extern volatile __bit                   PWM5OFH0            __at(0x6CC0);	// @ (0xD98 * 8 + 0)
#define                                 PWM5OFH0_bit        _BIT_ACCESS(PWM5OFH,0)
// PWM5OFH<PWM5OFH1>
extern volatile __bit                   PWM5OFH1            __at(0x6CC1);	// @ (0xD98 * 8 + 1)
#define                                 PWM5OFH1_bit        _BIT_ACCESS(PWM5OFH,1)
// PWM5OFH<PWM5OFH2>
extern volatile __bit                   PWM5OFH2            __at(0x6CC2);	// @ (0xD98 * 8 + 2)
#define                                 PWM5OFH2_bit        _BIT_ACCESS(PWM5OFH,2)
// PWM5OFH<PWM5OFH3>
extern volatile __bit                   PWM5OFH3            __at(0x6CC3);	// @ (0xD98 * 8 + 3)
#define                                 PWM5OFH3_bit        _BIT_ACCESS(PWM5OFH,3)
// PWM5OFH<PWM5OFH4>
extern volatile __bit                   PWM5OFH4            __at(0x6CC4);	// @ (0xD98 * 8 + 4)
#define                                 PWM5OFH4_bit        _BIT_ACCESS(PWM5OFH,4)
// PWM5OFH<PWM5OFH5>
extern volatile __bit                   PWM5OFH5            __at(0x6CC5);	// @ (0xD98 * 8 + 5)
#define                                 PWM5OFH5_bit        _BIT_ACCESS(PWM5OFH,5)
// PWM5OFH<PWM5OFH6>
extern volatile __bit                   PWM5OFH6            __at(0x6CC6);	// @ (0xD98 * 8 + 6)
#define                                 PWM5OFH6_bit        _BIT_ACCESS(PWM5OFH,6)
// PWM5OFH<PWM5OFH7>
extern volatile __bit                   PWM5OFH7            __at(0x6CC7);	// @ (0xD98 * 8 + 7)
#define                                 PWM5OFH7_bit        _BIT_ACCESS(PWM5OFH,7)
// PWM5INTE<PWM5OFIE>
extern volatile __bit                   PWM5OFIE            __at(0x6CE3);	// @ (0xD9C * 8 + 3)
#define                                 PWM5OFIE_bit        _BIT_ACCESS(PWM5INTE,3)
// PWM5INTF<PWM5OFIF>
extern volatile __bit                   PWM5OFIF            __at(0x6CEB);	// @ (0xD9D * 8 + 3)
#define                                 PWM5OFIF_bit        _BIT_ACCESS(PWM5INTF,3)
// PWM5OFL<PWM5OFL0>
extern volatile __bit                   PWM5OFL0            __at(0x6CB8);	// @ (0xD97 * 8 + 0)
#define                                 PWM5OFL0_bit        _BIT_ACCESS(PWM5OFL,0)
// PWM5OFL<PWM5OFL1>
extern volatile __bit                   PWM5OFL1            __at(0x6CB9);	// @ (0xD97 * 8 + 1)
#define                                 PWM5OFL1_bit        _BIT_ACCESS(PWM5OFL,1)
// PWM5OFL<PWM5OFL2>
extern volatile __bit                   PWM5OFL2            __at(0x6CBA);	// @ (0xD97 * 8 + 2)
#define                                 PWM5OFL2_bit        _BIT_ACCESS(PWM5OFL,2)
// PWM5OFL<PWM5OFL3>
extern volatile __bit                   PWM5OFL3            __at(0x6CBB);	// @ (0xD97 * 8 + 3)
#define                                 PWM5OFL3_bit        _BIT_ACCESS(PWM5OFL,3)
// PWM5OFL<PWM5OFL4>
extern volatile __bit                   PWM5OFL4            __at(0x6CBC);	// @ (0xD97 * 8 + 4)
#define                                 PWM5OFL4_bit        _BIT_ACCESS(PWM5OFL,4)
// PWM5OFL<PWM5OFL5>
extern volatile __bit                   PWM5OFL5            __at(0x6CBD);	// @ (0xD97 * 8 + 5)
#define                                 PWM5OFL5_bit        _BIT_ACCESS(PWM5OFL,5)
// PWM5OFL<PWM5OFL6>
extern volatile __bit                   PWM5OFL6            __at(0x6CBE);	// @ (0xD97 * 8 + 6)
#define                                 PWM5OFL6_bit        _BIT_ACCESS(PWM5OFL,6)
// PWM5OFL<PWM5OFL7>
extern volatile __bit                   PWM5OFL7            __at(0x6CBF);	// @ (0xD97 * 8 + 7)
#define                                 PWM5OFL7_bit        _BIT_ACCESS(PWM5OFL,7)
// PWM5OFCON<PWM5OFM0>
extern volatile __bit                   PWM5OFM0            __at(0x6D05);	// @ (0xDA0 * 8 + 5)
#define                                 PWM5OFM0_bit        _BIT_ACCESS(PWM5OFCON,5)
// PWM5OFCON<PWM5OFM1>
extern volatile __bit                   PWM5OFM1            __at(0x6D06);	// @ (0xDA0 * 8 + 6)
#define                                 PWM5OFM1_bit        _BIT_ACCESS(PWM5OFCON,6)
// PWM5OFCON<PWM5OFMC>
extern volatile __bit                   PWM5OFMC            __at(0x6D04);	// @ (0xDA0 * 8 + 4)
#define                                 PWM5OFMC_bit        _BIT_ACCESS(PWM5OFCON,4)
// PWM5OFCON<PWM5OFS0>
extern volatile __bit                   PWM5OFS0            __at(0x6D00);	// @ (0xDA0 * 8 + 0)
#define                                 PWM5OFS0_bit        _BIT_ACCESS(PWM5OFCON,0)
// PWM5OFCON<PWM5OFS1>
extern volatile __bit                   PWM5OFS1            __at(0x6D01);	// @ (0xDA0 * 8 + 1)
#define                                 PWM5OFS1_bit        _BIT_ACCESS(PWM5OFCON,1)
// PWM5CON<PWM5OUT>
extern volatile __bit                   PWM5OUT             __at(0x6CDD);	// @ (0xD9B * 8 + 5)
#define                                 PWM5OUT_bit         _BIT_ACCESS(PWM5CON,5)
// PWM5PHH<PWM5PHH0>
extern volatile __bit                   PWM5PHH0            __at(0x6C90);	// @ (0xD92 * 8 + 0)
#define                                 PWM5PHH0_bit        _BIT_ACCESS(PWM5PHH,0)
// PWM5PHH<PWM5PHH1>
extern volatile __bit                   PWM5PHH1            __at(0x6C91);	// @ (0xD92 * 8 + 1)
#define                                 PWM5PHH1_bit        _BIT_ACCESS(PWM5PHH,1)
// PWM5PHH<PWM5PHH2>
extern volatile __bit                   PWM5PHH2            __at(0x6C92);	// @ (0xD92 * 8 + 2)
#define                                 PWM5PHH2_bit        _BIT_ACCESS(PWM5PHH,2)
// PWM5PHH<PWM5PHH3>
extern volatile __bit                   PWM5PHH3            __at(0x6C93);	// @ (0xD92 * 8 + 3)
#define                                 PWM5PHH3_bit        _BIT_ACCESS(PWM5PHH,3)
// PWM5PHH<PWM5PHH4>
extern volatile __bit                   PWM5PHH4            __at(0x6C94);	// @ (0xD92 * 8 + 4)
#define                                 PWM5PHH4_bit        _BIT_ACCESS(PWM5PHH,4)
// PWM5PHH<PWM5PHH5>
extern volatile __bit                   PWM5PHH5            __at(0x6C95);	// @ (0xD92 * 8 + 5)
#define                                 PWM5PHH5_bit        _BIT_ACCESS(PWM5PHH,5)
// PWM5PHH<PWM5PHH6>
extern volatile __bit                   PWM5PHH6            __at(0x6C96);	// @ (0xD92 * 8 + 6)
#define                                 PWM5PHH6_bit        _BIT_ACCESS(PWM5PHH,6)
// PWM5PHH<PWM5PHH7>
extern volatile __bit                   PWM5PHH7            __at(0x6C97);	// @ (0xD92 * 8 + 7)
#define                                 PWM5PHH7_bit        _BIT_ACCESS(PWM5PHH,7)
// PWM5INTE<PWM5PHIE>
extern volatile __bit                   PWM5PHIE            __at(0x6CE2);	// @ (0xD9C * 8 + 2)
#define                                 PWM5PHIE_bit        _BIT_ACCESS(PWM5INTE,2)
// PWM5INTF<PWM5PHIF>
extern volatile __bit                   PWM5PHIF            __at(0x6CEA);	// @ (0xD9D * 8 + 2)
#define                                 PWM5PHIF_bit        _BIT_ACCESS(PWM5INTF,2)
// PWM5PHL<PWM5PHL0>
extern volatile __bit                   PWM5PHL0            __at(0x6C88);	// @ (0xD91 * 8 + 0)
#define                                 PWM5PHL0_bit        _BIT_ACCESS(PWM5PHL,0)
// PWM5PHL<PWM5PHL1>
extern volatile __bit                   PWM5PHL1            __at(0x6C89);	// @ (0xD91 * 8 + 1)
#define                                 PWM5PHL1_bit        _BIT_ACCESS(PWM5PHL,1)
// PWM5PHL<PWM5PHL2>
extern volatile __bit                   PWM5PHL2            __at(0x6C8A);	// @ (0xD91 * 8 + 2)
#define                                 PWM5PHL2_bit        _BIT_ACCESS(PWM5PHL,2)
// PWM5PHL<PWM5PHL3>
extern volatile __bit                   PWM5PHL3            __at(0x6C8B);	// @ (0xD91 * 8 + 3)
#define                                 PWM5PHL3_bit        _BIT_ACCESS(PWM5PHL,3)
// PWM5PHL<PWM5PHL4>
extern volatile __bit                   PWM5PHL4            __at(0x6C8C);	// @ (0xD91 * 8 + 4)
#define                                 PWM5PHL4_bit        _BIT_ACCESS(PWM5PHL,4)
// PWM5PHL<PWM5PHL5>
extern volatile __bit                   PWM5PHL5            __at(0x6C8D);	// @ (0xD91 * 8 + 5)
#define                                 PWM5PHL5_bit        _BIT_ACCESS(PWM5PHL,5)
// PWM5PHL<PWM5PHL6>
extern volatile __bit                   PWM5PHL6            __at(0x6C8E);	// @ (0xD91 * 8 + 6)
#define                                 PWM5PHL6_bit        _BIT_ACCESS(PWM5PHL,6)
// PWM5PHL<PWM5PHL7>
extern volatile __bit                   PWM5PHL7            __at(0x6C8F);	// @ (0xD91 * 8 + 7)
#define                                 PWM5PHL7_bit        _BIT_ACCESS(PWM5PHL,7)
// PWM5CON<PWM5POL>
extern volatile __bit                   PWM5POL             __at(0x6CDC);	// @ (0xD9B * 8 + 4)
#define                                 PWM5POL_bit         _BIT_ACCESS(PWM5CON,4)
// PWM5PRH<PWM5PRH0>
extern volatile __bit                   PWM5PRH0            __at(0x6CB0);	// @ (0xD96 * 8 + 0)
#define                                 PWM5PRH0_bit        _BIT_ACCESS(PWM5PRH,0)
// PWM5PRH<PWM5PRH1>
extern volatile __bit                   PWM5PRH1            __at(0x6CB1);	// @ (0xD96 * 8 + 1)
#define                                 PWM5PRH1_bit        _BIT_ACCESS(PWM5PRH,1)
// PWM5PRH<PWM5PRH2>
extern volatile __bit                   PWM5PRH2            __at(0x6CB2);	// @ (0xD96 * 8 + 2)
#define                                 PWM5PRH2_bit        _BIT_ACCESS(PWM5PRH,2)
// PWM5PRH<PWM5PRH3>
extern volatile __bit                   PWM5PRH3            __at(0x6CB3);	// @ (0xD96 * 8 + 3)
#define                                 PWM5PRH3_bit        _BIT_ACCESS(PWM5PRH,3)
// PWM5PRH<PWM5PRH4>
extern volatile __bit                   PWM5PRH4            __at(0x6CB4);	// @ (0xD96 * 8 + 4)
#define                                 PWM5PRH4_bit        _BIT_ACCESS(PWM5PRH,4)
// PWM5PRH<PWM5PRH5>
extern volatile __bit                   PWM5PRH5            __at(0x6CB5);	// @ (0xD96 * 8 + 5)
#define                                 PWM5PRH5_bit        _BIT_ACCESS(PWM5PRH,5)
// PWM5PRH<PWM5PRH6>
extern volatile __bit                   PWM5PRH6            __at(0x6CB6);	// @ (0xD96 * 8 + 6)
#define                                 PWM5PRH6_bit        _BIT_ACCESS(PWM5PRH,6)
// PWM5PRH<PWM5PRH7>
extern volatile __bit                   PWM5PRH7            __at(0x6CB7);	// @ (0xD96 * 8 + 7)
#define                                 PWM5PRH7_bit        _BIT_ACCESS(PWM5PRH,7)
// PWM5INTE<PWM5PRIE>
extern volatile __bit                   PWM5PRIE            __at(0x6CE0);	// @ (0xD9C * 8 + 0)
#define                                 PWM5PRIE_bit        _BIT_ACCESS(PWM5INTE,0)
// PWM5INTF<PWM5PRIF>
extern volatile __bit                   PWM5PRIF            __at(0x6CE8);	// @ (0xD9D * 8 + 0)
#define                                 PWM5PRIF_bit        _BIT_ACCESS(PWM5INTF,0)
// PWM5PRL<PWM5PRL0>
extern volatile __bit                   PWM5PRL0            __at(0x6CA8);	// @ (0xD95 * 8 + 0)
#define                                 PWM5PRL0_bit        _BIT_ACCESS(PWM5PRL,0)
// PWM5PRL<PWM5PRL1>
extern volatile __bit                   PWM5PRL1            __at(0x6CA9);	// @ (0xD95 * 8 + 1)
#define                                 PWM5PRL1_bit        _BIT_ACCESS(PWM5PRL,1)
// PWM5PRL<PWM5PRL2>
extern volatile __bit                   PWM5PRL2            __at(0x6CAA);	// @ (0xD95 * 8 + 2)
#define                                 PWM5PRL2_bit        _BIT_ACCESS(PWM5PRL,2)
// PWM5PRL<PWM5PRL3>
extern volatile __bit                   PWM5PRL3            __at(0x6CAB);	// @ (0xD95 * 8 + 3)
#define                                 PWM5PRL3_bit        _BIT_ACCESS(PWM5PRL,3)
// PWM5PRL<PWM5PRL4>
extern volatile __bit                   PWM5PRL4            __at(0x6CAC);	// @ (0xD95 * 8 + 4)
#define                                 PWM5PRL4_bit        _BIT_ACCESS(PWM5PRL,4)
// PWM5PRL<PWM5PRL5>
extern volatile __bit                   PWM5PRL5            __at(0x6CAD);	// @ (0xD95 * 8 + 5)
#define                                 PWM5PRL5_bit        _BIT_ACCESS(PWM5PRL,5)
// PWM5PRL<PWM5PRL6>
extern volatile __bit                   PWM5PRL6            __at(0x6CAE);	// @ (0xD95 * 8 + 6)
#define                                 PWM5PRL6_bit        _BIT_ACCESS(PWM5PRL,6)
// PWM5PRL<PWM5PRL7>
extern volatile __bit                   PWM5PRL7            __at(0x6CAF);	// @ (0xD95 * 8 + 7)
#define                                 PWM5PRL7_bit        _BIT_ACCESS(PWM5PRL,7)
// PWM5CLKCON<PWM5PS0>
extern volatile __bit                   PWM5PS0             __at(0x6CF4);	// @ (0xD9E * 8 + 4)
#define                                 PWM5PS0_bit         _BIT_ACCESS(PWM5CLKCON,4)
// PWM5CLKCON<PWM5PS1>
extern volatile __bit                   PWM5PS1             __at(0x6CF5);	// @ (0xD9E * 8 + 5)
#define                                 PWM5PS1_bit         _BIT_ACCESS(PWM5CLKCON,5)
// PWM5CLKCON<PWM5PS2>
extern volatile __bit                   PWM5PS2             __at(0x6CF6);	// @ (0xD9E * 8 + 6)
#define                                 PWM5PS2_bit         _BIT_ACCESS(PWM5CLKCON,6)
// PWM5TMRH<PWM5TMRH0>
extern volatile __bit                   PWM5TMRH0           __at(0x6CD0);	// @ (0xD9A * 8 + 0)
#define                                 PWM5TMRH0_bit       _BIT_ACCESS(PWM5TMRH,0)
// PWM5TMRH<PWM5TMRH1>
extern volatile __bit                   PWM5TMRH1           __at(0x6CD1);	// @ (0xD9A * 8 + 1)
#define                                 PWM5TMRH1_bit       _BIT_ACCESS(PWM5TMRH,1)
// PWM5TMRH<PWM5TMRH2>
extern volatile __bit                   PWM5TMRH2           __at(0x6CD2);	// @ (0xD9A * 8 + 2)
#define                                 PWM5TMRH2_bit       _BIT_ACCESS(PWM5TMRH,2)
// PWM5TMRH<PWM5TMRH3>
extern volatile __bit                   PWM5TMRH3           __at(0x6CD3);	// @ (0xD9A * 8 + 3)
#define                                 PWM5TMRH3_bit       _BIT_ACCESS(PWM5TMRH,3)
// PWM5TMRH<PWM5TMRH4>
extern volatile __bit                   PWM5TMRH4           __at(0x6CD4);	// @ (0xD9A * 8 + 4)
#define                                 PWM5TMRH4_bit       _BIT_ACCESS(PWM5TMRH,4)
// PWM5TMRH<PWM5TMRH5>
extern volatile __bit                   PWM5TMRH5           __at(0x6CD5);	// @ (0xD9A * 8 + 5)
#define                                 PWM5TMRH5_bit       _BIT_ACCESS(PWM5TMRH,5)
// PWM5TMRH<PWM5TMRH6>
extern volatile __bit                   PWM5TMRH6           __at(0x6CD6);	// @ (0xD9A * 8 + 6)
#define                                 PWM5TMRH6_bit       _BIT_ACCESS(PWM5TMRH,6)
// PWM5TMRH<PWM5TMRH7>
extern volatile __bit                   PWM5TMRH7           __at(0x6CD7);	// @ (0xD9A * 8 + 7)
#define                                 PWM5TMRH7_bit       _BIT_ACCESS(PWM5TMRH,7)
// PWM5TMRL<PWM5TMRL0>
extern volatile __bit                   PWM5TMRL0           __at(0x6CC8);	// @ (0xD99 * 8 + 0)
#define                                 PWM5TMRL0_bit       _BIT_ACCESS(PWM5TMRL,0)
// PWM5TMRL<PWM5TMRL1>
extern volatile __bit                   PWM5TMRL1           __at(0x6CC9);	// @ (0xD99 * 8 + 1)
#define                                 PWM5TMRL1_bit       _BIT_ACCESS(PWM5TMRL,1)
// PWM5TMRL<PWM5TMRL2>
extern volatile __bit                   PWM5TMRL2           __at(0x6CCA);	// @ (0xD99 * 8 + 2)
#define                                 PWM5TMRL2_bit       _BIT_ACCESS(PWM5TMRL,2)
// PWM5TMRL<PWM5TMRL3>
extern volatile __bit                   PWM5TMRL3           __at(0x6CCB);	// @ (0xD99 * 8 + 3)
#define                                 PWM5TMRL3_bit       _BIT_ACCESS(PWM5TMRL,3)
// PWM5TMRL<PWM5TMRL4>
extern volatile __bit                   PWM5TMRL4           __at(0x6CCC);	// @ (0xD99 * 8 + 4)
#define                                 PWM5TMRL4_bit       _BIT_ACCESS(PWM5TMRL,4)
// PWM5TMRL<PWM5TMRL5>
extern volatile __bit                   PWM5TMRL5           __at(0x6CCD);	// @ (0xD99 * 8 + 5)
#define                                 PWM5TMRL5_bit       _BIT_ACCESS(PWM5TMRL,5)
// PWM5TMRL<PWM5TMRL6>
extern volatile __bit                   PWM5TMRL6           __at(0x6CCE);	// @ (0xD99 * 8 + 6)
#define                                 PWM5TMRL6_bit       _BIT_ACCESS(PWM5TMRL,6)
// PWM5TMRL<PWM5TMRL7>
extern volatile __bit                   PWM5TMRL7           __at(0x6CCF);	// @ (0xD99 * 8 + 7)
#define                                 PWM5TMRL7_bit       _BIT_ACCESS(PWM5TMRL,7)
// PWM6CLKCON<PWM6CS0>
extern volatile __bit                   PWM6CS0             __at(0x6D70);	// @ (0xDAE * 8 + 0)
#define                                 PWM6CS0_bit         _BIT_ACCESS(PWM6CLKCON,0)
// PWM6CLKCON<PWM6CS1>
extern volatile __bit                   PWM6CS1             __at(0x6D71);	// @ (0xDAE * 8 + 1)
#define                                 PWM6CS1_bit         _BIT_ACCESS(PWM6CLKCON,1)
// PWM6CLKCON<PWM6CS2>
extern volatile __bit                   PWM6CS2             __at(0x6D72);	// @ (0xDAE * 8 + 2)
#define                                 PWM6CS2_bit         _BIT_ACCESS(PWM6CLKCON,2)
// PWM6DCH<PWM6DCH0>
extern volatile __bit                   PWM6DCH0            __at(0x6D20);	// @ (0xDA4 * 8 + 0)
#define                                 PWM6DCH0_bit        _BIT_ACCESS(PWM6DCH,0)
// PWM6DCH<PWM6DCH1>
extern volatile __bit                   PWM6DCH1            __at(0x6D21);	// @ (0xDA4 * 8 + 1)
#define                                 PWM6DCH1_bit        _BIT_ACCESS(PWM6DCH,1)
// PWM6DCH<PWM6DCH2>
extern volatile __bit                   PWM6DCH2            __at(0x6D22);	// @ (0xDA4 * 8 + 2)
#define                                 PWM6DCH2_bit        _BIT_ACCESS(PWM6DCH,2)
// PWM6DCH<PWM6DCH3>
extern volatile __bit                   PWM6DCH3            __at(0x6D23);	// @ (0xDA4 * 8 + 3)
#define                                 PWM6DCH3_bit        _BIT_ACCESS(PWM6DCH,3)
// PWM6DCH<PWM6DCH4>
extern volatile __bit                   PWM6DCH4            __at(0x6D24);	// @ (0xDA4 * 8 + 4)
#define                                 PWM6DCH4_bit        _BIT_ACCESS(PWM6DCH,4)
// PWM6DCH<PWM6DCH5>
extern volatile __bit                   PWM6DCH5            __at(0x6D25);	// @ (0xDA4 * 8 + 5)
#define                                 PWM6DCH5_bit        _BIT_ACCESS(PWM6DCH,5)
// PWM6DCH<PWM6DCH6>
extern volatile __bit                   PWM6DCH6            __at(0x6D26);	// @ (0xDA4 * 8 + 6)
#define                                 PWM6DCH6_bit        _BIT_ACCESS(PWM6DCH,6)
// PWM6DCH<PWM6DCH7>
extern volatile __bit                   PWM6DCH7            __at(0x6D27);	// @ (0xDA4 * 8 + 7)
#define                                 PWM6DCH7_bit        _BIT_ACCESS(PWM6DCH,7)
// PWM6INTE<PWM6DCIE>
extern volatile __bit                   PWM6DCIE            __at(0x6D61);	// @ (0xDAC * 8 + 1)
#define                                 PWM6DCIE_bit        _BIT_ACCESS(PWM6INTE,1)
// PWM6INTF<PWM6DCIF>
extern volatile __bit                   PWM6DCIF            __at(0x6D69);	// @ (0xDAD * 8 + 1)
#define                                 PWM6DCIF_bit        _BIT_ACCESS(PWM6INTF,1)
// PWM6DCL<PWM6DCL0>
extern volatile __bit                   PWM6DCL0            __at(0x6D18);	// @ (0xDA3 * 8 + 0)
#define                                 PWM6DCL0_bit        _BIT_ACCESS(PWM6DCL,0)
// PWM6DCL<PWM6DCL1>
extern volatile __bit                   PWM6DCL1            __at(0x6D19);	// @ (0xDA3 * 8 + 1)
#define                                 PWM6DCL1_bit        _BIT_ACCESS(PWM6DCL,1)
// PWM6DCL<PWM6DCL2>
extern volatile __bit                   PWM6DCL2            __at(0x6D1A);	// @ (0xDA3 * 8 + 2)
#define                                 PWM6DCL2_bit        _BIT_ACCESS(PWM6DCL,2)
// PWM6DCL<PWM6DCL3>
extern volatile __bit                   PWM6DCL3            __at(0x6D1B);	// @ (0xDA3 * 8 + 3)
#define                                 PWM6DCL3_bit        _BIT_ACCESS(PWM6DCL,3)
// PWM6DCL<PWM6DCL4>
extern volatile __bit                   PWM6DCL4            __at(0x6D1C);	// @ (0xDA3 * 8 + 4)
#define                                 PWM6DCL4_bit        _BIT_ACCESS(PWM6DCL,4)
// PWM6DCL<PWM6DCL5>
extern volatile __bit                   PWM6DCL5            __at(0x6D1D);	// @ (0xDA3 * 8 + 5)
#define                                 PWM6DCL5_bit        _BIT_ACCESS(PWM6DCL,5)
// PWM6DCL<PWM6DCL6>
extern volatile __bit                   PWM6DCL6            __at(0x6D1E);	// @ (0xDA3 * 8 + 6)
#define                                 PWM6DCL6_bit        _BIT_ACCESS(PWM6DCL,6)
// PWM6DCL<PWM6DCL7>
extern volatile __bit                   PWM6DCL7            __at(0x6D1F);	// @ (0xDA3 * 8 + 7)
#define                                 PWM6DCL7_bit        _BIT_ACCESS(PWM6DCL,7)
// PWM6CON<PWM6EN>
extern volatile __bit                   PWM6EN              __at(0x6D5F);	// @ (0xDAB * 8 + 7)
#define                                 PWM6EN_bit          _BIT_ACCESS(PWM6CON,7)
// PIE6<PWM6IE>
extern volatile __bit                   PWM6IE              __at(0x4B1);	// @ (0x96 * 8 + 1)
#define                                 PWM6IE_bit          _BIT_ACCESS(PIE6,1)
// PIR6<PWM6IF>
extern volatile __bit                   PWM6IF              __at(0xB1);	// @ (0x16 * 8 + 1)
#define                                 PWM6IF_bit          _BIT_ACCESS(PIR6,1)
// PWM6LDCON<PWM6LD>
extern volatile __bit                   PWM6LD              __at(0x6D7F);	// @ (0xDAF * 8 + 7)
#define                                 PWM6LD_bit          _BIT_ACCESS(PWM6LDCON,7)
// PWM6LDCON<PWM6LDM>
extern volatile __bit                   PWM6LDM             __at(0x6D7E);	// @ (0xDAF * 8 + 6)
#define                                 PWM6LDM_bit         _BIT_ACCESS(PWM6LDCON,6)
// PWM6LDCON<PWM6LDS0>
extern volatile __bit                   PWM6LDS0            __at(0x6D78);	// @ (0xDAF * 8 + 0)
#define                                 PWM6LDS0_bit        _BIT_ACCESS(PWM6LDCON,0)
// PWM6LDCON<PWM6LDS1>
extern volatile __bit                   PWM6LDS1            __at(0x6D79);	// @ (0xDAF * 8 + 1)
#define                                 PWM6LDS1_bit        _BIT_ACCESS(PWM6LDCON,1)
// PWM6CON<PWM6MODE0>
extern volatile __bit                   PWM6MODE0           __at(0x6D5A);	// @ (0xDAB * 8 + 2)
#define                                 PWM6MODE0_bit       _BIT_ACCESS(PWM6CON,2)
// PWM6CON<PWM6MODE1>
extern volatile __bit                   PWM6MODE1           __at(0x6D5B);	// @ (0xDAB * 8 + 3)
#define                                 PWM6MODE1_bit       _BIT_ACCESS(PWM6CON,3)
// PWM6OFH<PWM6OFH0>
extern volatile __bit                   PWM6OFH0            __at(0x6D40);	// @ (0xDA8 * 8 + 0)
#define                                 PWM6OFH0_bit        _BIT_ACCESS(PWM6OFH,0)
// PWM6OFH<PWM6OFH1>
extern volatile __bit                   PWM6OFH1            __at(0x6D41);	// @ (0xDA8 * 8 + 1)
#define                                 PWM6OFH1_bit        _BIT_ACCESS(PWM6OFH,1)
// PWM6OFH<PWM6OFH2>
extern volatile __bit                   PWM6OFH2            __at(0x6D42);	// @ (0xDA8 * 8 + 2)
#define                                 PWM6OFH2_bit        _BIT_ACCESS(PWM6OFH,2)
// PWM6OFH<PWM6OFH3>
extern volatile __bit                   PWM6OFH3            __at(0x6D43);	// @ (0xDA8 * 8 + 3)
#define                                 PWM6OFH3_bit        _BIT_ACCESS(PWM6OFH,3)
// PWM6OFH<PWM6OFH4>
extern volatile __bit                   PWM6OFH4            __at(0x6D44);	// @ (0xDA8 * 8 + 4)
#define                                 PWM6OFH4_bit        _BIT_ACCESS(PWM6OFH,4)
// PWM6OFH<PWM6OFH5>
extern volatile __bit                   PWM6OFH5            __at(0x6D45);	// @ (0xDA8 * 8 + 5)
#define                                 PWM6OFH5_bit        _BIT_ACCESS(PWM6OFH,5)
// PWM6OFH<PWM6OFH6>
extern volatile __bit                   PWM6OFH6            __at(0x6D46);	// @ (0xDA8 * 8 + 6)
#define                                 PWM6OFH6_bit        _BIT_ACCESS(PWM6OFH,6)
// PWM6OFH<PWM6OFH7>
extern volatile __bit                   PWM6OFH7            __at(0x6D47);	// @ (0xDA8 * 8 + 7)
#define                                 PWM6OFH7_bit        _BIT_ACCESS(PWM6OFH,7)
// PWM6INTE<PWM6OFIE>
extern volatile __bit                   PWM6OFIE            __at(0x6D63);	// @ (0xDAC * 8 + 3)
#define                                 PWM6OFIE_bit        _BIT_ACCESS(PWM6INTE,3)
// PWM6INTF<PWM6OFIF>
extern volatile __bit                   PWM6OFIF            __at(0x6D6B);	// @ (0xDAD * 8 + 3)
#define                                 PWM6OFIF_bit        _BIT_ACCESS(PWM6INTF,3)
// PWM6OFL<PWM6OFL0>
extern volatile __bit                   PWM6OFL0            __at(0x6D38);	// @ (0xDA7 * 8 + 0)
#define                                 PWM6OFL0_bit        _BIT_ACCESS(PWM6OFL,0)
// PWM6OFL<PWM6OFL1>
extern volatile __bit                   PWM6OFL1            __at(0x6D39);	// @ (0xDA7 * 8 + 1)
#define                                 PWM6OFL1_bit        _BIT_ACCESS(PWM6OFL,1)
// PWM6OFL<PWM6OFL2>
extern volatile __bit                   PWM6OFL2            __at(0x6D3A);	// @ (0xDA7 * 8 + 2)
#define                                 PWM6OFL2_bit        _BIT_ACCESS(PWM6OFL,2)
// PWM6OFL<PWM6OFL3>
extern volatile __bit                   PWM6OFL3            __at(0x6D3B);	// @ (0xDA7 * 8 + 3)
#define                                 PWM6OFL3_bit        _BIT_ACCESS(PWM6OFL,3)
// PWM6OFL<PWM6OFL4>
extern volatile __bit                   PWM6OFL4            __at(0x6D3C);	// @ (0xDA7 * 8 + 4)
#define                                 PWM6OFL4_bit        _BIT_ACCESS(PWM6OFL,4)
// PWM6OFL<PWM6OFL5>
extern volatile __bit                   PWM6OFL5            __at(0x6D3D);	// @ (0xDA7 * 8 + 5)
#define                                 PWM6OFL5_bit        _BIT_ACCESS(PWM6OFL,5)
// PWM6OFL<PWM6OFL6>
extern volatile __bit                   PWM6OFL6            __at(0x6D3E);	// @ (0xDA7 * 8 + 6)
#define                                 PWM6OFL6_bit        _BIT_ACCESS(PWM6OFL,6)
// PWM6OFL<PWM6OFL7>
extern volatile __bit                   PWM6OFL7            __at(0x6D3F);	// @ (0xDA7 * 8 + 7)
#define                                 PWM6OFL7_bit        _BIT_ACCESS(PWM6OFL,7)
// PWM6OFCON<PWM6OFM0>
extern volatile __bit                   PWM6OFM0            __at(0x6D85);	// @ (0xDB0 * 8 + 5)
#define                                 PWM6OFM0_bit        _BIT_ACCESS(PWM6OFCON,5)
// PWM6OFCON<PWM6OFM1>
extern volatile __bit                   PWM6OFM1            __at(0x6D86);	// @ (0xDB0 * 8 + 6)
#define                                 PWM6OFM1_bit        _BIT_ACCESS(PWM6OFCON,6)
// PWM6OFCON<PWM6OFMC>
extern volatile __bit                   PWM6OFMC            __at(0x6D84);	// @ (0xDB0 * 8 + 4)
#define                                 PWM6OFMC_bit        _BIT_ACCESS(PWM6OFCON,4)
// PWM6OFCON<PWM6OFS0>
extern volatile __bit                   PWM6OFS0            __at(0x6D80);	// @ (0xDB0 * 8 + 0)
#define                                 PWM6OFS0_bit        _BIT_ACCESS(PWM6OFCON,0)
// PWM6OFCON<PWM6OFS1>
extern volatile __bit                   PWM6OFS1            __at(0x6D81);	// @ (0xDB0 * 8 + 1)
#define                                 PWM6OFS1_bit        _BIT_ACCESS(PWM6OFCON,1)
// PWM6CON<PWM6OUT>
extern volatile __bit                   PWM6OUT             __at(0x6D5D);	// @ (0xDAB * 8 + 5)
#define                                 PWM6OUT_bit         _BIT_ACCESS(PWM6CON,5)
// PWM6PHH<PWM6PHH0>
extern volatile __bit                   PWM6PHH0            __at(0x6D10);	// @ (0xDA2 * 8 + 0)
#define                                 PWM6PHH0_bit        _BIT_ACCESS(PWM6PHH,0)
// PWM6PHH<PWM6PHH1>
extern volatile __bit                   PWM6PHH1            __at(0x6D11);	// @ (0xDA2 * 8 + 1)
#define                                 PWM6PHH1_bit        _BIT_ACCESS(PWM6PHH,1)
// PWM6PHH<PWM6PHH2>
extern volatile __bit                   PWM6PHH2            __at(0x6D12);	// @ (0xDA2 * 8 + 2)
#define                                 PWM6PHH2_bit        _BIT_ACCESS(PWM6PHH,2)
// PWM6PHH<PWM6PHH3>
extern volatile __bit                   PWM6PHH3            __at(0x6D13);	// @ (0xDA2 * 8 + 3)
#define                                 PWM6PHH3_bit        _BIT_ACCESS(PWM6PHH,3)
// PWM6PHH<PWM6PHH4>
extern volatile __bit                   PWM6PHH4            __at(0x6D14);	// @ (0xDA2 * 8 + 4)
#define                                 PWM6PHH4_bit        _BIT_ACCESS(PWM6PHH,4)
// PWM6PHH<PWM6PHH5>
extern volatile __bit                   PWM6PHH5            __at(0x6D15);	// @ (0xDA2 * 8 + 5)
#define                                 PWM6PHH5_bit        _BIT_ACCESS(PWM6PHH,5)
// PWM6PHH<PWM6PHH6>
extern volatile __bit                   PWM6PHH6            __at(0x6D16);	// @ (0xDA2 * 8 + 6)
#define                                 PWM6PHH6_bit        _BIT_ACCESS(PWM6PHH,6)
// PWM6PHH<PWM6PHH7>
extern volatile __bit                   PWM6PHH7            __at(0x6D17);	// @ (0xDA2 * 8 + 7)
#define                                 PWM6PHH7_bit        _BIT_ACCESS(PWM6PHH,7)
// PWM6INTE<PWM6PHIE>
extern volatile __bit                   PWM6PHIE            __at(0x6D62);	// @ (0xDAC * 8 + 2)
#define                                 PWM6PHIE_bit        _BIT_ACCESS(PWM6INTE,2)
// PWM6INTF<PWM6PHIF>
extern volatile __bit                   PWM6PHIF            __at(0x6D6A);	// @ (0xDAD * 8 + 2)
#define                                 PWM6PHIF_bit        _BIT_ACCESS(PWM6INTF,2)
// PWM6PHL<PWM6PHL0>
extern volatile __bit                   PWM6PHL0            __at(0x6D08);	// @ (0xDA1 * 8 + 0)
#define                                 PWM6PHL0_bit        _BIT_ACCESS(PWM6PHL,0)
// PWM6PHL<PWM6PHL1>
extern volatile __bit                   PWM6PHL1            __at(0x6D09);	// @ (0xDA1 * 8 + 1)
#define                                 PWM6PHL1_bit        _BIT_ACCESS(PWM6PHL,1)
// PWM6PHL<PWM6PHL2>
extern volatile __bit                   PWM6PHL2            __at(0x6D0A);	// @ (0xDA1 * 8 + 2)
#define                                 PWM6PHL2_bit        _BIT_ACCESS(PWM6PHL,2)
// PWM6PHL<PWM6PHL3>
extern volatile __bit                   PWM6PHL3            __at(0x6D0B);	// @ (0xDA1 * 8 + 3)
#define                                 PWM6PHL3_bit        _BIT_ACCESS(PWM6PHL,3)
// PWM6PHL<PWM6PHL4>
extern volatile __bit                   PWM6PHL4            __at(0x6D0C);	// @ (0xDA1 * 8 + 4)
#define                                 PWM6PHL4_bit        _BIT_ACCESS(PWM6PHL,4)
// PWM6PHL<PWM6PHL5>
extern volatile __bit                   PWM6PHL5            __at(0x6D0D);	// @ (0xDA1 * 8 + 5)
#define                                 PWM6PHL5_bit        _BIT_ACCESS(PWM6PHL,5)
// PWM6PHL<PWM6PHL6>
extern volatile __bit                   PWM6PHL6            __at(0x6D0E);	// @ (0xDA1 * 8 + 6)
#define                                 PWM6PHL6_bit        _BIT_ACCESS(PWM6PHL,6)
// PWM6PHL<PWM6PHL7>
extern volatile __bit                   PWM6PHL7            __at(0x6D0F);	// @ (0xDA1 * 8 + 7)
#define                                 PWM6PHL7_bit        _BIT_ACCESS(PWM6PHL,7)
// PWM6CON<PWM6POL>
extern volatile __bit                   PWM6POL             __at(0x6D5C);	// @ (0xDAB * 8 + 4)
#define                                 PWM6POL_bit         _BIT_ACCESS(PWM6CON,4)
// PWM6PRH<PWM6PRH0>
extern volatile __bit                   PWM6PRH0            __at(0x6D30);	// @ (0xDA6 * 8 + 0)
#define                                 PWM6PRH0_bit        _BIT_ACCESS(PWM6PRH,0)
// PWM6PRH<PWM6PRH1>
extern volatile __bit                   PWM6PRH1            __at(0x6D31);	// @ (0xDA6 * 8 + 1)
#define                                 PWM6PRH1_bit        _BIT_ACCESS(PWM6PRH,1)
// PWM6PRH<PWM6PRH2>
extern volatile __bit                   PWM6PRH2            __at(0x6D32);	// @ (0xDA6 * 8 + 2)
#define                                 PWM6PRH2_bit        _BIT_ACCESS(PWM6PRH,2)
// PWM6PRH<PWM6PRH3>
extern volatile __bit                   PWM6PRH3            __at(0x6D33);	// @ (0xDA6 * 8 + 3)
#define                                 PWM6PRH3_bit        _BIT_ACCESS(PWM6PRH,3)
// PWM6PRH<PWM6PRH4>
extern volatile __bit                   PWM6PRH4            __at(0x6D34);	// @ (0xDA6 * 8 + 4)
#define                                 PWM6PRH4_bit        _BIT_ACCESS(PWM6PRH,4)
// PWM6PRH<PWM6PRH5>
extern volatile __bit                   PWM6PRH5            __at(0x6D35);	// @ (0xDA6 * 8 + 5)
#define                                 PWM6PRH5_bit        _BIT_ACCESS(PWM6PRH,5)
// PWM6PRH<PWM6PRH6>
extern volatile __bit                   PWM6PRH6            __at(0x6D36);	// @ (0xDA6 * 8 + 6)
#define                                 PWM6PRH6_bit        _BIT_ACCESS(PWM6PRH,6)
// PWM6PRH<PWM6PRH7>
extern volatile __bit                   PWM6PRH7            __at(0x6D37);	// @ (0xDA6 * 8 + 7)
#define                                 PWM6PRH7_bit        _BIT_ACCESS(PWM6PRH,7)
// PWM6INTE<PWM6PRIE>
extern volatile __bit                   PWM6PRIE            __at(0x6D60);	// @ (0xDAC * 8 + 0)
#define                                 PWM6PRIE_bit        _BIT_ACCESS(PWM6INTE,0)
// PWM6INTF<PWM6PRIF>
extern volatile __bit                   PWM6PRIF            __at(0x6D68);	// @ (0xDAD * 8 + 0)
#define                                 PWM6PRIF_bit        _BIT_ACCESS(PWM6INTF,0)
// PWM6PRL<PWM6PRL0>
extern volatile __bit                   PWM6PRL0            __at(0x6D28);	// @ (0xDA5 * 8 + 0)
#define                                 PWM6PRL0_bit        _BIT_ACCESS(PWM6PRL,0)
// PWM6PRL<PWM6PRL1>
extern volatile __bit                   PWM6PRL1            __at(0x6D29);	// @ (0xDA5 * 8 + 1)
#define                                 PWM6PRL1_bit        _BIT_ACCESS(PWM6PRL,1)
// PWM6PRL<PWM6PRL2>
extern volatile __bit                   PWM6PRL2            __at(0x6D2A);	// @ (0xDA5 * 8 + 2)
#define                                 PWM6PRL2_bit        _BIT_ACCESS(PWM6PRL,2)
// PWM6PRL<PWM6PRL3>
extern volatile __bit                   PWM6PRL3            __at(0x6D2B);	// @ (0xDA5 * 8 + 3)
#define                                 PWM6PRL3_bit        _BIT_ACCESS(PWM6PRL,3)
// PWM6PRL<PWM6PRL4>
extern volatile __bit                   PWM6PRL4            __at(0x6D2C);	// @ (0xDA5 * 8 + 4)
#define                                 PWM6PRL4_bit        _BIT_ACCESS(PWM6PRL,4)
// PWM6PRL<PWM6PRL5>
extern volatile __bit                   PWM6PRL5            __at(0x6D2D);	// @ (0xDA5 * 8 + 5)
#define                                 PWM6PRL5_bit        _BIT_ACCESS(PWM6PRL,5)
// PWM6PRL<PWM6PRL6>
extern volatile __bit                   PWM6PRL6            __at(0x6D2E);	// @ (0xDA5 * 8 + 6)
#define                                 PWM6PRL6_bit        _BIT_ACCESS(PWM6PRL,6)
// PWM6PRL<PWM6PRL7>
extern volatile __bit                   PWM6PRL7            __at(0x6D2F);	// @ (0xDA5 * 8 + 7)
#define                                 PWM6PRL7_bit        _BIT_ACCESS(PWM6PRL,7)
// PWM6CLKCON<PWM6PS0>
extern volatile __bit                   PWM6PS0             __at(0x6D74);	// @ (0xDAE * 8 + 4)
#define                                 PWM6PS0_bit         _BIT_ACCESS(PWM6CLKCON,4)
// PWM6CLKCON<PWM6PS1>
extern volatile __bit                   PWM6PS1             __at(0x6D75);	// @ (0xDAE * 8 + 5)
#define                                 PWM6PS1_bit         _BIT_ACCESS(PWM6CLKCON,5)
// PWM6CLKCON<PWM6PS2>
extern volatile __bit                   PWM6PS2             __at(0x6D76);	// @ (0xDAE * 8 + 6)
#define                                 PWM6PS2_bit         _BIT_ACCESS(PWM6CLKCON,6)
// PWM6TMRH<PWM6TMRH0>
extern volatile __bit                   PWM6TMRH0           __at(0x6D50);	// @ (0xDAA * 8 + 0)
#define                                 PWM6TMRH0_bit       _BIT_ACCESS(PWM6TMRH,0)
// PWM6TMRH<PWM6TMRH1>
extern volatile __bit                   PWM6TMRH1           __at(0x6D51);	// @ (0xDAA * 8 + 1)
#define                                 PWM6TMRH1_bit       _BIT_ACCESS(PWM6TMRH,1)
// PWM6TMRH<PWM6TMRH2>
extern volatile __bit                   PWM6TMRH2           __at(0x6D52);	// @ (0xDAA * 8 + 2)
#define                                 PWM6TMRH2_bit       _BIT_ACCESS(PWM6TMRH,2)
// PWM6TMRH<PWM6TMRH3>
extern volatile __bit                   PWM6TMRH3           __at(0x6D53);	// @ (0xDAA * 8 + 3)
#define                                 PWM6TMRH3_bit       _BIT_ACCESS(PWM6TMRH,3)
// PWM6TMRH<PWM6TMRH4>
extern volatile __bit                   PWM6TMRH4           __at(0x6D54);	// @ (0xDAA * 8 + 4)
#define                                 PWM6TMRH4_bit       _BIT_ACCESS(PWM6TMRH,4)
// PWM6TMRH<PWM6TMRH5>
extern volatile __bit                   PWM6TMRH5           __at(0x6D55);	// @ (0xDAA * 8 + 5)
#define                                 PWM6TMRH5_bit       _BIT_ACCESS(PWM6TMRH,5)
// PWM6TMRH<PWM6TMRH6>
extern volatile __bit                   PWM6TMRH6           __at(0x6D56);	// @ (0xDAA * 8 + 6)
#define                                 PWM6TMRH6_bit       _BIT_ACCESS(PWM6TMRH,6)
// PWM6TMRH<PWM6TMRH7>
extern volatile __bit                   PWM6TMRH7           __at(0x6D57);	// @ (0xDAA * 8 + 7)
#define                                 PWM6TMRH7_bit       _BIT_ACCESS(PWM6TMRH,7)
// PWM6TMRL<PWM6TMRL0>
extern volatile __bit                   PWM6TMRL0           __at(0x6D48);	// @ (0xDA9 * 8 + 0)
#define                                 PWM6TMRL0_bit       _BIT_ACCESS(PWM6TMRL,0)
// PWM6TMRL<PWM6TMRL1>
extern volatile __bit                   PWM6TMRL1           __at(0x6D49);	// @ (0xDA9 * 8 + 1)
#define                                 PWM6TMRL1_bit       _BIT_ACCESS(PWM6TMRL,1)
// PWM6TMRL<PWM6TMRL2>
extern volatile __bit                   PWM6TMRL2           __at(0x6D4A);	// @ (0xDA9 * 8 + 2)
#define                                 PWM6TMRL2_bit       _BIT_ACCESS(PWM6TMRL,2)
// PWM6TMRL<PWM6TMRL3>
extern volatile __bit                   PWM6TMRL3           __at(0x6D4B);	// @ (0xDA9 * 8 + 3)
#define                                 PWM6TMRL3_bit       _BIT_ACCESS(PWM6TMRL,3)
// PWM6TMRL<PWM6TMRL4>
extern volatile __bit                   PWM6TMRL4           __at(0x6D4C);	// @ (0xDA9 * 8 + 4)
#define                                 PWM6TMRL4_bit       _BIT_ACCESS(PWM6TMRL,4)
// PWM6TMRL<PWM6TMRL5>
extern volatile __bit                   PWM6TMRL5           __at(0x6D4D);	// @ (0xDA9 * 8 + 5)
#define                                 PWM6TMRL5_bit       _BIT_ACCESS(PWM6TMRL,5)
// PWM6TMRL<PWM6TMRL6>
extern volatile __bit                   PWM6TMRL6           __at(0x6D4E);	// @ (0xDA9 * 8 + 6)
#define                                 PWM6TMRL6_bit       _BIT_ACCESS(PWM6TMRL,6)
// PWM6TMRL<PWM6TMRL7>
extern volatile __bit                   PWM6TMRL7           __at(0x6D4F);	// @ (0xDA9 * 8 + 7)
#define                                 PWM6TMRL7_bit       _BIT_ACCESS(PWM6TMRL,7)
// PWM9DCL<PWM9DC0>
extern volatile __bit                   PWM9DC0             __at(0x30D6);	// @ (0x61A * 8 + 6)
#define                                 PWM9DC0_bit         _BIT_ACCESS(PWM9DCL,6)
// PWM9DCL<PWM9DC1>
extern volatile __bit                   PWM9DC1             __at(0x30D7);	// @ (0x61A * 8 + 7)
#define                                 PWM9DC1_bit         _BIT_ACCESS(PWM9DCL,7)
// PWM9DCH<PWM9DC2>
extern volatile __bit                   PWM9DC2             __at(0x30D8);	// @ (0x61B * 8 + 0)
#define                                 PWM9DC2_bit         _BIT_ACCESS(PWM9DCH,0)
// PWM9DCH<PWM9DC3>
extern volatile __bit                   PWM9DC3             __at(0x30D9);	// @ (0x61B * 8 + 1)
#define                                 PWM9DC3_bit         _BIT_ACCESS(PWM9DCH,1)
// PWM9DCH<PWM9DC4>
extern volatile __bit                   PWM9DC4             __at(0x30DA);	// @ (0x61B * 8 + 2)
#define                                 PWM9DC4_bit         _BIT_ACCESS(PWM9DCH,2)
// PWM9DCH<PWM9DC5>
extern volatile __bit                   PWM9DC5             __at(0x30DB);	// @ (0x61B * 8 + 3)
#define                                 PWM9DC5_bit         _BIT_ACCESS(PWM9DCH,3)
// PWM9DCH<PWM9DC6>
extern volatile __bit                   PWM9DC6             __at(0x30DC);	// @ (0x61B * 8 + 4)
#define                                 PWM9DC6_bit         _BIT_ACCESS(PWM9DCH,4)
// PWM9DCH<PWM9DC7>
extern volatile __bit                   PWM9DC7             __at(0x30DD);	// @ (0x61B * 8 + 5)
#define                                 PWM9DC7_bit         _BIT_ACCESS(PWM9DCH,5)
// PWM9DCH<PWM9DC8>
extern volatile __bit                   PWM9DC8             __at(0x30DE);	// @ (0x61B * 8 + 6)
#define                                 PWM9DC8_bit         _BIT_ACCESS(PWM9DCH,6)
// PWM9DCH<PWM9DC9>
extern volatile __bit                   PWM9DC9             __at(0x30DF);	// @ (0x61B * 8 + 7)
#define                                 PWM9DC9_bit         _BIT_ACCESS(PWM9DCH,7)
// PWM9CON<PWM9EN>
extern volatile __bit                   PWM9EN              __at(0x30E7);	// @ (0x61C * 8 + 7)
#define                                 PWM9EN_bit          _BIT_ACCESS(PWM9CON,7)
// PWM9CON<PWM9OUT>
extern volatile __bit                   PWM9OUT             __at(0x30E5);	// @ (0x61C * 8 + 5)
#define                                 PWM9OUT_bit         _BIT_ACCESS(PWM9CON,5)
// PWM9CON<PWM9POL>
extern volatile __bit                   PWM9POL             __at(0x30E4);	// @ (0x61C * 8 + 4)
#define                                 PWM9POL_bit         _BIT_ACCESS(PWM9CON,4)
// PORTA<RA0>
extern volatile __bit                   RA0                 __at(0x60);	// @ (0xC * 8 + 0)
#define                                 RA0_bit             _BIT_ACCESS(PORTA,0)
// PORTA<RA1>
extern volatile __bit                   RA1                 __at(0x61);	// @ (0xC * 8 + 1)
#define                                 RA1_bit             _BIT_ACCESS(PORTA,1)
// PORTA<RA2>
extern volatile __bit                   RA2                 __at(0x62);	// @ (0xC * 8 + 2)
#define                                 RA2_bit             _BIT_ACCESS(PORTA,2)
// PORTA<RA3>
extern volatile __bit                   RA3                 __at(0x63);	// @ (0xC * 8 + 3)
#define                                 RA3_bit             _BIT_ACCESS(PORTA,3)
// PORTA<RA4>
extern volatile __bit                   RA4                 __at(0x64);	// @ (0xC * 8 + 4)
#define                                 RA4_bit             _BIT_ACCESS(PORTA,4)
// PORTA<RA5>
extern volatile __bit                   RA5                 __at(0x65);	// @ (0xC * 8 + 5)
#define                                 RA5_bit             _BIT_ACCESS(PORTA,5)
// PORTA<RA6>
extern volatile __bit                   RA6                 __at(0x66);	// @ (0xC * 8 + 6)
#define                                 RA6_bit             _BIT_ACCESS(PORTA,6)
// PORTA<RA7>
extern volatile __bit                   RA7                 __at(0x67);	// @ (0xC * 8 + 7)
#define                                 RA7_bit             _BIT_ACCESS(PORTA,7)
// PORTB<RB0>
extern volatile __bit                   RB0                 __at(0x68);	// @ (0xD * 8 + 0)
#define                                 RB0_bit             _BIT_ACCESS(PORTB,0)
// PORTB<RB1>
extern volatile __bit                   RB1                 __at(0x69);	// @ (0xD * 8 + 1)
#define                                 RB1_bit             _BIT_ACCESS(PORTB,1)
// PORTB<RB2>
extern volatile __bit                   RB2                 __at(0x6A);	// @ (0xD * 8 + 2)
#define                                 RB2_bit             _BIT_ACCESS(PORTB,2)
// PORTB<RB3>
extern volatile __bit                   RB3                 __at(0x6B);	// @ (0xD * 8 + 3)
#define                                 RB3_bit             _BIT_ACCESS(PORTB,3)
// PORTB<RB4>
extern volatile __bit                   RB4                 __at(0x6C);	// @ (0xD * 8 + 4)
#define                                 RB4_bit             _BIT_ACCESS(PORTB,4)
// PORTB<RB5>
extern volatile __bit                   RB5                 __at(0x6D);	// @ (0xD * 8 + 5)
#define                                 RB5_bit             _BIT_ACCESS(PORTB,5)
// PORTB<RB6>
extern volatile __bit                   RB6                 __at(0x6E);	// @ (0xD * 8 + 6)
#define                                 RB6_bit             _BIT_ACCESS(PORTB,6)
// PORTB<RB7>
extern volatile __bit                   RB7                 __at(0x6F);	// @ (0xD * 8 + 7)
#define                                 RB7_bit             _BIT_ACCESS(PORTB,7)
// PORTC<RC0>
extern volatile __bit                   RC0                 __at(0x70);	// @ (0xE * 8 + 0)
#define                                 RC0_bit             _BIT_ACCESS(PORTC,0)
// PORTC<RC1>
extern volatile __bit                   RC1                 __at(0x71);	// @ (0xE * 8 + 1)
#define                                 RC1_bit             _BIT_ACCESS(PORTC,1)
// PORTC<RC2>
extern volatile __bit                   RC2                 __at(0x72);	// @ (0xE * 8 + 2)
#define                                 RC2_bit             _BIT_ACCESS(PORTC,2)
// PORTC<RC3>
extern volatile __bit                   RC3                 __at(0x73);	// @ (0xE * 8 + 3)
#define                                 RC3_bit             _BIT_ACCESS(PORTC,3)
// PORTC<RC4>
extern volatile __bit                   RC4                 __at(0x74);	// @ (0xE * 8 + 4)
#define                                 RC4_bit             _BIT_ACCESS(PORTC,4)
// PORTC<RC5>
extern volatile __bit                   RC5                 __at(0x75);	// @ (0xE * 8 + 5)
#define                                 RC5_bit             _BIT_ACCESS(PORTC,5)
// PORTC<RC6>
extern volatile __bit                   RC6                 __at(0x76);	// @ (0xE * 8 + 6)
#define                                 RC6_bit             _BIT_ACCESS(PORTC,6)
// PORTC<RC7>
extern volatile __bit                   RC7                 __at(0x77);	// @ (0xE * 8 + 7)
#define                                 RC7_bit             _BIT_ACCESS(PORTC,7)
// SSP1CON2<RCEN>
extern volatile __bit                   RCEN                __at(0x10B3);	// @ (0x216 * 8 + 3)
#define                                 RCEN_bit            _BIT_ACCESS(SSP1CON2,3)
// BAUD1CON<RCIDL>
extern volatile __bit                   RCIDL               __at(0xCFE);	// @ (0x19F * 8 + 6)
#define                                 RCIDL_bit           _BIT_ACCESS(BAUD1CON,6)
// PIE1<RCIE>
extern volatile __bit                   RCIE                __at(0x48D);	// @ (0x91 * 8 + 5)
#define                                 RCIE_bit            _BIT_ACCESS(PIE1,5)
// PIR1<RCIF>
extern volatile __bit                   RCIF                __at(0x8D);	// @ (0x11 * 8 + 5)
#define                                 RCIF_bit            _BIT_ACCESS(PIR1,5)
// PMCON1<RD>
extern volatile __bit                   RD                  __at(0xCA8);	// @ (0x195 * 8 + 0)
#define                                 RD_bit              _BIT_ACCESS(PMCON1,0)
// PORTD<RD0>
extern volatile __bit                   RD0                 __at(0x78);	// @ (0xF * 8 + 0)
#define                                 RD0_bit             _BIT_ACCESS(PORTD,0)
// PORTD<RD1>
extern volatile __bit                   RD1                 __at(0x79);	// @ (0xF * 8 + 1)
#define                                 RD1_bit             _BIT_ACCESS(PORTD,1)
// PORTD<RD2>
extern volatile __bit                   RD2                 __at(0x7A);	// @ (0xF * 8 + 2)
#define                                 RD2_bit             _BIT_ACCESS(PORTD,2)
// PORTD<RD3>
extern volatile __bit                   RD3                 __at(0x7B);	// @ (0xF * 8 + 3)
#define                                 RD3_bit             _BIT_ACCESS(PORTD,3)
// PORTD<RD4>
extern volatile __bit                   RD4                 __at(0x7C);	// @ (0xF * 8 + 4)
#define                                 RD4_bit             _BIT_ACCESS(PORTD,4)
// PORTD<RD5>
extern volatile __bit                   RD5                 __at(0x7D);	// @ (0xF * 8 + 5)
#define                                 RD5_bit             _BIT_ACCESS(PORTD,5)
// PORTD<RD6>
extern volatile __bit                   RD6                 __at(0x7E);	// @ (0xF * 8 + 6)
#define                                 RD6_bit             _BIT_ACCESS(PORTD,6)
// PORTD<RD7>
extern volatile __bit                   RD7                 __at(0x7F);	// @ (0xF * 8 + 7)
#define                                 RD7_bit             _BIT_ACCESS(PORTD,7)
// PORTE<RE0>
extern volatile __bit                   RE0                 __at(0x80);	// @ (0x10 * 8 + 0)
#define                                 RE0_bit             _BIT_ACCESS(PORTE,0)
// PORTE<RE1>
extern volatile __bit                   RE1                 __at(0x81);	// @ (0x10 * 8 + 1)
#define                                 RE1_bit             _BIT_ACCESS(PORTE,1)
// PORTE<RE2>
extern volatile __bit                   RE2                 __at(0x82);	// @ (0x10 * 8 + 2)
#define                                 RE2_bit             _BIT_ACCESS(PORTE,2)
// PORTE<RE3>
extern volatile __bit                   RE3                 __at(0x83);	// @ (0x10 * 8 + 3)
#define                                 RE3_bit             _BIT_ACCESS(PORTE,3)
// PRG1CON0<RG1EN>
extern volatile __bit                   RG1EN               __at(0x3C8F);	// @ (0x791 * 8 + 7)
#define                                 RG1EN_bit           _BIT_ACCESS(PRG1CON0,7)
// PRG1CON0<RG1FEDG>
extern volatile __bit                   RG1FEDG             __at(0x3C8D);	// @ (0x791 * 8 + 5)
#define                                 RG1FEDG_bit         _BIT_ACCESS(PRG1CON0,5)
// PRG1CON1<RG1FPOL>
extern volatile __bit                   RG1FPOL             __at(0x3C91);	// @ (0x792 * 8 + 1)
#define                                 RG1FPOL_bit         _BIT_ACCESS(PRG1CON1,1)
// PRG1FTSS<RG1FTSS0>
extern volatile __bit                   RG1FTSS0            __at(0x3C78);	// @ (0x78F * 8 + 0)
#define                                 RG1FTSS0_bit        _BIT_ACCESS(PRG1FTSS,0)
// PRG1FTSS<RG1FTSS1>
extern volatile __bit                   RG1FTSS1            __at(0x3C79);	// @ (0x78F * 8 + 1)
#define                                 RG1FTSS1_bit        _BIT_ACCESS(PRG1FTSS,1)
// PRG1FTSS<RG1FTSS2>
extern volatile __bit                   RG1FTSS2            __at(0x3C7A);	// @ (0x78F * 8 + 2)
#define                                 RG1FTSS2_bit        _BIT_ACCESS(PRG1FTSS,2)
// PRG1FTSS<RG1FTSS3>
extern volatile __bit                   RG1FTSS3            __at(0x3C7B);	// @ (0x78F * 8 + 3)
#define                                 RG1FTSS3_bit        _BIT_ACCESS(PRG1FTSS,3)
// PRG1CON0<RG1GO>
extern volatile __bit                   RG1GO               __at(0x3C88);	// @ (0x791 * 8 + 0)
#define                                 RG1GO_bit           _BIT_ACCESS(PRG1CON0,0)
// PRG1INS<RG1INS0>
extern volatile __bit                   RG1INS0             __at(0x3C80);	// @ (0x790 * 8 + 0)
#define                                 RG1INS0_bit         _BIT_ACCESS(PRG1INS,0)
// PRG1INS<RG1INS1>
extern volatile __bit                   RG1INS1             __at(0x3C81);	// @ (0x790 * 8 + 1)
#define                                 RG1INS1_bit         _BIT_ACCESS(PRG1INS,1)
// PRG1INS<RG1INS2>
extern volatile __bit                   RG1INS2             __at(0x3C82);	// @ (0x790 * 8 + 2)
#define                                 RG1INS2_bit         _BIT_ACCESS(PRG1INS,2)
// PRG1INS<RG1INS3>
extern volatile __bit                   RG1INS3             __at(0x3C83);	// @ (0x790 * 8 + 3)
#define                                 RG1INS3_bit         _BIT_ACCESS(PRG1INS,3)
// PRG1CON2<RG1ISET0>
extern volatile __bit                   RG1ISET0            __at(0x3C98);	// @ (0x793 * 8 + 0)
#define                                 RG1ISET0_bit        _BIT_ACCESS(PRG1CON2,0)
// PRG1CON2<RG1ISET1>
extern volatile __bit                   RG1ISET1            __at(0x3C99);	// @ (0x793 * 8 + 1)
#define                                 RG1ISET1_bit        _BIT_ACCESS(PRG1CON2,1)
// PRG1CON2<RG1ISET2>
extern volatile __bit                   RG1ISET2            __at(0x3C9A);	// @ (0x793 * 8 + 2)
#define                                 RG1ISET2_bit        _BIT_ACCESS(PRG1CON2,2)
// PRG1CON2<RG1ISET3>
extern volatile __bit                   RG1ISET3            __at(0x3C9B);	// @ (0x793 * 8 + 3)
#define                                 RG1ISET3_bit        _BIT_ACCESS(PRG1CON2,3)
// PRG1CON2<RG1ISET4>
extern volatile __bit                   RG1ISET4            __at(0x3C9C);	// @ (0x793 * 8 + 4)
#define                                 RG1ISET4_bit        _BIT_ACCESS(PRG1CON2,4)
// PRG1CON0<RG1MODE0>
extern volatile __bit                   RG1MODE0            __at(0x3C8A);	// @ (0x791 * 8 + 2)
#define                                 RG1MODE0_bit        _BIT_ACCESS(PRG1CON0,2)
// PRG1CON0<RG1MODE1>
extern volatile __bit                   RG1MODE1            __at(0x3C8B);	// @ (0x791 * 8 + 3)
#define                                 RG1MODE1_bit        _BIT_ACCESS(PRG1CON0,3)
// PRG1CON0<RG1OS>
extern volatile __bit                   RG1OS               __at(0x3C89);	// @ (0x791 * 8 + 1)
#define                                 RG1OS_bit           _BIT_ACCESS(PRG1CON0,1)
// PRG1CON1<RG1RDY>
extern volatile __bit                   RG1RDY              __at(0x3C92);	// @ (0x792 * 8 + 2)
#define                                 RG1RDY_bit          _BIT_ACCESS(PRG1CON1,2)
// PRG1CON0<RG1REDG>
extern volatile __bit                   RG1REDG             __at(0x3C8C);	// @ (0x791 * 8 + 4)
#define                                 RG1REDG_bit         _BIT_ACCESS(PRG1CON0,4)
// PRG1CON1<RG1RPOL>
extern volatile __bit                   RG1RPOL             __at(0x3C90);	// @ (0x792 * 8 + 0)
#define                                 RG1RPOL_bit         _BIT_ACCESS(PRG1CON1,0)
// PRG1RTSS<RG1RTSS0>
extern volatile __bit                   RG1RTSS0            __at(0x3C70);	// @ (0x78E * 8 + 0)
#define                                 RG1RTSS0_bit        _BIT_ACCESS(PRG1RTSS,0)
// PRG1RTSS<RG1RTSS1>
extern volatile __bit                   RG1RTSS1            __at(0x3C71);	// @ (0x78E * 8 + 1)
#define                                 RG1RTSS1_bit        _BIT_ACCESS(PRG1RTSS,1)
// PRG1RTSS<RG1RTSS2>
extern volatile __bit                   RG1RTSS2            __at(0x3C72);	// @ (0x78E * 8 + 2)
#define                                 RG1RTSS2_bit        _BIT_ACCESS(PRG1RTSS,2)
// PRG1RTSS<RG1RTSS3>
extern volatile __bit                   RG1RTSS3            __at(0x3C73);	// @ (0x78E * 8 + 3)
#define                                 RG1RTSS3_bit        _BIT_ACCESS(PRG1RTSS,3)
// PRG2CON0<RG2EN>
extern volatile __bit                   RG2EN               __at(0x3CBF);	// @ (0x797 * 8 + 7)
#define                                 RG2EN_bit           _BIT_ACCESS(PRG2CON0,7)
// PRG2CON0<RG2FEDG>
extern volatile __bit                   RG2FEDG             __at(0x3CBD);	// @ (0x797 * 8 + 5)
#define                                 RG2FEDG_bit         _BIT_ACCESS(PRG2CON0,5)
// PRG2CON1<RG2FPOL>
extern volatile __bit                   RG2FPOL             __at(0x3CC1);	// @ (0x798 * 8 + 1)
#define                                 RG2FPOL_bit         _BIT_ACCESS(PRG2CON1,1)
// PRG2FTSS<RG2FTSS0>
extern volatile __bit                   RG2FTSS0            __at(0x3CA8);	// @ (0x795 * 8 + 0)
#define                                 RG2FTSS0_bit        _BIT_ACCESS(PRG2FTSS,0)
// PRG2FTSS<RG2FTSS1>
extern volatile __bit                   RG2FTSS1            __at(0x3CA9);	// @ (0x795 * 8 + 1)
#define                                 RG2FTSS1_bit        _BIT_ACCESS(PRG2FTSS,1)
// PRG2FTSS<RG2FTSS2>
extern volatile __bit                   RG2FTSS2            __at(0x3CAA);	// @ (0x795 * 8 + 2)
#define                                 RG2FTSS2_bit        _BIT_ACCESS(PRG2FTSS,2)
// PRG2FTSS<RG2FTSS3>
extern volatile __bit                   RG2FTSS3            __at(0x3CAB);	// @ (0x795 * 8 + 3)
#define                                 RG2FTSS3_bit        _BIT_ACCESS(PRG2FTSS,3)
// PRG2CON0<RG2GO>
extern volatile __bit                   RG2GO               __at(0x3CB8);	// @ (0x797 * 8 + 0)
#define                                 RG2GO_bit           _BIT_ACCESS(PRG2CON0,0)
// PRG2INS<RG2INS0>
extern volatile __bit                   RG2INS0             __at(0x3CB0);	// @ (0x796 * 8 + 0)
#define                                 RG2INS0_bit         _BIT_ACCESS(PRG2INS,0)
// PRG2INS<RG2INS1>
extern volatile __bit                   RG2INS1             __at(0x3CB1);	// @ (0x796 * 8 + 1)
#define                                 RG2INS1_bit         _BIT_ACCESS(PRG2INS,1)
// PRG2INS<RG2INS2>
extern volatile __bit                   RG2INS2             __at(0x3CB2);	// @ (0x796 * 8 + 2)
#define                                 RG2INS2_bit         _BIT_ACCESS(PRG2INS,2)
// PRG2INS<RG2INS3>
extern volatile __bit                   RG2INS3             __at(0x3CB3);	// @ (0x796 * 8 + 3)
#define                                 RG2INS3_bit         _BIT_ACCESS(PRG2INS,3)
// PRG2CON2<RG2ISET0>
extern volatile __bit                   RG2ISET0            __at(0x3CC8);	// @ (0x799 * 8 + 0)
#define                                 RG2ISET0_bit        _BIT_ACCESS(PRG2CON2,0)
// PRG2CON2<RG2ISET1>
extern volatile __bit                   RG2ISET1            __at(0x3CC9);	// @ (0x799 * 8 + 1)
#define                                 RG2ISET1_bit        _BIT_ACCESS(PRG2CON2,1)
// PRG2CON2<RG2ISET2>
extern volatile __bit                   RG2ISET2            __at(0x3CCA);	// @ (0x799 * 8 + 2)
#define                                 RG2ISET2_bit        _BIT_ACCESS(PRG2CON2,2)
// PRG2CON2<RG2ISET3>
extern volatile __bit                   RG2ISET3            __at(0x3CCB);	// @ (0x799 * 8 + 3)
#define                                 RG2ISET3_bit        _BIT_ACCESS(PRG2CON2,3)
// PRG2CON2<RG2ISET4>
extern volatile __bit                   RG2ISET4            __at(0x3CCC);	// @ (0x799 * 8 + 4)
#define                                 RG2ISET4_bit        _BIT_ACCESS(PRG2CON2,4)
// PRG2CON0<RG2MODE0>
extern volatile __bit                   RG2MODE0            __at(0x3CBA);	// @ (0x797 * 8 + 2)
#define                                 RG2MODE0_bit        _BIT_ACCESS(PRG2CON0,2)
// PRG2CON0<RG2MODE1>
extern volatile __bit                   RG2MODE1            __at(0x3CBB);	// @ (0x797 * 8 + 3)
#define                                 RG2MODE1_bit        _BIT_ACCESS(PRG2CON0,3)
// PRG2CON0<RG2OS>
extern volatile __bit                   RG2OS               __at(0x3CB9);	// @ (0x797 * 8 + 1)
#define                                 RG2OS_bit           _BIT_ACCESS(PRG2CON0,1)
// PRG2CON1<RG2RDY>
extern volatile __bit                   RG2RDY              __at(0x3CC2);	// @ (0x798 * 8 + 2)
#define                                 RG2RDY_bit          _BIT_ACCESS(PRG2CON1,2)
// PRG2CON0<RG2REDG>
extern volatile __bit                   RG2REDG             __at(0x3CBC);	// @ (0x797 * 8 + 4)
#define                                 RG2REDG_bit         _BIT_ACCESS(PRG2CON0,4)
// PRG2CON1<RG2RPOL>
extern volatile __bit                   RG2RPOL             __at(0x3CC0);	// @ (0x798 * 8 + 0)
#define                                 RG2RPOL_bit         _BIT_ACCESS(PRG2CON1,0)
// PRG2RTSS<RG2RTSS0>
extern volatile __bit                   RG2RTSS0            __at(0x3CA0);	// @ (0x794 * 8 + 0)
#define                                 RG2RTSS0_bit        _BIT_ACCESS(PRG2RTSS,0)
// PRG2RTSS<RG2RTSS1>
extern volatile __bit                   RG2RTSS1            __at(0x3CA1);	// @ (0x794 * 8 + 1)
#define                                 RG2RTSS1_bit        _BIT_ACCESS(PRG2RTSS,1)
// PRG2RTSS<RG2RTSS2>
extern volatile __bit                   RG2RTSS2            __at(0x3CA2);	// @ (0x794 * 8 + 2)
#define                                 RG2RTSS2_bit        _BIT_ACCESS(PRG2RTSS,2)
// PRG2RTSS<RG2RTSS3>
extern volatile __bit                   RG2RTSS3            __at(0x3CA3);	// @ (0x794 * 8 + 3)
#define                                 RG2RTSS3_bit        _BIT_ACCESS(PRG2RTSS,3)
// PRG3CON0<RG3EN>
extern volatile __bit                   RG3EN               __at(0x3CEF);	// @ (0x79D * 8 + 7)
#define                                 RG3EN_bit           _BIT_ACCESS(PRG3CON0,7)
// PRG3CON0<RG3FEDG>
extern volatile __bit                   RG3FEDG             __at(0x3CED);	// @ (0x79D * 8 + 5)
#define                                 RG3FEDG_bit         _BIT_ACCESS(PRG3CON0,5)
// PRG3CON1<RG3FPOL>
extern volatile __bit                   RG3FPOL             __at(0x3CF1);	// @ (0x79E * 8 + 1)
#define                                 RG3FPOL_bit         _BIT_ACCESS(PRG3CON1,1)
// PRG3FTSS<RG3FTSS0>
extern volatile __bit                   RG3FTSS0            __at(0x3CD8);	// @ (0x79B * 8 + 0)
#define                                 RG3FTSS0_bit        _BIT_ACCESS(PRG3FTSS,0)
// PRG3FTSS<RG3FTSS1>
extern volatile __bit                   RG3FTSS1            __at(0x3CD9);	// @ (0x79B * 8 + 1)
#define                                 RG3FTSS1_bit        _BIT_ACCESS(PRG3FTSS,1)
// PRG3FTSS<RG3FTSS2>
extern volatile __bit                   RG3FTSS2            __at(0x3CDA);	// @ (0x79B * 8 + 2)
#define                                 RG3FTSS2_bit        _BIT_ACCESS(PRG3FTSS,2)
// PRG3FTSS<RG3FTSS3>
extern volatile __bit                   RG3FTSS3            __at(0x3CDB);	// @ (0x79B * 8 + 3)
#define                                 RG3FTSS3_bit        _BIT_ACCESS(PRG3FTSS,3)
// PRG3CON0<RG3GO>
extern volatile __bit                   RG3GO               __at(0x3CE8);	// @ (0x79D * 8 + 0)
#define                                 RG3GO_bit           _BIT_ACCESS(PRG3CON0,0)
// PRG3INS<RG3INS0>
extern volatile __bit                   RG3INS0             __at(0x3CE0);	// @ (0x79C * 8 + 0)
#define                                 RG3INS0_bit         _BIT_ACCESS(PRG3INS,0)
// PRG3INS<RG3INS1>
extern volatile __bit                   RG3INS1             __at(0x3CE1);	// @ (0x79C * 8 + 1)
#define                                 RG3INS1_bit         _BIT_ACCESS(PRG3INS,1)
// PRG3INS<RG3INS2>
extern volatile __bit                   RG3INS2             __at(0x3CE2);	// @ (0x79C * 8 + 2)
#define                                 RG3INS2_bit         _BIT_ACCESS(PRG3INS,2)
// PRG3INS<RG3INS3>
extern volatile __bit                   RG3INS3             __at(0x3CE3);	// @ (0x79C * 8 + 3)
#define                                 RG3INS3_bit         _BIT_ACCESS(PRG3INS,3)
// PRG3CON2<RG3ISET0>
extern volatile __bit                   RG3ISET0            __at(0x3CF8);	// @ (0x79F * 8 + 0)
#define                                 RG3ISET0_bit        _BIT_ACCESS(PRG3CON2,0)
// PRG3CON2<RG3ISET1>
extern volatile __bit                   RG3ISET1            __at(0x3CF9);	// @ (0x79F * 8 + 1)
#define                                 RG3ISET1_bit        _BIT_ACCESS(PRG3CON2,1)
// PRG3CON2<RG3ISET2>
extern volatile __bit                   RG3ISET2            __at(0x3CFA);	// @ (0x79F * 8 + 2)
#define                                 RG3ISET2_bit        _BIT_ACCESS(PRG3CON2,2)
// PRG3CON2<RG3ISET3>
extern volatile __bit                   RG3ISET3            __at(0x3CFB);	// @ (0x79F * 8 + 3)
#define                                 RG3ISET3_bit        _BIT_ACCESS(PRG3CON2,3)
// PRG3CON2<RG3ISET4>
extern volatile __bit                   RG3ISET4            __at(0x3CFC);	// @ (0x79F * 8 + 4)
#define                                 RG3ISET4_bit        _BIT_ACCESS(PRG3CON2,4)
// PRG3CON0<RG3MODE0>
extern volatile __bit                   RG3MODE0            __at(0x3CEA);	// @ (0x79D * 8 + 2)
#define                                 RG3MODE0_bit        _BIT_ACCESS(PRG3CON0,2)
// PRG3CON0<RG3MODE1>
extern volatile __bit                   RG3MODE1            __at(0x3CEB);	// @ (0x79D * 8 + 3)
#define                                 RG3MODE1_bit        _BIT_ACCESS(PRG3CON0,3)
// PRG3CON0<RG3OS>
extern volatile __bit                   RG3OS               __at(0x3CE9);	// @ (0x79D * 8 + 1)
#define                                 RG3OS_bit           _BIT_ACCESS(PRG3CON0,1)
// PRG3CON1<RG3RDY>
extern volatile __bit                   RG3RDY              __at(0x3CF2);	// @ (0x79E * 8 + 2)
#define                                 RG3RDY_bit          _BIT_ACCESS(PRG3CON1,2)
// PRG3CON0<RG3REDG>
extern volatile __bit                   RG3REDG             __at(0x3CEC);	// @ (0x79D * 8 + 4)
#define                                 RG3REDG_bit         _BIT_ACCESS(PRG3CON0,4)
// PRG3CON1<RG3RPOL>
extern volatile __bit                   RG3RPOL             __at(0x3CF0);	// @ (0x79E * 8 + 0)
#define                                 RG3RPOL_bit         _BIT_ACCESS(PRG3CON1,0)
// PRG3RTSS<RG3RTSS0>
extern volatile __bit                   RG3RTSS0            __at(0x3CD0);	// @ (0x79A * 8 + 0)
#define                                 RG3RTSS0_bit        _BIT_ACCESS(PRG3RTSS,0)
// PRG3RTSS<RG3RTSS1>
extern volatile __bit                   RG3RTSS1            __at(0x3CD1);	// @ (0x79A * 8 + 1)
#define                                 RG3RTSS1_bit        _BIT_ACCESS(PRG3RTSS,1)
// PRG3RTSS<RG3RTSS2>
extern volatile __bit                   RG3RTSS2            __at(0x3CD2);	// @ (0x79A * 8 + 2)
#define                                 RG3RTSS2_bit        _BIT_ACCESS(PRG3RTSS,2)
// PRG3RTSS<RG3RTSS3>
extern volatile __bit                   RG3RTSS3            __at(0x3CD3);	// @ (0x79A * 8 + 3)
#define                                 RG3RTSS3_bit        _BIT_ACCESS(PRG3RTSS,3)
// PRG4CON0<RG4EN>
extern volatile __bit                   RG4EN               __at(0x308F);	// @ (0x611 * 8 + 7)
#define                                 RG4EN_bit           _BIT_ACCESS(PRG4CON0,7)
// PRG4CON0<RG4FEDG>
extern volatile __bit                   RG4FEDG             __at(0x308D);	// @ (0x611 * 8 + 5)
#define                                 RG4FEDG_bit         _BIT_ACCESS(PRG4CON0,5)
// PRG4CON1<RG4FPOL>
extern volatile __bit                   RG4FPOL             __at(0x3091);	// @ (0x612 * 8 + 1)
#define                                 RG4FPOL_bit         _BIT_ACCESS(PRG4CON1,1)
// PRG4FTSS<RG4FTSS0>
extern volatile __bit                   RG4FTSS0            __at(0x3078);	// @ (0x60F * 8 + 0)
#define                                 RG4FTSS0_bit        _BIT_ACCESS(PRG4FTSS,0)
// PRG4FTSS<RG4FTSS1>
extern volatile __bit                   RG4FTSS1            __at(0x3079);	// @ (0x60F * 8 + 1)
#define                                 RG4FTSS1_bit        _BIT_ACCESS(PRG4FTSS,1)
// PRG4FTSS<RG4FTSS2>
extern volatile __bit                   RG4FTSS2            __at(0x307A);	// @ (0x60F * 8 + 2)
#define                                 RG4FTSS2_bit        _BIT_ACCESS(PRG4FTSS,2)
// PRG4FTSS<RG4FTSS3>
extern volatile __bit                   RG4FTSS3            __at(0x307B);	// @ (0x60F * 8 + 3)
#define                                 RG4FTSS3_bit        _BIT_ACCESS(PRG4FTSS,3)
// PRG4CON0<RG4GO>
extern volatile __bit                   RG4GO               __at(0x3088);	// @ (0x611 * 8 + 0)
#define                                 RG4GO_bit           _BIT_ACCESS(PRG4CON0,0)
// PRG4INS<RG4INS0>
extern volatile __bit                   RG4INS0             __at(0x3080);	// @ (0x610 * 8 + 0)
#define                                 RG4INS0_bit         _BIT_ACCESS(PRG4INS,0)
// PRG4INS<RG4INS1>
extern volatile __bit                   RG4INS1             __at(0x3081);	// @ (0x610 * 8 + 1)
#define                                 RG4INS1_bit         _BIT_ACCESS(PRG4INS,1)
// PRG4INS<RG4INS2>
extern volatile __bit                   RG4INS2             __at(0x3082);	// @ (0x610 * 8 + 2)
#define                                 RG4INS2_bit         _BIT_ACCESS(PRG4INS,2)
// PRG4INS<RG4INS3>
extern volatile __bit                   RG4INS3             __at(0x3083);	// @ (0x610 * 8 + 3)
#define                                 RG4INS3_bit         _BIT_ACCESS(PRG4INS,3)
// PRG4CON2<RG4ISET0>
extern volatile __bit                   RG4ISET0            __at(0x3098);	// @ (0x613 * 8 + 0)
#define                                 RG4ISET0_bit        _BIT_ACCESS(PRG4CON2,0)
// PRG4CON2<RG4ISET1>
extern volatile __bit                   RG4ISET1            __at(0x3099);	// @ (0x613 * 8 + 1)
#define                                 RG4ISET1_bit        _BIT_ACCESS(PRG4CON2,1)
// PRG4CON2<RG4ISET2>
extern volatile __bit                   RG4ISET2            __at(0x309A);	// @ (0x613 * 8 + 2)
#define                                 RG4ISET2_bit        _BIT_ACCESS(PRG4CON2,2)
// PRG4CON2<RG4ISET3>
extern volatile __bit                   RG4ISET3            __at(0x309B);	// @ (0x613 * 8 + 3)
#define                                 RG4ISET3_bit        _BIT_ACCESS(PRG4CON2,3)
// PRG4CON2<RG4ISET4>
extern volatile __bit                   RG4ISET4            __at(0x309C);	// @ (0x613 * 8 + 4)
#define                                 RG4ISET4_bit        _BIT_ACCESS(PRG4CON2,4)
// PRG4CON0<RG4MODE0>
extern volatile __bit                   RG4MODE0            __at(0x308A);	// @ (0x611 * 8 + 2)
#define                                 RG4MODE0_bit        _BIT_ACCESS(PRG4CON0,2)
// PRG4CON0<RG4MODE1>
extern volatile __bit                   RG4MODE1            __at(0x308B);	// @ (0x611 * 8 + 3)
#define                                 RG4MODE1_bit        _BIT_ACCESS(PRG4CON0,3)
// PRG4CON0<RG4OS>
extern volatile __bit                   RG4OS               __at(0x3089);	// @ (0x611 * 8 + 1)
#define                                 RG4OS_bit           _BIT_ACCESS(PRG4CON0,1)
// PRG4CON1<RG4RDY>
extern volatile __bit                   RG4RDY              __at(0x3092);	// @ (0x612 * 8 + 2)
#define                                 RG4RDY_bit          _BIT_ACCESS(PRG4CON1,2)
// PRG4CON0<RG4REDG>
extern volatile __bit                   RG4REDG             __at(0x308C);	// @ (0x611 * 8 + 4)
#define                                 RG4REDG_bit         _BIT_ACCESS(PRG4CON0,4)
// PRG4CON1<RG4RPOL>
extern volatile __bit                   RG4RPOL             __at(0x3090);	// @ (0x612 * 8 + 0)
#define                                 RG4RPOL_bit         _BIT_ACCESS(PRG4CON1,0)
// PRG4RTSS<RG4RTSS0>
extern volatile __bit                   RG4RTSS0            __at(0x3070);	// @ (0x60E * 8 + 0)
#define                                 RG4RTSS0_bit        _BIT_ACCESS(PRG4RTSS,0)
// PRG4RTSS<RG4RTSS1>
extern volatile __bit                   RG4RTSS1            __at(0x3071);	// @ (0x60E * 8 + 1)
#define                                 RG4RTSS1_bit        _BIT_ACCESS(PRG4RTSS,1)
// PRG4RTSS<RG4RTSS2>
extern volatile __bit                   RG4RTSS2            __at(0x3072);	// @ (0x60E * 8 + 2)
#define                                 RG4RTSS2_bit        _BIT_ACCESS(PRG4RTSS,2)
// PRG4RTSS<RG4RTSS3>
extern volatile __bit                   RG4RTSS3            __at(0x3073);	// @ (0x60E * 8 + 3)
#define                                 RG4RTSS3_bit        _BIT_ACCESS(PRG4RTSS,3)
// SSP1CON2<RSEN>
extern volatile __bit                   RSEN                __at(0x10B1);	// @ (0x216 * 8 + 1)
#define                                 RSEN_bit            _BIT_ACCESS(SSP1CON2,1)
// RC1STA<RX9>
extern volatile __bit                   RX9                 __at(0xCEE);	// @ (0x19D * 8 + 6)
#define                                 RX9_bit             _BIT_ACCESS(RC1STA,6)
// RC1STA<RX9D>
extern volatile __bit                   RX9D                __at(0xCE8);	// @ (0x19D * 8 + 0)
#define                                 RX9D_bit            _BIT_ACCESS(RC1STA,0)
// SSP1STAT<R_nW>
extern volatile __bit                   R_nW                __at(0x10A2);	// @ (0x214 * 8 + 2)
#define                                 R_nW_bit            _BIT_ACCESS(SSP1STAT,2)
// SSP1CON3<SBCDE>
extern volatile __bit                   SBCDE               __at(0x10BA);	// @ (0x217 * 8 + 2)
#define                                 SBCDE_bit           _BIT_ACCESS(SSP1CON3,2)
// BORCON<SBOREN>
extern volatile __bit                   SBOREN              __at(0x4EF);	// @ (0x9D * 8 + 7)
#define                                 SBOREN_bit          _BIT_ACCESS(BORCON,7)
// SSP1CON3<SCIE>
extern volatile __bit                   SCIE                __at(0x10BD);	// @ (0x217 * 8 + 5)
#define                                 SCIE_bit            _BIT_ACCESS(SSP1CON3,5)
// BAUD1CON<SCKP>
extern volatile __bit                   SCKP                __at(0xCFC);	// @ (0x19F * 8 + 4)
#define                                 SCKP_bit            _BIT_ACCESS(BAUD1CON,4)
// OSCCON<SCS0>
extern volatile __bit                   SCS0                __at(0x4D8);	// @ (0x9B * 8 + 0)
#define                                 SCS0_bit            _BIT_ACCESS(OSCCON,0)
// OSCCON<SCS1>
extern volatile __bit                   SCS1                __at(0x4D9);	// @ (0x9B * 8 + 1)
#define                                 SCS1_bit            _BIT_ACCESS(OSCCON,1)
// SSP1CON3<SDAHT>
extern volatile __bit                   SDAHT               __at(0x10BB);	// @ (0x217 * 8 + 3)
#define                                 SDAHT_bit           _BIT_ACCESS(SSP1CON3,3)
// SSP1CON2<SEN>
extern volatile __bit                   SEN                 __at(0x10B0);	// @ (0x216 * 8 + 0)
#define                                 SEN_bit             _BIT_ACCESS(SSP1CON2,0)
// TX1STA<SENDB>
extern volatile __bit                   SENDB               __at(0xCF3);	// @ (0x19E * 8 + 3)
#define                                 SENDB_bit           _BIT_ACCESS(TX1STA,3)
// SLRCONA<SLRA0>
extern volatile __bit                   SLRA0               __at(0x1860);	// @ (0x30C * 8 + 0)
#define                                 SLRA0_bit           _BIT_ACCESS(SLRCONA,0)
// SLRCONA<SLRA1>
extern volatile __bit                   SLRA1               __at(0x1861);	// @ (0x30C * 8 + 1)
#define                                 SLRA1_bit           _BIT_ACCESS(SLRCONA,1)
// SLRCONA<SLRA2>
extern volatile __bit                   SLRA2               __at(0x1862);	// @ (0x30C * 8 + 2)
#define                                 SLRA2_bit           _BIT_ACCESS(SLRCONA,2)
// SLRCONA<SLRA3>
extern volatile __bit                   SLRA3               __at(0x1863);	// @ (0x30C * 8 + 3)
#define                                 SLRA3_bit           _BIT_ACCESS(SLRCONA,3)
// SLRCONA<SLRA4>
extern volatile __bit                   SLRA4               __at(0x1864);	// @ (0x30C * 8 + 4)
#define                                 SLRA4_bit           _BIT_ACCESS(SLRCONA,4)
// SLRCONA<SLRA5>
extern volatile __bit                   SLRA5               __at(0x1865);	// @ (0x30C * 8 + 5)
#define                                 SLRA5_bit           _BIT_ACCESS(SLRCONA,5)
// SLRCONA<SLRA6>
extern volatile __bit                   SLRA6               __at(0x1866);	// @ (0x30C * 8 + 6)
#define                                 SLRA6_bit           _BIT_ACCESS(SLRCONA,6)
// SLRCONA<SLRA7>
extern volatile __bit                   SLRA7               __at(0x1867);	// @ (0x30C * 8 + 7)
#define                                 SLRA7_bit           _BIT_ACCESS(SLRCONA,7)
// SLRCONB<SLRB0>
extern volatile __bit                   SLRB0               __at(0x1868);	// @ (0x30D * 8 + 0)
#define                                 SLRB0_bit           _BIT_ACCESS(SLRCONB,0)
// SLRCONB<SLRB1>
extern volatile __bit                   SLRB1               __at(0x1869);	// @ (0x30D * 8 + 1)
#define                                 SLRB1_bit           _BIT_ACCESS(SLRCONB,1)
// SLRCONB<SLRB2>
extern volatile __bit                   SLRB2               __at(0x186A);	// @ (0x30D * 8 + 2)
#define                                 SLRB2_bit           _BIT_ACCESS(SLRCONB,2)
// SLRCONB<SLRB3>
extern volatile __bit                   SLRB3               __at(0x186B);	// @ (0x30D * 8 + 3)
#define                                 SLRB3_bit           _BIT_ACCESS(SLRCONB,3)
// SLRCONB<SLRB4>
extern volatile __bit                   SLRB4               __at(0x186C);	// @ (0x30D * 8 + 4)
#define                                 SLRB4_bit           _BIT_ACCESS(SLRCONB,4)
// SLRCONB<SLRB5>
extern volatile __bit                   SLRB5               __at(0x186D);	// @ (0x30D * 8 + 5)
#define                                 SLRB5_bit           _BIT_ACCESS(SLRCONB,5)
// SLRCONB<SLRB6>
extern volatile __bit                   SLRB6               __at(0x186E);	// @ (0x30D * 8 + 6)
#define                                 SLRB6_bit           _BIT_ACCESS(SLRCONB,6)
// SLRCONB<SLRB7>
extern volatile __bit                   SLRB7               __at(0x186F);	// @ (0x30D * 8 + 7)
#define                                 SLRB7_bit           _BIT_ACCESS(SLRCONB,7)
// SLRCONC<SLRC0>
extern volatile __bit                   SLRC0               __at(0x1870);	// @ (0x30E * 8 + 0)
#define                                 SLRC0_bit           _BIT_ACCESS(SLRCONC,0)
// SLRCONC<SLRC1>
extern volatile __bit                   SLRC1               __at(0x1871);	// @ (0x30E * 8 + 1)
#define                                 SLRC1_bit           _BIT_ACCESS(SLRCONC,1)
// SLRCONC<SLRC2>
extern volatile __bit                   SLRC2               __at(0x1872);	// @ (0x30E * 8 + 2)
#define                                 SLRC2_bit           _BIT_ACCESS(SLRCONC,2)
// SLRCONC<SLRC3>
extern volatile __bit                   SLRC3               __at(0x1873);	// @ (0x30E * 8 + 3)
#define                                 SLRC3_bit           _BIT_ACCESS(SLRCONC,3)
// SLRCONC<SLRC4>
extern volatile __bit                   SLRC4               __at(0x1874);	// @ (0x30E * 8 + 4)
#define                                 SLRC4_bit           _BIT_ACCESS(SLRCONC,4)
// SLRCONC<SLRC5>
extern volatile __bit                   SLRC5               __at(0x1875);	// @ (0x30E * 8 + 5)
#define                                 SLRC5_bit           _BIT_ACCESS(SLRCONC,5)
// SLRCONC<SLRC6>
extern volatile __bit                   SLRC6               __at(0x1876);	// @ (0x30E * 8 + 6)
#define                                 SLRC6_bit           _BIT_ACCESS(SLRCONC,6)
// SLRCONC<SLRC7>
extern volatile __bit                   SLRC7               __at(0x1877);	// @ (0x30E * 8 + 7)
#define                                 SLRC7_bit           _BIT_ACCESS(SLRCONC,7)
// SLRCOND<SLRD0>
extern volatile __bit                   SLRD0               __at(0x1878);	// @ (0x30F * 8 + 0)
#define                                 SLRD0_bit           _BIT_ACCESS(SLRCOND,0)
// SLRCOND<SLRD1>
extern volatile __bit                   SLRD1               __at(0x1879);	// @ (0x30F * 8 + 1)
#define                                 SLRD1_bit           _BIT_ACCESS(SLRCOND,1)
// SLRCOND<SLRD2>
extern volatile __bit                   SLRD2               __at(0x187A);	// @ (0x30F * 8 + 2)
#define                                 SLRD2_bit           _BIT_ACCESS(SLRCOND,2)
// SLRCOND<SLRD3>
extern volatile __bit                   SLRD3               __at(0x187B);	// @ (0x30F * 8 + 3)
#define                                 SLRD3_bit           _BIT_ACCESS(SLRCOND,3)
// SLRCOND<SLRD4>
extern volatile __bit                   SLRD4               __at(0x187C);	// @ (0x30F * 8 + 4)
#define                                 SLRD4_bit           _BIT_ACCESS(SLRCOND,4)
// SLRCOND<SLRD5>
extern volatile __bit                   SLRD5               __at(0x187D);	// @ (0x30F * 8 + 5)
#define                                 SLRD5_bit           _BIT_ACCESS(SLRCOND,5)
// SLRCOND<SLRD6>
extern volatile __bit                   SLRD6               __at(0x187E);	// @ (0x30F * 8 + 6)
#define                                 SLRD6_bit           _BIT_ACCESS(SLRCOND,6)
// SLRCOND<SLRD7>
extern volatile __bit                   SLRD7               __at(0x187F);	// @ (0x30F * 8 + 7)
#define                                 SLRD7_bit           _BIT_ACCESS(SLRCOND,7)
// SLRCONE<SLRE0>
extern volatile __bit                   SLRE0               __at(0x1880);	// @ (0x310 * 8 + 0)
#define                                 SLRE0_bit           _BIT_ACCESS(SLRCONE,0)
// SLRCONE<SLRE1>
extern volatile __bit                   SLRE1               __at(0x1881);	// @ (0x310 * 8 + 1)
#define                                 SLRE1_bit           _BIT_ACCESS(SLRCONE,1)
// SLRCONE<SLRE2>
extern volatile __bit                   SLRE2               __at(0x1882);	// @ (0x310 * 8 + 2)
#define                                 SLRE2_bit           _BIT_ACCESS(SLRCONE,2)
// SSP1STAT<SMP>
extern volatile __bit                   SMP                 __at(0x10A7);	// @ (0x214 * 8 + 7)
#define                                 SMP_bit             _BIT_ACCESS(SSP1STAT,7)
// OSCSTAT<SOSCR>
extern volatile __bit                   SOSCR               __at(0x4E7);	// @ (0x9C * 8 + 7)
#define                                 SOSCR_bit           _BIT_ACCESS(OSCSTAT,7)
// RC1STA<SPEN>
extern volatile __bit                   SPEN                __at(0xCEF);	// @ (0x19D * 8 + 7)
#define                                 SPEN_bit            _BIT_ACCESS(RC1STA,7)
// OSCCON<SPLLEN>
extern volatile __bit                   SPLLEN              __at(0x4DF);	// @ (0x9B * 8 + 7)
#define                                 SPLLEN_bit          _BIT_ACCESS(OSCCON,7)
// RC1STA<SREN>
extern volatile __bit                   SREN                __at(0xCED);	// @ (0x19D * 8 + 5)
#define                                 SREN_bit            _BIT_ACCESS(RC1STA,5)
// SSP1ADD<SSP1ADD0>
extern volatile __bit                   SSP1ADD0            __at(0x1090);	// @ (0x212 * 8 + 0)
#define                                 SSP1ADD0_bit        _BIT_ACCESS(SSP1ADD,0)
// SSP1ADD<SSP1ADD1>
extern volatile __bit                   SSP1ADD1            __at(0x1091);	// @ (0x212 * 8 + 1)
#define                                 SSP1ADD1_bit        _BIT_ACCESS(SSP1ADD,1)
// SSP1ADD<SSP1ADD2>
extern volatile __bit                   SSP1ADD2            __at(0x1092);	// @ (0x212 * 8 + 2)
#define                                 SSP1ADD2_bit        _BIT_ACCESS(SSP1ADD,2)
// SSP1ADD<SSP1ADD3>
extern volatile __bit                   SSP1ADD3            __at(0x1093);	// @ (0x212 * 8 + 3)
#define                                 SSP1ADD3_bit        _BIT_ACCESS(SSP1ADD,3)
// SSP1ADD<SSP1ADD4>
extern volatile __bit                   SSP1ADD4            __at(0x1094);	// @ (0x212 * 8 + 4)
#define                                 SSP1ADD4_bit        _BIT_ACCESS(SSP1ADD,4)
// SSP1ADD<SSP1ADD5>
extern volatile __bit                   SSP1ADD5            __at(0x1095);	// @ (0x212 * 8 + 5)
#define                                 SSP1ADD5_bit        _BIT_ACCESS(SSP1ADD,5)
// SSP1ADD<SSP1ADD6>
extern volatile __bit                   SSP1ADD6            __at(0x1096);	// @ (0x212 * 8 + 6)
#define                                 SSP1ADD6_bit        _BIT_ACCESS(SSP1ADD,6)
// SSP1ADD<SSP1ADD7>
extern volatile __bit                   SSP1ADD7            __at(0x1097);	// @ (0x212 * 8 + 7)
#define                                 SSP1ADD7_bit        _BIT_ACCESS(SSP1ADD,7)
// SSP1BUF<SSP1BUF0>
extern volatile __bit                   SSP1BUF0            __at(0x1088);	// @ (0x211 * 8 + 0)
#define                                 SSP1BUF0_bit        _BIT_ACCESS(SSP1BUF,0)
// SSP1BUF<SSP1BUF1>
extern volatile __bit                   SSP1BUF1            __at(0x1089);	// @ (0x211 * 8 + 1)
#define                                 SSP1BUF1_bit        _BIT_ACCESS(SSP1BUF,1)
// SSP1BUF<SSP1BUF2>
extern volatile __bit                   SSP1BUF2            __at(0x108A);	// @ (0x211 * 8 + 2)
#define                                 SSP1BUF2_bit        _BIT_ACCESS(SSP1BUF,2)
// SSP1BUF<SSP1BUF3>
extern volatile __bit                   SSP1BUF3            __at(0x108B);	// @ (0x211 * 8 + 3)
#define                                 SSP1BUF3_bit        _BIT_ACCESS(SSP1BUF,3)
// SSP1BUF<SSP1BUF4>
extern volatile __bit                   SSP1BUF4            __at(0x108C);	// @ (0x211 * 8 + 4)
#define                                 SSP1BUF4_bit        _BIT_ACCESS(SSP1BUF,4)
// SSP1BUF<SSP1BUF5>
extern volatile __bit                   SSP1BUF5            __at(0x108D);	// @ (0x211 * 8 + 5)
#define                                 SSP1BUF5_bit        _BIT_ACCESS(SSP1BUF,5)
// SSP1BUF<SSP1BUF6>
extern volatile __bit                   SSP1BUF6            __at(0x108E);	// @ (0x211 * 8 + 6)
#define                                 SSP1BUF6_bit        _BIT_ACCESS(SSP1BUF,6)
// SSP1BUF<SSP1BUF7>
extern volatile __bit                   SSP1BUF7            __at(0x108F);	// @ (0x211 * 8 + 7)
#define                                 SSP1BUF7_bit        _BIT_ACCESS(SSP1BUF,7)
// PIE1<SSP1IE>
extern volatile __bit                   SSP1IE              __at(0x48B);	// @ (0x91 * 8 + 3)
#define                                 SSP1IE_bit          _BIT_ACCESS(PIE1,3)
// PIR1<SSP1IF>
extern volatile __bit                   SSP1IF              __at(0x8B);	// @ (0x11 * 8 + 3)
#define                                 SSP1IF_bit          _BIT_ACCESS(PIR1,3)
// SSP1MSK<SSP1MSK0>
extern volatile __bit                   SSP1MSK0            __at(0x1098);	// @ (0x213 * 8 + 0)
#define                                 SSP1MSK0_bit        _BIT_ACCESS(SSP1MSK,0)
// SSP1MSK<SSP1MSK1>
extern volatile __bit                   SSP1MSK1            __at(0x1099);	// @ (0x213 * 8 + 1)
#define                                 SSP1MSK1_bit        _BIT_ACCESS(SSP1MSK,1)
// SSP1MSK<SSP1MSK2>
extern volatile __bit                   SSP1MSK2            __at(0x109A);	// @ (0x213 * 8 + 2)
#define                                 SSP1MSK2_bit        _BIT_ACCESS(SSP1MSK,2)
// SSP1MSK<SSP1MSK3>
extern volatile __bit                   SSP1MSK3            __at(0x109B);	// @ (0x213 * 8 + 3)
#define                                 SSP1MSK3_bit        _BIT_ACCESS(SSP1MSK,3)
// SSP1MSK<SSP1MSK4>
extern volatile __bit                   SSP1MSK4            __at(0x109C);	// @ (0x213 * 8 + 4)
#define                                 SSP1MSK4_bit        _BIT_ACCESS(SSP1MSK,4)
// SSP1MSK<SSP1MSK5>
extern volatile __bit                   SSP1MSK5            __at(0x109D);	// @ (0x213 * 8 + 5)
#define                                 SSP1MSK5_bit        _BIT_ACCESS(SSP1MSK,5)
// SSP1MSK<SSP1MSK6>
extern volatile __bit                   SSP1MSK6            __at(0x109E);	// @ (0x213 * 8 + 6)
#define                                 SSP1MSK6_bit        _BIT_ACCESS(SSP1MSK,6)
// SSP1MSK<SSP1MSK7>
extern volatile __bit                   SSP1MSK7            __at(0x109F);	// @ (0x213 * 8 + 7)
#define                                 SSP1MSK7_bit        _BIT_ACCESS(SSP1MSK,7)
// SSP1CON1<SSPEN>
extern volatile __bit                   SSPEN               __at(0x10AD);	// @ (0x215 * 8 + 5)
#define                                 SSPEN_bit           _BIT_ACCESS(SSP1CON1,5)
// SSP1CON1<SSPM0>
extern volatile __bit                   SSPM0               __at(0x10A8);	// @ (0x215 * 8 + 0)
#define                                 SSPM0_bit           _BIT_ACCESS(SSP1CON1,0)
// SSP1CON1<SSPM1>
extern volatile __bit                   SSPM1               __at(0x10A9);	// @ (0x215 * 8 + 1)
#define                                 SSPM1_bit           _BIT_ACCESS(SSP1CON1,1)
// SSP1CON1<SSPM2>
extern volatile __bit                   SSPM2               __at(0x10AA);	// @ (0x215 * 8 + 2)
#define                                 SSPM2_bit           _BIT_ACCESS(SSP1CON1,2)
// SSP1CON1<SSPM3>
extern volatile __bit                   SSPM3               __at(0x10AB);	// @ (0x215 * 8 + 3)
#define                                 SSPM3_bit           _BIT_ACCESS(SSP1CON1,3)
// SSP1CON1<SSPOV>
extern volatile __bit                   SSPOV               __at(0x10AE);	// @ (0x215 * 8 + 6)
#define                                 SSPOV_bit           _BIT_ACCESS(SSP1CON1,6)
// PCON<STKOVF>
extern volatile __bit                   STKOVF              __at(0x4C7);	// @ (0x98 * 8 + 7)
#define                                 STKOVF_bit          _BIT_ACCESS(PCON,7)
// PCON<STKUNF>
extern volatile __bit                   STKUNF              __at(0x4C6);	// @ (0x98 * 8 + 6)
#define                                 STKUNF_bit          _BIT_ACCESS(PCON,6)
// WDTCON<SWDTEN>
extern volatile __bit                   SWDTEN              __at(0x4C8);	// @ (0x99 * 8 + 0)
#define                                 SWDTEN_bit          _BIT_ACCESS(WDTCON,0)
// OPTION_REG<T0CS>
extern volatile __bit                   T0CS                __at(0x4BD);	// @ (0x97 * 8 + 5)
#define                                 T0CS_bit            _BIT_ACCESS(OPTION_REG,5)
// INTCON<T0IE>
extern volatile __bit                   T0IE                __at(0x5D);	// @ (0xB * 8 + 5)
#define                                 T0IE_bit            _BIT_ACCESS(INTCON,5)
// INTCON<T0IF>
extern volatile __bit                   T0IF                __at(0x5A);	// @ (0xB * 8 + 2)
#define                                 T0IF_bit            _BIT_ACCESS(INTCON,2)
// OPTION_REG<T0SE>
extern volatile __bit                   T0SE                __at(0x4BC);	// @ (0x97 * 8 + 4)
#define                                 T0SE_bit            _BIT_ACCESS(OPTION_REG,4)
// T1CON<T1CKPS0>
extern volatile __bit                   T1CKPS0             __at(0xD4);	// @ (0x1A * 8 + 4)
#define                                 T1CKPS0_bit         _BIT_ACCESS(T1CON,4)
// T1CON<T1CKPS1>
extern volatile __bit                   T1CKPS1             __at(0xD5);	// @ (0x1A * 8 + 5)
#define                                 T1CKPS1_bit         _BIT_ACCESS(T1CON,5)
// T1CON<T1CS0>
extern volatile __bit                   T1CS0               __at(0xD6);	// @ (0x1A * 8 + 6)
#define                                 T1CS0_bit           _BIT_ACCESS(T1CON,6)
// T1CON<T1CS1>
extern volatile __bit                   T1CS1               __at(0xD7);	// @ (0x1A * 8 + 7)
#define                                 T1CS1_bit           _BIT_ACCESS(T1CON,7)
// T1GCON<T1GE>
extern volatile __bit                   T1GE                __at(0xDF);	// @ (0x1B * 8 + 7)
#define                                 T1GE_bit            _BIT_ACCESS(T1GCON,7)
// T1GCON<T1GGO_nDONE>
extern volatile __bit                   T1GGO_nDONE         __at(0xDB);	// @ (0x1B * 8 + 3)
#define                                 T1GGO_nDONE_bit     _BIT_ACCESS(T1GCON,3)
// T1GCON<T1GPOL>
extern volatile __bit                   T1GPOL              __at(0xDE);	// @ (0x1B * 8 + 6)
#define                                 T1GPOL_bit          _BIT_ACCESS(T1GCON,6)
// T1GCON<T1GSPM>
extern volatile __bit                   T1GSPM              __at(0xDC);	// @ (0x1B * 8 + 4)
#define                                 T1GSPM_bit          _BIT_ACCESS(T1GCON,4)
// T1GCON<T1GSS0>
extern volatile __bit                   T1GSS0              __at(0xD8);	// @ (0x1B * 8 + 0)
#define                                 T1GSS0_bit          _BIT_ACCESS(T1GCON,0)
// T1GCON<T1GSS1>
extern volatile __bit                   T1GSS1              __at(0xD9);	// @ (0x1B * 8 + 1)
#define                                 T1GSS1_bit          _BIT_ACCESS(T1GCON,1)
// T1GCON<T1GTM>
extern volatile __bit                   T1GTM               __at(0xDD);	// @ (0x1B * 8 + 5)
#define                                 T1GTM_bit           _BIT_ACCESS(T1GCON,5)
// T1GCON<T1GVAL>
extern volatile __bit                   T1GVAL              __at(0xDA);	// @ (0x1B * 8 + 2)
#define                                 T1GVAL_bit          _BIT_ACCESS(T1GCON,2)
// T1CON<T1ON>
extern volatile __bit                   T1ON                __at(0xD0);	// @ (0x1A * 8 + 0)
#define                                 T1ON_bit            _BIT_ACCESS(T1CON,0)
// T1CON<T1OSCEN>
extern volatile __bit                   T1OSCEN             __at(0xD3);	// @ (0x1A * 8 + 3)
#define                                 T1OSCEN_bit         _BIT_ACCESS(T1CON,3)
// T2HLT<T2CKPOL>
extern volatile __bit                   T2CKPOL             __at(0x24B6);	// @ (0x496 * 8 + 6)
#define                                 T2CKPOL_bit         _BIT_ACCESS(T2HLT,6)
// T2CON<T2CKPS0>
extern volatile __bit                   T2CKPS0             __at(0x24AC);	// @ (0x495 * 8 + 4)
#define                                 T2CKPS0_bit         _BIT_ACCESS(T2CON,4)
// T2CON<T2CKPS1>
extern volatile __bit                   T2CKPS1             __at(0x24AD);	// @ (0x495 * 8 + 5)
#define                                 T2CKPS1_bit         _BIT_ACCESS(T2CON,5)
// T2CON<T2CKPS2>
extern volatile __bit                   T2CKPS2             __at(0x24AE);	// @ (0x495 * 8 + 6)
#define                                 T2CKPS2_bit         _BIT_ACCESS(T2CON,6)
// T2HLT<T2CKSYNC>
extern volatile __bit                   T2CKSYNC            __at(0x24B5);	// @ (0x496 * 8 + 5)
#define                                 T2CKSYNC_bit        _BIT_ACCESS(T2HLT,5)
// T2CLKCON<T2CS0>
extern volatile __bit                   T2CS0               __at(0x24B8);	// @ (0x497 * 8 + 0)
#define                                 T2CS0_bit           _BIT_ACCESS(T2CLKCON,0)
// T2CLKCON<T2CS1>
extern volatile __bit                   T2CS1               __at(0x24B9);	// @ (0x497 * 8 + 1)
#define                                 T2CS1_bit           _BIT_ACCESS(T2CLKCON,1)
// T2CLKCON<T2CS2>
extern volatile __bit                   T2CS2               __at(0x24BA);	// @ (0x497 * 8 + 2)
#define                                 T2CS2_bit           _BIT_ACCESS(T2CLKCON,2)
// T2CLKCON<T2CS3>
extern volatile __bit                   T2CS3               __at(0x24BB);	// @ (0x497 * 8 + 3)
#define                                 T2CS3_bit           _BIT_ACCESS(T2CLKCON,3)
// T2HLT<T2MODE0>
extern volatile __bit                   T2MODE0             __at(0x24B0);	// @ (0x496 * 8 + 0)
#define                                 T2MODE0_bit         _BIT_ACCESS(T2HLT,0)
// T2HLT<T2MODE1>
extern volatile __bit                   T2MODE1             __at(0x24B1);	// @ (0x496 * 8 + 1)
#define                                 T2MODE1_bit         _BIT_ACCESS(T2HLT,1)
// T2HLT<T2MODE2>
extern volatile __bit                   T2MODE2             __at(0x24B2);	// @ (0x496 * 8 + 2)
#define                                 T2MODE2_bit         _BIT_ACCESS(T2HLT,2)
// T2HLT<T2MODE3>
extern volatile __bit                   T2MODE3             __at(0x24B3);	// @ (0x496 * 8 + 3)
#define                                 T2MODE3_bit         _BIT_ACCESS(T2HLT,3)
// T2HLT<T2MODE4>
extern volatile __bit                   T2MODE4             __at(0x24B4);	// @ (0x496 * 8 + 4)
#define                                 T2MODE4_bit         _BIT_ACCESS(T2HLT,4)
// T2CON<T2ON>
extern volatile __bit                   T2ON                __at(0x24AF);	// @ (0x495 * 8 + 7)
#define                                 T2ON_bit            _BIT_ACCESS(T2CON,7)
// T2CON<T2OUTPS0>
extern volatile __bit                   T2OUTPS0            __at(0x24A8);	// @ (0x495 * 8 + 0)
#define                                 T2OUTPS0_bit        _BIT_ACCESS(T2CON,0)
// T2CON<T2OUTPS1>
extern volatile __bit                   T2OUTPS1            __at(0x24A9);	// @ (0x495 * 8 + 1)
#define                                 T2OUTPS1_bit        _BIT_ACCESS(T2CON,1)
// T2CON<T2OUTPS2>
extern volatile __bit                   T2OUTPS2            __at(0x24AA);	// @ (0x495 * 8 + 2)
#define                                 T2OUTPS2_bit        _BIT_ACCESS(T2CON,2)
// T2CON<T2OUTPS3>
extern volatile __bit                   T2OUTPS3            __at(0x24AB);	// @ (0x495 * 8 + 3)
#define                                 T2OUTPS3_bit        _BIT_ACCESS(T2CON,3)
// T2HLT<T2PSYNC>
extern volatile __bit                   T2PSYNC             __at(0x24B7);	// @ (0x496 * 8 + 7)
#define                                 T2PSYNC_bit         _BIT_ACCESS(T2HLT,7)
// T2RST<T2RSEL0>
extern volatile __bit                   T2RSEL0             __at(0x24C0);	// @ (0x498 * 8 + 0)
#define                                 T2RSEL0_bit         _BIT_ACCESS(T2RST,0)
// T2RST<T2RSEL1>
extern volatile __bit                   T2RSEL1             __at(0x24C1);	// @ (0x498 * 8 + 1)
#define                                 T2RSEL1_bit         _BIT_ACCESS(T2RST,1)
// T2RST<T2RSEL2>
extern volatile __bit                   T2RSEL2             __at(0x24C2);	// @ (0x498 * 8 + 2)
#define                                 T2RSEL2_bit         _BIT_ACCESS(T2RST,2)
// T2RST<T2RSEL3>
extern volatile __bit                   T2RSEL3             __at(0x24C3);	// @ (0x498 * 8 + 3)
#define                                 T2RSEL3_bit         _BIT_ACCESS(T2RST,3)
// T2RST<T2RSEL4>
extern volatile __bit                   T2RSEL4             __at(0x24C4);	// @ (0x498 * 8 + 4)
#define                                 T2RSEL4_bit         _BIT_ACCESS(T2RST,4)
// T3CON<T3CKPS0>
extern volatile __bit                   T3CKPS0             __at(0xF4);	// @ (0x1E * 8 + 4)
#define                                 T3CKPS0_bit         _BIT_ACCESS(T3CON,4)
// T3CON<T3CKPS1>
extern volatile __bit                   T3CKPS1             __at(0xF5);	// @ (0x1E * 8 + 5)
#define                                 T3CKPS1_bit         _BIT_ACCESS(T3CON,5)
// T3CON<T3CS0>
extern volatile __bit                   T3CS0               __at(0xF6);	// @ (0x1E * 8 + 6)
#define                                 T3CS0_bit           _BIT_ACCESS(T3CON,6)
// T3CON<T3CS1>
extern volatile __bit                   T3CS1               __at(0xF7);	// @ (0x1E * 8 + 7)
#define                                 T3CS1_bit           _BIT_ACCESS(T3CON,7)
// T3GCON<T3GE>
extern volatile __bit                   T3GE                __at(0xFF);	// @ (0x1F * 8 + 7)
#define                                 T3GE_bit            _BIT_ACCESS(T3GCON,7)
// T3GCON<T3GGO_nDONE>
extern volatile __bit                   T3GGO_nDONE         __at(0xFB);	// @ (0x1F * 8 + 3)
#define                                 T3GGO_nDONE_bit     _BIT_ACCESS(T3GCON,3)
// T3GCON<T3GPOL>
extern volatile __bit                   T3GPOL              __at(0xFE);	// @ (0x1F * 8 + 6)
#define                                 T3GPOL_bit          _BIT_ACCESS(T3GCON,6)
// T3GCON<T3GSPM>
extern volatile __bit                   T3GSPM              __at(0xFC);	// @ (0x1F * 8 + 4)
#define                                 T3GSPM_bit          _BIT_ACCESS(T3GCON,4)
// T3GCON<T3GSS0>
extern volatile __bit                   T3GSS0              __at(0xF8);	// @ (0x1F * 8 + 0)
#define                                 T3GSS0_bit          _BIT_ACCESS(T3GCON,0)
// T3GCON<T3GSS1>
extern volatile __bit                   T3GSS1              __at(0xF9);	// @ (0x1F * 8 + 1)
#define                                 T3GSS1_bit          _BIT_ACCESS(T3GCON,1)
// T3GCON<T3GTM>
extern volatile __bit                   T3GTM               __at(0xFD);	// @ (0x1F * 8 + 5)
#define                                 T3GTM_bit           _BIT_ACCESS(T3GCON,5)
// T3GCON<T3GVAL>
extern volatile __bit                   T3GVAL              __at(0xFA);	// @ (0x1F * 8 + 2)
#define                                 T3GVAL_bit          _BIT_ACCESS(T3GCON,2)
// T3CON<T3ON>
extern volatile __bit                   T3ON                __at(0xF0);	// @ (0x1E * 8 + 0)
#define                                 T3ON_bit            _BIT_ACCESS(T3CON,0)
// T3CON<T3OSCEN>
extern volatile __bit                   T3OSCEN             __at(0xF3);	// @ (0x1E * 8 + 3)
#define                                 T3OSCEN_bit         _BIT_ACCESS(T3CON,3)
// T4HLT<T4CKPOL>
extern volatile __bit                   T4CKPOL             __at(0x20B6);	// @ (0x416 * 8 + 6)
#define                                 T4CKPOL_bit         _BIT_ACCESS(T4HLT,6)
// T4CON<T4CKPS0>
extern volatile __bit                   T4CKPS0             __at(0x20AC);	// @ (0x415 * 8 + 4)
#define                                 T4CKPS0_bit         _BIT_ACCESS(T4CON,4)
// T4CON<T4CKPS1>
extern volatile __bit                   T4CKPS1             __at(0x20AD);	// @ (0x415 * 8 + 5)
#define                                 T4CKPS1_bit         _BIT_ACCESS(T4CON,5)
// T4CON<T4CKPS2>
extern volatile __bit                   T4CKPS2             __at(0x20AE);	// @ (0x415 * 8 + 6)
#define                                 T4CKPS2_bit         _BIT_ACCESS(T4CON,6)
// T4HLT<T4CKSYNC>
extern volatile __bit                   T4CKSYNC            __at(0x20B5);	// @ (0x416 * 8 + 5)
#define                                 T4CKSYNC_bit        _BIT_ACCESS(T4HLT,5)
// T4CLKCON<T4CS0>
extern volatile __bit                   T4CS0               __at(0x20B8);	// @ (0x417 * 8 + 0)
#define                                 T4CS0_bit           _BIT_ACCESS(T4CLKCON,0)
// T4CLKCON<T4CS1>
extern volatile __bit                   T4CS1               __at(0x20B9);	// @ (0x417 * 8 + 1)
#define                                 T4CS1_bit           _BIT_ACCESS(T4CLKCON,1)
// T4CLKCON<T4CS2>
extern volatile __bit                   T4CS2               __at(0x20BA);	// @ (0x417 * 8 + 2)
#define                                 T4CS2_bit           _BIT_ACCESS(T4CLKCON,2)
// T4CLKCON<T4CS3>
extern volatile __bit                   T4CS3               __at(0x20BB);	// @ (0x417 * 8 + 3)
#define                                 T4CS3_bit           _BIT_ACCESS(T4CLKCON,3)
// T4HLT<T4MODE0>
extern volatile __bit                   T4MODE0             __at(0x20B0);	// @ (0x416 * 8 + 0)
#define                                 T4MODE0_bit         _BIT_ACCESS(T4HLT,0)
// T4HLT<T4MODE1>
extern volatile __bit                   T4MODE1             __at(0x20B1);	// @ (0x416 * 8 + 1)
#define                                 T4MODE1_bit         _BIT_ACCESS(T4HLT,1)
// T4HLT<T4MODE2>
extern volatile __bit                   T4MODE2             __at(0x20B2);	// @ (0x416 * 8 + 2)
#define                                 T4MODE2_bit         _BIT_ACCESS(T4HLT,2)
// T4HLT<T4MODE3>
extern volatile __bit                   T4MODE3             __at(0x20B3);	// @ (0x416 * 8 + 3)
#define                                 T4MODE3_bit         _BIT_ACCESS(T4HLT,3)
// T4HLT<T4MODE4>
extern volatile __bit                   T4MODE4             __at(0x20B4);	// @ (0x416 * 8 + 4)
#define                                 T4MODE4_bit         _BIT_ACCESS(T4HLT,4)
// T4CON<T4ON>
extern volatile __bit                   T4ON                __at(0x20AF);	// @ (0x415 * 8 + 7)
#define                                 T4ON_bit            _BIT_ACCESS(T4CON,7)
// T4CON<T4OUTPS0>
extern volatile __bit                   T4OUTPS0            __at(0x20A8);	// @ (0x415 * 8 + 0)
#define                                 T4OUTPS0_bit        _BIT_ACCESS(T4CON,0)
// T4CON<T4OUTPS1>
extern volatile __bit                   T4OUTPS1            __at(0x20A9);	// @ (0x415 * 8 + 1)
#define                                 T4OUTPS1_bit        _BIT_ACCESS(T4CON,1)
// T4CON<T4OUTPS2>
extern volatile __bit                   T4OUTPS2            __at(0x20AA);	// @ (0x415 * 8 + 2)
#define                                 T4OUTPS2_bit        _BIT_ACCESS(T4CON,2)
// T4CON<T4OUTPS3>
extern volatile __bit                   T4OUTPS3            __at(0x20AB);	// @ (0x415 * 8 + 3)
#define                                 T4OUTPS3_bit        _BIT_ACCESS(T4CON,3)
// T4HLT<T4PSYNC>
extern volatile __bit                   T4PSYNC             __at(0x20B7);	// @ (0x416 * 8 + 7)
#define                                 T4PSYNC_bit         _BIT_ACCESS(T4HLT,7)
// T4RST<T4RSEL0>
extern volatile __bit                   T4RSEL0             __at(0x20C0);	// @ (0x418 * 8 + 0)
#define                                 T4RSEL0_bit         _BIT_ACCESS(T4RST,0)
// T4RST<T4RSEL1>
extern volatile __bit                   T4RSEL1             __at(0x20C1);	// @ (0x418 * 8 + 1)
#define                                 T4RSEL1_bit         _BIT_ACCESS(T4RST,1)
// T4RST<T4RSEL2>
extern volatile __bit                   T4RSEL2             __at(0x20C2);	// @ (0x418 * 8 + 2)
#define                                 T4RSEL2_bit         _BIT_ACCESS(T4RST,2)
// T4RST<T4RSEL3>
extern volatile __bit                   T4RSEL3             __at(0x20C3);	// @ (0x418 * 8 + 3)
#define                                 T4RSEL3_bit         _BIT_ACCESS(T4RST,3)
// T4RST<T4RSEL4>
extern volatile __bit                   T4RSEL4             __at(0x20C4);	// @ (0x418 * 8 + 4)
#define                                 T4RSEL4_bit         _BIT_ACCESS(T4RST,4)
// T5CON<T5CKPS0>
extern volatile __bit                   T5CKPS0             __at(0x208C);	// @ (0x411 * 8 + 4)
#define                                 T5CKPS0_bit         _BIT_ACCESS(T5CON,4)
// T5CON<T5CKPS1>
extern volatile __bit                   T5CKPS1             __at(0x208D);	// @ (0x411 * 8 + 5)
#define                                 T5CKPS1_bit         _BIT_ACCESS(T5CON,5)
// T5CON<T5CS0>
extern volatile __bit                   T5CS0               __at(0x208E);	// @ (0x411 * 8 + 6)
#define                                 T5CS0_bit           _BIT_ACCESS(T5CON,6)
// T5CON<T5CS1>
extern volatile __bit                   T5CS1               __at(0x208F);	// @ (0x411 * 8 + 7)
#define                                 T5CS1_bit           _BIT_ACCESS(T5CON,7)
// T5GCON<T5GE>
extern volatile __bit                   T5GE                __at(0x2097);	// @ (0x412 * 8 + 7)
#define                                 T5GE_bit            _BIT_ACCESS(T5GCON,7)
// T5GCON<T5GGO_nDONE>
extern volatile __bit                   T5GGO_nDONE         __at(0x2093);	// @ (0x412 * 8 + 3)
#define                                 T5GGO_nDONE_bit     _BIT_ACCESS(T5GCON,3)
// T5GCON<T5GPOL>
extern volatile __bit                   T5GPOL              __at(0x2096);	// @ (0x412 * 8 + 6)
#define                                 T5GPOL_bit          _BIT_ACCESS(T5GCON,6)
// T5GCON<T5GSPM>
extern volatile __bit                   T5GSPM              __at(0x2094);	// @ (0x412 * 8 + 4)
#define                                 T5GSPM_bit          _BIT_ACCESS(T5GCON,4)
// T5GCON<T5GSS0>
extern volatile __bit                   T5GSS0              __at(0x2090);	// @ (0x412 * 8 + 0)
#define                                 T5GSS0_bit          _BIT_ACCESS(T5GCON,0)
// T5GCON<T5GSS1>
extern volatile __bit                   T5GSS1              __at(0x2091);	// @ (0x412 * 8 + 1)
#define                                 T5GSS1_bit          _BIT_ACCESS(T5GCON,1)
// T5GCON<T5GTM>
extern volatile __bit                   T5GTM               __at(0x2095);	// @ (0x412 * 8 + 5)
#define                                 T5GTM_bit           _BIT_ACCESS(T5GCON,5)
// T5GCON<T5GVAL>
extern volatile __bit                   T5GVAL              __at(0x2092);	// @ (0x412 * 8 + 2)
#define                                 T5GVAL_bit          _BIT_ACCESS(T5GCON,2)
// T5CON<T5ON>
extern volatile __bit                   T5ON                __at(0x2088);	// @ (0x411 * 8 + 0)
#define                                 T5ON_bit            _BIT_ACCESS(T5CON,0)
// T5CON<T5OSCEN>
extern volatile __bit                   T5OSCEN             __at(0x208B);	// @ (0x411 * 8 + 3)
#define                                 T5OSCEN_bit         _BIT_ACCESS(T5CON,3)
// T6HLT<T6CKPOL>
extern volatile __bit                   T6CKPOL             __at(0x20EE);	// @ (0x41D * 8 + 6)
#define                                 T6CKPOL_bit         _BIT_ACCESS(T6HLT,6)
// T6CON<T6CKPS0>
extern volatile __bit                   T6CKPS0             __at(0x20E4);	// @ (0x41C * 8 + 4)
#define                                 T6CKPS0_bit         _BIT_ACCESS(T6CON,4)
// T6CON<T6CKPS1>
extern volatile __bit                   T6CKPS1             __at(0x20E5);	// @ (0x41C * 8 + 5)
#define                                 T6CKPS1_bit         _BIT_ACCESS(T6CON,5)
// T6CON<T6CKPS2>
extern volatile __bit                   T6CKPS2             __at(0x20E6);	// @ (0x41C * 8 + 6)
#define                                 T6CKPS2_bit         _BIT_ACCESS(T6CON,6)
// T6HLT<T6CKSYNC>
extern volatile __bit                   T6CKSYNC            __at(0x20ED);	// @ (0x41D * 8 + 5)
#define                                 T6CKSYNC_bit        _BIT_ACCESS(T6HLT,5)
// T6CLKCON<T6CS0>
extern volatile __bit                   T6CS0               __at(0x20F0);	// @ (0x41E * 8 + 0)
#define                                 T6CS0_bit           _BIT_ACCESS(T6CLKCON,0)
// T6CLKCON<T6CS1>
extern volatile __bit                   T6CS1               __at(0x20F1);	// @ (0x41E * 8 + 1)
#define                                 T6CS1_bit           _BIT_ACCESS(T6CLKCON,1)
// T6CLKCON<T6CS2>
extern volatile __bit                   T6CS2               __at(0x20F2);	// @ (0x41E * 8 + 2)
#define                                 T6CS2_bit           _BIT_ACCESS(T6CLKCON,2)
// T6CLKCON<T6CS3>
extern volatile __bit                   T6CS3               __at(0x20F3);	// @ (0x41E * 8 + 3)
#define                                 T6CS3_bit           _BIT_ACCESS(T6CLKCON,3)
// T6HLT<T6MODE0>
extern volatile __bit                   T6MODE0             __at(0x20E8);	// @ (0x41D * 8 + 0)
#define                                 T6MODE0_bit         _BIT_ACCESS(T6HLT,0)
// T6HLT<T6MODE1>
extern volatile __bit                   T6MODE1             __at(0x20E9);	// @ (0x41D * 8 + 1)
#define                                 T6MODE1_bit         _BIT_ACCESS(T6HLT,1)
// T6HLT<T6MODE2>
extern volatile __bit                   T6MODE2             __at(0x20EA);	// @ (0x41D * 8 + 2)
#define                                 T6MODE2_bit         _BIT_ACCESS(T6HLT,2)
// T6HLT<T6MODE3>
extern volatile __bit                   T6MODE3             __at(0x20EB);	// @ (0x41D * 8 + 3)
#define                                 T6MODE3_bit         _BIT_ACCESS(T6HLT,3)
// T6HLT<T6MODE4>
extern volatile __bit                   T6MODE4             __at(0x20EC);	// @ (0x41D * 8 + 4)
#define                                 T6MODE4_bit         _BIT_ACCESS(T6HLT,4)
// T6CON<T6ON>
extern volatile __bit                   T6ON                __at(0x20E7);	// @ (0x41C * 8 + 7)
#define                                 T6ON_bit            _BIT_ACCESS(T6CON,7)
// T6CON<T6OUTPS0>
extern volatile __bit                   T6OUTPS0            __at(0x20E0);	// @ (0x41C * 8 + 0)
#define                                 T6OUTPS0_bit        _BIT_ACCESS(T6CON,0)
// T6CON<T6OUTPS1>
extern volatile __bit                   T6OUTPS1            __at(0x20E1);	// @ (0x41C * 8 + 1)
#define                                 T6OUTPS1_bit        _BIT_ACCESS(T6CON,1)
// T6CON<T6OUTPS2>
extern volatile __bit                   T6OUTPS2            __at(0x20E2);	// @ (0x41C * 8 + 2)
#define                                 T6OUTPS2_bit        _BIT_ACCESS(T6CON,2)
// T6CON<T6OUTPS3>
extern volatile __bit                   T6OUTPS3            __at(0x20E3);	// @ (0x41C * 8 + 3)
#define                                 T6OUTPS3_bit        _BIT_ACCESS(T6CON,3)
// T6HLT<T6PSYNC>
extern volatile __bit                   T6PSYNC             __at(0x20EF);	// @ (0x41D * 8 + 7)
#define                                 T6PSYNC_bit         _BIT_ACCESS(T6HLT,7)
// T6RST<T6RSEL0>
extern volatile __bit                   T6RSEL0             __at(0x20F8);	// @ (0x41F * 8 + 0)
#define                                 T6RSEL0_bit         _BIT_ACCESS(T6RST,0)
// T6RST<T6RSEL1>
extern volatile __bit                   T6RSEL1             __at(0x20F9);	// @ (0x41F * 8 + 1)
#define                                 T6RSEL1_bit         _BIT_ACCESS(T6RST,1)
// T6RST<T6RSEL2>
extern volatile __bit                   T6RSEL2             __at(0x20FA);	// @ (0x41F * 8 + 2)
#define                                 T6RSEL2_bit         _BIT_ACCESS(T6RST,2)
// T6RST<T6RSEL3>
extern volatile __bit                   T6RSEL3             __at(0x20FB);	// @ (0x41F * 8 + 3)
#define                                 T6RSEL3_bit         _BIT_ACCESS(T6RST,3)
// T6RST<T6RSEL4>
extern volatile __bit                   T6RSEL4             __at(0x20FC);	// @ (0x41F * 8 + 4)
#define                                 T6RSEL4_bit         _BIT_ACCESS(T6RST,4)
// T8HLT<T8CKPOL>
extern volatile __bit                   T8CKPOL             __at(0x24EE);	// @ (0x49D * 8 + 6)
#define                                 T8CKPOL_bit         _BIT_ACCESS(T8HLT,6)
// T8CON<T8CKPS0>
extern volatile __bit                   T8CKPS0             __at(0x24E4);	// @ (0x49C * 8 + 4)
#define                                 T8CKPS0_bit         _BIT_ACCESS(T8CON,4)
// T8CON<T8CKPS1>
extern volatile __bit                   T8CKPS1             __at(0x24E5);	// @ (0x49C * 8 + 5)
#define                                 T8CKPS1_bit         _BIT_ACCESS(T8CON,5)
// T8CON<T8CKPS2>
extern volatile __bit                   T8CKPS2             __at(0x24E6);	// @ (0x49C * 8 + 6)
#define                                 T8CKPS2_bit         _BIT_ACCESS(T8CON,6)
// T8HLT<T8CKSYNC>
extern volatile __bit                   T8CKSYNC            __at(0x24ED);	// @ (0x49D * 8 + 5)
#define                                 T8CKSYNC_bit        _BIT_ACCESS(T8HLT,5)
// T8CLKCON<T8CS0>
extern volatile __bit                   T8CS0               __at(0x24F0);	// @ (0x49E * 8 + 0)
#define                                 T8CS0_bit           _BIT_ACCESS(T8CLKCON,0)
// T8CLKCON<T8CS1>
extern volatile __bit                   T8CS1               __at(0x24F1);	// @ (0x49E * 8 + 1)
#define                                 T8CS1_bit           _BIT_ACCESS(T8CLKCON,1)
// T8CLKCON<T8CS2>
extern volatile __bit                   T8CS2               __at(0x24F2);	// @ (0x49E * 8 + 2)
#define                                 T8CS2_bit           _BIT_ACCESS(T8CLKCON,2)
// T8CLKCON<T8CS3>
extern volatile __bit                   T8CS3               __at(0x24F3);	// @ (0x49E * 8 + 3)
#define                                 T8CS3_bit           _BIT_ACCESS(T8CLKCON,3)
// T8HLT<T8MODE0>
extern volatile __bit                   T8MODE0             __at(0x24E8);	// @ (0x49D * 8 + 0)
#define                                 T8MODE0_bit         _BIT_ACCESS(T8HLT,0)
// T8HLT<T8MODE1>
extern volatile __bit                   T8MODE1             __at(0x24E9);	// @ (0x49D * 8 + 1)
#define                                 T8MODE1_bit         _BIT_ACCESS(T8HLT,1)
// T8HLT<T8MODE2>
extern volatile __bit                   T8MODE2             __at(0x24EA);	// @ (0x49D * 8 + 2)
#define                                 T8MODE2_bit         _BIT_ACCESS(T8HLT,2)
// T8HLT<T8MODE3>
extern volatile __bit                   T8MODE3             __at(0x24EB);	// @ (0x49D * 8 + 3)
#define                                 T8MODE3_bit         _BIT_ACCESS(T8HLT,3)
// T8HLT<T8MODE4>
extern volatile __bit                   T8MODE4             __at(0x24EC);	// @ (0x49D * 8 + 4)
#define                                 T8MODE4_bit         _BIT_ACCESS(T8HLT,4)
// T8CON<T8ON>
extern volatile __bit                   T8ON                __at(0x24E7);	// @ (0x49C * 8 + 7)
#define                                 T8ON_bit            _BIT_ACCESS(T8CON,7)
// T8CON<T8OUTPS0>
extern volatile __bit                   T8OUTPS0            __at(0x24E0);	// @ (0x49C * 8 + 0)
#define                                 T8OUTPS0_bit        _BIT_ACCESS(T8CON,0)
// T8CON<T8OUTPS1>
extern volatile __bit                   T8OUTPS1            __at(0x24E1);	// @ (0x49C * 8 + 1)
#define                                 T8OUTPS1_bit        _BIT_ACCESS(T8CON,1)
// T8CON<T8OUTPS2>
extern volatile __bit                   T8OUTPS2            __at(0x24E2);	// @ (0x49C * 8 + 2)
#define                                 T8OUTPS2_bit        _BIT_ACCESS(T8CON,2)
// T8CON<T8OUTPS3>
extern volatile __bit                   T8OUTPS3            __at(0x24E3);	// @ (0x49C * 8 + 3)
#define                                 T8OUTPS3_bit        _BIT_ACCESS(T8CON,3)
// T8HLT<T8PSYNC>
extern volatile __bit                   T8PSYNC             __at(0x24EF);	// @ (0x49D * 8 + 7)
#define                                 T8PSYNC_bit         _BIT_ACCESS(T8HLT,7)
// T8RST<T8RSEL0>
extern volatile __bit                   T8RSEL0             __at(0x24F8);	// @ (0x49F * 8 + 0)
#define                                 T8RSEL0_bit         _BIT_ACCESS(T8RST,0)
// T8RST<T8RSEL1>
extern volatile __bit                   T8RSEL1             __at(0x24F9);	// @ (0x49F * 8 + 1)
#define                                 T8RSEL1_bit         _BIT_ACCESS(T8RST,1)
// T8RST<T8RSEL2>
extern volatile __bit                   T8RSEL2             __at(0x24FA);	// @ (0x49F * 8 + 2)
#define                                 T8RSEL2_bit         _BIT_ACCESS(T8RST,2)
// T8RST<T8RSEL3>
extern volatile __bit                   T8RSEL3             __at(0x24FB);	// @ (0x49F * 8 + 3)
#define                                 T8RSEL3_bit         _BIT_ACCESS(T8RST,3)
// T8RST<T8RSEL4>
extern volatile __bit                   T8RSEL4             __at(0x24FC);	// @ (0x49F * 8 + 4)
#define                                 T8RSEL4_bit         _BIT_ACCESS(T8RST,4)
// OPTION_REG<TMR0CS>
extern volatile __bit                   TMR0CS              __at(0x4BD);	// @ (0x97 * 8 + 5)
#define                                 TMR0CS_bit          _BIT_ACCESS(OPTION_REG,5)
// INTCON<TMR0IE>
extern volatile __bit                   TMR0IE              __at(0x5D);	// @ (0xB * 8 + 5)
#define                                 TMR0IE_bit          _BIT_ACCESS(INTCON,5)
// INTCON<TMR0IF>
extern volatile __bit                   TMR0IF              __at(0x5A);	// @ (0xB * 8 + 2)
#define                                 TMR0IF_bit          _BIT_ACCESS(INTCON,2)
// OPTION_REG<TMR0SE>
extern volatile __bit                   TMR0SE              __at(0x4BC);	// @ (0x97 * 8 + 4)
#define                                 TMR0SE_bit          _BIT_ACCESS(OPTION_REG,4)
// T1CON<TMR1CS0>
extern volatile __bit                   TMR1CS0             __at(0xD6);	// @ (0x1A * 8 + 6)
#define                                 TMR1CS0_bit         _BIT_ACCESS(T1CON,6)
// T1CON<TMR1CS1>
extern volatile __bit                   TMR1CS1             __at(0xD7);	// @ (0x1A * 8 + 7)
#define                                 TMR1CS1_bit         _BIT_ACCESS(T1CON,7)
// T1GCON<TMR1GE>
extern volatile __bit                   TMR1GE              __at(0xDF);	// @ (0x1B * 8 + 7)
#define                                 TMR1GE_bit          _BIT_ACCESS(T1GCON,7)
// PIE1<TMR1GIE>
extern volatile __bit                   TMR1GIE             __at(0x48F);	// @ (0x91 * 8 + 7)
#define                                 TMR1GIE_bit         _BIT_ACCESS(PIE1,7)
// PIR1<TMR1GIF>
extern volatile __bit                   TMR1GIF             __at(0x8F);	// @ (0x11 * 8 + 7)
#define                                 TMR1GIF_bit         _BIT_ACCESS(PIR1,7)
// PIE1<TMR1IE>
extern volatile __bit                   TMR1IE              __at(0x488);	// @ (0x91 * 8 + 0)
#define                                 TMR1IE_bit          _BIT_ACCESS(PIE1,0)
// PIR1<TMR1IF>
extern volatile __bit                   TMR1IF              __at(0x88);	// @ (0x11 * 8 + 0)
#define                                 TMR1IF_bit          _BIT_ACCESS(PIR1,0)
// T1CON<TMR1ON>
extern volatile __bit                   TMR1ON              __at(0xD0);	// @ (0x1A * 8 + 0)
#define                                 TMR1ON_bit          _BIT_ACCESS(T1CON,0)
// PIE1<TMR2IE>
extern volatile __bit                   TMR2IE              __at(0x489);	// @ (0x91 * 8 + 1)
#define                                 TMR2IE_bit          _BIT_ACCESS(PIE1,1)
// PIR1<TMR2IF>
extern volatile __bit                   TMR2IF              __at(0x89);	// @ (0x11 * 8 + 1)
#define                                 TMR2IF_bit          _BIT_ACCESS(PIR1,1)
// T2CON<TMR2ON>
extern volatile __bit                   TMR2ON              __at(0x24AF);	// @ (0x495 * 8 + 7)
#define                                 TMR2ON_bit          _BIT_ACCESS(T2CON,7)
// T3CON<TMR3CS0>
extern volatile __bit                   TMR3CS0             __at(0xF6);	// @ (0x1E * 8 + 6)
#define                                 TMR3CS0_bit         _BIT_ACCESS(T3CON,6)
// T3CON<TMR3CS1>
extern volatile __bit                   TMR3CS1             __at(0xF7);	// @ (0x1E * 8 + 7)
#define                                 TMR3CS1_bit         _BIT_ACCESS(T3CON,7)
// T3GCON<TMR3GE>
extern volatile __bit                   TMR3GE              __at(0xFF);	// @ (0x1F * 8 + 7)
#define                                 TMR3GE_bit          _BIT_ACCESS(T3GCON,7)
// PIE4<TMR3GIE>
extern volatile __bit                   TMR3GIE             __at(0x4A3);	// @ (0x94 * 8 + 3)
#define                                 TMR3GIE_bit         _BIT_ACCESS(PIE4,3)
// PIR4<TMR3GIF>
extern volatile __bit                   TMR3GIF             __at(0xA3);	// @ (0x14 * 8 + 3)
#define                                 TMR3GIF_bit         _BIT_ACCESS(PIR4,3)
// PIE4<TMR3IE>
extern volatile __bit                   TMR3IE              __at(0x4A2);	// @ (0x94 * 8 + 2)
#define                                 TMR3IE_bit          _BIT_ACCESS(PIE4,2)
// PIR4<TMR3IF>
extern volatile __bit                   TMR3IF              __at(0xA2);	// @ (0x14 * 8 + 2)
#define                                 TMR3IF_bit          _BIT_ACCESS(PIR4,2)
// T3CON<TMR3ON>
extern volatile __bit                   TMR3ON              __at(0xF0);	// @ (0x1E * 8 + 0)
#define                                 TMR3ON_bit          _BIT_ACCESS(T3CON,0)
// PIE4<TMR4IE>
extern volatile __bit                   TMR4IE              __at(0x4A0);	// @ (0x94 * 8 + 0)
#define                                 TMR4IE_bit          _BIT_ACCESS(PIE4,0)
// PIR4<TMR4IF>
extern volatile __bit                   TMR4IF              __at(0xA0);	// @ (0x14 * 8 + 0)
#define                                 TMR4IF_bit          _BIT_ACCESS(PIR4,0)
// T4CON<TMR4ON>
extern volatile __bit                   TMR4ON              __at(0x20AF);	// @ (0x415 * 8 + 7)
#define                                 TMR4ON_bit          _BIT_ACCESS(T4CON,7)
// T5CON<TMR5CS0>
extern volatile __bit                   TMR5CS0             __at(0x208E);	// @ (0x411 * 8 + 6)
#define                                 TMR5CS0_bit         _BIT_ACCESS(T5CON,6)
// T5CON<TMR5CS1>
extern volatile __bit                   TMR5CS1             __at(0x208F);	// @ (0x411 * 8 + 7)
#define                                 TMR5CS1_bit         _BIT_ACCESS(T5CON,7)
// T5GCON<TMR5GE>
extern volatile __bit                   TMR5GE              __at(0x2097);	// @ (0x412 * 8 + 7)
#define                                 TMR5GE_bit          _BIT_ACCESS(T5GCON,7)
// PIE4<TMR5GIE>
extern volatile __bit                   TMR5GIE             __at(0x4A5);	// @ (0x94 * 8 + 5)
#define                                 TMR5GIE_bit         _BIT_ACCESS(PIE4,5)
// PIR4<TMR5GIF>
extern volatile __bit                   TMR5GIF             __at(0xA5);	// @ (0x14 * 8 + 5)
#define                                 TMR5GIF_bit         _BIT_ACCESS(PIR4,5)
// PIE4<TMR5IE>
extern volatile __bit                   TMR5IE              __at(0x4A4);	// @ (0x94 * 8 + 4)
#define                                 TMR5IE_bit          _BIT_ACCESS(PIE4,4)
// PIR4<TMR5IF>
extern volatile __bit                   TMR5IF              __at(0xA4);	// @ (0x14 * 8 + 4)
#define                                 TMR5IF_bit          _BIT_ACCESS(PIR4,4)
// T5CON<TMR5ON>
extern volatile __bit                   TMR5ON              __at(0x2088);	// @ (0x411 * 8 + 0)
#define                                 TMR5ON_bit          _BIT_ACCESS(T5CON,0)
// PIE4<TMR6IE>
extern volatile __bit                   TMR6IE              __at(0x4A1);	// @ (0x94 * 8 + 1)
#define                                 TMR6IE_bit          _BIT_ACCESS(PIE4,1)
// PIR4<TMR6IF>
extern volatile __bit                   TMR6IF              __at(0xA1);	// @ (0x14 * 8 + 1)
#define                                 TMR6IF_bit          _BIT_ACCESS(PIR4,1)
// T6CON<TMR6ON>
extern volatile __bit                   TMR6ON              __at(0x20E7);	// @ (0x41C * 8 + 7)
#define                                 TMR6ON_bit          _BIT_ACCESS(T6CON,7)
// PIE4<TMR8IE>
extern volatile __bit                   TMR8IE              __at(0x4A6);	// @ (0x94 * 8 + 6)
#define                                 TMR8IE_bit          _BIT_ACCESS(PIE4,6)
// PIR4<TMR8IF>
extern volatile __bit                   TMR8IF              __at(0xA6);	// @ (0x14 * 8 + 6)
#define                                 TMR8IF_bit          _BIT_ACCESS(PIR4,6)
// T8CON<TMR8ON>
extern volatile __bit                   TMR8ON              __at(0x24E7);	// @ (0x49C * 8 + 7)
#define                                 TMR8ON_bit          _BIT_ACCESS(T8CON,7)
// TRISA<TRISA0>
extern volatile __bit                   TRISA0              __at(0x460);	// @ (0x8C * 8 + 0)
#define                                 TRISA0_bit          _BIT_ACCESS(TRISA,0)
// TRISA<TRISA1>
extern volatile __bit                   TRISA1              __at(0x461);	// @ (0x8C * 8 + 1)
#define                                 TRISA1_bit          _BIT_ACCESS(TRISA,1)
// TRISA<TRISA2>
extern volatile __bit                   TRISA2              __at(0x462);	// @ (0x8C * 8 + 2)
#define                                 TRISA2_bit          _BIT_ACCESS(TRISA,2)
// TRISA<TRISA3>
extern volatile __bit                   TRISA3              __at(0x463);	// @ (0x8C * 8 + 3)
#define                                 TRISA3_bit          _BIT_ACCESS(TRISA,3)
// TRISA<TRISA4>
extern volatile __bit                   TRISA4              __at(0x464);	// @ (0x8C * 8 + 4)
#define                                 TRISA4_bit          _BIT_ACCESS(TRISA,4)
// TRISA<TRISA5>
extern volatile __bit                   TRISA5              __at(0x465);	// @ (0x8C * 8 + 5)
#define                                 TRISA5_bit          _BIT_ACCESS(TRISA,5)
// TRISA<TRISA6>
extern volatile __bit                   TRISA6              __at(0x466);	// @ (0x8C * 8 + 6)
#define                                 TRISA6_bit          _BIT_ACCESS(TRISA,6)
// TRISA<TRISA7>
extern volatile __bit                   TRISA7              __at(0x467);	// @ (0x8C * 8 + 7)
#define                                 TRISA7_bit          _BIT_ACCESS(TRISA,7)
// TRISB<TRISB0>
extern volatile __bit                   TRISB0              __at(0x468);	// @ (0x8D * 8 + 0)
#define                                 TRISB0_bit          _BIT_ACCESS(TRISB,0)
// TRISB<TRISB1>
extern volatile __bit                   TRISB1              __at(0x469);	// @ (0x8D * 8 + 1)
#define                                 TRISB1_bit          _BIT_ACCESS(TRISB,1)
// TRISB<TRISB2>
extern volatile __bit                   TRISB2              __at(0x46A);	// @ (0x8D * 8 + 2)
#define                                 TRISB2_bit          _BIT_ACCESS(TRISB,2)
// TRISB<TRISB3>
extern volatile __bit                   TRISB3              __at(0x46B);	// @ (0x8D * 8 + 3)
#define                                 TRISB3_bit          _BIT_ACCESS(TRISB,3)
// TRISB<TRISB4>
extern volatile __bit                   TRISB4              __at(0x46C);	// @ (0x8D * 8 + 4)
#define                                 TRISB4_bit          _BIT_ACCESS(TRISB,4)
// TRISB<TRISB5>
extern volatile __bit                   TRISB5              __at(0x46D);	// @ (0x8D * 8 + 5)
#define                                 TRISB5_bit          _BIT_ACCESS(TRISB,5)
// TRISB<TRISB6>
extern volatile __bit                   TRISB6              __at(0x46E);	// @ (0x8D * 8 + 6)
#define                                 TRISB6_bit          _BIT_ACCESS(TRISB,6)
// TRISB<TRISB7>
extern volatile __bit                   TRISB7              __at(0x46F);	// @ (0x8D * 8 + 7)
#define                                 TRISB7_bit          _BIT_ACCESS(TRISB,7)
// TRISC<TRISC0>
extern volatile __bit                   TRISC0              __at(0x470);	// @ (0x8E * 8 + 0)
#define                                 TRISC0_bit          _BIT_ACCESS(TRISC,0)
// TRISC<TRISC1>
extern volatile __bit                   TRISC1              __at(0x471);	// @ (0x8E * 8 + 1)
#define                                 TRISC1_bit          _BIT_ACCESS(TRISC,1)
// TRISC<TRISC2>
extern volatile __bit                   TRISC2              __at(0x472);	// @ (0x8E * 8 + 2)
#define                                 TRISC2_bit          _BIT_ACCESS(TRISC,2)
// TRISC<TRISC3>
extern volatile __bit                   TRISC3              __at(0x473);	// @ (0x8E * 8 + 3)
#define                                 TRISC3_bit          _BIT_ACCESS(TRISC,3)
// TRISC<TRISC4>
extern volatile __bit                   TRISC4              __at(0x474);	// @ (0x8E * 8 + 4)
#define                                 TRISC4_bit          _BIT_ACCESS(TRISC,4)
// TRISC<TRISC5>
extern volatile __bit                   TRISC5              __at(0x475);	// @ (0x8E * 8 + 5)
#define                                 TRISC5_bit          _BIT_ACCESS(TRISC,5)
// TRISC<TRISC6>
extern volatile __bit                   TRISC6              __at(0x476);	// @ (0x8E * 8 + 6)
#define                                 TRISC6_bit          _BIT_ACCESS(TRISC,6)
// TRISC<TRISC7>
extern volatile __bit                   TRISC7              __at(0x477);	// @ (0x8E * 8 + 7)
#define                                 TRISC7_bit          _BIT_ACCESS(TRISC,7)
// TRISD<TRISD0>
extern volatile __bit                   TRISD0              __at(0x478);	// @ (0x8F * 8 + 0)
#define                                 TRISD0_bit          _BIT_ACCESS(TRISD,0)
// TRISD<TRISD1>
extern volatile __bit                   TRISD1              __at(0x479);	// @ (0x8F * 8 + 1)
#define                                 TRISD1_bit          _BIT_ACCESS(TRISD,1)
// TRISD<TRISD2>
extern volatile __bit                   TRISD2              __at(0x47A);	// @ (0x8F * 8 + 2)
#define                                 TRISD2_bit          _BIT_ACCESS(TRISD,2)
// TRISD<TRISD3>
extern volatile __bit                   TRISD3              __at(0x47B);	// @ (0x8F * 8 + 3)
#define                                 TRISD3_bit          _BIT_ACCESS(TRISD,3)
// TRISD<TRISD4>
extern volatile __bit                   TRISD4              __at(0x47C);	// @ (0x8F * 8 + 4)
#define                                 TRISD4_bit          _BIT_ACCESS(TRISD,4)
// TRISD<TRISD5>
extern volatile __bit                   TRISD5              __at(0x47D);	// @ (0x8F * 8 + 5)
#define                                 TRISD5_bit          _BIT_ACCESS(TRISD,5)
// TRISD<TRISD6>
extern volatile __bit                   TRISD6              __at(0x47E);	// @ (0x8F * 8 + 6)
#define                                 TRISD6_bit          _BIT_ACCESS(TRISD,6)
// TRISD<TRISD7>
extern volatile __bit                   TRISD7              __at(0x47F);	// @ (0x8F * 8 + 7)
#define                                 TRISD7_bit          _BIT_ACCESS(TRISD,7)
// TRISE<TRISE0>
extern volatile __bit                   TRISE0              __at(0x480);	// @ (0x90 * 8 + 0)
#define                                 TRISE0_bit          _BIT_ACCESS(TRISE,0)
// TRISE<TRISE1>
extern volatile __bit                   TRISE1              __at(0x481);	// @ (0x90 * 8 + 1)
#define                                 TRISE1_bit          _BIT_ACCESS(TRISE,1)
// TRISE<TRISE2>
extern volatile __bit                   TRISE2              __at(0x482);	// @ (0x90 * 8 + 2)
#define                                 TRISE2_bit          _BIT_ACCESS(TRISE,2)
// TRISE<TRISE3>
extern volatile __bit                   TRISE3              __at(0x483);	// @ (0x90 * 8 + 3)
#define                                 TRISE3_bit          _BIT_ACCESS(TRISE,3)
// TX1STA<TRMT>
extern volatile __bit                   TRMT                __at(0xCF1);	// @ (0x19E * 8 + 1)
#define                                 TRMT_bit            _BIT_ACCESS(TX1STA,1)
// FVRCON<TSEN>
extern volatile __bit                   TSEN                __at(0x4F5);	// @ (0x9E * 8 + 5)
#define                                 TSEN_bit            _BIT_ACCESS(FVRCON,5)
// FVRCON<TSRNG>
extern volatile __bit                   TSRNG               __at(0x4F4);	// @ (0x9E * 8 + 4)
#define                                 TSRNG_bit           _BIT_ACCESS(FVRCON,4)
// OSCTUNE<TUN0>
extern volatile __bit                   TUN0                __at(0x4D0);	// @ (0x9A * 8 + 0)
#define                                 TUN0_bit            _BIT_ACCESS(OSCTUNE,0)
// OSCTUNE<TUN1>
extern volatile __bit                   TUN1                __at(0x4D1);	// @ (0x9A * 8 + 1)
#define                                 TUN1_bit            _BIT_ACCESS(OSCTUNE,1)
// OSCTUNE<TUN2>
extern volatile __bit                   TUN2                __at(0x4D2);	// @ (0x9A * 8 + 2)
#define                                 TUN2_bit            _BIT_ACCESS(OSCTUNE,2)
// OSCTUNE<TUN3>
extern volatile __bit                   TUN3                __at(0x4D3);	// @ (0x9A * 8 + 3)
#define                                 TUN3_bit            _BIT_ACCESS(OSCTUNE,3)
// OSCTUNE<TUN4>
extern volatile __bit                   TUN4                __at(0x4D4);	// @ (0x9A * 8 + 4)
#define                                 TUN4_bit            _BIT_ACCESS(OSCTUNE,4)
// OSCTUNE<TUN5>
extern volatile __bit                   TUN5                __at(0x4D5);	// @ (0x9A * 8 + 5)
#define                                 TUN5_bit            _BIT_ACCESS(OSCTUNE,5)
// TX1STA<TX9>
extern volatile __bit                   TX9                 __at(0xCF6);	// @ (0x19E * 8 + 6)
#define                                 TX9_bit             _BIT_ACCESS(TX1STA,6)
// TX1STA<TX9D>
extern volatile __bit                   TX9D                __at(0xCF0);	// @ (0x19E * 8 + 0)
#define                                 TX9D_bit            _BIT_ACCESS(TX1STA,0)
// TX1STA<TXEN>
extern volatile __bit                   TXEN                __at(0xCF5);	// @ (0x19E * 8 + 5)
#define                                 TXEN_bit            _BIT_ACCESS(TX1STA,5)
// PIE1<TXIE>
extern volatile __bit                   TXIE                __at(0x48C);	// @ (0x91 * 8 + 4)
#define                                 TXIE_bit            _BIT_ACCESS(PIE1,4)
// PIR1<TXIF>
extern volatile __bit                   TXIF                __at(0x8C);	// @ (0x11 * 8 + 4)
#define                                 TXIF_bit            _BIT_ACCESS(PIR1,4)
// SSP1STAT<UA>
extern volatile __bit                   UA                  __at(0x10A1);	// @ (0x214 * 8 + 1)
#define                                 UA_bit              _BIT_ACCESS(SSP1STAT,1)
// SSP1CON1<WCOL>
extern volatile __bit                   WCOL                __at(0x10AF);	// @ (0x215 * 8 + 7)
#define                                 WCOL_bit            _BIT_ACCESS(SSP1CON1,7)
// WDTCON<WDTPS0>
extern volatile __bit                   WDTPS0              __at(0x4C9);	// @ (0x99 * 8 + 1)
#define                                 WDTPS0_bit          _BIT_ACCESS(WDTCON,1)
// WDTCON<WDTPS1>
extern volatile __bit                   WDTPS1              __at(0x4CA);	// @ (0x99 * 8 + 2)
#define                                 WDTPS1_bit          _BIT_ACCESS(WDTCON,2)
// WDTCON<WDTPS2>
extern volatile __bit                   WDTPS2              __at(0x4CB);	// @ (0x99 * 8 + 3)
#define                                 WDTPS2_bit          _BIT_ACCESS(WDTCON,3)
// WDTCON<WDTPS3>
extern volatile __bit                   WDTPS3              __at(0x4CC);	// @ (0x99 * 8 + 4)
#define                                 WDTPS3_bit          _BIT_ACCESS(WDTCON,4)
// WDTCON<WDTPS4>
extern volatile __bit                   WDTPS4              __at(0x4CD);	// @ (0x99 * 8 + 5)
#define                                 WDTPS4_bit          _BIT_ACCESS(WDTCON,5)
// WPUA<WPUA0>
extern volatile __bit                   WPUA0               __at(0x1060);	// @ (0x20C * 8 + 0)
#define                                 WPUA0_bit           _BIT_ACCESS(WPUA,0)
// WPUA<WPUA1>
extern volatile __bit                   WPUA1               __at(0x1061);	// @ (0x20C * 8 + 1)
#define                                 WPUA1_bit           _BIT_ACCESS(WPUA,1)
// WPUA<WPUA2>
extern volatile __bit                   WPUA2               __at(0x1062);	// @ (0x20C * 8 + 2)
#define                                 WPUA2_bit           _BIT_ACCESS(WPUA,2)
// WPUA<WPUA3>
extern volatile __bit                   WPUA3               __at(0x1063);	// @ (0x20C * 8 + 3)
#define                                 WPUA3_bit           _BIT_ACCESS(WPUA,3)
// WPUA<WPUA4>
extern volatile __bit                   WPUA4               __at(0x1064);	// @ (0x20C * 8 + 4)
#define                                 WPUA4_bit           _BIT_ACCESS(WPUA,4)
// WPUA<WPUA5>
extern volatile __bit                   WPUA5               __at(0x1065);	// @ (0x20C * 8 + 5)
#define                                 WPUA5_bit           _BIT_ACCESS(WPUA,5)
// WPUA<WPUA6>
extern volatile __bit                   WPUA6               __at(0x1066);	// @ (0x20C * 8 + 6)
#define                                 WPUA6_bit           _BIT_ACCESS(WPUA,6)
// WPUA<WPUA7>
extern volatile __bit                   WPUA7               __at(0x1067);	// @ (0x20C * 8 + 7)
#define                                 WPUA7_bit           _BIT_ACCESS(WPUA,7)
// WPUB<WPUB0>
extern volatile __bit                   WPUB0               __at(0x1068);	// @ (0x20D * 8 + 0)
#define                                 WPUB0_bit           _BIT_ACCESS(WPUB,0)
// WPUB<WPUB1>
extern volatile __bit                   WPUB1               __at(0x1069);	// @ (0x20D * 8 + 1)
#define                                 WPUB1_bit           _BIT_ACCESS(WPUB,1)
// WPUB<WPUB2>
extern volatile __bit                   WPUB2               __at(0x106A);	// @ (0x20D * 8 + 2)
#define                                 WPUB2_bit           _BIT_ACCESS(WPUB,2)
// WPUB<WPUB3>
extern volatile __bit                   WPUB3               __at(0x106B);	// @ (0x20D * 8 + 3)
#define                                 WPUB3_bit           _BIT_ACCESS(WPUB,3)
// WPUB<WPUB4>
extern volatile __bit                   WPUB4               __at(0x106C);	// @ (0x20D * 8 + 4)
#define                                 WPUB4_bit           _BIT_ACCESS(WPUB,4)
// WPUB<WPUB5>
extern volatile __bit                   WPUB5               __at(0x106D);	// @ (0x20D * 8 + 5)
#define                                 WPUB5_bit           _BIT_ACCESS(WPUB,5)
// WPUB<WPUB6>
extern volatile __bit                   WPUB6               __at(0x106E);	// @ (0x20D * 8 + 6)
#define                                 WPUB6_bit           _BIT_ACCESS(WPUB,6)
// WPUB<WPUB7>
extern volatile __bit                   WPUB7               __at(0x106F);	// @ (0x20D * 8 + 7)
#define                                 WPUB7_bit           _BIT_ACCESS(WPUB,7)
// WPUC<WPUC0>
extern volatile __bit                   WPUC0               __at(0x1070);	// @ (0x20E * 8 + 0)
#define                                 WPUC0_bit           _BIT_ACCESS(WPUC,0)
// WPUC<WPUC1>
extern volatile __bit                   WPUC1               __at(0x1071);	// @ (0x20E * 8 + 1)
#define                                 WPUC1_bit           _BIT_ACCESS(WPUC,1)
// WPUC<WPUC2>
extern volatile __bit                   WPUC2               __at(0x1072);	// @ (0x20E * 8 + 2)
#define                                 WPUC2_bit           _BIT_ACCESS(WPUC,2)
// WPUC<WPUC3>
extern volatile __bit                   WPUC3               __at(0x1073);	// @ (0x20E * 8 + 3)
#define                                 WPUC3_bit           _BIT_ACCESS(WPUC,3)
// WPUC<WPUC4>
extern volatile __bit                   WPUC4               __at(0x1074);	// @ (0x20E * 8 + 4)
#define                                 WPUC4_bit           _BIT_ACCESS(WPUC,4)
// WPUC<WPUC5>
extern volatile __bit                   WPUC5               __at(0x1075);	// @ (0x20E * 8 + 5)
#define                                 WPUC5_bit           _BIT_ACCESS(WPUC,5)
// WPUC<WPUC6>
extern volatile __bit                   WPUC6               __at(0x1076);	// @ (0x20E * 8 + 6)
#define                                 WPUC6_bit           _BIT_ACCESS(WPUC,6)
// WPUC<WPUC7>
extern volatile __bit                   WPUC7               __at(0x1077);	// @ (0x20E * 8 + 7)
#define                                 WPUC7_bit           _BIT_ACCESS(WPUC,7)
// WPUD<WPUD0>
extern volatile __bit                   WPUD0               __at(0x1078);	// @ (0x20F * 8 + 0)
#define                                 WPUD0_bit           _BIT_ACCESS(WPUD,0)
// WPUD<WPUD1>
extern volatile __bit                   WPUD1               __at(0x1079);	// @ (0x20F * 8 + 1)
#define                                 WPUD1_bit           _BIT_ACCESS(WPUD,1)
// WPUD<WPUD2>
extern volatile __bit                   WPUD2               __at(0x107A);	// @ (0x20F * 8 + 2)
#define                                 WPUD2_bit           _BIT_ACCESS(WPUD,2)
// WPUD<WPUD3>
extern volatile __bit                   WPUD3               __at(0x107B);	// @ (0x20F * 8 + 3)
#define                                 WPUD3_bit           _BIT_ACCESS(WPUD,3)
// WPUD<WPUD4>
extern volatile __bit                   WPUD4               __at(0x107C);	// @ (0x20F * 8 + 4)
#define                                 WPUD4_bit           _BIT_ACCESS(WPUD,4)
// WPUD<WPUD5>
extern volatile __bit                   WPUD5               __at(0x107D);	// @ (0x20F * 8 + 5)
#define                                 WPUD5_bit           _BIT_ACCESS(WPUD,5)
// WPUD<WPUD6>
extern volatile __bit                   WPUD6               __at(0x107E);	// @ (0x20F * 8 + 6)
#define                                 WPUD6_bit           _BIT_ACCESS(WPUD,6)
// WPUD<WPUD7>
extern volatile __bit                   WPUD7               __at(0x107F);	// @ (0x20F * 8 + 7)
#define                                 WPUD7_bit           _BIT_ACCESS(WPUD,7)
// WPUE<WPUE0>
extern volatile __bit                   WPUE0               __at(0x1080);	// @ (0x210 * 8 + 0)
#define                                 WPUE0_bit           _BIT_ACCESS(WPUE,0)
// WPUE<WPUE1>
extern volatile __bit                   WPUE1               __at(0x1081);	// @ (0x210 * 8 + 1)
#define                                 WPUE1_bit           _BIT_ACCESS(WPUE,1)
// WPUE<WPUE2>
extern volatile __bit                   WPUE2               __at(0x1082);	// @ (0x210 * 8 + 2)
#define                                 WPUE2_bit           _BIT_ACCESS(WPUE,2)
// WPUE<WPUE3>
extern volatile __bit                   WPUE3               __at(0x1083);	// @ (0x210 * 8 + 3)
#define                                 WPUE3_bit           _BIT_ACCESS(WPUE,3)
// PMCON1<WR>
extern volatile __bit                   WR                  __at(0xCA9);	// @ (0x195 * 8 + 1)
#define                                 WR_bit              _BIT_ACCESS(PMCON1,1)
// PMCON1<WREN>
extern volatile __bit                   WREN                __at(0xCAA);	// @ (0x195 * 8 + 2)
#define                                 WREN_bit            _BIT_ACCESS(PMCON1,2)
// PMCON1<WRERR>
extern volatile __bit                   WRERR               __at(0xCAB);	// @ (0x195 * 8 + 3)
#define                                 WRERR_bit           _BIT_ACCESS(PMCON1,3)
// BAUD1CON<WUE>
extern volatile __bit                   WUE                 __at(0xCF9);	// @ (0x19F * 8 + 1)
#define                                 WUE_bit             _BIT_ACCESS(BAUD1CON,1)
// ZCD1CON<ZCD1EN>
extern volatile __bit                   ZCD1EN              __at(0x4FF);	// @ (0x9F * 8 + 7)
#define                                 ZCD1EN_bit          _BIT_ACCESS(ZCD1CON,7)
// ZCD1CON<ZCD1INTN>
extern volatile __bit                   ZCD1INTN            __at(0x4F8);	// @ (0x9F * 8 + 0)
#define                                 ZCD1INTN_bit        _BIT_ACCESS(ZCD1CON,0)
// ZCD1CON<ZCD1INTP>
extern volatile __bit                   ZCD1INTP            __at(0x4F9);	// @ (0x9F * 8 + 1)
#define                                 ZCD1INTP_bit        _BIT_ACCESS(ZCD1CON,1)
// ZCD1CON<ZCD1OUT>
extern volatile __bit                   ZCD1OUT             __at(0x4FD);	// @ (0x9F * 8 + 5)
#define                                 ZCD1OUT_bit         _BIT_ACCESS(ZCD1CON,5)
// ZCD1CON<ZCD1POL>
extern volatile __bit                   ZCD1POL             __at(0x4FC);	// @ (0x9F * 8 + 4)
#define                                 ZCD1POL_bit         _BIT_ACCESS(ZCD1CON,4)
// PIE3<ZCDIE>
extern volatile __bit                   ZCDIE               __at(0x49C);	// @ (0x93 * 8 + 4)
#define                                 ZCDIE_bit           _BIT_ACCESS(PIE3,4)
// PIR3<ZCDIF>
extern volatile __bit                   ZCDIF               __at(0x9C);	// @ (0x13 * 8 + 4)
#define                                 ZCDIF_bit           _BIT_ACCESS(PIR3,4)
// STATUS<ZERO>
extern volatile __bit                   ZERO                __at(0x1A);	// @ (0x3 * 8 + 2)
#define                                 ZERO_bit            _BIT_ACCESS(STATUS,2)
// STATUS_SHAD<Z_SHAD>
extern volatile __bit                   Z_SHAD              __at(0x7F22);	// @ (0xFE4 * 8 + 2)
#define                                 Z_SHAD_bit          _BIT_ACCESS(STATUS_SHAD,2)
// PCON<nBOR>
extern volatile __bit                   nBOR                __at(0x4C0);	// @ (0x98 * 8 + 0)
#define                                 nBOR_bit            _BIT_ACCESS(PCON,0)
// STATUS<nPD>
extern volatile __bit                   nPD                 __at(0x1B);	// @ (0x3 * 8 + 3)
#define                                 nPD_bit             _BIT_ACCESS(STATUS,3)
// PCON<nPOR>
extern volatile __bit                   nPOR                __at(0x4C1);	// @ (0x98 * 8 + 1)
#define                                 nPOR_bit            _BIT_ACCESS(PCON,1)
// PCON<nRI>
extern volatile __bit                   nRI                 __at(0x4C2);	// @ (0x98 * 8 + 2)
#define                                 nRI_bit             _BIT_ACCESS(PCON,2)
// PCON<nRMCLR>
extern volatile __bit                   nRMCLR              __at(0x4C3);	// @ (0x98 * 8 + 3)
#define                                 nRMCLR_bit          _BIT_ACCESS(PCON,3)
// PCON<nRWDT>
extern volatile __bit                   nRWDT               __at(0x4C4);	// @ (0x98 * 8 + 4)
#define                                 nRWDT_bit           _BIT_ACCESS(PCON,4)
// T1CON<nT1SYNC>
extern volatile __bit                   nT1SYNC             __at(0xD2);	// @ (0x1A * 8 + 2)
#define                                 nT1SYNC_bit         _BIT_ACCESS(T1CON,2)
// T3CON<nT3SYNC>
extern volatile __bit                   nT3SYNC             __at(0xF2);	// @ (0x1E * 8 + 2)
#define                                 nT3SYNC_bit         _BIT_ACCESS(T3CON,2)
// T5CON<nT5SYNC>
extern volatile __bit                   nT5SYNC             __at(0x208A);	// @ (0x411 * 8 + 2)
#define                                 nT5SYNC_bit         _BIT_ACCESS(T5CON,2)
// STATUS<nTO>
extern volatile __bit                   nTO                 __at(0x1C);	// @ (0x3 * 8 + 4)
#define                                 nTO_bit             _BIT_ACCESS(STATUS,4)
// OPTION_REG<nWPUEN>
extern volatile __bit                   nWPUEN              __at(0x4BF);	// @ (0x97 * 8 + 7)
#define                                 nWPUEN_bit          _BIT_ACCESS(OPTION_REG,7)

#endif // _PIC16LF1779_H_
