// Generated 09/02/2023 GMT

/*
 * Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
 * All rights reserved.
 * 
 * This software is developed by Microchip Technology Inc. and its subsidiaries ("Microchip").
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *     1. Redistributions of source code must retain the above copyright notice, this list of
 *        conditions and the following disclaimer.
 * 
 *     2. Redistributions in binary form must reproduce the above copyright notice, this list
 *        of conditions and the following disclaimer in the documentation and/or other
 *        materials provided with the distribution. Publication is not required when
 *        this file is used in an embedded application.
 * 
 *     3. Microchip's name may not be used to endorse or promote products derived from this
 *        software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _PIC18F248_H_
#define _PIC18F248_H_

/*
 * C Header file for the Microchip PIC Microcontroller
 * PIC18F248
 */
#ifndef _XC_H_
#warning Header file pic18f248.h included directly. Use #include <xc.h> instead.
#endif

#include <__at.h>

/*
 * Register Definitions
 */

// Register: RXF0SIDH
#define RXF0SIDH RXF0SIDH
extern volatile unsigned char           RXF0SIDH            __at(0xF00);
#ifndef _LIB_BUILD
asm("RXF0SIDH equ 0F00h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF0SID3               :1;
        unsigned RXF0SID4               :1;
        unsigned RXF0SID5               :1;
        unsigned RXF0SID6               :1;
        unsigned RXF0SID7               :1;
        unsigned RXF0SID8               :1;
        unsigned RXF0SID9               :1;
        unsigned RXF0SID10              :1;
    };
} RXF0SIDHbits_t;
extern volatile RXF0SIDHbits_t RXF0SIDHbits __at(0xF00);
// bitfield macros
#define _RXF0SIDH_SID3_POSN                                 0x0
#define _RXF0SIDH_SID3_POSITION                             0x0
#define _RXF0SIDH_SID3_SIZE                                 0x1
#define _RXF0SIDH_SID3_LENGTH                               0x1
#define _RXF0SIDH_SID3_MASK                                 0x1
#define _RXF0SIDH_SID4_POSN                                 0x1
#define _RXF0SIDH_SID4_POSITION                             0x1
#define _RXF0SIDH_SID4_SIZE                                 0x1
#define _RXF0SIDH_SID4_LENGTH                               0x1
#define _RXF0SIDH_SID4_MASK                                 0x2
#define _RXF0SIDH_SID5_POSN                                 0x2
#define _RXF0SIDH_SID5_POSITION                             0x2
#define _RXF0SIDH_SID5_SIZE                                 0x1
#define _RXF0SIDH_SID5_LENGTH                               0x1
#define _RXF0SIDH_SID5_MASK                                 0x4
#define _RXF0SIDH_SID6_POSN                                 0x3
#define _RXF0SIDH_SID6_POSITION                             0x3
#define _RXF0SIDH_SID6_SIZE                                 0x1
#define _RXF0SIDH_SID6_LENGTH                               0x1
#define _RXF0SIDH_SID6_MASK                                 0x8
#define _RXF0SIDH_SID7_POSN                                 0x4
#define _RXF0SIDH_SID7_POSITION                             0x4
#define _RXF0SIDH_SID7_SIZE                                 0x1
#define _RXF0SIDH_SID7_LENGTH                               0x1
#define _RXF0SIDH_SID7_MASK                                 0x10
#define _RXF0SIDH_SID8_POSN                                 0x5
#define _RXF0SIDH_SID8_POSITION                             0x5
#define _RXF0SIDH_SID8_SIZE                                 0x1
#define _RXF0SIDH_SID8_LENGTH                               0x1
#define _RXF0SIDH_SID8_MASK                                 0x20
#define _RXF0SIDH_SID9_POSN                                 0x6
#define _RXF0SIDH_SID9_POSITION                             0x6
#define _RXF0SIDH_SID9_SIZE                                 0x1
#define _RXF0SIDH_SID9_LENGTH                               0x1
#define _RXF0SIDH_SID9_MASK                                 0x40
#define _RXF0SIDH_SID10_POSN                                0x7
#define _RXF0SIDH_SID10_POSITION                            0x7
#define _RXF0SIDH_SID10_SIZE                                0x1
#define _RXF0SIDH_SID10_LENGTH                              0x1
#define _RXF0SIDH_SID10_MASK                                0x80
#define _RXF0SIDH_RXF0SID3_POSN                             0x0
#define _RXF0SIDH_RXF0SID3_POSITION                         0x0
#define _RXF0SIDH_RXF0SID3_SIZE                             0x1
#define _RXF0SIDH_RXF0SID3_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID3_MASK                             0x1
#define _RXF0SIDH_RXF0SID4_POSN                             0x1
#define _RXF0SIDH_RXF0SID4_POSITION                         0x1
#define _RXF0SIDH_RXF0SID4_SIZE                             0x1
#define _RXF0SIDH_RXF0SID4_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID4_MASK                             0x2
#define _RXF0SIDH_RXF0SID5_POSN                             0x2
#define _RXF0SIDH_RXF0SID5_POSITION                         0x2
#define _RXF0SIDH_RXF0SID5_SIZE                             0x1
#define _RXF0SIDH_RXF0SID5_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID5_MASK                             0x4
#define _RXF0SIDH_RXF0SID6_POSN                             0x3
#define _RXF0SIDH_RXF0SID6_POSITION                         0x3
#define _RXF0SIDH_RXF0SID6_SIZE                             0x1
#define _RXF0SIDH_RXF0SID6_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID6_MASK                             0x8
#define _RXF0SIDH_RXF0SID7_POSN                             0x4
#define _RXF0SIDH_RXF0SID7_POSITION                         0x4
#define _RXF0SIDH_RXF0SID7_SIZE                             0x1
#define _RXF0SIDH_RXF0SID7_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID7_MASK                             0x10
#define _RXF0SIDH_RXF0SID8_POSN                             0x5
#define _RXF0SIDH_RXF0SID8_POSITION                         0x5
#define _RXF0SIDH_RXF0SID8_SIZE                             0x1
#define _RXF0SIDH_RXF0SID8_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID8_MASK                             0x20
#define _RXF0SIDH_RXF0SID9_POSN                             0x6
#define _RXF0SIDH_RXF0SID9_POSITION                         0x6
#define _RXF0SIDH_RXF0SID9_SIZE                             0x1
#define _RXF0SIDH_RXF0SID9_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID9_MASK                             0x40
#define _RXF0SIDH_RXF0SID10_POSN                            0x7
#define _RXF0SIDH_RXF0SID10_POSITION                        0x7
#define _RXF0SIDH_RXF0SID10_SIZE                            0x1
#define _RXF0SIDH_RXF0SID10_LENGTH                          0x1
#define _RXF0SIDH_RXF0SID10_MASK                            0x80

// Register: RXF0SIDL
#define RXF0SIDL RXF0SIDL
extern volatile unsigned char           RXF0SIDL            __at(0xF01);
#ifndef _LIB_BUILD
asm("RXF0SIDL equ 0F01h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXF0EID16              :1;
        unsigned RXF0EID17              :1;
        unsigned                        :1;
        unsigned RXF0EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF0SID0               :1;
        unsigned RXF0SID1               :1;
        unsigned RXF0SID2               :1;
    };
} RXF0SIDLbits_t;
extern volatile RXF0SIDLbits_t RXF0SIDLbits __at(0xF01);
// bitfield macros
#define _RXF0SIDL_EID16_POSN                                0x0
#define _RXF0SIDL_EID16_POSITION                            0x0
#define _RXF0SIDL_EID16_SIZE                                0x1
#define _RXF0SIDL_EID16_LENGTH                              0x1
#define _RXF0SIDL_EID16_MASK                                0x1
#define _RXF0SIDL_EID17_POSN                                0x1
#define _RXF0SIDL_EID17_POSITION                            0x1
#define _RXF0SIDL_EID17_SIZE                                0x1
#define _RXF0SIDL_EID17_LENGTH                              0x1
#define _RXF0SIDL_EID17_MASK                                0x2
#define _RXF0SIDL_EXIDEN_POSN                               0x3
#define _RXF0SIDL_EXIDEN_POSITION                           0x3
#define _RXF0SIDL_EXIDEN_SIZE                               0x1
#define _RXF0SIDL_EXIDEN_LENGTH                             0x1
#define _RXF0SIDL_EXIDEN_MASK                               0x8
#define _RXF0SIDL_SID0_POSN                                 0x5
#define _RXF0SIDL_SID0_POSITION                             0x5
#define _RXF0SIDL_SID0_SIZE                                 0x1
#define _RXF0SIDL_SID0_LENGTH                               0x1
#define _RXF0SIDL_SID0_MASK                                 0x20
#define _RXF0SIDL_SID1_POSN                                 0x6
#define _RXF0SIDL_SID1_POSITION                             0x6
#define _RXF0SIDL_SID1_SIZE                                 0x1
#define _RXF0SIDL_SID1_LENGTH                               0x1
#define _RXF0SIDL_SID1_MASK                                 0x40
#define _RXF0SIDL_SID2_POSN                                 0x7
#define _RXF0SIDL_SID2_POSITION                             0x7
#define _RXF0SIDL_SID2_SIZE                                 0x1
#define _RXF0SIDL_SID2_LENGTH                               0x1
#define _RXF0SIDL_SID2_MASK                                 0x80
#define _RXF0SIDL_RXF0EID16_POSN                            0x0
#define _RXF0SIDL_RXF0EID16_POSITION                        0x0
#define _RXF0SIDL_RXF0EID16_SIZE                            0x1
#define _RXF0SIDL_RXF0EID16_LENGTH                          0x1
#define _RXF0SIDL_RXF0EID16_MASK                            0x1
#define _RXF0SIDL_RXF0EID17_POSN                            0x1
#define _RXF0SIDL_RXF0EID17_POSITION                        0x1
#define _RXF0SIDL_RXF0EID17_SIZE                            0x1
#define _RXF0SIDL_RXF0EID17_LENGTH                          0x1
#define _RXF0SIDL_RXF0EID17_MASK                            0x2
#define _RXF0SIDL_RXF0EXIDEN_POSN                           0x3
#define _RXF0SIDL_RXF0EXIDEN_POSITION                       0x3
#define _RXF0SIDL_RXF0EXIDEN_SIZE                           0x1
#define _RXF0SIDL_RXF0EXIDEN_LENGTH                         0x1
#define _RXF0SIDL_RXF0EXIDEN_MASK                           0x8
#define _RXF0SIDL_RXF0SID0_POSN                             0x5
#define _RXF0SIDL_RXF0SID0_POSITION                         0x5
#define _RXF0SIDL_RXF0SID0_SIZE                             0x1
#define _RXF0SIDL_RXF0SID0_LENGTH                           0x1
#define _RXF0SIDL_RXF0SID0_MASK                             0x20
#define _RXF0SIDL_RXF0SID1_POSN                             0x6
#define _RXF0SIDL_RXF0SID1_POSITION                         0x6
#define _RXF0SIDL_RXF0SID1_SIZE                             0x1
#define _RXF0SIDL_RXF0SID1_LENGTH                           0x1
#define _RXF0SIDL_RXF0SID1_MASK                             0x40
#define _RXF0SIDL_RXF0SID2_POSN                             0x7
#define _RXF0SIDL_RXF0SID2_POSITION                         0x7
#define _RXF0SIDL_RXF0SID2_SIZE                             0x1
#define _RXF0SIDL_RXF0SID2_LENGTH                           0x1
#define _RXF0SIDL_RXF0SID2_MASK                             0x80

// Register: RXF0EIDH
#define RXF0EIDH RXF0EIDH
extern volatile unsigned char           RXF0EIDH            __at(0xF02);
#ifndef _LIB_BUILD
asm("RXF0EIDH equ 0F02h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF0EID8               :1;
        unsigned RXF0EID9               :1;
        unsigned RXF0EID10              :1;
        unsigned RXF0EID11              :1;
        unsigned RXF0EID12              :1;
        unsigned RXF0EID13              :1;
        unsigned RXF0EID14              :1;
        unsigned RXF0EID15              :1;
    };
} RXF0EIDHbits_t;
extern volatile RXF0EIDHbits_t RXF0EIDHbits __at(0xF02);
// bitfield macros
#define _RXF0EIDH_EID8_POSN                                 0x0
#define _RXF0EIDH_EID8_POSITION                             0x0
#define _RXF0EIDH_EID8_SIZE                                 0x1
#define _RXF0EIDH_EID8_LENGTH                               0x1
#define _RXF0EIDH_EID8_MASK                                 0x1
#define _RXF0EIDH_EID9_POSN                                 0x1
#define _RXF0EIDH_EID9_POSITION                             0x1
#define _RXF0EIDH_EID9_SIZE                                 0x1
#define _RXF0EIDH_EID9_LENGTH                               0x1
#define _RXF0EIDH_EID9_MASK                                 0x2
#define _RXF0EIDH_EID10_POSN                                0x2
#define _RXF0EIDH_EID10_POSITION                            0x2
#define _RXF0EIDH_EID10_SIZE                                0x1
#define _RXF0EIDH_EID10_LENGTH                              0x1
#define _RXF0EIDH_EID10_MASK                                0x4
#define _RXF0EIDH_EID11_POSN                                0x3
#define _RXF0EIDH_EID11_POSITION                            0x3
#define _RXF0EIDH_EID11_SIZE                                0x1
#define _RXF0EIDH_EID11_LENGTH                              0x1
#define _RXF0EIDH_EID11_MASK                                0x8
#define _RXF0EIDH_EID12_POSN                                0x4
#define _RXF0EIDH_EID12_POSITION                            0x4
#define _RXF0EIDH_EID12_SIZE                                0x1
#define _RXF0EIDH_EID12_LENGTH                              0x1
#define _RXF0EIDH_EID12_MASK                                0x10
#define _RXF0EIDH_EID13_POSN                                0x5
#define _RXF0EIDH_EID13_POSITION                            0x5
#define _RXF0EIDH_EID13_SIZE                                0x1
#define _RXF0EIDH_EID13_LENGTH                              0x1
#define _RXF0EIDH_EID13_MASK                                0x20
#define _RXF0EIDH_EID14_POSN                                0x6
#define _RXF0EIDH_EID14_POSITION                            0x6
#define _RXF0EIDH_EID14_SIZE                                0x1
#define _RXF0EIDH_EID14_LENGTH                              0x1
#define _RXF0EIDH_EID14_MASK                                0x40
#define _RXF0EIDH_EID15_POSN                                0x7
#define _RXF0EIDH_EID15_POSITION                            0x7
#define _RXF0EIDH_EID15_SIZE                                0x1
#define _RXF0EIDH_EID15_LENGTH                              0x1
#define _RXF0EIDH_EID15_MASK                                0x80
#define _RXF0EIDH_RXF0EID8_POSN                             0x0
#define _RXF0EIDH_RXF0EID8_POSITION                         0x0
#define _RXF0EIDH_RXF0EID8_SIZE                             0x1
#define _RXF0EIDH_RXF0EID8_LENGTH                           0x1
#define _RXF0EIDH_RXF0EID8_MASK                             0x1
#define _RXF0EIDH_RXF0EID9_POSN                             0x1
#define _RXF0EIDH_RXF0EID9_POSITION                         0x1
#define _RXF0EIDH_RXF0EID9_SIZE                             0x1
#define _RXF0EIDH_RXF0EID9_LENGTH                           0x1
#define _RXF0EIDH_RXF0EID9_MASK                             0x2
#define _RXF0EIDH_RXF0EID10_POSN                            0x2
#define _RXF0EIDH_RXF0EID10_POSITION                        0x2
#define _RXF0EIDH_RXF0EID10_SIZE                            0x1
#define _RXF0EIDH_RXF0EID10_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID10_MASK                            0x4
#define _RXF0EIDH_RXF0EID11_POSN                            0x3
#define _RXF0EIDH_RXF0EID11_POSITION                        0x3
#define _RXF0EIDH_RXF0EID11_SIZE                            0x1
#define _RXF0EIDH_RXF0EID11_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID11_MASK                            0x8
#define _RXF0EIDH_RXF0EID12_POSN                            0x4
#define _RXF0EIDH_RXF0EID12_POSITION                        0x4
#define _RXF0EIDH_RXF0EID12_SIZE                            0x1
#define _RXF0EIDH_RXF0EID12_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID12_MASK                            0x10
#define _RXF0EIDH_RXF0EID13_POSN                            0x5
#define _RXF0EIDH_RXF0EID13_POSITION                        0x5
#define _RXF0EIDH_RXF0EID13_SIZE                            0x1
#define _RXF0EIDH_RXF0EID13_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID13_MASK                            0x20
#define _RXF0EIDH_RXF0EID14_POSN                            0x6
#define _RXF0EIDH_RXF0EID14_POSITION                        0x6
#define _RXF0EIDH_RXF0EID14_SIZE                            0x1
#define _RXF0EIDH_RXF0EID14_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID14_MASK                            0x40
#define _RXF0EIDH_RXF0EID15_POSN                            0x7
#define _RXF0EIDH_RXF0EID15_POSITION                        0x7
#define _RXF0EIDH_RXF0EID15_SIZE                            0x1
#define _RXF0EIDH_RXF0EID15_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID15_MASK                            0x80

// Register: RXF0EIDL
#define RXF0EIDL RXF0EIDL
extern volatile unsigned char           RXF0EIDL            __at(0xF03);
#ifndef _LIB_BUILD
asm("RXF0EIDL equ 0F03h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF0EID0               :1;
        unsigned RXF0EID1               :1;
        unsigned RXF0EID2               :1;
        unsigned RXF0EID3               :1;
        unsigned RXF0EID4               :1;
        unsigned RXF0EID5               :1;
        unsigned RXF0EID6               :1;
        unsigned RXF0EID7               :1;
    };
} RXF0EIDLbits_t;
extern volatile RXF0EIDLbits_t RXF0EIDLbits __at(0xF03);
// bitfield macros
#define _RXF0EIDL_EID0_POSN                                 0x0
#define _RXF0EIDL_EID0_POSITION                             0x0
#define _RXF0EIDL_EID0_SIZE                                 0x1
#define _RXF0EIDL_EID0_LENGTH                               0x1
#define _RXF0EIDL_EID0_MASK                                 0x1
#define _RXF0EIDL_EID1_POSN                                 0x1
#define _RXF0EIDL_EID1_POSITION                             0x1
#define _RXF0EIDL_EID1_SIZE                                 0x1
#define _RXF0EIDL_EID1_LENGTH                               0x1
#define _RXF0EIDL_EID1_MASK                                 0x2
#define _RXF0EIDL_EID2_POSN                                 0x2
#define _RXF0EIDL_EID2_POSITION                             0x2
#define _RXF0EIDL_EID2_SIZE                                 0x1
#define _RXF0EIDL_EID2_LENGTH                               0x1
#define _RXF0EIDL_EID2_MASK                                 0x4
#define _RXF0EIDL_EID3_POSN                                 0x3
#define _RXF0EIDL_EID3_POSITION                             0x3
#define _RXF0EIDL_EID3_SIZE                                 0x1
#define _RXF0EIDL_EID3_LENGTH                               0x1
#define _RXF0EIDL_EID3_MASK                                 0x8
#define _RXF0EIDL_EID4_POSN                                 0x4
#define _RXF0EIDL_EID4_POSITION                             0x4
#define _RXF0EIDL_EID4_SIZE                                 0x1
#define _RXF0EIDL_EID4_LENGTH                               0x1
#define _RXF0EIDL_EID4_MASK                                 0x10
#define _RXF0EIDL_EID5_POSN                                 0x5
#define _RXF0EIDL_EID5_POSITION                             0x5
#define _RXF0EIDL_EID5_SIZE                                 0x1
#define _RXF0EIDL_EID5_LENGTH                               0x1
#define _RXF0EIDL_EID5_MASK                                 0x20
#define _RXF0EIDL_EID6_POSN                                 0x6
#define _RXF0EIDL_EID6_POSITION                             0x6
#define _RXF0EIDL_EID6_SIZE                                 0x1
#define _RXF0EIDL_EID6_LENGTH                               0x1
#define _RXF0EIDL_EID6_MASK                                 0x40
#define _RXF0EIDL_EID7_POSN                                 0x7
#define _RXF0EIDL_EID7_POSITION                             0x7
#define _RXF0EIDL_EID7_SIZE                                 0x1
#define _RXF0EIDL_EID7_LENGTH                               0x1
#define _RXF0EIDL_EID7_MASK                                 0x80
#define _RXF0EIDL_RXF0EID0_POSN                             0x0
#define _RXF0EIDL_RXF0EID0_POSITION                         0x0
#define _RXF0EIDL_RXF0EID0_SIZE                             0x1
#define _RXF0EIDL_RXF0EID0_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID0_MASK                             0x1
#define _RXF0EIDL_RXF0EID1_POSN                             0x1
#define _RXF0EIDL_RXF0EID1_POSITION                         0x1
#define _RXF0EIDL_RXF0EID1_SIZE                             0x1
#define _RXF0EIDL_RXF0EID1_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID1_MASK                             0x2
#define _RXF0EIDL_RXF0EID2_POSN                             0x2
#define _RXF0EIDL_RXF0EID2_POSITION                         0x2
#define _RXF0EIDL_RXF0EID2_SIZE                             0x1
#define _RXF0EIDL_RXF0EID2_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID2_MASK                             0x4
#define _RXF0EIDL_RXF0EID3_POSN                             0x3
#define _RXF0EIDL_RXF0EID3_POSITION                         0x3
#define _RXF0EIDL_RXF0EID3_SIZE                             0x1
#define _RXF0EIDL_RXF0EID3_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID3_MASK                             0x8
#define _RXF0EIDL_RXF0EID4_POSN                             0x4
#define _RXF0EIDL_RXF0EID4_POSITION                         0x4
#define _RXF0EIDL_RXF0EID4_SIZE                             0x1
#define _RXF0EIDL_RXF0EID4_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID4_MASK                             0x10
#define _RXF0EIDL_RXF0EID5_POSN                             0x5
#define _RXF0EIDL_RXF0EID5_POSITION                         0x5
#define _RXF0EIDL_RXF0EID5_SIZE                             0x1
#define _RXF0EIDL_RXF0EID5_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID5_MASK                             0x20
#define _RXF0EIDL_RXF0EID6_POSN                             0x6
#define _RXF0EIDL_RXF0EID6_POSITION                         0x6
#define _RXF0EIDL_RXF0EID6_SIZE                             0x1
#define _RXF0EIDL_RXF0EID6_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID6_MASK                             0x40
#define _RXF0EIDL_RXF0EID7_POSN                             0x7
#define _RXF0EIDL_RXF0EID7_POSITION                         0x7
#define _RXF0EIDL_RXF0EID7_SIZE                             0x1
#define _RXF0EIDL_RXF0EID7_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID7_MASK                             0x80

// Register: RXF1SIDH
#define RXF1SIDH RXF1SIDH
extern volatile unsigned char           RXF1SIDH            __at(0xF04);
#ifndef _LIB_BUILD
asm("RXF1SIDH equ 0F04h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF1SID3               :1;
        unsigned RXF1SID4               :1;
        unsigned RXF1SID5               :1;
        unsigned RXF1SID6               :1;
        unsigned RXF1SID7               :1;
        unsigned RXF1SID8               :1;
        unsigned RXF1SID9               :1;
        unsigned RXF1SID10              :1;
    };
} RXF1SIDHbits_t;
extern volatile RXF1SIDHbits_t RXF1SIDHbits __at(0xF04);
// bitfield macros
#define _RXF1SIDH_SID3_POSN                                 0x0
#define _RXF1SIDH_SID3_POSITION                             0x0
#define _RXF1SIDH_SID3_SIZE                                 0x1
#define _RXF1SIDH_SID3_LENGTH                               0x1
#define _RXF1SIDH_SID3_MASK                                 0x1
#define _RXF1SIDH_SID4_POSN                                 0x1
#define _RXF1SIDH_SID4_POSITION                             0x1
#define _RXF1SIDH_SID4_SIZE                                 0x1
#define _RXF1SIDH_SID4_LENGTH                               0x1
#define _RXF1SIDH_SID4_MASK                                 0x2
#define _RXF1SIDH_SID5_POSN                                 0x2
#define _RXF1SIDH_SID5_POSITION                             0x2
#define _RXF1SIDH_SID5_SIZE                                 0x1
#define _RXF1SIDH_SID5_LENGTH                               0x1
#define _RXF1SIDH_SID5_MASK                                 0x4
#define _RXF1SIDH_SID6_POSN                                 0x3
#define _RXF1SIDH_SID6_POSITION                             0x3
#define _RXF1SIDH_SID6_SIZE                                 0x1
#define _RXF1SIDH_SID6_LENGTH                               0x1
#define _RXF1SIDH_SID6_MASK                                 0x8
#define _RXF1SIDH_SID7_POSN                                 0x4
#define _RXF1SIDH_SID7_POSITION                             0x4
#define _RXF1SIDH_SID7_SIZE                                 0x1
#define _RXF1SIDH_SID7_LENGTH                               0x1
#define _RXF1SIDH_SID7_MASK                                 0x10
#define _RXF1SIDH_SID8_POSN                                 0x5
#define _RXF1SIDH_SID8_POSITION                             0x5
#define _RXF1SIDH_SID8_SIZE                                 0x1
#define _RXF1SIDH_SID8_LENGTH                               0x1
#define _RXF1SIDH_SID8_MASK                                 0x20
#define _RXF1SIDH_SID9_POSN                                 0x6
#define _RXF1SIDH_SID9_POSITION                             0x6
#define _RXF1SIDH_SID9_SIZE                                 0x1
#define _RXF1SIDH_SID9_LENGTH                               0x1
#define _RXF1SIDH_SID9_MASK                                 0x40
#define _RXF1SIDH_SID10_POSN                                0x7
#define _RXF1SIDH_SID10_POSITION                            0x7
#define _RXF1SIDH_SID10_SIZE                                0x1
#define _RXF1SIDH_SID10_LENGTH                              0x1
#define _RXF1SIDH_SID10_MASK                                0x80
#define _RXF1SIDH_RXF1SID3_POSN                             0x0
#define _RXF1SIDH_RXF1SID3_POSITION                         0x0
#define _RXF1SIDH_RXF1SID3_SIZE                             0x1
#define _RXF1SIDH_RXF1SID3_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID3_MASK                             0x1
#define _RXF1SIDH_RXF1SID4_POSN                             0x1
#define _RXF1SIDH_RXF1SID4_POSITION                         0x1
#define _RXF1SIDH_RXF1SID4_SIZE                             0x1
#define _RXF1SIDH_RXF1SID4_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID4_MASK                             0x2
#define _RXF1SIDH_RXF1SID5_POSN                             0x2
#define _RXF1SIDH_RXF1SID5_POSITION                         0x2
#define _RXF1SIDH_RXF1SID5_SIZE                             0x1
#define _RXF1SIDH_RXF1SID5_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID5_MASK                             0x4
#define _RXF1SIDH_RXF1SID6_POSN                             0x3
#define _RXF1SIDH_RXF1SID6_POSITION                         0x3
#define _RXF1SIDH_RXF1SID6_SIZE                             0x1
#define _RXF1SIDH_RXF1SID6_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID6_MASK                             0x8
#define _RXF1SIDH_RXF1SID7_POSN                             0x4
#define _RXF1SIDH_RXF1SID7_POSITION                         0x4
#define _RXF1SIDH_RXF1SID7_SIZE                             0x1
#define _RXF1SIDH_RXF1SID7_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID7_MASK                             0x10
#define _RXF1SIDH_RXF1SID8_POSN                             0x5
#define _RXF1SIDH_RXF1SID8_POSITION                         0x5
#define _RXF1SIDH_RXF1SID8_SIZE                             0x1
#define _RXF1SIDH_RXF1SID8_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID8_MASK                             0x20
#define _RXF1SIDH_RXF1SID9_POSN                             0x6
#define _RXF1SIDH_RXF1SID9_POSITION                         0x6
#define _RXF1SIDH_RXF1SID9_SIZE                             0x1
#define _RXF1SIDH_RXF1SID9_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID9_MASK                             0x40
#define _RXF1SIDH_RXF1SID10_POSN                            0x7
#define _RXF1SIDH_RXF1SID10_POSITION                        0x7
#define _RXF1SIDH_RXF1SID10_SIZE                            0x1
#define _RXF1SIDH_RXF1SID10_LENGTH                          0x1
#define _RXF1SIDH_RXF1SID10_MASK                            0x80

// Register: RXF1SIDL
#define RXF1SIDL RXF1SIDL
extern volatile unsigned char           RXF1SIDL            __at(0xF05);
#ifndef _LIB_BUILD
asm("RXF1SIDL equ 0F05h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXF1EID16              :1;
        unsigned RXF1EID17              :1;
        unsigned                        :1;
        unsigned RXF1EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF1SID0               :1;
        unsigned RXF1SID1               :1;
        unsigned RXF1SID2               :1;
    };
} RXF1SIDLbits_t;
extern volatile RXF1SIDLbits_t RXF1SIDLbits __at(0xF05);
// bitfield macros
#define _RXF1SIDL_EID16_POSN                                0x0
#define _RXF1SIDL_EID16_POSITION                            0x0
#define _RXF1SIDL_EID16_SIZE                                0x1
#define _RXF1SIDL_EID16_LENGTH                              0x1
#define _RXF1SIDL_EID16_MASK                                0x1
#define _RXF1SIDL_EID17_POSN                                0x1
#define _RXF1SIDL_EID17_POSITION                            0x1
#define _RXF1SIDL_EID17_SIZE                                0x1
#define _RXF1SIDL_EID17_LENGTH                              0x1
#define _RXF1SIDL_EID17_MASK                                0x2
#define _RXF1SIDL_EXIDEN_POSN                               0x3
#define _RXF1SIDL_EXIDEN_POSITION                           0x3
#define _RXF1SIDL_EXIDEN_SIZE                               0x1
#define _RXF1SIDL_EXIDEN_LENGTH                             0x1
#define _RXF1SIDL_EXIDEN_MASK                               0x8
#define _RXF1SIDL_SID0_POSN                                 0x5
#define _RXF1SIDL_SID0_POSITION                             0x5
#define _RXF1SIDL_SID0_SIZE                                 0x1
#define _RXF1SIDL_SID0_LENGTH                               0x1
#define _RXF1SIDL_SID0_MASK                                 0x20
#define _RXF1SIDL_SID1_POSN                                 0x6
#define _RXF1SIDL_SID1_POSITION                             0x6
#define _RXF1SIDL_SID1_SIZE                                 0x1
#define _RXF1SIDL_SID1_LENGTH                               0x1
#define _RXF1SIDL_SID1_MASK                                 0x40
#define _RXF1SIDL_SID2_POSN                                 0x7
#define _RXF1SIDL_SID2_POSITION                             0x7
#define _RXF1SIDL_SID2_SIZE                                 0x1
#define _RXF1SIDL_SID2_LENGTH                               0x1
#define _RXF1SIDL_SID2_MASK                                 0x80
#define _RXF1SIDL_RXF1EID16_POSN                            0x0
#define _RXF1SIDL_RXF1EID16_POSITION                        0x0
#define _RXF1SIDL_RXF1EID16_SIZE                            0x1
#define _RXF1SIDL_RXF1EID16_LENGTH                          0x1
#define _RXF1SIDL_RXF1EID16_MASK                            0x1
#define _RXF1SIDL_RXF1EID17_POSN                            0x1
#define _RXF1SIDL_RXF1EID17_POSITION                        0x1
#define _RXF1SIDL_RXF1EID17_SIZE                            0x1
#define _RXF1SIDL_RXF1EID17_LENGTH                          0x1
#define _RXF1SIDL_RXF1EID17_MASK                            0x2
#define _RXF1SIDL_RXF1EXIDEN_POSN                           0x3
#define _RXF1SIDL_RXF1EXIDEN_POSITION                       0x3
#define _RXF1SIDL_RXF1EXIDEN_SIZE                           0x1
#define _RXF1SIDL_RXF1EXIDEN_LENGTH                         0x1
#define _RXF1SIDL_RXF1EXIDEN_MASK                           0x8
#define _RXF1SIDL_RXF1SID0_POSN                             0x5
#define _RXF1SIDL_RXF1SID0_POSITION                         0x5
#define _RXF1SIDL_RXF1SID0_SIZE                             0x1
#define _RXF1SIDL_RXF1SID0_LENGTH                           0x1
#define _RXF1SIDL_RXF1SID0_MASK                             0x20
#define _RXF1SIDL_RXF1SID1_POSN                             0x6
#define _RXF1SIDL_RXF1SID1_POSITION                         0x6
#define _RXF1SIDL_RXF1SID1_SIZE                             0x1
#define _RXF1SIDL_RXF1SID1_LENGTH                           0x1
#define _RXF1SIDL_RXF1SID1_MASK                             0x40
#define _RXF1SIDL_RXF1SID2_POSN                             0x7
#define _RXF1SIDL_RXF1SID2_POSITION                         0x7
#define _RXF1SIDL_RXF1SID2_SIZE                             0x1
#define _RXF1SIDL_RXF1SID2_LENGTH                           0x1
#define _RXF1SIDL_RXF1SID2_MASK                             0x80

// Register: RXF1EIDH
#define RXF1EIDH RXF1EIDH
extern volatile unsigned char           RXF1EIDH            __at(0xF06);
#ifndef _LIB_BUILD
asm("RXF1EIDH equ 0F06h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF1EID8               :1;
        unsigned RXF1EID9               :1;
        unsigned RXF1EID10              :1;
        unsigned RXF1EID11              :1;
        unsigned RXF1EID12              :1;
        unsigned RXF1EID13              :1;
        unsigned RXF1EID14              :1;
        unsigned RXF1EID15              :1;
    };
} RXF1EIDHbits_t;
extern volatile RXF1EIDHbits_t RXF1EIDHbits __at(0xF06);
// bitfield macros
#define _RXF1EIDH_EID8_POSN                                 0x0
#define _RXF1EIDH_EID8_POSITION                             0x0
#define _RXF1EIDH_EID8_SIZE                                 0x1
#define _RXF1EIDH_EID8_LENGTH                               0x1
#define _RXF1EIDH_EID8_MASK                                 0x1
#define _RXF1EIDH_EID9_POSN                                 0x1
#define _RXF1EIDH_EID9_POSITION                             0x1
#define _RXF1EIDH_EID9_SIZE                                 0x1
#define _RXF1EIDH_EID9_LENGTH                               0x1
#define _RXF1EIDH_EID9_MASK                                 0x2
#define _RXF1EIDH_EID10_POSN                                0x2
#define _RXF1EIDH_EID10_POSITION                            0x2
#define _RXF1EIDH_EID10_SIZE                                0x1
#define _RXF1EIDH_EID10_LENGTH                              0x1
#define _RXF1EIDH_EID10_MASK                                0x4
#define _RXF1EIDH_EID11_POSN                                0x3
#define _RXF1EIDH_EID11_POSITION                            0x3
#define _RXF1EIDH_EID11_SIZE                                0x1
#define _RXF1EIDH_EID11_LENGTH                              0x1
#define _RXF1EIDH_EID11_MASK                                0x8
#define _RXF1EIDH_EID12_POSN                                0x4
#define _RXF1EIDH_EID12_POSITION                            0x4
#define _RXF1EIDH_EID12_SIZE                                0x1
#define _RXF1EIDH_EID12_LENGTH                              0x1
#define _RXF1EIDH_EID12_MASK                                0x10
#define _RXF1EIDH_EID13_POSN                                0x5
#define _RXF1EIDH_EID13_POSITION                            0x5
#define _RXF1EIDH_EID13_SIZE                                0x1
#define _RXF1EIDH_EID13_LENGTH                              0x1
#define _RXF1EIDH_EID13_MASK                                0x20
#define _RXF1EIDH_EID14_POSN                                0x6
#define _RXF1EIDH_EID14_POSITION                            0x6
#define _RXF1EIDH_EID14_SIZE                                0x1
#define _RXF1EIDH_EID14_LENGTH                              0x1
#define _RXF1EIDH_EID14_MASK                                0x40
#define _RXF1EIDH_EID15_POSN                                0x7
#define _RXF1EIDH_EID15_POSITION                            0x7
#define _RXF1EIDH_EID15_SIZE                                0x1
#define _RXF1EIDH_EID15_LENGTH                              0x1
#define _RXF1EIDH_EID15_MASK                                0x80
#define _RXF1EIDH_RXF1EID8_POSN                             0x0
#define _RXF1EIDH_RXF1EID8_POSITION                         0x0
#define _RXF1EIDH_RXF1EID8_SIZE                             0x1
#define _RXF1EIDH_RXF1EID8_LENGTH                           0x1
#define _RXF1EIDH_RXF1EID8_MASK                             0x1
#define _RXF1EIDH_RXF1EID9_POSN                             0x1
#define _RXF1EIDH_RXF1EID9_POSITION                         0x1
#define _RXF1EIDH_RXF1EID9_SIZE                             0x1
#define _RXF1EIDH_RXF1EID9_LENGTH                           0x1
#define _RXF1EIDH_RXF1EID9_MASK                             0x2
#define _RXF1EIDH_RXF1EID10_POSN                            0x2
#define _RXF1EIDH_RXF1EID10_POSITION                        0x2
#define _RXF1EIDH_RXF1EID10_SIZE                            0x1
#define _RXF1EIDH_RXF1EID10_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID10_MASK                            0x4
#define _RXF1EIDH_RXF1EID11_POSN                            0x3
#define _RXF1EIDH_RXF1EID11_POSITION                        0x3
#define _RXF1EIDH_RXF1EID11_SIZE                            0x1
#define _RXF1EIDH_RXF1EID11_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID11_MASK                            0x8
#define _RXF1EIDH_RXF1EID12_POSN                            0x4
#define _RXF1EIDH_RXF1EID12_POSITION                        0x4
#define _RXF1EIDH_RXF1EID12_SIZE                            0x1
#define _RXF1EIDH_RXF1EID12_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID12_MASK                            0x10
#define _RXF1EIDH_RXF1EID13_POSN                            0x5
#define _RXF1EIDH_RXF1EID13_POSITION                        0x5
#define _RXF1EIDH_RXF1EID13_SIZE                            0x1
#define _RXF1EIDH_RXF1EID13_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID13_MASK                            0x20
#define _RXF1EIDH_RXF1EID14_POSN                            0x6
#define _RXF1EIDH_RXF1EID14_POSITION                        0x6
#define _RXF1EIDH_RXF1EID14_SIZE                            0x1
#define _RXF1EIDH_RXF1EID14_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID14_MASK                            0x40
#define _RXF1EIDH_RXF1EID15_POSN                            0x7
#define _RXF1EIDH_RXF1EID15_POSITION                        0x7
#define _RXF1EIDH_RXF1EID15_SIZE                            0x1
#define _RXF1EIDH_RXF1EID15_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID15_MASK                            0x80

// Register: RXF1EIDL
#define RXF1EIDL RXF1EIDL
extern volatile unsigned char           RXF1EIDL            __at(0xF07);
#ifndef _LIB_BUILD
asm("RXF1EIDL equ 0F07h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF1EID0               :1;
        unsigned RXF1EID1               :1;
        unsigned RXF1EID2               :1;
        unsigned RXF1EID3               :1;
        unsigned RXF1EID4               :1;
        unsigned RXF1EID5               :1;
        unsigned RXF1EID6               :1;
        unsigned RXF1EID7               :1;
    };
} RXF1EIDLbits_t;
extern volatile RXF1EIDLbits_t RXF1EIDLbits __at(0xF07);
// bitfield macros
#define _RXF1EIDL_EID0_POSN                                 0x0
#define _RXF1EIDL_EID0_POSITION                             0x0
#define _RXF1EIDL_EID0_SIZE                                 0x1
#define _RXF1EIDL_EID0_LENGTH                               0x1
#define _RXF1EIDL_EID0_MASK                                 0x1
#define _RXF1EIDL_EID1_POSN                                 0x1
#define _RXF1EIDL_EID1_POSITION                             0x1
#define _RXF1EIDL_EID1_SIZE                                 0x1
#define _RXF1EIDL_EID1_LENGTH                               0x1
#define _RXF1EIDL_EID1_MASK                                 0x2
#define _RXF1EIDL_EID2_POSN                                 0x2
#define _RXF1EIDL_EID2_POSITION                             0x2
#define _RXF1EIDL_EID2_SIZE                                 0x1
#define _RXF1EIDL_EID2_LENGTH                               0x1
#define _RXF1EIDL_EID2_MASK                                 0x4
#define _RXF1EIDL_EID3_POSN                                 0x3
#define _RXF1EIDL_EID3_POSITION                             0x3
#define _RXF1EIDL_EID3_SIZE                                 0x1
#define _RXF1EIDL_EID3_LENGTH                               0x1
#define _RXF1EIDL_EID3_MASK                                 0x8
#define _RXF1EIDL_EID4_POSN                                 0x4
#define _RXF1EIDL_EID4_POSITION                             0x4
#define _RXF1EIDL_EID4_SIZE                                 0x1
#define _RXF1EIDL_EID4_LENGTH                               0x1
#define _RXF1EIDL_EID4_MASK                                 0x10
#define _RXF1EIDL_EID5_POSN                                 0x5
#define _RXF1EIDL_EID5_POSITION                             0x5
#define _RXF1EIDL_EID5_SIZE                                 0x1
#define _RXF1EIDL_EID5_LENGTH                               0x1
#define _RXF1EIDL_EID5_MASK                                 0x20
#define _RXF1EIDL_EID6_POSN                                 0x6
#define _RXF1EIDL_EID6_POSITION                             0x6
#define _RXF1EIDL_EID6_SIZE                                 0x1
#define _RXF1EIDL_EID6_LENGTH                               0x1
#define _RXF1EIDL_EID6_MASK                                 0x40
#define _RXF1EIDL_EID7_POSN                                 0x7
#define _RXF1EIDL_EID7_POSITION                             0x7
#define _RXF1EIDL_EID7_SIZE                                 0x1
#define _RXF1EIDL_EID7_LENGTH                               0x1
#define _RXF1EIDL_EID7_MASK                                 0x80
#define _RXF1EIDL_RXF1EID0_POSN                             0x0
#define _RXF1EIDL_RXF1EID0_POSITION                         0x0
#define _RXF1EIDL_RXF1EID0_SIZE                             0x1
#define _RXF1EIDL_RXF1EID0_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID0_MASK                             0x1
#define _RXF1EIDL_RXF1EID1_POSN                             0x1
#define _RXF1EIDL_RXF1EID1_POSITION                         0x1
#define _RXF1EIDL_RXF1EID1_SIZE                             0x1
#define _RXF1EIDL_RXF1EID1_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID1_MASK                             0x2
#define _RXF1EIDL_RXF1EID2_POSN                             0x2
#define _RXF1EIDL_RXF1EID2_POSITION                         0x2
#define _RXF1EIDL_RXF1EID2_SIZE                             0x1
#define _RXF1EIDL_RXF1EID2_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID2_MASK                             0x4
#define _RXF1EIDL_RXF1EID3_POSN                             0x3
#define _RXF1EIDL_RXF1EID3_POSITION                         0x3
#define _RXF1EIDL_RXF1EID3_SIZE                             0x1
#define _RXF1EIDL_RXF1EID3_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID3_MASK                             0x8
#define _RXF1EIDL_RXF1EID4_POSN                             0x4
#define _RXF1EIDL_RXF1EID4_POSITION                         0x4
#define _RXF1EIDL_RXF1EID4_SIZE                             0x1
#define _RXF1EIDL_RXF1EID4_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID4_MASK                             0x10
#define _RXF1EIDL_RXF1EID5_POSN                             0x5
#define _RXF1EIDL_RXF1EID5_POSITION                         0x5
#define _RXF1EIDL_RXF1EID5_SIZE                             0x1
#define _RXF1EIDL_RXF1EID5_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID5_MASK                             0x20
#define _RXF1EIDL_RXF1EID6_POSN                             0x6
#define _RXF1EIDL_RXF1EID6_POSITION                         0x6
#define _RXF1EIDL_RXF1EID6_SIZE                             0x1
#define _RXF1EIDL_RXF1EID6_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID6_MASK                             0x40
#define _RXF1EIDL_RXF1EID7_POSN                             0x7
#define _RXF1EIDL_RXF1EID7_POSITION                         0x7
#define _RXF1EIDL_RXF1EID7_SIZE                             0x1
#define _RXF1EIDL_RXF1EID7_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID7_MASK                             0x80

// Register: RXF2SIDH
#define RXF2SIDH RXF2SIDH
extern volatile unsigned char           RXF2SIDH            __at(0xF08);
#ifndef _LIB_BUILD
asm("RXF2SIDH equ 0F08h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF2SID3               :1;
        unsigned RXF2SID4               :1;
        unsigned RXF2SID5               :1;
        unsigned RXF2SID6               :1;
        unsigned RXF2SID7               :1;
        unsigned RXF2SID8               :1;
        unsigned RXF2SID9               :1;
        unsigned RXF2SID10              :1;
    };
} RXF2SIDHbits_t;
extern volatile RXF2SIDHbits_t RXF2SIDHbits __at(0xF08);
// bitfield macros
#define _RXF2SIDH_SID3_POSN                                 0x0
#define _RXF2SIDH_SID3_POSITION                             0x0
#define _RXF2SIDH_SID3_SIZE                                 0x1
#define _RXF2SIDH_SID3_LENGTH                               0x1
#define _RXF2SIDH_SID3_MASK                                 0x1
#define _RXF2SIDH_SID4_POSN                                 0x1
#define _RXF2SIDH_SID4_POSITION                             0x1
#define _RXF2SIDH_SID4_SIZE                                 0x1
#define _RXF2SIDH_SID4_LENGTH                               0x1
#define _RXF2SIDH_SID4_MASK                                 0x2
#define _RXF2SIDH_SID5_POSN                                 0x2
#define _RXF2SIDH_SID5_POSITION                             0x2
#define _RXF2SIDH_SID5_SIZE                                 0x1
#define _RXF2SIDH_SID5_LENGTH                               0x1
#define _RXF2SIDH_SID5_MASK                                 0x4
#define _RXF2SIDH_SID6_POSN                                 0x3
#define _RXF2SIDH_SID6_POSITION                             0x3
#define _RXF2SIDH_SID6_SIZE                                 0x1
#define _RXF2SIDH_SID6_LENGTH                               0x1
#define _RXF2SIDH_SID6_MASK                                 0x8
#define _RXF2SIDH_SID7_POSN                                 0x4
#define _RXF2SIDH_SID7_POSITION                             0x4
#define _RXF2SIDH_SID7_SIZE                                 0x1
#define _RXF2SIDH_SID7_LENGTH                               0x1
#define _RXF2SIDH_SID7_MASK                                 0x10
#define _RXF2SIDH_SID8_POSN                                 0x5
#define _RXF2SIDH_SID8_POSITION                             0x5
#define _RXF2SIDH_SID8_SIZE                                 0x1
#define _RXF2SIDH_SID8_LENGTH                               0x1
#define _RXF2SIDH_SID8_MASK                                 0x20
#define _RXF2SIDH_SID9_POSN                                 0x6
#define _RXF2SIDH_SID9_POSITION                             0x6
#define _RXF2SIDH_SID9_SIZE                                 0x1
#define _RXF2SIDH_SID9_LENGTH                               0x1
#define _RXF2SIDH_SID9_MASK                                 0x40
#define _RXF2SIDH_SID10_POSN                                0x7
#define _RXF2SIDH_SID10_POSITION                            0x7
#define _RXF2SIDH_SID10_SIZE                                0x1
#define _RXF2SIDH_SID10_LENGTH                              0x1
#define _RXF2SIDH_SID10_MASK                                0x80
#define _RXF2SIDH_RXF2SID3_POSN                             0x0
#define _RXF2SIDH_RXF2SID3_POSITION                         0x0
#define _RXF2SIDH_RXF2SID3_SIZE                             0x1
#define _RXF2SIDH_RXF2SID3_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID3_MASK                             0x1
#define _RXF2SIDH_RXF2SID4_POSN                             0x1
#define _RXF2SIDH_RXF2SID4_POSITION                         0x1
#define _RXF2SIDH_RXF2SID4_SIZE                             0x1
#define _RXF2SIDH_RXF2SID4_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID4_MASK                             0x2
#define _RXF2SIDH_RXF2SID5_POSN                             0x2
#define _RXF2SIDH_RXF2SID5_POSITION                         0x2
#define _RXF2SIDH_RXF2SID5_SIZE                             0x1
#define _RXF2SIDH_RXF2SID5_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID5_MASK                             0x4
#define _RXF2SIDH_RXF2SID6_POSN                             0x3
#define _RXF2SIDH_RXF2SID6_POSITION                         0x3
#define _RXF2SIDH_RXF2SID6_SIZE                             0x1
#define _RXF2SIDH_RXF2SID6_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID6_MASK                             0x8
#define _RXF2SIDH_RXF2SID7_POSN                             0x4
#define _RXF2SIDH_RXF2SID7_POSITION                         0x4
#define _RXF2SIDH_RXF2SID7_SIZE                             0x1
#define _RXF2SIDH_RXF2SID7_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID7_MASK                             0x10
#define _RXF2SIDH_RXF2SID8_POSN                             0x5
#define _RXF2SIDH_RXF2SID8_POSITION                         0x5
#define _RXF2SIDH_RXF2SID8_SIZE                             0x1
#define _RXF2SIDH_RXF2SID8_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID8_MASK                             0x20
#define _RXF2SIDH_RXF2SID9_POSN                             0x6
#define _RXF2SIDH_RXF2SID9_POSITION                         0x6
#define _RXF2SIDH_RXF2SID9_SIZE                             0x1
#define _RXF2SIDH_RXF2SID9_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID9_MASK                             0x40
#define _RXF2SIDH_RXF2SID10_POSN                            0x7
#define _RXF2SIDH_RXF2SID10_POSITION                        0x7
#define _RXF2SIDH_RXF2SID10_SIZE                            0x1
#define _RXF2SIDH_RXF2SID10_LENGTH                          0x1
#define _RXF2SIDH_RXF2SID10_MASK                            0x80

// Register: RXF2SIDL
#define RXF2SIDL RXF2SIDL
extern volatile unsigned char           RXF2SIDL            __at(0xF09);
#ifndef _LIB_BUILD
asm("RXF2SIDL equ 0F09h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXF2EID16              :1;
        unsigned RXF2EID17              :1;
        unsigned                        :1;
        unsigned RXF2EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF2SID0               :1;
        unsigned RXF2SID1               :1;
        unsigned RXF2SID2               :1;
    };
} RXF2SIDLbits_t;
extern volatile RXF2SIDLbits_t RXF2SIDLbits __at(0xF09);
// bitfield macros
#define _RXF2SIDL_EID16_POSN                                0x0
#define _RXF2SIDL_EID16_POSITION                            0x0
#define _RXF2SIDL_EID16_SIZE                                0x1
#define _RXF2SIDL_EID16_LENGTH                              0x1
#define _RXF2SIDL_EID16_MASK                                0x1
#define _RXF2SIDL_EID17_POSN                                0x1
#define _RXF2SIDL_EID17_POSITION                            0x1
#define _RXF2SIDL_EID17_SIZE                                0x1
#define _RXF2SIDL_EID17_LENGTH                              0x1
#define _RXF2SIDL_EID17_MASK                                0x2
#define _RXF2SIDL_EXIDEN_POSN                               0x3
#define _RXF2SIDL_EXIDEN_POSITION                           0x3
#define _RXF2SIDL_EXIDEN_SIZE                               0x1
#define _RXF2SIDL_EXIDEN_LENGTH                             0x1
#define _RXF2SIDL_EXIDEN_MASK                               0x8
#define _RXF2SIDL_SID0_POSN                                 0x5
#define _RXF2SIDL_SID0_POSITION                             0x5
#define _RXF2SIDL_SID0_SIZE                                 0x1
#define _RXF2SIDL_SID0_LENGTH                               0x1
#define _RXF2SIDL_SID0_MASK                                 0x20
#define _RXF2SIDL_SID1_POSN                                 0x6
#define _RXF2SIDL_SID1_POSITION                             0x6
#define _RXF2SIDL_SID1_SIZE                                 0x1
#define _RXF2SIDL_SID1_LENGTH                               0x1
#define _RXF2SIDL_SID1_MASK                                 0x40
#define _RXF2SIDL_SID2_POSN                                 0x7
#define _RXF2SIDL_SID2_POSITION                             0x7
#define _RXF2SIDL_SID2_SIZE                                 0x1
#define _RXF2SIDL_SID2_LENGTH                               0x1
#define _RXF2SIDL_SID2_MASK                                 0x80
#define _RXF2SIDL_RXF2EID16_POSN                            0x0
#define _RXF2SIDL_RXF2EID16_POSITION                        0x0
#define _RXF2SIDL_RXF2EID16_SIZE                            0x1
#define _RXF2SIDL_RXF2EID16_LENGTH                          0x1
#define _RXF2SIDL_RXF2EID16_MASK                            0x1
#define _RXF2SIDL_RXF2EID17_POSN                            0x1
#define _RXF2SIDL_RXF2EID17_POSITION                        0x1
#define _RXF2SIDL_RXF2EID17_SIZE                            0x1
#define _RXF2SIDL_RXF2EID17_LENGTH                          0x1
#define _RXF2SIDL_RXF2EID17_MASK                            0x2
#define _RXF2SIDL_RXF2EXIDEN_POSN                           0x3
#define _RXF2SIDL_RXF2EXIDEN_POSITION                       0x3
#define _RXF2SIDL_RXF2EXIDEN_SIZE                           0x1
#define _RXF2SIDL_RXF2EXIDEN_LENGTH                         0x1
#define _RXF2SIDL_RXF2EXIDEN_MASK                           0x8
#define _RXF2SIDL_RXF2SID0_POSN                             0x5
#define _RXF2SIDL_RXF2SID0_POSITION                         0x5
#define _RXF2SIDL_RXF2SID0_SIZE                             0x1
#define _RXF2SIDL_RXF2SID0_LENGTH                           0x1
#define _RXF2SIDL_RXF2SID0_MASK                             0x20
#define _RXF2SIDL_RXF2SID1_POSN                             0x6
#define _RXF2SIDL_RXF2SID1_POSITION                         0x6
#define _RXF2SIDL_RXF2SID1_SIZE                             0x1
#define _RXF2SIDL_RXF2SID1_LENGTH                           0x1
#define _RXF2SIDL_RXF2SID1_MASK                             0x40
#define _RXF2SIDL_RXF2SID2_POSN                             0x7
#define _RXF2SIDL_RXF2SID2_POSITION                         0x7
#define _RXF2SIDL_RXF2SID2_SIZE                             0x1
#define _RXF2SIDL_RXF2SID2_LENGTH                           0x1
#define _RXF2SIDL_RXF2SID2_MASK                             0x80

// Register: RXF2EIDH
#define RXF2EIDH RXF2EIDH
extern volatile unsigned char           RXF2EIDH            __at(0xF0A);
#ifndef _LIB_BUILD
asm("RXF2EIDH equ 0F0Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF2EID8               :1;
        unsigned RXF2EID9               :1;
        unsigned RXF2EID10              :1;
        unsigned RXF2EID11              :1;
        unsigned RXF2EID12              :1;
        unsigned RXF2EID13              :1;
        unsigned RXF2EID14              :1;
        unsigned RXF2EID15              :1;
    };
} RXF2EIDHbits_t;
extern volatile RXF2EIDHbits_t RXF2EIDHbits __at(0xF0A);
// bitfield macros
#define _RXF2EIDH_EID8_POSN                                 0x0
#define _RXF2EIDH_EID8_POSITION                             0x0
#define _RXF2EIDH_EID8_SIZE                                 0x1
#define _RXF2EIDH_EID8_LENGTH                               0x1
#define _RXF2EIDH_EID8_MASK                                 0x1
#define _RXF2EIDH_EID9_POSN                                 0x1
#define _RXF2EIDH_EID9_POSITION                             0x1
#define _RXF2EIDH_EID9_SIZE                                 0x1
#define _RXF2EIDH_EID9_LENGTH                               0x1
#define _RXF2EIDH_EID9_MASK                                 0x2
#define _RXF2EIDH_EID10_POSN                                0x2
#define _RXF2EIDH_EID10_POSITION                            0x2
#define _RXF2EIDH_EID10_SIZE                                0x1
#define _RXF2EIDH_EID10_LENGTH                              0x1
#define _RXF2EIDH_EID10_MASK                                0x4
#define _RXF2EIDH_EID11_POSN                                0x3
#define _RXF2EIDH_EID11_POSITION                            0x3
#define _RXF2EIDH_EID11_SIZE                                0x1
#define _RXF2EIDH_EID11_LENGTH                              0x1
#define _RXF2EIDH_EID11_MASK                                0x8
#define _RXF2EIDH_EID12_POSN                                0x4
#define _RXF2EIDH_EID12_POSITION                            0x4
#define _RXF2EIDH_EID12_SIZE                                0x1
#define _RXF2EIDH_EID12_LENGTH                              0x1
#define _RXF2EIDH_EID12_MASK                                0x10
#define _RXF2EIDH_EID13_POSN                                0x5
#define _RXF2EIDH_EID13_POSITION                            0x5
#define _RXF2EIDH_EID13_SIZE                                0x1
#define _RXF2EIDH_EID13_LENGTH                              0x1
#define _RXF2EIDH_EID13_MASK                                0x20
#define _RXF2EIDH_EID14_POSN                                0x6
#define _RXF2EIDH_EID14_POSITION                            0x6
#define _RXF2EIDH_EID14_SIZE                                0x1
#define _RXF2EIDH_EID14_LENGTH                              0x1
#define _RXF2EIDH_EID14_MASK                                0x40
#define _RXF2EIDH_EID15_POSN                                0x7
#define _RXF2EIDH_EID15_POSITION                            0x7
#define _RXF2EIDH_EID15_SIZE                                0x1
#define _RXF2EIDH_EID15_LENGTH                              0x1
#define _RXF2EIDH_EID15_MASK                                0x80
#define _RXF2EIDH_RXF2EID8_POSN                             0x0
#define _RXF2EIDH_RXF2EID8_POSITION                         0x0
#define _RXF2EIDH_RXF2EID8_SIZE                             0x1
#define _RXF2EIDH_RXF2EID8_LENGTH                           0x1
#define _RXF2EIDH_RXF2EID8_MASK                             0x1
#define _RXF2EIDH_RXF2EID9_POSN                             0x1
#define _RXF2EIDH_RXF2EID9_POSITION                         0x1
#define _RXF2EIDH_RXF2EID9_SIZE                             0x1
#define _RXF2EIDH_RXF2EID9_LENGTH                           0x1
#define _RXF2EIDH_RXF2EID9_MASK                             0x2
#define _RXF2EIDH_RXF2EID10_POSN                            0x2
#define _RXF2EIDH_RXF2EID10_POSITION                        0x2
#define _RXF2EIDH_RXF2EID10_SIZE                            0x1
#define _RXF2EIDH_RXF2EID10_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID10_MASK                            0x4
#define _RXF2EIDH_RXF2EID11_POSN                            0x3
#define _RXF2EIDH_RXF2EID11_POSITION                        0x3
#define _RXF2EIDH_RXF2EID11_SIZE                            0x1
#define _RXF2EIDH_RXF2EID11_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID11_MASK                            0x8
#define _RXF2EIDH_RXF2EID12_POSN                            0x4
#define _RXF2EIDH_RXF2EID12_POSITION                        0x4
#define _RXF2EIDH_RXF2EID12_SIZE                            0x1
#define _RXF2EIDH_RXF2EID12_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID12_MASK                            0x10
#define _RXF2EIDH_RXF2EID13_POSN                            0x5
#define _RXF2EIDH_RXF2EID13_POSITION                        0x5
#define _RXF2EIDH_RXF2EID13_SIZE                            0x1
#define _RXF2EIDH_RXF2EID13_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID13_MASK                            0x20
#define _RXF2EIDH_RXF2EID14_POSN                            0x6
#define _RXF2EIDH_RXF2EID14_POSITION                        0x6
#define _RXF2EIDH_RXF2EID14_SIZE                            0x1
#define _RXF2EIDH_RXF2EID14_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID14_MASK                            0x40
#define _RXF2EIDH_RXF2EID15_POSN                            0x7
#define _RXF2EIDH_RXF2EID15_POSITION                        0x7
#define _RXF2EIDH_RXF2EID15_SIZE                            0x1
#define _RXF2EIDH_RXF2EID15_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID15_MASK                            0x80

// Register: RXF2EIDL
#define RXF2EIDL RXF2EIDL
extern volatile unsigned char           RXF2EIDL            __at(0xF0B);
#ifndef _LIB_BUILD
asm("RXF2EIDL equ 0F0Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF2EID0               :1;
        unsigned RXF2EID1               :1;
        unsigned RXF2EID2               :1;
        unsigned RXF2EID3               :1;
        unsigned RXF2EID4               :1;
        unsigned RXF2EID5               :1;
        unsigned RXF2EID6               :1;
        unsigned RXF2EID7               :1;
    };
} RXF2EIDLbits_t;
extern volatile RXF2EIDLbits_t RXF2EIDLbits __at(0xF0B);
// bitfield macros
#define _RXF2EIDL_EID0_POSN                                 0x0
#define _RXF2EIDL_EID0_POSITION                             0x0
#define _RXF2EIDL_EID0_SIZE                                 0x1
#define _RXF2EIDL_EID0_LENGTH                               0x1
#define _RXF2EIDL_EID0_MASK                                 0x1
#define _RXF2EIDL_EID1_POSN                                 0x1
#define _RXF2EIDL_EID1_POSITION                             0x1
#define _RXF2EIDL_EID1_SIZE                                 0x1
#define _RXF2EIDL_EID1_LENGTH                               0x1
#define _RXF2EIDL_EID1_MASK                                 0x2
#define _RXF2EIDL_EID2_POSN                                 0x2
#define _RXF2EIDL_EID2_POSITION                             0x2
#define _RXF2EIDL_EID2_SIZE                                 0x1
#define _RXF2EIDL_EID2_LENGTH                               0x1
#define _RXF2EIDL_EID2_MASK                                 0x4
#define _RXF2EIDL_EID3_POSN                                 0x3
#define _RXF2EIDL_EID3_POSITION                             0x3
#define _RXF2EIDL_EID3_SIZE                                 0x1
#define _RXF2EIDL_EID3_LENGTH                               0x1
#define _RXF2EIDL_EID3_MASK                                 0x8
#define _RXF2EIDL_EID4_POSN                                 0x4
#define _RXF2EIDL_EID4_POSITION                             0x4
#define _RXF2EIDL_EID4_SIZE                                 0x1
#define _RXF2EIDL_EID4_LENGTH                               0x1
#define _RXF2EIDL_EID4_MASK                                 0x10
#define _RXF2EIDL_EID5_POSN                                 0x5
#define _RXF2EIDL_EID5_POSITION                             0x5
#define _RXF2EIDL_EID5_SIZE                                 0x1
#define _RXF2EIDL_EID5_LENGTH                               0x1
#define _RXF2EIDL_EID5_MASK                                 0x20
#define _RXF2EIDL_EID6_POSN                                 0x6
#define _RXF2EIDL_EID6_POSITION                             0x6
#define _RXF2EIDL_EID6_SIZE                                 0x1
#define _RXF2EIDL_EID6_LENGTH                               0x1
#define _RXF2EIDL_EID6_MASK                                 0x40
#define _RXF2EIDL_EID7_POSN                                 0x7
#define _RXF2EIDL_EID7_POSITION                             0x7
#define _RXF2EIDL_EID7_SIZE                                 0x1
#define _RXF2EIDL_EID7_LENGTH                               0x1
#define _RXF2EIDL_EID7_MASK                                 0x80
#define _RXF2EIDL_RXF2EID0_POSN                             0x0
#define _RXF2EIDL_RXF2EID0_POSITION                         0x0
#define _RXF2EIDL_RXF2EID0_SIZE                             0x1
#define _RXF2EIDL_RXF2EID0_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID0_MASK                             0x1
#define _RXF2EIDL_RXF2EID1_POSN                             0x1
#define _RXF2EIDL_RXF2EID1_POSITION                         0x1
#define _RXF2EIDL_RXF2EID1_SIZE                             0x1
#define _RXF2EIDL_RXF2EID1_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID1_MASK                             0x2
#define _RXF2EIDL_RXF2EID2_POSN                             0x2
#define _RXF2EIDL_RXF2EID2_POSITION                         0x2
#define _RXF2EIDL_RXF2EID2_SIZE                             0x1
#define _RXF2EIDL_RXF2EID2_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID2_MASK                             0x4
#define _RXF2EIDL_RXF2EID3_POSN                             0x3
#define _RXF2EIDL_RXF2EID3_POSITION                         0x3
#define _RXF2EIDL_RXF2EID3_SIZE                             0x1
#define _RXF2EIDL_RXF2EID3_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID3_MASK                             0x8
#define _RXF2EIDL_RXF2EID4_POSN                             0x4
#define _RXF2EIDL_RXF2EID4_POSITION                         0x4
#define _RXF2EIDL_RXF2EID4_SIZE                             0x1
#define _RXF2EIDL_RXF2EID4_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID4_MASK                             0x10
#define _RXF2EIDL_RXF2EID5_POSN                             0x5
#define _RXF2EIDL_RXF2EID5_POSITION                         0x5
#define _RXF2EIDL_RXF2EID5_SIZE                             0x1
#define _RXF2EIDL_RXF2EID5_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID5_MASK                             0x20
#define _RXF2EIDL_RXF2EID6_POSN                             0x6
#define _RXF2EIDL_RXF2EID6_POSITION                         0x6
#define _RXF2EIDL_RXF2EID6_SIZE                             0x1
#define _RXF2EIDL_RXF2EID6_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID6_MASK                             0x40
#define _RXF2EIDL_RXF2EID7_POSN                             0x7
#define _RXF2EIDL_RXF2EID7_POSITION                         0x7
#define _RXF2EIDL_RXF2EID7_SIZE                             0x1
#define _RXF2EIDL_RXF2EID7_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID7_MASK                             0x80

// Register: RXF3SIDH
#define RXF3SIDH RXF3SIDH
extern volatile unsigned char           RXF3SIDH            __at(0xF0C);
#ifndef _LIB_BUILD
asm("RXF3SIDH equ 0F0Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF3SID3               :1;
        unsigned RXF3SID4               :1;
        unsigned RXF3SID5               :1;
        unsigned RXF3SID6               :1;
        unsigned RXF3SID7               :1;
        unsigned RXF3SID8               :1;
        unsigned RXF3SID9               :1;
        unsigned RXF3SID10              :1;
    };
} RXF3SIDHbits_t;
extern volatile RXF3SIDHbits_t RXF3SIDHbits __at(0xF0C);
// bitfield macros
#define _RXF3SIDH_SID3_POSN                                 0x0
#define _RXF3SIDH_SID3_POSITION                             0x0
#define _RXF3SIDH_SID3_SIZE                                 0x1
#define _RXF3SIDH_SID3_LENGTH                               0x1
#define _RXF3SIDH_SID3_MASK                                 0x1
#define _RXF3SIDH_SID4_POSN                                 0x1
#define _RXF3SIDH_SID4_POSITION                             0x1
#define _RXF3SIDH_SID4_SIZE                                 0x1
#define _RXF3SIDH_SID4_LENGTH                               0x1
#define _RXF3SIDH_SID4_MASK                                 0x2
#define _RXF3SIDH_SID5_POSN                                 0x2
#define _RXF3SIDH_SID5_POSITION                             0x2
#define _RXF3SIDH_SID5_SIZE                                 0x1
#define _RXF3SIDH_SID5_LENGTH                               0x1
#define _RXF3SIDH_SID5_MASK                                 0x4
#define _RXF3SIDH_SID6_POSN                                 0x3
#define _RXF3SIDH_SID6_POSITION                             0x3
#define _RXF3SIDH_SID6_SIZE                                 0x1
#define _RXF3SIDH_SID6_LENGTH                               0x1
#define _RXF3SIDH_SID6_MASK                                 0x8
#define _RXF3SIDH_SID7_POSN                                 0x4
#define _RXF3SIDH_SID7_POSITION                             0x4
#define _RXF3SIDH_SID7_SIZE                                 0x1
#define _RXF3SIDH_SID7_LENGTH                               0x1
#define _RXF3SIDH_SID7_MASK                                 0x10
#define _RXF3SIDH_SID8_POSN                                 0x5
#define _RXF3SIDH_SID8_POSITION                             0x5
#define _RXF3SIDH_SID8_SIZE                                 0x1
#define _RXF3SIDH_SID8_LENGTH                               0x1
#define _RXF3SIDH_SID8_MASK                                 0x20
#define _RXF3SIDH_SID9_POSN                                 0x6
#define _RXF3SIDH_SID9_POSITION                             0x6
#define _RXF3SIDH_SID9_SIZE                                 0x1
#define _RXF3SIDH_SID9_LENGTH                               0x1
#define _RXF3SIDH_SID9_MASK                                 0x40
#define _RXF3SIDH_SID10_POSN                                0x7
#define _RXF3SIDH_SID10_POSITION                            0x7
#define _RXF3SIDH_SID10_SIZE                                0x1
#define _RXF3SIDH_SID10_LENGTH                              0x1
#define _RXF3SIDH_SID10_MASK                                0x80
#define _RXF3SIDH_RXF3SID3_POSN                             0x0
#define _RXF3SIDH_RXF3SID3_POSITION                         0x0
#define _RXF3SIDH_RXF3SID3_SIZE                             0x1
#define _RXF3SIDH_RXF3SID3_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID3_MASK                             0x1
#define _RXF3SIDH_RXF3SID4_POSN                             0x1
#define _RXF3SIDH_RXF3SID4_POSITION                         0x1
#define _RXF3SIDH_RXF3SID4_SIZE                             0x1
#define _RXF3SIDH_RXF3SID4_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID4_MASK                             0x2
#define _RXF3SIDH_RXF3SID5_POSN                             0x2
#define _RXF3SIDH_RXF3SID5_POSITION                         0x2
#define _RXF3SIDH_RXF3SID5_SIZE                             0x1
#define _RXF3SIDH_RXF3SID5_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID5_MASK                             0x4
#define _RXF3SIDH_RXF3SID6_POSN                             0x3
#define _RXF3SIDH_RXF3SID6_POSITION                         0x3
#define _RXF3SIDH_RXF3SID6_SIZE                             0x1
#define _RXF3SIDH_RXF3SID6_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID6_MASK                             0x8
#define _RXF3SIDH_RXF3SID7_POSN                             0x4
#define _RXF3SIDH_RXF3SID7_POSITION                         0x4
#define _RXF3SIDH_RXF3SID7_SIZE                             0x1
#define _RXF3SIDH_RXF3SID7_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID7_MASK                             0x10
#define _RXF3SIDH_RXF3SID8_POSN                             0x5
#define _RXF3SIDH_RXF3SID8_POSITION                         0x5
#define _RXF3SIDH_RXF3SID8_SIZE                             0x1
#define _RXF3SIDH_RXF3SID8_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID8_MASK                             0x20
#define _RXF3SIDH_RXF3SID9_POSN                             0x6
#define _RXF3SIDH_RXF3SID9_POSITION                         0x6
#define _RXF3SIDH_RXF3SID9_SIZE                             0x1
#define _RXF3SIDH_RXF3SID9_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID9_MASK                             0x40
#define _RXF3SIDH_RXF3SID10_POSN                            0x7
#define _RXF3SIDH_RXF3SID10_POSITION                        0x7
#define _RXF3SIDH_RXF3SID10_SIZE                            0x1
#define _RXF3SIDH_RXF3SID10_LENGTH                          0x1
#define _RXF3SIDH_RXF3SID10_MASK                            0x80

// Register: RXF3SIDL
#define RXF3SIDL RXF3SIDL
extern volatile unsigned char           RXF3SIDL            __at(0xF0D);
#ifndef _LIB_BUILD
asm("RXF3SIDL equ 0F0Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXF3EID16              :1;
        unsigned RXF3EID17              :1;
        unsigned                        :1;
        unsigned RXF3EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF3SID0               :1;
        unsigned RXF3SID1               :1;
        unsigned RXF3SID2               :1;
    };
} RXF3SIDLbits_t;
extern volatile RXF3SIDLbits_t RXF3SIDLbits __at(0xF0D);
// bitfield macros
#define _RXF3SIDL_EID16_POSN                                0x0
#define _RXF3SIDL_EID16_POSITION                            0x0
#define _RXF3SIDL_EID16_SIZE                                0x1
#define _RXF3SIDL_EID16_LENGTH                              0x1
#define _RXF3SIDL_EID16_MASK                                0x1
#define _RXF3SIDL_EID17_POSN                                0x1
#define _RXF3SIDL_EID17_POSITION                            0x1
#define _RXF3SIDL_EID17_SIZE                                0x1
#define _RXF3SIDL_EID17_LENGTH                              0x1
#define _RXF3SIDL_EID17_MASK                                0x2
#define _RXF3SIDL_EXIDEN_POSN                               0x3
#define _RXF3SIDL_EXIDEN_POSITION                           0x3
#define _RXF3SIDL_EXIDEN_SIZE                               0x1
#define _RXF3SIDL_EXIDEN_LENGTH                             0x1
#define _RXF3SIDL_EXIDEN_MASK                               0x8
#define _RXF3SIDL_SID0_POSN                                 0x5
#define _RXF3SIDL_SID0_POSITION                             0x5
#define _RXF3SIDL_SID0_SIZE                                 0x1
#define _RXF3SIDL_SID0_LENGTH                               0x1
#define _RXF3SIDL_SID0_MASK                                 0x20
#define _RXF3SIDL_SID1_POSN                                 0x6
#define _RXF3SIDL_SID1_POSITION                             0x6
#define _RXF3SIDL_SID1_SIZE                                 0x1
#define _RXF3SIDL_SID1_LENGTH                               0x1
#define _RXF3SIDL_SID1_MASK                                 0x40
#define _RXF3SIDL_SID2_POSN                                 0x7
#define _RXF3SIDL_SID2_POSITION                             0x7
#define _RXF3SIDL_SID2_SIZE                                 0x1
#define _RXF3SIDL_SID2_LENGTH                               0x1
#define _RXF3SIDL_SID2_MASK                                 0x80
#define _RXF3SIDL_RXF3EID16_POSN                            0x0
#define _RXF3SIDL_RXF3EID16_POSITION                        0x0
#define _RXF3SIDL_RXF3EID16_SIZE                            0x1
#define _RXF3SIDL_RXF3EID16_LENGTH                          0x1
#define _RXF3SIDL_RXF3EID16_MASK                            0x1
#define _RXF3SIDL_RXF3EID17_POSN                            0x1
#define _RXF3SIDL_RXF3EID17_POSITION                        0x1
#define _RXF3SIDL_RXF3EID17_SIZE                            0x1
#define _RXF3SIDL_RXF3EID17_LENGTH                          0x1
#define _RXF3SIDL_RXF3EID17_MASK                            0x2
#define _RXF3SIDL_RXF3EXIDEN_POSN                           0x3
#define _RXF3SIDL_RXF3EXIDEN_POSITION                       0x3
#define _RXF3SIDL_RXF3EXIDEN_SIZE                           0x1
#define _RXF3SIDL_RXF3EXIDEN_LENGTH                         0x1
#define _RXF3SIDL_RXF3EXIDEN_MASK                           0x8
#define _RXF3SIDL_RXF3SID0_POSN                             0x5
#define _RXF3SIDL_RXF3SID0_POSITION                         0x5
#define _RXF3SIDL_RXF3SID0_SIZE                             0x1
#define _RXF3SIDL_RXF3SID0_LENGTH                           0x1
#define _RXF3SIDL_RXF3SID0_MASK                             0x20
#define _RXF3SIDL_RXF3SID1_POSN                             0x6
#define _RXF3SIDL_RXF3SID1_POSITION                         0x6
#define _RXF3SIDL_RXF3SID1_SIZE                             0x1
#define _RXF3SIDL_RXF3SID1_LENGTH                           0x1
#define _RXF3SIDL_RXF3SID1_MASK                             0x40
#define _RXF3SIDL_RXF3SID2_POSN                             0x7
#define _RXF3SIDL_RXF3SID2_POSITION                         0x7
#define _RXF3SIDL_RXF3SID2_SIZE                             0x1
#define _RXF3SIDL_RXF3SID2_LENGTH                           0x1
#define _RXF3SIDL_RXF3SID2_MASK                             0x80

// Register: RXF3EIDH
#define RXF3EIDH RXF3EIDH
extern volatile unsigned char           RXF3EIDH            __at(0xF0E);
#ifndef _LIB_BUILD
asm("RXF3EIDH equ 0F0Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF3EID8               :1;
        unsigned RXF3EID9               :1;
        unsigned RXF3EID10              :1;
        unsigned RXF3EID11              :1;
        unsigned RXF3EID12              :1;
        unsigned RXF3EID13              :1;
        unsigned RXF3EID14              :1;
        unsigned RXF3EID15              :1;
    };
} RXF3EIDHbits_t;
extern volatile RXF3EIDHbits_t RXF3EIDHbits __at(0xF0E);
// bitfield macros
#define _RXF3EIDH_EID8_POSN                                 0x0
#define _RXF3EIDH_EID8_POSITION                             0x0
#define _RXF3EIDH_EID8_SIZE                                 0x1
#define _RXF3EIDH_EID8_LENGTH                               0x1
#define _RXF3EIDH_EID8_MASK                                 0x1
#define _RXF3EIDH_EID9_POSN                                 0x1
#define _RXF3EIDH_EID9_POSITION                             0x1
#define _RXF3EIDH_EID9_SIZE                                 0x1
#define _RXF3EIDH_EID9_LENGTH                               0x1
#define _RXF3EIDH_EID9_MASK                                 0x2
#define _RXF3EIDH_EID10_POSN                                0x2
#define _RXF3EIDH_EID10_POSITION                            0x2
#define _RXF3EIDH_EID10_SIZE                                0x1
#define _RXF3EIDH_EID10_LENGTH                              0x1
#define _RXF3EIDH_EID10_MASK                                0x4
#define _RXF3EIDH_EID11_POSN                                0x3
#define _RXF3EIDH_EID11_POSITION                            0x3
#define _RXF3EIDH_EID11_SIZE                                0x1
#define _RXF3EIDH_EID11_LENGTH                              0x1
#define _RXF3EIDH_EID11_MASK                                0x8
#define _RXF3EIDH_EID12_POSN                                0x4
#define _RXF3EIDH_EID12_POSITION                            0x4
#define _RXF3EIDH_EID12_SIZE                                0x1
#define _RXF3EIDH_EID12_LENGTH                              0x1
#define _RXF3EIDH_EID12_MASK                                0x10
#define _RXF3EIDH_EID13_POSN                                0x5
#define _RXF3EIDH_EID13_POSITION                            0x5
#define _RXF3EIDH_EID13_SIZE                                0x1
#define _RXF3EIDH_EID13_LENGTH                              0x1
#define _RXF3EIDH_EID13_MASK                                0x20
#define _RXF3EIDH_EID14_POSN                                0x6
#define _RXF3EIDH_EID14_POSITION                            0x6
#define _RXF3EIDH_EID14_SIZE                                0x1
#define _RXF3EIDH_EID14_LENGTH                              0x1
#define _RXF3EIDH_EID14_MASK                                0x40
#define _RXF3EIDH_EID15_POSN                                0x7
#define _RXF3EIDH_EID15_POSITION                            0x7
#define _RXF3EIDH_EID15_SIZE                                0x1
#define _RXF3EIDH_EID15_LENGTH                              0x1
#define _RXF3EIDH_EID15_MASK                                0x80
#define _RXF3EIDH_RXF3EID8_POSN                             0x0
#define _RXF3EIDH_RXF3EID8_POSITION                         0x0
#define _RXF3EIDH_RXF3EID8_SIZE                             0x1
#define _RXF3EIDH_RXF3EID8_LENGTH                           0x1
#define _RXF3EIDH_RXF3EID8_MASK                             0x1
#define _RXF3EIDH_RXF3EID9_POSN                             0x1
#define _RXF3EIDH_RXF3EID9_POSITION                         0x1
#define _RXF3EIDH_RXF3EID9_SIZE                             0x1
#define _RXF3EIDH_RXF3EID9_LENGTH                           0x1
#define _RXF3EIDH_RXF3EID9_MASK                             0x2
#define _RXF3EIDH_RXF3EID10_POSN                            0x2
#define _RXF3EIDH_RXF3EID10_POSITION                        0x2
#define _RXF3EIDH_RXF3EID10_SIZE                            0x1
#define _RXF3EIDH_RXF3EID10_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID10_MASK                            0x4
#define _RXF3EIDH_RXF3EID11_POSN                            0x3
#define _RXF3EIDH_RXF3EID11_POSITION                        0x3
#define _RXF3EIDH_RXF3EID11_SIZE                            0x1
#define _RXF3EIDH_RXF3EID11_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID11_MASK                            0x8
#define _RXF3EIDH_RXF3EID12_POSN                            0x4
#define _RXF3EIDH_RXF3EID12_POSITION                        0x4
#define _RXF3EIDH_RXF3EID12_SIZE                            0x1
#define _RXF3EIDH_RXF3EID12_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID12_MASK                            0x10
#define _RXF3EIDH_RXF3EID13_POSN                            0x5
#define _RXF3EIDH_RXF3EID13_POSITION                        0x5
#define _RXF3EIDH_RXF3EID13_SIZE                            0x1
#define _RXF3EIDH_RXF3EID13_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID13_MASK                            0x20
#define _RXF3EIDH_RXF3EID14_POSN                            0x6
#define _RXF3EIDH_RXF3EID14_POSITION                        0x6
#define _RXF3EIDH_RXF3EID14_SIZE                            0x1
#define _RXF3EIDH_RXF3EID14_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID14_MASK                            0x40
#define _RXF3EIDH_RXF3EID15_POSN                            0x7
#define _RXF3EIDH_RXF3EID15_POSITION                        0x7
#define _RXF3EIDH_RXF3EID15_SIZE                            0x1
#define _RXF3EIDH_RXF3EID15_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID15_MASK                            0x80

// Register: RXF3EIDL
#define RXF3EIDL RXF3EIDL
extern volatile unsigned char           RXF3EIDL            __at(0xF0F);
#ifndef _LIB_BUILD
asm("RXF3EIDL equ 0F0Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF3EID0               :1;
        unsigned RXF3EID1               :1;
        unsigned RXF3EID2               :1;
        unsigned RXF3EID3               :1;
        unsigned RXF3EID4               :1;
        unsigned RXF3EID5               :1;
        unsigned RXF3EID6               :1;
        unsigned RXF3EID7               :1;
    };
} RXF3EIDLbits_t;
extern volatile RXF3EIDLbits_t RXF3EIDLbits __at(0xF0F);
// bitfield macros
#define _RXF3EIDL_EID0_POSN                                 0x0
#define _RXF3EIDL_EID0_POSITION                             0x0
#define _RXF3EIDL_EID0_SIZE                                 0x1
#define _RXF3EIDL_EID0_LENGTH                               0x1
#define _RXF3EIDL_EID0_MASK                                 0x1
#define _RXF3EIDL_EID1_POSN                                 0x1
#define _RXF3EIDL_EID1_POSITION                             0x1
#define _RXF3EIDL_EID1_SIZE                                 0x1
#define _RXF3EIDL_EID1_LENGTH                               0x1
#define _RXF3EIDL_EID1_MASK                                 0x2
#define _RXF3EIDL_EID2_POSN                                 0x2
#define _RXF3EIDL_EID2_POSITION                             0x2
#define _RXF3EIDL_EID2_SIZE                                 0x1
#define _RXF3EIDL_EID2_LENGTH                               0x1
#define _RXF3EIDL_EID2_MASK                                 0x4
#define _RXF3EIDL_EID3_POSN                                 0x3
#define _RXF3EIDL_EID3_POSITION                             0x3
#define _RXF3EIDL_EID3_SIZE                                 0x1
#define _RXF3EIDL_EID3_LENGTH                               0x1
#define _RXF3EIDL_EID3_MASK                                 0x8
#define _RXF3EIDL_EID4_POSN                                 0x4
#define _RXF3EIDL_EID4_POSITION                             0x4
#define _RXF3EIDL_EID4_SIZE                                 0x1
#define _RXF3EIDL_EID4_LENGTH                               0x1
#define _RXF3EIDL_EID4_MASK                                 0x10
#define _RXF3EIDL_EID5_POSN                                 0x5
#define _RXF3EIDL_EID5_POSITION                             0x5
#define _RXF3EIDL_EID5_SIZE                                 0x1
#define _RXF3EIDL_EID5_LENGTH                               0x1
#define _RXF3EIDL_EID5_MASK                                 0x20
#define _RXF3EIDL_EID6_POSN                                 0x6
#define _RXF3EIDL_EID6_POSITION                             0x6
#define _RXF3EIDL_EID6_SIZE                                 0x1
#define _RXF3EIDL_EID6_LENGTH                               0x1
#define _RXF3EIDL_EID6_MASK                                 0x40
#define _RXF3EIDL_EID7_POSN                                 0x7
#define _RXF3EIDL_EID7_POSITION                             0x7
#define _RXF3EIDL_EID7_SIZE                                 0x1
#define _RXF3EIDL_EID7_LENGTH                               0x1
#define _RXF3EIDL_EID7_MASK                                 0x80
#define _RXF3EIDL_RXF3EID0_POSN                             0x0
#define _RXF3EIDL_RXF3EID0_POSITION                         0x0
#define _RXF3EIDL_RXF3EID0_SIZE                             0x1
#define _RXF3EIDL_RXF3EID0_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID0_MASK                             0x1
#define _RXF3EIDL_RXF3EID1_POSN                             0x1
#define _RXF3EIDL_RXF3EID1_POSITION                         0x1
#define _RXF3EIDL_RXF3EID1_SIZE                             0x1
#define _RXF3EIDL_RXF3EID1_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID1_MASK                             0x2
#define _RXF3EIDL_RXF3EID2_POSN                             0x2
#define _RXF3EIDL_RXF3EID2_POSITION                         0x2
#define _RXF3EIDL_RXF3EID2_SIZE                             0x1
#define _RXF3EIDL_RXF3EID2_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID2_MASK                             0x4
#define _RXF3EIDL_RXF3EID3_POSN                             0x3
#define _RXF3EIDL_RXF3EID3_POSITION                         0x3
#define _RXF3EIDL_RXF3EID3_SIZE                             0x1
#define _RXF3EIDL_RXF3EID3_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID3_MASK                             0x8
#define _RXF3EIDL_RXF3EID4_POSN                             0x4
#define _RXF3EIDL_RXF3EID4_POSITION                         0x4
#define _RXF3EIDL_RXF3EID4_SIZE                             0x1
#define _RXF3EIDL_RXF3EID4_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID4_MASK                             0x10
#define _RXF3EIDL_RXF3EID5_POSN                             0x5
#define _RXF3EIDL_RXF3EID5_POSITION                         0x5
#define _RXF3EIDL_RXF3EID5_SIZE                             0x1
#define _RXF3EIDL_RXF3EID5_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID5_MASK                             0x20
#define _RXF3EIDL_RXF3EID6_POSN                             0x6
#define _RXF3EIDL_RXF3EID6_POSITION                         0x6
#define _RXF3EIDL_RXF3EID6_SIZE                             0x1
#define _RXF3EIDL_RXF3EID6_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID6_MASK                             0x40
#define _RXF3EIDL_RXF3EID7_POSN                             0x7
#define _RXF3EIDL_RXF3EID7_POSITION                         0x7
#define _RXF3EIDL_RXF3EID7_SIZE                             0x1
#define _RXF3EIDL_RXF3EID7_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID7_MASK                             0x80

// Register: RXF4SIDH
#define RXF4SIDH RXF4SIDH
extern volatile unsigned char           RXF4SIDH            __at(0xF10);
#ifndef _LIB_BUILD
asm("RXF4SIDH equ 0F10h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF4SID3               :1;
        unsigned RXF4SID4               :1;
        unsigned RXF4SID5               :1;
        unsigned RXF4SID6               :1;
        unsigned RXF4SID7               :1;
        unsigned RXF4SID8               :1;
        unsigned RXF4SID9               :1;
        unsigned RXF4SID10              :1;
    };
} RXF4SIDHbits_t;
extern volatile RXF4SIDHbits_t RXF4SIDHbits __at(0xF10);
// bitfield macros
#define _RXF4SIDH_SID3_POSN                                 0x0
#define _RXF4SIDH_SID3_POSITION                             0x0
#define _RXF4SIDH_SID3_SIZE                                 0x1
#define _RXF4SIDH_SID3_LENGTH                               0x1
#define _RXF4SIDH_SID3_MASK                                 0x1
#define _RXF4SIDH_SID4_POSN                                 0x1
#define _RXF4SIDH_SID4_POSITION                             0x1
#define _RXF4SIDH_SID4_SIZE                                 0x1
#define _RXF4SIDH_SID4_LENGTH                               0x1
#define _RXF4SIDH_SID4_MASK                                 0x2
#define _RXF4SIDH_SID5_POSN                                 0x2
#define _RXF4SIDH_SID5_POSITION                             0x2
#define _RXF4SIDH_SID5_SIZE                                 0x1
#define _RXF4SIDH_SID5_LENGTH                               0x1
#define _RXF4SIDH_SID5_MASK                                 0x4
#define _RXF4SIDH_SID6_POSN                                 0x3
#define _RXF4SIDH_SID6_POSITION                             0x3
#define _RXF4SIDH_SID6_SIZE                                 0x1
#define _RXF4SIDH_SID6_LENGTH                               0x1
#define _RXF4SIDH_SID6_MASK                                 0x8
#define _RXF4SIDH_SID7_POSN                                 0x4
#define _RXF4SIDH_SID7_POSITION                             0x4
#define _RXF4SIDH_SID7_SIZE                                 0x1
#define _RXF4SIDH_SID7_LENGTH                               0x1
#define _RXF4SIDH_SID7_MASK                                 0x10
#define _RXF4SIDH_SID8_POSN                                 0x5
#define _RXF4SIDH_SID8_POSITION                             0x5
#define _RXF4SIDH_SID8_SIZE                                 0x1
#define _RXF4SIDH_SID8_LENGTH                               0x1
#define _RXF4SIDH_SID8_MASK                                 0x20
#define _RXF4SIDH_SID9_POSN                                 0x6
#define _RXF4SIDH_SID9_POSITION                             0x6
#define _RXF4SIDH_SID9_SIZE                                 0x1
#define _RXF4SIDH_SID9_LENGTH                               0x1
#define _RXF4SIDH_SID9_MASK                                 0x40
#define _RXF4SIDH_SID10_POSN                                0x7
#define _RXF4SIDH_SID10_POSITION                            0x7
#define _RXF4SIDH_SID10_SIZE                                0x1
#define _RXF4SIDH_SID10_LENGTH                              0x1
#define _RXF4SIDH_SID10_MASK                                0x80
#define _RXF4SIDH_RXF4SID3_POSN                             0x0
#define _RXF4SIDH_RXF4SID3_POSITION                         0x0
#define _RXF4SIDH_RXF4SID3_SIZE                             0x1
#define _RXF4SIDH_RXF4SID3_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID3_MASK                             0x1
#define _RXF4SIDH_RXF4SID4_POSN                             0x1
#define _RXF4SIDH_RXF4SID4_POSITION                         0x1
#define _RXF4SIDH_RXF4SID4_SIZE                             0x1
#define _RXF4SIDH_RXF4SID4_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID4_MASK                             0x2
#define _RXF4SIDH_RXF4SID5_POSN                             0x2
#define _RXF4SIDH_RXF4SID5_POSITION                         0x2
#define _RXF4SIDH_RXF4SID5_SIZE                             0x1
#define _RXF4SIDH_RXF4SID5_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID5_MASK                             0x4
#define _RXF4SIDH_RXF4SID6_POSN                             0x3
#define _RXF4SIDH_RXF4SID6_POSITION                         0x3
#define _RXF4SIDH_RXF4SID6_SIZE                             0x1
#define _RXF4SIDH_RXF4SID6_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID6_MASK                             0x8
#define _RXF4SIDH_RXF4SID7_POSN                             0x4
#define _RXF4SIDH_RXF4SID7_POSITION                         0x4
#define _RXF4SIDH_RXF4SID7_SIZE                             0x1
#define _RXF4SIDH_RXF4SID7_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID7_MASK                             0x10
#define _RXF4SIDH_RXF4SID8_POSN                             0x5
#define _RXF4SIDH_RXF4SID8_POSITION                         0x5
#define _RXF4SIDH_RXF4SID8_SIZE                             0x1
#define _RXF4SIDH_RXF4SID8_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID8_MASK                             0x20
#define _RXF4SIDH_RXF4SID9_POSN                             0x6
#define _RXF4SIDH_RXF4SID9_POSITION                         0x6
#define _RXF4SIDH_RXF4SID9_SIZE                             0x1
#define _RXF4SIDH_RXF4SID9_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID9_MASK                             0x40
#define _RXF4SIDH_RXF4SID10_POSN                            0x7
#define _RXF4SIDH_RXF4SID10_POSITION                        0x7
#define _RXF4SIDH_RXF4SID10_SIZE                            0x1
#define _RXF4SIDH_RXF4SID10_LENGTH                          0x1
#define _RXF4SIDH_RXF4SID10_MASK                            0x80

// Register: RXF4SIDL
#define RXF4SIDL RXF4SIDL
extern volatile unsigned char           RXF4SIDL            __at(0xF11);
#ifndef _LIB_BUILD
asm("RXF4SIDL equ 0F11h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXF4EID16              :1;
        unsigned RXF4EID17              :1;
        unsigned                        :1;
        unsigned RXF4EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF4SID0               :1;
        unsigned RXF4SID1               :1;
        unsigned RXF4SID2               :1;
    };
} RXF4SIDLbits_t;
extern volatile RXF4SIDLbits_t RXF4SIDLbits __at(0xF11);
// bitfield macros
#define _RXF4SIDL_EID16_POSN                                0x0
#define _RXF4SIDL_EID16_POSITION                            0x0
#define _RXF4SIDL_EID16_SIZE                                0x1
#define _RXF4SIDL_EID16_LENGTH                              0x1
#define _RXF4SIDL_EID16_MASK                                0x1
#define _RXF4SIDL_EID17_POSN                                0x1
#define _RXF4SIDL_EID17_POSITION                            0x1
#define _RXF4SIDL_EID17_SIZE                                0x1
#define _RXF4SIDL_EID17_LENGTH                              0x1
#define _RXF4SIDL_EID17_MASK                                0x2
#define _RXF4SIDL_EXIDEN_POSN                               0x3
#define _RXF4SIDL_EXIDEN_POSITION                           0x3
#define _RXF4SIDL_EXIDEN_SIZE                               0x1
#define _RXF4SIDL_EXIDEN_LENGTH                             0x1
#define _RXF4SIDL_EXIDEN_MASK                               0x8
#define _RXF4SIDL_SID0_POSN                                 0x5
#define _RXF4SIDL_SID0_POSITION                             0x5
#define _RXF4SIDL_SID0_SIZE                                 0x1
#define _RXF4SIDL_SID0_LENGTH                               0x1
#define _RXF4SIDL_SID0_MASK                                 0x20
#define _RXF4SIDL_SID1_POSN                                 0x6
#define _RXF4SIDL_SID1_POSITION                             0x6
#define _RXF4SIDL_SID1_SIZE                                 0x1
#define _RXF4SIDL_SID1_LENGTH                               0x1
#define _RXF4SIDL_SID1_MASK                                 0x40
#define _RXF4SIDL_SID2_POSN                                 0x7
#define _RXF4SIDL_SID2_POSITION                             0x7
#define _RXF4SIDL_SID2_SIZE                                 0x1
#define _RXF4SIDL_SID2_LENGTH                               0x1
#define _RXF4SIDL_SID2_MASK                                 0x80
#define _RXF4SIDL_RXF4EID16_POSN                            0x0
#define _RXF4SIDL_RXF4EID16_POSITION                        0x0
#define _RXF4SIDL_RXF4EID16_SIZE                            0x1
#define _RXF4SIDL_RXF4EID16_LENGTH                          0x1
#define _RXF4SIDL_RXF4EID16_MASK                            0x1
#define _RXF4SIDL_RXF4EID17_POSN                            0x1
#define _RXF4SIDL_RXF4EID17_POSITION                        0x1
#define _RXF4SIDL_RXF4EID17_SIZE                            0x1
#define _RXF4SIDL_RXF4EID17_LENGTH                          0x1
#define _RXF4SIDL_RXF4EID17_MASK                            0x2
#define _RXF4SIDL_RXF4EXIDEN_POSN                           0x3
#define _RXF4SIDL_RXF4EXIDEN_POSITION                       0x3
#define _RXF4SIDL_RXF4EXIDEN_SIZE                           0x1
#define _RXF4SIDL_RXF4EXIDEN_LENGTH                         0x1
#define _RXF4SIDL_RXF4EXIDEN_MASK                           0x8
#define _RXF4SIDL_RXF4SID0_POSN                             0x5
#define _RXF4SIDL_RXF4SID0_POSITION                         0x5
#define _RXF4SIDL_RXF4SID0_SIZE                             0x1
#define _RXF4SIDL_RXF4SID0_LENGTH                           0x1
#define _RXF4SIDL_RXF4SID0_MASK                             0x20
#define _RXF4SIDL_RXF4SID1_POSN                             0x6
#define _RXF4SIDL_RXF4SID1_POSITION                         0x6
#define _RXF4SIDL_RXF4SID1_SIZE                             0x1
#define _RXF4SIDL_RXF4SID1_LENGTH                           0x1
#define _RXF4SIDL_RXF4SID1_MASK                             0x40
#define _RXF4SIDL_RXF4SID2_POSN                             0x7
#define _RXF4SIDL_RXF4SID2_POSITION                         0x7
#define _RXF4SIDL_RXF4SID2_SIZE                             0x1
#define _RXF4SIDL_RXF4SID2_LENGTH                           0x1
#define _RXF4SIDL_RXF4SID2_MASK                             0x80

// Register: RXF4EIDH
#define RXF4EIDH RXF4EIDH
extern volatile unsigned char           RXF4EIDH            __at(0xF12);
#ifndef _LIB_BUILD
asm("RXF4EIDH equ 0F12h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF4EID8               :1;
        unsigned RXF4EID9               :1;
        unsigned RXF4EID10              :1;
        unsigned RXF4EID11              :1;
        unsigned RXF4EID12              :1;
        unsigned RXF4EID13              :1;
        unsigned RXF4EID14              :1;
        unsigned RXF4EID15              :1;
    };
} RXF4EIDHbits_t;
extern volatile RXF4EIDHbits_t RXF4EIDHbits __at(0xF12);
// bitfield macros
#define _RXF4EIDH_EID8_POSN                                 0x0
#define _RXF4EIDH_EID8_POSITION                             0x0
#define _RXF4EIDH_EID8_SIZE                                 0x1
#define _RXF4EIDH_EID8_LENGTH                               0x1
#define _RXF4EIDH_EID8_MASK                                 0x1
#define _RXF4EIDH_EID9_POSN                                 0x1
#define _RXF4EIDH_EID9_POSITION                             0x1
#define _RXF4EIDH_EID9_SIZE                                 0x1
#define _RXF4EIDH_EID9_LENGTH                               0x1
#define _RXF4EIDH_EID9_MASK                                 0x2
#define _RXF4EIDH_EID10_POSN                                0x2
#define _RXF4EIDH_EID10_POSITION                            0x2
#define _RXF4EIDH_EID10_SIZE                                0x1
#define _RXF4EIDH_EID10_LENGTH                              0x1
#define _RXF4EIDH_EID10_MASK                                0x4
#define _RXF4EIDH_EID11_POSN                                0x3
#define _RXF4EIDH_EID11_POSITION                            0x3
#define _RXF4EIDH_EID11_SIZE                                0x1
#define _RXF4EIDH_EID11_LENGTH                              0x1
#define _RXF4EIDH_EID11_MASK                                0x8
#define _RXF4EIDH_EID12_POSN                                0x4
#define _RXF4EIDH_EID12_POSITION                            0x4
#define _RXF4EIDH_EID12_SIZE                                0x1
#define _RXF4EIDH_EID12_LENGTH                              0x1
#define _RXF4EIDH_EID12_MASK                                0x10
#define _RXF4EIDH_EID13_POSN                                0x5
#define _RXF4EIDH_EID13_POSITION                            0x5
#define _RXF4EIDH_EID13_SIZE                                0x1
#define _RXF4EIDH_EID13_LENGTH                              0x1
#define _RXF4EIDH_EID13_MASK                                0x20
#define _RXF4EIDH_EID14_POSN                                0x6
#define _RXF4EIDH_EID14_POSITION                            0x6
#define _RXF4EIDH_EID14_SIZE                                0x1
#define _RXF4EIDH_EID14_LENGTH                              0x1
#define _RXF4EIDH_EID14_MASK                                0x40
#define _RXF4EIDH_EID15_POSN                                0x7
#define _RXF4EIDH_EID15_POSITION                            0x7
#define _RXF4EIDH_EID15_SIZE                                0x1
#define _RXF4EIDH_EID15_LENGTH                              0x1
#define _RXF4EIDH_EID15_MASK                                0x80
#define _RXF4EIDH_RXF4EID8_POSN                             0x0
#define _RXF4EIDH_RXF4EID8_POSITION                         0x0
#define _RXF4EIDH_RXF4EID8_SIZE                             0x1
#define _RXF4EIDH_RXF4EID8_LENGTH                           0x1
#define _RXF4EIDH_RXF4EID8_MASK                             0x1
#define _RXF4EIDH_RXF4EID9_POSN                             0x1
#define _RXF4EIDH_RXF4EID9_POSITION                         0x1
#define _RXF4EIDH_RXF4EID9_SIZE                             0x1
#define _RXF4EIDH_RXF4EID9_LENGTH                           0x1
#define _RXF4EIDH_RXF4EID9_MASK                             0x2
#define _RXF4EIDH_RXF4EID10_POSN                            0x2
#define _RXF4EIDH_RXF4EID10_POSITION                        0x2
#define _RXF4EIDH_RXF4EID10_SIZE                            0x1
#define _RXF4EIDH_RXF4EID10_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID10_MASK                            0x4
#define _RXF4EIDH_RXF4EID11_POSN                            0x3
#define _RXF4EIDH_RXF4EID11_POSITION                        0x3
#define _RXF4EIDH_RXF4EID11_SIZE                            0x1
#define _RXF4EIDH_RXF4EID11_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID11_MASK                            0x8
#define _RXF4EIDH_RXF4EID12_POSN                            0x4
#define _RXF4EIDH_RXF4EID12_POSITION                        0x4
#define _RXF4EIDH_RXF4EID12_SIZE                            0x1
#define _RXF4EIDH_RXF4EID12_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID12_MASK                            0x10
#define _RXF4EIDH_RXF4EID13_POSN                            0x5
#define _RXF4EIDH_RXF4EID13_POSITION                        0x5
#define _RXF4EIDH_RXF4EID13_SIZE                            0x1
#define _RXF4EIDH_RXF4EID13_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID13_MASK                            0x20
#define _RXF4EIDH_RXF4EID14_POSN                            0x6
#define _RXF4EIDH_RXF4EID14_POSITION                        0x6
#define _RXF4EIDH_RXF4EID14_SIZE                            0x1
#define _RXF4EIDH_RXF4EID14_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID14_MASK                            0x40
#define _RXF4EIDH_RXF4EID15_POSN                            0x7
#define _RXF4EIDH_RXF4EID15_POSITION                        0x7
#define _RXF4EIDH_RXF4EID15_SIZE                            0x1
#define _RXF4EIDH_RXF4EID15_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID15_MASK                            0x80

// Register: RXF4EIDL
#define RXF4EIDL RXF4EIDL
extern volatile unsigned char           RXF4EIDL            __at(0xF13);
#ifndef _LIB_BUILD
asm("RXF4EIDL equ 0F13h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF4EID0               :1;
        unsigned RXF4EID1               :1;
        unsigned RXF4EID2               :1;
        unsigned RXF4EID3               :1;
        unsigned RXF4EID4               :1;
        unsigned RXF4EID5               :1;
        unsigned RXF4EID6               :1;
        unsigned RXF4EID7               :1;
    };
} RXF4EIDLbits_t;
extern volatile RXF4EIDLbits_t RXF4EIDLbits __at(0xF13);
// bitfield macros
#define _RXF4EIDL_EID0_POSN                                 0x0
#define _RXF4EIDL_EID0_POSITION                             0x0
#define _RXF4EIDL_EID0_SIZE                                 0x1
#define _RXF4EIDL_EID0_LENGTH                               0x1
#define _RXF4EIDL_EID0_MASK                                 0x1
#define _RXF4EIDL_EID1_POSN                                 0x1
#define _RXF4EIDL_EID1_POSITION                             0x1
#define _RXF4EIDL_EID1_SIZE                                 0x1
#define _RXF4EIDL_EID1_LENGTH                               0x1
#define _RXF4EIDL_EID1_MASK                                 0x2
#define _RXF4EIDL_EID2_POSN                                 0x2
#define _RXF4EIDL_EID2_POSITION                             0x2
#define _RXF4EIDL_EID2_SIZE                                 0x1
#define _RXF4EIDL_EID2_LENGTH                               0x1
#define _RXF4EIDL_EID2_MASK                                 0x4
#define _RXF4EIDL_EID3_POSN                                 0x3
#define _RXF4EIDL_EID3_POSITION                             0x3
#define _RXF4EIDL_EID3_SIZE                                 0x1
#define _RXF4EIDL_EID3_LENGTH                               0x1
#define _RXF4EIDL_EID3_MASK                                 0x8
#define _RXF4EIDL_EID4_POSN                                 0x4
#define _RXF4EIDL_EID4_POSITION                             0x4
#define _RXF4EIDL_EID4_SIZE                                 0x1
#define _RXF4EIDL_EID4_LENGTH                               0x1
#define _RXF4EIDL_EID4_MASK                                 0x10
#define _RXF4EIDL_EID5_POSN                                 0x5
#define _RXF4EIDL_EID5_POSITION                             0x5
#define _RXF4EIDL_EID5_SIZE                                 0x1
#define _RXF4EIDL_EID5_LENGTH                               0x1
#define _RXF4EIDL_EID5_MASK                                 0x20
#define _RXF4EIDL_EID6_POSN                                 0x6
#define _RXF4EIDL_EID6_POSITION                             0x6
#define _RXF4EIDL_EID6_SIZE                                 0x1
#define _RXF4EIDL_EID6_LENGTH                               0x1
#define _RXF4EIDL_EID6_MASK                                 0x40
#define _RXF4EIDL_EID7_POSN                                 0x7
#define _RXF4EIDL_EID7_POSITION                             0x7
#define _RXF4EIDL_EID7_SIZE                                 0x1
#define _RXF4EIDL_EID7_LENGTH                               0x1
#define _RXF4EIDL_EID7_MASK                                 0x80
#define _RXF4EIDL_RXF4EID0_POSN                             0x0
#define _RXF4EIDL_RXF4EID0_POSITION                         0x0
#define _RXF4EIDL_RXF4EID0_SIZE                             0x1
#define _RXF4EIDL_RXF4EID0_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID0_MASK                             0x1
#define _RXF4EIDL_RXF4EID1_POSN                             0x1
#define _RXF4EIDL_RXF4EID1_POSITION                         0x1
#define _RXF4EIDL_RXF4EID1_SIZE                             0x1
#define _RXF4EIDL_RXF4EID1_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID1_MASK                             0x2
#define _RXF4EIDL_RXF4EID2_POSN                             0x2
#define _RXF4EIDL_RXF4EID2_POSITION                         0x2
#define _RXF4EIDL_RXF4EID2_SIZE                             0x1
#define _RXF4EIDL_RXF4EID2_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID2_MASK                             0x4
#define _RXF4EIDL_RXF4EID3_POSN                             0x3
#define _RXF4EIDL_RXF4EID3_POSITION                         0x3
#define _RXF4EIDL_RXF4EID3_SIZE                             0x1
#define _RXF4EIDL_RXF4EID3_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID3_MASK                             0x8
#define _RXF4EIDL_RXF4EID4_POSN                             0x4
#define _RXF4EIDL_RXF4EID4_POSITION                         0x4
#define _RXF4EIDL_RXF4EID4_SIZE                             0x1
#define _RXF4EIDL_RXF4EID4_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID4_MASK                             0x10
#define _RXF4EIDL_RXF4EID5_POSN                             0x5
#define _RXF4EIDL_RXF4EID5_POSITION                         0x5
#define _RXF4EIDL_RXF4EID5_SIZE                             0x1
#define _RXF4EIDL_RXF4EID5_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID5_MASK                             0x20
#define _RXF4EIDL_RXF4EID6_POSN                             0x6
#define _RXF4EIDL_RXF4EID6_POSITION                         0x6
#define _RXF4EIDL_RXF4EID6_SIZE                             0x1
#define _RXF4EIDL_RXF4EID6_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID6_MASK                             0x40
#define _RXF4EIDL_RXF4EID7_POSN                             0x7
#define _RXF4EIDL_RXF4EID7_POSITION                         0x7
#define _RXF4EIDL_RXF4EID7_SIZE                             0x1
#define _RXF4EIDL_RXF4EID7_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID7_MASK                             0x80

// Register: RXF5SIDH
#define RXF5SIDH RXF5SIDH
extern volatile unsigned char           RXF5SIDH            __at(0xF14);
#ifndef _LIB_BUILD
asm("RXF5SIDH equ 0F14h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF5SID3               :1;
        unsigned RXF5SID4               :1;
        unsigned RXF5SID5               :1;
        unsigned RXF5SID6               :1;
        unsigned RXF5SID7               :1;
        unsigned RXF5SID8               :1;
        unsigned RXF5SID9               :1;
        unsigned RXF5SID10              :1;
    };
} RXF5SIDHbits_t;
extern volatile RXF5SIDHbits_t RXF5SIDHbits __at(0xF14);
// bitfield macros
#define _RXF5SIDH_SID3_POSN                                 0x0
#define _RXF5SIDH_SID3_POSITION                             0x0
#define _RXF5SIDH_SID3_SIZE                                 0x1
#define _RXF5SIDH_SID3_LENGTH                               0x1
#define _RXF5SIDH_SID3_MASK                                 0x1
#define _RXF5SIDH_SID4_POSN                                 0x1
#define _RXF5SIDH_SID4_POSITION                             0x1
#define _RXF5SIDH_SID4_SIZE                                 0x1
#define _RXF5SIDH_SID4_LENGTH                               0x1
#define _RXF5SIDH_SID4_MASK                                 0x2
#define _RXF5SIDH_SID5_POSN                                 0x2
#define _RXF5SIDH_SID5_POSITION                             0x2
#define _RXF5SIDH_SID5_SIZE                                 0x1
#define _RXF5SIDH_SID5_LENGTH                               0x1
#define _RXF5SIDH_SID5_MASK                                 0x4
#define _RXF5SIDH_SID6_POSN                                 0x3
#define _RXF5SIDH_SID6_POSITION                             0x3
#define _RXF5SIDH_SID6_SIZE                                 0x1
#define _RXF5SIDH_SID6_LENGTH                               0x1
#define _RXF5SIDH_SID6_MASK                                 0x8
#define _RXF5SIDH_SID7_POSN                                 0x4
#define _RXF5SIDH_SID7_POSITION                             0x4
#define _RXF5SIDH_SID7_SIZE                                 0x1
#define _RXF5SIDH_SID7_LENGTH                               0x1
#define _RXF5SIDH_SID7_MASK                                 0x10
#define _RXF5SIDH_SID8_POSN                                 0x5
#define _RXF5SIDH_SID8_POSITION                             0x5
#define _RXF5SIDH_SID8_SIZE                                 0x1
#define _RXF5SIDH_SID8_LENGTH                               0x1
#define _RXF5SIDH_SID8_MASK                                 0x20
#define _RXF5SIDH_SID9_POSN                                 0x6
#define _RXF5SIDH_SID9_POSITION                             0x6
#define _RXF5SIDH_SID9_SIZE                                 0x1
#define _RXF5SIDH_SID9_LENGTH                               0x1
#define _RXF5SIDH_SID9_MASK                                 0x40
#define _RXF5SIDH_SID10_POSN                                0x7
#define _RXF5SIDH_SID10_POSITION                            0x7
#define _RXF5SIDH_SID10_SIZE                                0x1
#define _RXF5SIDH_SID10_LENGTH                              0x1
#define _RXF5SIDH_SID10_MASK                                0x80
#define _RXF5SIDH_RXF5SID3_POSN                             0x0
#define _RXF5SIDH_RXF5SID3_POSITION                         0x0
#define _RXF5SIDH_RXF5SID3_SIZE                             0x1
#define _RXF5SIDH_RXF5SID3_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID3_MASK                             0x1
#define _RXF5SIDH_RXF5SID4_POSN                             0x1
#define _RXF5SIDH_RXF5SID4_POSITION                         0x1
#define _RXF5SIDH_RXF5SID4_SIZE                             0x1
#define _RXF5SIDH_RXF5SID4_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID4_MASK                             0x2
#define _RXF5SIDH_RXF5SID5_POSN                             0x2
#define _RXF5SIDH_RXF5SID5_POSITION                         0x2
#define _RXF5SIDH_RXF5SID5_SIZE                             0x1
#define _RXF5SIDH_RXF5SID5_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID5_MASK                             0x4
#define _RXF5SIDH_RXF5SID6_POSN                             0x3
#define _RXF5SIDH_RXF5SID6_POSITION                         0x3
#define _RXF5SIDH_RXF5SID6_SIZE                             0x1
#define _RXF5SIDH_RXF5SID6_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID6_MASK                             0x8
#define _RXF5SIDH_RXF5SID7_POSN                             0x4
#define _RXF5SIDH_RXF5SID7_POSITION                         0x4
#define _RXF5SIDH_RXF5SID7_SIZE                             0x1
#define _RXF5SIDH_RXF5SID7_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID7_MASK                             0x10
#define _RXF5SIDH_RXF5SID8_POSN                             0x5
#define _RXF5SIDH_RXF5SID8_POSITION                         0x5
#define _RXF5SIDH_RXF5SID8_SIZE                             0x1
#define _RXF5SIDH_RXF5SID8_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID8_MASK                             0x20
#define _RXF5SIDH_RXF5SID9_POSN                             0x6
#define _RXF5SIDH_RXF5SID9_POSITION                         0x6
#define _RXF5SIDH_RXF5SID9_SIZE                             0x1
#define _RXF5SIDH_RXF5SID9_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID9_MASK                             0x40
#define _RXF5SIDH_RXF5SID10_POSN                            0x7
#define _RXF5SIDH_RXF5SID10_POSITION                        0x7
#define _RXF5SIDH_RXF5SID10_SIZE                            0x1
#define _RXF5SIDH_RXF5SID10_LENGTH                          0x1
#define _RXF5SIDH_RXF5SID10_MASK                            0x80

// Register: RXF5SIDL
#define RXF5SIDL RXF5SIDL
extern volatile unsigned char           RXF5SIDL            __at(0xF15);
#ifndef _LIB_BUILD
asm("RXF5SIDL equ 0F15h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXF5EID16              :1;
        unsigned RXF5EID17              :1;
        unsigned                        :1;
        unsigned RXF5EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF5SID0               :1;
        unsigned RXF5SID1               :1;
        unsigned RXF5SID2               :1;
    };
} RXF5SIDLbits_t;
extern volatile RXF5SIDLbits_t RXF5SIDLbits __at(0xF15);
// bitfield macros
#define _RXF5SIDL_EID16_POSN                                0x0
#define _RXF5SIDL_EID16_POSITION                            0x0
#define _RXF5SIDL_EID16_SIZE                                0x1
#define _RXF5SIDL_EID16_LENGTH                              0x1
#define _RXF5SIDL_EID16_MASK                                0x1
#define _RXF5SIDL_EID17_POSN                                0x1
#define _RXF5SIDL_EID17_POSITION                            0x1
#define _RXF5SIDL_EID17_SIZE                                0x1
#define _RXF5SIDL_EID17_LENGTH                              0x1
#define _RXF5SIDL_EID17_MASK                                0x2
#define _RXF5SIDL_EXIDEN_POSN                               0x3
#define _RXF5SIDL_EXIDEN_POSITION                           0x3
#define _RXF5SIDL_EXIDEN_SIZE                               0x1
#define _RXF5SIDL_EXIDEN_LENGTH                             0x1
#define _RXF5SIDL_EXIDEN_MASK                               0x8
#define _RXF5SIDL_SID0_POSN                                 0x5
#define _RXF5SIDL_SID0_POSITION                             0x5
#define _RXF5SIDL_SID0_SIZE                                 0x1
#define _RXF5SIDL_SID0_LENGTH                               0x1
#define _RXF5SIDL_SID0_MASK                                 0x20
#define _RXF5SIDL_SID1_POSN                                 0x6
#define _RXF5SIDL_SID1_POSITION                             0x6
#define _RXF5SIDL_SID1_SIZE                                 0x1
#define _RXF5SIDL_SID1_LENGTH                               0x1
#define _RXF5SIDL_SID1_MASK                                 0x40
#define _RXF5SIDL_SID2_POSN                                 0x7
#define _RXF5SIDL_SID2_POSITION                             0x7
#define _RXF5SIDL_SID2_SIZE                                 0x1
#define _RXF5SIDL_SID2_LENGTH                               0x1
#define _RXF5SIDL_SID2_MASK                                 0x80
#define _RXF5SIDL_RXF5EID16_POSN                            0x0
#define _RXF5SIDL_RXF5EID16_POSITION                        0x0
#define _RXF5SIDL_RXF5EID16_SIZE                            0x1
#define _RXF5SIDL_RXF5EID16_LENGTH                          0x1
#define _RXF5SIDL_RXF5EID16_MASK                            0x1
#define _RXF5SIDL_RXF5EID17_POSN                            0x1
#define _RXF5SIDL_RXF5EID17_POSITION                        0x1
#define _RXF5SIDL_RXF5EID17_SIZE                            0x1
#define _RXF5SIDL_RXF5EID17_LENGTH                          0x1
#define _RXF5SIDL_RXF5EID17_MASK                            0x2
#define _RXF5SIDL_RXF5EXIDEN_POSN                           0x3
#define _RXF5SIDL_RXF5EXIDEN_POSITION                       0x3
#define _RXF5SIDL_RXF5EXIDEN_SIZE                           0x1
#define _RXF5SIDL_RXF5EXIDEN_LENGTH                         0x1
#define _RXF5SIDL_RXF5EXIDEN_MASK                           0x8
#define _RXF5SIDL_RXF5SID0_POSN                             0x5
#define _RXF5SIDL_RXF5SID0_POSITION                         0x5
#define _RXF5SIDL_RXF5SID0_SIZE                             0x1
#define _RXF5SIDL_RXF5SID0_LENGTH                           0x1
#define _RXF5SIDL_RXF5SID0_MASK                             0x20
#define _RXF5SIDL_RXF5SID1_POSN                             0x6
#define _RXF5SIDL_RXF5SID1_POSITION                         0x6
#define _RXF5SIDL_RXF5SID1_SIZE                             0x1
#define _RXF5SIDL_RXF5SID1_LENGTH                           0x1
#define _RXF5SIDL_RXF5SID1_MASK                             0x40
#define _RXF5SIDL_RXF5SID2_POSN                             0x7
#define _RXF5SIDL_RXF5SID2_POSITION                         0x7
#define _RXF5SIDL_RXF5SID2_SIZE                             0x1
#define _RXF5SIDL_RXF5SID2_LENGTH                           0x1
#define _RXF5SIDL_RXF5SID2_MASK                             0x80

// Register: RXF5EIDH
#define RXF5EIDH RXF5EIDH
extern volatile unsigned char           RXF5EIDH            __at(0xF16);
#ifndef _LIB_BUILD
asm("RXF5EIDH equ 0F16h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF5EID8               :1;
        unsigned RXF5EID9               :1;
        unsigned RXF5EID10              :1;
        unsigned RXF5EID11              :1;
        unsigned RXF5EID12              :1;
        unsigned RXF5EID13              :1;
        unsigned RXF5EID14              :1;
        unsigned RXF5EID15              :1;
    };
} RXF5EIDHbits_t;
extern volatile RXF5EIDHbits_t RXF5EIDHbits __at(0xF16);
// bitfield macros
#define _RXF5EIDH_EID8_POSN                                 0x0
#define _RXF5EIDH_EID8_POSITION                             0x0
#define _RXF5EIDH_EID8_SIZE                                 0x1
#define _RXF5EIDH_EID8_LENGTH                               0x1
#define _RXF5EIDH_EID8_MASK                                 0x1
#define _RXF5EIDH_EID9_POSN                                 0x1
#define _RXF5EIDH_EID9_POSITION                             0x1
#define _RXF5EIDH_EID9_SIZE                                 0x1
#define _RXF5EIDH_EID9_LENGTH                               0x1
#define _RXF5EIDH_EID9_MASK                                 0x2
#define _RXF5EIDH_EID10_POSN                                0x2
#define _RXF5EIDH_EID10_POSITION                            0x2
#define _RXF5EIDH_EID10_SIZE                                0x1
#define _RXF5EIDH_EID10_LENGTH                              0x1
#define _RXF5EIDH_EID10_MASK                                0x4
#define _RXF5EIDH_EID11_POSN                                0x3
#define _RXF5EIDH_EID11_POSITION                            0x3
#define _RXF5EIDH_EID11_SIZE                                0x1
#define _RXF5EIDH_EID11_LENGTH                              0x1
#define _RXF5EIDH_EID11_MASK                                0x8
#define _RXF5EIDH_EID12_POSN                                0x4
#define _RXF5EIDH_EID12_POSITION                            0x4
#define _RXF5EIDH_EID12_SIZE                                0x1
#define _RXF5EIDH_EID12_LENGTH                              0x1
#define _RXF5EIDH_EID12_MASK                                0x10
#define _RXF5EIDH_EID13_POSN                                0x5
#define _RXF5EIDH_EID13_POSITION                            0x5
#define _RXF5EIDH_EID13_SIZE                                0x1
#define _RXF5EIDH_EID13_LENGTH                              0x1
#define _RXF5EIDH_EID13_MASK                                0x20
#define _RXF5EIDH_EID14_POSN                                0x6
#define _RXF5EIDH_EID14_POSITION                            0x6
#define _RXF5EIDH_EID14_SIZE                                0x1
#define _RXF5EIDH_EID14_LENGTH                              0x1
#define _RXF5EIDH_EID14_MASK                                0x40
#define _RXF5EIDH_EID15_POSN                                0x7
#define _RXF5EIDH_EID15_POSITION                            0x7
#define _RXF5EIDH_EID15_SIZE                                0x1
#define _RXF5EIDH_EID15_LENGTH                              0x1
#define _RXF5EIDH_EID15_MASK                                0x80
#define _RXF5EIDH_RXF5EID8_POSN                             0x0
#define _RXF5EIDH_RXF5EID8_POSITION                         0x0
#define _RXF5EIDH_RXF5EID8_SIZE                             0x1
#define _RXF5EIDH_RXF5EID8_LENGTH                           0x1
#define _RXF5EIDH_RXF5EID8_MASK                             0x1
#define _RXF5EIDH_RXF5EID9_POSN                             0x1
#define _RXF5EIDH_RXF5EID9_POSITION                         0x1
#define _RXF5EIDH_RXF5EID9_SIZE                             0x1
#define _RXF5EIDH_RXF5EID9_LENGTH                           0x1
#define _RXF5EIDH_RXF5EID9_MASK                             0x2
#define _RXF5EIDH_RXF5EID10_POSN                            0x2
#define _RXF5EIDH_RXF5EID10_POSITION                        0x2
#define _RXF5EIDH_RXF5EID10_SIZE                            0x1
#define _RXF5EIDH_RXF5EID10_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID10_MASK                            0x4
#define _RXF5EIDH_RXF5EID11_POSN                            0x3
#define _RXF5EIDH_RXF5EID11_POSITION                        0x3
#define _RXF5EIDH_RXF5EID11_SIZE                            0x1
#define _RXF5EIDH_RXF5EID11_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID11_MASK                            0x8
#define _RXF5EIDH_RXF5EID12_POSN                            0x4
#define _RXF5EIDH_RXF5EID12_POSITION                        0x4
#define _RXF5EIDH_RXF5EID12_SIZE                            0x1
#define _RXF5EIDH_RXF5EID12_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID12_MASK                            0x10
#define _RXF5EIDH_RXF5EID13_POSN                            0x5
#define _RXF5EIDH_RXF5EID13_POSITION                        0x5
#define _RXF5EIDH_RXF5EID13_SIZE                            0x1
#define _RXF5EIDH_RXF5EID13_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID13_MASK                            0x20
#define _RXF5EIDH_RXF5EID14_POSN                            0x6
#define _RXF5EIDH_RXF5EID14_POSITION                        0x6
#define _RXF5EIDH_RXF5EID14_SIZE                            0x1
#define _RXF5EIDH_RXF5EID14_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID14_MASK                            0x40
#define _RXF5EIDH_RXF5EID15_POSN                            0x7
#define _RXF5EIDH_RXF5EID15_POSITION                        0x7
#define _RXF5EIDH_RXF5EID15_SIZE                            0x1
#define _RXF5EIDH_RXF5EID15_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID15_MASK                            0x80

// Register: RXF5EIDL
#define RXF5EIDL RXF5EIDL
extern volatile unsigned char           RXF5EIDL            __at(0xF17);
#ifndef _LIB_BUILD
asm("RXF5EIDL equ 0F17h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF5EID0               :1;
        unsigned RXF5EID1               :1;
        unsigned RXF5EID2               :1;
        unsigned RXF5EID3               :1;
        unsigned RXF5EID4               :1;
        unsigned RXF5EID5               :1;
        unsigned RXF5EID6               :1;
        unsigned RXF5EID7               :1;
    };
} RXF5EIDLbits_t;
extern volatile RXF5EIDLbits_t RXF5EIDLbits __at(0xF17);
// bitfield macros
#define _RXF5EIDL_EID0_POSN                                 0x0
#define _RXF5EIDL_EID0_POSITION                             0x0
#define _RXF5EIDL_EID0_SIZE                                 0x1
#define _RXF5EIDL_EID0_LENGTH                               0x1
#define _RXF5EIDL_EID0_MASK                                 0x1
#define _RXF5EIDL_EID1_POSN                                 0x1
#define _RXF5EIDL_EID1_POSITION                             0x1
#define _RXF5EIDL_EID1_SIZE                                 0x1
#define _RXF5EIDL_EID1_LENGTH                               0x1
#define _RXF5EIDL_EID1_MASK                                 0x2
#define _RXF5EIDL_EID2_POSN                                 0x2
#define _RXF5EIDL_EID2_POSITION                             0x2
#define _RXF5EIDL_EID2_SIZE                                 0x1
#define _RXF5EIDL_EID2_LENGTH                               0x1
#define _RXF5EIDL_EID2_MASK                                 0x4
#define _RXF5EIDL_EID3_POSN                                 0x3
#define _RXF5EIDL_EID3_POSITION                             0x3
#define _RXF5EIDL_EID3_SIZE                                 0x1
#define _RXF5EIDL_EID3_LENGTH                               0x1
#define _RXF5EIDL_EID3_MASK                                 0x8
#define _RXF5EIDL_EID4_POSN                                 0x4
#define _RXF5EIDL_EID4_POSITION                             0x4
#define _RXF5EIDL_EID4_SIZE                                 0x1
#define _RXF5EIDL_EID4_LENGTH                               0x1
#define _RXF5EIDL_EID4_MASK                                 0x10
#define _RXF5EIDL_EID5_POSN                                 0x5
#define _RXF5EIDL_EID5_POSITION                             0x5
#define _RXF5EIDL_EID5_SIZE                                 0x1
#define _RXF5EIDL_EID5_LENGTH                               0x1
#define _RXF5EIDL_EID5_MASK                                 0x20
#define _RXF5EIDL_EID6_POSN                                 0x6
#define _RXF5EIDL_EID6_POSITION                             0x6
#define _RXF5EIDL_EID6_SIZE                                 0x1
#define _RXF5EIDL_EID6_LENGTH                               0x1
#define _RXF5EIDL_EID6_MASK                                 0x40
#define _RXF5EIDL_EID7_POSN                                 0x7
#define _RXF5EIDL_EID7_POSITION                             0x7
#define _RXF5EIDL_EID7_SIZE                                 0x1
#define _RXF5EIDL_EID7_LENGTH                               0x1
#define _RXF5EIDL_EID7_MASK                                 0x80
#define _RXF5EIDL_RXF5EID0_POSN                             0x0
#define _RXF5EIDL_RXF5EID0_POSITION                         0x0
#define _RXF5EIDL_RXF5EID0_SIZE                             0x1
#define _RXF5EIDL_RXF5EID0_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID0_MASK                             0x1
#define _RXF5EIDL_RXF5EID1_POSN                             0x1
#define _RXF5EIDL_RXF5EID1_POSITION                         0x1
#define _RXF5EIDL_RXF5EID1_SIZE                             0x1
#define _RXF5EIDL_RXF5EID1_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID1_MASK                             0x2
#define _RXF5EIDL_RXF5EID2_POSN                             0x2
#define _RXF5EIDL_RXF5EID2_POSITION                         0x2
#define _RXF5EIDL_RXF5EID2_SIZE                             0x1
#define _RXF5EIDL_RXF5EID2_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID2_MASK                             0x4
#define _RXF5EIDL_RXF5EID3_POSN                             0x3
#define _RXF5EIDL_RXF5EID3_POSITION                         0x3
#define _RXF5EIDL_RXF5EID3_SIZE                             0x1
#define _RXF5EIDL_RXF5EID3_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID3_MASK                             0x8
#define _RXF5EIDL_RXF5EID4_POSN                             0x4
#define _RXF5EIDL_RXF5EID4_POSITION                         0x4
#define _RXF5EIDL_RXF5EID4_SIZE                             0x1
#define _RXF5EIDL_RXF5EID4_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID4_MASK                             0x10
#define _RXF5EIDL_RXF5EID5_POSN                             0x5
#define _RXF5EIDL_RXF5EID5_POSITION                         0x5
#define _RXF5EIDL_RXF5EID5_SIZE                             0x1
#define _RXF5EIDL_RXF5EID5_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID5_MASK                             0x20
#define _RXF5EIDL_RXF5EID6_POSN                             0x6
#define _RXF5EIDL_RXF5EID6_POSITION                         0x6
#define _RXF5EIDL_RXF5EID6_SIZE                             0x1
#define _RXF5EIDL_RXF5EID6_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID6_MASK                             0x40
#define _RXF5EIDL_RXF5EID7_POSN                             0x7
#define _RXF5EIDL_RXF5EID7_POSITION                         0x7
#define _RXF5EIDL_RXF5EID7_SIZE                             0x1
#define _RXF5EIDL_RXF5EID7_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID7_MASK                             0x80

// Register: RXM0SIDH
#define RXM0SIDH RXM0SIDH
extern volatile unsigned char           RXM0SIDH            __at(0xF18);
#ifndef _LIB_BUILD
asm("RXM0SIDH equ 0F18h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXM0SID3               :1;
        unsigned RXM0SID4               :1;
        unsigned RXM0SID5               :1;
        unsigned RXM0SID6               :1;
        unsigned RXM0SID7               :1;
        unsigned RXM0SID8               :1;
        unsigned RXM0SID9               :1;
        unsigned RXM0SID10              :1;
    };
} RXM0SIDHbits_t;
extern volatile RXM0SIDHbits_t RXM0SIDHbits __at(0xF18);
// bitfield macros
#define _RXM0SIDH_SID3_POSN                                 0x0
#define _RXM0SIDH_SID3_POSITION                             0x0
#define _RXM0SIDH_SID3_SIZE                                 0x1
#define _RXM0SIDH_SID3_LENGTH                               0x1
#define _RXM0SIDH_SID3_MASK                                 0x1
#define _RXM0SIDH_SID4_POSN                                 0x1
#define _RXM0SIDH_SID4_POSITION                             0x1
#define _RXM0SIDH_SID4_SIZE                                 0x1
#define _RXM0SIDH_SID4_LENGTH                               0x1
#define _RXM0SIDH_SID4_MASK                                 0x2
#define _RXM0SIDH_SID5_POSN                                 0x2
#define _RXM0SIDH_SID5_POSITION                             0x2
#define _RXM0SIDH_SID5_SIZE                                 0x1
#define _RXM0SIDH_SID5_LENGTH                               0x1
#define _RXM0SIDH_SID5_MASK                                 0x4
#define _RXM0SIDH_SID6_POSN                                 0x3
#define _RXM0SIDH_SID6_POSITION                             0x3
#define _RXM0SIDH_SID6_SIZE                                 0x1
#define _RXM0SIDH_SID6_LENGTH                               0x1
#define _RXM0SIDH_SID6_MASK                                 0x8
#define _RXM0SIDH_SID7_POSN                                 0x4
#define _RXM0SIDH_SID7_POSITION                             0x4
#define _RXM0SIDH_SID7_SIZE                                 0x1
#define _RXM0SIDH_SID7_LENGTH                               0x1
#define _RXM0SIDH_SID7_MASK                                 0x10
#define _RXM0SIDH_SID8_POSN                                 0x5
#define _RXM0SIDH_SID8_POSITION                             0x5
#define _RXM0SIDH_SID8_SIZE                                 0x1
#define _RXM0SIDH_SID8_LENGTH                               0x1
#define _RXM0SIDH_SID8_MASK                                 0x20
#define _RXM0SIDH_SID9_POSN                                 0x6
#define _RXM0SIDH_SID9_POSITION                             0x6
#define _RXM0SIDH_SID9_SIZE                                 0x1
#define _RXM0SIDH_SID9_LENGTH                               0x1
#define _RXM0SIDH_SID9_MASK                                 0x40
#define _RXM0SIDH_SID10_POSN                                0x7
#define _RXM0SIDH_SID10_POSITION                            0x7
#define _RXM0SIDH_SID10_SIZE                                0x1
#define _RXM0SIDH_SID10_LENGTH                              0x1
#define _RXM0SIDH_SID10_MASK                                0x80
#define _RXM0SIDH_RXM0SID3_POSN                             0x0
#define _RXM0SIDH_RXM0SID3_POSITION                         0x0
#define _RXM0SIDH_RXM0SID3_SIZE                             0x1
#define _RXM0SIDH_RXM0SID3_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID3_MASK                             0x1
#define _RXM0SIDH_RXM0SID4_POSN                             0x1
#define _RXM0SIDH_RXM0SID4_POSITION                         0x1
#define _RXM0SIDH_RXM0SID4_SIZE                             0x1
#define _RXM0SIDH_RXM0SID4_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID4_MASK                             0x2
#define _RXM0SIDH_RXM0SID5_POSN                             0x2
#define _RXM0SIDH_RXM0SID5_POSITION                         0x2
#define _RXM0SIDH_RXM0SID5_SIZE                             0x1
#define _RXM0SIDH_RXM0SID5_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID5_MASK                             0x4
#define _RXM0SIDH_RXM0SID6_POSN                             0x3
#define _RXM0SIDH_RXM0SID6_POSITION                         0x3
#define _RXM0SIDH_RXM0SID6_SIZE                             0x1
#define _RXM0SIDH_RXM0SID6_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID6_MASK                             0x8
#define _RXM0SIDH_RXM0SID7_POSN                             0x4
#define _RXM0SIDH_RXM0SID7_POSITION                         0x4
#define _RXM0SIDH_RXM0SID7_SIZE                             0x1
#define _RXM0SIDH_RXM0SID7_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID7_MASK                             0x10
#define _RXM0SIDH_RXM0SID8_POSN                             0x5
#define _RXM0SIDH_RXM0SID8_POSITION                         0x5
#define _RXM0SIDH_RXM0SID8_SIZE                             0x1
#define _RXM0SIDH_RXM0SID8_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID8_MASK                             0x20
#define _RXM0SIDH_RXM0SID9_POSN                             0x6
#define _RXM0SIDH_RXM0SID9_POSITION                         0x6
#define _RXM0SIDH_RXM0SID9_SIZE                             0x1
#define _RXM0SIDH_RXM0SID9_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID9_MASK                             0x40
#define _RXM0SIDH_RXM0SID10_POSN                            0x7
#define _RXM0SIDH_RXM0SID10_POSITION                        0x7
#define _RXM0SIDH_RXM0SID10_SIZE                            0x1
#define _RXM0SIDH_RXM0SID10_LENGTH                          0x1
#define _RXM0SIDH_RXM0SID10_MASK                            0x80

// Register: RXM0SIDL
#define RXM0SIDL RXM0SIDL
extern volatile unsigned char           RXM0SIDL            __at(0xF19);
#ifndef _LIB_BUILD
asm("RXM0SIDL equ 0F19h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :3;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXM0EID16              :1;
        unsigned RXM0EID17              :1;
        unsigned                        :3;
        unsigned RXM0SID0               :1;
        unsigned RXM0SID1               :1;
        unsigned RXM0SID2               :1;
    };
} RXM0SIDLbits_t;
extern volatile RXM0SIDLbits_t RXM0SIDLbits __at(0xF19);
// bitfield macros
#define _RXM0SIDL_EID16_POSN                                0x0
#define _RXM0SIDL_EID16_POSITION                            0x0
#define _RXM0SIDL_EID16_SIZE                                0x1
#define _RXM0SIDL_EID16_LENGTH                              0x1
#define _RXM0SIDL_EID16_MASK                                0x1
#define _RXM0SIDL_EID17_POSN                                0x1
#define _RXM0SIDL_EID17_POSITION                            0x1
#define _RXM0SIDL_EID17_SIZE                                0x1
#define _RXM0SIDL_EID17_LENGTH                              0x1
#define _RXM0SIDL_EID17_MASK                                0x2
#define _RXM0SIDL_SID0_POSN                                 0x5
#define _RXM0SIDL_SID0_POSITION                             0x5
#define _RXM0SIDL_SID0_SIZE                                 0x1
#define _RXM0SIDL_SID0_LENGTH                               0x1
#define _RXM0SIDL_SID0_MASK                                 0x20
#define _RXM0SIDL_SID1_POSN                                 0x6
#define _RXM0SIDL_SID1_POSITION                             0x6
#define _RXM0SIDL_SID1_SIZE                                 0x1
#define _RXM0SIDL_SID1_LENGTH                               0x1
#define _RXM0SIDL_SID1_MASK                                 0x40
#define _RXM0SIDL_SID2_POSN                                 0x7
#define _RXM0SIDL_SID2_POSITION                             0x7
#define _RXM0SIDL_SID2_SIZE                                 0x1
#define _RXM0SIDL_SID2_LENGTH                               0x1
#define _RXM0SIDL_SID2_MASK                                 0x80
#define _RXM0SIDL_RXM0EID16_POSN                            0x0
#define _RXM0SIDL_RXM0EID16_POSITION                        0x0
#define _RXM0SIDL_RXM0EID16_SIZE                            0x1
#define _RXM0SIDL_RXM0EID16_LENGTH                          0x1
#define _RXM0SIDL_RXM0EID16_MASK                            0x1
#define _RXM0SIDL_RXM0EID17_POSN                            0x1
#define _RXM0SIDL_RXM0EID17_POSITION                        0x1
#define _RXM0SIDL_RXM0EID17_SIZE                            0x1
#define _RXM0SIDL_RXM0EID17_LENGTH                          0x1
#define _RXM0SIDL_RXM0EID17_MASK                            0x2
#define _RXM0SIDL_RXM0SID0_POSN                             0x5
#define _RXM0SIDL_RXM0SID0_POSITION                         0x5
#define _RXM0SIDL_RXM0SID0_SIZE                             0x1
#define _RXM0SIDL_RXM0SID0_LENGTH                           0x1
#define _RXM0SIDL_RXM0SID0_MASK                             0x20
#define _RXM0SIDL_RXM0SID1_POSN                             0x6
#define _RXM0SIDL_RXM0SID1_POSITION                         0x6
#define _RXM0SIDL_RXM0SID1_SIZE                             0x1
#define _RXM0SIDL_RXM0SID1_LENGTH                           0x1
#define _RXM0SIDL_RXM0SID1_MASK                             0x40
#define _RXM0SIDL_RXM0SID2_POSN                             0x7
#define _RXM0SIDL_RXM0SID2_POSITION                         0x7
#define _RXM0SIDL_RXM0SID2_SIZE                             0x1
#define _RXM0SIDL_RXM0SID2_LENGTH                           0x1
#define _RXM0SIDL_RXM0SID2_MASK                             0x80

// Register: RXM0EIDH
#define RXM0EIDH RXM0EIDH
extern volatile unsigned char           RXM0EIDH            __at(0xF1A);
#ifndef _LIB_BUILD
asm("RXM0EIDH equ 0F1Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXM0EID8               :1;
        unsigned RXM0EID9               :1;
        unsigned RXM0EID10              :1;
        unsigned RXM0EID11              :1;
        unsigned RXM0EID12              :1;
        unsigned RXM0EID13              :1;
        unsigned RXM0EID14              :1;
        unsigned RXM0EID15              :1;
    };
} RXM0EIDHbits_t;
extern volatile RXM0EIDHbits_t RXM0EIDHbits __at(0xF1A);
// bitfield macros
#define _RXM0EIDH_EID8_POSN                                 0x0
#define _RXM0EIDH_EID8_POSITION                             0x0
#define _RXM0EIDH_EID8_SIZE                                 0x1
#define _RXM0EIDH_EID8_LENGTH                               0x1
#define _RXM0EIDH_EID8_MASK                                 0x1
#define _RXM0EIDH_EID9_POSN                                 0x1
#define _RXM0EIDH_EID9_POSITION                             0x1
#define _RXM0EIDH_EID9_SIZE                                 0x1
#define _RXM0EIDH_EID9_LENGTH                               0x1
#define _RXM0EIDH_EID9_MASK                                 0x2
#define _RXM0EIDH_EID10_POSN                                0x2
#define _RXM0EIDH_EID10_POSITION                            0x2
#define _RXM0EIDH_EID10_SIZE                                0x1
#define _RXM0EIDH_EID10_LENGTH                              0x1
#define _RXM0EIDH_EID10_MASK                                0x4
#define _RXM0EIDH_EID11_POSN                                0x3
#define _RXM0EIDH_EID11_POSITION                            0x3
#define _RXM0EIDH_EID11_SIZE                                0x1
#define _RXM0EIDH_EID11_LENGTH                              0x1
#define _RXM0EIDH_EID11_MASK                                0x8
#define _RXM0EIDH_EID12_POSN                                0x4
#define _RXM0EIDH_EID12_POSITION                            0x4
#define _RXM0EIDH_EID12_SIZE                                0x1
#define _RXM0EIDH_EID12_LENGTH                              0x1
#define _RXM0EIDH_EID12_MASK                                0x10
#define _RXM0EIDH_EID13_POSN                                0x5
#define _RXM0EIDH_EID13_POSITION                            0x5
#define _RXM0EIDH_EID13_SIZE                                0x1
#define _RXM0EIDH_EID13_LENGTH                              0x1
#define _RXM0EIDH_EID13_MASK                                0x20
#define _RXM0EIDH_EID14_POSN                                0x6
#define _RXM0EIDH_EID14_POSITION                            0x6
#define _RXM0EIDH_EID14_SIZE                                0x1
#define _RXM0EIDH_EID14_LENGTH                              0x1
#define _RXM0EIDH_EID14_MASK                                0x40
#define _RXM0EIDH_EID15_POSN                                0x7
#define _RXM0EIDH_EID15_POSITION                            0x7
#define _RXM0EIDH_EID15_SIZE                                0x1
#define _RXM0EIDH_EID15_LENGTH                              0x1
#define _RXM0EIDH_EID15_MASK                                0x80
#define _RXM0EIDH_RXM0EID8_POSN                             0x0
#define _RXM0EIDH_RXM0EID8_POSITION                         0x0
#define _RXM0EIDH_RXM0EID8_SIZE                             0x1
#define _RXM0EIDH_RXM0EID8_LENGTH                           0x1
#define _RXM0EIDH_RXM0EID8_MASK                             0x1
#define _RXM0EIDH_RXM0EID9_POSN                             0x1
#define _RXM0EIDH_RXM0EID9_POSITION                         0x1
#define _RXM0EIDH_RXM0EID9_SIZE                             0x1
#define _RXM0EIDH_RXM0EID9_LENGTH                           0x1
#define _RXM0EIDH_RXM0EID9_MASK                             0x2
#define _RXM0EIDH_RXM0EID10_POSN                            0x2
#define _RXM0EIDH_RXM0EID10_POSITION                        0x2
#define _RXM0EIDH_RXM0EID10_SIZE                            0x1
#define _RXM0EIDH_RXM0EID10_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID10_MASK                            0x4
#define _RXM0EIDH_RXM0EID11_POSN                            0x3
#define _RXM0EIDH_RXM0EID11_POSITION                        0x3
#define _RXM0EIDH_RXM0EID11_SIZE                            0x1
#define _RXM0EIDH_RXM0EID11_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID11_MASK                            0x8
#define _RXM0EIDH_RXM0EID12_POSN                            0x4
#define _RXM0EIDH_RXM0EID12_POSITION                        0x4
#define _RXM0EIDH_RXM0EID12_SIZE                            0x1
#define _RXM0EIDH_RXM0EID12_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID12_MASK                            0x10
#define _RXM0EIDH_RXM0EID13_POSN                            0x5
#define _RXM0EIDH_RXM0EID13_POSITION                        0x5
#define _RXM0EIDH_RXM0EID13_SIZE                            0x1
#define _RXM0EIDH_RXM0EID13_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID13_MASK                            0x20
#define _RXM0EIDH_RXM0EID14_POSN                            0x6
#define _RXM0EIDH_RXM0EID14_POSITION                        0x6
#define _RXM0EIDH_RXM0EID14_SIZE                            0x1
#define _RXM0EIDH_RXM0EID14_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID14_MASK                            0x40
#define _RXM0EIDH_RXM0EID15_POSN                            0x7
#define _RXM0EIDH_RXM0EID15_POSITION                        0x7
#define _RXM0EIDH_RXM0EID15_SIZE                            0x1
#define _RXM0EIDH_RXM0EID15_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID15_MASK                            0x80

// Register: RXM0EIDL
#define RXM0EIDL RXM0EIDL
extern volatile unsigned char           RXM0EIDL            __at(0xF1B);
#ifndef _LIB_BUILD
asm("RXM0EIDL equ 0F1Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXM0EID0               :1;
        unsigned RXM0EID1               :1;
        unsigned RXM0EID2               :1;
        unsigned RXM0EID3               :1;
        unsigned RXM0EID4               :1;
        unsigned RXM0EID5               :1;
        unsigned RXM0EID6               :1;
        unsigned RXM0EID7               :1;
    };
} RXM0EIDLbits_t;
extern volatile RXM0EIDLbits_t RXM0EIDLbits __at(0xF1B);
// bitfield macros
#define _RXM0EIDL_EID0_POSN                                 0x0
#define _RXM0EIDL_EID0_POSITION                             0x0
#define _RXM0EIDL_EID0_SIZE                                 0x1
#define _RXM0EIDL_EID0_LENGTH                               0x1
#define _RXM0EIDL_EID0_MASK                                 0x1
#define _RXM0EIDL_EID1_POSN                                 0x1
#define _RXM0EIDL_EID1_POSITION                             0x1
#define _RXM0EIDL_EID1_SIZE                                 0x1
#define _RXM0EIDL_EID1_LENGTH                               0x1
#define _RXM0EIDL_EID1_MASK                                 0x2
#define _RXM0EIDL_EID2_POSN                                 0x2
#define _RXM0EIDL_EID2_POSITION                             0x2
#define _RXM0EIDL_EID2_SIZE                                 0x1
#define _RXM0EIDL_EID2_LENGTH                               0x1
#define _RXM0EIDL_EID2_MASK                                 0x4
#define _RXM0EIDL_EID3_POSN                                 0x3
#define _RXM0EIDL_EID3_POSITION                             0x3
#define _RXM0EIDL_EID3_SIZE                                 0x1
#define _RXM0EIDL_EID3_LENGTH                               0x1
#define _RXM0EIDL_EID3_MASK                                 0x8
#define _RXM0EIDL_EID4_POSN                                 0x4
#define _RXM0EIDL_EID4_POSITION                             0x4
#define _RXM0EIDL_EID4_SIZE                                 0x1
#define _RXM0EIDL_EID4_LENGTH                               0x1
#define _RXM0EIDL_EID4_MASK                                 0x10
#define _RXM0EIDL_EID5_POSN                                 0x5
#define _RXM0EIDL_EID5_POSITION                             0x5
#define _RXM0EIDL_EID5_SIZE                                 0x1
#define _RXM0EIDL_EID5_LENGTH                               0x1
#define _RXM0EIDL_EID5_MASK                                 0x20
#define _RXM0EIDL_EID6_POSN                                 0x6
#define _RXM0EIDL_EID6_POSITION                             0x6
#define _RXM0EIDL_EID6_SIZE                                 0x1
#define _RXM0EIDL_EID6_LENGTH                               0x1
#define _RXM0EIDL_EID6_MASK                                 0x40
#define _RXM0EIDL_EID7_POSN                                 0x7
#define _RXM0EIDL_EID7_POSITION                             0x7
#define _RXM0EIDL_EID7_SIZE                                 0x1
#define _RXM0EIDL_EID7_LENGTH                               0x1
#define _RXM0EIDL_EID7_MASK                                 0x80
#define _RXM0EIDL_RXM0EID0_POSN                             0x0
#define _RXM0EIDL_RXM0EID0_POSITION                         0x0
#define _RXM0EIDL_RXM0EID0_SIZE                             0x1
#define _RXM0EIDL_RXM0EID0_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID0_MASK                             0x1
#define _RXM0EIDL_RXM0EID1_POSN                             0x1
#define _RXM0EIDL_RXM0EID1_POSITION                         0x1
#define _RXM0EIDL_RXM0EID1_SIZE                             0x1
#define _RXM0EIDL_RXM0EID1_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID1_MASK                             0x2
#define _RXM0EIDL_RXM0EID2_POSN                             0x2
#define _RXM0EIDL_RXM0EID2_POSITION                         0x2
#define _RXM0EIDL_RXM0EID2_SIZE                             0x1
#define _RXM0EIDL_RXM0EID2_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID2_MASK                             0x4
#define _RXM0EIDL_RXM0EID3_POSN                             0x3
#define _RXM0EIDL_RXM0EID3_POSITION                         0x3
#define _RXM0EIDL_RXM0EID3_SIZE                             0x1
#define _RXM0EIDL_RXM0EID3_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID3_MASK                             0x8
#define _RXM0EIDL_RXM0EID4_POSN                             0x4
#define _RXM0EIDL_RXM0EID4_POSITION                         0x4
#define _RXM0EIDL_RXM0EID4_SIZE                             0x1
#define _RXM0EIDL_RXM0EID4_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID4_MASK                             0x10
#define _RXM0EIDL_RXM0EID5_POSN                             0x5
#define _RXM0EIDL_RXM0EID5_POSITION                         0x5
#define _RXM0EIDL_RXM0EID5_SIZE                             0x1
#define _RXM0EIDL_RXM0EID5_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID5_MASK                             0x20
#define _RXM0EIDL_RXM0EID6_POSN                             0x6
#define _RXM0EIDL_RXM0EID6_POSITION                         0x6
#define _RXM0EIDL_RXM0EID6_SIZE                             0x1
#define _RXM0EIDL_RXM0EID6_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID6_MASK                             0x40
#define _RXM0EIDL_RXM0EID7_POSN                             0x7
#define _RXM0EIDL_RXM0EID7_POSITION                         0x7
#define _RXM0EIDL_RXM0EID7_SIZE                             0x1
#define _RXM0EIDL_RXM0EID7_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID7_MASK                             0x80

// Register: RXM1SIDH
#define RXM1SIDH RXM1SIDH
extern volatile unsigned char           RXM1SIDH            __at(0xF1C);
#ifndef _LIB_BUILD
asm("RXM1SIDH equ 0F1Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXM1SID3               :1;
        unsigned RXM1SID4               :1;
        unsigned RXM1SID5               :1;
        unsigned RXM1SID6               :1;
        unsigned RXM1SID7               :1;
        unsigned RXM1SID8               :1;
        unsigned RXM1SID9               :1;
        unsigned RXM1SID10              :1;
    };
} RXM1SIDHbits_t;
extern volatile RXM1SIDHbits_t RXM1SIDHbits __at(0xF1C);
// bitfield macros
#define _RXM1SIDH_SID3_POSN                                 0x0
#define _RXM1SIDH_SID3_POSITION                             0x0
#define _RXM1SIDH_SID3_SIZE                                 0x1
#define _RXM1SIDH_SID3_LENGTH                               0x1
#define _RXM1SIDH_SID3_MASK                                 0x1
#define _RXM1SIDH_SID4_POSN                                 0x1
#define _RXM1SIDH_SID4_POSITION                             0x1
#define _RXM1SIDH_SID4_SIZE                                 0x1
#define _RXM1SIDH_SID4_LENGTH                               0x1
#define _RXM1SIDH_SID4_MASK                                 0x2
#define _RXM1SIDH_SID5_POSN                                 0x2
#define _RXM1SIDH_SID5_POSITION                             0x2
#define _RXM1SIDH_SID5_SIZE                                 0x1
#define _RXM1SIDH_SID5_LENGTH                               0x1
#define _RXM1SIDH_SID5_MASK                                 0x4
#define _RXM1SIDH_SID6_POSN                                 0x3
#define _RXM1SIDH_SID6_POSITION                             0x3
#define _RXM1SIDH_SID6_SIZE                                 0x1
#define _RXM1SIDH_SID6_LENGTH                               0x1
#define _RXM1SIDH_SID6_MASK                                 0x8
#define _RXM1SIDH_SID7_POSN                                 0x4
#define _RXM1SIDH_SID7_POSITION                             0x4
#define _RXM1SIDH_SID7_SIZE                                 0x1
#define _RXM1SIDH_SID7_LENGTH                               0x1
#define _RXM1SIDH_SID7_MASK                                 0x10
#define _RXM1SIDH_SID8_POSN                                 0x5
#define _RXM1SIDH_SID8_POSITION                             0x5
#define _RXM1SIDH_SID8_SIZE                                 0x1
#define _RXM1SIDH_SID8_LENGTH                               0x1
#define _RXM1SIDH_SID8_MASK                                 0x20
#define _RXM1SIDH_SID9_POSN                                 0x6
#define _RXM1SIDH_SID9_POSITION                             0x6
#define _RXM1SIDH_SID9_SIZE                                 0x1
#define _RXM1SIDH_SID9_LENGTH                               0x1
#define _RXM1SIDH_SID9_MASK                                 0x40
#define _RXM1SIDH_SID10_POSN                                0x7
#define _RXM1SIDH_SID10_POSITION                            0x7
#define _RXM1SIDH_SID10_SIZE                                0x1
#define _RXM1SIDH_SID10_LENGTH                              0x1
#define _RXM1SIDH_SID10_MASK                                0x80
#define _RXM1SIDH_RXM1SID3_POSN                             0x0
#define _RXM1SIDH_RXM1SID3_POSITION                         0x0
#define _RXM1SIDH_RXM1SID3_SIZE                             0x1
#define _RXM1SIDH_RXM1SID3_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID3_MASK                             0x1
#define _RXM1SIDH_RXM1SID4_POSN                             0x1
#define _RXM1SIDH_RXM1SID4_POSITION                         0x1
#define _RXM1SIDH_RXM1SID4_SIZE                             0x1
#define _RXM1SIDH_RXM1SID4_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID4_MASK                             0x2
#define _RXM1SIDH_RXM1SID5_POSN                             0x2
#define _RXM1SIDH_RXM1SID5_POSITION                         0x2
#define _RXM1SIDH_RXM1SID5_SIZE                             0x1
#define _RXM1SIDH_RXM1SID5_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID5_MASK                             0x4
#define _RXM1SIDH_RXM1SID6_POSN                             0x3
#define _RXM1SIDH_RXM1SID6_POSITION                         0x3
#define _RXM1SIDH_RXM1SID6_SIZE                             0x1
#define _RXM1SIDH_RXM1SID6_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID6_MASK                             0x8
#define _RXM1SIDH_RXM1SID7_POSN                             0x4
#define _RXM1SIDH_RXM1SID7_POSITION                         0x4
#define _RXM1SIDH_RXM1SID7_SIZE                             0x1
#define _RXM1SIDH_RXM1SID7_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID7_MASK                             0x10
#define _RXM1SIDH_RXM1SID8_POSN                             0x5
#define _RXM1SIDH_RXM1SID8_POSITION                         0x5
#define _RXM1SIDH_RXM1SID8_SIZE                             0x1
#define _RXM1SIDH_RXM1SID8_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID8_MASK                             0x20
#define _RXM1SIDH_RXM1SID9_POSN                             0x6
#define _RXM1SIDH_RXM1SID9_POSITION                         0x6
#define _RXM1SIDH_RXM1SID9_SIZE                             0x1
#define _RXM1SIDH_RXM1SID9_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID9_MASK                             0x40
#define _RXM1SIDH_RXM1SID10_POSN                            0x7
#define _RXM1SIDH_RXM1SID10_POSITION                        0x7
#define _RXM1SIDH_RXM1SID10_SIZE                            0x1
#define _RXM1SIDH_RXM1SID10_LENGTH                          0x1
#define _RXM1SIDH_RXM1SID10_MASK                            0x80

// Register: RXM1SIDL
#define RXM1SIDL RXM1SIDL
extern volatile unsigned char           RXM1SIDL            __at(0xF1D);
#ifndef _LIB_BUILD
asm("RXM1SIDL equ 0F1Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :3;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXM1EID16              :1;
        unsigned RXM1EID17              :1;
        unsigned                        :3;
        unsigned RXM1SID0               :1;
        unsigned RXM1SID1               :1;
        unsigned RXM1SID2               :1;
    };
} RXM1SIDLbits_t;
extern volatile RXM1SIDLbits_t RXM1SIDLbits __at(0xF1D);
// bitfield macros
#define _RXM1SIDL_EID16_POSN                                0x0
#define _RXM1SIDL_EID16_POSITION                            0x0
#define _RXM1SIDL_EID16_SIZE                                0x1
#define _RXM1SIDL_EID16_LENGTH                              0x1
#define _RXM1SIDL_EID16_MASK                                0x1
#define _RXM1SIDL_EID17_POSN                                0x1
#define _RXM1SIDL_EID17_POSITION                            0x1
#define _RXM1SIDL_EID17_SIZE                                0x1
#define _RXM1SIDL_EID17_LENGTH                              0x1
#define _RXM1SIDL_EID17_MASK                                0x2
#define _RXM1SIDL_SID0_POSN                                 0x5
#define _RXM1SIDL_SID0_POSITION                             0x5
#define _RXM1SIDL_SID0_SIZE                                 0x1
#define _RXM1SIDL_SID0_LENGTH                               0x1
#define _RXM1SIDL_SID0_MASK                                 0x20
#define _RXM1SIDL_SID1_POSN                                 0x6
#define _RXM1SIDL_SID1_POSITION                             0x6
#define _RXM1SIDL_SID1_SIZE                                 0x1
#define _RXM1SIDL_SID1_LENGTH                               0x1
#define _RXM1SIDL_SID1_MASK                                 0x40
#define _RXM1SIDL_SID2_POSN                                 0x7
#define _RXM1SIDL_SID2_POSITION                             0x7
#define _RXM1SIDL_SID2_SIZE                                 0x1
#define _RXM1SIDL_SID2_LENGTH                               0x1
#define _RXM1SIDL_SID2_MASK                                 0x80
#define _RXM1SIDL_RXM1EID16_POSN                            0x0
#define _RXM1SIDL_RXM1EID16_POSITION                        0x0
#define _RXM1SIDL_RXM1EID16_SIZE                            0x1
#define _RXM1SIDL_RXM1EID16_LENGTH                          0x1
#define _RXM1SIDL_RXM1EID16_MASK                            0x1
#define _RXM1SIDL_RXM1EID17_POSN                            0x1
#define _RXM1SIDL_RXM1EID17_POSITION                        0x1
#define _RXM1SIDL_RXM1EID17_SIZE                            0x1
#define _RXM1SIDL_RXM1EID17_LENGTH                          0x1
#define _RXM1SIDL_RXM1EID17_MASK                            0x2
#define _RXM1SIDL_RXM1SID0_POSN                             0x5
#define _RXM1SIDL_RXM1SID0_POSITION                         0x5
#define _RXM1SIDL_RXM1SID0_SIZE                             0x1
#define _RXM1SIDL_RXM1SID0_LENGTH                           0x1
#define _RXM1SIDL_RXM1SID0_MASK                             0x20
#define _RXM1SIDL_RXM1SID1_POSN                             0x6
#define _RXM1SIDL_RXM1SID1_POSITION                         0x6
#define _RXM1SIDL_RXM1SID1_SIZE                             0x1
#define _RXM1SIDL_RXM1SID1_LENGTH                           0x1
#define _RXM1SIDL_RXM1SID1_MASK                             0x40
#define _RXM1SIDL_RXM1SID2_POSN                             0x7
#define _RXM1SIDL_RXM1SID2_POSITION                         0x7
#define _RXM1SIDL_RXM1SID2_SIZE                             0x1
#define _RXM1SIDL_RXM1SID2_LENGTH                           0x1
#define _RXM1SIDL_RXM1SID2_MASK                             0x80

// Register: RXM1EIDH
#define RXM1EIDH RXM1EIDH
extern volatile unsigned char           RXM1EIDH            __at(0xF1E);
#ifndef _LIB_BUILD
asm("RXM1EIDH equ 0F1Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXM1EID8               :1;
        unsigned RXM1EID9               :1;
        unsigned RXM1EID10              :1;
        unsigned RXM1EID11              :1;
        unsigned RXM1EID12              :1;
        unsigned RXM1EID13              :1;
        unsigned RXM1EID14              :1;
        unsigned RXM1EID15              :1;
    };
} RXM1EIDHbits_t;
extern volatile RXM1EIDHbits_t RXM1EIDHbits __at(0xF1E);
// bitfield macros
#define _RXM1EIDH_EID8_POSN                                 0x0
#define _RXM1EIDH_EID8_POSITION                             0x0
#define _RXM1EIDH_EID8_SIZE                                 0x1
#define _RXM1EIDH_EID8_LENGTH                               0x1
#define _RXM1EIDH_EID8_MASK                                 0x1
#define _RXM1EIDH_EID9_POSN                                 0x1
#define _RXM1EIDH_EID9_POSITION                             0x1
#define _RXM1EIDH_EID9_SIZE                                 0x1
#define _RXM1EIDH_EID9_LENGTH                               0x1
#define _RXM1EIDH_EID9_MASK                                 0x2
#define _RXM1EIDH_EID10_POSN                                0x2
#define _RXM1EIDH_EID10_POSITION                            0x2
#define _RXM1EIDH_EID10_SIZE                                0x1
#define _RXM1EIDH_EID10_LENGTH                              0x1
#define _RXM1EIDH_EID10_MASK                                0x4
#define _RXM1EIDH_EID11_POSN                                0x3
#define _RXM1EIDH_EID11_POSITION                            0x3
#define _RXM1EIDH_EID11_SIZE                                0x1
#define _RXM1EIDH_EID11_LENGTH                              0x1
#define _RXM1EIDH_EID11_MASK                                0x8
#define _RXM1EIDH_EID12_POSN                                0x4
#define _RXM1EIDH_EID12_POSITION                            0x4
#define _RXM1EIDH_EID12_SIZE                                0x1
#define _RXM1EIDH_EID12_LENGTH                              0x1
#define _RXM1EIDH_EID12_MASK                                0x10
#define _RXM1EIDH_EID13_POSN                                0x5
#define _RXM1EIDH_EID13_POSITION                            0x5
#define _RXM1EIDH_EID13_SIZE                                0x1
#define _RXM1EIDH_EID13_LENGTH                              0x1
#define _RXM1EIDH_EID13_MASK                                0x20
#define _RXM1EIDH_EID14_POSN                                0x6
#define _RXM1EIDH_EID14_POSITION                            0x6
#define _RXM1EIDH_EID14_SIZE                                0x1
#define _RXM1EIDH_EID14_LENGTH                              0x1
#define _RXM1EIDH_EID14_MASK                                0x40
#define _RXM1EIDH_EID15_POSN                                0x7
#define _RXM1EIDH_EID15_POSITION                            0x7
#define _RXM1EIDH_EID15_SIZE                                0x1
#define _RXM1EIDH_EID15_LENGTH                              0x1
#define _RXM1EIDH_EID15_MASK                                0x80
#define _RXM1EIDH_RXM1EID8_POSN                             0x0
#define _RXM1EIDH_RXM1EID8_POSITION                         0x0
#define _RXM1EIDH_RXM1EID8_SIZE                             0x1
#define _RXM1EIDH_RXM1EID8_LENGTH                           0x1
#define _RXM1EIDH_RXM1EID8_MASK                             0x1
#define _RXM1EIDH_RXM1EID9_POSN                             0x1
#define _RXM1EIDH_RXM1EID9_POSITION                         0x1
#define _RXM1EIDH_RXM1EID9_SIZE                             0x1
#define _RXM1EIDH_RXM1EID9_LENGTH                           0x1
#define _RXM1EIDH_RXM1EID9_MASK                             0x2
#define _RXM1EIDH_RXM1EID10_POSN                            0x2
#define _RXM1EIDH_RXM1EID10_POSITION                        0x2
#define _RXM1EIDH_RXM1EID10_SIZE                            0x1
#define _RXM1EIDH_RXM1EID10_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID10_MASK                            0x4
#define _RXM1EIDH_RXM1EID11_POSN                            0x3
#define _RXM1EIDH_RXM1EID11_POSITION                        0x3
#define _RXM1EIDH_RXM1EID11_SIZE                            0x1
#define _RXM1EIDH_RXM1EID11_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID11_MASK                            0x8
#define _RXM1EIDH_RXM1EID12_POSN                            0x4
#define _RXM1EIDH_RXM1EID12_POSITION                        0x4
#define _RXM1EIDH_RXM1EID12_SIZE                            0x1
#define _RXM1EIDH_RXM1EID12_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID12_MASK                            0x10
#define _RXM1EIDH_RXM1EID13_POSN                            0x5
#define _RXM1EIDH_RXM1EID13_POSITION                        0x5
#define _RXM1EIDH_RXM1EID13_SIZE                            0x1
#define _RXM1EIDH_RXM1EID13_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID13_MASK                            0x20
#define _RXM1EIDH_RXM1EID14_POSN                            0x6
#define _RXM1EIDH_RXM1EID14_POSITION                        0x6
#define _RXM1EIDH_RXM1EID14_SIZE                            0x1
#define _RXM1EIDH_RXM1EID14_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID14_MASK                            0x40
#define _RXM1EIDH_RXM1EID15_POSN                            0x7
#define _RXM1EIDH_RXM1EID15_POSITION                        0x7
#define _RXM1EIDH_RXM1EID15_SIZE                            0x1
#define _RXM1EIDH_RXM1EID15_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID15_MASK                            0x80

// Register: RXM1EIDL
#define RXM1EIDL RXM1EIDL
extern volatile unsigned char           RXM1EIDL            __at(0xF1F);
#ifndef _LIB_BUILD
asm("RXM1EIDL equ 0F1Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXM1EID0               :1;
        unsigned RXM1EID1               :1;
        unsigned RXM1EID2               :1;
        unsigned RXM1EID3               :1;
        unsigned RXM1EID4               :1;
        unsigned RXM1EID5               :1;
        unsigned RXM1EID6               :1;
        unsigned RXM1EID7               :1;
    };
} RXM1EIDLbits_t;
extern volatile RXM1EIDLbits_t RXM1EIDLbits __at(0xF1F);
// bitfield macros
#define _RXM1EIDL_EID0_POSN                                 0x0
#define _RXM1EIDL_EID0_POSITION                             0x0
#define _RXM1EIDL_EID0_SIZE                                 0x1
#define _RXM1EIDL_EID0_LENGTH                               0x1
#define _RXM1EIDL_EID0_MASK                                 0x1
#define _RXM1EIDL_EID1_POSN                                 0x1
#define _RXM1EIDL_EID1_POSITION                             0x1
#define _RXM1EIDL_EID1_SIZE                                 0x1
#define _RXM1EIDL_EID1_LENGTH                               0x1
#define _RXM1EIDL_EID1_MASK                                 0x2
#define _RXM1EIDL_EID2_POSN                                 0x2
#define _RXM1EIDL_EID2_POSITION                             0x2
#define _RXM1EIDL_EID2_SIZE                                 0x1
#define _RXM1EIDL_EID2_LENGTH                               0x1
#define _RXM1EIDL_EID2_MASK                                 0x4
#define _RXM1EIDL_EID3_POSN                                 0x3
#define _RXM1EIDL_EID3_POSITION                             0x3
#define _RXM1EIDL_EID3_SIZE                                 0x1
#define _RXM1EIDL_EID3_LENGTH                               0x1
#define _RXM1EIDL_EID3_MASK                                 0x8
#define _RXM1EIDL_EID4_POSN                                 0x4
#define _RXM1EIDL_EID4_POSITION                             0x4
#define _RXM1EIDL_EID4_SIZE                                 0x1
#define _RXM1EIDL_EID4_LENGTH                               0x1
#define _RXM1EIDL_EID4_MASK                                 0x10
#define _RXM1EIDL_EID5_POSN                                 0x5
#define _RXM1EIDL_EID5_POSITION                             0x5
#define _RXM1EIDL_EID5_SIZE                                 0x1
#define _RXM1EIDL_EID5_LENGTH                               0x1
#define _RXM1EIDL_EID5_MASK                                 0x20
#define _RXM1EIDL_EID6_POSN                                 0x6
#define _RXM1EIDL_EID6_POSITION                             0x6
#define _RXM1EIDL_EID6_SIZE                                 0x1
#define _RXM1EIDL_EID6_LENGTH                               0x1
#define _RXM1EIDL_EID6_MASK                                 0x40
#define _RXM1EIDL_EID7_POSN                                 0x7
#define _RXM1EIDL_EID7_POSITION                             0x7
#define _RXM1EIDL_EID7_SIZE                                 0x1
#define _RXM1EIDL_EID7_LENGTH                               0x1
#define _RXM1EIDL_EID7_MASK                                 0x80
#define _RXM1EIDL_RXM1EID0_POSN                             0x0
#define _RXM1EIDL_RXM1EID0_POSITION                         0x0
#define _RXM1EIDL_RXM1EID0_SIZE                             0x1
#define _RXM1EIDL_RXM1EID0_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID0_MASK                             0x1
#define _RXM1EIDL_RXM1EID1_POSN                             0x1
#define _RXM1EIDL_RXM1EID1_POSITION                         0x1
#define _RXM1EIDL_RXM1EID1_SIZE                             0x1
#define _RXM1EIDL_RXM1EID1_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID1_MASK                             0x2
#define _RXM1EIDL_RXM1EID2_POSN                             0x2
#define _RXM1EIDL_RXM1EID2_POSITION                         0x2
#define _RXM1EIDL_RXM1EID2_SIZE                             0x1
#define _RXM1EIDL_RXM1EID2_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID2_MASK                             0x4
#define _RXM1EIDL_RXM1EID3_POSN                             0x3
#define _RXM1EIDL_RXM1EID3_POSITION                         0x3
#define _RXM1EIDL_RXM1EID3_SIZE                             0x1
#define _RXM1EIDL_RXM1EID3_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID3_MASK                             0x8
#define _RXM1EIDL_RXM1EID4_POSN                             0x4
#define _RXM1EIDL_RXM1EID4_POSITION                         0x4
#define _RXM1EIDL_RXM1EID4_SIZE                             0x1
#define _RXM1EIDL_RXM1EID4_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID4_MASK                             0x10
#define _RXM1EIDL_RXM1EID5_POSN                             0x5
#define _RXM1EIDL_RXM1EID5_POSITION                         0x5
#define _RXM1EIDL_RXM1EID5_SIZE                             0x1
#define _RXM1EIDL_RXM1EID5_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID5_MASK                             0x20
#define _RXM1EIDL_RXM1EID6_POSN                             0x6
#define _RXM1EIDL_RXM1EID6_POSITION                         0x6
#define _RXM1EIDL_RXM1EID6_SIZE                             0x1
#define _RXM1EIDL_RXM1EID6_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID6_MASK                             0x40
#define _RXM1EIDL_RXM1EID7_POSN                             0x7
#define _RXM1EIDL_RXM1EID7_POSITION                         0x7
#define _RXM1EIDL_RXM1EID7_SIZE                             0x1
#define _RXM1EIDL_RXM1EID7_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID7_MASK                             0x80

// Register: TXB2CON
#define TXB2CON TXB2CON
extern volatile unsigned char           TXB2CON             __at(0xF20);
#ifndef _LIB_BUILD
asm("TXB2CON equ 0F20h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned                        :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
    };
    struct {
        unsigned TXB2PRI0               :1;
        unsigned TXB2PRI1               :1;
        unsigned                        :1;
        unsigned TXB2REQ                :1;
        unsigned TXB2ERR                :1;
        unsigned TXB2LARB               :1;
        unsigned TXB2ABT                :1;
    };
} TXB2CONbits_t;
extern volatile TXB2CONbits_t TXB2CONbits __at(0xF20);
// bitfield macros
#define _TXB2CON_TXPRI0_POSN                                0x0
#define _TXB2CON_TXPRI0_POSITION                            0x0
#define _TXB2CON_TXPRI0_SIZE                                0x1
#define _TXB2CON_TXPRI0_LENGTH                              0x1
#define _TXB2CON_TXPRI0_MASK                                0x1
#define _TXB2CON_TXPRI1_POSN                                0x1
#define _TXB2CON_TXPRI1_POSITION                            0x1
#define _TXB2CON_TXPRI1_SIZE                                0x1
#define _TXB2CON_TXPRI1_LENGTH                              0x1
#define _TXB2CON_TXPRI1_MASK                                0x2
#define _TXB2CON_TXREQ_POSN                                 0x3
#define _TXB2CON_TXREQ_POSITION                             0x3
#define _TXB2CON_TXREQ_SIZE                                 0x1
#define _TXB2CON_TXREQ_LENGTH                               0x1
#define _TXB2CON_TXREQ_MASK                                 0x8
#define _TXB2CON_TXERR_POSN                                 0x4
#define _TXB2CON_TXERR_POSITION                             0x4
#define _TXB2CON_TXERR_SIZE                                 0x1
#define _TXB2CON_TXERR_LENGTH                               0x1
#define _TXB2CON_TXERR_MASK                                 0x10
#define _TXB2CON_TXLARB_POSN                                0x5
#define _TXB2CON_TXLARB_POSITION                            0x5
#define _TXB2CON_TXLARB_SIZE                                0x1
#define _TXB2CON_TXLARB_LENGTH                              0x1
#define _TXB2CON_TXLARB_MASK                                0x20
#define _TXB2CON_TXABT_POSN                                 0x6
#define _TXB2CON_TXABT_POSITION                             0x6
#define _TXB2CON_TXABT_SIZE                                 0x1
#define _TXB2CON_TXABT_LENGTH                               0x1
#define _TXB2CON_TXABT_MASK                                 0x40
#define _TXB2CON_TXB2PRI0_POSN                              0x0
#define _TXB2CON_TXB2PRI0_POSITION                          0x0
#define _TXB2CON_TXB2PRI0_SIZE                              0x1
#define _TXB2CON_TXB2PRI0_LENGTH                            0x1
#define _TXB2CON_TXB2PRI0_MASK                              0x1
#define _TXB2CON_TXB2PRI1_POSN                              0x1
#define _TXB2CON_TXB2PRI1_POSITION                          0x1
#define _TXB2CON_TXB2PRI1_SIZE                              0x1
#define _TXB2CON_TXB2PRI1_LENGTH                            0x1
#define _TXB2CON_TXB2PRI1_MASK                              0x2
#define _TXB2CON_TXB2REQ_POSN                               0x3
#define _TXB2CON_TXB2REQ_POSITION                           0x3
#define _TXB2CON_TXB2REQ_SIZE                               0x1
#define _TXB2CON_TXB2REQ_LENGTH                             0x1
#define _TXB2CON_TXB2REQ_MASK                               0x8
#define _TXB2CON_TXB2ERR_POSN                               0x4
#define _TXB2CON_TXB2ERR_POSITION                           0x4
#define _TXB2CON_TXB2ERR_SIZE                               0x1
#define _TXB2CON_TXB2ERR_LENGTH                             0x1
#define _TXB2CON_TXB2ERR_MASK                               0x10
#define _TXB2CON_TXB2LARB_POSN                              0x5
#define _TXB2CON_TXB2LARB_POSITION                          0x5
#define _TXB2CON_TXB2LARB_SIZE                              0x1
#define _TXB2CON_TXB2LARB_LENGTH                            0x1
#define _TXB2CON_TXB2LARB_MASK                              0x20
#define _TXB2CON_TXB2ABT_POSN                               0x6
#define _TXB2CON_TXB2ABT_POSITION                           0x6
#define _TXB2CON_TXB2ABT_SIZE                               0x1
#define _TXB2CON_TXB2ABT_LENGTH                             0x1
#define _TXB2CON_TXB2ABT_MASK                               0x40

// Register: TXB2SIDH
#define TXB2SIDH TXB2SIDH
extern volatile unsigned char           TXB2SIDH            __at(0xF21);
#ifndef _LIB_BUILD
asm("TXB2SIDH equ 0F21h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned TXB2SID3               :1;
        unsigned TXB2SID4               :1;
        unsigned TXB2SID5               :1;
        unsigned TXB2SID6               :1;
        unsigned TXB2SID7               :1;
        unsigned TXB2SID8               :1;
        unsigned TXB2SID9               :1;
        unsigned TXB2SID10              :1;
    };
} TXB2SIDHbits_t;
extern volatile TXB2SIDHbits_t TXB2SIDHbits __at(0xF21);
// bitfield macros
#define _TXB2SIDH_SID3_POSN                                 0x0
#define _TXB2SIDH_SID3_POSITION                             0x0
#define _TXB2SIDH_SID3_SIZE                                 0x1
#define _TXB2SIDH_SID3_LENGTH                               0x1
#define _TXB2SIDH_SID3_MASK                                 0x1
#define _TXB2SIDH_SID4_POSN                                 0x1
#define _TXB2SIDH_SID4_POSITION                             0x1
#define _TXB2SIDH_SID4_SIZE                                 0x1
#define _TXB2SIDH_SID4_LENGTH                               0x1
#define _TXB2SIDH_SID4_MASK                                 0x2
#define _TXB2SIDH_SID5_POSN                                 0x2
#define _TXB2SIDH_SID5_POSITION                             0x2
#define _TXB2SIDH_SID5_SIZE                                 0x1
#define _TXB2SIDH_SID5_LENGTH                               0x1
#define _TXB2SIDH_SID5_MASK                                 0x4
#define _TXB2SIDH_SID6_POSN                                 0x3
#define _TXB2SIDH_SID6_POSITION                             0x3
#define _TXB2SIDH_SID6_SIZE                                 0x1
#define _TXB2SIDH_SID6_LENGTH                               0x1
#define _TXB2SIDH_SID6_MASK                                 0x8
#define _TXB2SIDH_SID7_POSN                                 0x4
#define _TXB2SIDH_SID7_POSITION                             0x4
#define _TXB2SIDH_SID7_SIZE                                 0x1
#define _TXB2SIDH_SID7_LENGTH                               0x1
#define _TXB2SIDH_SID7_MASK                                 0x10
#define _TXB2SIDH_SID8_POSN                                 0x5
#define _TXB2SIDH_SID8_POSITION                             0x5
#define _TXB2SIDH_SID8_SIZE                                 0x1
#define _TXB2SIDH_SID8_LENGTH                               0x1
#define _TXB2SIDH_SID8_MASK                                 0x20
#define _TXB2SIDH_SID9_POSN                                 0x6
#define _TXB2SIDH_SID9_POSITION                             0x6
#define _TXB2SIDH_SID9_SIZE                                 0x1
#define _TXB2SIDH_SID9_LENGTH                               0x1
#define _TXB2SIDH_SID9_MASK                                 0x40
#define _TXB2SIDH_SID10_POSN                                0x7
#define _TXB2SIDH_SID10_POSITION                            0x7
#define _TXB2SIDH_SID10_SIZE                                0x1
#define _TXB2SIDH_SID10_LENGTH                              0x1
#define _TXB2SIDH_SID10_MASK                                0x80
#define _TXB2SIDH_TXB2SID3_POSN                             0x0
#define _TXB2SIDH_TXB2SID3_POSITION                         0x0
#define _TXB2SIDH_TXB2SID3_SIZE                             0x1
#define _TXB2SIDH_TXB2SID3_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID3_MASK                             0x1
#define _TXB2SIDH_TXB2SID4_POSN                             0x1
#define _TXB2SIDH_TXB2SID4_POSITION                         0x1
#define _TXB2SIDH_TXB2SID4_SIZE                             0x1
#define _TXB2SIDH_TXB2SID4_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID4_MASK                             0x2
#define _TXB2SIDH_TXB2SID5_POSN                             0x2
#define _TXB2SIDH_TXB2SID5_POSITION                         0x2
#define _TXB2SIDH_TXB2SID5_SIZE                             0x1
#define _TXB2SIDH_TXB2SID5_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID5_MASK                             0x4
#define _TXB2SIDH_TXB2SID6_POSN                             0x3
#define _TXB2SIDH_TXB2SID6_POSITION                         0x3
#define _TXB2SIDH_TXB2SID6_SIZE                             0x1
#define _TXB2SIDH_TXB2SID6_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID6_MASK                             0x8
#define _TXB2SIDH_TXB2SID7_POSN                             0x4
#define _TXB2SIDH_TXB2SID7_POSITION                         0x4
#define _TXB2SIDH_TXB2SID7_SIZE                             0x1
#define _TXB2SIDH_TXB2SID7_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID7_MASK                             0x10
#define _TXB2SIDH_TXB2SID8_POSN                             0x5
#define _TXB2SIDH_TXB2SID8_POSITION                         0x5
#define _TXB2SIDH_TXB2SID8_SIZE                             0x1
#define _TXB2SIDH_TXB2SID8_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID8_MASK                             0x20
#define _TXB2SIDH_TXB2SID9_POSN                             0x6
#define _TXB2SIDH_TXB2SID9_POSITION                         0x6
#define _TXB2SIDH_TXB2SID9_SIZE                             0x1
#define _TXB2SIDH_TXB2SID9_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID9_MASK                             0x40
#define _TXB2SIDH_TXB2SID10_POSN                            0x7
#define _TXB2SIDH_TXB2SID10_POSITION                        0x7
#define _TXB2SIDH_TXB2SID10_SIZE                            0x1
#define _TXB2SIDH_TXB2SID10_LENGTH                          0x1
#define _TXB2SIDH_TXB2SID10_MASK                            0x80

// Register: TXB2SIDL
#define TXB2SIDL TXB2SIDL
extern volatile unsigned char           TXB2SIDL            __at(0xF22);
#ifndef _LIB_BUILD
asm("TXB2SIDL equ 0F22h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDE                  :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned TXB2EID16              :1;
        unsigned TXB2EID17              :1;
        unsigned                        :1;
        unsigned TXB2EXIDE              :1;
        unsigned                        :1;
        unsigned TXB2SID0               :1;
        unsigned TXB2SID1               :1;
        unsigned TXB2SID2               :1;
    };
} TXB2SIDLbits_t;
extern volatile TXB2SIDLbits_t TXB2SIDLbits __at(0xF22);
// bitfield macros
#define _TXB2SIDL_EID16_POSN                                0x0
#define _TXB2SIDL_EID16_POSITION                            0x0
#define _TXB2SIDL_EID16_SIZE                                0x1
#define _TXB2SIDL_EID16_LENGTH                              0x1
#define _TXB2SIDL_EID16_MASK                                0x1
#define _TXB2SIDL_EID17_POSN                                0x1
#define _TXB2SIDL_EID17_POSITION                            0x1
#define _TXB2SIDL_EID17_SIZE                                0x1
#define _TXB2SIDL_EID17_LENGTH                              0x1
#define _TXB2SIDL_EID17_MASK                                0x2
#define _TXB2SIDL_EXIDE_POSN                                0x3
#define _TXB2SIDL_EXIDE_POSITION                            0x3
#define _TXB2SIDL_EXIDE_SIZE                                0x1
#define _TXB2SIDL_EXIDE_LENGTH                              0x1
#define _TXB2SIDL_EXIDE_MASK                                0x8
#define _TXB2SIDL_SID0_POSN                                 0x5
#define _TXB2SIDL_SID0_POSITION                             0x5
#define _TXB2SIDL_SID0_SIZE                                 0x1
#define _TXB2SIDL_SID0_LENGTH                               0x1
#define _TXB2SIDL_SID0_MASK                                 0x20
#define _TXB2SIDL_SID1_POSN                                 0x6
#define _TXB2SIDL_SID1_POSITION                             0x6
#define _TXB2SIDL_SID1_SIZE                                 0x1
#define _TXB2SIDL_SID1_LENGTH                               0x1
#define _TXB2SIDL_SID1_MASK                                 0x40
#define _TXB2SIDL_SID2_POSN                                 0x7
#define _TXB2SIDL_SID2_POSITION                             0x7
#define _TXB2SIDL_SID2_SIZE                                 0x1
#define _TXB2SIDL_SID2_LENGTH                               0x1
#define _TXB2SIDL_SID2_MASK                                 0x80
#define _TXB2SIDL_TXB2EID16_POSN                            0x0
#define _TXB2SIDL_TXB2EID16_POSITION                        0x0
#define _TXB2SIDL_TXB2EID16_SIZE                            0x1
#define _TXB2SIDL_TXB2EID16_LENGTH                          0x1
#define _TXB2SIDL_TXB2EID16_MASK                            0x1
#define _TXB2SIDL_TXB2EID17_POSN                            0x1
#define _TXB2SIDL_TXB2EID17_POSITION                        0x1
#define _TXB2SIDL_TXB2EID17_SIZE                            0x1
#define _TXB2SIDL_TXB2EID17_LENGTH                          0x1
#define _TXB2SIDL_TXB2EID17_MASK                            0x2
#define _TXB2SIDL_TXB2EXIDE_POSN                            0x3
#define _TXB2SIDL_TXB2EXIDE_POSITION                        0x3
#define _TXB2SIDL_TXB2EXIDE_SIZE                            0x1
#define _TXB2SIDL_TXB2EXIDE_LENGTH                          0x1
#define _TXB2SIDL_TXB2EXIDE_MASK                            0x8
#define _TXB2SIDL_TXB2SID0_POSN                             0x5
#define _TXB2SIDL_TXB2SID0_POSITION                         0x5
#define _TXB2SIDL_TXB2SID0_SIZE                             0x1
#define _TXB2SIDL_TXB2SID0_LENGTH                           0x1
#define _TXB2SIDL_TXB2SID0_MASK                             0x20
#define _TXB2SIDL_TXB2SID1_POSN                             0x6
#define _TXB2SIDL_TXB2SID1_POSITION                         0x6
#define _TXB2SIDL_TXB2SID1_SIZE                             0x1
#define _TXB2SIDL_TXB2SID1_LENGTH                           0x1
#define _TXB2SIDL_TXB2SID1_MASK                             0x40
#define _TXB2SIDL_TXB2SID2_POSN                             0x7
#define _TXB2SIDL_TXB2SID2_POSITION                         0x7
#define _TXB2SIDL_TXB2SID2_SIZE                             0x1
#define _TXB2SIDL_TXB2SID2_LENGTH                           0x1
#define _TXB2SIDL_TXB2SID2_MASK                             0x80

// Register: TXB2EIDH
#define TXB2EIDH TXB2EIDH
extern volatile unsigned char           TXB2EIDH            __at(0xF23);
#ifndef _LIB_BUILD
asm("TXB2EIDH equ 0F23h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned TXB2EID8               :1;
        unsigned TXB2EID9               :1;
        unsigned TXB2EID10              :1;
        unsigned TXB2EID11              :1;
        unsigned TXB2EID12              :1;
        unsigned TXB2EID13              :1;
        unsigned TXB2EID14              :1;
        unsigned TXB2EID15              :1;
    };
} TXB2EIDHbits_t;
extern volatile TXB2EIDHbits_t TXB2EIDHbits __at(0xF23);
// bitfield macros
#define _TXB2EIDH_EID8_POSN                                 0x0
#define _TXB2EIDH_EID8_POSITION                             0x0
#define _TXB2EIDH_EID8_SIZE                                 0x1
#define _TXB2EIDH_EID8_LENGTH                               0x1
#define _TXB2EIDH_EID8_MASK                                 0x1
#define _TXB2EIDH_EID9_POSN                                 0x1
#define _TXB2EIDH_EID9_POSITION                             0x1
#define _TXB2EIDH_EID9_SIZE                                 0x1
#define _TXB2EIDH_EID9_LENGTH                               0x1
#define _TXB2EIDH_EID9_MASK                                 0x2
#define _TXB2EIDH_EID10_POSN                                0x2
#define _TXB2EIDH_EID10_POSITION                            0x2
#define _TXB2EIDH_EID10_SIZE                                0x1
#define _TXB2EIDH_EID10_LENGTH                              0x1
#define _TXB2EIDH_EID10_MASK                                0x4
#define _TXB2EIDH_EID11_POSN                                0x3
#define _TXB2EIDH_EID11_POSITION                            0x3
#define _TXB2EIDH_EID11_SIZE                                0x1
#define _TXB2EIDH_EID11_LENGTH                              0x1
#define _TXB2EIDH_EID11_MASK                                0x8
#define _TXB2EIDH_EID12_POSN                                0x4
#define _TXB2EIDH_EID12_POSITION                            0x4
#define _TXB2EIDH_EID12_SIZE                                0x1
#define _TXB2EIDH_EID12_LENGTH                              0x1
#define _TXB2EIDH_EID12_MASK                                0x10
#define _TXB2EIDH_EID13_POSN                                0x5
#define _TXB2EIDH_EID13_POSITION                            0x5
#define _TXB2EIDH_EID13_SIZE                                0x1
#define _TXB2EIDH_EID13_LENGTH                              0x1
#define _TXB2EIDH_EID13_MASK                                0x20
#define _TXB2EIDH_EID14_POSN                                0x6
#define _TXB2EIDH_EID14_POSITION                            0x6
#define _TXB2EIDH_EID14_SIZE                                0x1
#define _TXB2EIDH_EID14_LENGTH                              0x1
#define _TXB2EIDH_EID14_MASK                                0x40
#define _TXB2EIDH_EID15_POSN                                0x7
#define _TXB2EIDH_EID15_POSITION                            0x7
#define _TXB2EIDH_EID15_SIZE                                0x1
#define _TXB2EIDH_EID15_LENGTH                              0x1
#define _TXB2EIDH_EID15_MASK                                0x80
#define _TXB2EIDH_TXB2EID8_POSN                             0x0
#define _TXB2EIDH_TXB2EID8_POSITION                         0x0
#define _TXB2EIDH_TXB2EID8_SIZE                             0x1
#define _TXB2EIDH_TXB2EID8_LENGTH                           0x1
#define _TXB2EIDH_TXB2EID8_MASK                             0x1
#define _TXB2EIDH_TXB2EID9_POSN                             0x1
#define _TXB2EIDH_TXB2EID9_POSITION                         0x1
#define _TXB2EIDH_TXB2EID9_SIZE                             0x1
#define _TXB2EIDH_TXB2EID9_LENGTH                           0x1
#define _TXB2EIDH_TXB2EID9_MASK                             0x2
#define _TXB2EIDH_TXB2EID10_POSN                            0x2
#define _TXB2EIDH_TXB2EID10_POSITION                        0x2
#define _TXB2EIDH_TXB2EID10_SIZE                            0x1
#define _TXB2EIDH_TXB2EID10_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID10_MASK                            0x4
#define _TXB2EIDH_TXB2EID11_POSN                            0x3
#define _TXB2EIDH_TXB2EID11_POSITION                        0x3
#define _TXB2EIDH_TXB2EID11_SIZE                            0x1
#define _TXB2EIDH_TXB2EID11_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID11_MASK                            0x8
#define _TXB2EIDH_TXB2EID12_POSN                            0x4
#define _TXB2EIDH_TXB2EID12_POSITION                        0x4
#define _TXB2EIDH_TXB2EID12_SIZE                            0x1
#define _TXB2EIDH_TXB2EID12_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID12_MASK                            0x10
#define _TXB2EIDH_TXB2EID13_POSN                            0x5
#define _TXB2EIDH_TXB2EID13_POSITION                        0x5
#define _TXB2EIDH_TXB2EID13_SIZE                            0x1
#define _TXB2EIDH_TXB2EID13_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID13_MASK                            0x20
#define _TXB2EIDH_TXB2EID14_POSN                            0x6
#define _TXB2EIDH_TXB2EID14_POSITION                        0x6
#define _TXB2EIDH_TXB2EID14_SIZE                            0x1
#define _TXB2EIDH_TXB2EID14_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID14_MASK                            0x40
#define _TXB2EIDH_TXB2EID15_POSN                            0x7
#define _TXB2EIDH_TXB2EID15_POSITION                        0x7
#define _TXB2EIDH_TXB2EID15_SIZE                            0x1
#define _TXB2EIDH_TXB2EID15_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID15_MASK                            0x80

// Register: TXB2EIDL
#define TXB2EIDL TXB2EIDL
extern volatile unsigned char           TXB2EIDL            __at(0xF24);
#ifndef _LIB_BUILD
asm("TXB2EIDL equ 0F24h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned TXB2EID0               :1;
        unsigned TXB2EID1               :1;
        unsigned TXB2EID2               :1;
        unsigned TXB2EID3               :1;
        unsigned TXB2EID4               :1;
        unsigned TXB2EID5               :1;
        unsigned TXB2EID6               :1;
        unsigned TXB2EID7               :1;
    };
} TXB2EIDLbits_t;
extern volatile TXB2EIDLbits_t TXB2EIDLbits __at(0xF24);
// bitfield macros
#define _TXB2EIDL_EID0_POSN                                 0x0
#define _TXB2EIDL_EID0_POSITION                             0x0
#define _TXB2EIDL_EID0_SIZE                                 0x1
#define _TXB2EIDL_EID0_LENGTH                               0x1
#define _TXB2EIDL_EID0_MASK                                 0x1
#define _TXB2EIDL_EID1_POSN                                 0x1
#define _TXB2EIDL_EID1_POSITION                             0x1
#define _TXB2EIDL_EID1_SIZE                                 0x1
#define _TXB2EIDL_EID1_LENGTH                               0x1
#define _TXB2EIDL_EID1_MASK                                 0x2
#define _TXB2EIDL_EID2_POSN                                 0x2
#define _TXB2EIDL_EID2_POSITION                             0x2
#define _TXB2EIDL_EID2_SIZE                                 0x1
#define _TXB2EIDL_EID2_LENGTH                               0x1
#define _TXB2EIDL_EID2_MASK                                 0x4
#define _TXB2EIDL_EID3_POSN                                 0x3
#define _TXB2EIDL_EID3_POSITION                             0x3
#define _TXB2EIDL_EID3_SIZE                                 0x1
#define _TXB2EIDL_EID3_LENGTH                               0x1
#define _TXB2EIDL_EID3_MASK                                 0x8
#define _TXB2EIDL_EID4_POSN                                 0x4
#define _TXB2EIDL_EID4_POSITION                             0x4
#define _TXB2EIDL_EID4_SIZE                                 0x1
#define _TXB2EIDL_EID4_LENGTH                               0x1
#define _TXB2EIDL_EID4_MASK                                 0x10
#define _TXB2EIDL_EID5_POSN                                 0x5
#define _TXB2EIDL_EID5_POSITION                             0x5
#define _TXB2EIDL_EID5_SIZE                                 0x1
#define _TXB2EIDL_EID5_LENGTH                               0x1
#define _TXB2EIDL_EID5_MASK                                 0x20
#define _TXB2EIDL_EID6_POSN                                 0x6
#define _TXB2EIDL_EID6_POSITION                             0x6
#define _TXB2EIDL_EID6_SIZE                                 0x1
#define _TXB2EIDL_EID6_LENGTH                               0x1
#define _TXB2EIDL_EID6_MASK                                 0x40
#define _TXB2EIDL_EID7_POSN                                 0x7
#define _TXB2EIDL_EID7_POSITION                             0x7
#define _TXB2EIDL_EID7_SIZE                                 0x1
#define _TXB2EIDL_EID7_LENGTH                               0x1
#define _TXB2EIDL_EID7_MASK                                 0x80
#define _TXB2EIDL_TXB2EID0_POSN                             0x0
#define _TXB2EIDL_TXB2EID0_POSITION                         0x0
#define _TXB2EIDL_TXB2EID0_SIZE                             0x1
#define _TXB2EIDL_TXB2EID0_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID0_MASK                             0x1
#define _TXB2EIDL_TXB2EID1_POSN                             0x1
#define _TXB2EIDL_TXB2EID1_POSITION                         0x1
#define _TXB2EIDL_TXB2EID1_SIZE                             0x1
#define _TXB2EIDL_TXB2EID1_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID1_MASK                             0x2
#define _TXB2EIDL_TXB2EID2_POSN                             0x2
#define _TXB2EIDL_TXB2EID2_POSITION                         0x2
#define _TXB2EIDL_TXB2EID2_SIZE                             0x1
#define _TXB2EIDL_TXB2EID2_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID2_MASK                             0x4
#define _TXB2EIDL_TXB2EID3_POSN                             0x3
#define _TXB2EIDL_TXB2EID3_POSITION                         0x3
#define _TXB2EIDL_TXB2EID3_SIZE                             0x1
#define _TXB2EIDL_TXB2EID3_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID3_MASK                             0x8
#define _TXB2EIDL_TXB2EID4_POSN                             0x4
#define _TXB2EIDL_TXB2EID4_POSITION                         0x4
#define _TXB2EIDL_TXB2EID4_SIZE                             0x1
#define _TXB2EIDL_TXB2EID4_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID4_MASK                             0x10
#define _TXB2EIDL_TXB2EID5_POSN                             0x5
#define _TXB2EIDL_TXB2EID5_POSITION                         0x5
#define _TXB2EIDL_TXB2EID5_SIZE                             0x1
#define _TXB2EIDL_TXB2EID5_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID5_MASK                             0x20
#define _TXB2EIDL_TXB2EID6_POSN                             0x6
#define _TXB2EIDL_TXB2EID6_POSITION                         0x6
#define _TXB2EIDL_TXB2EID6_SIZE                             0x1
#define _TXB2EIDL_TXB2EID6_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID6_MASK                             0x40
#define _TXB2EIDL_TXB2EID7_POSN                             0x7
#define _TXB2EIDL_TXB2EID7_POSITION                         0x7
#define _TXB2EIDL_TXB2EID7_SIZE                             0x1
#define _TXB2EIDL_TXB2EID7_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID7_MASK                             0x80

// Register: TXB2DLC
#define TXB2DLC TXB2DLC
extern volatile unsigned char           TXB2DLC             __at(0xF25);
#ifndef _LIB_BUILD
asm("TXB2DLC equ 0F25h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned                        :2;
        unsigned TXRTR                  :1;
    };
    struct {
        unsigned TXB2DLC0               :1;
        unsigned TXB2DLC1               :1;
        unsigned TXB2DLC2               :1;
        unsigned TXB2DLC3               :1;
        unsigned                        :2;
        unsigned TXB2RTR                :1;
    };
} TXB2DLCbits_t;
extern volatile TXB2DLCbits_t TXB2DLCbits __at(0xF25);
// bitfield macros
#define _TXB2DLC_DLC0_POSN                                  0x0
#define _TXB2DLC_DLC0_POSITION                              0x0
#define _TXB2DLC_DLC0_SIZE                                  0x1
#define _TXB2DLC_DLC0_LENGTH                                0x1
#define _TXB2DLC_DLC0_MASK                                  0x1
#define _TXB2DLC_DLC1_POSN                                  0x1
#define _TXB2DLC_DLC1_POSITION                              0x1
#define _TXB2DLC_DLC1_SIZE                                  0x1
#define _TXB2DLC_DLC1_LENGTH                                0x1
#define _TXB2DLC_DLC1_MASK                                  0x2
#define _TXB2DLC_DLC2_POSN                                  0x2
#define _TXB2DLC_DLC2_POSITION                              0x2
#define _TXB2DLC_DLC2_SIZE                                  0x1
#define _TXB2DLC_DLC2_LENGTH                                0x1
#define _TXB2DLC_DLC2_MASK                                  0x4
#define _TXB2DLC_DLC3_POSN                                  0x3
#define _TXB2DLC_DLC3_POSITION                              0x3
#define _TXB2DLC_DLC3_SIZE                                  0x1
#define _TXB2DLC_DLC3_LENGTH                                0x1
#define _TXB2DLC_DLC3_MASK                                  0x8
#define _TXB2DLC_TXRTR_POSN                                 0x6
#define _TXB2DLC_TXRTR_POSITION                             0x6
#define _TXB2DLC_TXRTR_SIZE                                 0x1
#define _TXB2DLC_TXRTR_LENGTH                               0x1
#define _TXB2DLC_TXRTR_MASK                                 0x40
#define _TXB2DLC_TXB2DLC0_POSN                              0x0
#define _TXB2DLC_TXB2DLC0_POSITION                          0x0
#define _TXB2DLC_TXB2DLC0_SIZE                              0x1
#define _TXB2DLC_TXB2DLC0_LENGTH                            0x1
#define _TXB2DLC_TXB2DLC0_MASK                              0x1
#define _TXB2DLC_TXB2DLC1_POSN                              0x1
#define _TXB2DLC_TXB2DLC1_POSITION                          0x1
#define _TXB2DLC_TXB2DLC1_SIZE                              0x1
#define _TXB2DLC_TXB2DLC1_LENGTH                            0x1
#define _TXB2DLC_TXB2DLC1_MASK                              0x2
#define _TXB2DLC_TXB2DLC2_POSN                              0x2
#define _TXB2DLC_TXB2DLC2_POSITION                          0x2
#define _TXB2DLC_TXB2DLC2_SIZE                              0x1
#define _TXB2DLC_TXB2DLC2_LENGTH                            0x1
#define _TXB2DLC_TXB2DLC2_MASK                              0x4
#define _TXB2DLC_TXB2DLC3_POSN                              0x3
#define _TXB2DLC_TXB2DLC3_POSITION                          0x3
#define _TXB2DLC_TXB2DLC3_SIZE                              0x1
#define _TXB2DLC_TXB2DLC3_LENGTH                            0x1
#define _TXB2DLC_TXB2DLC3_MASK                              0x8
#define _TXB2DLC_TXB2RTR_POSN                               0x6
#define _TXB2DLC_TXB2RTR_POSITION                           0x6
#define _TXB2DLC_TXB2RTR_SIZE                               0x1
#define _TXB2DLC_TXB2RTR_LENGTH                             0x1
#define _TXB2DLC_TXB2RTR_MASK                               0x40

// Register: TXB2D0
#define TXB2D0 TXB2D0
extern volatile unsigned char           TXB2D0              __at(0xF26);
#ifndef _LIB_BUILD
asm("TXB2D0 equ 0F26h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D00                :1;
        unsigned TXB2D01                :1;
        unsigned TXB2D02                :1;
        unsigned TXB2D03                :1;
        unsigned TXB2D04                :1;
        unsigned TXB2D05                :1;
        unsigned TXB2D06                :1;
        unsigned TXB2D07                :1;
    };
} TXB2D0bits_t;
extern volatile TXB2D0bits_t TXB2D0bits __at(0xF26);
// bitfield macros
#define _TXB2D0_TXB2D00_POSN                                0x0
#define _TXB2D0_TXB2D00_POSITION                            0x0
#define _TXB2D0_TXB2D00_SIZE                                0x1
#define _TXB2D0_TXB2D00_LENGTH                              0x1
#define _TXB2D0_TXB2D00_MASK                                0x1
#define _TXB2D0_TXB2D01_POSN                                0x1
#define _TXB2D0_TXB2D01_POSITION                            0x1
#define _TXB2D0_TXB2D01_SIZE                                0x1
#define _TXB2D0_TXB2D01_LENGTH                              0x1
#define _TXB2D0_TXB2D01_MASK                                0x2
#define _TXB2D0_TXB2D02_POSN                                0x2
#define _TXB2D0_TXB2D02_POSITION                            0x2
#define _TXB2D0_TXB2D02_SIZE                                0x1
#define _TXB2D0_TXB2D02_LENGTH                              0x1
#define _TXB2D0_TXB2D02_MASK                                0x4
#define _TXB2D0_TXB2D03_POSN                                0x3
#define _TXB2D0_TXB2D03_POSITION                            0x3
#define _TXB2D0_TXB2D03_SIZE                                0x1
#define _TXB2D0_TXB2D03_LENGTH                              0x1
#define _TXB2D0_TXB2D03_MASK                                0x8
#define _TXB2D0_TXB2D04_POSN                                0x4
#define _TXB2D0_TXB2D04_POSITION                            0x4
#define _TXB2D0_TXB2D04_SIZE                                0x1
#define _TXB2D0_TXB2D04_LENGTH                              0x1
#define _TXB2D0_TXB2D04_MASK                                0x10
#define _TXB2D0_TXB2D05_POSN                                0x5
#define _TXB2D0_TXB2D05_POSITION                            0x5
#define _TXB2D0_TXB2D05_SIZE                                0x1
#define _TXB2D0_TXB2D05_LENGTH                              0x1
#define _TXB2D0_TXB2D05_MASK                                0x20
#define _TXB2D0_TXB2D06_POSN                                0x6
#define _TXB2D0_TXB2D06_POSITION                            0x6
#define _TXB2D0_TXB2D06_SIZE                                0x1
#define _TXB2D0_TXB2D06_LENGTH                              0x1
#define _TXB2D0_TXB2D06_MASK                                0x40
#define _TXB2D0_TXB2D07_POSN                                0x7
#define _TXB2D0_TXB2D07_POSITION                            0x7
#define _TXB2D0_TXB2D07_SIZE                                0x1
#define _TXB2D0_TXB2D07_LENGTH                              0x1
#define _TXB2D0_TXB2D07_MASK                                0x80

// Register: TXB2D1
#define TXB2D1 TXB2D1
extern volatile unsigned char           TXB2D1              __at(0xF27);
#ifndef _LIB_BUILD
asm("TXB2D1 equ 0F27h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D10                :1;
        unsigned TXB2D11                :1;
        unsigned TXB2D12                :1;
        unsigned TXB2D13                :1;
        unsigned TXB2D14                :1;
        unsigned TXB2D15                :1;
        unsigned TXB2D16                :1;
        unsigned TXB2D17                :1;
    };
} TXB2D1bits_t;
extern volatile TXB2D1bits_t TXB2D1bits __at(0xF27);
// bitfield macros
#define _TXB2D1_TXB2D10_POSN                                0x0
#define _TXB2D1_TXB2D10_POSITION                            0x0
#define _TXB2D1_TXB2D10_SIZE                                0x1
#define _TXB2D1_TXB2D10_LENGTH                              0x1
#define _TXB2D1_TXB2D10_MASK                                0x1
#define _TXB2D1_TXB2D11_POSN                                0x1
#define _TXB2D1_TXB2D11_POSITION                            0x1
#define _TXB2D1_TXB2D11_SIZE                                0x1
#define _TXB2D1_TXB2D11_LENGTH                              0x1
#define _TXB2D1_TXB2D11_MASK                                0x2
#define _TXB2D1_TXB2D12_POSN                                0x2
#define _TXB2D1_TXB2D12_POSITION                            0x2
#define _TXB2D1_TXB2D12_SIZE                                0x1
#define _TXB2D1_TXB2D12_LENGTH                              0x1
#define _TXB2D1_TXB2D12_MASK                                0x4
#define _TXB2D1_TXB2D13_POSN                                0x3
#define _TXB2D1_TXB2D13_POSITION                            0x3
#define _TXB2D1_TXB2D13_SIZE                                0x1
#define _TXB2D1_TXB2D13_LENGTH                              0x1
#define _TXB2D1_TXB2D13_MASK                                0x8
#define _TXB2D1_TXB2D14_POSN                                0x4
#define _TXB2D1_TXB2D14_POSITION                            0x4
#define _TXB2D1_TXB2D14_SIZE                                0x1
#define _TXB2D1_TXB2D14_LENGTH                              0x1
#define _TXB2D1_TXB2D14_MASK                                0x10
#define _TXB2D1_TXB2D15_POSN                                0x5
#define _TXB2D1_TXB2D15_POSITION                            0x5
#define _TXB2D1_TXB2D15_SIZE                                0x1
#define _TXB2D1_TXB2D15_LENGTH                              0x1
#define _TXB2D1_TXB2D15_MASK                                0x20
#define _TXB2D1_TXB2D16_POSN                                0x6
#define _TXB2D1_TXB2D16_POSITION                            0x6
#define _TXB2D1_TXB2D16_SIZE                                0x1
#define _TXB2D1_TXB2D16_LENGTH                              0x1
#define _TXB2D1_TXB2D16_MASK                                0x40
#define _TXB2D1_TXB2D17_POSN                                0x7
#define _TXB2D1_TXB2D17_POSITION                            0x7
#define _TXB2D1_TXB2D17_SIZE                                0x1
#define _TXB2D1_TXB2D17_LENGTH                              0x1
#define _TXB2D1_TXB2D17_MASK                                0x80

// Register: TXB2D2
#define TXB2D2 TXB2D2
extern volatile unsigned char           TXB2D2              __at(0xF28);
#ifndef _LIB_BUILD
asm("TXB2D2 equ 0F28h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D20                :1;
        unsigned TXB2D21                :1;
        unsigned TXB2D22                :1;
        unsigned TXB2D23                :1;
        unsigned TXB2D24                :1;
        unsigned TXB2D25                :1;
        unsigned TXB2D26                :1;
        unsigned TXB2D27                :1;
    };
} TXB2D2bits_t;
extern volatile TXB2D2bits_t TXB2D2bits __at(0xF28);
// bitfield macros
#define _TXB2D2_TXB2D20_POSN                                0x0
#define _TXB2D2_TXB2D20_POSITION                            0x0
#define _TXB2D2_TXB2D20_SIZE                                0x1
#define _TXB2D2_TXB2D20_LENGTH                              0x1
#define _TXB2D2_TXB2D20_MASK                                0x1
#define _TXB2D2_TXB2D21_POSN                                0x1
#define _TXB2D2_TXB2D21_POSITION                            0x1
#define _TXB2D2_TXB2D21_SIZE                                0x1
#define _TXB2D2_TXB2D21_LENGTH                              0x1
#define _TXB2D2_TXB2D21_MASK                                0x2
#define _TXB2D2_TXB2D22_POSN                                0x2
#define _TXB2D2_TXB2D22_POSITION                            0x2
#define _TXB2D2_TXB2D22_SIZE                                0x1
#define _TXB2D2_TXB2D22_LENGTH                              0x1
#define _TXB2D2_TXB2D22_MASK                                0x4
#define _TXB2D2_TXB2D23_POSN                                0x3
#define _TXB2D2_TXB2D23_POSITION                            0x3
#define _TXB2D2_TXB2D23_SIZE                                0x1
#define _TXB2D2_TXB2D23_LENGTH                              0x1
#define _TXB2D2_TXB2D23_MASK                                0x8
#define _TXB2D2_TXB2D24_POSN                                0x4
#define _TXB2D2_TXB2D24_POSITION                            0x4
#define _TXB2D2_TXB2D24_SIZE                                0x1
#define _TXB2D2_TXB2D24_LENGTH                              0x1
#define _TXB2D2_TXB2D24_MASK                                0x10
#define _TXB2D2_TXB2D25_POSN                                0x5
#define _TXB2D2_TXB2D25_POSITION                            0x5
#define _TXB2D2_TXB2D25_SIZE                                0x1
#define _TXB2D2_TXB2D25_LENGTH                              0x1
#define _TXB2D2_TXB2D25_MASK                                0x20
#define _TXB2D2_TXB2D26_POSN                                0x6
#define _TXB2D2_TXB2D26_POSITION                            0x6
#define _TXB2D2_TXB2D26_SIZE                                0x1
#define _TXB2D2_TXB2D26_LENGTH                              0x1
#define _TXB2D2_TXB2D26_MASK                                0x40
#define _TXB2D2_TXB2D27_POSN                                0x7
#define _TXB2D2_TXB2D27_POSITION                            0x7
#define _TXB2D2_TXB2D27_SIZE                                0x1
#define _TXB2D2_TXB2D27_LENGTH                              0x1
#define _TXB2D2_TXB2D27_MASK                                0x80

// Register: TXB2D3
#define TXB2D3 TXB2D3
extern volatile unsigned char           TXB2D3              __at(0xF29);
#ifndef _LIB_BUILD
asm("TXB2D3 equ 0F29h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D30                :1;
        unsigned TXB2D31                :1;
        unsigned TXB2D32                :1;
        unsigned TXB2D33                :1;
        unsigned TXB2D34                :1;
        unsigned TXB2D35                :1;
        unsigned TXB2D36                :1;
        unsigned TXB2D37                :1;
    };
} TXB2D3bits_t;
extern volatile TXB2D3bits_t TXB2D3bits __at(0xF29);
// bitfield macros
#define _TXB2D3_TXB2D30_POSN                                0x0
#define _TXB2D3_TXB2D30_POSITION                            0x0
#define _TXB2D3_TXB2D30_SIZE                                0x1
#define _TXB2D3_TXB2D30_LENGTH                              0x1
#define _TXB2D3_TXB2D30_MASK                                0x1
#define _TXB2D3_TXB2D31_POSN                                0x1
#define _TXB2D3_TXB2D31_POSITION                            0x1
#define _TXB2D3_TXB2D31_SIZE                                0x1
#define _TXB2D3_TXB2D31_LENGTH                              0x1
#define _TXB2D3_TXB2D31_MASK                                0x2
#define _TXB2D3_TXB2D32_POSN                                0x2
#define _TXB2D3_TXB2D32_POSITION                            0x2
#define _TXB2D3_TXB2D32_SIZE                                0x1
#define _TXB2D3_TXB2D32_LENGTH                              0x1
#define _TXB2D3_TXB2D32_MASK                                0x4
#define _TXB2D3_TXB2D33_POSN                                0x3
#define _TXB2D3_TXB2D33_POSITION                            0x3
#define _TXB2D3_TXB2D33_SIZE                                0x1
#define _TXB2D3_TXB2D33_LENGTH                              0x1
#define _TXB2D3_TXB2D33_MASK                                0x8
#define _TXB2D3_TXB2D34_POSN                                0x4
#define _TXB2D3_TXB2D34_POSITION                            0x4
#define _TXB2D3_TXB2D34_SIZE                                0x1
#define _TXB2D3_TXB2D34_LENGTH                              0x1
#define _TXB2D3_TXB2D34_MASK                                0x10
#define _TXB2D3_TXB2D35_POSN                                0x5
#define _TXB2D3_TXB2D35_POSITION                            0x5
#define _TXB2D3_TXB2D35_SIZE                                0x1
#define _TXB2D3_TXB2D35_LENGTH                              0x1
#define _TXB2D3_TXB2D35_MASK                                0x20
#define _TXB2D3_TXB2D36_POSN                                0x6
#define _TXB2D3_TXB2D36_POSITION                            0x6
#define _TXB2D3_TXB2D36_SIZE                                0x1
#define _TXB2D3_TXB2D36_LENGTH                              0x1
#define _TXB2D3_TXB2D36_MASK                                0x40
#define _TXB2D3_TXB2D37_POSN                                0x7
#define _TXB2D3_TXB2D37_POSITION                            0x7
#define _TXB2D3_TXB2D37_SIZE                                0x1
#define _TXB2D3_TXB2D37_LENGTH                              0x1
#define _TXB2D3_TXB2D37_MASK                                0x80

// Register: TXB2D4
#define TXB2D4 TXB2D4
extern volatile unsigned char           TXB2D4              __at(0xF2A);
#ifndef _LIB_BUILD
asm("TXB2D4 equ 0F2Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D40                :1;
        unsigned TXB2D41                :1;
        unsigned TXB2D42                :1;
        unsigned TXB2D43                :1;
        unsigned TXB2D44                :1;
        unsigned TXB2D45                :1;
        unsigned TXB2D46                :1;
        unsigned TXB2D47                :1;
    };
} TXB2D4bits_t;
extern volatile TXB2D4bits_t TXB2D4bits __at(0xF2A);
// bitfield macros
#define _TXB2D4_TXB2D40_POSN                                0x0
#define _TXB2D4_TXB2D40_POSITION                            0x0
#define _TXB2D4_TXB2D40_SIZE                                0x1
#define _TXB2D4_TXB2D40_LENGTH                              0x1
#define _TXB2D4_TXB2D40_MASK                                0x1
#define _TXB2D4_TXB2D41_POSN                                0x1
#define _TXB2D4_TXB2D41_POSITION                            0x1
#define _TXB2D4_TXB2D41_SIZE                                0x1
#define _TXB2D4_TXB2D41_LENGTH                              0x1
#define _TXB2D4_TXB2D41_MASK                                0x2
#define _TXB2D4_TXB2D42_POSN                                0x2
#define _TXB2D4_TXB2D42_POSITION                            0x2
#define _TXB2D4_TXB2D42_SIZE                                0x1
#define _TXB2D4_TXB2D42_LENGTH                              0x1
#define _TXB2D4_TXB2D42_MASK                                0x4
#define _TXB2D4_TXB2D43_POSN                                0x3
#define _TXB2D4_TXB2D43_POSITION                            0x3
#define _TXB2D4_TXB2D43_SIZE                                0x1
#define _TXB2D4_TXB2D43_LENGTH                              0x1
#define _TXB2D4_TXB2D43_MASK                                0x8
#define _TXB2D4_TXB2D44_POSN                                0x4
#define _TXB2D4_TXB2D44_POSITION                            0x4
#define _TXB2D4_TXB2D44_SIZE                                0x1
#define _TXB2D4_TXB2D44_LENGTH                              0x1
#define _TXB2D4_TXB2D44_MASK                                0x10
#define _TXB2D4_TXB2D45_POSN                                0x5
#define _TXB2D4_TXB2D45_POSITION                            0x5
#define _TXB2D4_TXB2D45_SIZE                                0x1
#define _TXB2D4_TXB2D45_LENGTH                              0x1
#define _TXB2D4_TXB2D45_MASK                                0x20
#define _TXB2D4_TXB2D46_POSN                                0x6
#define _TXB2D4_TXB2D46_POSITION                            0x6
#define _TXB2D4_TXB2D46_SIZE                                0x1
#define _TXB2D4_TXB2D46_LENGTH                              0x1
#define _TXB2D4_TXB2D46_MASK                                0x40
#define _TXB2D4_TXB2D47_POSN                                0x7
#define _TXB2D4_TXB2D47_POSITION                            0x7
#define _TXB2D4_TXB2D47_SIZE                                0x1
#define _TXB2D4_TXB2D47_LENGTH                              0x1
#define _TXB2D4_TXB2D47_MASK                                0x80

// Register: TXB2D5
#define TXB2D5 TXB2D5
extern volatile unsigned char           TXB2D5              __at(0xF2B);
#ifndef _LIB_BUILD
asm("TXB2D5 equ 0F2Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D50                :1;
        unsigned TXB2D51                :1;
        unsigned TXB2D52                :1;
        unsigned TXB2D53                :1;
        unsigned TXB2D54                :1;
        unsigned TXB2D55                :1;
        unsigned TXB2D56                :1;
        unsigned TXB2D57                :1;
    };
} TXB2D5bits_t;
extern volatile TXB2D5bits_t TXB2D5bits __at(0xF2B);
// bitfield macros
#define _TXB2D5_TXB2D50_POSN                                0x0
#define _TXB2D5_TXB2D50_POSITION                            0x0
#define _TXB2D5_TXB2D50_SIZE                                0x1
#define _TXB2D5_TXB2D50_LENGTH                              0x1
#define _TXB2D5_TXB2D50_MASK                                0x1
#define _TXB2D5_TXB2D51_POSN                                0x1
#define _TXB2D5_TXB2D51_POSITION                            0x1
#define _TXB2D5_TXB2D51_SIZE                                0x1
#define _TXB2D5_TXB2D51_LENGTH                              0x1
#define _TXB2D5_TXB2D51_MASK                                0x2
#define _TXB2D5_TXB2D52_POSN                                0x2
#define _TXB2D5_TXB2D52_POSITION                            0x2
#define _TXB2D5_TXB2D52_SIZE                                0x1
#define _TXB2D5_TXB2D52_LENGTH                              0x1
#define _TXB2D5_TXB2D52_MASK                                0x4
#define _TXB2D5_TXB2D53_POSN                                0x3
#define _TXB2D5_TXB2D53_POSITION                            0x3
#define _TXB2D5_TXB2D53_SIZE                                0x1
#define _TXB2D5_TXB2D53_LENGTH                              0x1
#define _TXB2D5_TXB2D53_MASK                                0x8
#define _TXB2D5_TXB2D54_POSN                                0x4
#define _TXB2D5_TXB2D54_POSITION                            0x4
#define _TXB2D5_TXB2D54_SIZE                                0x1
#define _TXB2D5_TXB2D54_LENGTH                              0x1
#define _TXB2D5_TXB2D54_MASK                                0x10
#define _TXB2D5_TXB2D55_POSN                                0x5
#define _TXB2D5_TXB2D55_POSITION                            0x5
#define _TXB2D5_TXB2D55_SIZE                                0x1
#define _TXB2D5_TXB2D55_LENGTH                              0x1
#define _TXB2D5_TXB2D55_MASK                                0x20
#define _TXB2D5_TXB2D56_POSN                                0x6
#define _TXB2D5_TXB2D56_POSITION                            0x6
#define _TXB2D5_TXB2D56_SIZE                                0x1
#define _TXB2D5_TXB2D56_LENGTH                              0x1
#define _TXB2D5_TXB2D56_MASK                                0x40
#define _TXB2D5_TXB2D57_POSN                                0x7
#define _TXB2D5_TXB2D57_POSITION                            0x7
#define _TXB2D5_TXB2D57_SIZE                                0x1
#define _TXB2D5_TXB2D57_LENGTH                              0x1
#define _TXB2D5_TXB2D57_MASK                                0x80

// Register: TXB2D6
#define TXB2D6 TXB2D6
extern volatile unsigned char           TXB2D6              __at(0xF2C);
#ifndef _LIB_BUILD
asm("TXB2D6 equ 0F2Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D60                :1;
        unsigned TXB2D61                :1;
        unsigned TXB2D62                :1;
        unsigned TXB2D63                :1;
        unsigned TXB2D64                :1;
        unsigned TXB2D65                :1;
        unsigned TXB2D66                :1;
        unsigned TXB2D67                :1;
    };
} TXB2D6bits_t;
extern volatile TXB2D6bits_t TXB2D6bits __at(0xF2C);
// bitfield macros
#define _TXB2D6_TXB2D60_POSN                                0x0
#define _TXB2D6_TXB2D60_POSITION                            0x0
#define _TXB2D6_TXB2D60_SIZE                                0x1
#define _TXB2D6_TXB2D60_LENGTH                              0x1
#define _TXB2D6_TXB2D60_MASK                                0x1
#define _TXB2D6_TXB2D61_POSN                                0x1
#define _TXB2D6_TXB2D61_POSITION                            0x1
#define _TXB2D6_TXB2D61_SIZE                                0x1
#define _TXB2D6_TXB2D61_LENGTH                              0x1
#define _TXB2D6_TXB2D61_MASK                                0x2
#define _TXB2D6_TXB2D62_POSN                                0x2
#define _TXB2D6_TXB2D62_POSITION                            0x2
#define _TXB2D6_TXB2D62_SIZE                                0x1
#define _TXB2D6_TXB2D62_LENGTH                              0x1
#define _TXB2D6_TXB2D62_MASK                                0x4
#define _TXB2D6_TXB2D63_POSN                                0x3
#define _TXB2D6_TXB2D63_POSITION                            0x3
#define _TXB2D6_TXB2D63_SIZE                                0x1
#define _TXB2D6_TXB2D63_LENGTH                              0x1
#define _TXB2D6_TXB2D63_MASK                                0x8
#define _TXB2D6_TXB2D64_POSN                                0x4
#define _TXB2D6_TXB2D64_POSITION                            0x4
#define _TXB2D6_TXB2D64_SIZE                                0x1
#define _TXB2D6_TXB2D64_LENGTH                              0x1
#define _TXB2D6_TXB2D64_MASK                                0x10
#define _TXB2D6_TXB2D65_POSN                                0x5
#define _TXB2D6_TXB2D65_POSITION                            0x5
#define _TXB2D6_TXB2D65_SIZE                                0x1
#define _TXB2D6_TXB2D65_LENGTH                              0x1
#define _TXB2D6_TXB2D65_MASK                                0x20
#define _TXB2D6_TXB2D66_POSN                                0x6
#define _TXB2D6_TXB2D66_POSITION                            0x6
#define _TXB2D6_TXB2D66_SIZE                                0x1
#define _TXB2D6_TXB2D66_LENGTH                              0x1
#define _TXB2D6_TXB2D66_MASK                                0x40
#define _TXB2D6_TXB2D67_POSN                                0x7
#define _TXB2D6_TXB2D67_POSITION                            0x7
#define _TXB2D6_TXB2D67_SIZE                                0x1
#define _TXB2D6_TXB2D67_LENGTH                              0x1
#define _TXB2D6_TXB2D67_MASK                                0x80

// Register: TXB2D7
#define TXB2D7 TXB2D7
extern volatile unsigned char           TXB2D7              __at(0xF2D);
#ifndef _LIB_BUILD
asm("TXB2D7 equ 0F2Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D70                :1;
        unsigned TXB2D71                :1;
        unsigned TXB2D72                :1;
        unsigned TXB2D73                :1;
        unsigned TXB2D74                :1;
        unsigned TXB2D75                :1;
        unsigned TXB2D76                :1;
        unsigned TXB2D77                :1;
    };
} TXB2D7bits_t;
extern volatile TXB2D7bits_t TXB2D7bits __at(0xF2D);
// bitfield macros
#define _TXB2D7_TXB2D70_POSN                                0x0
#define _TXB2D7_TXB2D70_POSITION                            0x0
#define _TXB2D7_TXB2D70_SIZE                                0x1
#define _TXB2D7_TXB2D70_LENGTH                              0x1
#define _TXB2D7_TXB2D70_MASK                                0x1
#define _TXB2D7_TXB2D71_POSN                                0x1
#define _TXB2D7_TXB2D71_POSITION                            0x1
#define _TXB2D7_TXB2D71_SIZE                                0x1
#define _TXB2D7_TXB2D71_LENGTH                              0x1
#define _TXB2D7_TXB2D71_MASK                                0x2
#define _TXB2D7_TXB2D72_POSN                                0x2
#define _TXB2D7_TXB2D72_POSITION                            0x2
#define _TXB2D7_TXB2D72_SIZE                                0x1
#define _TXB2D7_TXB2D72_LENGTH                              0x1
#define _TXB2D7_TXB2D72_MASK                                0x4
#define _TXB2D7_TXB2D73_POSN                                0x3
#define _TXB2D7_TXB2D73_POSITION                            0x3
#define _TXB2D7_TXB2D73_SIZE                                0x1
#define _TXB2D7_TXB2D73_LENGTH                              0x1
#define _TXB2D7_TXB2D73_MASK                                0x8
#define _TXB2D7_TXB2D74_POSN                                0x4
#define _TXB2D7_TXB2D74_POSITION                            0x4
#define _TXB2D7_TXB2D74_SIZE                                0x1
#define _TXB2D7_TXB2D74_LENGTH                              0x1
#define _TXB2D7_TXB2D74_MASK                                0x10
#define _TXB2D7_TXB2D75_POSN                                0x5
#define _TXB2D7_TXB2D75_POSITION                            0x5
#define _TXB2D7_TXB2D75_SIZE                                0x1
#define _TXB2D7_TXB2D75_LENGTH                              0x1
#define _TXB2D7_TXB2D75_MASK                                0x20
#define _TXB2D7_TXB2D76_POSN                                0x6
#define _TXB2D7_TXB2D76_POSITION                            0x6
#define _TXB2D7_TXB2D76_SIZE                                0x1
#define _TXB2D7_TXB2D76_LENGTH                              0x1
#define _TXB2D7_TXB2D76_MASK                                0x40
#define _TXB2D7_TXB2D77_POSN                                0x7
#define _TXB2D7_TXB2D77_POSITION                            0x7
#define _TXB2D7_TXB2D77_SIZE                                0x1
#define _TXB2D7_TXB2D77_LENGTH                              0x1
#define _TXB2D7_TXB2D77_MASK                                0x80

// Register: CANSTATRO4
#define CANSTATRO4 CANSTATRO4
extern volatile unsigned char           CANSTATRO4          __at(0xF2E);
#ifndef _LIB_BUILD
asm("CANSTATRO4 equ 0F2Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned ICODE0                 :1;
        unsigned ICODE1                 :1;
        unsigned ICODE2                 :1;
        unsigned                        :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTATRO4bits_t;
extern volatile CANSTATRO4bits_t CANSTATRO4bits __at(0xF2E);
// bitfield macros
#define _CANSTATRO4_ICODE0_POSN                             0x1
#define _CANSTATRO4_ICODE0_POSITION                         0x1
#define _CANSTATRO4_ICODE0_SIZE                             0x1
#define _CANSTATRO4_ICODE0_LENGTH                           0x1
#define _CANSTATRO4_ICODE0_MASK                             0x2
#define _CANSTATRO4_ICODE1_POSN                             0x2
#define _CANSTATRO4_ICODE1_POSITION                         0x2
#define _CANSTATRO4_ICODE1_SIZE                             0x1
#define _CANSTATRO4_ICODE1_LENGTH                           0x1
#define _CANSTATRO4_ICODE1_MASK                             0x4
#define _CANSTATRO4_ICODE2_POSN                             0x3
#define _CANSTATRO4_ICODE2_POSITION                         0x3
#define _CANSTATRO4_ICODE2_SIZE                             0x1
#define _CANSTATRO4_ICODE2_LENGTH                           0x1
#define _CANSTATRO4_ICODE2_MASK                             0x8
#define _CANSTATRO4_OPMODE0_POSN                            0x5
#define _CANSTATRO4_OPMODE0_POSITION                        0x5
#define _CANSTATRO4_OPMODE0_SIZE                            0x1
#define _CANSTATRO4_OPMODE0_LENGTH                          0x1
#define _CANSTATRO4_OPMODE0_MASK                            0x20
#define _CANSTATRO4_OPMODE1_POSN                            0x6
#define _CANSTATRO4_OPMODE1_POSITION                        0x6
#define _CANSTATRO4_OPMODE1_SIZE                            0x1
#define _CANSTATRO4_OPMODE1_LENGTH                          0x1
#define _CANSTATRO4_OPMODE1_MASK                            0x40
#define _CANSTATRO4_OPMODE2_POSN                            0x7
#define _CANSTATRO4_OPMODE2_POSITION                        0x7
#define _CANSTATRO4_OPMODE2_SIZE                            0x1
#define _CANSTATRO4_OPMODE2_LENGTH                          0x1
#define _CANSTATRO4_OPMODE2_MASK                            0x80

// Register: TXB1CON
#define TXB1CON TXB1CON
extern volatile unsigned char           TXB1CON             __at(0xF30);
#ifndef _LIB_BUILD
asm("TXB1CON equ 0F30h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned                        :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
    };
    struct {
        unsigned TXB1PRI0               :1;
        unsigned TXB1PRI1               :1;
        unsigned                        :1;
        unsigned TXB1REQ                :1;
        unsigned TXB1ERR                :1;
        unsigned TXB1LARB               :1;
        unsigned TXB1ABT                :1;
    };
} TXB1CONbits_t;
extern volatile TXB1CONbits_t TXB1CONbits __at(0xF30);
// bitfield macros
#define _TXB1CON_TXPRI0_POSN                                0x0
#define _TXB1CON_TXPRI0_POSITION                            0x0
#define _TXB1CON_TXPRI0_SIZE                                0x1
#define _TXB1CON_TXPRI0_LENGTH                              0x1
#define _TXB1CON_TXPRI0_MASK                                0x1
#define _TXB1CON_TXPRI1_POSN                                0x1
#define _TXB1CON_TXPRI1_POSITION                            0x1
#define _TXB1CON_TXPRI1_SIZE                                0x1
#define _TXB1CON_TXPRI1_LENGTH                              0x1
#define _TXB1CON_TXPRI1_MASK                                0x2
#define _TXB1CON_TXREQ_POSN                                 0x3
#define _TXB1CON_TXREQ_POSITION                             0x3
#define _TXB1CON_TXREQ_SIZE                                 0x1
#define _TXB1CON_TXREQ_LENGTH                               0x1
#define _TXB1CON_TXREQ_MASK                                 0x8
#define _TXB1CON_TXERR_POSN                                 0x4
#define _TXB1CON_TXERR_POSITION                             0x4
#define _TXB1CON_TXERR_SIZE                                 0x1
#define _TXB1CON_TXERR_LENGTH                               0x1
#define _TXB1CON_TXERR_MASK                                 0x10
#define _TXB1CON_TXLARB_POSN                                0x5
#define _TXB1CON_TXLARB_POSITION                            0x5
#define _TXB1CON_TXLARB_SIZE                                0x1
#define _TXB1CON_TXLARB_LENGTH                              0x1
#define _TXB1CON_TXLARB_MASK                                0x20
#define _TXB1CON_TXABT_POSN                                 0x6
#define _TXB1CON_TXABT_POSITION                             0x6
#define _TXB1CON_TXABT_SIZE                                 0x1
#define _TXB1CON_TXABT_LENGTH                               0x1
#define _TXB1CON_TXABT_MASK                                 0x40
#define _TXB1CON_TXB1PRI0_POSN                              0x0
#define _TXB1CON_TXB1PRI0_POSITION                          0x0
#define _TXB1CON_TXB1PRI0_SIZE                              0x1
#define _TXB1CON_TXB1PRI0_LENGTH                            0x1
#define _TXB1CON_TXB1PRI0_MASK                              0x1
#define _TXB1CON_TXB1PRI1_POSN                              0x1
#define _TXB1CON_TXB1PRI1_POSITION                          0x1
#define _TXB1CON_TXB1PRI1_SIZE                              0x1
#define _TXB1CON_TXB1PRI1_LENGTH                            0x1
#define _TXB1CON_TXB1PRI1_MASK                              0x2
#define _TXB1CON_TXB1REQ_POSN                               0x3
#define _TXB1CON_TXB1REQ_POSITION                           0x3
#define _TXB1CON_TXB1REQ_SIZE                               0x1
#define _TXB1CON_TXB1REQ_LENGTH                             0x1
#define _TXB1CON_TXB1REQ_MASK                               0x8
#define _TXB1CON_TXB1ERR_POSN                               0x4
#define _TXB1CON_TXB1ERR_POSITION                           0x4
#define _TXB1CON_TXB1ERR_SIZE                               0x1
#define _TXB1CON_TXB1ERR_LENGTH                             0x1
#define _TXB1CON_TXB1ERR_MASK                               0x10
#define _TXB1CON_TXB1LARB_POSN                              0x5
#define _TXB1CON_TXB1LARB_POSITION                          0x5
#define _TXB1CON_TXB1LARB_SIZE                              0x1
#define _TXB1CON_TXB1LARB_LENGTH                            0x1
#define _TXB1CON_TXB1LARB_MASK                              0x20
#define _TXB1CON_TXB1ABT_POSN                               0x6
#define _TXB1CON_TXB1ABT_POSITION                           0x6
#define _TXB1CON_TXB1ABT_SIZE                               0x1
#define _TXB1CON_TXB1ABT_LENGTH                             0x1
#define _TXB1CON_TXB1ABT_MASK                               0x40

// Register: TXB1SIDH
#define TXB1SIDH TXB1SIDH
extern volatile unsigned char           TXB1SIDH            __at(0xF31);
#ifndef _LIB_BUILD
asm("TXB1SIDH equ 0F31h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned TXB1SID3               :1;
        unsigned TXB1SID4               :1;
        unsigned TXB1SID5               :1;
        unsigned TXB1SID6               :1;
        unsigned TXB1SID7               :1;
        unsigned TXB1SID8               :1;
        unsigned TXB1SID9               :1;
        unsigned TXB1SID10              :1;
    };
} TXB1SIDHbits_t;
extern volatile TXB1SIDHbits_t TXB1SIDHbits __at(0xF31);
// bitfield macros
#define _TXB1SIDH_SID3_POSN                                 0x0
#define _TXB1SIDH_SID3_POSITION                             0x0
#define _TXB1SIDH_SID3_SIZE                                 0x1
#define _TXB1SIDH_SID3_LENGTH                               0x1
#define _TXB1SIDH_SID3_MASK                                 0x1
#define _TXB1SIDH_SID4_POSN                                 0x1
#define _TXB1SIDH_SID4_POSITION                             0x1
#define _TXB1SIDH_SID4_SIZE                                 0x1
#define _TXB1SIDH_SID4_LENGTH                               0x1
#define _TXB1SIDH_SID4_MASK                                 0x2
#define _TXB1SIDH_SID5_POSN                                 0x2
#define _TXB1SIDH_SID5_POSITION                             0x2
#define _TXB1SIDH_SID5_SIZE                                 0x1
#define _TXB1SIDH_SID5_LENGTH                               0x1
#define _TXB1SIDH_SID5_MASK                                 0x4
#define _TXB1SIDH_SID6_POSN                                 0x3
#define _TXB1SIDH_SID6_POSITION                             0x3
#define _TXB1SIDH_SID6_SIZE                                 0x1
#define _TXB1SIDH_SID6_LENGTH                               0x1
#define _TXB1SIDH_SID6_MASK                                 0x8
#define _TXB1SIDH_SID7_POSN                                 0x4
#define _TXB1SIDH_SID7_POSITION                             0x4
#define _TXB1SIDH_SID7_SIZE                                 0x1
#define _TXB1SIDH_SID7_LENGTH                               0x1
#define _TXB1SIDH_SID7_MASK                                 0x10
#define _TXB1SIDH_SID8_POSN                                 0x5
#define _TXB1SIDH_SID8_POSITION                             0x5
#define _TXB1SIDH_SID8_SIZE                                 0x1
#define _TXB1SIDH_SID8_LENGTH                               0x1
#define _TXB1SIDH_SID8_MASK                                 0x20
#define _TXB1SIDH_SID9_POSN                                 0x6
#define _TXB1SIDH_SID9_POSITION                             0x6
#define _TXB1SIDH_SID9_SIZE                                 0x1
#define _TXB1SIDH_SID9_LENGTH                               0x1
#define _TXB1SIDH_SID9_MASK                                 0x40
#define _TXB1SIDH_SID10_POSN                                0x7
#define _TXB1SIDH_SID10_POSITION                            0x7
#define _TXB1SIDH_SID10_SIZE                                0x1
#define _TXB1SIDH_SID10_LENGTH                              0x1
#define _TXB1SIDH_SID10_MASK                                0x80
#define _TXB1SIDH_TXB1SID3_POSN                             0x0
#define _TXB1SIDH_TXB1SID3_POSITION                         0x0
#define _TXB1SIDH_TXB1SID3_SIZE                             0x1
#define _TXB1SIDH_TXB1SID3_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID3_MASK                             0x1
#define _TXB1SIDH_TXB1SID4_POSN                             0x1
#define _TXB1SIDH_TXB1SID4_POSITION                         0x1
#define _TXB1SIDH_TXB1SID4_SIZE                             0x1
#define _TXB1SIDH_TXB1SID4_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID4_MASK                             0x2
#define _TXB1SIDH_TXB1SID5_POSN                             0x2
#define _TXB1SIDH_TXB1SID5_POSITION                         0x2
#define _TXB1SIDH_TXB1SID5_SIZE                             0x1
#define _TXB1SIDH_TXB1SID5_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID5_MASK                             0x4
#define _TXB1SIDH_TXB1SID6_POSN                             0x3
#define _TXB1SIDH_TXB1SID6_POSITION                         0x3
#define _TXB1SIDH_TXB1SID6_SIZE                             0x1
#define _TXB1SIDH_TXB1SID6_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID6_MASK                             0x8
#define _TXB1SIDH_TXB1SID7_POSN                             0x4
#define _TXB1SIDH_TXB1SID7_POSITION                         0x4
#define _TXB1SIDH_TXB1SID7_SIZE                             0x1
#define _TXB1SIDH_TXB1SID7_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID7_MASK                             0x10
#define _TXB1SIDH_TXB1SID8_POSN                             0x5
#define _TXB1SIDH_TXB1SID8_POSITION                         0x5
#define _TXB1SIDH_TXB1SID8_SIZE                             0x1
#define _TXB1SIDH_TXB1SID8_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID8_MASK                             0x20
#define _TXB1SIDH_TXB1SID9_POSN                             0x6
#define _TXB1SIDH_TXB1SID9_POSITION                         0x6
#define _TXB1SIDH_TXB1SID9_SIZE                             0x1
#define _TXB1SIDH_TXB1SID9_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID9_MASK                             0x40
#define _TXB1SIDH_TXB1SID10_POSN                            0x7
#define _TXB1SIDH_TXB1SID10_POSITION                        0x7
#define _TXB1SIDH_TXB1SID10_SIZE                            0x1
#define _TXB1SIDH_TXB1SID10_LENGTH                          0x1
#define _TXB1SIDH_TXB1SID10_MASK                            0x80

// Register: TXB1SIDL
#define TXB1SIDL TXB1SIDL
extern volatile unsigned char           TXB1SIDL            __at(0xF32);
#ifndef _LIB_BUILD
asm("TXB1SIDL equ 0F32h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDE                  :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned TXB1EID16              :1;
        unsigned TXB1EID17              :1;
        unsigned                        :1;
        unsigned TXB1EXIDE              :1;
        unsigned                        :1;
        unsigned TXB1SID0               :1;
        unsigned TXB1SID1               :1;
        unsigned TXB1SID2               :1;
    };
} TXB1SIDLbits_t;
extern volatile TXB1SIDLbits_t TXB1SIDLbits __at(0xF32);
// bitfield macros
#define _TXB1SIDL_EID16_POSN                                0x0
#define _TXB1SIDL_EID16_POSITION                            0x0
#define _TXB1SIDL_EID16_SIZE                                0x1
#define _TXB1SIDL_EID16_LENGTH                              0x1
#define _TXB1SIDL_EID16_MASK                                0x1
#define _TXB1SIDL_EID17_POSN                                0x1
#define _TXB1SIDL_EID17_POSITION                            0x1
#define _TXB1SIDL_EID17_SIZE                                0x1
#define _TXB1SIDL_EID17_LENGTH                              0x1
#define _TXB1SIDL_EID17_MASK                                0x2
#define _TXB1SIDL_EXIDE_POSN                                0x3
#define _TXB1SIDL_EXIDE_POSITION                            0x3
#define _TXB1SIDL_EXIDE_SIZE                                0x1
#define _TXB1SIDL_EXIDE_LENGTH                              0x1
#define _TXB1SIDL_EXIDE_MASK                                0x8
#define _TXB1SIDL_SID0_POSN                                 0x5
#define _TXB1SIDL_SID0_POSITION                             0x5
#define _TXB1SIDL_SID0_SIZE                                 0x1
#define _TXB1SIDL_SID0_LENGTH                               0x1
#define _TXB1SIDL_SID0_MASK                                 0x20
#define _TXB1SIDL_SID1_POSN                                 0x6
#define _TXB1SIDL_SID1_POSITION                             0x6
#define _TXB1SIDL_SID1_SIZE                                 0x1
#define _TXB1SIDL_SID1_LENGTH                               0x1
#define _TXB1SIDL_SID1_MASK                                 0x40
#define _TXB1SIDL_SID2_POSN                                 0x7
#define _TXB1SIDL_SID2_POSITION                             0x7
#define _TXB1SIDL_SID2_SIZE                                 0x1
#define _TXB1SIDL_SID2_LENGTH                               0x1
#define _TXB1SIDL_SID2_MASK                                 0x80
#define _TXB1SIDL_TXB1EID16_POSN                            0x0
#define _TXB1SIDL_TXB1EID16_POSITION                        0x0
#define _TXB1SIDL_TXB1EID16_SIZE                            0x1
#define _TXB1SIDL_TXB1EID16_LENGTH                          0x1
#define _TXB1SIDL_TXB1EID16_MASK                            0x1
#define _TXB1SIDL_TXB1EID17_POSN                            0x1
#define _TXB1SIDL_TXB1EID17_POSITION                        0x1
#define _TXB1SIDL_TXB1EID17_SIZE                            0x1
#define _TXB1SIDL_TXB1EID17_LENGTH                          0x1
#define _TXB1SIDL_TXB1EID17_MASK                            0x2
#define _TXB1SIDL_TXB1EXIDE_POSN                            0x3
#define _TXB1SIDL_TXB1EXIDE_POSITION                        0x3
#define _TXB1SIDL_TXB1EXIDE_SIZE                            0x1
#define _TXB1SIDL_TXB1EXIDE_LENGTH                          0x1
#define _TXB1SIDL_TXB1EXIDE_MASK                            0x8
#define _TXB1SIDL_TXB1SID0_POSN                             0x5
#define _TXB1SIDL_TXB1SID0_POSITION                         0x5
#define _TXB1SIDL_TXB1SID0_SIZE                             0x1
#define _TXB1SIDL_TXB1SID0_LENGTH                           0x1
#define _TXB1SIDL_TXB1SID0_MASK                             0x20
#define _TXB1SIDL_TXB1SID1_POSN                             0x6
#define _TXB1SIDL_TXB1SID1_POSITION                         0x6
#define _TXB1SIDL_TXB1SID1_SIZE                             0x1
#define _TXB1SIDL_TXB1SID1_LENGTH                           0x1
#define _TXB1SIDL_TXB1SID1_MASK                             0x40
#define _TXB1SIDL_TXB1SID2_POSN                             0x7
#define _TXB1SIDL_TXB1SID2_POSITION                         0x7
#define _TXB1SIDL_TXB1SID2_SIZE                             0x1
#define _TXB1SIDL_TXB1SID2_LENGTH                           0x1
#define _TXB1SIDL_TXB1SID2_MASK                             0x80

// Register: TXB1EIDH
#define TXB1EIDH TXB1EIDH
extern volatile unsigned char           TXB1EIDH            __at(0xF33);
#ifndef _LIB_BUILD
asm("TXB1EIDH equ 0F33h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned TXB1EID8               :1;
        unsigned TXB1EID9               :1;
        unsigned TXB1EID10              :1;
        unsigned TXB1EID11              :1;
        unsigned TXB1EID12              :1;
        unsigned TXB1EID13              :1;
        unsigned TXB1EID14              :1;
        unsigned TXB1EID15              :1;
    };
} TXB1EIDHbits_t;
extern volatile TXB1EIDHbits_t TXB1EIDHbits __at(0xF33);
// bitfield macros
#define _TXB1EIDH_EID8_POSN                                 0x0
#define _TXB1EIDH_EID8_POSITION                             0x0
#define _TXB1EIDH_EID8_SIZE                                 0x1
#define _TXB1EIDH_EID8_LENGTH                               0x1
#define _TXB1EIDH_EID8_MASK                                 0x1
#define _TXB1EIDH_EID9_POSN                                 0x1
#define _TXB1EIDH_EID9_POSITION                             0x1
#define _TXB1EIDH_EID9_SIZE                                 0x1
#define _TXB1EIDH_EID9_LENGTH                               0x1
#define _TXB1EIDH_EID9_MASK                                 0x2
#define _TXB1EIDH_EID10_POSN                                0x2
#define _TXB1EIDH_EID10_POSITION                            0x2
#define _TXB1EIDH_EID10_SIZE                                0x1
#define _TXB1EIDH_EID10_LENGTH                              0x1
#define _TXB1EIDH_EID10_MASK                                0x4
#define _TXB1EIDH_EID11_POSN                                0x3
#define _TXB1EIDH_EID11_POSITION                            0x3
#define _TXB1EIDH_EID11_SIZE                                0x1
#define _TXB1EIDH_EID11_LENGTH                              0x1
#define _TXB1EIDH_EID11_MASK                                0x8
#define _TXB1EIDH_EID12_POSN                                0x4
#define _TXB1EIDH_EID12_POSITION                            0x4
#define _TXB1EIDH_EID12_SIZE                                0x1
#define _TXB1EIDH_EID12_LENGTH                              0x1
#define _TXB1EIDH_EID12_MASK                                0x10
#define _TXB1EIDH_EID13_POSN                                0x5
#define _TXB1EIDH_EID13_POSITION                            0x5
#define _TXB1EIDH_EID13_SIZE                                0x1
#define _TXB1EIDH_EID13_LENGTH                              0x1
#define _TXB1EIDH_EID13_MASK                                0x20
#define _TXB1EIDH_EID14_POSN                                0x6
#define _TXB1EIDH_EID14_POSITION                            0x6
#define _TXB1EIDH_EID14_SIZE                                0x1
#define _TXB1EIDH_EID14_LENGTH                              0x1
#define _TXB1EIDH_EID14_MASK                                0x40
#define _TXB1EIDH_EID15_POSN                                0x7
#define _TXB1EIDH_EID15_POSITION                            0x7
#define _TXB1EIDH_EID15_SIZE                                0x1
#define _TXB1EIDH_EID15_LENGTH                              0x1
#define _TXB1EIDH_EID15_MASK                                0x80
#define _TXB1EIDH_TXB1EID8_POSN                             0x0
#define _TXB1EIDH_TXB1EID8_POSITION                         0x0
#define _TXB1EIDH_TXB1EID8_SIZE                             0x1
#define _TXB1EIDH_TXB1EID8_LENGTH                           0x1
#define _TXB1EIDH_TXB1EID8_MASK                             0x1
#define _TXB1EIDH_TXB1EID9_POSN                             0x1
#define _TXB1EIDH_TXB1EID9_POSITION                         0x1
#define _TXB1EIDH_TXB1EID9_SIZE                             0x1
#define _TXB1EIDH_TXB1EID9_LENGTH                           0x1
#define _TXB1EIDH_TXB1EID9_MASK                             0x2
#define _TXB1EIDH_TXB1EID10_POSN                            0x2
#define _TXB1EIDH_TXB1EID10_POSITION                        0x2
#define _TXB1EIDH_TXB1EID10_SIZE                            0x1
#define _TXB1EIDH_TXB1EID10_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID10_MASK                            0x4
#define _TXB1EIDH_TXB1EID11_POSN                            0x3
#define _TXB1EIDH_TXB1EID11_POSITION                        0x3
#define _TXB1EIDH_TXB1EID11_SIZE                            0x1
#define _TXB1EIDH_TXB1EID11_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID11_MASK                            0x8
#define _TXB1EIDH_TXB1EID12_POSN                            0x4
#define _TXB1EIDH_TXB1EID12_POSITION                        0x4
#define _TXB1EIDH_TXB1EID12_SIZE                            0x1
#define _TXB1EIDH_TXB1EID12_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID12_MASK                            0x10
#define _TXB1EIDH_TXB1EID13_POSN                            0x5
#define _TXB1EIDH_TXB1EID13_POSITION                        0x5
#define _TXB1EIDH_TXB1EID13_SIZE                            0x1
#define _TXB1EIDH_TXB1EID13_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID13_MASK                            0x20
#define _TXB1EIDH_TXB1EID14_POSN                            0x6
#define _TXB1EIDH_TXB1EID14_POSITION                        0x6
#define _TXB1EIDH_TXB1EID14_SIZE                            0x1
#define _TXB1EIDH_TXB1EID14_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID14_MASK                            0x40
#define _TXB1EIDH_TXB1EID15_POSN                            0x7
#define _TXB1EIDH_TXB1EID15_POSITION                        0x7
#define _TXB1EIDH_TXB1EID15_SIZE                            0x1
#define _TXB1EIDH_TXB1EID15_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID15_MASK                            0x80

// Register: TXB1EIDL
#define TXB1EIDL TXB1EIDL
extern volatile unsigned char           TXB1EIDL            __at(0xF34);
#ifndef _LIB_BUILD
asm("TXB1EIDL equ 0F34h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned TXB1EID0               :1;
        unsigned TXB1EID1               :1;
        unsigned TXB1EID2               :1;
        unsigned TXB1EID3               :1;
        unsigned TXB1EID4               :1;
        unsigned TXB1EID5               :1;
        unsigned TXB1EID6               :1;
        unsigned TXB1EID7               :1;
    };
} TXB1EIDLbits_t;
extern volatile TXB1EIDLbits_t TXB1EIDLbits __at(0xF34);
// bitfield macros
#define _TXB1EIDL_EID0_POSN                                 0x0
#define _TXB1EIDL_EID0_POSITION                             0x0
#define _TXB1EIDL_EID0_SIZE                                 0x1
#define _TXB1EIDL_EID0_LENGTH                               0x1
#define _TXB1EIDL_EID0_MASK                                 0x1
#define _TXB1EIDL_EID1_POSN                                 0x1
#define _TXB1EIDL_EID1_POSITION                             0x1
#define _TXB1EIDL_EID1_SIZE                                 0x1
#define _TXB1EIDL_EID1_LENGTH                               0x1
#define _TXB1EIDL_EID1_MASK                                 0x2
#define _TXB1EIDL_EID2_POSN                                 0x2
#define _TXB1EIDL_EID2_POSITION                             0x2
#define _TXB1EIDL_EID2_SIZE                                 0x1
#define _TXB1EIDL_EID2_LENGTH                               0x1
#define _TXB1EIDL_EID2_MASK                                 0x4
#define _TXB1EIDL_EID3_POSN                                 0x3
#define _TXB1EIDL_EID3_POSITION                             0x3
#define _TXB1EIDL_EID3_SIZE                                 0x1
#define _TXB1EIDL_EID3_LENGTH                               0x1
#define _TXB1EIDL_EID3_MASK                                 0x8
#define _TXB1EIDL_EID4_POSN                                 0x4
#define _TXB1EIDL_EID4_POSITION                             0x4
#define _TXB1EIDL_EID4_SIZE                                 0x1
#define _TXB1EIDL_EID4_LENGTH                               0x1
#define _TXB1EIDL_EID4_MASK                                 0x10
#define _TXB1EIDL_EID5_POSN                                 0x5
#define _TXB1EIDL_EID5_POSITION                             0x5
#define _TXB1EIDL_EID5_SIZE                                 0x1
#define _TXB1EIDL_EID5_LENGTH                               0x1
#define _TXB1EIDL_EID5_MASK                                 0x20
#define _TXB1EIDL_EID6_POSN                                 0x6
#define _TXB1EIDL_EID6_POSITION                             0x6
#define _TXB1EIDL_EID6_SIZE                                 0x1
#define _TXB1EIDL_EID6_LENGTH                               0x1
#define _TXB1EIDL_EID6_MASK                                 0x40
#define _TXB1EIDL_EID7_POSN                                 0x7
#define _TXB1EIDL_EID7_POSITION                             0x7
#define _TXB1EIDL_EID7_SIZE                                 0x1
#define _TXB1EIDL_EID7_LENGTH                               0x1
#define _TXB1EIDL_EID7_MASK                                 0x80
#define _TXB1EIDL_TXB1EID0_POSN                             0x0
#define _TXB1EIDL_TXB1EID0_POSITION                         0x0
#define _TXB1EIDL_TXB1EID0_SIZE                             0x1
#define _TXB1EIDL_TXB1EID0_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID0_MASK                             0x1
#define _TXB1EIDL_TXB1EID1_POSN                             0x1
#define _TXB1EIDL_TXB1EID1_POSITION                         0x1
#define _TXB1EIDL_TXB1EID1_SIZE                             0x1
#define _TXB1EIDL_TXB1EID1_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID1_MASK                             0x2
#define _TXB1EIDL_TXB1EID2_POSN                             0x2
#define _TXB1EIDL_TXB1EID2_POSITION                         0x2
#define _TXB1EIDL_TXB1EID2_SIZE                             0x1
#define _TXB1EIDL_TXB1EID2_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID2_MASK                             0x4
#define _TXB1EIDL_TXB1EID3_POSN                             0x3
#define _TXB1EIDL_TXB1EID3_POSITION                         0x3
#define _TXB1EIDL_TXB1EID3_SIZE                             0x1
#define _TXB1EIDL_TXB1EID3_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID3_MASK                             0x8
#define _TXB1EIDL_TXB1EID4_POSN                             0x4
#define _TXB1EIDL_TXB1EID4_POSITION                         0x4
#define _TXB1EIDL_TXB1EID4_SIZE                             0x1
#define _TXB1EIDL_TXB1EID4_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID4_MASK                             0x10
#define _TXB1EIDL_TXB1EID5_POSN                             0x5
#define _TXB1EIDL_TXB1EID5_POSITION                         0x5
#define _TXB1EIDL_TXB1EID5_SIZE                             0x1
#define _TXB1EIDL_TXB1EID5_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID5_MASK                             0x20
#define _TXB1EIDL_TXB1EID6_POSN                             0x6
#define _TXB1EIDL_TXB1EID6_POSITION                         0x6
#define _TXB1EIDL_TXB1EID6_SIZE                             0x1
#define _TXB1EIDL_TXB1EID6_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID6_MASK                             0x40
#define _TXB1EIDL_TXB1EID7_POSN                             0x7
#define _TXB1EIDL_TXB1EID7_POSITION                         0x7
#define _TXB1EIDL_TXB1EID7_SIZE                             0x1
#define _TXB1EIDL_TXB1EID7_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID7_MASK                             0x80

// Register: TXB1DLC
#define TXB1DLC TXB1DLC
extern volatile unsigned char           TXB1DLC             __at(0xF35);
#ifndef _LIB_BUILD
asm("TXB1DLC equ 0F35h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned                        :2;
        unsigned TXRTR                  :1;
    };
    struct {
        unsigned TXB1DLC0               :1;
        unsigned TXB1DLC1               :1;
        unsigned TXB1DLC2               :1;
        unsigned TXB1DLC3               :1;
        unsigned                        :2;
        unsigned TXB1RTR                :1;
    };
} TXB1DLCbits_t;
extern volatile TXB1DLCbits_t TXB1DLCbits __at(0xF35);
// bitfield macros
#define _TXB1DLC_DLC0_POSN                                  0x0
#define _TXB1DLC_DLC0_POSITION                              0x0
#define _TXB1DLC_DLC0_SIZE                                  0x1
#define _TXB1DLC_DLC0_LENGTH                                0x1
#define _TXB1DLC_DLC0_MASK                                  0x1
#define _TXB1DLC_DLC1_POSN                                  0x1
#define _TXB1DLC_DLC1_POSITION                              0x1
#define _TXB1DLC_DLC1_SIZE                                  0x1
#define _TXB1DLC_DLC1_LENGTH                                0x1
#define _TXB1DLC_DLC1_MASK                                  0x2
#define _TXB1DLC_DLC2_POSN                                  0x2
#define _TXB1DLC_DLC2_POSITION                              0x2
#define _TXB1DLC_DLC2_SIZE                                  0x1
#define _TXB1DLC_DLC2_LENGTH                                0x1
#define _TXB1DLC_DLC2_MASK                                  0x4
#define _TXB1DLC_DLC3_POSN                                  0x3
#define _TXB1DLC_DLC3_POSITION                              0x3
#define _TXB1DLC_DLC3_SIZE                                  0x1
#define _TXB1DLC_DLC3_LENGTH                                0x1
#define _TXB1DLC_DLC3_MASK                                  0x8
#define _TXB1DLC_TXRTR_POSN                                 0x6
#define _TXB1DLC_TXRTR_POSITION                             0x6
#define _TXB1DLC_TXRTR_SIZE                                 0x1
#define _TXB1DLC_TXRTR_LENGTH                               0x1
#define _TXB1DLC_TXRTR_MASK                                 0x40
#define _TXB1DLC_TXB1DLC0_POSN                              0x0
#define _TXB1DLC_TXB1DLC0_POSITION                          0x0
#define _TXB1DLC_TXB1DLC0_SIZE                              0x1
#define _TXB1DLC_TXB1DLC0_LENGTH                            0x1
#define _TXB1DLC_TXB1DLC0_MASK                              0x1
#define _TXB1DLC_TXB1DLC1_POSN                              0x1
#define _TXB1DLC_TXB1DLC1_POSITION                          0x1
#define _TXB1DLC_TXB1DLC1_SIZE                              0x1
#define _TXB1DLC_TXB1DLC1_LENGTH                            0x1
#define _TXB1DLC_TXB1DLC1_MASK                              0x2
#define _TXB1DLC_TXB1DLC2_POSN                              0x2
#define _TXB1DLC_TXB1DLC2_POSITION                          0x2
#define _TXB1DLC_TXB1DLC2_SIZE                              0x1
#define _TXB1DLC_TXB1DLC2_LENGTH                            0x1
#define _TXB1DLC_TXB1DLC2_MASK                              0x4
#define _TXB1DLC_TXB1DLC3_POSN                              0x3
#define _TXB1DLC_TXB1DLC3_POSITION                          0x3
#define _TXB1DLC_TXB1DLC3_SIZE                              0x1
#define _TXB1DLC_TXB1DLC3_LENGTH                            0x1
#define _TXB1DLC_TXB1DLC3_MASK                              0x8
#define _TXB1DLC_TXB1RTR_POSN                               0x6
#define _TXB1DLC_TXB1RTR_POSITION                           0x6
#define _TXB1DLC_TXB1RTR_SIZE                               0x1
#define _TXB1DLC_TXB1RTR_LENGTH                             0x1
#define _TXB1DLC_TXB1RTR_MASK                               0x40

// Register: TXB1D0
#define TXB1D0 TXB1D0
extern volatile unsigned char           TXB1D0              __at(0xF36);
#ifndef _LIB_BUILD
asm("TXB1D0 equ 0F36h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D00                :1;
        unsigned TXB1D01                :1;
        unsigned TXB1D02                :1;
        unsigned TXB1D03                :1;
        unsigned TXB1D04                :1;
        unsigned TXB1D05                :1;
        unsigned TXB1D06                :1;
        unsigned TXB1D07                :1;
    };
} TXB1D0bits_t;
extern volatile TXB1D0bits_t TXB1D0bits __at(0xF36);
// bitfield macros
#define _TXB1D0_TXB1D00_POSN                                0x0
#define _TXB1D0_TXB1D00_POSITION                            0x0
#define _TXB1D0_TXB1D00_SIZE                                0x1
#define _TXB1D0_TXB1D00_LENGTH                              0x1
#define _TXB1D0_TXB1D00_MASK                                0x1
#define _TXB1D0_TXB1D01_POSN                                0x1
#define _TXB1D0_TXB1D01_POSITION                            0x1
#define _TXB1D0_TXB1D01_SIZE                                0x1
#define _TXB1D0_TXB1D01_LENGTH                              0x1
#define _TXB1D0_TXB1D01_MASK                                0x2
#define _TXB1D0_TXB1D02_POSN                                0x2
#define _TXB1D0_TXB1D02_POSITION                            0x2
#define _TXB1D0_TXB1D02_SIZE                                0x1
#define _TXB1D0_TXB1D02_LENGTH                              0x1
#define _TXB1D0_TXB1D02_MASK                                0x4
#define _TXB1D0_TXB1D03_POSN                                0x3
#define _TXB1D0_TXB1D03_POSITION                            0x3
#define _TXB1D0_TXB1D03_SIZE                                0x1
#define _TXB1D0_TXB1D03_LENGTH                              0x1
#define _TXB1D0_TXB1D03_MASK                                0x8
#define _TXB1D0_TXB1D04_POSN                                0x4
#define _TXB1D0_TXB1D04_POSITION                            0x4
#define _TXB1D0_TXB1D04_SIZE                                0x1
#define _TXB1D0_TXB1D04_LENGTH                              0x1
#define _TXB1D0_TXB1D04_MASK                                0x10
#define _TXB1D0_TXB1D05_POSN                                0x5
#define _TXB1D0_TXB1D05_POSITION                            0x5
#define _TXB1D0_TXB1D05_SIZE                                0x1
#define _TXB1D0_TXB1D05_LENGTH                              0x1
#define _TXB1D0_TXB1D05_MASK                                0x20
#define _TXB1D0_TXB1D06_POSN                                0x6
#define _TXB1D0_TXB1D06_POSITION                            0x6
#define _TXB1D0_TXB1D06_SIZE                                0x1
#define _TXB1D0_TXB1D06_LENGTH                              0x1
#define _TXB1D0_TXB1D06_MASK                                0x40
#define _TXB1D0_TXB1D07_POSN                                0x7
#define _TXB1D0_TXB1D07_POSITION                            0x7
#define _TXB1D0_TXB1D07_SIZE                                0x1
#define _TXB1D0_TXB1D07_LENGTH                              0x1
#define _TXB1D0_TXB1D07_MASK                                0x80

// Register: TXB1D1
#define TXB1D1 TXB1D1
extern volatile unsigned char           TXB1D1              __at(0xF37);
#ifndef _LIB_BUILD
asm("TXB1D1 equ 0F37h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D10                :1;
        unsigned TXB1D11                :1;
        unsigned TXB1D12                :1;
        unsigned TXB1D13                :1;
        unsigned TXB1D14                :1;
        unsigned TXB1D15                :1;
        unsigned TXB1D16                :1;
        unsigned TXB1D17                :1;
    };
} TXB1D1bits_t;
extern volatile TXB1D1bits_t TXB1D1bits __at(0xF37);
// bitfield macros
#define _TXB1D1_TXB1D10_POSN                                0x0
#define _TXB1D1_TXB1D10_POSITION                            0x0
#define _TXB1D1_TXB1D10_SIZE                                0x1
#define _TXB1D1_TXB1D10_LENGTH                              0x1
#define _TXB1D1_TXB1D10_MASK                                0x1
#define _TXB1D1_TXB1D11_POSN                                0x1
#define _TXB1D1_TXB1D11_POSITION                            0x1
#define _TXB1D1_TXB1D11_SIZE                                0x1
#define _TXB1D1_TXB1D11_LENGTH                              0x1
#define _TXB1D1_TXB1D11_MASK                                0x2
#define _TXB1D1_TXB1D12_POSN                                0x2
#define _TXB1D1_TXB1D12_POSITION                            0x2
#define _TXB1D1_TXB1D12_SIZE                                0x1
#define _TXB1D1_TXB1D12_LENGTH                              0x1
#define _TXB1D1_TXB1D12_MASK                                0x4
#define _TXB1D1_TXB1D13_POSN                                0x3
#define _TXB1D1_TXB1D13_POSITION                            0x3
#define _TXB1D1_TXB1D13_SIZE                                0x1
#define _TXB1D1_TXB1D13_LENGTH                              0x1
#define _TXB1D1_TXB1D13_MASK                                0x8
#define _TXB1D1_TXB1D14_POSN                                0x4
#define _TXB1D1_TXB1D14_POSITION                            0x4
#define _TXB1D1_TXB1D14_SIZE                                0x1
#define _TXB1D1_TXB1D14_LENGTH                              0x1
#define _TXB1D1_TXB1D14_MASK                                0x10
#define _TXB1D1_TXB1D15_POSN                                0x5
#define _TXB1D1_TXB1D15_POSITION                            0x5
#define _TXB1D1_TXB1D15_SIZE                                0x1
#define _TXB1D1_TXB1D15_LENGTH                              0x1
#define _TXB1D1_TXB1D15_MASK                                0x20
#define _TXB1D1_TXB1D16_POSN                                0x6
#define _TXB1D1_TXB1D16_POSITION                            0x6
#define _TXB1D1_TXB1D16_SIZE                                0x1
#define _TXB1D1_TXB1D16_LENGTH                              0x1
#define _TXB1D1_TXB1D16_MASK                                0x40
#define _TXB1D1_TXB1D17_POSN                                0x7
#define _TXB1D1_TXB1D17_POSITION                            0x7
#define _TXB1D1_TXB1D17_SIZE                                0x1
#define _TXB1D1_TXB1D17_LENGTH                              0x1
#define _TXB1D1_TXB1D17_MASK                                0x80

// Register: TXB1D2
#define TXB1D2 TXB1D2
extern volatile unsigned char           TXB1D2              __at(0xF38);
#ifndef _LIB_BUILD
asm("TXB1D2 equ 0F38h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D20                :1;
        unsigned TXB1D21                :1;
        unsigned TXB1D22                :1;
        unsigned TXB1D23                :1;
        unsigned TXB1D24                :1;
        unsigned TXB1D25                :1;
        unsigned TXB1D26                :1;
        unsigned TXB1D27                :1;
    };
    struct {
        unsigned                        :3;
        unsigned TBB1D23                :1;
    };
} TXB1D2bits_t;
extern volatile TXB1D2bits_t TXB1D2bits __at(0xF38);
// bitfield macros
#define _TXB1D2_TXB1D20_POSN                                0x0
#define _TXB1D2_TXB1D20_POSITION                            0x0
#define _TXB1D2_TXB1D20_SIZE                                0x1
#define _TXB1D2_TXB1D20_LENGTH                              0x1
#define _TXB1D2_TXB1D20_MASK                                0x1
#define _TXB1D2_TXB1D21_POSN                                0x1
#define _TXB1D2_TXB1D21_POSITION                            0x1
#define _TXB1D2_TXB1D21_SIZE                                0x1
#define _TXB1D2_TXB1D21_LENGTH                              0x1
#define _TXB1D2_TXB1D21_MASK                                0x2
#define _TXB1D2_TXB1D22_POSN                                0x2
#define _TXB1D2_TXB1D22_POSITION                            0x2
#define _TXB1D2_TXB1D22_SIZE                                0x1
#define _TXB1D2_TXB1D22_LENGTH                              0x1
#define _TXB1D2_TXB1D22_MASK                                0x4
#define _TXB1D2_TXB1D23_POSN                                0x3
#define _TXB1D2_TXB1D23_POSITION                            0x3
#define _TXB1D2_TXB1D23_SIZE                                0x1
#define _TXB1D2_TXB1D23_LENGTH                              0x1
#define _TXB1D2_TXB1D23_MASK                                0x8
#define _TXB1D2_TXB1D24_POSN                                0x4
#define _TXB1D2_TXB1D24_POSITION                            0x4
#define _TXB1D2_TXB1D24_SIZE                                0x1
#define _TXB1D2_TXB1D24_LENGTH                              0x1
#define _TXB1D2_TXB1D24_MASK                                0x10
#define _TXB1D2_TXB1D25_POSN                                0x5
#define _TXB1D2_TXB1D25_POSITION                            0x5
#define _TXB1D2_TXB1D25_SIZE                                0x1
#define _TXB1D2_TXB1D25_LENGTH                              0x1
#define _TXB1D2_TXB1D25_MASK                                0x20
#define _TXB1D2_TXB1D26_POSN                                0x6
#define _TXB1D2_TXB1D26_POSITION                            0x6
#define _TXB1D2_TXB1D26_SIZE                                0x1
#define _TXB1D2_TXB1D26_LENGTH                              0x1
#define _TXB1D2_TXB1D26_MASK                                0x40
#define _TXB1D2_TXB1D27_POSN                                0x7
#define _TXB1D2_TXB1D27_POSITION                            0x7
#define _TXB1D2_TXB1D27_SIZE                                0x1
#define _TXB1D2_TXB1D27_LENGTH                              0x1
#define _TXB1D2_TXB1D27_MASK                                0x80
#define _TXB1D2_TBB1D23_POSN                                0x3
#define _TXB1D2_TBB1D23_POSITION                            0x3
#define _TXB1D2_TBB1D23_SIZE                                0x1
#define _TXB1D2_TBB1D23_LENGTH                              0x1
#define _TXB1D2_TBB1D23_MASK                                0x8

// Register: TXB1D3
#define TXB1D3 TXB1D3
extern volatile unsigned char           TXB1D3              __at(0xF39);
#ifndef _LIB_BUILD
asm("TXB1D3 equ 0F39h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D30                :1;
        unsigned TXB1D31                :1;
        unsigned TXB1D32                :1;
        unsigned TXB1D33                :1;
        unsigned TXB1D34                :1;
        unsigned TXB1D35                :1;
        unsigned TXB1D36                :1;
        unsigned TXB1D37                :1;
    };
} TXB1D3bits_t;
extern volatile TXB1D3bits_t TXB1D3bits __at(0xF39);
// bitfield macros
#define _TXB1D3_TXB1D30_POSN                                0x0
#define _TXB1D3_TXB1D30_POSITION                            0x0
#define _TXB1D3_TXB1D30_SIZE                                0x1
#define _TXB1D3_TXB1D30_LENGTH                              0x1
#define _TXB1D3_TXB1D30_MASK                                0x1
#define _TXB1D3_TXB1D31_POSN                                0x1
#define _TXB1D3_TXB1D31_POSITION                            0x1
#define _TXB1D3_TXB1D31_SIZE                                0x1
#define _TXB1D3_TXB1D31_LENGTH                              0x1
#define _TXB1D3_TXB1D31_MASK                                0x2
#define _TXB1D3_TXB1D32_POSN                                0x2
#define _TXB1D3_TXB1D32_POSITION                            0x2
#define _TXB1D3_TXB1D32_SIZE                                0x1
#define _TXB1D3_TXB1D32_LENGTH                              0x1
#define _TXB1D3_TXB1D32_MASK                                0x4
#define _TXB1D3_TXB1D33_POSN                                0x3
#define _TXB1D3_TXB1D33_POSITION                            0x3
#define _TXB1D3_TXB1D33_SIZE                                0x1
#define _TXB1D3_TXB1D33_LENGTH                              0x1
#define _TXB1D3_TXB1D33_MASK                                0x8
#define _TXB1D3_TXB1D34_POSN                                0x4
#define _TXB1D3_TXB1D34_POSITION                            0x4
#define _TXB1D3_TXB1D34_SIZE                                0x1
#define _TXB1D3_TXB1D34_LENGTH                              0x1
#define _TXB1D3_TXB1D34_MASK                                0x10
#define _TXB1D3_TXB1D35_POSN                                0x5
#define _TXB1D3_TXB1D35_POSITION                            0x5
#define _TXB1D3_TXB1D35_SIZE                                0x1
#define _TXB1D3_TXB1D35_LENGTH                              0x1
#define _TXB1D3_TXB1D35_MASK                                0x20
#define _TXB1D3_TXB1D36_POSN                                0x6
#define _TXB1D3_TXB1D36_POSITION                            0x6
#define _TXB1D3_TXB1D36_SIZE                                0x1
#define _TXB1D3_TXB1D36_LENGTH                              0x1
#define _TXB1D3_TXB1D36_MASK                                0x40
#define _TXB1D3_TXB1D37_POSN                                0x7
#define _TXB1D3_TXB1D37_POSITION                            0x7
#define _TXB1D3_TXB1D37_SIZE                                0x1
#define _TXB1D3_TXB1D37_LENGTH                              0x1
#define _TXB1D3_TXB1D37_MASK                                0x80

// Register: TXB1D4
#define TXB1D4 TXB1D4
extern volatile unsigned char           TXB1D4              __at(0xF3A);
#ifndef _LIB_BUILD
asm("TXB1D4 equ 0F3Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D40                :1;
        unsigned TXB1D41                :1;
        unsigned TXB1D42                :1;
        unsigned TXB1D43                :1;
        unsigned TXB1D44                :1;
        unsigned TXB1D45                :1;
        unsigned TXB1D46                :1;
        unsigned TXB1D47                :1;
    };
} TXB1D4bits_t;
extern volatile TXB1D4bits_t TXB1D4bits __at(0xF3A);
// bitfield macros
#define _TXB1D4_TXB1D40_POSN                                0x0
#define _TXB1D4_TXB1D40_POSITION                            0x0
#define _TXB1D4_TXB1D40_SIZE                                0x1
#define _TXB1D4_TXB1D40_LENGTH                              0x1
#define _TXB1D4_TXB1D40_MASK                                0x1
#define _TXB1D4_TXB1D41_POSN                                0x1
#define _TXB1D4_TXB1D41_POSITION                            0x1
#define _TXB1D4_TXB1D41_SIZE                                0x1
#define _TXB1D4_TXB1D41_LENGTH                              0x1
#define _TXB1D4_TXB1D41_MASK                                0x2
#define _TXB1D4_TXB1D42_POSN                                0x2
#define _TXB1D4_TXB1D42_POSITION                            0x2
#define _TXB1D4_TXB1D42_SIZE                                0x1
#define _TXB1D4_TXB1D42_LENGTH                              0x1
#define _TXB1D4_TXB1D42_MASK                                0x4
#define _TXB1D4_TXB1D43_POSN                                0x3
#define _TXB1D4_TXB1D43_POSITION                            0x3
#define _TXB1D4_TXB1D43_SIZE                                0x1
#define _TXB1D4_TXB1D43_LENGTH                              0x1
#define _TXB1D4_TXB1D43_MASK                                0x8
#define _TXB1D4_TXB1D44_POSN                                0x4
#define _TXB1D4_TXB1D44_POSITION                            0x4
#define _TXB1D4_TXB1D44_SIZE                                0x1
#define _TXB1D4_TXB1D44_LENGTH                              0x1
#define _TXB1D4_TXB1D44_MASK                                0x10
#define _TXB1D4_TXB1D45_POSN                                0x5
#define _TXB1D4_TXB1D45_POSITION                            0x5
#define _TXB1D4_TXB1D45_SIZE                                0x1
#define _TXB1D4_TXB1D45_LENGTH                              0x1
#define _TXB1D4_TXB1D45_MASK                                0x20
#define _TXB1D4_TXB1D46_POSN                                0x6
#define _TXB1D4_TXB1D46_POSITION                            0x6
#define _TXB1D4_TXB1D46_SIZE                                0x1
#define _TXB1D4_TXB1D46_LENGTH                              0x1
#define _TXB1D4_TXB1D46_MASK                                0x40
#define _TXB1D4_TXB1D47_POSN                                0x7
#define _TXB1D4_TXB1D47_POSITION                            0x7
#define _TXB1D4_TXB1D47_SIZE                                0x1
#define _TXB1D4_TXB1D47_LENGTH                              0x1
#define _TXB1D4_TXB1D47_MASK                                0x80

// Register: TXB1D5
#define TXB1D5 TXB1D5
extern volatile unsigned char           TXB1D5              __at(0xF3B);
#ifndef _LIB_BUILD
asm("TXB1D5 equ 0F3Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D50                :1;
        unsigned TXB1D51                :1;
        unsigned TXB1D52                :1;
        unsigned TXB1D53                :1;
        unsigned TXB1D54                :1;
        unsigned TXB1D55                :1;
        unsigned TXB1D56                :1;
        unsigned TXB1D57                :1;
    };
} TXB1D5bits_t;
extern volatile TXB1D5bits_t TXB1D5bits __at(0xF3B);
// bitfield macros
#define _TXB1D5_TXB1D50_POSN                                0x0
#define _TXB1D5_TXB1D50_POSITION                            0x0
#define _TXB1D5_TXB1D50_SIZE                                0x1
#define _TXB1D5_TXB1D50_LENGTH                              0x1
#define _TXB1D5_TXB1D50_MASK                                0x1
#define _TXB1D5_TXB1D51_POSN                                0x1
#define _TXB1D5_TXB1D51_POSITION                            0x1
#define _TXB1D5_TXB1D51_SIZE                                0x1
#define _TXB1D5_TXB1D51_LENGTH                              0x1
#define _TXB1D5_TXB1D51_MASK                                0x2
#define _TXB1D5_TXB1D52_POSN                                0x2
#define _TXB1D5_TXB1D52_POSITION                            0x2
#define _TXB1D5_TXB1D52_SIZE                                0x1
#define _TXB1D5_TXB1D52_LENGTH                              0x1
#define _TXB1D5_TXB1D52_MASK                                0x4
#define _TXB1D5_TXB1D53_POSN                                0x3
#define _TXB1D5_TXB1D53_POSITION                            0x3
#define _TXB1D5_TXB1D53_SIZE                                0x1
#define _TXB1D5_TXB1D53_LENGTH                              0x1
#define _TXB1D5_TXB1D53_MASK                                0x8
#define _TXB1D5_TXB1D54_POSN                                0x4
#define _TXB1D5_TXB1D54_POSITION                            0x4
#define _TXB1D5_TXB1D54_SIZE                                0x1
#define _TXB1D5_TXB1D54_LENGTH                              0x1
#define _TXB1D5_TXB1D54_MASK                                0x10
#define _TXB1D5_TXB1D55_POSN                                0x5
#define _TXB1D5_TXB1D55_POSITION                            0x5
#define _TXB1D5_TXB1D55_SIZE                                0x1
#define _TXB1D5_TXB1D55_LENGTH                              0x1
#define _TXB1D5_TXB1D55_MASK                                0x20
#define _TXB1D5_TXB1D56_POSN                                0x6
#define _TXB1D5_TXB1D56_POSITION                            0x6
#define _TXB1D5_TXB1D56_SIZE                                0x1
#define _TXB1D5_TXB1D56_LENGTH                              0x1
#define _TXB1D5_TXB1D56_MASK                                0x40
#define _TXB1D5_TXB1D57_POSN                                0x7
#define _TXB1D5_TXB1D57_POSITION                            0x7
#define _TXB1D5_TXB1D57_SIZE                                0x1
#define _TXB1D5_TXB1D57_LENGTH                              0x1
#define _TXB1D5_TXB1D57_MASK                                0x80

// Register: TXB1D6
#define TXB1D6 TXB1D6
extern volatile unsigned char           TXB1D6              __at(0xF3C);
#ifndef _LIB_BUILD
asm("TXB1D6 equ 0F3Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D60                :1;
        unsigned TXB1D61                :1;
        unsigned TXB1D62                :1;
        unsigned TXB1D63                :1;
        unsigned TXB1D64                :1;
        unsigned TXB1D65                :1;
        unsigned TXB1D66                :1;
        unsigned TXB1D67                :1;
    };
} TXB1D6bits_t;
extern volatile TXB1D6bits_t TXB1D6bits __at(0xF3C);
// bitfield macros
#define _TXB1D6_TXB1D60_POSN                                0x0
#define _TXB1D6_TXB1D60_POSITION                            0x0
#define _TXB1D6_TXB1D60_SIZE                                0x1
#define _TXB1D6_TXB1D60_LENGTH                              0x1
#define _TXB1D6_TXB1D60_MASK                                0x1
#define _TXB1D6_TXB1D61_POSN                                0x1
#define _TXB1D6_TXB1D61_POSITION                            0x1
#define _TXB1D6_TXB1D61_SIZE                                0x1
#define _TXB1D6_TXB1D61_LENGTH                              0x1
#define _TXB1D6_TXB1D61_MASK                                0x2
#define _TXB1D6_TXB1D62_POSN                                0x2
#define _TXB1D6_TXB1D62_POSITION                            0x2
#define _TXB1D6_TXB1D62_SIZE                                0x1
#define _TXB1D6_TXB1D62_LENGTH                              0x1
#define _TXB1D6_TXB1D62_MASK                                0x4
#define _TXB1D6_TXB1D63_POSN                                0x3
#define _TXB1D6_TXB1D63_POSITION                            0x3
#define _TXB1D6_TXB1D63_SIZE                                0x1
#define _TXB1D6_TXB1D63_LENGTH                              0x1
#define _TXB1D6_TXB1D63_MASK                                0x8
#define _TXB1D6_TXB1D64_POSN                                0x4
#define _TXB1D6_TXB1D64_POSITION                            0x4
#define _TXB1D6_TXB1D64_SIZE                                0x1
#define _TXB1D6_TXB1D64_LENGTH                              0x1
#define _TXB1D6_TXB1D64_MASK                                0x10
#define _TXB1D6_TXB1D65_POSN                                0x5
#define _TXB1D6_TXB1D65_POSITION                            0x5
#define _TXB1D6_TXB1D65_SIZE                                0x1
#define _TXB1D6_TXB1D65_LENGTH                              0x1
#define _TXB1D6_TXB1D65_MASK                                0x20
#define _TXB1D6_TXB1D66_POSN                                0x6
#define _TXB1D6_TXB1D66_POSITION                            0x6
#define _TXB1D6_TXB1D66_SIZE                                0x1
#define _TXB1D6_TXB1D66_LENGTH                              0x1
#define _TXB1D6_TXB1D66_MASK                                0x40
#define _TXB1D6_TXB1D67_POSN                                0x7
#define _TXB1D6_TXB1D67_POSITION                            0x7
#define _TXB1D6_TXB1D67_SIZE                                0x1
#define _TXB1D6_TXB1D67_LENGTH                              0x1
#define _TXB1D6_TXB1D67_MASK                                0x80

// Register: TXB1D7
#define TXB1D7 TXB1D7
extern volatile unsigned char           TXB1D7              __at(0xF3D);
#ifndef _LIB_BUILD
asm("TXB1D7 equ 0F3Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D70                :1;
        unsigned TXB1D71                :1;
        unsigned TXB1D72                :1;
        unsigned TXB1D73                :1;
        unsigned TXB1D74                :1;
        unsigned TXB1D75                :1;
        unsigned TXB1D76                :1;
        unsigned TXB1D77                :1;
    };
} TXB1D7bits_t;
extern volatile TXB1D7bits_t TXB1D7bits __at(0xF3D);
// bitfield macros
#define _TXB1D7_TXB1D70_POSN                                0x0
#define _TXB1D7_TXB1D70_POSITION                            0x0
#define _TXB1D7_TXB1D70_SIZE                                0x1
#define _TXB1D7_TXB1D70_LENGTH                              0x1
#define _TXB1D7_TXB1D70_MASK                                0x1
#define _TXB1D7_TXB1D71_POSN                                0x1
#define _TXB1D7_TXB1D71_POSITION                            0x1
#define _TXB1D7_TXB1D71_SIZE                                0x1
#define _TXB1D7_TXB1D71_LENGTH                              0x1
#define _TXB1D7_TXB1D71_MASK                                0x2
#define _TXB1D7_TXB1D72_POSN                                0x2
#define _TXB1D7_TXB1D72_POSITION                            0x2
#define _TXB1D7_TXB1D72_SIZE                                0x1
#define _TXB1D7_TXB1D72_LENGTH                              0x1
#define _TXB1D7_TXB1D72_MASK                                0x4
#define _TXB1D7_TXB1D73_POSN                                0x3
#define _TXB1D7_TXB1D73_POSITION                            0x3
#define _TXB1D7_TXB1D73_SIZE                                0x1
#define _TXB1D7_TXB1D73_LENGTH                              0x1
#define _TXB1D7_TXB1D73_MASK                                0x8
#define _TXB1D7_TXB1D74_POSN                                0x4
#define _TXB1D7_TXB1D74_POSITION                            0x4
#define _TXB1D7_TXB1D74_SIZE                                0x1
#define _TXB1D7_TXB1D74_LENGTH                              0x1
#define _TXB1D7_TXB1D74_MASK                                0x10
#define _TXB1D7_TXB1D75_POSN                                0x5
#define _TXB1D7_TXB1D75_POSITION                            0x5
#define _TXB1D7_TXB1D75_SIZE                                0x1
#define _TXB1D7_TXB1D75_LENGTH                              0x1
#define _TXB1D7_TXB1D75_MASK                                0x20
#define _TXB1D7_TXB1D76_POSN                                0x6
#define _TXB1D7_TXB1D76_POSITION                            0x6
#define _TXB1D7_TXB1D76_SIZE                                0x1
#define _TXB1D7_TXB1D76_LENGTH                              0x1
#define _TXB1D7_TXB1D76_MASK                                0x40
#define _TXB1D7_TXB1D77_POSN                                0x7
#define _TXB1D7_TXB1D77_POSITION                            0x7
#define _TXB1D7_TXB1D77_SIZE                                0x1
#define _TXB1D7_TXB1D77_LENGTH                              0x1
#define _TXB1D7_TXB1D77_MASK                                0x80

// Register: CANSTATRO3
#define CANSTATRO3 CANSTATRO3
extern volatile unsigned char           CANSTATRO3          __at(0xF3E);
#ifndef _LIB_BUILD
asm("CANSTATRO3 equ 0F3Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned ICODE0                 :1;
        unsigned ICODE1                 :1;
        unsigned ICODE2                 :1;
        unsigned                        :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTATRO3bits_t;
extern volatile CANSTATRO3bits_t CANSTATRO3bits __at(0xF3E);
// bitfield macros
#define _CANSTATRO3_ICODE0_POSN                             0x1
#define _CANSTATRO3_ICODE0_POSITION                         0x1
#define _CANSTATRO3_ICODE0_SIZE                             0x1
#define _CANSTATRO3_ICODE0_LENGTH                           0x1
#define _CANSTATRO3_ICODE0_MASK                             0x2
#define _CANSTATRO3_ICODE1_POSN                             0x2
#define _CANSTATRO3_ICODE1_POSITION                         0x2
#define _CANSTATRO3_ICODE1_SIZE                             0x1
#define _CANSTATRO3_ICODE1_LENGTH                           0x1
#define _CANSTATRO3_ICODE1_MASK                             0x4
#define _CANSTATRO3_ICODE2_POSN                             0x3
#define _CANSTATRO3_ICODE2_POSITION                         0x3
#define _CANSTATRO3_ICODE2_SIZE                             0x1
#define _CANSTATRO3_ICODE2_LENGTH                           0x1
#define _CANSTATRO3_ICODE2_MASK                             0x8
#define _CANSTATRO3_OPMODE0_POSN                            0x5
#define _CANSTATRO3_OPMODE0_POSITION                        0x5
#define _CANSTATRO3_OPMODE0_SIZE                            0x1
#define _CANSTATRO3_OPMODE0_LENGTH                          0x1
#define _CANSTATRO3_OPMODE0_MASK                            0x20
#define _CANSTATRO3_OPMODE1_POSN                            0x6
#define _CANSTATRO3_OPMODE1_POSITION                        0x6
#define _CANSTATRO3_OPMODE1_SIZE                            0x1
#define _CANSTATRO3_OPMODE1_LENGTH                          0x1
#define _CANSTATRO3_OPMODE1_MASK                            0x40
#define _CANSTATRO3_OPMODE2_POSN                            0x7
#define _CANSTATRO3_OPMODE2_POSITION                        0x7
#define _CANSTATRO3_OPMODE2_SIZE                            0x1
#define _CANSTATRO3_OPMODE2_LENGTH                          0x1
#define _CANSTATRO3_OPMODE2_MASK                            0x80

// Register: TXB0CON
#define TXB0CON TXB0CON
extern volatile unsigned char           TXB0CON             __at(0xF40);
#ifndef _LIB_BUILD
asm("TXB0CON equ 0F40h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned                        :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
    };
    struct {
        unsigned TXB0PRI0               :1;
        unsigned TXB0PRI1               :1;
        unsigned                        :1;
        unsigned TXB0REQ                :1;
        unsigned TXB0ERR                :1;
        unsigned TXB0LARB               :1;
        unsigned TXB0ABT                :1;
    };
} TXB0CONbits_t;
extern volatile TXB0CONbits_t TXB0CONbits __at(0xF40);
// bitfield macros
#define _TXB0CON_TXPRI0_POSN                                0x0
#define _TXB0CON_TXPRI0_POSITION                            0x0
#define _TXB0CON_TXPRI0_SIZE                                0x1
#define _TXB0CON_TXPRI0_LENGTH                              0x1
#define _TXB0CON_TXPRI0_MASK                                0x1
#define _TXB0CON_TXPRI1_POSN                                0x1
#define _TXB0CON_TXPRI1_POSITION                            0x1
#define _TXB0CON_TXPRI1_SIZE                                0x1
#define _TXB0CON_TXPRI1_LENGTH                              0x1
#define _TXB0CON_TXPRI1_MASK                                0x2
#define _TXB0CON_TXREQ_POSN                                 0x3
#define _TXB0CON_TXREQ_POSITION                             0x3
#define _TXB0CON_TXREQ_SIZE                                 0x1
#define _TXB0CON_TXREQ_LENGTH                               0x1
#define _TXB0CON_TXREQ_MASK                                 0x8
#define _TXB0CON_TXERR_POSN                                 0x4
#define _TXB0CON_TXERR_POSITION                             0x4
#define _TXB0CON_TXERR_SIZE                                 0x1
#define _TXB0CON_TXERR_LENGTH                               0x1
#define _TXB0CON_TXERR_MASK                                 0x10
#define _TXB0CON_TXLARB_POSN                                0x5
#define _TXB0CON_TXLARB_POSITION                            0x5
#define _TXB0CON_TXLARB_SIZE                                0x1
#define _TXB0CON_TXLARB_LENGTH                              0x1
#define _TXB0CON_TXLARB_MASK                                0x20
#define _TXB0CON_TXABT_POSN                                 0x6
#define _TXB0CON_TXABT_POSITION                             0x6
#define _TXB0CON_TXABT_SIZE                                 0x1
#define _TXB0CON_TXABT_LENGTH                               0x1
#define _TXB0CON_TXABT_MASK                                 0x40
#define _TXB0CON_TXB0PRI0_POSN                              0x0
#define _TXB0CON_TXB0PRI0_POSITION                          0x0
#define _TXB0CON_TXB0PRI0_SIZE                              0x1
#define _TXB0CON_TXB0PRI0_LENGTH                            0x1
#define _TXB0CON_TXB0PRI0_MASK                              0x1
#define _TXB0CON_TXB0PRI1_POSN                              0x1
#define _TXB0CON_TXB0PRI1_POSITION                          0x1
#define _TXB0CON_TXB0PRI1_SIZE                              0x1
#define _TXB0CON_TXB0PRI1_LENGTH                            0x1
#define _TXB0CON_TXB0PRI1_MASK                              0x2
#define _TXB0CON_TXB0REQ_POSN                               0x3
#define _TXB0CON_TXB0REQ_POSITION                           0x3
#define _TXB0CON_TXB0REQ_SIZE                               0x1
#define _TXB0CON_TXB0REQ_LENGTH                             0x1
#define _TXB0CON_TXB0REQ_MASK                               0x8
#define _TXB0CON_TXB0ERR_POSN                               0x4
#define _TXB0CON_TXB0ERR_POSITION                           0x4
#define _TXB0CON_TXB0ERR_SIZE                               0x1
#define _TXB0CON_TXB0ERR_LENGTH                             0x1
#define _TXB0CON_TXB0ERR_MASK                               0x10
#define _TXB0CON_TXB0LARB_POSN                              0x5
#define _TXB0CON_TXB0LARB_POSITION                          0x5
#define _TXB0CON_TXB0LARB_SIZE                              0x1
#define _TXB0CON_TXB0LARB_LENGTH                            0x1
#define _TXB0CON_TXB0LARB_MASK                              0x20
#define _TXB0CON_TXB0ABT_POSN                               0x6
#define _TXB0CON_TXB0ABT_POSITION                           0x6
#define _TXB0CON_TXB0ABT_SIZE                               0x1
#define _TXB0CON_TXB0ABT_LENGTH                             0x1
#define _TXB0CON_TXB0ABT_MASK                               0x40

// Register: TXB0SIDH
#define TXB0SIDH TXB0SIDH
extern volatile unsigned char           TXB0SIDH            __at(0xF41);
#ifndef _LIB_BUILD
asm("TXB0SIDH equ 0F41h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned TXB0SID3               :1;
        unsigned TXB0SID4               :1;
        unsigned TXB0SID5               :1;
        unsigned TXB0SID6               :1;
        unsigned TXB0SID7               :1;
        unsigned TXB0SID8               :1;
        unsigned TXB0SID9               :1;
        unsigned TXB0SID10              :1;
    };
} TXB0SIDHbits_t;
extern volatile TXB0SIDHbits_t TXB0SIDHbits __at(0xF41);
// bitfield macros
#define _TXB0SIDH_SID3_POSN                                 0x0
#define _TXB0SIDH_SID3_POSITION                             0x0
#define _TXB0SIDH_SID3_SIZE                                 0x1
#define _TXB0SIDH_SID3_LENGTH                               0x1
#define _TXB0SIDH_SID3_MASK                                 0x1
#define _TXB0SIDH_SID4_POSN                                 0x1
#define _TXB0SIDH_SID4_POSITION                             0x1
#define _TXB0SIDH_SID4_SIZE                                 0x1
#define _TXB0SIDH_SID4_LENGTH                               0x1
#define _TXB0SIDH_SID4_MASK                                 0x2
#define _TXB0SIDH_SID5_POSN                                 0x2
#define _TXB0SIDH_SID5_POSITION                             0x2
#define _TXB0SIDH_SID5_SIZE                                 0x1
#define _TXB0SIDH_SID5_LENGTH                               0x1
#define _TXB0SIDH_SID5_MASK                                 0x4
#define _TXB0SIDH_SID6_POSN                                 0x3
#define _TXB0SIDH_SID6_POSITION                             0x3
#define _TXB0SIDH_SID6_SIZE                                 0x1
#define _TXB0SIDH_SID6_LENGTH                               0x1
#define _TXB0SIDH_SID6_MASK                                 0x8
#define _TXB0SIDH_SID7_POSN                                 0x4
#define _TXB0SIDH_SID7_POSITION                             0x4
#define _TXB0SIDH_SID7_SIZE                                 0x1
#define _TXB0SIDH_SID7_LENGTH                               0x1
#define _TXB0SIDH_SID7_MASK                                 0x10
#define _TXB0SIDH_SID8_POSN                                 0x5
#define _TXB0SIDH_SID8_POSITION                             0x5
#define _TXB0SIDH_SID8_SIZE                                 0x1
#define _TXB0SIDH_SID8_LENGTH                               0x1
#define _TXB0SIDH_SID8_MASK                                 0x20
#define _TXB0SIDH_SID9_POSN                                 0x6
#define _TXB0SIDH_SID9_POSITION                             0x6
#define _TXB0SIDH_SID9_SIZE                                 0x1
#define _TXB0SIDH_SID9_LENGTH                               0x1
#define _TXB0SIDH_SID9_MASK                                 0x40
#define _TXB0SIDH_SID10_POSN                                0x7
#define _TXB0SIDH_SID10_POSITION                            0x7
#define _TXB0SIDH_SID10_SIZE                                0x1
#define _TXB0SIDH_SID10_LENGTH                              0x1
#define _TXB0SIDH_SID10_MASK                                0x80
#define _TXB0SIDH_TXB0SID3_POSN                             0x0
#define _TXB0SIDH_TXB0SID3_POSITION                         0x0
#define _TXB0SIDH_TXB0SID3_SIZE                             0x1
#define _TXB0SIDH_TXB0SID3_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID3_MASK                             0x1
#define _TXB0SIDH_TXB0SID4_POSN                             0x1
#define _TXB0SIDH_TXB0SID4_POSITION                         0x1
#define _TXB0SIDH_TXB0SID4_SIZE                             0x1
#define _TXB0SIDH_TXB0SID4_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID4_MASK                             0x2
#define _TXB0SIDH_TXB0SID5_POSN                             0x2
#define _TXB0SIDH_TXB0SID5_POSITION                         0x2
#define _TXB0SIDH_TXB0SID5_SIZE                             0x1
#define _TXB0SIDH_TXB0SID5_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID5_MASK                             0x4
#define _TXB0SIDH_TXB0SID6_POSN                             0x3
#define _TXB0SIDH_TXB0SID6_POSITION                         0x3
#define _TXB0SIDH_TXB0SID6_SIZE                             0x1
#define _TXB0SIDH_TXB0SID6_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID6_MASK                             0x8
#define _TXB0SIDH_TXB0SID7_POSN                             0x4
#define _TXB0SIDH_TXB0SID7_POSITION                         0x4
#define _TXB0SIDH_TXB0SID7_SIZE                             0x1
#define _TXB0SIDH_TXB0SID7_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID7_MASK                             0x10
#define _TXB0SIDH_TXB0SID8_POSN                             0x5
#define _TXB0SIDH_TXB0SID8_POSITION                         0x5
#define _TXB0SIDH_TXB0SID8_SIZE                             0x1
#define _TXB0SIDH_TXB0SID8_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID8_MASK                             0x20
#define _TXB0SIDH_TXB0SID9_POSN                             0x6
#define _TXB0SIDH_TXB0SID9_POSITION                         0x6
#define _TXB0SIDH_TXB0SID9_SIZE                             0x1
#define _TXB0SIDH_TXB0SID9_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID9_MASK                             0x40
#define _TXB0SIDH_TXB0SID10_POSN                            0x7
#define _TXB0SIDH_TXB0SID10_POSITION                        0x7
#define _TXB0SIDH_TXB0SID10_SIZE                            0x1
#define _TXB0SIDH_TXB0SID10_LENGTH                          0x1
#define _TXB0SIDH_TXB0SID10_MASK                            0x80

// Register: TXB0SIDL
#define TXB0SIDL TXB0SIDL
extern volatile unsigned char           TXB0SIDL            __at(0xF42);
#ifndef _LIB_BUILD
asm("TXB0SIDL equ 0F42h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDE                  :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned TXB0EID16              :1;
        unsigned TXB0EID17              :1;
        unsigned                        :1;
        unsigned TXB0EXIDE              :1;
        unsigned                        :1;
        unsigned TXB0SID0               :1;
        unsigned TXB0SID1               :1;
        unsigned TXB0SID2               :1;
    };
} TXB0SIDLbits_t;
extern volatile TXB0SIDLbits_t TXB0SIDLbits __at(0xF42);
// bitfield macros
#define _TXB0SIDL_EID16_POSN                                0x0
#define _TXB0SIDL_EID16_POSITION                            0x0
#define _TXB0SIDL_EID16_SIZE                                0x1
#define _TXB0SIDL_EID16_LENGTH                              0x1
#define _TXB0SIDL_EID16_MASK                                0x1
#define _TXB0SIDL_EID17_POSN                                0x1
#define _TXB0SIDL_EID17_POSITION                            0x1
#define _TXB0SIDL_EID17_SIZE                                0x1
#define _TXB0SIDL_EID17_LENGTH                              0x1
#define _TXB0SIDL_EID17_MASK                                0x2
#define _TXB0SIDL_EXIDE_POSN                                0x3
#define _TXB0SIDL_EXIDE_POSITION                            0x3
#define _TXB0SIDL_EXIDE_SIZE                                0x1
#define _TXB0SIDL_EXIDE_LENGTH                              0x1
#define _TXB0SIDL_EXIDE_MASK                                0x8
#define _TXB0SIDL_SID0_POSN                                 0x5
#define _TXB0SIDL_SID0_POSITION                             0x5
#define _TXB0SIDL_SID0_SIZE                                 0x1
#define _TXB0SIDL_SID0_LENGTH                               0x1
#define _TXB0SIDL_SID0_MASK                                 0x20
#define _TXB0SIDL_SID1_POSN                                 0x6
#define _TXB0SIDL_SID1_POSITION                             0x6
#define _TXB0SIDL_SID1_SIZE                                 0x1
#define _TXB0SIDL_SID1_LENGTH                               0x1
#define _TXB0SIDL_SID1_MASK                                 0x40
#define _TXB0SIDL_SID2_POSN                                 0x7
#define _TXB0SIDL_SID2_POSITION                             0x7
#define _TXB0SIDL_SID2_SIZE                                 0x1
#define _TXB0SIDL_SID2_LENGTH                               0x1
#define _TXB0SIDL_SID2_MASK                                 0x80
#define _TXB0SIDL_TXB0EID16_POSN                            0x0
#define _TXB0SIDL_TXB0EID16_POSITION                        0x0
#define _TXB0SIDL_TXB0EID16_SIZE                            0x1
#define _TXB0SIDL_TXB0EID16_LENGTH                          0x1
#define _TXB0SIDL_TXB0EID16_MASK                            0x1
#define _TXB0SIDL_TXB0EID17_POSN                            0x1
#define _TXB0SIDL_TXB0EID17_POSITION                        0x1
#define _TXB0SIDL_TXB0EID17_SIZE                            0x1
#define _TXB0SIDL_TXB0EID17_LENGTH                          0x1
#define _TXB0SIDL_TXB0EID17_MASK                            0x2
#define _TXB0SIDL_TXB0EXIDE_POSN                            0x3
#define _TXB0SIDL_TXB0EXIDE_POSITION                        0x3
#define _TXB0SIDL_TXB0EXIDE_SIZE                            0x1
#define _TXB0SIDL_TXB0EXIDE_LENGTH                          0x1
#define _TXB0SIDL_TXB0EXIDE_MASK                            0x8
#define _TXB0SIDL_TXB0SID0_POSN                             0x5
#define _TXB0SIDL_TXB0SID0_POSITION                         0x5
#define _TXB0SIDL_TXB0SID0_SIZE                             0x1
#define _TXB0SIDL_TXB0SID0_LENGTH                           0x1
#define _TXB0SIDL_TXB0SID0_MASK                             0x20
#define _TXB0SIDL_TXB0SID1_POSN                             0x6
#define _TXB0SIDL_TXB0SID1_POSITION                         0x6
#define _TXB0SIDL_TXB0SID1_SIZE                             0x1
#define _TXB0SIDL_TXB0SID1_LENGTH                           0x1
#define _TXB0SIDL_TXB0SID1_MASK                             0x40
#define _TXB0SIDL_TXB0SID2_POSN                             0x7
#define _TXB0SIDL_TXB0SID2_POSITION                         0x7
#define _TXB0SIDL_TXB0SID2_SIZE                             0x1
#define _TXB0SIDL_TXB0SID2_LENGTH                           0x1
#define _TXB0SIDL_TXB0SID2_MASK                             0x80

// Register: TXB0EIDH
#define TXB0EIDH TXB0EIDH
extern volatile unsigned char           TXB0EIDH            __at(0xF43);
#ifndef _LIB_BUILD
asm("TXB0EIDH equ 0F43h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned TXB0EID8               :1;
        unsigned TXB0EID9               :1;
        unsigned TXB0EID10              :1;
        unsigned TXB0EID11              :1;
        unsigned TXB0EID12              :1;
        unsigned TXB0EID13              :1;
        unsigned TXB0EID14              :1;
        unsigned TXB0EID15              :1;
    };
} TXB0EIDHbits_t;
extern volatile TXB0EIDHbits_t TXB0EIDHbits __at(0xF43);
// bitfield macros
#define _TXB0EIDH_EID8_POSN                                 0x0
#define _TXB0EIDH_EID8_POSITION                             0x0
#define _TXB0EIDH_EID8_SIZE                                 0x1
#define _TXB0EIDH_EID8_LENGTH                               0x1
#define _TXB0EIDH_EID8_MASK                                 0x1
#define _TXB0EIDH_EID9_POSN                                 0x1
#define _TXB0EIDH_EID9_POSITION                             0x1
#define _TXB0EIDH_EID9_SIZE                                 0x1
#define _TXB0EIDH_EID9_LENGTH                               0x1
#define _TXB0EIDH_EID9_MASK                                 0x2
#define _TXB0EIDH_EID10_POSN                                0x2
#define _TXB0EIDH_EID10_POSITION                            0x2
#define _TXB0EIDH_EID10_SIZE                                0x1
#define _TXB0EIDH_EID10_LENGTH                              0x1
#define _TXB0EIDH_EID10_MASK                                0x4
#define _TXB0EIDH_EID11_POSN                                0x3
#define _TXB0EIDH_EID11_POSITION                            0x3
#define _TXB0EIDH_EID11_SIZE                                0x1
#define _TXB0EIDH_EID11_LENGTH                              0x1
#define _TXB0EIDH_EID11_MASK                                0x8
#define _TXB0EIDH_EID12_POSN                                0x4
#define _TXB0EIDH_EID12_POSITION                            0x4
#define _TXB0EIDH_EID12_SIZE                                0x1
#define _TXB0EIDH_EID12_LENGTH                              0x1
#define _TXB0EIDH_EID12_MASK                                0x10
#define _TXB0EIDH_EID13_POSN                                0x5
#define _TXB0EIDH_EID13_POSITION                            0x5
#define _TXB0EIDH_EID13_SIZE                                0x1
#define _TXB0EIDH_EID13_LENGTH                              0x1
#define _TXB0EIDH_EID13_MASK                                0x20
#define _TXB0EIDH_EID14_POSN                                0x6
#define _TXB0EIDH_EID14_POSITION                            0x6
#define _TXB0EIDH_EID14_SIZE                                0x1
#define _TXB0EIDH_EID14_LENGTH                              0x1
#define _TXB0EIDH_EID14_MASK                                0x40
#define _TXB0EIDH_EID15_POSN                                0x7
#define _TXB0EIDH_EID15_POSITION                            0x7
#define _TXB0EIDH_EID15_SIZE                                0x1
#define _TXB0EIDH_EID15_LENGTH                              0x1
#define _TXB0EIDH_EID15_MASK                                0x80
#define _TXB0EIDH_TXB0EID8_POSN                             0x0
#define _TXB0EIDH_TXB0EID8_POSITION                         0x0
#define _TXB0EIDH_TXB0EID8_SIZE                             0x1
#define _TXB0EIDH_TXB0EID8_LENGTH                           0x1
#define _TXB0EIDH_TXB0EID8_MASK                             0x1
#define _TXB0EIDH_TXB0EID9_POSN                             0x1
#define _TXB0EIDH_TXB0EID9_POSITION                         0x1
#define _TXB0EIDH_TXB0EID9_SIZE                             0x1
#define _TXB0EIDH_TXB0EID9_LENGTH                           0x1
#define _TXB0EIDH_TXB0EID9_MASK                             0x2
#define _TXB0EIDH_TXB0EID10_POSN                            0x2
#define _TXB0EIDH_TXB0EID10_POSITION                        0x2
#define _TXB0EIDH_TXB0EID10_SIZE                            0x1
#define _TXB0EIDH_TXB0EID10_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID10_MASK                            0x4
#define _TXB0EIDH_TXB0EID11_POSN                            0x3
#define _TXB0EIDH_TXB0EID11_POSITION                        0x3
#define _TXB0EIDH_TXB0EID11_SIZE                            0x1
#define _TXB0EIDH_TXB0EID11_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID11_MASK                            0x8
#define _TXB0EIDH_TXB0EID12_POSN                            0x4
#define _TXB0EIDH_TXB0EID12_POSITION                        0x4
#define _TXB0EIDH_TXB0EID12_SIZE                            0x1
#define _TXB0EIDH_TXB0EID12_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID12_MASK                            0x10
#define _TXB0EIDH_TXB0EID13_POSN                            0x5
#define _TXB0EIDH_TXB0EID13_POSITION                        0x5
#define _TXB0EIDH_TXB0EID13_SIZE                            0x1
#define _TXB0EIDH_TXB0EID13_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID13_MASK                            0x20
#define _TXB0EIDH_TXB0EID14_POSN                            0x6
#define _TXB0EIDH_TXB0EID14_POSITION                        0x6
#define _TXB0EIDH_TXB0EID14_SIZE                            0x1
#define _TXB0EIDH_TXB0EID14_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID14_MASK                            0x40
#define _TXB0EIDH_TXB0EID15_POSN                            0x7
#define _TXB0EIDH_TXB0EID15_POSITION                        0x7
#define _TXB0EIDH_TXB0EID15_SIZE                            0x1
#define _TXB0EIDH_TXB0EID15_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID15_MASK                            0x80

// Register: TXB0EIDL
#define TXB0EIDL TXB0EIDL
extern volatile unsigned char           TXB0EIDL            __at(0xF44);
#ifndef _LIB_BUILD
asm("TXB0EIDL equ 0F44h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned TXB0EID0               :1;
        unsigned TXB0EID1               :1;
        unsigned TXB0EID2               :1;
        unsigned TXB0EID3               :1;
        unsigned TXB0EID4               :1;
        unsigned TXB0EID5               :1;
        unsigned TXB0EID6               :1;
        unsigned TXB0EID7               :1;
    };
} TXB0EIDLbits_t;
extern volatile TXB0EIDLbits_t TXB0EIDLbits __at(0xF44);
// bitfield macros
#define _TXB0EIDL_EID0_POSN                                 0x0
#define _TXB0EIDL_EID0_POSITION                             0x0
#define _TXB0EIDL_EID0_SIZE                                 0x1
#define _TXB0EIDL_EID0_LENGTH                               0x1
#define _TXB0EIDL_EID0_MASK                                 0x1
#define _TXB0EIDL_EID1_POSN                                 0x1
#define _TXB0EIDL_EID1_POSITION                             0x1
#define _TXB0EIDL_EID1_SIZE                                 0x1
#define _TXB0EIDL_EID1_LENGTH                               0x1
#define _TXB0EIDL_EID1_MASK                                 0x2
#define _TXB0EIDL_EID2_POSN                                 0x2
#define _TXB0EIDL_EID2_POSITION                             0x2
#define _TXB0EIDL_EID2_SIZE                                 0x1
#define _TXB0EIDL_EID2_LENGTH                               0x1
#define _TXB0EIDL_EID2_MASK                                 0x4
#define _TXB0EIDL_EID3_POSN                                 0x3
#define _TXB0EIDL_EID3_POSITION                             0x3
#define _TXB0EIDL_EID3_SIZE                                 0x1
#define _TXB0EIDL_EID3_LENGTH                               0x1
#define _TXB0EIDL_EID3_MASK                                 0x8
#define _TXB0EIDL_EID4_POSN                                 0x4
#define _TXB0EIDL_EID4_POSITION                             0x4
#define _TXB0EIDL_EID4_SIZE                                 0x1
#define _TXB0EIDL_EID4_LENGTH                               0x1
#define _TXB0EIDL_EID4_MASK                                 0x10
#define _TXB0EIDL_EID5_POSN                                 0x5
#define _TXB0EIDL_EID5_POSITION                             0x5
#define _TXB0EIDL_EID5_SIZE                                 0x1
#define _TXB0EIDL_EID5_LENGTH                               0x1
#define _TXB0EIDL_EID5_MASK                                 0x20
#define _TXB0EIDL_EID6_POSN                                 0x6
#define _TXB0EIDL_EID6_POSITION                             0x6
#define _TXB0EIDL_EID6_SIZE                                 0x1
#define _TXB0EIDL_EID6_LENGTH                               0x1
#define _TXB0EIDL_EID6_MASK                                 0x40
#define _TXB0EIDL_EID7_POSN                                 0x7
#define _TXB0EIDL_EID7_POSITION                             0x7
#define _TXB0EIDL_EID7_SIZE                                 0x1
#define _TXB0EIDL_EID7_LENGTH                               0x1
#define _TXB0EIDL_EID7_MASK                                 0x80
#define _TXB0EIDL_TXB0EID0_POSN                             0x0
#define _TXB0EIDL_TXB0EID0_POSITION                         0x0
#define _TXB0EIDL_TXB0EID0_SIZE                             0x1
#define _TXB0EIDL_TXB0EID0_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID0_MASK                             0x1
#define _TXB0EIDL_TXB0EID1_POSN                             0x1
#define _TXB0EIDL_TXB0EID1_POSITION                         0x1
#define _TXB0EIDL_TXB0EID1_SIZE                             0x1
#define _TXB0EIDL_TXB0EID1_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID1_MASK                             0x2
#define _TXB0EIDL_TXB0EID2_POSN                             0x2
#define _TXB0EIDL_TXB0EID2_POSITION                         0x2
#define _TXB0EIDL_TXB0EID2_SIZE                             0x1
#define _TXB0EIDL_TXB0EID2_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID2_MASK                             0x4
#define _TXB0EIDL_TXB0EID3_POSN                             0x3
#define _TXB0EIDL_TXB0EID3_POSITION                         0x3
#define _TXB0EIDL_TXB0EID3_SIZE                             0x1
#define _TXB0EIDL_TXB0EID3_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID3_MASK                             0x8
#define _TXB0EIDL_TXB0EID4_POSN                             0x4
#define _TXB0EIDL_TXB0EID4_POSITION                         0x4
#define _TXB0EIDL_TXB0EID4_SIZE                             0x1
#define _TXB0EIDL_TXB0EID4_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID4_MASK                             0x10
#define _TXB0EIDL_TXB0EID5_POSN                             0x5
#define _TXB0EIDL_TXB0EID5_POSITION                         0x5
#define _TXB0EIDL_TXB0EID5_SIZE                             0x1
#define _TXB0EIDL_TXB0EID5_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID5_MASK                             0x20
#define _TXB0EIDL_TXB0EID6_POSN                             0x6
#define _TXB0EIDL_TXB0EID6_POSITION                         0x6
#define _TXB0EIDL_TXB0EID6_SIZE                             0x1
#define _TXB0EIDL_TXB0EID6_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID6_MASK                             0x40
#define _TXB0EIDL_TXB0EID7_POSN                             0x7
#define _TXB0EIDL_TXB0EID7_POSITION                         0x7
#define _TXB0EIDL_TXB0EID7_SIZE                             0x1
#define _TXB0EIDL_TXB0EID7_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID7_MASK                             0x80

// Register: TXB0DLC
#define TXB0DLC TXB0DLC
extern volatile unsigned char           TXB0DLC             __at(0xF45);
#ifndef _LIB_BUILD
asm("TXB0DLC equ 0F45h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned                        :2;
        unsigned TXRTR                  :1;
    };
    struct {
        unsigned TXB0DLC0               :1;
        unsigned TXB0DLC1               :1;
        unsigned TXB0DLC2               :1;
        unsigned TXB0DLC3               :1;
        unsigned                        :2;
        unsigned TXB0RTR                :1;
    };
} TXB0DLCbits_t;
extern volatile TXB0DLCbits_t TXB0DLCbits __at(0xF45);
// bitfield macros
#define _TXB0DLC_DLC0_POSN                                  0x0
#define _TXB0DLC_DLC0_POSITION                              0x0
#define _TXB0DLC_DLC0_SIZE                                  0x1
#define _TXB0DLC_DLC0_LENGTH                                0x1
#define _TXB0DLC_DLC0_MASK                                  0x1
#define _TXB0DLC_DLC1_POSN                                  0x1
#define _TXB0DLC_DLC1_POSITION                              0x1
#define _TXB0DLC_DLC1_SIZE                                  0x1
#define _TXB0DLC_DLC1_LENGTH                                0x1
#define _TXB0DLC_DLC1_MASK                                  0x2
#define _TXB0DLC_DLC2_POSN                                  0x2
#define _TXB0DLC_DLC2_POSITION                              0x2
#define _TXB0DLC_DLC2_SIZE                                  0x1
#define _TXB0DLC_DLC2_LENGTH                                0x1
#define _TXB0DLC_DLC2_MASK                                  0x4
#define _TXB0DLC_DLC3_POSN                                  0x3
#define _TXB0DLC_DLC3_POSITION                              0x3
#define _TXB0DLC_DLC3_SIZE                                  0x1
#define _TXB0DLC_DLC3_LENGTH                                0x1
#define _TXB0DLC_DLC3_MASK                                  0x8
#define _TXB0DLC_TXRTR_POSN                                 0x6
#define _TXB0DLC_TXRTR_POSITION                             0x6
#define _TXB0DLC_TXRTR_SIZE                                 0x1
#define _TXB0DLC_TXRTR_LENGTH                               0x1
#define _TXB0DLC_TXRTR_MASK                                 0x40
#define _TXB0DLC_TXB0DLC0_POSN                              0x0
#define _TXB0DLC_TXB0DLC0_POSITION                          0x0
#define _TXB0DLC_TXB0DLC0_SIZE                              0x1
#define _TXB0DLC_TXB0DLC0_LENGTH                            0x1
#define _TXB0DLC_TXB0DLC0_MASK                              0x1
#define _TXB0DLC_TXB0DLC1_POSN                              0x1
#define _TXB0DLC_TXB0DLC1_POSITION                          0x1
#define _TXB0DLC_TXB0DLC1_SIZE                              0x1
#define _TXB0DLC_TXB0DLC1_LENGTH                            0x1
#define _TXB0DLC_TXB0DLC1_MASK                              0x2
#define _TXB0DLC_TXB0DLC2_POSN                              0x2
#define _TXB0DLC_TXB0DLC2_POSITION                          0x2
#define _TXB0DLC_TXB0DLC2_SIZE                              0x1
#define _TXB0DLC_TXB0DLC2_LENGTH                            0x1
#define _TXB0DLC_TXB0DLC2_MASK                              0x4
#define _TXB0DLC_TXB0DLC3_POSN                              0x3
#define _TXB0DLC_TXB0DLC3_POSITION                          0x3
#define _TXB0DLC_TXB0DLC3_SIZE                              0x1
#define _TXB0DLC_TXB0DLC3_LENGTH                            0x1
#define _TXB0DLC_TXB0DLC3_MASK                              0x8
#define _TXB0DLC_TXB0RTR_POSN                               0x6
#define _TXB0DLC_TXB0RTR_POSITION                           0x6
#define _TXB0DLC_TXB0RTR_SIZE                               0x1
#define _TXB0DLC_TXB0RTR_LENGTH                             0x1
#define _TXB0DLC_TXB0RTR_MASK                               0x40

// Register: TXB0D0
#define TXB0D0 TXB0D0
extern volatile unsigned char           TXB0D0              __at(0xF46);
#ifndef _LIB_BUILD
asm("TXB0D0 equ 0F46h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D00                :1;
        unsigned TXB0D01                :1;
        unsigned TXB0D02                :1;
        unsigned TXB0D03                :1;
        unsigned TXB0D04                :1;
        unsigned TXB0D05                :1;
        unsigned TXB0D06                :1;
        unsigned TXB0D07                :1;
    };
} TXB0D0bits_t;
extern volatile TXB0D0bits_t TXB0D0bits __at(0xF46);
// bitfield macros
#define _TXB0D0_TXB0D00_POSN                                0x0
#define _TXB0D0_TXB0D00_POSITION                            0x0
#define _TXB0D0_TXB0D00_SIZE                                0x1
#define _TXB0D0_TXB0D00_LENGTH                              0x1
#define _TXB0D0_TXB0D00_MASK                                0x1
#define _TXB0D0_TXB0D01_POSN                                0x1
#define _TXB0D0_TXB0D01_POSITION                            0x1
#define _TXB0D0_TXB0D01_SIZE                                0x1
#define _TXB0D0_TXB0D01_LENGTH                              0x1
#define _TXB0D0_TXB0D01_MASK                                0x2
#define _TXB0D0_TXB0D02_POSN                                0x2
#define _TXB0D0_TXB0D02_POSITION                            0x2
#define _TXB0D0_TXB0D02_SIZE                                0x1
#define _TXB0D0_TXB0D02_LENGTH                              0x1
#define _TXB0D0_TXB0D02_MASK                                0x4
#define _TXB0D0_TXB0D03_POSN                                0x3
#define _TXB0D0_TXB0D03_POSITION                            0x3
#define _TXB0D0_TXB0D03_SIZE                                0x1
#define _TXB0D0_TXB0D03_LENGTH                              0x1
#define _TXB0D0_TXB0D03_MASK                                0x8
#define _TXB0D0_TXB0D04_POSN                                0x4
#define _TXB0D0_TXB0D04_POSITION                            0x4
#define _TXB0D0_TXB0D04_SIZE                                0x1
#define _TXB0D0_TXB0D04_LENGTH                              0x1
#define _TXB0D0_TXB0D04_MASK                                0x10
#define _TXB0D0_TXB0D05_POSN                                0x5
#define _TXB0D0_TXB0D05_POSITION                            0x5
#define _TXB0D0_TXB0D05_SIZE                                0x1
#define _TXB0D0_TXB0D05_LENGTH                              0x1
#define _TXB0D0_TXB0D05_MASK                                0x20
#define _TXB0D0_TXB0D06_POSN                                0x6
#define _TXB0D0_TXB0D06_POSITION                            0x6
#define _TXB0D0_TXB0D06_SIZE                                0x1
#define _TXB0D0_TXB0D06_LENGTH                              0x1
#define _TXB0D0_TXB0D06_MASK                                0x40
#define _TXB0D0_TXB0D07_POSN                                0x7
#define _TXB0D0_TXB0D07_POSITION                            0x7
#define _TXB0D0_TXB0D07_SIZE                                0x1
#define _TXB0D0_TXB0D07_LENGTH                              0x1
#define _TXB0D0_TXB0D07_MASK                                0x80

// Register: TXB0D1
#define TXB0D1 TXB0D1
extern volatile unsigned char           TXB0D1              __at(0xF47);
#ifndef _LIB_BUILD
asm("TXB0D1 equ 0F47h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D10                :1;
        unsigned TXB0D11                :1;
        unsigned TXB0D12                :1;
        unsigned TXB0D13                :1;
        unsigned TXB0D14                :1;
        unsigned TXB0D15                :1;
        unsigned TXB0D16                :1;
        unsigned TXB0D17                :1;
    };
} TXB0D1bits_t;
extern volatile TXB0D1bits_t TXB0D1bits __at(0xF47);
// bitfield macros
#define _TXB0D1_TXB0D10_POSN                                0x0
#define _TXB0D1_TXB0D10_POSITION                            0x0
#define _TXB0D1_TXB0D10_SIZE                                0x1
#define _TXB0D1_TXB0D10_LENGTH                              0x1
#define _TXB0D1_TXB0D10_MASK                                0x1
#define _TXB0D1_TXB0D11_POSN                                0x1
#define _TXB0D1_TXB0D11_POSITION                            0x1
#define _TXB0D1_TXB0D11_SIZE                                0x1
#define _TXB0D1_TXB0D11_LENGTH                              0x1
#define _TXB0D1_TXB0D11_MASK                                0x2
#define _TXB0D1_TXB0D12_POSN                                0x2
#define _TXB0D1_TXB0D12_POSITION                            0x2
#define _TXB0D1_TXB0D12_SIZE                                0x1
#define _TXB0D1_TXB0D12_LENGTH                              0x1
#define _TXB0D1_TXB0D12_MASK                                0x4
#define _TXB0D1_TXB0D13_POSN                                0x3
#define _TXB0D1_TXB0D13_POSITION                            0x3
#define _TXB0D1_TXB0D13_SIZE                                0x1
#define _TXB0D1_TXB0D13_LENGTH                              0x1
#define _TXB0D1_TXB0D13_MASK                                0x8
#define _TXB0D1_TXB0D14_POSN                                0x4
#define _TXB0D1_TXB0D14_POSITION                            0x4
#define _TXB0D1_TXB0D14_SIZE                                0x1
#define _TXB0D1_TXB0D14_LENGTH                              0x1
#define _TXB0D1_TXB0D14_MASK                                0x10
#define _TXB0D1_TXB0D15_POSN                                0x5
#define _TXB0D1_TXB0D15_POSITION                            0x5
#define _TXB0D1_TXB0D15_SIZE                                0x1
#define _TXB0D1_TXB0D15_LENGTH                              0x1
#define _TXB0D1_TXB0D15_MASK                                0x20
#define _TXB0D1_TXB0D16_POSN                                0x6
#define _TXB0D1_TXB0D16_POSITION                            0x6
#define _TXB0D1_TXB0D16_SIZE                                0x1
#define _TXB0D1_TXB0D16_LENGTH                              0x1
#define _TXB0D1_TXB0D16_MASK                                0x40
#define _TXB0D1_TXB0D17_POSN                                0x7
#define _TXB0D1_TXB0D17_POSITION                            0x7
#define _TXB0D1_TXB0D17_SIZE                                0x1
#define _TXB0D1_TXB0D17_LENGTH                              0x1
#define _TXB0D1_TXB0D17_MASK                                0x80

// Register: TXB0D2
#define TXB0D2 TXB0D2
extern volatile unsigned char           TXB0D2              __at(0xF48);
#ifndef _LIB_BUILD
asm("TXB0D2 equ 0F48h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D20                :1;
        unsigned TXB0D21                :1;
        unsigned TXB0D22                :1;
        unsigned TXB0D23                :1;
        unsigned TXB0D24                :1;
        unsigned TXB0D25                :1;
        unsigned TXB0D26                :1;
        unsigned TXB0D27                :1;
    };
} TXB0D2bits_t;
extern volatile TXB0D2bits_t TXB0D2bits __at(0xF48);
// bitfield macros
#define _TXB0D2_TXB0D20_POSN                                0x0
#define _TXB0D2_TXB0D20_POSITION                            0x0
#define _TXB0D2_TXB0D20_SIZE                                0x1
#define _TXB0D2_TXB0D20_LENGTH                              0x1
#define _TXB0D2_TXB0D20_MASK                                0x1
#define _TXB0D2_TXB0D21_POSN                                0x1
#define _TXB0D2_TXB0D21_POSITION                            0x1
#define _TXB0D2_TXB0D21_SIZE                                0x1
#define _TXB0D2_TXB0D21_LENGTH                              0x1
#define _TXB0D2_TXB0D21_MASK                                0x2
#define _TXB0D2_TXB0D22_POSN                                0x2
#define _TXB0D2_TXB0D22_POSITION                            0x2
#define _TXB0D2_TXB0D22_SIZE                                0x1
#define _TXB0D2_TXB0D22_LENGTH                              0x1
#define _TXB0D2_TXB0D22_MASK                                0x4
#define _TXB0D2_TXB0D23_POSN                                0x3
#define _TXB0D2_TXB0D23_POSITION                            0x3
#define _TXB0D2_TXB0D23_SIZE                                0x1
#define _TXB0D2_TXB0D23_LENGTH                              0x1
#define _TXB0D2_TXB0D23_MASK                                0x8
#define _TXB0D2_TXB0D24_POSN                                0x4
#define _TXB0D2_TXB0D24_POSITION                            0x4
#define _TXB0D2_TXB0D24_SIZE                                0x1
#define _TXB0D2_TXB0D24_LENGTH                              0x1
#define _TXB0D2_TXB0D24_MASK                                0x10
#define _TXB0D2_TXB0D25_POSN                                0x5
#define _TXB0D2_TXB0D25_POSITION                            0x5
#define _TXB0D2_TXB0D25_SIZE                                0x1
#define _TXB0D2_TXB0D25_LENGTH                              0x1
#define _TXB0D2_TXB0D25_MASK                                0x20
#define _TXB0D2_TXB0D26_POSN                                0x6
#define _TXB0D2_TXB0D26_POSITION                            0x6
#define _TXB0D2_TXB0D26_SIZE                                0x1
#define _TXB0D2_TXB0D26_LENGTH                              0x1
#define _TXB0D2_TXB0D26_MASK                                0x40
#define _TXB0D2_TXB0D27_POSN                                0x7
#define _TXB0D2_TXB0D27_POSITION                            0x7
#define _TXB0D2_TXB0D27_SIZE                                0x1
#define _TXB0D2_TXB0D27_LENGTH                              0x1
#define _TXB0D2_TXB0D27_MASK                                0x80

// Register: TXB0D3
#define TXB0D3 TXB0D3
extern volatile unsigned char           TXB0D3              __at(0xF49);
#ifndef _LIB_BUILD
asm("TXB0D3 equ 0F49h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D30                :1;
        unsigned TXB0D31                :1;
        unsigned TXB0D32                :1;
        unsigned TXB0D33                :1;
        unsigned TXB0D34                :1;
        unsigned TXB0D35                :1;
        unsigned TXB0D36                :1;
        unsigned TXB0D37                :1;
    };
} TXB0D3bits_t;
extern volatile TXB0D3bits_t TXB0D3bits __at(0xF49);
// bitfield macros
#define _TXB0D3_TXB0D30_POSN                                0x0
#define _TXB0D3_TXB0D30_POSITION                            0x0
#define _TXB0D3_TXB0D30_SIZE                                0x1
#define _TXB0D3_TXB0D30_LENGTH                              0x1
#define _TXB0D3_TXB0D30_MASK                                0x1
#define _TXB0D3_TXB0D31_POSN                                0x1
#define _TXB0D3_TXB0D31_POSITION                            0x1
#define _TXB0D3_TXB0D31_SIZE                                0x1
#define _TXB0D3_TXB0D31_LENGTH                              0x1
#define _TXB0D3_TXB0D31_MASK                                0x2
#define _TXB0D3_TXB0D32_POSN                                0x2
#define _TXB0D3_TXB0D32_POSITION                            0x2
#define _TXB0D3_TXB0D32_SIZE                                0x1
#define _TXB0D3_TXB0D32_LENGTH                              0x1
#define _TXB0D3_TXB0D32_MASK                                0x4
#define _TXB0D3_TXB0D33_POSN                                0x3
#define _TXB0D3_TXB0D33_POSITION                            0x3
#define _TXB0D3_TXB0D33_SIZE                                0x1
#define _TXB0D3_TXB0D33_LENGTH                              0x1
#define _TXB0D3_TXB0D33_MASK                                0x8
#define _TXB0D3_TXB0D34_POSN                                0x4
#define _TXB0D3_TXB0D34_POSITION                            0x4
#define _TXB0D3_TXB0D34_SIZE                                0x1
#define _TXB0D3_TXB0D34_LENGTH                              0x1
#define _TXB0D3_TXB0D34_MASK                                0x10
#define _TXB0D3_TXB0D35_POSN                                0x5
#define _TXB0D3_TXB0D35_POSITION                            0x5
#define _TXB0D3_TXB0D35_SIZE                                0x1
#define _TXB0D3_TXB0D35_LENGTH                              0x1
#define _TXB0D3_TXB0D35_MASK                                0x20
#define _TXB0D3_TXB0D36_POSN                                0x6
#define _TXB0D3_TXB0D36_POSITION                            0x6
#define _TXB0D3_TXB0D36_SIZE                                0x1
#define _TXB0D3_TXB0D36_LENGTH                              0x1
#define _TXB0D3_TXB0D36_MASK                                0x40
#define _TXB0D3_TXB0D37_POSN                                0x7
#define _TXB0D3_TXB0D37_POSITION                            0x7
#define _TXB0D3_TXB0D37_SIZE                                0x1
#define _TXB0D3_TXB0D37_LENGTH                              0x1
#define _TXB0D3_TXB0D37_MASK                                0x80

// Register: TXB0D4
#define TXB0D4 TXB0D4
extern volatile unsigned char           TXB0D4              __at(0xF4A);
#ifndef _LIB_BUILD
asm("TXB0D4 equ 0F4Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D40                :1;
        unsigned TXB0D41                :1;
        unsigned TXB0D42                :1;
        unsigned TXB0D43                :1;
        unsigned TXB0D44                :1;
        unsigned TXB0D45                :1;
        unsigned TXB0D46                :1;
        unsigned TXB0D47                :1;
    };
} TXB0D4bits_t;
extern volatile TXB0D4bits_t TXB0D4bits __at(0xF4A);
// bitfield macros
#define _TXB0D4_TXB0D40_POSN                                0x0
#define _TXB0D4_TXB0D40_POSITION                            0x0
#define _TXB0D4_TXB0D40_SIZE                                0x1
#define _TXB0D4_TXB0D40_LENGTH                              0x1
#define _TXB0D4_TXB0D40_MASK                                0x1
#define _TXB0D4_TXB0D41_POSN                                0x1
#define _TXB0D4_TXB0D41_POSITION                            0x1
#define _TXB0D4_TXB0D41_SIZE                                0x1
#define _TXB0D4_TXB0D41_LENGTH                              0x1
#define _TXB0D4_TXB0D41_MASK                                0x2
#define _TXB0D4_TXB0D42_POSN                                0x2
#define _TXB0D4_TXB0D42_POSITION                            0x2
#define _TXB0D4_TXB0D42_SIZE                                0x1
#define _TXB0D4_TXB0D42_LENGTH                              0x1
#define _TXB0D4_TXB0D42_MASK                                0x4
#define _TXB0D4_TXB0D43_POSN                                0x3
#define _TXB0D4_TXB0D43_POSITION                            0x3
#define _TXB0D4_TXB0D43_SIZE                                0x1
#define _TXB0D4_TXB0D43_LENGTH                              0x1
#define _TXB0D4_TXB0D43_MASK                                0x8
#define _TXB0D4_TXB0D44_POSN                                0x4
#define _TXB0D4_TXB0D44_POSITION                            0x4
#define _TXB0D4_TXB0D44_SIZE                                0x1
#define _TXB0D4_TXB0D44_LENGTH                              0x1
#define _TXB0D4_TXB0D44_MASK                                0x10
#define _TXB0D4_TXB0D45_POSN                                0x5
#define _TXB0D4_TXB0D45_POSITION                            0x5
#define _TXB0D4_TXB0D45_SIZE                                0x1
#define _TXB0D4_TXB0D45_LENGTH                              0x1
#define _TXB0D4_TXB0D45_MASK                                0x20
#define _TXB0D4_TXB0D46_POSN                                0x6
#define _TXB0D4_TXB0D46_POSITION                            0x6
#define _TXB0D4_TXB0D46_SIZE                                0x1
#define _TXB0D4_TXB0D46_LENGTH                              0x1
#define _TXB0D4_TXB0D46_MASK                                0x40
#define _TXB0D4_TXB0D47_POSN                                0x7
#define _TXB0D4_TXB0D47_POSITION                            0x7
#define _TXB0D4_TXB0D47_SIZE                                0x1
#define _TXB0D4_TXB0D47_LENGTH                              0x1
#define _TXB0D4_TXB0D47_MASK                                0x80

// Register: TXB0D5
#define TXB0D5 TXB0D5
extern volatile unsigned char           TXB0D5              __at(0xF4B);
#ifndef _LIB_BUILD
asm("TXB0D5 equ 0F4Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D50                :1;
        unsigned TXB0D51                :1;
        unsigned TXB0D52                :1;
        unsigned TXB0D53                :1;
        unsigned TXB0D54                :1;
        unsigned TXB0D55                :1;
        unsigned TXB0D56                :1;
        unsigned TXB0D57                :1;
    };
} TXB0D5bits_t;
extern volatile TXB0D5bits_t TXB0D5bits __at(0xF4B);
// bitfield macros
#define _TXB0D5_TXB0D50_POSN                                0x0
#define _TXB0D5_TXB0D50_POSITION                            0x0
#define _TXB0D5_TXB0D50_SIZE                                0x1
#define _TXB0D5_TXB0D50_LENGTH                              0x1
#define _TXB0D5_TXB0D50_MASK                                0x1
#define _TXB0D5_TXB0D51_POSN                                0x1
#define _TXB0D5_TXB0D51_POSITION                            0x1
#define _TXB0D5_TXB0D51_SIZE                                0x1
#define _TXB0D5_TXB0D51_LENGTH                              0x1
#define _TXB0D5_TXB0D51_MASK                                0x2
#define _TXB0D5_TXB0D52_POSN                                0x2
#define _TXB0D5_TXB0D52_POSITION                            0x2
#define _TXB0D5_TXB0D52_SIZE                                0x1
#define _TXB0D5_TXB0D52_LENGTH                              0x1
#define _TXB0D5_TXB0D52_MASK                                0x4
#define _TXB0D5_TXB0D53_POSN                                0x3
#define _TXB0D5_TXB0D53_POSITION                            0x3
#define _TXB0D5_TXB0D53_SIZE                                0x1
#define _TXB0D5_TXB0D53_LENGTH                              0x1
#define _TXB0D5_TXB0D53_MASK                                0x8
#define _TXB0D5_TXB0D54_POSN                                0x4
#define _TXB0D5_TXB0D54_POSITION                            0x4
#define _TXB0D5_TXB0D54_SIZE                                0x1
#define _TXB0D5_TXB0D54_LENGTH                              0x1
#define _TXB0D5_TXB0D54_MASK                                0x10
#define _TXB0D5_TXB0D55_POSN                                0x5
#define _TXB0D5_TXB0D55_POSITION                            0x5
#define _TXB0D5_TXB0D55_SIZE                                0x1
#define _TXB0D5_TXB0D55_LENGTH                              0x1
#define _TXB0D5_TXB0D55_MASK                                0x20
#define _TXB0D5_TXB0D56_POSN                                0x6
#define _TXB0D5_TXB0D56_POSITION                            0x6
#define _TXB0D5_TXB0D56_SIZE                                0x1
#define _TXB0D5_TXB0D56_LENGTH                              0x1
#define _TXB0D5_TXB0D56_MASK                                0x40
#define _TXB0D5_TXB0D57_POSN                                0x7
#define _TXB0D5_TXB0D57_POSITION                            0x7
#define _TXB0D5_TXB0D57_SIZE                                0x1
#define _TXB0D5_TXB0D57_LENGTH                              0x1
#define _TXB0D5_TXB0D57_MASK                                0x80

// Register: TXB0D6
#define TXB0D6 TXB0D6
extern volatile unsigned char           TXB0D6              __at(0xF4C);
#ifndef _LIB_BUILD
asm("TXB0D6 equ 0F4Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D60                :1;
        unsigned TXB0D61                :1;
        unsigned TXB0D62                :1;
        unsigned TXB0D63                :1;
        unsigned TXB0D64                :1;
        unsigned TXB0D65                :1;
        unsigned TXB0D66                :1;
        unsigned TXB0D67                :1;
    };
} TXB0D6bits_t;
extern volatile TXB0D6bits_t TXB0D6bits __at(0xF4C);
// bitfield macros
#define _TXB0D6_TXB0D60_POSN                                0x0
#define _TXB0D6_TXB0D60_POSITION                            0x0
#define _TXB0D6_TXB0D60_SIZE                                0x1
#define _TXB0D6_TXB0D60_LENGTH                              0x1
#define _TXB0D6_TXB0D60_MASK                                0x1
#define _TXB0D6_TXB0D61_POSN                                0x1
#define _TXB0D6_TXB0D61_POSITION                            0x1
#define _TXB0D6_TXB0D61_SIZE                                0x1
#define _TXB0D6_TXB0D61_LENGTH                              0x1
#define _TXB0D6_TXB0D61_MASK                                0x2
#define _TXB0D6_TXB0D62_POSN                                0x2
#define _TXB0D6_TXB0D62_POSITION                            0x2
#define _TXB0D6_TXB0D62_SIZE                                0x1
#define _TXB0D6_TXB0D62_LENGTH                              0x1
#define _TXB0D6_TXB0D62_MASK                                0x4
#define _TXB0D6_TXB0D63_POSN                                0x3
#define _TXB0D6_TXB0D63_POSITION                            0x3
#define _TXB0D6_TXB0D63_SIZE                                0x1
#define _TXB0D6_TXB0D63_LENGTH                              0x1
#define _TXB0D6_TXB0D63_MASK                                0x8
#define _TXB0D6_TXB0D64_POSN                                0x4
#define _TXB0D6_TXB0D64_POSITION                            0x4
#define _TXB0D6_TXB0D64_SIZE                                0x1
#define _TXB0D6_TXB0D64_LENGTH                              0x1
#define _TXB0D6_TXB0D64_MASK                                0x10
#define _TXB0D6_TXB0D65_POSN                                0x5
#define _TXB0D6_TXB0D65_POSITION                            0x5
#define _TXB0D6_TXB0D65_SIZE                                0x1
#define _TXB0D6_TXB0D65_LENGTH                              0x1
#define _TXB0D6_TXB0D65_MASK                                0x20
#define _TXB0D6_TXB0D66_POSN                                0x6
#define _TXB0D6_TXB0D66_POSITION                            0x6
#define _TXB0D6_TXB0D66_SIZE                                0x1
#define _TXB0D6_TXB0D66_LENGTH                              0x1
#define _TXB0D6_TXB0D66_MASK                                0x40
#define _TXB0D6_TXB0D67_POSN                                0x7
#define _TXB0D6_TXB0D67_POSITION                            0x7
#define _TXB0D6_TXB0D67_SIZE                                0x1
#define _TXB0D6_TXB0D67_LENGTH                              0x1
#define _TXB0D6_TXB0D67_MASK                                0x80

// Register: TXB0D7
#define TXB0D7 TXB0D7
extern volatile unsigned char           TXB0D7              __at(0xF4D);
#ifndef _LIB_BUILD
asm("TXB0D7 equ 0F4Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D70                :1;
        unsigned TXB0D71                :1;
        unsigned TXB0D72                :1;
        unsigned TXB0D73                :1;
        unsigned TXB0D74                :1;
        unsigned TXB0D75                :1;
        unsigned TXB0D76                :1;
        unsigned TXB0D77                :1;
    };
} TXB0D7bits_t;
extern volatile TXB0D7bits_t TXB0D7bits __at(0xF4D);
// bitfield macros
#define _TXB0D7_TXB0D70_POSN                                0x0
#define _TXB0D7_TXB0D70_POSITION                            0x0
#define _TXB0D7_TXB0D70_SIZE                                0x1
#define _TXB0D7_TXB0D70_LENGTH                              0x1
#define _TXB0D7_TXB0D70_MASK                                0x1
#define _TXB0D7_TXB0D71_POSN                                0x1
#define _TXB0D7_TXB0D71_POSITION                            0x1
#define _TXB0D7_TXB0D71_SIZE                                0x1
#define _TXB0D7_TXB0D71_LENGTH                              0x1
#define _TXB0D7_TXB0D71_MASK                                0x2
#define _TXB0D7_TXB0D72_POSN                                0x2
#define _TXB0D7_TXB0D72_POSITION                            0x2
#define _TXB0D7_TXB0D72_SIZE                                0x1
#define _TXB0D7_TXB0D72_LENGTH                              0x1
#define _TXB0D7_TXB0D72_MASK                                0x4
#define _TXB0D7_TXB0D73_POSN                                0x3
#define _TXB0D7_TXB0D73_POSITION                            0x3
#define _TXB0D7_TXB0D73_SIZE                                0x1
#define _TXB0D7_TXB0D73_LENGTH                              0x1
#define _TXB0D7_TXB0D73_MASK                                0x8
#define _TXB0D7_TXB0D74_POSN                                0x4
#define _TXB0D7_TXB0D74_POSITION                            0x4
#define _TXB0D7_TXB0D74_SIZE                                0x1
#define _TXB0D7_TXB0D74_LENGTH                              0x1
#define _TXB0D7_TXB0D74_MASK                                0x10
#define _TXB0D7_TXB0D75_POSN                                0x5
#define _TXB0D7_TXB0D75_POSITION                            0x5
#define _TXB0D7_TXB0D75_SIZE                                0x1
#define _TXB0D7_TXB0D75_LENGTH                              0x1
#define _TXB0D7_TXB0D75_MASK                                0x20
#define _TXB0D7_TXB0D76_POSN                                0x6
#define _TXB0D7_TXB0D76_POSITION                            0x6
#define _TXB0D7_TXB0D76_SIZE                                0x1
#define _TXB0D7_TXB0D76_LENGTH                              0x1
#define _TXB0D7_TXB0D76_MASK                                0x40
#define _TXB0D7_TXB0D77_POSN                                0x7
#define _TXB0D7_TXB0D77_POSITION                            0x7
#define _TXB0D7_TXB0D77_SIZE                                0x1
#define _TXB0D7_TXB0D77_LENGTH                              0x1
#define _TXB0D7_TXB0D77_MASK                                0x80

// Register: CANSTATRO2
#define CANSTATRO2 CANSTATRO2
extern volatile unsigned char           CANSTATRO2          __at(0xF4E);
#ifndef _LIB_BUILD
asm("CANSTATRO2 equ 0F4Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned ICODE0                 :1;
        unsigned ICODE1                 :1;
        unsigned ICODE2                 :1;
        unsigned                        :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTATRO2bits_t;
extern volatile CANSTATRO2bits_t CANSTATRO2bits __at(0xF4E);
// bitfield macros
#define _CANSTATRO2_ICODE0_POSN                             0x1
#define _CANSTATRO2_ICODE0_POSITION                         0x1
#define _CANSTATRO2_ICODE0_SIZE                             0x1
#define _CANSTATRO2_ICODE0_LENGTH                           0x1
#define _CANSTATRO2_ICODE0_MASK                             0x2
#define _CANSTATRO2_ICODE1_POSN                             0x2
#define _CANSTATRO2_ICODE1_POSITION                         0x2
#define _CANSTATRO2_ICODE1_SIZE                             0x1
#define _CANSTATRO2_ICODE1_LENGTH                           0x1
#define _CANSTATRO2_ICODE1_MASK                             0x4
#define _CANSTATRO2_ICODE2_POSN                             0x3
#define _CANSTATRO2_ICODE2_POSITION                         0x3
#define _CANSTATRO2_ICODE2_SIZE                             0x1
#define _CANSTATRO2_ICODE2_LENGTH                           0x1
#define _CANSTATRO2_ICODE2_MASK                             0x8
#define _CANSTATRO2_OPMODE0_POSN                            0x5
#define _CANSTATRO2_OPMODE0_POSITION                        0x5
#define _CANSTATRO2_OPMODE0_SIZE                            0x1
#define _CANSTATRO2_OPMODE0_LENGTH                          0x1
#define _CANSTATRO2_OPMODE0_MASK                            0x20
#define _CANSTATRO2_OPMODE1_POSN                            0x6
#define _CANSTATRO2_OPMODE1_POSITION                        0x6
#define _CANSTATRO2_OPMODE1_SIZE                            0x1
#define _CANSTATRO2_OPMODE1_LENGTH                          0x1
#define _CANSTATRO2_OPMODE1_MASK                            0x40
#define _CANSTATRO2_OPMODE2_POSN                            0x7
#define _CANSTATRO2_OPMODE2_POSITION                        0x7
#define _CANSTATRO2_OPMODE2_SIZE                            0x1
#define _CANSTATRO2_OPMODE2_LENGTH                          0x1
#define _CANSTATRO2_OPMODE2_MASK                            0x80

// Register: RXB1CON
#define RXB1CON RXB1CON
extern volatile unsigned char           RXB1CON             __at(0xF50);
#ifndef _LIB_BUILD
asm("RXB1CON equ 0F50h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FILHIT0                :1;
        unsigned FILHIT1                :1;
        unsigned FILHIT2                :1;
        unsigned RXRTRRO                :1;
        unsigned                        :1;
        unsigned RXM0                   :1;
        unsigned RXM1                   :1;
        unsigned RXFUL                  :1;
    };
    struct {
        unsigned RXB1FILHIT0            :1;
        unsigned RXB1FILHIT1            :1;
        unsigned RXB1FILHIT2            :1;
        unsigned RXB1FILHIT3            :1;
        unsigned                        :1;
        unsigned RXB1M0                 :1;
        unsigned RXB1M1                 :1;
        unsigned RXB1FUL                :1;
    };
    struct {
        unsigned                        :3;
        unsigned RXB1RTRR0              :1;
        unsigned                        :1;
        unsigned RXB1RTRRO              :1;
    };
} RXB1CONbits_t;
extern volatile RXB1CONbits_t RXB1CONbits __at(0xF50);
// bitfield macros
#define _RXB1CON_FILHIT0_POSN                               0x0
#define _RXB1CON_FILHIT0_POSITION                           0x0
#define _RXB1CON_FILHIT0_SIZE                               0x1
#define _RXB1CON_FILHIT0_LENGTH                             0x1
#define _RXB1CON_FILHIT0_MASK                               0x1
#define _RXB1CON_FILHIT1_POSN                               0x1
#define _RXB1CON_FILHIT1_POSITION                           0x1
#define _RXB1CON_FILHIT1_SIZE                               0x1
#define _RXB1CON_FILHIT1_LENGTH                             0x1
#define _RXB1CON_FILHIT1_MASK                               0x2
#define _RXB1CON_FILHIT2_POSN                               0x2
#define _RXB1CON_FILHIT2_POSITION                           0x2
#define _RXB1CON_FILHIT2_SIZE                               0x1
#define _RXB1CON_FILHIT2_LENGTH                             0x1
#define _RXB1CON_FILHIT2_MASK                               0x4
#define _RXB1CON_RXRTRRO_POSN                               0x3
#define _RXB1CON_RXRTRRO_POSITION                           0x3
#define _RXB1CON_RXRTRRO_SIZE                               0x1
#define _RXB1CON_RXRTRRO_LENGTH                             0x1
#define _RXB1CON_RXRTRRO_MASK                               0x8
#define _RXB1CON_RXM0_POSN                                  0x5
#define _RXB1CON_RXM0_POSITION                              0x5
#define _RXB1CON_RXM0_SIZE                                  0x1
#define _RXB1CON_RXM0_LENGTH                                0x1
#define _RXB1CON_RXM0_MASK                                  0x20
#define _RXB1CON_RXM1_POSN                                  0x6
#define _RXB1CON_RXM1_POSITION                              0x6
#define _RXB1CON_RXM1_SIZE                                  0x1
#define _RXB1CON_RXM1_LENGTH                                0x1
#define _RXB1CON_RXM1_MASK                                  0x40
#define _RXB1CON_RXFUL_POSN                                 0x7
#define _RXB1CON_RXFUL_POSITION                             0x7
#define _RXB1CON_RXFUL_SIZE                                 0x1
#define _RXB1CON_RXFUL_LENGTH                               0x1
#define _RXB1CON_RXFUL_MASK                                 0x80
#define _RXB1CON_RXB1FILHIT0_POSN                           0x0
#define _RXB1CON_RXB1FILHIT0_POSITION                       0x0
#define _RXB1CON_RXB1FILHIT0_SIZE                           0x1
#define _RXB1CON_RXB1FILHIT0_LENGTH                         0x1
#define _RXB1CON_RXB1FILHIT0_MASK                           0x1
#define _RXB1CON_RXB1FILHIT1_POSN                           0x1
#define _RXB1CON_RXB1FILHIT1_POSITION                       0x1
#define _RXB1CON_RXB1FILHIT1_SIZE                           0x1
#define _RXB1CON_RXB1FILHIT1_LENGTH                         0x1
#define _RXB1CON_RXB1FILHIT1_MASK                           0x2
#define _RXB1CON_RXB1FILHIT2_POSN                           0x2
#define _RXB1CON_RXB1FILHIT2_POSITION                       0x2
#define _RXB1CON_RXB1FILHIT2_SIZE                           0x1
#define _RXB1CON_RXB1FILHIT2_LENGTH                         0x1
#define _RXB1CON_RXB1FILHIT2_MASK                           0x4
#define _RXB1CON_RXB1FILHIT3_POSN                           0x3
#define _RXB1CON_RXB1FILHIT3_POSITION                       0x3
#define _RXB1CON_RXB1FILHIT3_SIZE                           0x1
#define _RXB1CON_RXB1FILHIT3_LENGTH                         0x1
#define _RXB1CON_RXB1FILHIT3_MASK                           0x8
#define _RXB1CON_RXB1M0_POSN                                0x5
#define _RXB1CON_RXB1M0_POSITION                            0x5
#define _RXB1CON_RXB1M0_SIZE                                0x1
#define _RXB1CON_RXB1M0_LENGTH                              0x1
#define _RXB1CON_RXB1M0_MASK                                0x20
#define _RXB1CON_RXB1M1_POSN                                0x6
#define _RXB1CON_RXB1M1_POSITION                            0x6
#define _RXB1CON_RXB1M1_SIZE                                0x1
#define _RXB1CON_RXB1M1_LENGTH                              0x1
#define _RXB1CON_RXB1M1_MASK                                0x40
#define _RXB1CON_RXB1FUL_POSN                               0x7
#define _RXB1CON_RXB1FUL_POSITION                           0x7
#define _RXB1CON_RXB1FUL_SIZE                               0x1
#define _RXB1CON_RXB1FUL_LENGTH                             0x1
#define _RXB1CON_RXB1FUL_MASK                               0x80
#define _RXB1CON_RXB1RTRR0_POSN                             0x3
#define _RXB1CON_RXB1RTRR0_POSITION                         0x3
#define _RXB1CON_RXB1RTRR0_SIZE                             0x1
#define _RXB1CON_RXB1RTRR0_LENGTH                           0x1
#define _RXB1CON_RXB1RTRR0_MASK                             0x8
#define _RXB1CON_RXB1RTRRO_POSN                             0x5
#define _RXB1CON_RXB1RTRRO_POSITION                         0x5
#define _RXB1CON_RXB1RTRRO_SIZE                             0x1
#define _RXB1CON_RXB1RTRRO_LENGTH                           0x1
#define _RXB1CON_RXB1RTRRO_MASK                             0x20

// Register: RXB1SIDH
#define RXB1SIDH RXB1SIDH
extern volatile unsigned char           RXB1SIDH            __at(0xF51);
#ifndef _LIB_BUILD
asm("RXB1SIDH equ 0F51h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXB1SID3               :1;
        unsigned RXB1SID4               :1;
        unsigned RXB1SID5               :1;
        unsigned RXB1SID6               :1;
        unsigned RXB1SID7               :1;
        unsigned RXB1SID8               :1;
        unsigned RXB1SID9               :1;
        unsigned RXB1SID10              :1;
    };
} RXB1SIDHbits_t;
extern volatile RXB1SIDHbits_t RXB1SIDHbits __at(0xF51);
// bitfield macros
#define _RXB1SIDH_SID3_POSN                                 0x0
#define _RXB1SIDH_SID3_POSITION                             0x0
#define _RXB1SIDH_SID3_SIZE                                 0x1
#define _RXB1SIDH_SID3_LENGTH                               0x1
#define _RXB1SIDH_SID3_MASK                                 0x1
#define _RXB1SIDH_SID4_POSN                                 0x1
#define _RXB1SIDH_SID4_POSITION                             0x1
#define _RXB1SIDH_SID4_SIZE                                 0x1
#define _RXB1SIDH_SID4_LENGTH                               0x1
#define _RXB1SIDH_SID4_MASK                                 0x2
#define _RXB1SIDH_SID5_POSN                                 0x2
#define _RXB1SIDH_SID5_POSITION                             0x2
#define _RXB1SIDH_SID5_SIZE                                 0x1
#define _RXB1SIDH_SID5_LENGTH                               0x1
#define _RXB1SIDH_SID5_MASK                                 0x4
#define _RXB1SIDH_SID6_POSN                                 0x3
#define _RXB1SIDH_SID6_POSITION                             0x3
#define _RXB1SIDH_SID6_SIZE                                 0x1
#define _RXB1SIDH_SID6_LENGTH                               0x1
#define _RXB1SIDH_SID6_MASK                                 0x8
#define _RXB1SIDH_SID7_POSN                                 0x4
#define _RXB1SIDH_SID7_POSITION                             0x4
#define _RXB1SIDH_SID7_SIZE                                 0x1
#define _RXB1SIDH_SID7_LENGTH                               0x1
#define _RXB1SIDH_SID7_MASK                                 0x10
#define _RXB1SIDH_SID8_POSN                                 0x5
#define _RXB1SIDH_SID8_POSITION                             0x5
#define _RXB1SIDH_SID8_SIZE                                 0x1
#define _RXB1SIDH_SID8_LENGTH                               0x1
#define _RXB1SIDH_SID8_MASK                                 0x20
#define _RXB1SIDH_SID9_POSN                                 0x6
#define _RXB1SIDH_SID9_POSITION                             0x6
#define _RXB1SIDH_SID9_SIZE                                 0x1
#define _RXB1SIDH_SID9_LENGTH                               0x1
#define _RXB1SIDH_SID9_MASK                                 0x40
#define _RXB1SIDH_SID10_POSN                                0x7
#define _RXB1SIDH_SID10_POSITION                            0x7
#define _RXB1SIDH_SID10_SIZE                                0x1
#define _RXB1SIDH_SID10_LENGTH                              0x1
#define _RXB1SIDH_SID10_MASK                                0x80
#define _RXB1SIDH_RXB1SID3_POSN                             0x0
#define _RXB1SIDH_RXB1SID3_POSITION                         0x0
#define _RXB1SIDH_RXB1SID3_SIZE                             0x1
#define _RXB1SIDH_RXB1SID3_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID3_MASK                             0x1
#define _RXB1SIDH_RXB1SID4_POSN                             0x1
#define _RXB1SIDH_RXB1SID4_POSITION                         0x1
#define _RXB1SIDH_RXB1SID4_SIZE                             0x1
#define _RXB1SIDH_RXB1SID4_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID4_MASK                             0x2
#define _RXB1SIDH_RXB1SID5_POSN                             0x2
#define _RXB1SIDH_RXB1SID5_POSITION                         0x2
#define _RXB1SIDH_RXB1SID5_SIZE                             0x1
#define _RXB1SIDH_RXB1SID5_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID5_MASK                             0x4
#define _RXB1SIDH_RXB1SID6_POSN                             0x3
#define _RXB1SIDH_RXB1SID6_POSITION                         0x3
#define _RXB1SIDH_RXB1SID6_SIZE                             0x1
#define _RXB1SIDH_RXB1SID6_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID6_MASK                             0x8
#define _RXB1SIDH_RXB1SID7_POSN                             0x4
#define _RXB1SIDH_RXB1SID7_POSITION                         0x4
#define _RXB1SIDH_RXB1SID7_SIZE                             0x1
#define _RXB1SIDH_RXB1SID7_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID7_MASK                             0x10
#define _RXB1SIDH_RXB1SID8_POSN                             0x5
#define _RXB1SIDH_RXB1SID8_POSITION                         0x5
#define _RXB1SIDH_RXB1SID8_SIZE                             0x1
#define _RXB1SIDH_RXB1SID8_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID8_MASK                             0x20
#define _RXB1SIDH_RXB1SID9_POSN                             0x6
#define _RXB1SIDH_RXB1SID9_POSITION                         0x6
#define _RXB1SIDH_RXB1SID9_SIZE                             0x1
#define _RXB1SIDH_RXB1SID9_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID9_MASK                             0x40
#define _RXB1SIDH_RXB1SID10_POSN                            0x7
#define _RXB1SIDH_RXB1SID10_POSITION                        0x7
#define _RXB1SIDH_RXB1SID10_SIZE                            0x1
#define _RXB1SIDH_RXB1SID10_LENGTH                          0x1
#define _RXB1SIDH_RXB1SID10_MASK                            0x80

// Register: RXB1SIDL
#define RXB1SIDL RXB1SIDL
extern volatile unsigned char           RXB1SIDL            __at(0xF52);
#ifndef _LIB_BUILD
asm("RXB1SIDL equ 0F52h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXID                   :1;
        unsigned SRR                    :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXB1EID16              :1;
        unsigned RXB1EID17              :1;
        unsigned                        :1;
        unsigned RXB1EXID               :1;
        unsigned RXB1SRR                :1;
        unsigned RXB1SID0               :1;
        unsigned RXB1SID1               :1;
        unsigned RXB1SID2               :1;
    };
} RXB1SIDLbits_t;
extern volatile RXB1SIDLbits_t RXB1SIDLbits __at(0xF52);
// bitfield macros
#define _RXB1SIDL_EID16_POSN                                0x0
#define _RXB1SIDL_EID16_POSITION                            0x0
#define _RXB1SIDL_EID16_SIZE                                0x1
#define _RXB1SIDL_EID16_LENGTH                              0x1
#define _RXB1SIDL_EID16_MASK                                0x1
#define _RXB1SIDL_EID17_POSN                                0x1
#define _RXB1SIDL_EID17_POSITION                            0x1
#define _RXB1SIDL_EID17_SIZE                                0x1
#define _RXB1SIDL_EID17_LENGTH                              0x1
#define _RXB1SIDL_EID17_MASK                                0x2
#define _RXB1SIDL_EXID_POSN                                 0x3
#define _RXB1SIDL_EXID_POSITION                             0x3
#define _RXB1SIDL_EXID_SIZE                                 0x1
#define _RXB1SIDL_EXID_LENGTH                               0x1
#define _RXB1SIDL_EXID_MASK                                 0x8
#define _RXB1SIDL_SRR_POSN                                  0x4
#define _RXB1SIDL_SRR_POSITION                              0x4
#define _RXB1SIDL_SRR_SIZE                                  0x1
#define _RXB1SIDL_SRR_LENGTH                                0x1
#define _RXB1SIDL_SRR_MASK                                  0x10
#define _RXB1SIDL_SID0_POSN                                 0x5
#define _RXB1SIDL_SID0_POSITION                             0x5
#define _RXB1SIDL_SID0_SIZE                                 0x1
#define _RXB1SIDL_SID0_LENGTH                               0x1
#define _RXB1SIDL_SID0_MASK                                 0x20
#define _RXB1SIDL_SID1_POSN                                 0x6
#define _RXB1SIDL_SID1_POSITION                             0x6
#define _RXB1SIDL_SID1_SIZE                                 0x1
#define _RXB1SIDL_SID1_LENGTH                               0x1
#define _RXB1SIDL_SID1_MASK                                 0x40
#define _RXB1SIDL_SID2_POSN                                 0x7
#define _RXB1SIDL_SID2_POSITION                             0x7
#define _RXB1SIDL_SID2_SIZE                                 0x1
#define _RXB1SIDL_SID2_LENGTH                               0x1
#define _RXB1SIDL_SID2_MASK                                 0x80
#define _RXB1SIDL_RXB1EID16_POSN                            0x0
#define _RXB1SIDL_RXB1EID16_POSITION                        0x0
#define _RXB1SIDL_RXB1EID16_SIZE                            0x1
#define _RXB1SIDL_RXB1EID16_LENGTH                          0x1
#define _RXB1SIDL_RXB1EID16_MASK                            0x1
#define _RXB1SIDL_RXB1EID17_POSN                            0x1
#define _RXB1SIDL_RXB1EID17_POSITION                        0x1
#define _RXB1SIDL_RXB1EID17_SIZE                            0x1
#define _RXB1SIDL_RXB1EID17_LENGTH                          0x1
#define _RXB1SIDL_RXB1EID17_MASK                            0x2
#define _RXB1SIDL_RXB1EXID_POSN                             0x3
#define _RXB1SIDL_RXB1EXID_POSITION                         0x3
#define _RXB1SIDL_RXB1EXID_SIZE                             0x1
#define _RXB1SIDL_RXB1EXID_LENGTH                           0x1
#define _RXB1SIDL_RXB1EXID_MASK                             0x8
#define _RXB1SIDL_RXB1SRR_POSN                              0x4
#define _RXB1SIDL_RXB1SRR_POSITION                          0x4
#define _RXB1SIDL_RXB1SRR_SIZE                              0x1
#define _RXB1SIDL_RXB1SRR_LENGTH                            0x1
#define _RXB1SIDL_RXB1SRR_MASK                              0x10
#define _RXB1SIDL_RXB1SID0_POSN                             0x5
#define _RXB1SIDL_RXB1SID0_POSITION                         0x5
#define _RXB1SIDL_RXB1SID0_SIZE                             0x1
#define _RXB1SIDL_RXB1SID0_LENGTH                           0x1
#define _RXB1SIDL_RXB1SID0_MASK                             0x20
#define _RXB1SIDL_RXB1SID1_POSN                             0x6
#define _RXB1SIDL_RXB1SID1_POSITION                         0x6
#define _RXB1SIDL_RXB1SID1_SIZE                             0x1
#define _RXB1SIDL_RXB1SID1_LENGTH                           0x1
#define _RXB1SIDL_RXB1SID1_MASK                             0x40
#define _RXB1SIDL_RXB1SID2_POSN                             0x7
#define _RXB1SIDL_RXB1SID2_POSITION                         0x7
#define _RXB1SIDL_RXB1SID2_SIZE                             0x1
#define _RXB1SIDL_RXB1SID2_LENGTH                           0x1
#define _RXB1SIDL_RXB1SID2_MASK                             0x80

// Register: RXB1EIDH
#define RXB1EIDH RXB1EIDH
extern volatile unsigned char           RXB1EIDH            __at(0xF53);
#ifndef _LIB_BUILD
asm("RXB1EIDH equ 0F53h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXB1EID8               :1;
        unsigned RXB1EID9               :1;
        unsigned RXB1EID10              :1;
        unsigned RXB1EID11              :1;
        unsigned RXB1EID12              :1;
        unsigned RXB1EID13              :1;
        unsigned RXB1EID14              :1;
        unsigned RXB1EID15              :1;
    };
} RXB1EIDHbits_t;
extern volatile RXB1EIDHbits_t RXB1EIDHbits __at(0xF53);
// bitfield macros
#define _RXB1EIDH_EID8_POSN                                 0x0
#define _RXB1EIDH_EID8_POSITION                             0x0
#define _RXB1EIDH_EID8_SIZE                                 0x1
#define _RXB1EIDH_EID8_LENGTH                               0x1
#define _RXB1EIDH_EID8_MASK                                 0x1
#define _RXB1EIDH_EID9_POSN                                 0x1
#define _RXB1EIDH_EID9_POSITION                             0x1
#define _RXB1EIDH_EID9_SIZE                                 0x1
#define _RXB1EIDH_EID9_LENGTH                               0x1
#define _RXB1EIDH_EID9_MASK                                 0x2
#define _RXB1EIDH_EID10_POSN                                0x2
#define _RXB1EIDH_EID10_POSITION                            0x2
#define _RXB1EIDH_EID10_SIZE                                0x1
#define _RXB1EIDH_EID10_LENGTH                              0x1
#define _RXB1EIDH_EID10_MASK                                0x4
#define _RXB1EIDH_EID11_POSN                                0x3
#define _RXB1EIDH_EID11_POSITION                            0x3
#define _RXB1EIDH_EID11_SIZE                                0x1
#define _RXB1EIDH_EID11_LENGTH                              0x1
#define _RXB1EIDH_EID11_MASK                                0x8
#define _RXB1EIDH_EID12_POSN                                0x4
#define _RXB1EIDH_EID12_POSITION                            0x4
#define _RXB1EIDH_EID12_SIZE                                0x1
#define _RXB1EIDH_EID12_LENGTH                              0x1
#define _RXB1EIDH_EID12_MASK                                0x10
#define _RXB1EIDH_EID13_POSN                                0x5
#define _RXB1EIDH_EID13_POSITION                            0x5
#define _RXB1EIDH_EID13_SIZE                                0x1
#define _RXB1EIDH_EID13_LENGTH                              0x1
#define _RXB1EIDH_EID13_MASK                                0x20
#define _RXB1EIDH_EID14_POSN                                0x6
#define _RXB1EIDH_EID14_POSITION                            0x6
#define _RXB1EIDH_EID14_SIZE                                0x1
#define _RXB1EIDH_EID14_LENGTH                              0x1
#define _RXB1EIDH_EID14_MASK                                0x40
#define _RXB1EIDH_EID15_POSN                                0x7
#define _RXB1EIDH_EID15_POSITION                            0x7
#define _RXB1EIDH_EID15_SIZE                                0x1
#define _RXB1EIDH_EID15_LENGTH                              0x1
#define _RXB1EIDH_EID15_MASK                                0x80
#define _RXB1EIDH_RXB1EID8_POSN                             0x0
#define _RXB1EIDH_RXB1EID8_POSITION                         0x0
#define _RXB1EIDH_RXB1EID8_SIZE                             0x1
#define _RXB1EIDH_RXB1EID8_LENGTH                           0x1
#define _RXB1EIDH_RXB1EID8_MASK                             0x1
#define _RXB1EIDH_RXB1EID9_POSN                             0x1
#define _RXB1EIDH_RXB1EID9_POSITION                         0x1
#define _RXB1EIDH_RXB1EID9_SIZE                             0x1
#define _RXB1EIDH_RXB1EID9_LENGTH                           0x1
#define _RXB1EIDH_RXB1EID9_MASK                             0x2
#define _RXB1EIDH_RXB1EID10_POSN                            0x2
#define _RXB1EIDH_RXB1EID10_POSITION                        0x2
#define _RXB1EIDH_RXB1EID10_SIZE                            0x1
#define _RXB1EIDH_RXB1EID10_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID10_MASK                            0x4
#define _RXB1EIDH_RXB1EID11_POSN                            0x3
#define _RXB1EIDH_RXB1EID11_POSITION                        0x3
#define _RXB1EIDH_RXB1EID11_SIZE                            0x1
#define _RXB1EIDH_RXB1EID11_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID11_MASK                            0x8
#define _RXB1EIDH_RXB1EID12_POSN                            0x4
#define _RXB1EIDH_RXB1EID12_POSITION                        0x4
#define _RXB1EIDH_RXB1EID12_SIZE                            0x1
#define _RXB1EIDH_RXB1EID12_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID12_MASK                            0x10
#define _RXB1EIDH_RXB1EID13_POSN                            0x5
#define _RXB1EIDH_RXB1EID13_POSITION                        0x5
#define _RXB1EIDH_RXB1EID13_SIZE                            0x1
#define _RXB1EIDH_RXB1EID13_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID13_MASK                            0x20
#define _RXB1EIDH_RXB1EID14_POSN                            0x6
#define _RXB1EIDH_RXB1EID14_POSITION                        0x6
#define _RXB1EIDH_RXB1EID14_SIZE                            0x1
#define _RXB1EIDH_RXB1EID14_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID14_MASK                            0x40
#define _RXB1EIDH_RXB1EID15_POSN                            0x7
#define _RXB1EIDH_RXB1EID15_POSITION                        0x7
#define _RXB1EIDH_RXB1EID15_SIZE                            0x1
#define _RXB1EIDH_RXB1EID15_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID15_MASK                            0x80

// Register: RXB1EIDL
#define RXB1EIDL RXB1EIDL
extern volatile unsigned char           RXB1EIDL            __at(0xF54);
#ifndef _LIB_BUILD
asm("RXB1EIDL equ 0F54h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXB1EID0               :1;
        unsigned RXB1EID1               :1;
        unsigned RXB1EID2               :1;
        unsigned RXB1EID3               :1;
        unsigned RXB1EID4               :1;
        unsigned RXB1EID5               :1;
        unsigned RXB1EID6               :1;
        unsigned RXB1EID7               :1;
    };
} RXB1EIDLbits_t;
extern volatile RXB1EIDLbits_t RXB1EIDLbits __at(0xF54);
// bitfield macros
#define _RXB1EIDL_EID0_POSN                                 0x0
#define _RXB1EIDL_EID0_POSITION                             0x0
#define _RXB1EIDL_EID0_SIZE                                 0x1
#define _RXB1EIDL_EID0_LENGTH                               0x1
#define _RXB1EIDL_EID0_MASK                                 0x1
#define _RXB1EIDL_EID1_POSN                                 0x1
#define _RXB1EIDL_EID1_POSITION                             0x1
#define _RXB1EIDL_EID1_SIZE                                 0x1
#define _RXB1EIDL_EID1_LENGTH                               0x1
#define _RXB1EIDL_EID1_MASK                                 0x2
#define _RXB1EIDL_EID2_POSN                                 0x2
#define _RXB1EIDL_EID2_POSITION                             0x2
#define _RXB1EIDL_EID2_SIZE                                 0x1
#define _RXB1EIDL_EID2_LENGTH                               0x1
#define _RXB1EIDL_EID2_MASK                                 0x4
#define _RXB1EIDL_EID3_POSN                                 0x3
#define _RXB1EIDL_EID3_POSITION                             0x3
#define _RXB1EIDL_EID3_SIZE                                 0x1
#define _RXB1EIDL_EID3_LENGTH                               0x1
#define _RXB1EIDL_EID3_MASK                                 0x8
#define _RXB1EIDL_EID4_POSN                                 0x4
#define _RXB1EIDL_EID4_POSITION                             0x4
#define _RXB1EIDL_EID4_SIZE                                 0x1
#define _RXB1EIDL_EID4_LENGTH                               0x1
#define _RXB1EIDL_EID4_MASK                                 0x10
#define _RXB1EIDL_EID5_POSN                                 0x5
#define _RXB1EIDL_EID5_POSITION                             0x5
#define _RXB1EIDL_EID5_SIZE                                 0x1
#define _RXB1EIDL_EID5_LENGTH                               0x1
#define _RXB1EIDL_EID5_MASK                                 0x20
#define _RXB1EIDL_EID6_POSN                                 0x6
#define _RXB1EIDL_EID6_POSITION                             0x6
#define _RXB1EIDL_EID6_SIZE                                 0x1
#define _RXB1EIDL_EID6_LENGTH                               0x1
#define _RXB1EIDL_EID6_MASK                                 0x40
#define _RXB1EIDL_EID7_POSN                                 0x7
#define _RXB1EIDL_EID7_POSITION                             0x7
#define _RXB1EIDL_EID7_SIZE                                 0x1
#define _RXB1EIDL_EID7_LENGTH                               0x1
#define _RXB1EIDL_EID7_MASK                                 0x80
#define _RXB1EIDL_RXB1EID0_POSN                             0x0
#define _RXB1EIDL_RXB1EID0_POSITION                         0x0
#define _RXB1EIDL_RXB1EID0_SIZE                             0x1
#define _RXB1EIDL_RXB1EID0_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID0_MASK                             0x1
#define _RXB1EIDL_RXB1EID1_POSN                             0x1
#define _RXB1EIDL_RXB1EID1_POSITION                         0x1
#define _RXB1EIDL_RXB1EID1_SIZE                             0x1
#define _RXB1EIDL_RXB1EID1_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID1_MASK                             0x2
#define _RXB1EIDL_RXB1EID2_POSN                             0x2
#define _RXB1EIDL_RXB1EID2_POSITION                         0x2
#define _RXB1EIDL_RXB1EID2_SIZE                             0x1
#define _RXB1EIDL_RXB1EID2_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID2_MASK                             0x4
#define _RXB1EIDL_RXB1EID3_POSN                             0x3
#define _RXB1EIDL_RXB1EID3_POSITION                         0x3
#define _RXB1EIDL_RXB1EID3_SIZE                             0x1
#define _RXB1EIDL_RXB1EID3_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID3_MASK                             0x8
#define _RXB1EIDL_RXB1EID4_POSN                             0x4
#define _RXB1EIDL_RXB1EID4_POSITION                         0x4
#define _RXB1EIDL_RXB1EID4_SIZE                             0x1
#define _RXB1EIDL_RXB1EID4_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID4_MASK                             0x10
#define _RXB1EIDL_RXB1EID5_POSN                             0x5
#define _RXB1EIDL_RXB1EID5_POSITION                         0x5
#define _RXB1EIDL_RXB1EID5_SIZE                             0x1
#define _RXB1EIDL_RXB1EID5_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID5_MASK                             0x20
#define _RXB1EIDL_RXB1EID6_POSN                             0x6
#define _RXB1EIDL_RXB1EID6_POSITION                         0x6
#define _RXB1EIDL_RXB1EID6_SIZE                             0x1
#define _RXB1EIDL_RXB1EID6_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID6_MASK                             0x40
#define _RXB1EIDL_RXB1EID7_POSN                             0x7
#define _RXB1EIDL_RXB1EID7_POSITION                         0x7
#define _RXB1EIDL_RXB1EID7_SIZE                             0x1
#define _RXB1EIDL_RXB1EID7_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID7_MASK                             0x80

// Register: RXB1DLC
#define RXB1DLC RXB1DLC
extern volatile unsigned char           RXB1DLC             __at(0xF55);
#ifndef _LIB_BUILD
asm("RXB1DLC equ 0F55h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RXRTR                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned RESB0                  :1;
        unsigned RESB1                  :1;
    };
    struct {
        unsigned RXB1DLC0               :1;
        unsigned RXB1DLC1               :1;
        unsigned RXB1DLC2               :1;
        unsigned RXB1DLC3               :1;
        unsigned RXB1RB0                :1;
        unsigned RXB1RB1                :1;
        unsigned RXB1RTR                :1;
    };
} RXB1DLCbits_t;
extern volatile RXB1DLCbits_t RXB1DLCbits __at(0xF55);
// bitfield macros
#define _RXB1DLC_DLC0_POSN                                  0x0
#define _RXB1DLC_DLC0_POSITION                              0x0
#define _RXB1DLC_DLC0_SIZE                                  0x1
#define _RXB1DLC_DLC0_LENGTH                                0x1
#define _RXB1DLC_DLC0_MASK                                  0x1
#define _RXB1DLC_DLC1_POSN                                  0x1
#define _RXB1DLC_DLC1_POSITION                              0x1
#define _RXB1DLC_DLC1_SIZE                                  0x1
#define _RXB1DLC_DLC1_LENGTH                                0x1
#define _RXB1DLC_DLC1_MASK                                  0x2
#define _RXB1DLC_DLC2_POSN                                  0x2
#define _RXB1DLC_DLC2_POSITION                              0x2
#define _RXB1DLC_DLC2_SIZE                                  0x1
#define _RXB1DLC_DLC2_LENGTH                                0x1
#define _RXB1DLC_DLC2_MASK                                  0x4
#define _RXB1DLC_DLC3_POSN                                  0x3
#define _RXB1DLC_DLC3_POSITION                              0x3
#define _RXB1DLC_DLC3_SIZE                                  0x1
#define _RXB1DLC_DLC3_LENGTH                                0x1
#define _RXB1DLC_DLC3_MASK                                  0x8
#define _RXB1DLC_RB0_POSN                                   0x4
#define _RXB1DLC_RB0_POSITION                               0x4
#define _RXB1DLC_RB0_SIZE                                   0x1
#define _RXB1DLC_RB0_LENGTH                                 0x1
#define _RXB1DLC_RB0_MASK                                   0x10
#define _RXB1DLC_RB1_POSN                                   0x5
#define _RXB1DLC_RB1_POSITION                               0x5
#define _RXB1DLC_RB1_SIZE                                   0x1
#define _RXB1DLC_RB1_LENGTH                                 0x1
#define _RXB1DLC_RB1_MASK                                   0x20
#define _RXB1DLC_RXRTR_POSN                                 0x6
#define _RXB1DLC_RXRTR_POSITION                             0x6
#define _RXB1DLC_RXRTR_SIZE                                 0x1
#define _RXB1DLC_RXRTR_LENGTH                               0x1
#define _RXB1DLC_RXRTR_MASK                                 0x40
#define _RXB1DLC_RESB0_POSN                                 0x4
#define _RXB1DLC_RESB0_POSITION                             0x4
#define _RXB1DLC_RESB0_SIZE                                 0x1
#define _RXB1DLC_RESB0_LENGTH                               0x1
#define _RXB1DLC_RESB0_MASK                                 0x10
#define _RXB1DLC_RESB1_POSN                                 0x5
#define _RXB1DLC_RESB1_POSITION                             0x5
#define _RXB1DLC_RESB1_SIZE                                 0x1
#define _RXB1DLC_RESB1_LENGTH                               0x1
#define _RXB1DLC_RESB1_MASK                                 0x20
#define _RXB1DLC_RXB1DLC0_POSN                              0x0
#define _RXB1DLC_RXB1DLC0_POSITION                          0x0
#define _RXB1DLC_RXB1DLC0_SIZE                              0x1
#define _RXB1DLC_RXB1DLC0_LENGTH                            0x1
#define _RXB1DLC_RXB1DLC0_MASK                              0x1
#define _RXB1DLC_RXB1DLC1_POSN                              0x1
#define _RXB1DLC_RXB1DLC1_POSITION                          0x1
#define _RXB1DLC_RXB1DLC1_SIZE                              0x1
#define _RXB1DLC_RXB1DLC1_LENGTH                            0x1
#define _RXB1DLC_RXB1DLC1_MASK                              0x2
#define _RXB1DLC_RXB1DLC2_POSN                              0x2
#define _RXB1DLC_RXB1DLC2_POSITION                          0x2
#define _RXB1DLC_RXB1DLC2_SIZE                              0x1
#define _RXB1DLC_RXB1DLC2_LENGTH                            0x1
#define _RXB1DLC_RXB1DLC2_MASK                              0x4
#define _RXB1DLC_RXB1DLC3_POSN                              0x3
#define _RXB1DLC_RXB1DLC3_POSITION                          0x3
#define _RXB1DLC_RXB1DLC3_SIZE                              0x1
#define _RXB1DLC_RXB1DLC3_LENGTH                            0x1
#define _RXB1DLC_RXB1DLC3_MASK                              0x8
#define _RXB1DLC_RXB1RB0_POSN                               0x4
#define _RXB1DLC_RXB1RB0_POSITION                           0x4
#define _RXB1DLC_RXB1RB0_SIZE                               0x1
#define _RXB1DLC_RXB1RB0_LENGTH                             0x1
#define _RXB1DLC_RXB1RB0_MASK                               0x10
#define _RXB1DLC_RXB1RB1_POSN                               0x5
#define _RXB1DLC_RXB1RB1_POSITION                           0x5
#define _RXB1DLC_RXB1RB1_SIZE                               0x1
#define _RXB1DLC_RXB1RB1_LENGTH                             0x1
#define _RXB1DLC_RXB1RB1_MASK                               0x20
#define _RXB1DLC_RXB1RTR_POSN                               0x6
#define _RXB1DLC_RXB1RTR_POSITION                           0x6
#define _RXB1DLC_RXB1RTR_SIZE                               0x1
#define _RXB1DLC_RXB1RTR_LENGTH                             0x1
#define _RXB1DLC_RXB1RTR_MASK                               0x40

// Register: RXB1D0
#define RXB1D0 RXB1D0
extern volatile unsigned char           RXB1D0              __at(0xF56);
#ifndef _LIB_BUILD
asm("RXB1D0 equ 0F56h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D00                :1;
        unsigned RXB1D01                :1;
        unsigned RXB1D02                :1;
        unsigned RXB1D03                :1;
        unsigned RXB1D04                :1;
        unsigned RXB1D05                :1;
        unsigned RXB1D06                :1;
        unsigned RXB1D07                :1;
    };
} RXB1D0bits_t;
extern volatile RXB1D0bits_t RXB1D0bits __at(0xF56);
// bitfield macros
#define _RXB1D0_RXB1D00_POSN                                0x0
#define _RXB1D0_RXB1D00_POSITION                            0x0
#define _RXB1D0_RXB1D00_SIZE                                0x1
#define _RXB1D0_RXB1D00_LENGTH                              0x1
#define _RXB1D0_RXB1D00_MASK                                0x1
#define _RXB1D0_RXB1D01_POSN                                0x1
#define _RXB1D0_RXB1D01_POSITION                            0x1
#define _RXB1D0_RXB1D01_SIZE                                0x1
#define _RXB1D0_RXB1D01_LENGTH                              0x1
#define _RXB1D0_RXB1D01_MASK                                0x2
#define _RXB1D0_RXB1D02_POSN                                0x2
#define _RXB1D0_RXB1D02_POSITION                            0x2
#define _RXB1D0_RXB1D02_SIZE                                0x1
#define _RXB1D0_RXB1D02_LENGTH                              0x1
#define _RXB1D0_RXB1D02_MASK                                0x4
#define _RXB1D0_RXB1D03_POSN                                0x3
#define _RXB1D0_RXB1D03_POSITION                            0x3
#define _RXB1D0_RXB1D03_SIZE                                0x1
#define _RXB1D0_RXB1D03_LENGTH                              0x1
#define _RXB1D0_RXB1D03_MASK                                0x8
#define _RXB1D0_RXB1D04_POSN                                0x4
#define _RXB1D0_RXB1D04_POSITION                            0x4
#define _RXB1D0_RXB1D04_SIZE                                0x1
#define _RXB1D0_RXB1D04_LENGTH                              0x1
#define _RXB1D0_RXB1D04_MASK                                0x10
#define _RXB1D0_RXB1D05_POSN                                0x5
#define _RXB1D0_RXB1D05_POSITION                            0x5
#define _RXB1D0_RXB1D05_SIZE                                0x1
#define _RXB1D0_RXB1D05_LENGTH                              0x1
#define _RXB1D0_RXB1D05_MASK                                0x20
#define _RXB1D0_RXB1D06_POSN                                0x6
#define _RXB1D0_RXB1D06_POSITION                            0x6
#define _RXB1D0_RXB1D06_SIZE                                0x1
#define _RXB1D0_RXB1D06_LENGTH                              0x1
#define _RXB1D0_RXB1D06_MASK                                0x40
#define _RXB1D0_RXB1D07_POSN                                0x7
#define _RXB1D0_RXB1D07_POSITION                            0x7
#define _RXB1D0_RXB1D07_SIZE                                0x1
#define _RXB1D0_RXB1D07_LENGTH                              0x1
#define _RXB1D0_RXB1D07_MASK                                0x80

// Register: RXB1D1
#define RXB1D1 RXB1D1
extern volatile unsigned char           RXB1D1              __at(0xF57);
#ifndef _LIB_BUILD
asm("RXB1D1 equ 0F57h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D10                :1;
        unsigned RXB1D11                :1;
        unsigned RXB1D12                :1;
        unsigned RXB1D13                :1;
        unsigned RXB1D14                :1;
        unsigned RXB1D15                :1;
        unsigned RXB1D16                :1;
        unsigned RXB1D17                :1;
    };
} RXB1D1bits_t;
extern volatile RXB1D1bits_t RXB1D1bits __at(0xF57);
// bitfield macros
#define _RXB1D1_RXB1D10_POSN                                0x0
#define _RXB1D1_RXB1D10_POSITION                            0x0
#define _RXB1D1_RXB1D10_SIZE                                0x1
#define _RXB1D1_RXB1D10_LENGTH                              0x1
#define _RXB1D1_RXB1D10_MASK                                0x1
#define _RXB1D1_RXB1D11_POSN                                0x1
#define _RXB1D1_RXB1D11_POSITION                            0x1
#define _RXB1D1_RXB1D11_SIZE                                0x1
#define _RXB1D1_RXB1D11_LENGTH                              0x1
#define _RXB1D1_RXB1D11_MASK                                0x2
#define _RXB1D1_RXB1D12_POSN                                0x2
#define _RXB1D1_RXB1D12_POSITION                            0x2
#define _RXB1D1_RXB1D12_SIZE                                0x1
#define _RXB1D1_RXB1D12_LENGTH                              0x1
#define _RXB1D1_RXB1D12_MASK                                0x4
#define _RXB1D1_RXB1D13_POSN                                0x3
#define _RXB1D1_RXB1D13_POSITION                            0x3
#define _RXB1D1_RXB1D13_SIZE                                0x1
#define _RXB1D1_RXB1D13_LENGTH                              0x1
#define _RXB1D1_RXB1D13_MASK                                0x8
#define _RXB1D1_RXB1D14_POSN                                0x4
#define _RXB1D1_RXB1D14_POSITION                            0x4
#define _RXB1D1_RXB1D14_SIZE                                0x1
#define _RXB1D1_RXB1D14_LENGTH                              0x1
#define _RXB1D1_RXB1D14_MASK                                0x10
#define _RXB1D1_RXB1D15_POSN                                0x5
#define _RXB1D1_RXB1D15_POSITION                            0x5
#define _RXB1D1_RXB1D15_SIZE                                0x1
#define _RXB1D1_RXB1D15_LENGTH                              0x1
#define _RXB1D1_RXB1D15_MASK                                0x20
#define _RXB1D1_RXB1D16_POSN                                0x6
#define _RXB1D1_RXB1D16_POSITION                            0x6
#define _RXB1D1_RXB1D16_SIZE                                0x1
#define _RXB1D1_RXB1D16_LENGTH                              0x1
#define _RXB1D1_RXB1D16_MASK                                0x40
#define _RXB1D1_RXB1D17_POSN                                0x7
#define _RXB1D1_RXB1D17_POSITION                            0x7
#define _RXB1D1_RXB1D17_SIZE                                0x1
#define _RXB1D1_RXB1D17_LENGTH                              0x1
#define _RXB1D1_RXB1D17_MASK                                0x80

// Register: RXB1D2
#define RXB1D2 RXB1D2
extern volatile unsigned char           RXB1D2              __at(0xF58);
#ifndef _LIB_BUILD
asm("RXB1D2 equ 0F58h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D20                :1;
        unsigned RXB1D21                :1;
        unsigned RXB1D22                :1;
        unsigned RXB1D23                :1;
        unsigned RXB1D24                :1;
        unsigned RXB1D25                :1;
        unsigned RXB1D26                :1;
        unsigned RXB1D27                :1;
    };
} RXB1D2bits_t;
extern volatile RXB1D2bits_t RXB1D2bits __at(0xF58);
// bitfield macros
#define _RXB1D2_RXB1D20_POSN                                0x0
#define _RXB1D2_RXB1D20_POSITION                            0x0
#define _RXB1D2_RXB1D20_SIZE                                0x1
#define _RXB1D2_RXB1D20_LENGTH                              0x1
#define _RXB1D2_RXB1D20_MASK                                0x1
#define _RXB1D2_RXB1D21_POSN                                0x1
#define _RXB1D2_RXB1D21_POSITION                            0x1
#define _RXB1D2_RXB1D21_SIZE                                0x1
#define _RXB1D2_RXB1D21_LENGTH                              0x1
#define _RXB1D2_RXB1D21_MASK                                0x2
#define _RXB1D2_RXB1D22_POSN                                0x2
#define _RXB1D2_RXB1D22_POSITION                            0x2
#define _RXB1D2_RXB1D22_SIZE                                0x1
#define _RXB1D2_RXB1D22_LENGTH                              0x1
#define _RXB1D2_RXB1D22_MASK                                0x4
#define _RXB1D2_RXB1D23_POSN                                0x3
#define _RXB1D2_RXB1D23_POSITION                            0x3
#define _RXB1D2_RXB1D23_SIZE                                0x1
#define _RXB1D2_RXB1D23_LENGTH                              0x1
#define _RXB1D2_RXB1D23_MASK                                0x8
#define _RXB1D2_RXB1D24_POSN                                0x4
#define _RXB1D2_RXB1D24_POSITION                            0x4
#define _RXB1D2_RXB1D24_SIZE                                0x1
#define _RXB1D2_RXB1D24_LENGTH                              0x1
#define _RXB1D2_RXB1D24_MASK                                0x10
#define _RXB1D2_RXB1D25_POSN                                0x5
#define _RXB1D2_RXB1D25_POSITION                            0x5
#define _RXB1D2_RXB1D25_SIZE                                0x1
#define _RXB1D2_RXB1D25_LENGTH                              0x1
#define _RXB1D2_RXB1D25_MASK                                0x20
#define _RXB1D2_RXB1D26_POSN                                0x6
#define _RXB1D2_RXB1D26_POSITION                            0x6
#define _RXB1D2_RXB1D26_SIZE                                0x1
#define _RXB1D2_RXB1D26_LENGTH                              0x1
#define _RXB1D2_RXB1D26_MASK                                0x40
#define _RXB1D2_RXB1D27_POSN                                0x7
#define _RXB1D2_RXB1D27_POSITION                            0x7
#define _RXB1D2_RXB1D27_SIZE                                0x1
#define _RXB1D2_RXB1D27_LENGTH                              0x1
#define _RXB1D2_RXB1D27_MASK                                0x80

// Register: RXB1D3
#define RXB1D3 RXB1D3
extern volatile unsigned char           RXB1D3              __at(0xF59);
#ifndef _LIB_BUILD
asm("RXB1D3 equ 0F59h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D30                :1;
        unsigned RXB1D31                :1;
        unsigned RXB1D32                :1;
        unsigned RXB1D33                :1;
        unsigned RXB1D34                :1;
        unsigned RXB1D35                :1;
        unsigned RXB1D36                :1;
        unsigned RXB1D37                :1;
    };
} RXB1D3bits_t;
extern volatile RXB1D3bits_t RXB1D3bits __at(0xF59);
// bitfield macros
#define _RXB1D3_RXB1D30_POSN                                0x0
#define _RXB1D3_RXB1D30_POSITION                            0x0
#define _RXB1D3_RXB1D30_SIZE                                0x1
#define _RXB1D3_RXB1D30_LENGTH                              0x1
#define _RXB1D3_RXB1D30_MASK                                0x1
#define _RXB1D3_RXB1D31_POSN                                0x1
#define _RXB1D3_RXB1D31_POSITION                            0x1
#define _RXB1D3_RXB1D31_SIZE                                0x1
#define _RXB1D3_RXB1D31_LENGTH                              0x1
#define _RXB1D3_RXB1D31_MASK                                0x2
#define _RXB1D3_RXB1D32_POSN                                0x2
#define _RXB1D3_RXB1D32_POSITION                            0x2
#define _RXB1D3_RXB1D32_SIZE                                0x1
#define _RXB1D3_RXB1D32_LENGTH                              0x1
#define _RXB1D3_RXB1D32_MASK                                0x4
#define _RXB1D3_RXB1D33_POSN                                0x3
#define _RXB1D3_RXB1D33_POSITION                            0x3
#define _RXB1D3_RXB1D33_SIZE                                0x1
#define _RXB1D3_RXB1D33_LENGTH                              0x1
#define _RXB1D3_RXB1D33_MASK                                0x8
#define _RXB1D3_RXB1D34_POSN                                0x4
#define _RXB1D3_RXB1D34_POSITION                            0x4
#define _RXB1D3_RXB1D34_SIZE                                0x1
#define _RXB1D3_RXB1D34_LENGTH                              0x1
#define _RXB1D3_RXB1D34_MASK                                0x10
#define _RXB1D3_RXB1D35_POSN                                0x5
#define _RXB1D3_RXB1D35_POSITION                            0x5
#define _RXB1D3_RXB1D35_SIZE                                0x1
#define _RXB1D3_RXB1D35_LENGTH                              0x1
#define _RXB1D3_RXB1D35_MASK                                0x20
#define _RXB1D3_RXB1D36_POSN                                0x6
#define _RXB1D3_RXB1D36_POSITION                            0x6
#define _RXB1D3_RXB1D36_SIZE                                0x1
#define _RXB1D3_RXB1D36_LENGTH                              0x1
#define _RXB1D3_RXB1D36_MASK                                0x40
#define _RXB1D3_RXB1D37_POSN                                0x7
#define _RXB1D3_RXB1D37_POSITION                            0x7
#define _RXB1D3_RXB1D37_SIZE                                0x1
#define _RXB1D3_RXB1D37_LENGTH                              0x1
#define _RXB1D3_RXB1D37_MASK                                0x80

// Register: RXB1D4
#define RXB1D4 RXB1D4
extern volatile unsigned char           RXB1D4              __at(0xF5A);
#ifndef _LIB_BUILD
asm("RXB1D4 equ 0F5Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D40                :1;
        unsigned RXB1D41                :1;
        unsigned RXB1D42                :1;
        unsigned RXB1D43                :1;
        unsigned RXB1D44                :1;
        unsigned RXB1D45                :1;
        unsigned RXB1D46                :1;
        unsigned RXB1D47                :1;
    };
} RXB1D4bits_t;
extern volatile RXB1D4bits_t RXB1D4bits __at(0xF5A);
// bitfield macros
#define _RXB1D4_RXB1D40_POSN                                0x0
#define _RXB1D4_RXB1D40_POSITION                            0x0
#define _RXB1D4_RXB1D40_SIZE                                0x1
#define _RXB1D4_RXB1D40_LENGTH                              0x1
#define _RXB1D4_RXB1D40_MASK                                0x1
#define _RXB1D4_RXB1D41_POSN                                0x1
#define _RXB1D4_RXB1D41_POSITION                            0x1
#define _RXB1D4_RXB1D41_SIZE                                0x1
#define _RXB1D4_RXB1D41_LENGTH                              0x1
#define _RXB1D4_RXB1D41_MASK                                0x2
#define _RXB1D4_RXB1D42_POSN                                0x2
#define _RXB1D4_RXB1D42_POSITION                            0x2
#define _RXB1D4_RXB1D42_SIZE                                0x1
#define _RXB1D4_RXB1D42_LENGTH                              0x1
#define _RXB1D4_RXB1D42_MASK                                0x4
#define _RXB1D4_RXB1D43_POSN                                0x3
#define _RXB1D4_RXB1D43_POSITION                            0x3
#define _RXB1D4_RXB1D43_SIZE                                0x1
#define _RXB1D4_RXB1D43_LENGTH                              0x1
#define _RXB1D4_RXB1D43_MASK                                0x8
#define _RXB1D4_RXB1D44_POSN                                0x4
#define _RXB1D4_RXB1D44_POSITION                            0x4
#define _RXB1D4_RXB1D44_SIZE                                0x1
#define _RXB1D4_RXB1D44_LENGTH                              0x1
#define _RXB1D4_RXB1D44_MASK                                0x10
#define _RXB1D4_RXB1D45_POSN                                0x5
#define _RXB1D4_RXB1D45_POSITION                            0x5
#define _RXB1D4_RXB1D45_SIZE                                0x1
#define _RXB1D4_RXB1D45_LENGTH                              0x1
#define _RXB1D4_RXB1D45_MASK                                0x20
#define _RXB1D4_RXB1D46_POSN                                0x6
#define _RXB1D4_RXB1D46_POSITION                            0x6
#define _RXB1D4_RXB1D46_SIZE                                0x1
#define _RXB1D4_RXB1D46_LENGTH                              0x1
#define _RXB1D4_RXB1D46_MASK                                0x40
#define _RXB1D4_RXB1D47_POSN                                0x7
#define _RXB1D4_RXB1D47_POSITION                            0x7
#define _RXB1D4_RXB1D47_SIZE                                0x1
#define _RXB1D4_RXB1D47_LENGTH                              0x1
#define _RXB1D4_RXB1D47_MASK                                0x80

// Register: RXB1D5
#define RXB1D5 RXB1D5
extern volatile unsigned char           RXB1D5              __at(0xF5B);
#ifndef _LIB_BUILD
asm("RXB1D5 equ 0F5Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D50                :1;
        unsigned RXB1D51                :1;
        unsigned RXB1D52                :1;
        unsigned RXB1D53                :1;
        unsigned RXB1D54                :1;
        unsigned RXB1D55                :1;
        unsigned RXB1D56                :1;
        unsigned RXB1D57                :1;
    };
} RXB1D5bits_t;
extern volatile RXB1D5bits_t RXB1D5bits __at(0xF5B);
// bitfield macros
#define _RXB1D5_RXB1D50_POSN                                0x0
#define _RXB1D5_RXB1D50_POSITION                            0x0
#define _RXB1D5_RXB1D50_SIZE                                0x1
#define _RXB1D5_RXB1D50_LENGTH                              0x1
#define _RXB1D5_RXB1D50_MASK                                0x1
#define _RXB1D5_RXB1D51_POSN                                0x1
#define _RXB1D5_RXB1D51_POSITION                            0x1
#define _RXB1D5_RXB1D51_SIZE                                0x1
#define _RXB1D5_RXB1D51_LENGTH                              0x1
#define _RXB1D5_RXB1D51_MASK                                0x2
#define _RXB1D5_RXB1D52_POSN                                0x2
#define _RXB1D5_RXB1D52_POSITION                            0x2
#define _RXB1D5_RXB1D52_SIZE                                0x1
#define _RXB1D5_RXB1D52_LENGTH                              0x1
#define _RXB1D5_RXB1D52_MASK                                0x4
#define _RXB1D5_RXB1D53_POSN                                0x3
#define _RXB1D5_RXB1D53_POSITION                            0x3
#define _RXB1D5_RXB1D53_SIZE                                0x1
#define _RXB1D5_RXB1D53_LENGTH                              0x1
#define _RXB1D5_RXB1D53_MASK                                0x8
#define _RXB1D5_RXB1D54_POSN                                0x4
#define _RXB1D5_RXB1D54_POSITION                            0x4
#define _RXB1D5_RXB1D54_SIZE                                0x1
#define _RXB1D5_RXB1D54_LENGTH                              0x1
#define _RXB1D5_RXB1D54_MASK                                0x10
#define _RXB1D5_RXB1D55_POSN                                0x5
#define _RXB1D5_RXB1D55_POSITION                            0x5
#define _RXB1D5_RXB1D55_SIZE                                0x1
#define _RXB1D5_RXB1D55_LENGTH                              0x1
#define _RXB1D5_RXB1D55_MASK                                0x20
#define _RXB1D5_RXB1D56_POSN                                0x6
#define _RXB1D5_RXB1D56_POSITION                            0x6
#define _RXB1D5_RXB1D56_SIZE                                0x1
#define _RXB1D5_RXB1D56_LENGTH                              0x1
#define _RXB1D5_RXB1D56_MASK                                0x40
#define _RXB1D5_RXB1D57_POSN                                0x7
#define _RXB1D5_RXB1D57_POSITION                            0x7
#define _RXB1D5_RXB1D57_SIZE                                0x1
#define _RXB1D5_RXB1D57_LENGTH                              0x1
#define _RXB1D5_RXB1D57_MASK                                0x80

// Register: RXB1D6
#define RXB1D6 RXB1D6
extern volatile unsigned char           RXB1D6              __at(0xF5C);
#ifndef _LIB_BUILD
asm("RXB1D6 equ 0F5Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D60                :1;
        unsigned RXB1D61                :1;
        unsigned RXB1D62                :1;
        unsigned RXB1D63                :1;
        unsigned RXB1D64                :1;
        unsigned RXB1D65                :1;
        unsigned RXB1D66                :1;
        unsigned RXB1D67                :1;
    };
} RXB1D6bits_t;
extern volatile RXB1D6bits_t RXB1D6bits __at(0xF5C);
// bitfield macros
#define _RXB1D6_RXB1D60_POSN                                0x0
#define _RXB1D6_RXB1D60_POSITION                            0x0
#define _RXB1D6_RXB1D60_SIZE                                0x1
#define _RXB1D6_RXB1D60_LENGTH                              0x1
#define _RXB1D6_RXB1D60_MASK                                0x1
#define _RXB1D6_RXB1D61_POSN                                0x1
#define _RXB1D6_RXB1D61_POSITION                            0x1
#define _RXB1D6_RXB1D61_SIZE                                0x1
#define _RXB1D6_RXB1D61_LENGTH                              0x1
#define _RXB1D6_RXB1D61_MASK                                0x2
#define _RXB1D6_RXB1D62_POSN                                0x2
#define _RXB1D6_RXB1D62_POSITION                            0x2
#define _RXB1D6_RXB1D62_SIZE                                0x1
#define _RXB1D6_RXB1D62_LENGTH                              0x1
#define _RXB1D6_RXB1D62_MASK                                0x4
#define _RXB1D6_RXB1D63_POSN                                0x3
#define _RXB1D6_RXB1D63_POSITION                            0x3
#define _RXB1D6_RXB1D63_SIZE                                0x1
#define _RXB1D6_RXB1D63_LENGTH                              0x1
#define _RXB1D6_RXB1D63_MASK                                0x8
#define _RXB1D6_RXB1D64_POSN                                0x4
#define _RXB1D6_RXB1D64_POSITION                            0x4
#define _RXB1D6_RXB1D64_SIZE                                0x1
#define _RXB1D6_RXB1D64_LENGTH                              0x1
#define _RXB1D6_RXB1D64_MASK                                0x10
#define _RXB1D6_RXB1D65_POSN                                0x5
#define _RXB1D6_RXB1D65_POSITION                            0x5
#define _RXB1D6_RXB1D65_SIZE                                0x1
#define _RXB1D6_RXB1D65_LENGTH                              0x1
#define _RXB1D6_RXB1D65_MASK                                0x20
#define _RXB1D6_RXB1D66_POSN                                0x6
#define _RXB1D6_RXB1D66_POSITION                            0x6
#define _RXB1D6_RXB1D66_SIZE                                0x1
#define _RXB1D6_RXB1D66_LENGTH                              0x1
#define _RXB1D6_RXB1D66_MASK                                0x40
#define _RXB1D6_RXB1D67_POSN                                0x7
#define _RXB1D6_RXB1D67_POSITION                            0x7
#define _RXB1D6_RXB1D67_SIZE                                0x1
#define _RXB1D6_RXB1D67_LENGTH                              0x1
#define _RXB1D6_RXB1D67_MASK                                0x80

// Register: RXB1D7
#define RXB1D7 RXB1D7
extern volatile unsigned char           RXB1D7              __at(0xF5D);
#ifndef _LIB_BUILD
asm("RXB1D7 equ 0F5Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D70                :1;
        unsigned RXB1D71                :1;
        unsigned RXB1D72                :1;
        unsigned RXB1D73                :1;
        unsigned RXB1D74                :1;
        unsigned RXB1D75                :1;
        unsigned RXB1D76                :1;
        unsigned RXB1D77                :1;
    };
} RXB1D7bits_t;
extern volatile RXB1D7bits_t RXB1D7bits __at(0xF5D);
// bitfield macros
#define _RXB1D7_RXB1D70_POSN                                0x0
#define _RXB1D7_RXB1D70_POSITION                            0x0
#define _RXB1D7_RXB1D70_SIZE                                0x1
#define _RXB1D7_RXB1D70_LENGTH                              0x1
#define _RXB1D7_RXB1D70_MASK                                0x1
#define _RXB1D7_RXB1D71_POSN                                0x1
#define _RXB1D7_RXB1D71_POSITION                            0x1
#define _RXB1D7_RXB1D71_SIZE                                0x1
#define _RXB1D7_RXB1D71_LENGTH                              0x1
#define _RXB1D7_RXB1D71_MASK                                0x2
#define _RXB1D7_RXB1D72_POSN                                0x2
#define _RXB1D7_RXB1D72_POSITION                            0x2
#define _RXB1D7_RXB1D72_SIZE                                0x1
#define _RXB1D7_RXB1D72_LENGTH                              0x1
#define _RXB1D7_RXB1D72_MASK                                0x4
#define _RXB1D7_RXB1D73_POSN                                0x3
#define _RXB1D7_RXB1D73_POSITION                            0x3
#define _RXB1D7_RXB1D73_SIZE                                0x1
#define _RXB1D7_RXB1D73_LENGTH                              0x1
#define _RXB1D7_RXB1D73_MASK                                0x8
#define _RXB1D7_RXB1D74_POSN                                0x4
#define _RXB1D7_RXB1D74_POSITION                            0x4
#define _RXB1D7_RXB1D74_SIZE                                0x1
#define _RXB1D7_RXB1D74_LENGTH                              0x1
#define _RXB1D7_RXB1D74_MASK                                0x10
#define _RXB1D7_RXB1D75_POSN                                0x5
#define _RXB1D7_RXB1D75_POSITION                            0x5
#define _RXB1D7_RXB1D75_SIZE                                0x1
#define _RXB1D7_RXB1D75_LENGTH                              0x1
#define _RXB1D7_RXB1D75_MASK                                0x20
#define _RXB1D7_RXB1D76_POSN                                0x6
#define _RXB1D7_RXB1D76_POSITION                            0x6
#define _RXB1D7_RXB1D76_SIZE                                0x1
#define _RXB1D7_RXB1D76_LENGTH                              0x1
#define _RXB1D7_RXB1D76_MASK                                0x40
#define _RXB1D7_RXB1D77_POSN                                0x7
#define _RXB1D7_RXB1D77_POSITION                            0x7
#define _RXB1D7_RXB1D77_SIZE                                0x1
#define _RXB1D7_RXB1D77_LENGTH                              0x1
#define _RXB1D7_RXB1D77_MASK                                0x80

// Register: CANSTATRO1
#define CANSTATRO1 CANSTATRO1
extern volatile unsigned char           CANSTATRO1          __at(0xF5E);
#ifndef _LIB_BUILD
asm("CANSTATRO1 equ 0F5Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned ICODE0                 :1;
        unsigned ICODE1                 :1;
        unsigned ICODE2                 :1;
        unsigned                        :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTATRO1bits_t;
extern volatile CANSTATRO1bits_t CANSTATRO1bits __at(0xF5E);
// bitfield macros
#define _CANSTATRO1_ICODE0_POSN                             0x1
#define _CANSTATRO1_ICODE0_POSITION                         0x1
#define _CANSTATRO1_ICODE0_SIZE                             0x1
#define _CANSTATRO1_ICODE0_LENGTH                           0x1
#define _CANSTATRO1_ICODE0_MASK                             0x2
#define _CANSTATRO1_ICODE1_POSN                             0x2
#define _CANSTATRO1_ICODE1_POSITION                         0x2
#define _CANSTATRO1_ICODE1_SIZE                             0x1
#define _CANSTATRO1_ICODE1_LENGTH                           0x1
#define _CANSTATRO1_ICODE1_MASK                             0x4
#define _CANSTATRO1_ICODE2_POSN                             0x3
#define _CANSTATRO1_ICODE2_POSITION                         0x3
#define _CANSTATRO1_ICODE2_SIZE                             0x1
#define _CANSTATRO1_ICODE2_LENGTH                           0x1
#define _CANSTATRO1_ICODE2_MASK                             0x8
#define _CANSTATRO1_OPMODE0_POSN                            0x5
#define _CANSTATRO1_OPMODE0_POSITION                        0x5
#define _CANSTATRO1_OPMODE0_SIZE                            0x1
#define _CANSTATRO1_OPMODE0_LENGTH                          0x1
#define _CANSTATRO1_OPMODE0_MASK                            0x20
#define _CANSTATRO1_OPMODE1_POSN                            0x6
#define _CANSTATRO1_OPMODE1_POSITION                        0x6
#define _CANSTATRO1_OPMODE1_SIZE                            0x1
#define _CANSTATRO1_OPMODE1_LENGTH                          0x1
#define _CANSTATRO1_OPMODE1_MASK                            0x40
#define _CANSTATRO1_OPMODE2_POSN                            0x7
#define _CANSTATRO1_OPMODE2_POSITION                        0x7
#define _CANSTATRO1_OPMODE2_SIZE                            0x1
#define _CANSTATRO1_OPMODE2_LENGTH                          0x1
#define _CANSTATRO1_OPMODE2_MASK                            0x80

// Register: RXB0CON
#define RXB0CON RXB0CON
extern volatile unsigned char           RXB0CON             __at(0xF60);
#ifndef _LIB_BUILD
asm("RXB0CON equ 0F60h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FILHIT0                :1;
        unsigned JTOFF                  :1;
        unsigned RXB0DBEN               :1;
        unsigned RXRTRRO                :1;
        unsigned                        :1;
        unsigned RXM0                   :1;
        unsigned RXM1                   :1;
        unsigned RXFUL                  :1;
    };
    struct {
        unsigned RXB0FILHIT0            :1;
        unsigned RXB0FILHIT1            :1;
        unsigned RXB0FILHIT2            :1;
        unsigned RXB0FILHIT3            :1;
        unsigned                        :1;
        unsigned RXB0M0                 :1;
        unsigned RXB0M1                 :1;
        unsigned RXB0FUL                :1;
    };
    struct {
        unsigned                        :3;
        unsigned RXB0RTRR0              :1;
        unsigned                        :1;
        unsigned RXB0RTRRO              :1;
    };
} RXB0CONbits_t;
extern volatile RXB0CONbits_t RXB0CONbits __at(0xF60);
// bitfield macros
#define _RXB0CON_FILHIT0_POSN                               0x0
#define _RXB0CON_FILHIT0_POSITION                           0x0
#define _RXB0CON_FILHIT0_SIZE                               0x1
#define _RXB0CON_FILHIT0_LENGTH                             0x1
#define _RXB0CON_FILHIT0_MASK                               0x1
#define _RXB0CON_JTOFF_POSN                                 0x1
#define _RXB0CON_JTOFF_POSITION                             0x1
#define _RXB0CON_JTOFF_SIZE                                 0x1
#define _RXB0CON_JTOFF_LENGTH                               0x1
#define _RXB0CON_JTOFF_MASK                                 0x2
#define _RXB0CON_RXB0DBEN_POSN                              0x2
#define _RXB0CON_RXB0DBEN_POSITION                          0x2
#define _RXB0CON_RXB0DBEN_SIZE                              0x1
#define _RXB0CON_RXB0DBEN_LENGTH                            0x1
#define _RXB0CON_RXB0DBEN_MASK                              0x4
#define _RXB0CON_RXRTRRO_POSN                               0x3
#define _RXB0CON_RXRTRRO_POSITION                           0x3
#define _RXB0CON_RXRTRRO_SIZE                               0x1
#define _RXB0CON_RXRTRRO_LENGTH                             0x1
#define _RXB0CON_RXRTRRO_MASK                               0x8
#define _RXB0CON_RXM0_POSN                                  0x5
#define _RXB0CON_RXM0_POSITION                              0x5
#define _RXB0CON_RXM0_SIZE                                  0x1
#define _RXB0CON_RXM0_LENGTH                                0x1
#define _RXB0CON_RXM0_MASK                                  0x20
#define _RXB0CON_RXM1_POSN                                  0x6
#define _RXB0CON_RXM1_POSITION                              0x6
#define _RXB0CON_RXM1_SIZE                                  0x1
#define _RXB0CON_RXM1_LENGTH                                0x1
#define _RXB0CON_RXM1_MASK                                  0x40
#define _RXB0CON_RXFUL_POSN                                 0x7
#define _RXB0CON_RXFUL_POSITION                             0x7
#define _RXB0CON_RXFUL_SIZE                                 0x1
#define _RXB0CON_RXFUL_LENGTH                               0x1
#define _RXB0CON_RXFUL_MASK                                 0x80
#define _RXB0CON_RXB0FILHIT0_POSN                           0x0
#define _RXB0CON_RXB0FILHIT0_POSITION                       0x0
#define _RXB0CON_RXB0FILHIT0_SIZE                           0x1
#define _RXB0CON_RXB0FILHIT0_LENGTH                         0x1
#define _RXB0CON_RXB0FILHIT0_MASK                           0x1
#define _RXB0CON_RXB0FILHIT1_POSN                           0x1
#define _RXB0CON_RXB0FILHIT1_POSITION                       0x1
#define _RXB0CON_RXB0FILHIT1_SIZE                           0x1
#define _RXB0CON_RXB0FILHIT1_LENGTH                         0x1
#define _RXB0CON_RXB0FILHIT1_MASK                           0x2
#define _RXB0CON_RXB0FILHIT2_POSN                           0x2
#define _RXB0CON_RXB0FILHIT2_POSITION                       0x2
#define _RXB0CON_RXB0FILHIT2_SIZE                           0x1
#define _RXB0CON_RXB0FILHIT2_LENGTH                         0x1
#define _RXB0CON_RXB0FILHIT2_MASK                           0x4
#define _RXB0CON_RXB0FILHIT3_POSN                           0x3
#define _RXB0CON_RXB0FILHIT3_POSITION                       0x3
#define _RXB0CON_RXB0FILHIT3_SIZE                           0x1
#define _RXB0CON_RXB0FILHIT3_LENGTH                         0x1
#define _RXB0CON_RXB0FILHIT3_MASK                           0x8
#define _RXB0CON_RXB0M0_POSN                                0x5
#define _RXB0CON_RXB0M0_POSITION                            0x5
#define _RXB0CON_RXB0M0_SIZE                                0x1
#define _RXB0CON_RXB0M0_LENGTH                              0x1
#define _RXB0CON_RXB0M0_MASK                                0x20
#define _RXB0CON_RXB0M1_POSN                                0x6
#define _RXB0CON_RXB0M1_POSITION                            0x6
#define _RXB0CON_RXB0M1_SIZE                                0x1
#define _RXB0CON_RXB0M1_LENGTH                              0x1
#define _RXB0CON_RXB0M1_MASK                                0x40
#define _RXB0CON_RXB0FUL_POSN                               0x7
#define _RXB0CON_RXB0FUL_POSITION                           0x7
#define _RXB0CON_RXB0FUL_SIZE                               0x1
#define _RXB0CON_RXB0FUL_LENGTH                             0x1
#define _RXB0CON_RXB0FUL_MASK                               0x80
#define _RXB0CON_RXB0RTRR0_POSN                             0x3
#define _RXB0CON_RXB0RTRR0_POSITION                         0x3
#define _RXB0CON_RXB0RTRR0_SIZE                             0x1
#define _RXB0CON_RXB0RTRR0_LENGTH                           0x1
#define _RXB0CON_RXB0RTRR0_MASK                             0x8
#define _RXB0CON_RXB0RTRRO_POSN                             0x5
#define _RXB0CON_RXB0RTRRO_POSITION                         0x5
#define _RXB0CON_RXB0RTRRO_SIZE                             0x1
#define _RXB0CON_RXB0RTRRO_LENGTH                           0x1
#define _RXB0CON_RXB0RTRRO_MASK                             0x20

// Register: RXB0SIDH
#define RXB0SIDH RXB0SIDH
extern volatile unsigned char           RXB0SIDH            __at(0xF61);
#ifndef _LIB_BUILD
asm("RXB0SIDH equ 0F61h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXB0SID3               :1;
        unsigned RXB0SID4               :1;
        unsigned RXB0SID5               :1;
        unsigned RXB0SID6               :1;
        unsigned RXB0SID7               :1;
        unsigned RXB0SID8               :1;
        unsigned RXB0SID9               :1;
        unsigned RXB0SID10              :1;
    };
} RXB0SIDHbits_t;
extern volatile RXB0SIDHbits_t RXB0SIDHbits __at(0xF61);
// bitfield macros
#define _RXB0SIDH_SID3_POSN                                 0x0
#define _RXB0SIDH_SID3_POSITION                             0x0
#define _RXB0SIDH_SID3_SIZE                                 0x1
#define _RXB0SIDH_SID3_LENGTH                               0x1
#define _RXB0SIDH_SID3_MASK                                 0x1
#define _RXB0SIDH_SID4_POSN                                 0x1
#define _RXB0SIDH_SID4_POSITION                             0x1
#define _RXB0SIDH_SID4_SIZE                                 0x1
#define _RXB0SIDH_SID4_LENGTH                               0x1
#define _RXB0SIDH_SID4_MASK                                 0x2
#define _RXB0SIDH_SID5_POSN                                 0x2
#define _RXB0SIDH_SID5_POSITION                             0x2
#define _RXB0SIDH_SID5_SIZE                                 0x1
#define _RXB0SIDH_SID5_LENGTH                               0x1
#define _RXB0SIDH_SID5_MASK                                 0x4
#define _RXB0SIDH_SID6_POSN                                 0x3
#define _RXB0SIDH_SID6_POSITION                             0x3
#define _RXB0SIDH_SID6_SIZE                                 0x1
#define _RXB0SIDH_SID6_LENGTH                               0x1
#define _RXB0SIDH_SID6_MASK                                 0x8
#define _RXB0SIDH_SID7_POSN                                 0x4
#define _RXB0SIDH_SID7_POSITION                             0x4
#define _RXB0SIDH_SID7_SIZE                                 0x1
#define _RXB0SIDH_SID7_LENGTH                               0x1
#define _RXB0SIDH_SID7_MASK                                 0x10
#define _RXB0SIDH_SID8_POSN                                 0x5
#define _RXB0SIDH_SID8_POSITION                             0x5
#define _RXB0SIDH_SID8_SIZE                                 0x1
#define _RXB0SIDH_SID8_LENGTH                               0x1
#define _RXB0SIDH_SID8_MASK                                 0x20
#define _RXB0SIDH_SID9_POSN                                 0x6
#define _RXB0SIDH_SID9_POSITION                             0x6
#define _RXB0SIDH_SID9_SIZE                                 0x1
#define _RXB0SIDH_SID9_LENGTH                               0x1
#define _RXB0SIDH_SID9_MASK                                 0x40
#define _RXB0SIDH_SID10_POSN                                0x7
#define _RXB0SIDH_SID10_POSITION                            0x7
#define _RXB0SIDH_SID10_SIZE                                0x1
#define _RXB0SIDH_SID10_LENGTH                              0x1
#define _RXB0SIDH_SID10_MASK                                0x80
#define _RXB0SIDH_RXB0SID3_POSN                             0x0
#define _RXB0SIDH_RXB0SID3_POSITION                         0x0
#define _RXB0SIDH_RXB0SID3_SIZE                             0x1
#define _RXB0SIDH_RXB0SID3_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID3_MASK                             0x1
#define _RXB0SIDH_RXB0SID4_POSN                             0x1
#define _RXB0SIDH_RXB0SID4_POSITION                         0x1
#define _RXB0SIDH_RXB0SID4_SIZE                             0x1
#define _RXB0SIDH_RXB0SID4_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID4_MASK                             0x2
#define _RXB0SIDH_RXB0SID5_POSN                             0x2
#define _RXB0SIDH_RXB0SID5_POSITION                         0x2
#define _RXB0SIDH_RXB0SID5_SIZE                             0x1
#define _RXB0SIDH_RXB0SID5_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID5_MASK                             0x4
#define _RXB0SIDH_RXB0SID6_POSN                             0x3
#define _RXB0SIDH_RXB0SID6_POSITION                         0x3
#define _RXB0SIDH_RXB0SID6_SIZE                             0x1
#define _RXB0SIDH_RXB0SID6_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID6_MASK                             0x8
#define _RXB0SIDH_RXB0SID7_POSN                             0x4
#define _RXB0SIDH_RXB0SID7_POSITION                         0x4
#define _RXB0SIDH_RXB0SID7_SIZE                             0x1
#define _RXB0SIDH_RXB0SID7_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID7_MASK                             0x10
#define _RXB0SIDH_RXB0SID8_POSN                             0x5
#define _RXB0SIDH_RXB0SID8_POSITION                         0x5
#define _RXB0SIDH_RXB0SID8_SIZE                             0x1
#define _RXB0SIDH_RXB0SID8_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID8_MASK                             0x20
#define _RXB0SIDH_RXB0SID9_POSN                             0x6
#define _RXB0SIDH_RXB0SID9_POSITION                         0x6
#define _RXB0SIDH_RXB0SID9_SIZE                             0x1
#define _RXB0SIDH_RXB0SID9_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID9_MASK                             0x40
#define _RXB0SIDH_RXB0SID10_POSN                            0x7
#define _RXB0SIDH_RXB0SID10_POSITION                        0x7
#define _RXB0SIDH_RXB0SID10_SIZE                            0x1
#define _RXB0SIDH_RXB0SID10_LENGTH                          0x1
#define _RXB0SIDH_RXB0SID10_MASK                            0x80

// Register: RXB0SIDL
#define RXB0SIDL RXB0SIDL
extern volatile unsigned char           RXB0SIDL            __at(0xF62);
#ifndef _LIB_BUILD
asm("RXB0SIDL equ 0F62h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXID                   :1;
        unsigned SRR                    :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXB0EID16              :1;
        unsigned RXB0EID17              :1;
        unsigned                        :1;
        unsigned RXB0EXID               :1;
        unsigned RXB0SRR                :1;
        unsigned RXB0SID0               :1;
        unsigned RXB0SID1               :1;
        unsigned RXB0SID2               :1;
    };
} RXB0SIDLbits_t;
extern volatile RXB0SIDLbits_t RXB0SIDLbits __at(0xF62);
// bitfield macros
#define _RXB0SIDL_EID16_POSN                                0x0
#define _RXB0SIDL_EID16_POSITION                            0x0
#define _RXB0SIDL_EID16_SIZE                                0x1
#define _RXB0SIDL_EID16_LENGTH                              0x1
#define _RXB0SIDL_EID16_MASK                                0x1
#define _RXB0SIDL_EID17_POSN                                0x1
#define _RXB0SIDL_EID17_POSITION                            0x1
#define _RXB0SIDL_EID17_SIZE                                0x1
#define _RXB0SIDL_EID17_LENGTH                              0x1
#define _RXB0SIDL_EID17_MASK                                0x2
#define _RXB0SIDL_EXID_POSN                                 0x3
#define _RXB0SIDL_EXID_POSITION                             0x3
#define _RXB0SIDL_EXID_SIZE                                 0x1
#define _RXB0SIDL_EXID_LENGTH                               0x1
#define _RXB0SIDL_EXID_MASK                                 0x8
#define _RXB0SIDL_SRR_POSN                                  0x4
#define _RXB0SIDL_SRR_POSITION                              0x4
#define _RXB0SIDL_SRR_SIZE                                  0x1
#define _RXB0SIDL_SRR_LENGTH                                0x1
#define _RXB0SIDL_SRR_MASK                                  0x10
#define _RXB0SIDL_SID0_POSN                                 0x5
#define _RXB0SIDL_SID0_POSITION                             0x5
#define _RXB0SIDL_SID0_SIZE                                 0x1
#define _RXB0SIDL_SID0_LENGTH                               0x1
#define _RXB0SIDL_SID0_MASK                                 0x20
#define _RXB0SIDL_SID1_POSN                                 0x6
#define _RXB0SIDL_SID1_POSITION                             0x6
#define _RXB0SIDL_SID1_SIZE                                 0x1
#define _RXB0SIDL_SID1_LENGTH                               0x1
#define _RXB0SIDL_SID1_MASK                                 0x40
#define _RXB0SIDL_SID2_POSN                                 0x7
#define _RXB0SIDL_SID2_POSITION                             0x7
#define _RXB0SIDL_SID2_SIZE                                 0x1
#define _RXB0SIDL_SID2_LENGTH                               0x1
#define _RXB0SIDL_SID2_MASK                                 0x80
#define _RXB0SIDL_RXB0EID16_POSN                            0x0
#define _RXB0SIDL_RXB0EID16_POSITION                        0x0
#define _RXB0SIDL_RXB0EID16_SIZE                            0x1
#define _RXB0SIDL_RXB0EID16_LENGTH                          0x1
#define _RXB0SIDL_RXB0EID16_MASK                            0x1
#define _RXB0SIDL_RXB0EID17_POSN                            0x1
#define _RXB0SIDL_RXB0EID17_POSITION                        0x1
#define _RXB0SIDL_RXB0EID17_SIZE                            0x1
#define _RXB0SIDL_RXB0EID17_LENGTH                          0x1
#define _RXB0SIDL_RXB0EID17_MASK                            0x2
#define _RXB0SIDL_RXB0EXID_POSN                             0x3
#define _RXB0SIDL_RXB0EXID_POSITION                         0x3
#define _RXB0SIDL_RXB0EXID_SIZE                             0x1
#define _RXB0SIDL_RXB0EXID_LENGTH                           0x1
#define _RXB0SIDL_RXB0EXID_MASK                             0x8
#define _RXB0SIDL_RXB0SRR_POSN                              0x4
#define _RXB0SIDL_RXB0SRR_POSITION                          0x4
#define _RXB0SIDL_RXB0SRR_SIZE                              0x1
#define _RXB0SIDL_RXB0SRR_LENGTH                            0x1
#define _RXB0SIDL_RXB0SRR_MASK                              0x10
#define _RXB0SIDL_RXB0SID0_POSN                             0x5
#define _RXB0SIDL_RXB0SID0_POSITION                         0x5
#define _RXB0SIDL_RXB0SID0_SIZE                             0x1
#define _RXB0SIDL_RXB0SID0_LENGTH                           0x1
#define _RXB0SIDL_RXB0SID0_MASK                             0x20
#define _RXB0SIDL_RXB0SID1_POSN                             0x6
#define _RXB0SIDL_RXB0SID1_POSITION                         0x6
#define _RXB0SIDL_RXB0SID1_SIZE                             0x1
#define _RXB0SIDL_RXB0SID1_LENGTH                           0x1
#define _RXB0SIDL_RXB0SID1_MASK                             0x40
#define _RXB0SIDL_RXB0SID2_POSN                             0x7
#define _RXB0SIDL_RXB0SID2_POSITION                         0x7
#define _RXB0SIDL_RXB0SID2_SIZE                             0x1
#define _RXB0SIDL_RXB0SID2_LENGTH                           0x1
#define _RXB0SIDL_RXB0SID2_MASK                             0x80

// Register: RXB0EIDH
#define RXB0EIDH RXB0EIDH
extern volatile unsigned char           RXB0EIDH            __at(0xF63);
#ifndef _LIB_BUILD
asm("RXB0EIDH equ 0F63h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXB0EID8               :1;
        unsigned RXB0EID9               :1;
        unsigned RXB0EID10              :1;
        unsigned RXB0EID11              :1;
        unsigned RXB0EID12              :1;
        unsigned RXB0EID13              :1;
        unsigned RXB0EID14              :1;
        unsigned RXB0EID15              :1;
    };
} RXB0EIDHbits_t;
extern volatile RXB0EIDHbits_t RXB0EIDHbits __at(0xF63);
// bitfield macros
#define _RXB0EIDH_EID8_POSN                                 0x0
#define _RXB0EIDH_EID8_POSITION                             0x0
#define _RXB0EIDH_EID8_SIZE                                 0x1
#define _RXB0EIDH_EID8_LENGTH                               0x1
#define _RXB0EIDH_EID8_MASK                                 0x1
#define _RXB0EIDH_EID9_POSN                                 0x1
#define _RXB0EIDH_EID9_POSITION                             0x1
#define _RXB0EIDH_EID9_SIZE                                 0x1
#define _RXB0EIDH_EID9_LENGTH                               0x1
#define _RXB0EIDH_EID9_MASK                                 0x2
#define _RXB0EIDH_EID10_POSN                                0x2
#define _RXB0EIDH_EID10_POSITION                            0x2
#define _RXB0EIDH_EID10_SIZE                                0x1
#define _RXB0EIDH_EID10_LENGTH                              0x1
#define _RXB0EIDH_EID10_MASK                                0x4
#define _RXB0EIDH_EID11_POSN                                0x3
#define _RXB0EIDH_EID11_POSITION                            0x3
#define _RXB0EIDH_EID11_SIZE                                0x1
#define _RXB0EIDH_EID11_LENGTH                              0x1
#define _RXB0EIDH_EID11_MASK                                0x8
#define _RXB0EIDH_EID12_POSN                                0x4
#define _RXB0EIDH_EID12_POSITION                            0x4
#define _RXB0EIDH_EID12_SIZE                                0x1
#define _RXB0EIDH_EID12_LENGTH                              0x1
#define _RXB0EIDH_EID12_MASK                                0x10
#define _RXB0EIDH_EID13_POSN                                0x5
#define _RXB0EIDH_EID13_POSITION                            0x5
#define _RXB0EIDH_EID13_SIZE                                0x1
#define _RXB0EIDH_EID13_LENGTH                              0x1
#define _RXB0EIDH_EID13_MASK                                0x20
#define _RXB0EIDH_EID14_POSN                                0x6
#define _RXB0EIDH_EID14_POSITION                            0x6
#define _RXB0EIDH_EID14_SIZE                                0x1
#define _RXB0EIDH_EID14_LENGTH                              0x1
#define _RXB0EIDH_EID14_MASK                                0x40
#define _RXB0EIDH_EID15_POSN                                0x7
#define _RXB0EIDH_EID15_POSITION                            0x7
#define _RXB0EIDH_EID15_SIZE                                0x1
#define _RXB0EIDH_EID15_LENGTH                              0x1
#define _RXB0EIDH_EID15_MASK                                0x80
#define _RXB0EIDH_RXB0EID8_POSN                             0x0
#define _RXB0EIDH_RXB0EID8_POSITION                         0x0
#define _RXB0EIDH_RXB0EID8_SIZE                             0x1
#define _RXB0EIDH_RXB0EID8_LENGTH                           0x1
#define _RXB0EIDH_RXB0EID8_MASK                             0x1
#define _RXB0EIDH_RXB0EID9_POSN                             0x1
#define _RXB0EIDH_RXB0EID9_POSITION                         0x1
#define _RXB0EIDH_RXB0EID9_SIZE                             0x1
#define _RXB0EIDH_RXB0EID9_LENGTH                           0x1
#define _RXB0EIDH_RXB0EID9_MASK                             0x2
#define _RXB0EIDH_RXB0EID10_POSN                            0x2
#define _RXB0EIDH_RXB0EID10_POSITION                        0x2
#define _RXB0EIDH_RXB0EID10_SIZE                            0x1
#define _RXB0EIDH_RXB0EID10_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID10_MASK                            0x4
#define _RXB0EIDH_RXB0EID11_POSN                            0x3
#define _RXB0EIDH_RXB0EID11_POSITION                        0x3
#define _RXB0EIDH_RXB0EID11_SIZE                            0x1
#define _RXB0EIDH_RXB0EID11_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID11_MASK                            0x8
#define _RXB0EIDH_RXB0EID12_POSN                            0x4
#define _RXB0EIDH_RXB0EID12_POSITION                        0x4
#define _RXB0EIDH_RXB0EID12_SIZE                            0x1
#define _RXB0EIDH_RXB0EID12_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID12_MASK                            0x10
#define _RXB0EIDH_RXB0EID13_POSN                            0x5
#define _RXB0EIDH_RXB0EID13_POSITION                        0x5
#define _RXB0EIDH_RXB0EID13_SIZE                            0x1
#define _RXB0EIDH_RXB0EID13_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID13_MASK                            0x20
#define _RXB0EIDH_RXB0EID14_POSN                            0x6
#define _RXB0EIDH_RXB0EID14_POSITION                        0x6
#define _RXB0EIDH_RXB0EID14_SIZE                            0x1
#define _RXB0EIDH_RXB0EID14_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID14_MASK                            0x40
#define _RXB0EIDH_RXB0EID15_POSN                            0x7
#define _RXB0EIDH_RXB0EID15_POSITION                        0x7
#define _RXB0EIDH_RXB0EID15_SIZE                            0x1
#define _RXB0EIDH_RXB0EID15_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID15_MASK                            0x80

// Register: RXB0EIDL
#define RXB0EIDL RXB0EIDL
extern volatile unsigned char           RXB0EIDL            __at(0xF64);
#ifndef _LIB_BUILD
asm("RXB0EIDL equ 0F64h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXB0EID0               :1;
        unsigned RXB0EID1               :1;
        unsigned RXB0EID2               :1;
        unsigned RXB0EID3               :1;
        unsigned RXB0EID4               :1;
        unsigned RXB0EID5               :1;
        unsigned RXB0EID6               :1;
        unsigned RXB0EID7               :1;
    };
} RXB0EIDLbits_t;
extern volatile RXB0EIDLbits_t RXB0EIDLbits __at(0xF64);
// bitfield macros
#define _RXB0EIDL_EID0_POSN                                 0x0
#define _RXB0EIDL_EID0_POSITION                             0x0
#define _RXB0EIDL_EID0_SIZE                                 0x1
#define _RXB0EIDL_EID0_LENGTH                               0x1
#define _RXB0EIDL_EID0_MASK                                 0x1
#define _RXB0EIDL_EID1_POSN                                 0x1
#define _RXB0EIDL_EID1_POSITION                             0x1
#define _RXB0EIDL_EID1_SIZE                                 0x1
#define _RXB0EIDL_EID1_LENGTH                               0x1
#define _RXB0EIDL_EID1_MASK                                 0x2
#define _RXB0EIDL_EID2_POSN                                 0x2
#define _RXB0EIDL_EID2_POSITION                             0x2
#define _RXB0EIDL_EID2_SIZE                                 0x1
#define _RXB0EIDL_EID2_LENGTH                               0x1
#define _RXB0EIDL_EID2_MASK                                 0x4
#define _RXB0EIDL_EID3_POSN                                 0x3
#define _RXB0EIDL_EID3_POSITION                             0x3
#define _RXB0EIDL_EID3_SIZE                                 0x1
#define _RXB0EIDL_EID3_LENGTH                               0x1
#define _RXB0EIDL_EID3_MASK                                 0x8
#define _RXB0EIDL_EID4_POSN                                 0x4
#define _RXB0EIDL_EID4_POSITION                             0x4
#define _RXB0EIDL_EID4_SIZE                                 0x1
#define _RXB0EIDL_EID4_LENGTH                               0x1
#define _RXB0EIDL_EID4_MASK                                 0x10
#define _RXB0EIDL_EID5_POSN                                 0x5
#define _RXB0EIDL_EID5_POSITION                             0x5
#define _RXB0EIDL_EID5_SIZE                                 0x1
#define _RXB0EIDL_EID5_LENGTH                               0x1
#define _RXB0EIDL_EID5_MASK                                 0x20
#define _RXB0EIDL_EID6_POSN                                 0x6
#define _RXB0EIDL_EID6_POSITION                             0x6
#define _RXB0EIDL_EID6_SIZE                                 0x1
#define _RXB0EIDL_EID6_LENGTH                               0x1
#define _RXB0EIDL_EID6_MASK                                 0x40
#define _RXB0EIDL_EID7_POSN                                 0x7
#define _RXB0EIDL_EID7_POSITION                             0x7
#define _RXB0EIDL_EID7_SIZE                                 0x1
#define _RXB0EIDL_EID7_LENGTH                               0x1
#define _RXB0EIDL_EID7_MASK                                 0x80
#define _RXB0EIDL_RXB0EID0_POSN                             0x0
#define _RXB0EIDL_RXB0EID0_POSITION                         0x0
#define _RXB0EIDL_RXB0EID0_SIZE                             0x1
#define _RXB0EIDL_RXB0EID0_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID0_MASK                             0x1
#define _RXB0EIDL_RXB0EID1_POSN                             0x1
#define _RXB0EIDL_RXB0EID1_POSITION                         0x1
#define _RXB0EIDL_RXB0EID1_SIZE                             0x1
#define _RXB0EIDL_RXB0EID1_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID1_MASK                             0x2
#define _RXB0EIDL_RXB0EID2_POSN                             0x2
#define _RXB0EIDL_RXB0EID2_POSITION                         0x2
#define _RXB0EIDL_RXB0EID2_SIZE                             0x1
#define _RXB0EIDL_RXB0EID2_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID2_MASK                             0x4
#define _RXB0EIDL_RXB0EID3_POSN                             0x3
#define _RXB0EIDL_RXB0EID3_POSITION                         0x3
#define _RXB0EIDL_RXB0EID3_SIZE                             0x1
#define _RXB0EIDL_RXB0EID3_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID3_MASK                             0x8
#define _RXB0EIDL_RXB0EID4_POSN                             0x4
#define _RXB0EIDL_RXB0EID4_POSITION                         0x4
#define _RXB0EIDL_RXB0EID4_SIZE                             0x1
#define _RXB0EIDL_RXB0EID4_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID4_MASK                             0x10
#define _RXB0EIDL_RXB0EID5_POSN                             0x5
#define _RXB0EIDL_RXB0EID5_POSITION                         0x5
#define _RXB0EIDL_RXB0EID5_SIZE                             0x1
#define _RXB0EIDL_RXB0EID5_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID5_MASK                             0x20
#define _RXB0EIDL_RXB0EID6_POSN                             0x6
#define _RXB0EIDL_RXB0EID6_POSITION                         0x6
#define _RXB0EIDL_RXB0EID6_SIZE                             0x1
#define _RXB0EIDL_RXB0EID6_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID6_MASK                             0x40
#define _RXB0EIDL_RXB0EID7_POSN                             0x7
#define _RXB0EIDL_RXB0EID7_POSITION                         0x7
#define _RXB0EIDL_RXB0EID7_SIZE                             0x1
#define _RXB0EIDL_RXB0EID7_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID7_MASK                             0x80

// Register: RXB0DLC
#define RXB0DLC RXB0DLC
extern volatile unsigned char           RXB0DLC             __at(0xF65);
#ifndef _LIB_BUILD
asm("RXB0DLC equ 0F65h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RXRTR                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned RESB0                  :1;
        unsigned RESB1                  :1;
    };
    struct {
        unsigned RXB0DLC0               :1;
        unsigned RXB0DLC1               :1;
        unsigned RXB0DLC2               :1;
        unsigned RXB0DLC3               :1;
        unsigned RXB0RB0                :1;
        unsigned RXB0RB1                :1;
        unsigned RXB0RTR                :1;
    };
} RXB0DLCbits_t;
extern volatile RXB0DLCbits_t RXB0DLCbits __at(0xF65);
// bitfield macros
#define _RXB0DLC_DLC0_POSN                                  0x0
#define _RXB0DLC_DLC0_POSITION                              0x0
#define _RXB0DLC_DLC0_SIZE                                  0x1
#define _RXB0DLC_DLC0_LENGTH                                0x1
#define _RXB0DLC_DLC0_MASK                                  0x1
#define _RXB0DLC_DLC1_POSN                                  0x1
#define _RXB0DLC_DLC1_POSITION                              0x1
#define _RXB0DLC_DLC1_SIZE                                  0x1
#define _RXB0DLC_DLC1_LENGTH                                0x1
#define _RXB0DLC_DLC1_MASK                                  0x2
#define _RXB0DLC_DLC2_POSN                                  0x2
#define _RXB0DLC_DLC2_POSITION                              0x2
#define _RXB0DLC_DLC2_SIZE                                  0x1
#define _RXB0DLC_DLC2_LENGTH                                0x1
#define _RXB0DLC_DLC2_MASK                                  0x4
#define _RXB0DLC_DLC3_POSN                                  0x3
#define _RXB0DLC_DLC3_POSITION                              0x3
#define _RXB0DLC_DLC3_SIZE                                  0x1
#define _RXB0DLC_DLC3_LENGTH                                0x1
#define _RXB0DLC_DLC3_MASK                                  0x8
#define _RXB0DLC_RB0_POSN                                   0x4
#define _RXB0DLC_RB0_POSITION                               0x4
#define _RXB0DLC_RB0_SIZE                                   0x1
#define _RXB0DLC_RB0_LENGTH                                 0x1
#define _RXB0DLC_RB0_MASK                                   0x10
#define _RXB0DLC_RB1_POSN                                   0x5
#define _RXB0DLC_RB1_POSITION                               0x5
#define _RXB0DLC_RB1_SIZE                                   0x1
#define _RXB0DLC_RB1_LENGTH                                 0x1
#define _RXB0DLC_RB1_MASK                                   0x20
#define _RXB0DLC_RXRTR_POSN                                 0x6
#define _RXB0DLC_RXRTR_POSITION                             0x6
#define _RXB0DLC_RXRTR_SIZE                                 0x1
#define _RXB0DLC_RXRTR_LENGTH                               0x1
#define _RXB0DLC_RXRTR_MASK                                 0x40
#define _RXB0DLC_RESB0_POSN                                 0x4
#define _RXB0DLC_RESB0_POSITION                             0x4
#define _RXB0DLC_RESB0_SIZE                                 0x1
#define _RXB0DLC_RESB0_LENGTH                               0x1
#define _RXB0DLC_RESB0_MASK                                 0x10
#define _RXB0DLC_RESB1_POSN                                 0x5
#define _RXB0DLC_RESB1_POSITION                             0x5
#define _RXB0DLC_RESB1_SIZE                                 0x1
#define _RXB0DLC_RESB1_LENGTH                               0x1
#define _RXB0DLC_RESB1_MASK                                 0x20
#define _RXB0DLC_RXB0DLC0_POSN                              0x0
#define _RXB0DLC_RXB0DLC0_POSITION                          0x0
#define _RXB0DLC_RXB0DLC0_SIZE                              0x1
#define _RXB0DLC_RXB0DLC0_LENGTH                            0x1
#define _RXB0DLC_RXB0DLC0_MASK                              0x1
#define _RXB0DLC_RXB0DLC1_POSN                              0x1
#define _RXB0DLC_RXB0DLC1_POSITION                          0x1
#define _RXB0DLC_RXB0DLC1_SIZE                              0x1
#define _RXB0DLC_RXB0DLC1_LENGTH                            0x1
#define _RXB0DLC_RXB0DLC1_MASK                              0x2
#define _RXB0DLC_RXB0DLC2_POSN                              0x2
#define _RXB0DLC_RXB0DLC2_POSITION                          0x2
#define _RXB0DLC_RXB0DLC2_SIZE                              0x1
#define _RXB0DLC_RXB0DLC2_LENGTH                            0x1
#define _RXB0DLC_RXB0DLC2_MASK                              0x4
#define _RXB0DLC_RXB0DLC3_POSN                              0x3
#define _RXB0DLC_RXB0DLC3_POSITION                          0x3
#define _RXB0DLC_RXB0DLC3_SIZE                              0x1
#define _RXB0DLC_RXB0DLC3_LENGTH                            0x1
#define _RXB0DLC_RXB0DLC3_MASK                              0x8
#define _RXB0DLC_RXB0RB0_POSN                               0x4
#define _RXB0DLC_RXB0RB0_POSITION                           0x4
#define _RXB0DLC_RXB0RB0_SIZE                               0x1
#define _RXB0DLC_RXB0RB0_LENGTH                             0x1
#define _RXB0DLC_RXB0RB0_MASK                               0x10
#define _RXB0DLC_RXB0RB1_POSN                               0x5
#define _RXB0DLC_RXB0RB1_POSITION                           0x5
#define _RXB0DLC_RXB0RB1_SIZE                               0x1
#define _RXB0DLC_RXB0RB1_LENGTH                             0x1
#define _RXB0DLC_RXB0RB1_MASK                               0x20
#define _RXB0DLC_RXB0RTR_POSN                               0x6
#define _RXB0DLC_RXB0RTR_POSITION                           0x6
#define _RXB0DLC_RXB0RTR_SIZE                               0x1
#define _RXB0DLC_RXB0RTR_LENGTH                             0x1
#define _RXB0DLC_RXB0RTR_MASK                               0x40

// Register: RXB0D0
#define RXB0D0 RXB0D0
extern volatile unsigned char           RXB0D0              __at(0xF66);
#ifndef _LIB_BUILD
asm("RXB0D0 equ 0F66h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D00                :1;
        unsigned RXB0D01                :1;
        unsigned RXB0D02                :1;
        unsigned RXB0D03                :1;
        unsigned RXB0D04                :1;
        unsigned RXB0D05                :1;
        unsigned RXB0D06                :1;
        unsigned RXB0D07                :1;
    };
    struct {
        unsigned RB0D00                 :1;
        unsigned RB0D01                 :1;
        unsigned RB0D02                 :1;
        unsigned RB0D03                 :1;
        unsigned RB0D04                 :1;
        unsigned RB0D05                 :1;
        unsigned RB0D06                 :1;
        unsigned RB0D07                 :1;
    };
} RXB0D0bits_t;
extern volatile RXB0D0bits_t RXB0D0bits __at(0xF66);
// bitfield macros
#define _RXB0D0_RXB0D00_POSN                                0x0
#define _RXB0D0_RXB0D00_POSITION                            0x0
#define _RXB0D0_RXB0D00_SIZE                                0x1
#define _RXB0D0_RXB0D00_LENGTH                              0x1
#define _RXB0D0_RXB0D00_MASK                                0x1
#define _RXB0D0_RXB0D01_POSN                                0x1
#define _RXB0D0_RXB0D01_POSITION                            0x1
#define _RXB0D0_RXB0D01_SIZE                                0x1
#define _RXB0D0_RXB0D01_LENGTH                              0x1
#define _RXB0D0_RXB0D01_MASK                                0x2
#define _RXB0D0_RXB0D02_POSN                                0x2
#define _RXB0D0_RXB0D02_POSITION                            0x2
#define _RXB0D0_RXB0D02_SIZE                                0x1
#define _RXB0D0_RXB0D02_LENGTH                              0x1
#define _RXB0D0_RXB0D02_MASK                                0x4
#define _RXB0D0_RXB0D03_POSN                                0x3
#define _RXB0D0_RXB0D03_POSITION                            0x3
#define _RXB0D0_RXB0D03_SIZE                                0x1
#define _RXB0D0_RXB0D03_LENGTH                              0x1
#define _RXB0D0_RXB0D03_MASK                                0x8
#define _RXB0D0_RXB0D04_POSN                                0x4
#define _RXB0D0_RXB0D04_POSITION                            0x4
#define _RXB0D0_RXB0D04_SIZE                                0x1
#define _RXB0D0_RXB0D04_LENGTH                              0x1
#define _RXB0D0_RXB0D04_MASK                                0x10
#define _RXB0D0_RXB0D05_POSN                                0x5
#define _RXB0D0_RXB0D05_POSITION                            0x5
#define _RXB0D0_RXB0D05_SIZE                                0x1
#define _RXB0D0_RXB0D05_LENGTH                              0x1
#define _RXB0D0_RXB0D05_MASK                                0x20
#define _RXB0D0_RXB0D06_POSN                                0x6
#define _RXB0D0_RXB0D06_POSITION                            0x6
#define _RXB0D0_RXB0D06_SIZE                                0x1
#define _RXB0D0_RXB0D06_LENGTH                              0x1
#define _RXB0D0_RXB0D06_MASK                                0x40
#define _RXB0D0_RXB0D07_POSN                                0x7
#define _RXB0D0_RXB0D07_POSITION                            0x7
#define _RXB0D0_RXB0D07_SIZE                                0x1
#define _RXB0D0_RXB0D07_LENGTH                              0x1
#define _RXB0D0_RXB0D07_MASK                                0x80
#define _RXB0D0_RB0D00_POSN                                 0x0
#define _RXB0D0_RB0D00_POSITION                             0x0
#define _RXB0D0_RB0D00_SIZE                                 0x1
#define _RXB0D0_RB0D00_LENGTH                               0x1
#define _RXB0D0_RB0D00_MASK                                 0x1
#define _RXB0D0_RB0D01_POSN                                 0x1
#define _RXB0D0_RB0D01_POSITION                             0x1
#define _RXB0D0_RB0D01_SIZE                                 0x1
#define _RXB0D0_RB0D01_LENGTH                               0x1
#define _RXB0D0_RB0D01_MASK                                 0x2
#define _RXB0D0_RB0D02_POSN                                 0x2
#define _RXB0D0_RB0D02_POSITION                             0x2
#define _RXB0D0_RB0D02_SIZE                                 0x1
#define _RXB0D0_RB0D02_LENGTH                               0x1
#define _RXB0D0_RB0D02_MASK                                 0x4
#define _RXB0D0_RB0D03_POSN                                 0x3
#define _RXB0D0_RB0D03_POSITION                             0x3
#define _RXB0D0_RB0D03_SIZE                                 0x1
#define _RXB0D0_RB0D03_LENGTH                               0x1
#define _RXB0D0_RB0D03_MASK                                 0x8
#define _RXB0D0_RB0D04_POSN                                 0x4
#define _RXB0D0_RB0D04_POSITION                             0x4
#define _RXB0D0_RB0D04_SIZE                                 0x1
#define _RXB0D0_RB0D04_LENGTH                               0x1
#define _RXB0D0_RB0D04_MASK                                 0x10
#define _RXB0D0_RB0D05_POSN                                 0x5
#define _RXB0D0_RB0D05_POSITION                             0x5
#define _RXB0D0_RB0D05_SIZE                                 0x1
#define _RXB0D0_RB0D05_LENGTH                               0x1
#define _RXB0D0_RB0D05_MASK                                 0x20
#define _RXB0D0_RB0D06_POSN                                 0x6
#define _RXB0D0_RB0D06_POSITION                             0x6
#define _RXB0D0_RB0D06_SIZE                                 0x1
#define _RXB0D0_RB0D06_LENGTH                               0x1
#define _RXB0D0_RB0D06_MASK                                 0x40
#define _RXB0D0_RB0D07_POSN                                 0x7
#define _RXB0D0_RB0D07_POSITION                             0x7
#define _RXB0D0_RB0D07_SIZE                                 0x1
#define _RXB0D0_RB0D07_LENGTH                               0x1
#define _RXB0D0_RB0D07_MASK                                 0x80

// Register: RXB0D1
#define RXB0D1 RXB0D1
extern volatile unsigned char           RXB0D1              __at(0xF67);
#ifndef _LIB_BUILD
asm("RXB0D1 equ 0F67h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D10                :1;
        unsigned RXB0D11                :1;
        unsigned RXB0D12                :1;
        unsigned RXB0D13                :1;
        unsigned RXB0D14                :1;
        unsigned RXB0D15                :1;
        unsigned RXB0D16                :1;
        unsigned RXB0D17                :1;
    };
    struct {
        unsigned RB0D10                 :1;
        unsigned RB0D11                 :1;
        unsigned RB0D12                 :1;
        unsigned RB0D13                 :1;
        unsigned RB0D14                 :1;
        unsigned RB0D15                 :1;
        unsigned RB0D16                 :1;
        unsigned RB0D17                 :1;
    };
} RXB0D1bits_t;
extern volatile RXB0D1bits_t RXB0D1bits __at(0xF67);
// bitfield macros
#define _RXB0D1_RXB0D10_POSN                                0x0
#define _RXB0D1_RXB0D10_POSITION                            0x0
#define _RXB0D1_RXB0D10_SIZE                                0x1
#define _RXB0D1_RXB0D10_LENGTH                              0x1
#define _RXB0D1_RXB0D10_MASK                                0x1
#define _RXB0D1_RXB0D11_POSN                                0x1
#define _RXB0D1_RXB0D11_POSITION                            0x1
#define _RXB0D1_RXB0D11_SIZE                                0x1
#define _RXB0D1_RXB0D11_LENGTH                              0x1
#define _RXB0D1_RXB0D11_MASK                                0x2
#define _RXB0D1_RXB0D12_POSN                                0x2
#define _RXB0D1_RXB0D12_POSITION                            0x2
#define _RXB0D1_RXB0D12_SIZE                                0x1
#define _RXB0D1_RXB0D12_LENGTH                              0x1
#define _RXB0D1_RXB0D12_MASK                                0x4
#define _RXB0D1_RXB0D13_POSN                                0x3
#define _RXB0D1_RXB0D13_POSITION                            0x3
#define _RXB0D1_RXB0D13_SIZE                                0x1
#define _RXB0D1_RXB0D13_LENGTH                              0x1
#define _RXB0D1_RXB0D13_MASK                                0x8
#define _RXB0D1_RXB0D14_POSN                                0x4
#define _RXB0D1_RXB0D14_POSITION                            0x4
#define _RXB0D1_RXB0D14_SIZE                                0x1
#define _RXB0D1_RXB0D14_LENGTH                              0x1
#define _RXB0D1_RXB0D14_MASK                                0x10
#define _RXB0D1_RXB0D15_POSN                                0x5
#define _RXB0D1_RXB0D15_POSITION                            0x5
#define _RXB0D1_RXB0D15_SIZE                                0x1
#define _RXB0D1_RXB0D15_LENGTH                              0x1
#define _RXB0D1_RXB0D15_MASK                                0x20
#define _RXB0D1_RXB0D16_POSN                                0x6
#define _RXB0D1_RXB0D16_POSITION                            0x6
#define _RXB0D1_RXB0D16_SIZE                                0x1
#define _RXB0D1_RXB0D16_LENGTH                              0x1
#define _RXB0D1_RXB0D16_MASK                                0x40
#define _RXB0D1_RXB0D17_POSN                                0x7
#define _RXB0D1_RXB0D17_POSITION                            0x7
#define _RXB0D1_RXB0D17_SIZE                                0x1
#define _RXB0D1_RXB0D17_LENGTH                              0x1
#define _RXB0D1_RXB0D17_MASK                                0x80
#define _RXB0D1_RB0D10_POSN                                 0x0
#define _RXB0D1_RB0D10_POSITION                             0x0
#define _RXB0D1_RB0D10_SIZE                                 0x1
#define _RXB0D1_RB0D10_LENGTH                               0x1
#define _RXB0D1_RB0D10_MASK                                 0x1
#define _RXB0D1_RB0D11_POSN                                 0x1
#define _RXB0D1_RB0D11_POSITION                             0x1
#define _RXB0D1_RB0D11_SIZE                                 0x1
#define _RXB0D1_RB0D11_LENGTH                               0x1
#define _RXB0D1_RB0D11_MASK                                 0x2
#define _RXB0D1_RB0D12_POSN                                 0x2
#define _RXB0D1_RB0D12_POSITION                             0x2
#define _RXB0D1_RB0D12_SIZE                                 0x1
#define _RXB0D1_RB0D12_LENGTH                               0x1
#define _RXB0D1_RB0D12_MASK                                 0x4
#define _RXB0D1_RB0D13_POSN                                 0x3
#define _RXB0D1_RB0D13_POSITION                             0x3
#define _RXB0D1_RB0D13_SIZE                                 0x1
#define _RXB0D1_RB0D13_LENGTH                               0x1
#define _RXB0D1_RB0D13_MASK                                 0x8
#define _RXB0D1_RB0D14_POSN                                 0x4
#define _RXB0D1_RB0D14_POSITION                             0x4
#define _RXB0D1_RB0D14_SIZE                                 0x1
#define _RXB0D1_RB0D14_LENGTH                               0x1
#define _RXB0D1_RB0D14_MASK                                 0x10
#define _RXB0D1_RB0D15_POSN                                 0x5
#define _RXB0D1_RB0D15_POSITION                             0x5
#define _RXB0D1_RB0D15_SIZE                                 0x1
#define _RXB0D1_RB0D15_LENGTH                               0x1
#define _RXB0D1_RB0D15_MASK                                 0x20
#define _RXB0D1_RB0D16_POSN                                 0x6
#define _RXB0D1_RB0D16_POSITION                             0x6
#define _RXB0D1_RB0D16_SIZE                                 0x1
#define _RXB0D1_RB0D16_LENGTH                               0x1
#define _RXB0D1_RB0D16_MASK                                 0x40
#define _RXB0D1_RB0D17_POSN                                 0x7
#define _RXB0D1_RB0D17_POSITION                             0x7
#define _RXB0D1_RB0D17_SIZE                                 0x1
#define _RXB0D1_RB0D17_LENGTH                               0x1
#define _RXB0D1_RB0D17_MASK                                 0x80

// Register: RXB0D2
#define RXB0D2 RXB0D2
extern volatile unsigned char           RXB0D2              __at(0xF68);
#ifndef _LIB_BUILD
asm("RXB0D2 equ 0F68h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D20                :1;
        unsigned RXB0D21                :1;
        unsigned RXB0D22                :1;
        unsigned RXB0D23                :1;
        unsigned RXB0D24                :1;
        unsigned RXB0D25                :1;
        unsigned RXB0D26                :1;
        unsigned RXB0D27                :1;
    };
    struct {
        unsigned RB0D20                 :1;
        unsigned RB0D21                 :1;
        unsigned RB0D22                 :1;
        unsigned RB0D23                 :1;
        unsigned RB0D24                 :1;
        unsigned RB0D25                 :1;
        unsigned RB0D26                 :1;
        unsigned RB0D27                 :1;
    };
} RXB0D2bits_t;
extern volatile RXB0D2bits_t RXB0D2bits __at(0xF68);
// bitfield macros
#define _RXB0D2_RXB0D20_POSN                                0x0
#define _RXB0D2_RXB0D20_POSITION                            0x0
#define _RXB0D2_RXB0D20_SIZE                                0x1
#define _RXB0D2_RXB0D20_LENGTH                              0x1
#define _RXB0D2_RXB0D20_MASK                                0x1
#define _RXB0D2_RXB0D21_POSN                                0x1
#define _RXB0D2_RXB0D21_POSITION                            0x1
#define _RXB0D2_RXB0D21_SIZE                                0x1
#define _RXB0D2_RXB0D21_LENGTH                              0x1
#define _RXB0D2_RXB0D21_MASK                                0x2
#define _RXB0D2_RXB0D22_POSN                                0x2
#define _RXB0D2_RXB0D22_POSITION                            0x2
#define _RXB0D2_RXB0D22_SIZE                                0x1
#define _RXB0D2_RXB0D22_LENGTH                              0x1
#define _RXB0D2_RXB0D22_MASK                                0x4
#define _RXB0D2_RXB0D23_POSN                                0x3
#define _RXB0D2_RXB0D23_POSITION                            0x3
#define _RXB0D2_RXB0D23_SIZE                                0x1
#define _RXB0D2_RXB0D23_LENGTH                              0x1
#define _RXB0D2_RXB0D23_MASK                                0x8
#define _RXB0D2_RXB0D24_POSN                                0x4
#define _RXB0D2_RXB0D24_POSITION                            0x4
#define _RXB0D2_RXB0D24_SIZE                                0x1
#define _RXB0D2_RXB0D24_LENGTH                              0x1
#define _RXB0D2_RXB0D24_MASK                                0x10
#define _RXB0D2_RXB0D25_POSN                                0x5
#define _RXB0D2_RXB0D25_POSITION                            0x5
#define _RXB0D2_RXB0D25_SIZE                                0x1
#define _RXB0D2_RXB0D25_LENGTH                              0x1
#define _RXB0D2_RXB0D25_MASK                                0x20
#define _RXB0D2_RXB0D26_POSN                                0x6
#define _RXB0D2_RXB0D26_POSITION                            0x6
#define _RXB0D2_RXB0D26_SIZE                                0x1
#define _RXB0D2_RXB0D26_LENGTH                              0x1
#define _RXB0D2_RXB0D26_MASK                                0x40
#define _RXB0D2_RXB0D27_POSN                                0x7
#define _RXB0D2_RXB0D27_POSITION                            0x7
#define _RXB0D2_RXB0D27_SIZE                                0x1
#define _RXB0D2_RXB0D27_LENGTH                              0x1
#define _RXB0D2_RXB0D27_MASK                                0x80
#define _RXB0D2_RB0D20_POSN                                 0x0
#define _RXB0D2_RB0D20_POSITION                             0x0
#define _RXB0D2_RB0D20_SIZE                                 0x1
#define _RXB0D2_RB0D20_LENGTH                               0x1
#define _RXB0D2_RB0D20_MASK                                 0x1
#define _RXB0D2_RB0D21_POSN                                 0x1
#define _RXB0D2_RB0D21_POSITION                             0x1
#define _RXB0D2_RB0D21_SIZE                                 0x1
#define _RXB0D2_RB0D21_LENGTH                               0x1
#define _RXB0D2_RB0D21_MASK                                 0x2
#define _RXB0D2_RB0D22_POSN                                 0x2
#define _RXB0D2_RB0D22_POSITION                             0x2
#define _RXB0D2_RB0D22_SIZE                                 0x1
#define _RXB0D2_RB0D22_LENGTH                               0x1
#define _RXB0D2_RB0D22_MASK                                 0x4
#define _RXB0D2_RB0D23_POSN                                 0x3
#define _RXB0D2_RB0D23_POSITION                             0x3
#define _RXB0D2_RB0D23_SIZE                                 0x1
#define _RXB0D2_RB0D23_LENGTH                               0x1
#define _RXB0D2_RB0D23_MASK                                 0x8
#define _RXB0D2_RB0D24_POSN                                 0x4
#define _RXB0D2_RB0D24_POSITION                             0x4
#define _RXB0D2_RB0D24_SIZE                                 0x1
#define _RXB0D2_RB0D24_LENGTH                               0x1
#define _RXB0D2_RB0D24_MASK                                 0x10
#define _RXB0D2_RB0D25_POSN                                 0x5
#define _RXB0D2_RB0D25_POSITION                             0x5
#define _RXB0D2_RB0D25_SIZE                                 0x1
#define _RXB0D2_RB0D25_LENGTH                               0x1
#define _RXB0D2_RB0D25_MASK                                 0x20
#define _RXB0D2_RB0D26_POSN                                 0x6
#define _RXB0D2_RB0D26_POSITION                             0x6
#define _RXB0D2_RB0D26_SIZE                                 0x1
#define _RXB0D2_RB0D26_LENGTH                               0x1
#define _RXB0D2_RB0D26_MASK                                 0x40
#define _RXB0D2_RB0D27_POSN                                 0x7
#define _RXB0D2_RB0D27_POSITION                             0x7
#define _RXB0D2_RB0D27_SIZE                                 0x1
#define _RXB0D2_RB0D27_LENGTH                               0x1
#define _RXB0D2_RB0D27_MASK                                 0x80

// Register: RXB0D3
#define RXB0D3 RXB0D3
extern volatile unsigned char           RXB0D3              __at(0xF69);
#ifndef _LIB_BUILD
asm("RXB0D3 equ 0F69h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D30                :1;
        unsigned RXB0D31                :1;
        unsigned RXB0D32                :1;
        unsigned RXB0D33                :1;
        unsigned RXB0D34                :1;
        unsigned RXB0D35                :1;
        unsigned RXB0D36                :1;
        unsigned RXB0D37                :1;
    };
    struct {
        unsigned RB0D30                 :1;
        unsigned RB0D31                 :1;
        unsigned RB0D32                 :1;
        unsigned RB0D33                 :1;
        unsigned RB0D34                 :1;
        unsigned RB0D35                 :1;
        unsigned RB0D36                 :1;
        unsigned RB0D37                 :1;
    };
} RXB0D3bits_t;
extern volatile RXB0D3bits_t RXB0D3bits __at(0xF69);
// bitfield macros
#define _RXB0D3_RXB0D30_POSN                                0x0
#define _RXB0D3_RXB0D30_POSITION                            0x0
#define _RXB0D3_RXB0D30_SIZE                                0x1
#define _RXB0D3_RXB0D30_LENGTH                              0x1
#define _RXB0D3_RXB0D30_MASK                                0x1
#define _RXB0D3_RXB0D31_POSN                                0x1
#define _RXB0D3_RXB0D31_POSITION                            0x1
#define _RXB0D3_RXB0D31_SIZE                                0x1
#define _RXB0D3_RXB0D31_LENGTH                              0x1
#define _RXB0D3_RXB0D31_MASK                                0x2
#define _RXB0D3_RXB0D32_POSN                                0x2
#define _RXB0D3_RXB0D32_POSITION                            0x2
#define _RXB0D3_RXB0D32_SIZE                                0x1
#define _RXB0D3_RXB0D32_LENGTH                              0x1
#define _RXB0D3_RXB0D32_MASK                                0x4
#define _RXB0D3_RXB0D33_POSN                                0x3
#define _RXB0D3_RXB0D33_POSITION                            0x3
#define _RXB0D3_RXB0D33_SIZE                                0x1
#define _RXB0D3_RXB0D33_LENGTH                              0x1
#define _RXB0D3_RXB0D33_MASK                                0x8
#define _RXB0D3_RXB0D34_POSN                                0x4
#define _RXB0D3_RXB0D34_POSITION                            0x4
#define _RXB0D3_RXB0D34_SIZE                                0x1
#define _RXB0D3_RXB0D34_LENGTH                              0x1
#define _RXB0D3_RXB0D34_MASK                                0x10
#define _RXB0D3_RXB0D35_POSN                                0x5
#define _RXB0D3_RXB0D35_POSITION                            0x5
#define _RXB0D3_RXB0D35_SIZE                                0x1
#define _RXB0D3_RXB0D35_LENGTH                              0x1
#define _RXB0D3_RXB0D35_MASK                                0x20
#define _RXB0D3_RXB0D36_POSN                                0x6
#define _RXB0D3_RXB0D36_POSITION                            0x6
#define _RXB0D3_RXB0D36_SIZE                                0x1
#define _RXB0D3_RXB0D36_LENGTH                              0x1
#define _RXB0D3_RXB0D36_MASK                                0x40
#define _RXB0D3_RXB0D37_POSN                                0x7
#define _RXB0D3_RXB0D37_POSITION                            0x7
#define _RXB0D3_RXB0D37_SIZE                                0x1
#define _RXB0D3_RXB0D37_LENGTH                              0x1
#define _RXB0D3_RXB0D37_MASK                                0x80
#define _RXB0D3_RB0D30_POSN                                 0x0
#define _RXB0D3_RB0D30_POSITION                             0x0
#define _RXB0D3_RB0D30_SIZE                                 0x1
#define _RXB0D3_RB0D30_LENGTH                               0x1
#define _RXB0D3_RB0D30_MASK                                 0x1
#define _RXB0D3_RB0D31_POSN                                 0x1
#define _RXB0D3_RB0D31_POSITION                             0x1
#define _RXB0D3_RB0D31_SIZE                                 0x1
#define _RXB0D3_RB0D31_LENGTH                               0x1
#define _RXB0D3_RB0D31_MASK                                 0x2
#define _RXB0D3_RB0D32_POSN                                 0x2
#define _RXB0D3_RB0D32_POSITION                             0x2
#define _RXB0D3_RB0D32_SIZE                                 0x1
#define _RXB0D3_RB0D32_LENGTH                               0x1
#define _RXB0D3_RB0D32_MASK                                 0x4
#define _RXB0D3_RB0D33_POSN                                 0x3
#define _RXB0D3_RB0D33_POSITION                             0x3
#define _RXB0D3_RB0D33_SIZE                                 0x1
#define _RXB0D3_RB0D33_LENGTH                               0x1
#define _RXB0D3_RB0D33_MASK                                 0x8
#define _RXB0D3_RB0D34_POSN                                 0x4
#define _RXB0D3_RB0D34_POSITION                             0x4
#define _RXB0D3_RB0D34_SIZE                                 0x1
#define _RXB0D3_RB0D34_LENGTH                               0x1
#define _RXB0D3_RB0D34_MASK                                 0x10
#define _RXB0D3_RB0D35_POSN                                 0x5
#define _RXB0D3_RB0D35_POSITION                             0x5
#define _RXB0D3_RB0D35_SIZE                                 0x1
#define _RXB0D3_RB0D35_LENGTH                               0x1
#define _RXB0D3_RB0D35_MASK                                 0x20
#define _RXB0D3_RB0D36_POSN                                 0x6
#define _RXB0D3_RB0D36_POSITION                             0x6
#define _RXB0D3_RB0D36_SIZE                                 0x1
#define _RXB0D3_RB0D36_LENGTH                               0x1
#define _RXB0D3_RB0D36_MASK                                 0x40
#define _RXB0D3_RB0D37_POSN                                 0x7
#define _RXB0D3_RB0D37_POSITION                             0x7
#define _RXB0D3_RB0D37_SIZE                                 0x1
#define _RXB0D3_RB0D37_LENGTH                               0x1
#define _RXB0D3_RB0D37_MASK                                 0x80

// Register: RXB0D4
#define RXB0D4 RXB0D4
extern volatile unsigned char           RXB0D4              __at(0xF6A);
#ifndef _LIB_BUILD
asm("RXB0D4 equ 0F6Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D40                :1;
        unsigned RXB0D41                :1;
        unsigned RXB0D42                :1;
        unsigned RXB0D43                :1;
        unsigned RXB0D44                :1;
        unsigned RXB0D45                :1;
        unsigned RXB0D46                :1;
        unsigned RXB0D47                :1;
    };
    struct {
        unsigned RB0D40                 :1;
        unsigned RB0D41                 :1;
        unsigned RB0D42                 :1;
        unsigned RB0D43                 :1;
        unsigned RB0D44                 :1;
        unsigned RB0D45                 :1;
        unsigned RB0D46                 :1;
        unsigned RB0D47                 :1;
    };
} RXB0D4bits_t;
extern volatile RXB0D4bits_t RXB0D4bits __at(0xF6A);
// bitfield macros
#define _RXB0D4_RXB0D40_POSN                                0x0
#define _RXB0D4_RXB0D40_POSITION                            0x0
#define _RXB0D4_RXB0D40_SIZE                                0x1
#define _RXB0D4_RXB0D40_LENGTH                              0x1
#define _RXB0D4_RXB0D40_MASK                                0x1
#define _RXB0D4_RXB0D41_POSN                                0x1
#define _RXB0D4_RXB0D41_POSITION                            0x1
#define _RXB0D4_RXB0D41_SIZE                                0x1
#define _RXB0D4_RXB0D41_LENGTH                              0x1
#define _RXB0D4_RXB0D41_MASK                                0x2
#define _RXB0D4_RXB0D42_POSN                                0x2
#define _RXB0D4_RXB0D42_POSITION                            0x2
#define _RXB0D4_RXB0D42_SIZE                                0x1
#define _RXB0D4_RXB0D42_LENGTH                              0x1
#define _RXB0D4_RXB0D42_MASK                                0x4
#define _RXB0D4_RXB0D43_POSN                                0x3
#define _RXB0D4_RXB0D43_POSITION                            0x3
#define _RXB0D4_RXB0D43_SIZE                                0x1
#define _RXB0D4_RXB0D43_LENGTH                              0x1
#define _RXB0D4_RXB0D43_MASK                                0x8
#define _RXB0D4_RXB0D44_POSN                                0x4
#define _RXB0D4_RXB0D44_POSITION                            0x4
#define _RXB0D4_RXB0D44_SIZE                                0x1
#define _RXB0D4_RXB0D44_LENGTH                              0x1
#define _RXB0D4_RXB0D44_MASK                                0x10
#define _RXB0D4_RXB0D45_POSN                                0x5
#define _RXB0D4_RXB0D45_POSITION                            0x5
#define _RXB0D4_RXB0D45_SIZE                                0x1
#define _RXB0D4_RXB0D45_LENGTH                              0x1
#define _RXB0D4_RXB0D45_MASK                                0x20
#define _RXB0D4_RXB0D46_POSN                                0x6
#define _RXB0D4_RXB0D46_POSITION                            0x6
#define _RXB0D4_RXB0D46_SIZE                                0x1
#define _RXB0D4_RXB0D46_LENGTH                              0x1
#define _RXB0D4_RXB0D46_MASK                                0x40
#define _RXB0D4_RXB0D47_POSN                                0x7
#define _RXB0D4_RXB0D47_POSITION                            0x7
#define _RXB0D4_RXB0D47_SIZE                                0x1
#define _RXB0D4_RXB0D47_LENGTH                              0x1
#define _RXB0D4_RXB0D47_MASK                                0x80
#define _RXB0D4_RB0D40_POSN                                 0x0
#define _RXB0D4_RB0D40_POSITION                             0x0
#define _RXB0D4_RB0D40_SIZE                                 0x1
#define _RXB0D4_RB0D40_LENGTH                               0x1
#define _RXB0D4_RB0D40_MASK                                 0x1
#define _RXB0D4_RB0D41_POSN                                 0x1
#define _RXB0D4_RB0D41_POSITION                             0x1
#define _RXB0D4_RB0D41_SIZE                                 0x1
#define _RXB0D4_RB0D41_LENGTH                               0x1
#define _RXB0D4_RB0D41_MASK                                 0x2
#define _RXB0D4_RB0D42_POSN                                 0x2
#define _RXB0D4_RB0D42_POSITION                             0x2
#define _RXB0D4_RB0D42_SIZE                                 0x1
#define _RXB0D4_RB0D42_LENGTH                               0x1
#define _RXB0D4_RB0D42_MASK                                 0x4
#define _RXB0D4_RB0D43_POSN                                 0x3
#define _RXB0D4_RB0D43_POSITION                             0x3
#define _RXB0D4_RB0D43_SIZE                                 0x1
#define _RXB0D4_RB0D43_LENGTH                               0x1
#define _RXB0D4_RB0D43_MASK                                 0x8
#define _RXB0D4_RB0D44_POSN                                 0x4
#define _RXB0D4_RB0D44_POSITION                             0x4
#define _RXB0D4_RB0D44_SIZE                                 0x1
#define _RXB0D4_RB0D44_LENGTH                               0x1
#define _RXB0D4_RB0D44_MASK                                 0x10
#define _RXB0D4_RB0D45_POSN                                 0x5
#define _RXB0D4_RB0D45_POSITION                             0x5
#define _RXB0D4_RB0D45_SIZE                                 0x1
#define _RXB0D4_RB0D45_LENGTH                               0x1
#define _RXB0D4_RB0D45_MASK                                 0x20
#define _RXB0D4_RB0D46_POSN                                 0x6
#define _RXB0D4_RB0D46_POSITION                             0x6
#define _RXB0D4_RB0D46_SIZE                                 0x1
#define _RXB0D4_RB0D46_LENGTH                               0x1
#define _RXB0D4_RB0D46_MASK                                 0x40
#define _RXB0D4_RB0D47_POSN                                 0x7
#define _RXB0D4_RB0D47_POSITION                             0x7
#define _RXB0D4_RB0D47_SIZE                                 0x1
#define _RXB0D4_RB0D47_LENGTH                               0x1
#define _RXB0D4_RB0D47_MASK                                 0x80

// Register: RXB0D5
#define RXB0D5 RXB0D5
extern volatile unsigned char           RXB0D5              __at(0xF6B);
#ifndef _LIB_BUILD
asm("RXB0D5 equ 0F6Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D50                :1;
        unsigned RXB0D51                :1;
        unsigned RXB0D52                :1;
        unsigned RXB0D53                :1;
        unsigned RXB0D54                :1;
        unsigned RXB0D55                :1;
        unsigned RXB0D56                :1;
        unsigned RXB0D57                :1;
    };
    struct {
        unsigned RB0D50                 :1;
        unsigned RB0D51                 :1;
        unsigned RB0D52                 :1;
        unsigned RB0D53                 :1;
        unsigned RB0D54                 :1;
        unsigned RB0D55                 :1;
        unsigned RB0D56                 :1;
        unsigned RB0D57                 :1;
    };
} RXB0D5bits_t;
extern volatile RXB0D5bits_t RXB0D5bits __at(0xF6B);
// bitfield macros
#define _RXB0D5_RXB0D50_POSN                                0x0
#define _RXB0D5_RXB0D50_POSITION                            0x0
#define _RXB0D5_RXB0D50_SIZE                                0x1
#define _RXB0D5_RXB0D50_LENGTH                              0x1
#define _RXB0D5_RXB0D50_MASK                                0x1
#define _RXB0D5_RXB0D51_POSN                                0x1
#define _RXB0D5_RXB0D51_POSITION                            0x1
#define _RXB0D5_RXB0D51_SIZE                                0x1
#define _RXB0D5_RXB0D51_LENGTH                              0x1
#define _RXB0D5_RXB0D51_MASK                                0x2
#define _RXB0D5_RXB0D52_POSN                                0x2
#define _RXB0D5_RXB0D52_POSITION                            0x2
#define _RXB0D5_RXB0D52_SIZE                                0x1
#define _RXB0D5_RXB0D52_LENGTH                              0x1
#define _RXB0D5_RXB0D52_MASK                                0x4
#define _RXB0D5_RXB0D53_POSN                                0x3
#define _RXB0D5_RXB0D53_POSITION                            0x3
#define _RXB0D5_RXB0D53_SIZE                                0x1
#define _RXB0D5_RXB0D53_LENGTH                              0x1
#define _RXB0D5_RXB0D53_MASK                                0x8
#define _RXB0D5_RXB0D54_POSN                                0x4
#define _RXB0D5_RXB0D54_POSITION                            0x4
#define _RXB0D5_RXB0D54_SIZE                                0x1
#define _RXB0D5_RXB0D54_LENGTH                              0x1
#define _RXB0D5_RXB0D54_MASK                                0x10
#define _RXB0D5_RXB0D55_POSN                                0x5
#define _RXB0D5_RXB0D55_POSITION                            0x5
#define _RXB0D5_RXB0D55_SIZE                                0x1
#define _RXB0D5_RXB0D55_LENGTH                              0x1
#define _RXB0D5_RXB0D55_MASK                                0x20
#define _RXB0D5_RXB0D56_POSN                                0x6
#define _RXB0D5_RXB0D56_POSITION                            0x6
#define _RXB0D5_RXB0D56_SIZE                                0x1
#define _RXB0D5_RXB0D56_LENGTH                              0x1
#define _RXB0D5_RXB0D56_MASK                                0x40
#define _RXB0D5_RXB0D57_POSN                                0x7
#define _RXB0D5_RXB0D57_POSITION                            0x7
#define _RXB0D5_RXB0D57_SIZE                                0x1
#define _RXB0D5_RXB0D57_LENGTH                              0x1
#define _RXB0D5_RXB0D57_MASK                                0x80
#define _RXB0D5_RB0D50_POSN                                 0x0
#define _RXB0D5_RB0D50_POSITION                             0x0
#define _RXB0D5_RB0D50_SIZE                                 0x1
#define _RXB0D5_RB0D50_LENGTH                               0x1
#define _RXB0D5_RB0D50_MASK                                 0x1
#define _RXB0D5_RB0D51_POSN                                 0x1
#define _RXB0D5_RB0D51_POSITION                             0x1
#define _RXB0D5_RB0D51_SIZE                                 0x1
#define _RXB0D5_RB0D51_LENGTH                               0x1
#define _RXB0D5_RB0D51_MASK                                 0x2
#define _RXB0D5_RB0D52_POSN                                 0x2
#define _RXB0D5_RB0D52_POSITION                             0x2
#define _RXB0D5_RB0D52_SIZE                                 0x1
#define _RXB0D5_RB0D52_LENGTH                               0x1
#define _RXB0D5_RB0D52_MASK                                 0x4
#define _RXB0D5_RB0D53_POSN                                 0x3
#define _RXB0D5_RB0D53_POSITION                             0x3
#define _RXB0D5_RB0D53_SIZE                                 0x1
#define _RXB0D5_RB0D53_LENGTH                               0x1
#define _RXB0D5_RB0D53_MASK                                 0x8
#define _RXB0D5_RB0D54_POSN                                 0x4
#define _RXB0D5_RB0D54_POSITION                             0x4
#define _RXB0D5_RB0D54_SIZE                                 0x1
#define _RXB0D5_RB0D54_LENGTH                               0x1
#define _RXB0D5_RB0D54_MASK                                 0x10
#define _RXB0D5_RB0D55_POSN                                 0x5
#define _RXB0D5_RB0D55_POSITION                             0x5
#define _RXB0D5_RB0D55_SIZE                                 0x1
#define _RXB0D5_RB0D55_LENGTH                               0x1
#define _RXB0D5_RB0D55_MASK                                 0x20
#define _RXB0D5_RB0D56_POSN                                 0x6
#define _RXB0D5_RB0D56_POSITION                             0x6
#define _RXB0D5_RB0D56_SIZE                                 0x1
#define _RXB0D5_RB0D56_LENGTH                               0x1
#define _RXB0D5_RB0D56_MASK                                 0x40
#define _RXB0D5_RB0D57_POSN                                 0x7
#define _RXB0D5_RB0D57_POSITION                             0x7
#define _RXB0D5_RB0D57_SIZE                                 0x1
#define _RXB0D5_RB0D57_LENGTH                               0x1
#define _RXB0D5_RB0D57_MASK                                 0x80

// Register: RXB0D6
#define RXB0D6 RXB0D6
extern volatile unsigned char           RXB0D6              __at(0xF6C);
#ifndef _LIB_BUILD
asm("RXB0D6 equ 0F6Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D60                :1;
        unsigned RXB0D61                :1;
        unsigned RXB0D62                :1;
        unsigned RXB0D63                :1;
        unsigned RXB0D64                :1;
        unsigned RXB0D65                :1;
        unsigned RXB0D66                :1;
        unsigned RXB0D67                :1;
    };
    struct {
        unsigned RB0D60                 :1;
        unsigned RB0D61                 :1;
        unsigned RB0D62                 :1;
        unsigned RB0D63                 :1;
        unsigned RB0D64                 :1;
        unsigned RB0D65                 :1;
        unsigned RB0D66                 :1;
        unsigned RB0D67                 :1;
    };
} RXB0D6bits_t;
extern volatile RXB0D6bits_t RXB0D6bits __at(0xF6C);
// bitfield macros
#define _RXB0D6_RXB0D60_POSN                                0x0
#define _RXB0D6_RXB0D60_POSITION                            0x0
#define _RXB0D6_RXB0D60_SIZE                                0x1
#define _RXB0D6_RXB0D60_LENGTH                              0x1
#define _RXB0D6_RXB0D60_MASK                                0x1
#define _RXB0D6_RXB0D61_POSN                                0x1
#define _RXB0D6_RXB0D61_POSITION                            0x1
#define _RXB0D6_RXB0D61_SIZE                                0x1
#define _RXB0D6_RXB0D61_LENGTH                              0x1
#define _RXB0D6_RXB0D61_MASK                                0x2
#define _RXB0D6_RXB0D62_POSN                                0x2
#define _RXB0D6_RXB0D62_POSITION                            0x2
#define _RXB0D6_RXB0D62_SIZE                                0x1
#define _RXB0D6_RXB0D62_LENGTH                              0x1
#define _RXB0D6_RXB0D62_MASK                                0x4
#define _RXB0D6_RXB0D63_POSN                                0x3
#define _RXB0D6_RXB0D63_POSITION                            0x3
#define _RXB0D6_RXB0D63_SIZE                                0x1
#define _RXB0D6_RXB0D63_LENGTH                              0x1
#define _RXB0D6_RXB0D63_MASK                                0x8
#define _RXB0D6_RXB0D64_POSN                                0x4
#define _RXB0D6_RXB0D64_POSITION                            0x4
#define _RXB0D6_RXB0D64_SIZE                                0x1
#define _RXB0D6_RXB0D64_LENGTH                              0x1
#define _RXB0D6_RXB0D64_MASK                                0x10
#define _RXB0D6_RXB0D65_POSN                                0x5
#define _RXB0D6_RXB0D65_POSITION                            0x5
#define _RXB0D6_RXB0D65_SIZE                                0x1
#define _RXB0D6_RXB0D65_LENGTH                              0x1
#define _RXB0D6_RXB0D65_MASK                                0x20
#define _RXB0D6_RXB0D66_POSN                                0x6
#define _RXB0D6_RXB0D66_POSITION                            0x6
#define _RXB0D6_RXB0D66_SIZE                                0x1
#define _RXB0D6_RXB0D66_LENGTH                              0x1
#define _RXB0D6_RXB0D66_MASK                                0x40
#define _RXB0D6_RXB0D67_POSN                                0x7
#define _RXB0D6_RXB0D67_POSITION                            0x7
#define _RXB0D6_RXB0D67_SIZE                                0x1
#define _RXB0D6_RXB0D67_LENGTH                              0x1
#define _RXB0D6_RXB0D67_MASK                                0x80
#define _RXB0D6_RB0D60_POSN                                 0x0
#define _RXB0D6_RB0D60_POSITION                             0x0
#define _RXB0D6_RB0D60_SIZE                                 0x1
#define _RXB0D6_RB0D60_LENGTH                               0x1
#define _RXB0D6_RB0D60_MASK                                 0x1
#define _RXB0D6_RB0D61_POSN                                 0x1
#define _RXB0D6_RB0D61_POSITION                             0x1
#define _RXB0D6_RB0D61_SIZE                                 0x1
#define _RXB0D6_RB0D61_LENGTH                               0x1
#define _RXB0D6_RB0D61_MASK                                 0x2
#define _RXB0D6_RB0D62_POSN                                 0x2
#define _RXB0D6_RB0D62_POSITION                             0x2
#define _RXB0D6_RB0D62_SIZE                                 0x1
#define _RXB0D6_RB0D62_LENGTH                               0x1
#define _RXB0D6_RB0D62_MASK                                 0x4
#define _RXB0D6_RB0D63_POSN                                 0x3
#define _RXB0D6_RB0D63_POSITION                             0x3
#define _RXB0D6_RB0D63_SIZE                                 0x1
#define _RXB0D6_RB0D63_LENGTH                               0x1
#define _RXB0D6_RB0D63_MASK                                 0x8
#define _RXB0D6_RB0D64_POSN                                 0x4
#define _RXB0D6_RB0D64_POSITION                             0x4
#define _RXB0D6_RB0D64_SIZE                                 0x1
#define _RXB0D6_RB0D64_LENGTH                               0x1
#define _RXB0D6_RB0D64_MASK                                 0x10
#define _RXB0D6_RB0D65_POSN                                 0x5
#define _RXB0D6_RB0D65_POSITION                             0x5
#define _RXB0D6_RB0D65_SIZE                                 0x1
#define _RXB0D6_RB0D65_LENGTH                               0x1
#define _RXB0D6_RB0D65_MASK                                 0x20
#define _RXB0D6_RB0D66_POSN                                 0x6
#define _RXB0D6_RB0D66_POSITION                             0x6
#define _RXB0D6_RB0D66_SIZE                                 0x1
#define _RXB0D6_RB0D66_LENGTH                               0x1
#define _RXB0D6_RB0D66_MASK                                 0x40
#define _RXB0D6_RB0D67_POSN                                 0x7
#define _RXB0D6_RB0D67_POSITION                             0x7
#define _RXB0D6_RB0D67_SIZE                                 0x1
#define _RXB0D6_RB0D67_LENGTH                               0x1
#define _RXB0D6_RB0D67_MASK                                 0x80

// Register: RXB0D7
#define RXB0D7 RXB0D7
extern volatile unsigned char           RXB0D7              __at(0xF6D);
#ifndef _LIB_BUILD
asm("RXB0D7 equ 0F6Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D70                :1;
        unsigned RXB0D71                :1;
        unsigned RXB0D72                :1;
        unsigned RXB0D73                :1;
        unsigned RXB0D74                :1;
        unsigned RXB0D75                :1;
        unsigned RXB0D76                :1;
        unsigned RXB0D77                :1;
    };
    struct {
        unsigned RB0D70                 :1;
        unsigned RB0D71                 :1;
        unsigned RB0D72                 :1;
        unsigned RB0D73                 :1;
        unsigned RB0D74                 :1;
        unsigned RB0D75                 :1;
        unsigned RB0D76                 :1;
        unsigned RB0D77                 :1;
    };
} RXB0D7bits_t;
extern volatile RXB0D7bits_t RXB0D7bits __at(0xF6D);
// bitfield macros
#define _RXB0D7_RXB0D70_POSN                                0x0
#define _RXB0D7_RXB0D70_POSITION                            0x0
#define _RXB0D7_RXB0D70_SIZE                                0x1
#define _RXB0D7_RXB0D70_LENGTH                              0x1
#define _RXB0D7_RXB0D70_MASK                                0x1
#define _RXB0D7_RXB0D71_POSN                                0x1
#define _RXB0D7_RXB0D71_POSITION                            0x1
#define _RXB0D7_RXB0D71_SIZE                                0x1
#define _RXB0D7_RXB0D71_LENGTH                              0x1
#define _RXB0D7_RXB0D71_MASK                                0x2
#define _RXB0D7_RXB0D72_POSN                                0x2
#define _RXB0D7_RXB0D72_POSITION                            0x2
#define _RXB0D7_RXB0D72_SIZE                                0x1
#define _RXB0D7_RXB0D72_LENGTH                              0x1
#define _RXB0D7_RXB0D72_MASK                                0x4
#define _RXB0D7_RXB0D73_POSN                                0x3
#define _RXB0D7_RXB0D73_POSITION                            0x3
#define _RXB0D7_RXB0D73_SIZE                                0x1
#define _RXB0D7_RXB0D73_LENGTH                              0x1
#define _RXB0D7_RXB0D73_MASK                                0x8
#define _RXB0D7_RXB0D74_POSN                                0x4
#define _RXB0D7_RXB0D74_POSITION                            0x4
#define _RXB0D7_RXB0D74_SIZE                                0x1
#define _RXB0D7_RXB0D74_LENGTH                              0x1
#define _RXB0D7_RXB0D74_MASK                                0x10
#define _RXB0D7_RXB0D75_POSN                                0x5
#define _RXB0D7_RXB0D75_POSITION                            0x5
#define _RXB0D7_RXB0D75_SIZE                                0x1
#define _RXB0D7_RXB0D75_LENGTH                              0x1
#define _RXB0D7_RXB0D75_MASK                                0x20
#define _RXB0D7_RXB0D76_POSN                                0x6
#define _RXB0D7_RXB0D76_POSITION                            0x6
#define _RXB0D7_RXB0D76_SIZE                                0x1
#define _RXB0D7_RXB0D76_LENGTH                              0x1
#define _RXB0D7_RXB0D76_MASK                                0x40
#define _RXB0D7_RXB0D77_POSN                                0x7
#define _RXB0D7_RXB0D77_POSITION                            0x7
#define _RXB0D7_RXB0D77_SIZE                                0x1
#define _RXB0D7_RXB0D77_LENGTH                              0x1
#define _RXB0D7_RXB0D77_MASK                                0x80
#define _RXB0D7_RB0D70_POSN                                 0x0
#define _RXB0D7_RB0D70_POSITION                             0x0
#define _RXB0D7_RB0D70_SIZE                                 0x1
#define _RXB0D7_RB0D70_LENGTH                               0x1
#define _RXB0D7_RB0D70_MASK                                 0x1
#define _RXB0D7_RB0D71_POSN                                 0x1
#define _RXB0D7_RB0D71_POSITION                             0x1
#define _RXB0D7_RB0D71_SIZE                                 0x1
#define _RXB0D7_RB0D71_LENGTH                               0x1
#define _RXB0D7_RB0D71_MASK                                 0x2
#define _RXB0D7_RB0D72_POSN                                 0x2
#define _RXB0D7_RB0D72_POSITION                             0x2
#define _RXB0D7_RB0D72_SIZE                                 0x1
#define _RXB0D7_RB0D72_LENGTH                               0x1
#define _RXB0D7_RB0D72_MASK                                 0x4
#define _RXB0D7_RB0D73_POSN                                 0x3
#define _RXB0D7_RB0D73_POSITION                             0x3
#define _RXB0D7_RB0D73_SIZE                                 0x1
#define _RXB0D7_RB0D73_LENGTH                               0x1
#define _RXB0D7_RB0D73_MASK                                 0x8
#define _RXB0D7_RB0D74_POSN                                 0x4
#define _RXB0D7_RB0D74_POSITION                             0x4
#define _RXB0D7_RB0D74_SIZE                                 0x1
#define _RXB0D7_RB0D74_LENGTH                               0x1
#define _RXB0D7_RB0D74_MASK                                 0x10
#define _RXB0D7_RB0D75_POSN                                 0x5
#define _RXB0D7_RB0D75_POSITION                             0x5
#define _RXB0D7_RB0D75_SIZE                                 0x1
#define _RXB0D7_RB0D75_LENGTH                               0x1
#define _RXB0D7_RB0D75_MASK                                 0x20
#define _RXB0D7_RB0D76_POSN                                 0x6
#define _RXB0D7_RB0D76_POSITION                             0x6
#define _RXB0D7_RB0D76_SIZE                                 0x1
#define _RXB0D7_RB0D76_LENGTH                               0x1
#define _RXB0D7_RB0D76_MASK                                 0x40
#define _RXB0D7_RB0D77_POSN                                 0x7
#define _RXB0D7_RB0D77_POSITION                             0x7
#define _RXB0D7_RB0D77_SIZE                                 0x1
#define _RXB0D7_RB0D77_LENGTH                               0x1
#define _RXB0D7_RB0D77_MASK                                 0x80

// Register: CANSTAT
#define CANSTAT CANSTAT
extern volatile unsigned char           CANSTAT             __at(0xF6E);
#ifndef _LIB_BUILD
asm("CANSTAT equ 0F6Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned ICODE0                 :1;
        unsigned ICODE1                 :1;
        unsigned ICODE2                 :1;
        unsigned                        :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EICODE1                :1;
        unsigned EICODE2                :1;
        unsigned EICODE3                :1;
    };
} CANSTATbits_t;
extern volatile CANSTATbits_t CANSTATbits __at(0xF6E);
// bitfield macros
#define _CANSTAT_ICODE0_POSN                                0x1
#define _CANSTAT_ICODE0_POSITION                            0x1
#define _CANSTAT_ICODE0_SIZE                                0x1
#define _CANSTAT_ICODE0_LENGTH                              0x1
#define _CANSTAT_ICODE0_MASK                                0x2
#define _CANSTAT_ICODE1_POSN                                0x2
#define _CANSTAT_ICODE1_POSITION                            0x2
#define _CANSTAT_ICODE1_SIZE                                0x1
#define _CANSTAT_ICODE1_LENGTH                              0x1
#define _CANSTAT_ICODE1_MASK                                0x4
#define _CANSTAT_ICODE2_POSN                                0x3
#define _CANSTAT_ICODE2_POSITION                            0x3
#define _CANSTAT_ICODE2_SIZE                                0x1
#define _CANSTAT_ICODE2_LENGTH                              0x1
#define _CANSTAT_ICODE2_MASK                                0x8
#define _CANSTAT_OPMODE0_POSN                               0x5
#define _CANSTAT_OPMODE0_POSITION                           0x5
#define _CANSTAT_OPMODE0_SIZE                               0x1
#define _CANSTAT_OPMODE0_LENGTH                             0x1
#define _CANSTAT_OPMODE0_MASK                               0x20
#define _CANSTAT_OPMODE1_POSN                               0x6
#define _CANSTAT_OPMODE1_POSITION                           0x6
#define _CANSTAT_OPMODE1_SIZE                               0x1
#define _CANSTAT_OPMODE1_LENGTH                             0x1
#define _CANSTAT_OPMODE1_MASK                               0x40
#define _CANSTAT_OPMODE2_POSN                               0x7
#define _CANSTAT_OPMODE2_POSITION                           0x7
#define _CANSTAT_OPMODE2_SIZE                               0x1
#define _CANSTAT_OPMODE2_LENGTH                             0x1
#define _CANSTAT_OPMODE2_MASK                               0x80
#define _CANSTAT_EICODE1_POSN                               0x1
#define _CANSTAT_EICODE1_POSITION                           0x1
#define _CANSTAT_EICODE1_SIZE                               0x1
#define _CANSTAT_EICODE1_LENGTH                             0x1
#define _CANSTAT_EICODE1_MASK                               0x2
#define _CANSTAT_EICODE2_POSN                               0x2
#define _CANSTAT_EICODE2_POSITION                           0x2
#define _CANSTAT_EICODE2_SIZE                               0x1
#define _CANSTAT_EICODE2_LENGTH                             0x1
#define _CANSTAT_EICODE2_MASK                               0x4
#define _CANSTAT_EICODE3_POSN                               0x3
#define _CANSTAT_EICODE3_POSITION                           0x3
#define _CANSTAT_EICODE3_SIZE                               0x1
#define _CANSTAT_EICODE3_LENGTH                             0x1
#define _CANSTAT_EICODE3_MASK                               0x8

// Register: CANCON
#define CANCON CANCON
extern volatile unsigned char           CANCON              __at(0xF6F);
#ifndef _LIB_BUILD
asm("CANCON equ 0F6Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned WIN0                   :1;
        unsigned WIN1                   :1;
        unsigned WIN2                   :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned FP1                    :1;
        unsigned FP2                    :1;
        unsigned FP3                    :1;
    };
} CANCONbits_t;
extern volatile CANCONbits_t CANCONbits __at(0xF6F);
// bitfield macros
#define _CANCON_WIN0_POSN                                   0x1
#define _CANCON_WIN0_POSITION                               0x1
#define _CANCON_WIN0_SIZE                                   0x1
#define _CANCON_WIN0_LENGTH                                 0x1
#define _CANCON_WIN0_MASK                                   0x2
#define _CANCON_WIN1_POSN                                   0x2
#define _CANCON_WIN1_POSITION                               0x2
#define _CANCON_WIN1_SIZE                                   0x1
#define _CANCON_WIN1_LENGTH                                 0x1
#define _CANCON_WIN1_MASK                                   0x4
#define _CANCON_WIN2_POSN                                   0x3
#define _CANCON_WIN2_POSITION                               0x3
#define _CANCON_WIN2_SIZE                                   0x1
#define _CANCON_WIN2_LENGTH                                 0x1
#define _CANCON_WIN2_MASK                                   0x8
#define _CANCON_ABAT_POSN                                   0x4
#define _CANCON_ABAT_POSITION                               0x4
#define _CANCON_ABAT_SIZE                                   0x1
#define _CANCON_ABAT_LENGTH                                 0x1
#define _CANCON_ABAT_MASK                                   0x10
#define _CANCON_REQOP0_POSN                                 0x5
#define _CANCON_REQOP0_POSITION                             0x5
#define _CANCON_REQOP0_SIZE                                 0x1
#define _CANCON_REQOP0_LENGTH                               0x1
#define _CANCON_REQOP0_MASK                                 0x20
#define _CANCON_REQOP1_POSN                                 0x6
#define _CANCON_REQOP1_POSITION                             0x6
#define _CANCON_REQOP1_SIZE                                 0x1
#define _CANCON_REQOP1_LENGTH                               0x1
#define _CANCON_REQOP1_MASK                                 0x40
#define _CANCON_REQOP2_POSN                                 0x7
#define _CANCON_REQOP2_POSITION                             0x7
#define _CANCON_REQOP2_SIZE                                 0x1
#define _CANCON_REQOP2_LENGTH                               0x1
#define _CANCON_REQOP2_MASK                                 0x80
#define _CANCON_FP1_POSN                                    0x1
#define _CANCON_FP1_POSITION                                0x1
#define _CANCON_FP1_SIZE                                    0x1
#define _CANCON_FP1_LENGTH                                  0x1
#define _CANCON_FP1_MASK                                    0x2
#define _CANCON_FP2_POSN                                    0x2
#define _CANCON_FP2_POSITION                                0x2
#define _CANCON_FP2_SIZE                                    0x1
#define _CANCON_FP2_LENGTH                                  0x1
#define _CANCON_FP2_MASK                                    0x4
#define _CANCON_FP3_POSN                                    0x3
#define _CANCON_FP3_POSITION                                0x3
#define _CANCON_FP3_SIZE                                    0x1
#define _CANCON_FP3_LENGTH                                  0x1
#define _CANCON_FP3_MASK                                    0x8

// Register: BRGCON1
#define BRGCON1 BRGCON1
extern volatile unsigned char           BRGCON1             __at(0xF70);
#ifndef _LIB_BUILD
asm("BRGCON1 equ 0F70h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BRP0                   :1;
        unsigned BRP1                   :1;
        unsigned BRP2                   :1;
        unsigned BRP3                   :1;
        unsigned BRP4                   :1;
        unsigned BRP5                   :1;
        unsigned SJW0                   :1;
        unsigned SJW1                   :1;
    };
} BRGCON1bits_t;
extern volatile BRGCON1bits_t BRGCON1bits __at(0xF70);
// bitfield macros
#define _BRGCON1_BRP0_POSN                                  0x0
#define _BRGCON1_BRP0_POSITION                              0x0
#define _BRGCON1_BRP0_SIZE                                  0x1
#define _BRGCON1_BRP0_LENGTH                                0x1
#define _BRGCON1_BRP0_MASK                                  0x1
#define _BRGCON1_BRP1_POSN                                  0x1
#define _BRGCON1_BRP1_POSITION                              0x1
#define _BRGCON1_BRP1_SIZE                                  0x1
#define _BRGCON1_BRP1_LENGTH                                0x1
#define _BRGCON1_BRP1_MASK                                  0x2
#define _BRGCON1_BRP2_POSN                                  0x2
#define _BRGCON1_BRP2_POSITION                              0x2
#define _BRGCON1_BRP2_SIZE                                  0x1
#define _BRGCON1_BRP2_LENGTH                                0x1
#define _BRGCON1_BRP2_MASK                                  0x4
#define _BRGCON1_BRP3_POSN                                  0x3
#define _BRGCON1_BRP3_POSITION                              0x3
#define _BRGCON1_BRP3_SIZE                                  0x1
#define _BRGCON1_BRP3_LENGTH                                0x1
#define _BRGCON1_BRP3_MASK                                  0x8
#define _BRGCON1_BRP4_POSN                                  0x4
#define _BRGCON1_BRP4_POSITION                              0x4
#define _BRGCON1_BRP4_SIZE                                  0x1
#define _BRGCON1_BRP4_LENGTH                                0x1
#define _BRGCON1_BRP4_MASK                                  0x10
#define _BRGCON1_BRP5_POSN                                  0x5
#define _BRGCON1_BRP5_POSITION                              0x5
#define _BRGCON1_BRP5_SIZE                                  0x1
#define _BRGCON1_BRP5_LENGTH                                0x1
#define _BRGCON1_BRP5_MASK                                  0x20
#define _BRGCON1_SJW0_POSN                                  0x6
#define _BRGCON1_SJW0_POSITION                              0x6
#define _BRGCON1_SJW0_SIZE                                  0x1
#define _BRGCON1_SJW0_LENGTH                                0x1
#define _BRGCON1_SJW0_MASK                                  0x40
#define _BRGCON1_SJW1_POSN                                  0x7
#define _BRGCON1_SJW1_POSITION                              0x7
#define _BRGCON1_SJW1_SIZE                                  0x1
#define _BRGCON1_SJW1_LENGTH                                0x1
#define _BRGCON1_SJW1_MASK                                  0x80

// Register: BRGCON2
#define BRGCON2 BRGCON2
extern volatile unsigned char           BRGCON2             __at(0xF71);
#ifndef _LIB_BUILD
asm("BRGCON2 equ 0F71h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRSEG0                 :1;
        unsigned PRSEG1                 :1;
        unsigned PRSEG2                 :1;
        unsigned SEG1PH0                :1;
        unsigned SEG1PH1                :1;
        unsigned SEG1PH2                :1;
        unsigned SAM                    :1;
        unsigned SEG2PHTS               :1;
    };
    struct {
        unsigned                        :7;
        unsigned SEG2PHT                :1;
    };
} BRGCON2bits_t;
extern volatile BRGCON2bits_t BRGCON2bits __at(0xF71);
// bitfield macros
#define _BRGCON2_PRSEG0_POSN                                0x0
#define _BRGCON2_PRSEG0_POSITION                            0x0
#define _BRGCON2_PRSEG0_SIZE                                0x1
#define _BRGCON2_PRSEG0_LENGTH                              0x1
#define _BRGCON2_PRSEG0_MASK                                0x1
#define _BRGCON2_PRSEG1_POSN                                0x1
#define _BRGCON2_PRSEG1_POSITION                            0x1
#define _BRGCON2_PRSEG1_SIZE                                0x1
#define _BRGCON2_PRSEG1_LENGTH                              0x1
#define _BRGCON2_PRSEG1_MASK                                0x2
#define _BRGCON2_PRSEG2_POSN                                0x2
#define _BRGCON2_PRSEG2_POSITION                            0x2
#define _BRGCON2_PRSEG2_SIZE                                0x1
#define _BRGCON2_PRSEG2_LENGTH                              0x1
#define _BRGCON2_PRSEG2_MASK                                0x4
#define _BRGCON2_SEG1PH0_POSN                               0x3
#define _BRGCON2_SEG1PH0_POSITION                           0x3
#define _BRGCON2_SEG1PH0_SIZE                               0x1
#define _BRGCON2_SEG1PH0_LENGTH                             0x1
#define _BRGCON2_SEG1PH0_MASK                               0x8
#define _BRGCON2_SEG1PH1_POSN                               0x4
#define _BRGCON2_SEG1PH1_POSITION                           0x4
#define _BRGCON2_SEG1PH1_SIZE                               0x1
#define _BRGCON2_SEG1PH1_LENGTH                             0x1
#define _BRGCON2_SEG1PH1_MASK                               0x10
#define _BRGCON2_SEG1PH2_POSN                               0x5
#define _BRGCON2_SEG1PH2_POSITION                           0x5
#define _BRGCON2_SEG1PH2_SIZE                               0x1
#define _BRGCON2_SEG1PH2_LENGTH                             0x1
#define _BRGCON2_SEG1PH2_MASK                               0x20
#define _BRGCON2_SAM_POSN                                   0x6
#define _BRGCON2_SAM_POSITION                               0x6
#define _BRGCON2_SAM_SIZE                                   0x1
#define _BRGCON2_SAM_LENGTH                                 0x1
#define _BRGCON2_SAM_MASK                                   0x40
#define _BRGCON2_SEG2PHTS_POSN                              0x7
#define _BRGCON2_SEG2PHTS_POSITION                          0x7
#define _BRGCON2_SEG2PHTS_SIZE                              0x1
#define _BRGCON2_SEG2PHTS_LENGTH                            0x1
#define _BRGCON2_SEG2PHTS_MASK                              0x80
#define _BRGCON2_SEG2PHT_POSN                               0x7
#define _BRGCON2_SEG2PHT_POSITION                           0x7
#define _BRGCON2_SEG2PHT_SIZE                               0x1
#define _BRGCON2_SEG2PHT_LENGTH                             0x1
#define _BRGCON2_SEG2PHT_MASK                               0x80

// Register: BRGCON3
#define BRGCON3 BRGCON3
extern volatile unsigned char           BRGCON3             __at(0xF72);
#ifndef _LIB_BUILD
asm("BRGCON3 equ 0F72h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SEG2PH0                :1;
        unsigned SEG2PH1                :1;
        unsigned SEG2PH2                :1;
        unsigned                        :3;
        unsigned WAKFIL                 :1;
    };
} BRGCON3bits_t;
extern volatile BRGCON3bits_t BRGCON3bits __at(0xF72);
// bitfield macros
#define _BRGCON3_SEG2PH0_POSN                               0x0
#define _BRGCON3_SEG2PH0_POSITION                           0x0
#define _BRGCON3_SEG2PH0_SIZE                               0x1
#define _BRGCON3_SEG2PH0_LENGTH                             0x1
#define _BRGCON3_SEG2PH0_MASK                               0x1
#define _BRGCON3_SEG2PH1_POSN                               0x1
#define _BRGCON3_SEG2PH1_POSITION                           0x1
#define _BRGCON3_SEG2PH1_SIZE                               0x1
#define _BRGCON3_SEG2PH1_LENGTH                             0x1
#define _BRGCON3_SEG2PH1_MASK                               0x2
#define _BRGCON3_SEG2PH2_POSN                               0x2
#define _BRGCON3_SEG2PH2_POSITION                           0x2
#define _BRGCON3_SEG2PH2_SIZE                               0x1
#define _BRGCON3_SEG2PH2_LENGTH                             0x1
#define _BRGCON3_SEG2PH2_MASK                               0x4
#define _BRGCON3_WAKFIL_POSN                                0x6
#define _BRGCON3_WAKFIL_POSITION                            0x6
#define _BRGCON3_WAKFIL_SIZE                                0x1
#define _BRGCON3_WAKFIL_LENGTH                              0x1
#define _BRGCON3_WAKFIL_MASK                                0x40

// Register: CIOCON
#define CIOCON CIOCON
extern volatile unsigned char           CIOCON              __at(0xF73);
#ifndef _LIB_BUILD
asm("CIOCON equ 0F73h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :4;
        unsigned CANCAP                 :1;
        unsigned ENDRHI                 :1;
    };
} CIOCONbits_t;
extern volatile CIOCONbits_t CIOCONbits __at(0xF73);
// bitfield macros
#define _CIOCON_CANCAP_POSN                                 0x4
#define _CIOCON_CANCAP_POSITION                             0x4
#define _CIOCON_CANCAP_SIZE                                 0x1
#define _CIOCON_CANCAP_LENGTH                               0x1
#define _CIOCON_CANCAP_MASK                                 0x10
#define _CIOCON_ENDRHI_POSN                                 0x5
#define _CIOCON_ENDRHI_POSITION                             0x5
#define _CIOCON_ENDRHI_SIZE                                 0x1
#define _CIOCON_ENDRHI_LENGTH                               0x1
#define _CIOCON_ENDRHI_MASK                                 0x20

// Register: COMSTAT
#define COMSTAT COMSTAT
extern volatile unsigned char           COMSTAT             __at(0xF74);
#ifndef _LIB_BUILD
asm("COMSTAT equ 0F74h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EWARN                  :1;
        unsigned RXWARN                 :1;
        unsigned TXWARN                 :1;
        unsigned RXBP                   :1;
        unsigned TXBP                   :1;
        unsigned TXBO                   :1;
        unsigned RXB1OVFL               :1;
        unsigned RXB0OVFL               :1;
    };
    struct {
        unsigned                        :6;
        unsigned RX2OVFL                :1;
        unsigned RX1OVFL                :1;
    };
    struct {
        unsigned                        :6;
        unsigned RXBNOVFL               :1;
        unsigned FIFOEMPTY              :1;
    };
} COMSTATbits_t;
extern volatile COMSTATbits_t COMSTATbits __at(0xF74);
// bitfield macros
#define _COMSTAT_EWARN_POSN                                 0x0
#define _COMSTAT_EWARN_POSITION                             0x0
#define _COMSTAT_EWARN_SIZE                                 0x1
#define _COMSTAT_EWARN_LENGTH                               0x1
#define _COMSTAT_EWARN_MASK                                 0x1
#define _COMSTAT_RXWARN_POSN                                0x1
#define _COMSTAT_RXWARN_POSITION                            0x1
#define _COMSTAT_RXWARN_SIZE                                0x1
#define _COMSTAT_RXWARN_LENGTH                              0x1
#define _COMSTAT_RXWARN_MASK                                0x2
#define _COMSTAT_TXWARN_POSN                                0x2
#define _COMSTAT_TXWARN_POSITION                            0x2
#define _COMSTAT_TXWARN_SIZE                                0x1
#define _COMSTAT_TXWARN_LENGTH                              0x1
#define _COMSTAT_TXWARN_MASK                                0x4
#define _COMSTAT_RXBP_POSN                                  0x3
#define _COMSTAT_RXBP_POSITION                              0x3
#define _COMSTAT_RXBP_SIZE                                  0x1
#define _COMSTAT_RXBP_LENGTH                                0x1
#define _COMSTAT_RXBP_MASK                                  0x8
#define _COMSTAT_TXBP_POSN                                  0x4
#define _COMSTAT_TXBP_POSITION                              0x4
#define _COMSTAT_TXBP_SIZE                                  0x1
#define _COMSTAT_TXBP_LENGTH                                0x1
#define _COMSTAT_TXBP_MASK                                  0x10
#define _COMSTAT_TXBO_POSN                                  0x5
#define _COMSTAT_TXBO_POSITION                              0x5
#define _COMSTAT_TXBO_SIZE                                  0x1
#define _COMSTAT_TXBO_LENGTH                                0x1
#define _COMSTAT_TXBO_MASK                                  0x20
#define _COMSTAT_RXB1OVFL_POSN                              0x6
#define _COMSTAT_RXB1OVFL_POSITION                          0x6
#define _COMSTAT_RXB1OVFL_SIZE                              0x1
#define _COMSTAT_RXB1OVFL_LENGTH                            0x1
#define _COMSTAT_RXB1OVFL_MASK                              0x40
#define _COMSTAT_RXB0OVFL_POSN                              0x7
#define _COMSTAT_RXB0OVFL_POSITION                          0x7
#define _COMSTAT_RXB0OVFL_SIZE                              0x1
#define _COMSTAT_RXB0OVFL_LENGTH                            0x1
#define _COMSTAT_RXB0OVFL_MASK                              0x80
#define _COMSTAT_RX2OVFL_POSN                               0x6
#define _COMSTAT_RX2OVFL_POSITION                           0x6
#define _COMSTAT_RX2OVFL_SIZE                               0x1
#define _COMSTAT_RX2OVFL_LENGTH                             0x1
#define _COMSTAT_RX2OVFL_MASK                               0x40
#define _COMSTAT_RX1OVFL_POSN                               0x7
#define _COMSTAT_RX1OVFL_POSITION                           0x7
#define _COMSTAT_RX1OVFL_SIZE                               0x1
#define _COMSTAT_RX1OVFL_LENGTH                             0x1
#define _COMSTAT_RX1OVFL_MASK                               0x80
#define _COMSTAT_RXBNOVFL_POSN                              0x6
#define _COMSTAT_RXBNOVFL_POSITION                          0x6
#define _COMSTAT_RXBNOVFL_SIZE                              0x1
#define _COMSTAT_RXBNOVFL_LENGTH                            0x1
#define _COMSTAT_RXBNOVFL_MASK                              0x40
#define _COMSTAT_FIFOEMPTY_POSN                             0x7
#define _COMSTAT_FIFOEMPTY_POSITION                         0x7
#define _COMSTAT_FIFOEMPTY_SIZE                             0x1
#define _COMSTAT_FIFOEMPTY_LENGTH                           0x1
#define _COMSTAT_FIFOEMPTY_MASK                             0x80

// Register: RXERRCNT
#define RXERRCNT RXERRCNT
extern volatile unsigned char           RXERRCNT            __at(0xF75);
#ifndef _LIB_BUILD
asm("RXERRCNT equ 0F75h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned REC0                   :1;
        unsigned REC1                   :1;
        unsigned REC2                   :1;
        unsigned REC3                   :1;
        unsigned REC4                   :1;
        unsigned REC5                   :1;
        unsigned REC6                   :1;
        unsigned REC7                   :1;
    };
} RXERRCNTbits_t;
extern volatile RXERRCNTbits_t RXERRCNTbits __at(0xF75);
// bitfield macros
#define _RXERRCNT_REC0_POSN                                 0x0
#define _RXERRCNT_REC0_POSITION                             0x0
#define _RXERRCNT_REC0_SIZE                                 0x1
#define _RXERRCNT_REC0_LENGTH                               0x1
#define _RXERRCNT_REC0_MASK                                 0x1
#define _RXERRCNT_REC1_POSN                                 0x1
#define _RXERRCNT_REC1_POSITION                             0x1
#define _RXERRCNT_REC1_SIZE                                 0x1
#define _RXERRCNT_REC1_LENGTH                               0x1
#define _RXERRCNT_REC1_MASK                                 0x2
#define _RXERRCNT_REC2_POSN                                 0x2
#define _RXERRCNT_REC2_POSITION                             0x2
#define _RXERRCNT_REC2_SIZE                                 0x1
#define _RXERRCNT_REC2_LENGTH                               0x1
#define _RXERRCNT_REC2_MASK                                 0x4
#define _RXERRCNT_REC3_POSN                                 0x3
#define _RXERRCNT_REC3_POSITION                             0x3
#define _RXERRCNT_REC3_SIZE                                 0x1
#define _RXERRCNT_REC3_LENGTH                               0x1
#define _RXERRCNT_REC3_MASK                                 0x8
#define _RXERRCNT_REC4_POSN                                 0x4
#define _RXERRCNT_REC4_POSITION                             0x4
#define _RXERRCNT_REC4_SIZE                                 0x1
#define _RXERRCNT_REC4_LENGTH                               0x1
#define _RXERRCNT_REC4_MASK                                 0x10
#define _RXERRCNT_REC5_POSN                                 0x5
#define _RXERRCNT_REC5_POSITION                             0x5
#define _RXERRCNT_REC5_SIZE                                 0x1
#define _RXERRCNT_REC5_LENGTH                               0x1
#define _RXERRCNT_REC5_MASK                                 0x20
#define _RXERRCNT_REC6_POSN                                 0x6
#define _RXERRCNT_REC6_POSITION                             0x6
#define _RXERRCNT_REC6_SIZE                                 0x1
#define _RXERRCNT_REC6_LENGTH                               0x1
#define _RXERRCNT_REC6_MASK                                 0x40
#define _RXERRCNT_REC7_POSN                                 0x7
#define _RXERRCNT_REC7_POSITION                             0x7
#define _RXERRCNT_REC7_SIZE                                 0x1
#define _RXERRCNT_REC7_LENGTH                               0x1
#define _RXERRCNT_REC7_MASK                                 0x80

// Register: TXERRCNT
#define TXERRCNT TXERRCNT
extern volatile unsigned char           TXERRCNT            __at(0xF76);
#ifndef _LIB_BUILD
asm("TXERRCNT equ 0F76h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TEC0                   :1;
        unsigned TEC1                   :1;
        unsigned TEC2                   :1;
        unsigned TEC3                   :1;
        unsigned TEC4                   :1;
        unsigned TEC5                   :1;
        unsigned TEC6                   :1;
        unsigned TEC7                   :1;
    };
} TXERRCNTbits_t;
extern volatile TXERRCNTbits_t TXERRCNTbits __at(0xF76);
// bitfield macros
#define _TXERRCNT_TEC0_POSN                                 0x0
#define _TXERRCNT_TEC0_POSITION                             0x0
#define _TXERRCNT_TEC0_SIZE                                 0x1
#define _TXERRCNT_TEC0_LENGTH                               0x1
#define _TXERRCNT_TEC0_MASK                                 0x1
#define _TXERRCNT_TEC1_POSN                                 0x1
#define _TXERRCNT_TEC1_POSITION                             0x1
#define _TXERRCNT_TEC1_SIZE                                 0x1
#define _TXERRCNT_TEC1_LENGTH                               0x1
#define _TXERRCNT_TEC1_MASK                                 0x2
#define _TXERRCNT_TEC2_POSN                                 0x2
#define _TXERRCNT_TEC2_POSITION                             0x2
#define _TXERRCNT_TEC2_SIZE                                 0x1
#define _TXERRCNT_TEC2_LENGTH                               0x1
#define _TXERRCNT_TEC2_MASK                                 0x4
#define _TXERRCNT_TEC3_POSN                                 0x3
#define _TXERRCNT_TEC3_POSITION                             0x3
#define _TXERRCNT_TEC3_SIZE                                 0x1
#define _TXERRCNT_TEC3_LENGTH                               0x1
#define _TXERRCNT_TEC3_MASK                                 0x8
#define _TXERRCNT_TEC4_POSN                                 0x4
#define _TXERRCNT_TEC4_POSITION                             0x4
#define _TXERRCNT_TEC4_SIZE                                 0x1
#define _TXERRCNT_TEC4_LENGTH                               0x1
#define _TXERRCNT_TEC4_MASK                                 0x10
#define _TXERRCNT_TEC5_POSN                                 0x5
#define _TXERRCNT_TEC5_POSITION                             0x5
#define _TXERRCNT_TEC5_SIZE                                 0x1
#define _TXERRCNT_TEC5_LENGTH                               0x1
#define _TXERRCNT_TEC5_MASK                                 0x20
#define _TXERRCNT_TEC6_POSN                                 0x6
#define _TXERRCNT_TEC6_POSITION                             0x6
#define _TXERRCNT_TEC6_SIZE                                 0x1
#define _TXERRCNT_TEC6_LENGTH                               0x1
#define _TXERRCNT_TEC6_MASK                                 0x40
#define _TXERRCNT_TEC7_POSN                                 0x7
#define _TXERRCNT_TEC7_POSITION                             0x7
#define _TXERRCNT_TEC7_SIZE                                 0x1
#define _TXERRCNT_TEC7_LENGTH                               0x1
#define _TXERRCNT_TEC7_MASK                                 0x80

// Register: PORTA
#define PORTA PORTA
extern volatile unsigned char           PORTA               __at(0xF80);
#ifndef _LIB_BUILD
asm("PORTA equ 0F80h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA0                    :1;
        unsigned RA1                    :1;
        unsigned RA2                    :1;
        unsigned RA3                    :1;
        unsigned RA4                    :1;
        unsigned RA5                    :1;
        unsigned RA6                    :1;
    };
    struct {
        unsigned AN0                    :1;
        unsigned AN1                    :1;
        unsigned AN2                    :1;
        unsigned AN3                    :1;
        unsigned                        :1;
        unsigned AN4                    :1;
        unsigned OSC2                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_SS                 :1;
    };
    struct {
        unsigned CVREF                  :1;
        unsigned                        :1;
        unsigned VREFM                  :1;
        unsigned VREFP                  :1;
        unsigned T0CKI                  :1;
        unsigned nSS                    :1;
        unsigned CLKO                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned SS                     :1;
    };
    struct {
        unsigned                        :5;
        unsigned LVDIN                  :1;
    };
    struct {
        unsigned ULPWUIN                :1;
    };
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits __at(0xF80);
// bitfield macros
#define _PORTA_RA0_POSN                                     0x0
#define _PORTA_RA0_POSITION                                 0x0
#define _PORTA_RA0_SIZE                                     0x1
#define _PORTA_RA0_LENGTH                                   0x1
#define _PORTA_RA0_MASK                                     0x1
#define _PORTA_RA1_POSN                                     0x1
#define _PORTA_RA1_POSITION                                 0x1
#define _PORTA_RA1_SIZE                                     0x1
#define _PORTA_RA1_LENGTH                                   0x1
#define _PORTA_RA1_MASK                                     0x2
#define _PORTA_RA2_POSN                                     0x2
#define _PORTA_RA2_POSITION                                 0x2
#define _PORTA_RA2_SIZE                                     0x1
#define _PORTA_RA2_LENGTH                                   0x1
#define _PORTA_RA2_MASK                                     0x4
#define _PORTA_RA3_POSN                                     0x3
#define _PORTA_RA3_POSITION                                 0x3
#define _PORTA_RA3_SIZE                                     0x1
#define _PORTA_RA3_LENGTH                                   0x1
#define _PORTA_RA3_MASK                                     0x8
#define _PORTA_RA4_POSN                                     0x4
#define _PORTA_RA4_POSITION                                 0x4
#define _PORTA_RA4_SIZE                                     0x1
#define _PORTA_RA4_LENGTH                                   0x1
#define _PORTA_RA4_MASK                                     0x10
#define _PORTA_RA5_POSN                                     0x5
#define _PORTA_RA5_POSITION                                 0x5
#define _PORTA_RA5_SIZE                                     0x1
#define _PORTA_RA5_LENGTH                                   0x1
#define _PORTA_RA5_MASK                                     0x20
#define _PORTA_RA6_POSN                                     0x6
#define _PORTA_RA6_POSITION                                 0x6
#define _PORTA_RA6_SIZE                                     0x1
#define _PORTA_RA6_LENGTH                                   0x1
#define _PORTA_RA6_MASK                                     0x40
#define _PORTA_AN0_POSN                                     0x0
#define _PORTA_AN0_POSITION                                 0x0
#define _PORTA_AN0_SIZE                                     0x1
#define _PORTA_AN0_LENGTH                                   0x1
#define _PORTA_AN0_MASK                                     0x1
#define _PORTA_AN1_POSN                                     0x1
#define _PORTA_AN1_POSITION                                 0x1
#define _PORTA_AN1_SIZE                                     0x1
#define _PORTA_AN1_LENGTH                                   0x1
#define _PORTA_AN1_MASK                                     0x2
#define _PORTA_AN2_POSN                                     0x2
#define _PORTA_AN2_POSITION                                 0x2
#define _PORTA_AN2_SIZE                                     0x1
#define _PORTA_AN2_LENGTH                                   0x1
#define _PORTA_AN2_MASK                                     0x4
#define _PORTA_AN3_POSN                                     0x3
#define _PORTA_AN3_POSITION                                 0x3
#define _PORTA_AN3_SIZE                                     0x1
#define _PORTA_AN3_LENGTH                                   0x1
#define _PORTA_AN3_MASK                                     0x8
#define _PORTA_AN4_POSN                                     0x5
#define _PORTA_AN4_POSITION                                 0x5
#define _PORTA_AN4_SIZE                                     0x1
#define _PORTA_AN4_LENGTH                                   0x1
#define _PORTA_AN4_MASK                                     0x20
#define _PORTA_OSC2_POSN                                    0x6
#define _PORTA_OSC2_POSITION                                0x6
#define _PORTA_OSC2_SIZE                                    0x1
#define _PORTA_OSC2_LENGTH                                  0x1
#define _PORTA_OSC2_MASK                                    0x40
#define _PORTA_NOT_SS_POSN                                  0x5
#define _PORTA_NOT_SS_POSITION                              0x5
#define _PORTA_NOT_SS_SIZE                                  0x1
#define _PORTA_NOT_SS_LENGTH                                0x1
#define _PORTA_NOT_SS_MASK                                  0x20
#define _PORTA_CVREF_POSN                                   0x0
#define _PORTA_CVREF_POSITION                               0x0
#define _PORTA_CVREF_SIZE                                   0x1
#define _PORTA_CVREF_LENGTH                                 0x1
#define _PORTA_CVREF_MASK                                   0x1
#define _PORTA_VREFM_POSN                                   0x2
#define _PORTA_VREFM_POSITION                               0x2
#define _PORTA_VREFM_SIZE                                   0x1
#define _PORTA_VREFM_LENGTH                                 0x1
#define _PORTA_VREFM_MASK                                   0x4
#define _PORTA_VREFP_POSN                                   0x3
#define _PORTA_VREFP_POSITION                               0x3
#define _PORTA_VREFP_SIZE                                   0x1
#define _PORTA_VREFP_LENGTH                                 0x1
#define _PORTA_VREFP_MASK                                   0x8
#define _PORTA_T0CKI_POSN                                   0x4
#define _PORTA_T0CKI_POSITION                               0x4
#define _PORTA_T0CKI_SIZE                                   0x1
#define _PORTA_T0CKI_LENGTH                                 0x1
#define _PORTA_T0CKI_MASK                                   0x10
#define _PORTA_nSS_POSN                                     0x5
#define _PORTA_nSS_POSITION                                 0x5
#define _PORTA_nSS_SIZE                                     0x1
#define _PORTA_nSS_LENGTH                                   0x1
#define _PORTA_nSS_MASK                                     0x20
#define _PORTA_CLKO_POSN                                    0x6
#define _PORTA_CLKO_POSITION                                0x6
#define _PORTA_CLKO_SIZE                                    0x1
#define _PORTA_CLKO_LENGTH                                  0x1
#define _PORTA_CLKO_MASK                                    0x40
#define _PORTA_SS_POSN                                      0x5
#define _PORTA_SS_POSITION                                  0x5
#define _PORTA_SS_SIZE                                      0x1
#define _PORTA_SS_LENGTH                                    0x1
#define _PORTA_SS_MASK                                      0x20
#define _PORTA_LVDIN_POSN                                   0x5
#define _PORTA_LVDIN_POSITION                               0x5
#define _PORTA_LVDIN_SIZE                                   0x1
#define _PORTA_LVDIN_LENGTH                                 0x1
#define _PORTA_LVDIN_MASK                                   0x20
#define _PORTA_ULPWUIN_POSN                                 0x0
#define _PORTA_ULPWUIN_POSITION                             0x0
#define _PORTA_ULPWUIN_SIZE                                 0x1
#define _PORTA_ULPWUIN_LENGTH                               0x1
#define _PORTA_ULPWUIN_MASK                                 0x1

// Register: PORTB
#define PORTB PORTB
extern volatile unsigned char           PORTB               __at(0xF81);
#ifndef _LIB_BUILD
asm("PORTB equ 0F81h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RB2                    :1;
        unsigned RB3                    :1;
        unsigned RB4                    :1;
        unsigned RB5                    :1;
        unsigned RB6                    :1;
        unsigned RB7                    :1;
    };
    struct {
        unsigned INT0                   :1;
        unsigned INT1                   :1;
        unsigned CANTX                  :1;
        unsigned CANRX                  :1;
        unsigned                        :1;
        unsigned PGM                    :1;
        unsigned PGC                    :1;
        unsigned PGD                    :1;
    };
    struct {
        unsigned                        :3;
        unsigned CCP2_PA2               :1;
    };
} PORTBbits_t;
extern volatile PORTBbits_t PORTBbits __at(0xF81);
// bitfield macros
#define _PORTB_RB0_POSN                                     0x0
#define _PORTB_RB0_POSITION                                 0x0
#define _PORTB_RB0_SIZE                                     0x1
#define _PORTB_RB0_LENGTH                                   0x1
#define _PORTB_RB0_MASK                                     0x1
#define _PORTB_RB1_POSN                                     0x1
#define _PORTB_RB1_POSITION                                 0x1
#define _PORTB_RB1_SIZE                                     0x1
#define _PORTB_RB1_LENGTH                                   0x1
#define _PORTB_RB1_MASK                                     0x2
#define _PORTB_RB2_POSN                                     0x2
#define _PORTB_RB2_POSITION                                 0x2
#define _PORTB_RB2_SIZE                                     0x1
#define _PORTB_RB2_LENGTH                                   0x1
#define _PORTB_RB2_MASK                                     0x4
#define _PORTB_RB3_POSN                                     0x3
#define _PORTB_RB3_POSITION                                 0x3
#define _PORTB_RB3_SIZE                                     0x1
#define _PORTB_RB3_LENGTH                                   0x1
#define _PORTB_RB3_MASK                                     0x8
#define _PORTB_RB4_POSN                                     0x4
#define _PORTB_RB4_POSITION                                 0x4
#define _PORTB_RB4_SIZE                                     0x1
#define _PORTB_RB4_LENGTH                                   0x1
#define _PORTB_RB4_MASK                                     0x10
#define _PORTB_RB5_POSN                                     0x5
#define _PORTB_RB5_POSITION                                 0x5
#define _PORTB_RB5_SIZE                                     0x1
#define _PORTB_RB5_LENGTH                                   0x1
#define _PORTB_RB5_MASK                                     0x20
#define _PORTB_RB6_POSN                                     0x6
#define _PORTB_RB6_POSITION                                 0x6
#define _PORTB_RB6_SIZE                                     0x1
#define _PORTB_RB6_LENGTH                                   0x1
#define _PORTB_RB6_MASK                                     0x40
#define _PORTB_RB7_POSN                                     0x7
#define _PORTB_RB7_POSITION                                 0x7
#define _PORTB_RB7_SIZE                                     0x1
#define _PORTB_RB7_LENGTH                                   0x1
#define _PORTB_RB7_MASK                                     0x80
#define _PORTB_INT0_POSN                                    0x0
#define _PORTB_INT0_POSITION                                0x0
#define _PORTB_INT0_SIZE                                    0x1
#define _PORTB_INT0_LENGTH                                  0x1
#define _PORTB_INT0_MASK                                    0x1
#define _PORTB_INT1_POSN                                    0x1
#define _PORTB_INT1_POSITION                                0x1
#define _PORTB_INT1_SIZE                                    0x1
#define _PORTB_INT1_LENGTH                                  0x1
#define _PORTB_INT1_MASK                                    0x2
#define _PORTB_CANTX_POSN                                   0x2
#define _PORTB_CANTX_POSITION                               0x2
#define _PORTB_CANTX_SIZE                                   0x1
#define _PORTB_CANTX_LENGTH                                 0x1
#define _PORTB_CANTX_MASK                                   0x4
#define _PORTB_CANRX_POSN                                   0x3
#define _PORTB_CANRX_POSITION                               0x3
#define _PORTB_CANRX_SIZE                                   0x1
#define _PORTB_CANRX_LENGTH                                 0x1
#define _PORTB_CANRX_MASK                                   0x8
#define _PORTB_PGM_POSN                                     0x5
#define _PORTB_PGM_POSITION                                 0x5
#define _PORTB_PGM_SIZE                                     0x1
#define _PORTB_PGM_LENGTH                                   0x1
#define _PORTB_PGM_MASK                                     0x20
#define _PORTB_PGC_POSN                                     0x6
#define _PORTB_PGC_POSITION                                 0x6
#define _PORTB_PGC_SIZE                                     0x1
#define _PORTB_PGC_LENGTH                                   0x1
#define _PORTB_PGC_MASK                                     0x40
#define _PORTB_PGD_POSN                                     0x7
#define _PORTB_PGD_POSITION                                 0x7
#define _PORTB_PGD_SIZE                                     0x1
#define _PORTB_PGD_LENGTH                                   0x1
#define _PORTB_PGD_MASK                                     0x80
#define _PORTB_CCP2_PA2_POSN                                0x3
#define _PORTB_CCP2_PA2_POSITION                            0x3
#define _PORTB_CCP2_PA2_SIZE                                0x1
#define _PORTB_CCP2_PA2_LENGTH                              0x1
#define _PORTB_CCP2_PA2_MASK                                0x8

// Register: PORTC
#define PORTC PORTC
extern volatile unsigned char           PORTC               __at(0xF82);
#ifndef _LIB_BUILD
asm("PORTC equ 0F82h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC0                    :1;
        unsigned RC1                    :1;
        unsigned RC2                    :1;
        unsigned RC3                    :1;
        unsigned RC4                    :1;
        unsigned RC5                    :1;
        unsigned RC6                    :1;
        unsigned RC7                    :1;
    };
    struct {
        unsigned T1OSO                  :1;
        unsigned T1OSI                  :1;
        unsigned                        :1;
        unsigned SCK                    :1;
        unsigned SDI                    :1;
        unsigned SDO                    :1;
        unsigned TX                     :1;
        unsigned RX                     :1;
    };
    struct {
        unsigned T1CKI                  :1;
        unsigned                        :1;
        unsigned CCP1                   :1;
        unsigned SCL                    :1;
        unsigned SDA                    :1;
        unsigned                        :1;
        unsigned CK                     :1;
        unsigned DT                     :1;
    };
    struct {
        unsigned                        :1;
        unsigned CCP2                   :1;
        unsigned PA1                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned PA2                    :1;
    };
} PORTCbits_t;
extern volatile PORTCbits_t PORTCbits __at(0xF82);
// bitfield macros
#define _PORTC_RC0_POSN                                     0x0
#define _PORTC_RC0_POSITION                                 0x0
#define _PORTC_RC0_SIZE                                     0x1
#define _PORTC_RC0_LENGTH                                   0x1
#define _PORTC_RC0_MASK                                     0x1
#define _PORTC_RC1_POSN                                     0x1
#define _PORTC_RC1_POSITION                                 0x1
#define _PORTC_RC1_SIZE                                     0x1
#define _PORTC_RC1_LENGTH                                   0x1
#define _PORTC_RC1_MASK                                     0x2
#define _PORTC_RC2_POSN                                     0x2
#define _PORTC_RC2_POSITION                                 0x2
#define _PORTC_RC2_SIZE                                     0x1
#define _PORTC_RC2_LENGTH                                   0x1
#define _PORTC_RC2_MASK                                     0x4
#define _PORTC_RC3_POSN                                     0x3
#define _PORTC_RC3_POSITION                                 0x3
#define _PORTC_RC3_SIZE                                     0x1
#define _PORTC_RC3_LENGTH                                   0x1
#define _PORTC_RC3_MASK                                     0x8
#define _PORTC_RC4_POSN                                     0x4
#define _PORTC_RC4_POSITION                                 0x4
#define _PORTC_RC4_SIZE                                     0x1
#define _PORTC_RC4_LENGTH                                   0x1
#define _PORTC_RC4_MASK                                     0x10
#define _PORTC_RC5_POSN                                     0x5
#define _PORTC_RC5_POSITION                                 0x5
#define _PORTC_RC5_SIZE                                     0x1
#define _PORTC_RC5_LENGTH                                   0x1
#define _PORTC_RC5_MASK                                     0x20
#define _PORTC_RC6_POSN                                     0x6
#define _PORTC_RC6_POSITION                                 0x6
#define _PORTC_RC6_SIZE                                     0x1
#define _PORTC_RC6_LENGTH                                   0x1
#define _PORTC_RC6_MASK                                     0x40
#define _PORTC_RC7_POSN                                     0x7
#define _PORTC_RC7_POSITION                                 0x7
#define _PORTC_RC7_SIZE                                     0x1
#define _PORTC_RC7_LENGTH                                   0x1
#define _PORTC_RC7_MASK                                     0x80
#define _PORTC_T1OSO_POSN                                   0x0
#define _PORTC_T1OSO_POSITION                               0x0
#define _PORTC_T1OSO_SIZE                                   0x1
#define _PORTC_T1OSO_LENGTH                                 0x1
#define _PORTC_T1OSO_MASK                                   0x1
#define _PORTC_T1OSI_POSN                                   0x1
#define _PORTC_T1OSI_POSITION                               0x1
#define _PORTC_T1OSI_SIZE                                   0x1
#define _PORTC_T1OSI_LENGTH                                 0x1
#define _PORTC_T1OSI_MASK                                   0x2
#define _PORTC_SCK_POSN                                     0x3
#define _PORTC_SCK_POSITION                                 0x3
#define _PORTC_SCK_SIZE                                     0x1
#define _PORTC_SCK_LENGTH                                   0x1
#define _PORTC_SCK_MASK                                     0x8
#define _PORTC_SDI_POSN                                     0x4
#define _PORTC_SDI_POSITION                                 0x4
#define _PORTC_SDI_SIZE                                     0x1
#define _PORTC_SDI_LENGTH                                   0x1
#define _PORTC_SDI_MASK                                     0x10
#define _PORTC_SDO_POSN                                     0x5
#define _PORTC_SDO_POSITION                                 0x5
#define _PORTC_SDO_SIZE                                     0x1
#define _PORTC_SDO_LENGTH                                   0x1
#define _PORTC_SDO_MASK                                     0x20
#define _PORTC_TX_POSN                                      0x6
#define _PORTC_TX_POSITION                                  0x6
#define _PORTC_TX_SIZE                                      0x1
#define _PORTC_TX_LENGTH                                    0x1
#define _PORTC_TX_MASK                                      0x40
#define _PORTC_RX_POSN                                      0x7
#define _PORTC_RX_POSITION                                  0x7
#define _PORTC_RX_SIZE                                      0x1
#define _PORTC_RX_LENGTH                                    0x1
#define _PORTC_RX_MASK                                      0x80
#define _PORTC_T1CKI_POSN                                   0x0
#define _PORTC_T1CKI_POSITION                               0x0
#define _PORTC_T1CKI_SIZE                                   0x1
#define _PORTC_T1CKI_LENGTH                                 0x1
#define _PORTC_T1CKI_MASK                                   0x1
#define _PORTC_CCP1_POSN                                    0x2
#define _PORTC_CCP1_POSITION                                0x2
#define _PORTC_CCP1_SIZE                                    0x1
#define _PORTC_CCP1_LENGTH                                  0x1
#define _PORTC_CCP1_MASK                                    0x4
#define _PORTC_SCL_POSN                                     0x3
#define _PORTC_SCL_POSITION                                 0x3
#define _PORTC_SCL_SIZE                                     0x1
#define _PORTC_SCL_LENGTH                                   0x1
#define _PORTC_SCL_MASK                                     0x8
#define _PORTC_SDA_POSN                                     0x4
#define _PORTC_SDA_POSITION                                 0x4
#define _PORTC_SDA_SIZE                                     0x1
#define _PORTC_SDA_LENGTH                                   0x1
#define _PORTC_SDA_MASK                                     0x10
#define _PORTC_CK_POSN                                      0x6
#define _PORTC_CK_POSITION                                  0x6
#define _PORTC_CK_SIZE                                      0x1
#define _PORTC_CK_LENGTH                                    0x1
#define _PORTC_CK_MASK                                      0x40
#define _PORTC_DT_POSN                                      0x7
#define _PORTC_DT_POSITION                                  0x7
#define _PORTC_DT_SIZE                                      0x1
#define _PORTC_DT_LENGTH                                    0x1
#define _PORTC_DT_MASK                                      0x80
#define _PORTC_CCP2_POSN                                    0x1
#define _PORTC_CCP2_POSITION                                0x1
#define _PORTC_CCP2_SIZE                                    0x1
#define _PORTC_CCP2_LENGTH                                  0x1
#define _PORTC_CCP2_MASK                                    0x2
#define _PORTC_PA1_POSN                                     0x2
#define _PORTC_PA1_POSITION                                 0x2
#define _PORTC_PA1_SIZE                                     0x1
#define _PORTC_PA1_LENGTH                                   0x1
#define _PORTC_PA1_MASK                                     0x4
#define _PORTC_PA2_POSN                                     0x1
#define _PORTC_PA2_POSITION                                 0x1
#define _PORTC_PA2_SIZE                                     0x1
#define _PORTC_PA2_LENGTH                                   0x1
#define _PORTC_PA2_MASK                                     0x2

// Register: LATA
#define LATA LATA
extern volatile unsigned char           LATA                __at(0xF89);
#ifndef _LIB_BUILD
asm("LATA equ 0F89h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATA0                  :1;
        unsigned LATA1                  :1;
        unsigned LATA2                  :1;
        unsigned LATA3                  :1;
        unsigned LATA4                  :1;
        unsigned LATA5                  :1;
        unsigned LATA6                  :1;
    };
    struct {
        unsigned LA0                    :1;
        unsigned LA1                    :1;
        unsigned LA2                    :1;
        unsigned LA3                    :1;
        unsigned LA4                    :1;
        unsigned LA5                    :1;
        unsigned LA6                    :1;
    };
} LATAbits_t;
extern volatile LATAbits_t LATAbits __at(0xF89);
// bitfield macros
#define _LATA_LATA0_POSN                                    0x0
#define _LATA_LATA0_POSITION                                0x0
#define _LATA_LATA0_SIZE                                    0x1
#define _LATA_LATA0_LENGTH                                  0x1
#define _LATA_LATA0_MASK                                    0x1
#define _LATA_LATA1_POSN                                    0x1
#define _LATA_LATA1_POSITION                                0x1
#define _LATA_LATA1_SIZE                                    0x1
#define _LATA_LATA1_LENGTH                                  0x1
#define _LATA_LATA1_MASK                                    0x2
#define _LATA_LATA2_POSN                                    0x2
#define _LATA_LATA2_POSITION                                0x2
#define _LATA_LATA2_SIZE                                    0x1
#define _LATA_LATA2_LENGTH                                  0x1
#define _LATA_LATA2_MASK                                    0x4
#define _LATA_LATA3_POSN                                    0x3
#define _LATA_LATA3_POSITION                                0x3
#define _LATA_LATA3_SIZE                                    0x1
#define _LATA_LATA3_LENGTH                                  0x1
#define _LATA_LATA3_MASK                                    0x8
#define _LATA_LATA4_POSN                                    0x4
#define _LATA_LATA4_POSITION                                0x4
#define _LATA_LATA4_SIZE                                    0x1
#define _LATA_LATA4_LENGTH                                  0x1
#define _LATA_LATA4_MASK                                    0x10
#define _LATA_LATA5_POSN                                    0x5
#define _LATA_LATA5_POSITION                                0x5
#define _LATA_LATA5_SIZE                                    0x1
#define _LATA_LATA5_LENGTH                                  0x1
#define _LATA_LATA5_MASK                                    0x20
#define _LATA_LATA6_POSN                                    0x6
#define _LATA_LATA6_POSITION                                0x6
#define _LATA_LATA6_SIZE                                    0x1
#define _LATA_LATA6_LENGTH                                  0x1
#define _LATA_LATA6_MASK                                    0x40
#define _LATA_LA0_POSN                                      0x0
#define _LATA_LA0_POSITION                                  0x0
#define _LATA_LA0_SIZE                                      0x1
#define _LATA_LA0_LENGTH                                    0x1
#define _LATA_LA0_MASK                                      0x1
#define _LATA_LA1_POSN                                      0x1
#define _LATA_LA1_POSITION                                  0x1
#define _LATA_LA1_SIZE                                      0x1
#define _LATA_LA1_LENGTH                                    0x1
#define _LATA_LA1_MASK                                      0x2
#define _LATA_LA2_POSN                                      0x2
#define _LATA_LA2_POSITION                                  0x2
#define _LATA_LA2_SIZE                                      0x1
#define _LATA_LA2_LENGTH                                    0x1
#define _LATA_LA2_MASK                                      0x4
#define _LATA_LA3_POSN                                      0x3
#define _LATA_LA3_POSITION                                  0x3
#define _LATA_LA3_SIZE                                      0x1
#define _LATA_LA3_LENGTH                                    0x1
#define _LATA_LA3_MASK                                      0x8
#define _LATA_LA4_POSN                                      0x4
#define _LATA_LA4_POSITION                                  0x4
#define _LATA_LA4_SIZE                                      0x1
#define _LATA_LA4_LENGTH                                    0x1
#define _LATA_LA4_MASK                                      0x10
#define _LATA_LA5_POSN                                      0x5
#define _LATA_LA5_POSITION                                  0x5
#define _LATA_LA5_SIZE                                      0x1
#define _LATA_LA5_LENGTH                                    0x1
#define _LATA_LA5_MASK                                      0x20
#define _LATA_LA6_POSN                                      0x6
#define _LATA_LA6_POSITION                                  0x6
#define _LATA_LA6_SIZE                                      0x1
#define _LATA_LA6_LENGTH                                    0x1
#define _LATA_LA6_MASK                                      0x40

// Register: LATB
#define LATB LATB
extern volatile unsigned char           LATB                __at(0xF8A);
#ifndef _LIB_BUILD
asm("LATB equ 0F8Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATB0                  :1;
        unsigned LATB1                  :1;
        unsigned LATB2                  :1;
        unsigned LATB3                  :1;
        unsigned LATB4                  :1;
        unsigned LATB5                  :1;
        unsigned LATB6                  :1;
        unsigned LATB7                  :1;
    };
    struct {
        unsigned LB0                    :1;
        unsigned LB1                    :1;
        unsigned LB2                    :1;
        unsigned LB3                    :1;
        unsigned LB4                    :1;
        unsigned LB5                    :1;
        unsigned LB6                    :1;
        unsigned LB7                    :1;
    };
} LATBbits_t;
extern volatile LATBbits_t LATBbits __at(0xF8A);
// bitfield macros
#define _LATB_LATB0_POSN                                    0x0
#define _LATB_LATB0_POSITION                                0x0
#define _LATB_LATB0_SIZE                                    0x1
#define _LATB_LATB0_LENGTH                                  0x1
#define _LATB_LATB0_MASK                                    0x1
#define _LATB_LATB1_POSN                                    0x1
#define _LATB_LATB1_POSITION                                0x1
#define _LATB_LATB1_SIZE                                    0x1
#define _LATB_LATB1_LENGTH                                  0x1
#define _LATB_LATB1_MASK                                    0x2
#define _LATB_LATB2_POSN                                    0x2
#define _LATB_LATB2_POSITION                                0x2
#define _LATB_LATB2_SIZE                                    0x1
#define _LATB_LATB2_LENGTH                                  0x1
#define _LATB_LATB2_MASK                                    0x4
#define _LATB_LATB3_POSN                                    0x3
#define _LATB_LATB3_POSITION                                0x3
#define _LATB_LATB3_SIZE                                    0x1
#define _LATB_LATB3_LENGTH                                  0x1
#define _LATB_LATB3_MASK                                    0x8
#define _LATB_LATB4_POSN                                    0x4
#define _LATB_LATB4_POSITION                                0x4
#define _LATB_LATB4_SIZE                                    0x1
#define _LATB_LATB4_LENGTH                                  0x1
#define _LATB_LATB4_MASK                                    0x10
#define _LATB_LATB5_POSN                                    0x5
#define _LATB_LATB5_POSITION                                0x5
#define _LATB_LATB5_SIZE                                    0x1
#define _LATB_LATB5_LENGTH                                  0x1
#define _LATB_LATB5_MASK                                    0x20
#define _LATB_LATB6_POSN                                    0x6
#define _LATB_LATB6_POSITION                                0x6
#define _LATB_LATB6_SIZE                                    0x1
#define _LATB_LATB6_LENGTH                                  0x1
#define _LATB_LATB6_MASK                                    0x40
#define _LATB_LATB7_POSN                                    0x7
#define _LATB_LATB7_POSITION                                0x7
#define _LATB_LATB7_SIZE                                    0x1
#define _LATB_LATB7_LENGTH                                  0x1
#define _LATB_LATB7_MASK                                    0x80
#define _LATB_LB0_POSN                                      0x0
#define _LATB_LB0_POSITION                                  0x0
#define _LATB_LB0_SIZE                                      0x1
#define _LATB_LB0_LENGTH                                    0x1
#define _LATB_LB0_MASK                                      0x1
#define _LATB_LB1_POSN                                      0x1
#define _LATB_LB1_POSITION                                  0x1
#define _LATB_LB1_SIZE                                      0x1
#define _LATB_LB1_LENGTH                                    0x1
#define _LATB_LB1_MASK                                      0x2
#define _LATB_LB2_POSN                                      0x2
#define _LATB_LB2_POSITION                                  0x2
#define _LATB_LB2_SIZE                                      0x1
#define _LATB_LB2_LENGTH                                    0x1
#define _LATB_LB2_MASK                                      0x4
#define _LATB_LB3_POSN                                      0x3
#define _LATB_LB3_POSITION                                  0x3
#define _LATB_LB3_SIZE                                      0x1
#define _LATB_LB3_LENGTH                                    0x1
#define _LATB_LB3_MASK                                      0x8
#define _LATB_LB4_POSN                                      0x4
#define _LATB_LB4_POSITION                                  0x4
#define _LATB_LB4_SIZE                                      0x1
#define _LATB_LB4_LENGTH                                    0x1
#define _LATB_LB4_MASK                                      0x10
#define _LATB_LB5_POSN                                      0x5
#define _LATB_LB5_POSITION                                  0x5
#define _LATB_LB5_SIZE                                      0x1
#define _LATB_LB5_LENGTH                                    0x1
#define _LATB_LB5_MASK                                      0x20
#define _LATB_LB6_POSN                                      0x6
#define _LATB_LB6_POSITION                                  0x6
#define _LATB_LB6_SIZE                                      0x1
#define _LATB_LB6_LENGTH                                    0x1
#define _LATB_LB6_MASK                                      0x40
#define _LATB_LB7_POSN                                      0x7
#define _LATB_LB7_POSITION                                  0x7
#define _LATB_LB7_SIZE                                      0x1
#define _LATB_LB7_LENGTH                                    0x1
#define _LATB_LB7_MASK                                      0x80

// Register: LATC
#define LATC LATC
extern volatile unsigned char           LATC                __at(0xF8B);
#ifndef _LIB_BUILD
asm("LATC equ 0F8Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATC0                  :1;
        unsigned LATC1                  :1;
        unsigned LATC2                  :1;
        unsigned LATC3                  :1;
        unsigned LATC4                  :1;
        unsigned LATC5                  :1;
        unsigned LATC6                  :1;
        unsigned LATC7                  :1;
    };
    struct {
        unsigned LC0                    :1;
        unsigned LC1                    :1;
        unsigned LC2                    :1;
        unsigned LC3                    :1;
        unsigned LC4                    :1;
        unsigned LC5                    :1;
        unsigned LC6                    :1;
        unsigned LC7                    :1;
    };
} LATCbits_t;
extern volatile LATCbits_t LATCbits __at(0xF8B);
// bitfield macros
#define _LATC_LATC0_POSN                                    0x0
#define _LATC_LATC0_POSITION                                0x0
#define _LATC_LATC0_SIZE                                    0x1
#define _LATC_LATC0_LENGTH                                  0x1
#define _LATC_LATC0_MASK                                    0x1
#define _LATC_LATC1_POSN                                    0x1
#define _LATC_LATC1_POSITION                                0x1
#define _LATC_LATC1_SIZE                                    0x1
#define _LATC_LATC1_LENGTH                                  0x1
#define _LATC_LATC1_MASK                                    0x2
#define _LATC_LATC2_POSN                                    0x2
#define _LATC_LATC2_POSITION                                0x2
#define _LATC_LATC2_SIZE                                    0x1
#define _LATC_LATC2_LENGTH                                  0x1
#define _LATC_LATC2_MASK                                    0x4
#define _LATC_LATC3_POSN                                    0x3
#define _LATC_LATC3_POSITION                                0x3
#define _LATC_LATC3_SIZE                                    0x1
#define _LATC_LATC3_LENGTH                                  0x1
#define _LATC_LATC3_MASK                                    0x8
#define _LATC_LATC4_POSN                                    0x4
#define _LATC_LATC4_POSITION                                0x4
#define _LATC_LATC4_SIZE                                    0x1
#define _LATC_LATC4_LENGTH                                  0x1
#define _LATC_LATC4_MASK                                    0x10
#define _LATC_LATC5_POSN                                    0x5
#define _LATC_LATC5_POSITION                                0x5
#define _LATC_LATC5_SIZE                                    0x1
#define _LATC_LATC5_LENGTH                                  0x1
#define _LATC_LATC5_MASK                                    0x20
#define _LATC_LATC6_POSN                                    0x6
#define _LATC_LATC6_POSITION                                0x6
#define _LATC_LATC6_SIZE                                    0x1
#define _LATC_LATC6_LENGTH                                  0x1
#define _LATC_LATC6_MASK                                    0x40
#define _LATC_LATC7_POSN                                    0x7
#define _LATC_LATC7_POSITION                                0x7
#define _LATC_LATC7_SIZE                                    0x1
#define _LATC_LATC7_LENGTH                                  0x1
#define _LATC_LATC7_MASK                                    0x80
#define _LATC_LC0_POSN                                      0x0
#define _LATC_LC0_POSITION                                  0x0
#define _LATC_LC0_SIZE                                      0x1
#define _LATC_LC0_LENGTH                                    0x1
#define _LATC_LC0_MASK                                      0x1
#define _LATC_LC1_POSN                                      0x1
#define _LATC_LC1_POSITION                                  0x1
#define _LATC_LC1_SIZE                                      0x1
#define _LATC_LC1_LENGTH                                    0x1
#define _LATC_LC1_MASK                                      0x2
#define _LATC_LC2_POSN                                      0x2
#define _LATC_LC2_POSITION                                  0x2
#define _LATC_LC2_SIZE                                      0x1
#define _LATC_LC2_LENGTH                                    0x1
#define _LATC_LC2_MASK                                      0x4
#define _LATC_LC3_POSN                                      0x3
#define _LATC_LC3_POSITION                                  0x3
#define _LATC_LC3_SIZE                                      0x1
#define _LATC_LC3_LENGTH                                    0x1
#define _LATC_LC3_MASK                                      0x8
#define _LATC_LC4_POSN                                      0x4
#define _LATC_LC4_POSITION                                  0x4
#define _LATC_LC4_SIZE                                      0x1
#define _LATC_LC4_LENGTH                                    0x1
#define _LATC_LC4_MASK                                      0x10
#define _LATC_LC5_POSN                                      0x5
#define _LATC_LC5_POSITION                                  0x5
#define _LATC_LC5_SIZE                                      0x1
#define _LATC_LC5_LENGTH                                    0x1
#define _LATC_LC5_MASK                                      0x20
#define _LATC_LC6_POSN                                      0x6
#define _LATC_LC6_POSITION                                  0x6
#define _LATC_LC6_SIZE                                      0x1
#define _LATC_LC6_LENGTH                                    0x1
#define _LATC_LC6_MASK                                      0x40
#define _LATC_LC7_POSN                                      0x7
#define _LATC_LC7_POSITION                                  0x7
#define _LATC_LC7_SIZE                                      0x1
#define _LATC_LC7_LENGTH                                    0x1
#define _LATC_LC7_MASK                                      0x80

// Register: TRISA
#define TRISA TRISA
extern volatile unsigned char           TRISA               __at(0xF92);
#ifndef _LIB_BUILD
asm("TRISA equ 0F92h");
#endif
// aliases
extern volatile unsigned char           DDRA                __at(0xF92);
#ifndef _LIB_BUILD
asm("DDRA equ 0F92h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISA0                 :1;
        unsigned TRISA1                 :1;
        unsigned TRISA2                 :1;
        unsigned TRISA3                 :1;
        unsigned TRISA4                 :1;
        unsigned TRISA5                 :1;
        unsigned TRISA6                 :1;
    };
    struct {
        unsigned RA0                    :1;
        unsigned RA1                    :1;
        unsigned RA2                    :1;
        unsigned RA3                    :1;
        unsigned RA4                    :1;
        unsigned RA5                    :1;
        unsigned RA6                    :1;
    };
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits __at(0xF92);
// bitfield macros
#define _TRISA_TRISA0_POSN                                  0x0
#define _TRISA_TRISA0_POSITION                              0x0
#define _TRISA_TRISA0_SIZE                                  0x1
#define _TRISA_TRISA0_LENGTH                                0x1
#define _TRISA_TRISA0_MASK                                  0x1
#define _TRISA_TRISA1_POSN                                  0x1
#define _TRISA_TRISA1_POSITION                              0x1
#define _TRISA_TRISA1_SIZE                                  0x1
#define _TRISA_TRISA1_LENGTH                                0x1
#define _TRISA_TRISA1_MASK                                  0x2
#define _TRISA_TRISA2_POSN                                  0x2
#define _TRISA_TRISA2_POSITION                              0x2
#define _TRISA_TRISA2_SIZE                                  0x1
#define _TRISA_TRISA2_LENGTH                                0x1
#define _TRISA_TRISA2_MASK                                  0x4
#define _TRISA_TRISA3_POSN                                  0x3
#define _TRISA_TRISA3_POSITION                              0x3
#define _TRISA_TRISA3_SIZE                                  0x1
#define _TRISA_TRISA3_LENGTH                                0x1
#define _TRISA_TRISA3_MASK                                  0x8
#define _TRISA_TRISA4_POSN                                  0x4
#define _TRISA_TRISA4_POSITION                              0x4
#define _TRISA_TRISA4_SIZE                                  0x1
#define _TRISA_TRISA4_LENGTH                                0x1
#define _TRISA_TRISA4_MASK                                  0x10
#define _TRISA_TRISA5_POSN                                  0x5
#define _TRISA_TRISA5_POSITION                              0x5
#define _TRISA_TRISA5_SIZE                                  0x1
#define _TRISA_TRISA5_LENGTH                                0x1
#define _TRISA_TRISA5_MASK                                  0x20
#define _TRISA_TRISA6_POSN                                  0x6
#define _TRISA_TRISA6_POSITION                              0x6
#define _TRISA_TRISA6_SIZE                                  0x1
#define _TRISA_TRISA6_LENGTH                                0x1
#define _TRISA_TRISA6_MASK                                  0x40
#define _TRISA_RA0_POSN                                     0x0
#define _TRISA_RA0_POSITION                                 0x0
#define _TRISA_RA0_SIZE                                     0x1
#define _TRISA_RA0_LENGTH                                   0x1
#define _TRISA_RA0_MASK                                     0x1
#define _TRISA_RA1_POSN                                     0x1
#define _TRISA_RA1_POSITION                                 0x1
#define _TRISA_RA1_SIZE                                     0x1
#define _TRISA_RA1_LENGTH                                   0x1
#define _TRISA_RA1_MASK                                     0x2
#define _TRISA_RA2_POSN                                     0x2
#define _TRISA_RA2_POSITION                                 0x2
#define _TRISA_RA2_SIZE                                     0x1
#define _TRISA_RA2_LENGTH                                   0x1
#define _TRISA_RA2_MASK                                     0x4
#define _TRISA_RA3_POSN                                     0x3
#define _TRISA_RA3_POSITION                                 0x3
#define _TRISA_RA3_SIZE                                     0x1
#define _TRISA_RA3_LENGTH                                   0x1
#define _TRISA_RA3_MASK                                     0x8
#define _TRISA_RA4_POSN                                     0x4
#define _TRISA_RA4_POSITION                                 0x4
#define _TRISA_RA4_SIZE                                     0x1
#define _TRISA_RA4_LENGTH                                   0x1
#define _TRISA_RA4_MASK                                     0x10
#define _TRISA_RA5_POSN                                     0x5
#define _TRISA_RA5_POSITION                                 0x5
#define _TRISA_RA5_SIZE                                     0x1
#define _TRISA_RA5_LENGTH                                   0x1
#define _TRISA_RA5_MASK                                     0x20
#define _TRISA_RA6_POSN                                     0x6
#define _TRISA_RA6_POSITION                                 0x6
#define _TRISA_RA6_SIZE                                     0x1
#define _TRISA_RA6_LENGTH                                   0x1
#define _TRISA_RA6_MASK                                     0x40
// alias bitfield definitions
typedef union {
    struct {
        unsigned TRISA0                 :1;
        unsigned TRISA1                 :1;
        unsigned TRISA2                 :1;
        unsigned TRISA3                 :1;
        unsigned TRISA4                 :1;
        unsigned TRISA5                 :1;
        unsigned TRISA6                 :1;
    };
    struct {
        unsigned RA0                    :1;
        unsigned RA1                    :1;
        unsigned RA2                    :1;
        unsigned RA3                    :1;
        unsigned RA4                    :1;
        unsigned RA5                    :1;
        unsigned RA6                    :1;
    };
} DDRAbits_t;
extern volatile DDRAbits_t DDRAbits __at(0xF92);
// bitfield macros
#define _DDRA_TRISA0_POSN                                   0x0
#define _DDRA_TRISA0_POSITION                               0x0
#define _DDRA_TRISA0_SIZE                                   0x1
#define _DDRA_TRISA0_LENGTH                                 0x1
#define _DDRA_TRISA0_MASK                                   0x1
#define _DDRA_TRISA1_POSN                                   0x1
#define _DDRA_TRISA1_POSITION                               0x1
#define _DDRA_TRISA1_SIZE                                   0x1
#define _DDRA_TRISA1_LENGTH                                 0x1
#define _DDRA_TRISA1_MASK                                   0x2
#define _DDRA_TRISA2_POSN                                   0x2
#define _DDRA_TRISA2_POSITION                               0x2
#define _DDRA_TRISA2_SIZE                                   0x1
#define _DDRA_TRISA2_LENGTH                                 0x1
#define _DDRA_TRISA2_MASK                                   0x4
#define _DDRA_TRISA3_POSN                                   0x3
#define _DDRA_TRISA3_POSITION                               0x3
#define _DDRA_TRISA3_SIZE                                   0x1
#define _DDRA_TRISA3_LENGTH                                 0x1
#define _DDRA_TRISA3_MASK                                   0x8
#define _DDRA_TRISA4_POSN                                   0x4
#define _DDRA_TRISA4_POSITION                               0x4
#define _DDRA_TRISA4_SIZE                                   0x1
#define _DDRA_TRISA4_LENGTH                                 0x1
#define _DDRA_TRISA4_MASK                                   0x10
#define _DDRA_TRISA5_POSN                                   0x5
#define _DDRA_TRISA5_POSITION                               0x5
#define _DDRA_TRISA5_SIZE                                   0x1
#define _DDRA_TRISA5_LENGTH                                 0x1
#define _DDRA_TRISA5_MASK                                   0x20
#define _DDRA_TRISA6_POSN                                   0x6
#define _DDRA_TRISA6_POSITION                               0x6
#define _DDRA_TRISA6_SIZE                                   0x1
#define _DDRA_TRISA6_LENGTH                                 0x1
#define _DDRA_TRISA6_MASK                                   0x40
#define _DDRA_RA0_POSN                                      0x0
#define _DDRA_RA0_POSITION                                  0x0
#define _DDRA_RA0_SIZE                                      0x1
#define _DDRA_RA0_LENGTH                                    0x1
#define _DDRA_RA0_MASK                                      0x1
#define _DDRA_RA1_POSN                                      0x1
#define _DDRA_RA1_POSITION                                  0x1
#define _DDRA_RA1_SIZE                                      0x1
#define _DDRA_RA1_LENGTH                                    0x1
#define _DDRA_RA1_MASK                                      0x2
#define _DDRA_RA2_POSN                                      0x2
#define _DDRA_RA2_POSITION                                  0x2
#define _DDRA_RA2_SIZE                                      0x1
#define _DDRA_RA2_LENGTH                                    0x1
#define _DDRA_RA2_MASK                                      0x4
#define _DDRA_RA3_POSN                                      0x3
#define _DDRA_RA3_POSITION                                  0x3
#define _DDRA_RA3_SIZE                                      0x1
#define _DDRA_RA3_LENGTH                                    0x1
#define _DDRA_RA3_MASK                                      0x8
#define _DDRA_RA4_POSN                                      0x4
#define _DDRA_RA4_POSITION                                  0x4
#define _DDRA_RA4_SIZE                                      0x1
#define _DDRA_RA4_LENGTH                                    0x1
#define _DDRA_RA4_MASK                                      0x10
#define _DDRA_RA5_POSN                                      0x5
#define _DDRA_RA5_POSITION                                  0x5
#define _DDRA_RA5_SIZE                                      0x1
#define _DDRA_RA5_LENGTH                                    0x1
#define _DDRA_RA5_MASK                                      0x20
#define _DDRA_RA6_POSN                                      0x6
#define _DDRA_RA6_POSITION                                  0x6
#define _DDRA_RA6_SIZE                                      0x1
#define _DDRA_RA6_LENGTH                                    0x1
#define _DDRA_RA6_MASK                                      0x40

// Register: TRISB
#define TRISB TRISB
extern volatile unsigned char           TRISB               __at(0xF93);
#ifndef _LIB_BUILD
asm("TRISB equ 0F93h");
#endif
// aliases
extern volatile unsigned char           DDRB                __at(0xF93);
#ifndef _LIB_BUILD
asm("DDRB equ 0F93h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISB0                 :1;
        unsigned TRISB1                 :1;
        unsigned TRISB2                 :1;
        unsigned TRISB3                 :1;
        unsigned TRISB4                 :1;
        unsigned TRISB5                 :1;
        unsigned TRISB6                 :1;
        unsigned TRISB7                 :1;
    };
    struct {
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RB2                    :1;
        unsigned RB3                    :1;
        unsigned RB4                    :1;
        unsigned RB5                    :1;
        unsigned RB6                    :1;
        unsigned RB7                    :1;
    };
} TRISBbits_t;
extern volatile TRISBbits_t TRISBbits __at(0xF93);
// bitfield macros
#define _TRISB_TRISB0_POSN                                  0x0
#define _TRISB_TRISB0_POSITION                              0x0
#define _TRISB_TRISB0_SIZE                                  0x1
#define _TRISB_TRISB0_LENGTH                                0x1
#define _TRISB_TRISB0_MASK                                  0x1
#define _TRISB_TRISB1_POSN                                  0x1
#define _TRISB_TRISB1_POSITION                              0x1
#define _TRISB_TRISB1_SIZE                                  0x1
#define _TRISB_TRISB1_LENGTH                                0x1
#define _TRISB_TRISB1_MASK                                  0x2
#define _TRISB_TRISB2_POSN                                  0x2
#define _TRISB_TRISB2_POSITION                              0x2
#define _TRISB_TRISB2_SIZE                                  0x1
#define _TRISB_TRISB2_LENGTH                                0x1
#define _TRISB_TRISB2_MASK                                  0x4
#define _TRISB_TRISB3_POSN                                  0x3
#define _TRISB_TRISB3_POSITION                              0x3
#define _TRISB_TRISB3_SIZE                                  0x1
#define _TRISB_TRISB3_LENGTH                                0x1
#define _TRISB_TRISB3_MASK                                  0x8
#define _TRISB_TRISB4_POSN                                  0x4
#define _TRISB_TRISB4_POSITION                              0x4
#define _TRISB_TRISB4_SIZE                                  0x1
#define _TRISB_TRISB4_LENGTH                                0x1
#define _TRISB_TRISB4_MASK                                  0x10
#define _TRISB_TRISB5_POSN                                  0x5
#define _TRISB_TRISB5_POSITION                              0x5
#define _TRISB_TRISB5_SIZE                                  0x1
#define _TRISB_TRISB5_LENGTH                                0x1
#define _TRISB_TRISB5_MASK                                  0x20
#define _TRISB_TRISB6_POSN                                  0x6
#define _TRISB_TRISB6_POSITION                              0x6
#define _TRISB_TRISB6_SIZE                                  0x1
#define _TRISB_TRISB6_LENGTH                                0x1
#define _TRISB_TRISB6_MASK                                  0x40
#define _TRISB_TRISB7_POSN                                  0x7
#define _TRISB_TRISB7_POSITION                              0x7
#define _TRISB_TRISB7_SIZE                                  0x1
#define _TRISB_TRISB7_LENGTH                                0x1
#define _TRISB_TRISB7_MASK                                  0x80
#define _TRISB_RB0_POSN                                     0x0
#define _TRISB_RB0_POSITION                                 0x0
#define _TRISB_RB0_SIZE                                     0x1
#define _TRISB_RB0_LENGTH                                   0x1
#define _TRISB_RB0_MASK                                     0x1
#define _TRISB_RB1_POSN                                     0x1
#define _TRISB_RB1_POSITION                                 0x1
#define _TRISB_RB1_SIZE                                     0x1
#define _TRISB_RB1_LENGTH                                   0x1
#define _TRISB_RB1_MASK                                     0x2
#define _TRISB_RB2_POSN                                     0x2
#define _TRISB_RB2_POSITION                                 0x2
#define _TRISB_RB2_SIZE                                     0x1
#define _TRISB_RB2_LENGTH                                   0x1
#define _TRISB_RB2_MASK                                     0x4
#define _TRISB_RB3_POSN                                     0x3
#define _TRISB_RB3_POSITION                                 0x3
#define _TRISB_RB3_SIZE                                     0x1
#define _TRISB_RB3_LENGTH                                   0x1
#define _TRISB_RB3_MASK                                     0x8
#define _TRISB_RB4_POSN                                     0x4
#define _TRISB_RB4_POSITION                                 0x4
#define _TRISB_RB4_SIZE                                     0x1
#define _TRISB_RB4_LENGTH                                   0x1
#define _TRISB_RB4_MASK                                     0x10
#define _TRISB_RB5_POSN                                     0x5
#define _TRISB_RB5_POSITION                                 0x5
#define _TRISB_RB5_SIZE                                     0x1
#define _TRISB_RB5_LENGTH                                   0x1
#define _TRISB_RB5_MASK                                     0x20
#define _TRISB_RB6_POSN                                     0x6
#define _TRISB_RB6_POSITION                                 0x6
#define _TRISB_RB6_SIZE                                     0x1
#define _TRISB_RB6_LENGTH                                   0x1
#define _TRISB_RB6_MASK                                     0x40
#define _TRISB_RB7_POSN                                     0x7
#define _TRISB_RB7_POSITION                                 0x7
#define _TRISB_RB7_SIZE                                     0x1
#define _TRISB_RB7_LENGTH                                   0x1
#define _TRISB_RB7_MASK                                     0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TRISB0                 :1;
        unsigned TRISB1                 :1;
        unsigned TRISB2                 :1;
        unsigned TRISB3                 :1;
        unsigned TRISB4                 :1;
        unsigned TRISB5                 :1;
        unsigned TRISB6                 :1;
        unsigned TRISB7                 :1;
    };
    struct {
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RB2                    :1;
        unsigned RB3                    :1;
        unsigned RB4                    :1;
        unsigned RB5                    :1;
        unsigned RB6                    :1;
        unsigned RB7                    :1;
    };
} DDRBbits_t;
extern volatile DDRBbits_t DDRBbits __at(0xF93);
// bitfield macros
#define _DDRB_TRISB0_POSN                                   0x0
#define _DDRB_TRISB0_POSITION                               0x0
#define _DDRB_TRISB0_SIZE                                   0x1
#define _DDRB_TRISB0_LENGTH                                 0x1
#define _DDRB_TRISB0_MASK                                   0x1
#define _DDRB_TRISB1_POSN                                   0x1
#define _DDRB_TRISB1_POSITION                               0x1
#define _DDRB_TRISB1_SIZE                                   0x1
#define _DDRB_TRISB1_LENGTH                                 0x1
#define _DDRB_TRISB1_MASK                                   0x2
#define _DDRB_TRISB2_POSN                                   0x2
#define _DDRB_TRISB2_POSITION                               0x2
#define _DDRB_TRISB2_SIZE                                   0x1
#define _DDRB_TRISB2_LENGTH                                 0x1
#define _DDRB_TRISB2_MASK                                   0x4
#define _DDRB_TRISB3_POSN                                   0x3
#define _DDRB_TRISB3_POSITION                               0x3
#define _DDRB_TRISB3_SIZE                                   0x1
#define _DDRB_TRISB3_LENGTH                                 0x1
#define _DDRB_TRISB3_MASK                                   0x8
#define _DDRB_TRISB4_POSN                                   0x4
#define _DDRB_TRISB4_POSITION                               0x4
#define _DDRB_TRISB4_SIZE                                   0x1
#define _DDRB_TRISB4_LENGTH                                 0x1
#define _DDRB_TRISB4_MASK                                   0x10
#define _DDRB_TRISB5_POSN                                   0x5
#define _DDRB_TRISB5_POSITION                               0x5
#define _DDRB_TRISB5_SIZE                                   0x1
#define _DDRB_TRISB5_LENGTH                                 0x1
#define _DDRB_TRISB5_MASK                                   0x20
#define _DDRB_TRISB6_POSN                                   0x6
#define _DDRB_TRISB6_POSITION                               0x6
#define _DDRB_TRISB6_SIZE                                   0x1
#define _DDRB_TRISB6_LENGTH                                 0x1
#define _DDRB_TRISB6_MASK                                   0x40
#define _DDRB_TRISB7_POSN                                   0x7
#define _DDRB_TRISB7_POSITION                               0x7
#define _DDRB_TRISB7_SIZE                                   0x1
#define _DDRB_TRISB7_LENGTH                                 0x1
#define _DDRB_TRISB7_MASK                                   0x80
#define _DDRB_RB0_POSN                                      0x0
#define _DDRB_RB0_POSITION                                  0x0
#define _DDRB_RB0_SIZE                                      0x1
#define _DDRB_RB0_LENGTH                                    0x1
#define _DDRB_RB0_MASK                                      0x1
#define _DDRB_RB1_POSN                                      0x1
#define _DDRB_RB1_POSITION                                  0x1
#define _DDRB_RB1_SIZE                                      0x1
#define _DDRB_RB1_LENGTH                                    0x1
#define _DDRB_RB1_MASK                                      0x2
#define _DDRB_RB2_POSN                                      0x2
#define _DDRB_RB2_POSITION                                  0x2
#define _DDRB_RB2_SIZE                                      0x1
#define _DDRB_RB2_LENGTH                                    0x1
#define _DDRB_RB2_MASK                                      0x4
#define _DDRB_RB3_POSN                                      0x3
#define _DDRB_RB3_POSITION                                  0x3
#define _DDRB_RB3_SIZE                                      0x1
#define _DDRB_RB3_LENGTH                                    0x1
#define _DDRB_RB3_MASK                                      0x8
#define _DDRB_RB4_POSN                                      0x4
#define _DDRB_RB4_POSITION                                  0x4
#define _DDRB_RB4_SIZE                                      0x1
#define _DDRB_RB4_LENGTH                                    0x1
#define _DDRB_RB4_MASK                                      0x10
#define _DDRB_RB5_POSN                                      0x5
#define _DDRB_RB5_POSITION                                  0x5
#define _DDRB_RB5_SIZE                                      0x1
#define _DDRB_RB5_LENGTH                                    0x1
#define _DDRB_RB5_MASK                                      0x20
#define _DDRB_RB6_POSN                                      0x6
#define _DDRB_RB6_POSITION                                  0x6
#define _DDRB_RB6_SIZE                                      0x1
#define _DDRB_RB6_LENGTH                                    0x1
#define _DDRB_RB6_MASK                                      0x40
#define _DDRB_RB7_POSN                                      0x7
#define _DDRB_RB7_POSITION                                  0x7
#define _DDRB_RB7_SIZE                                      0x1
#define _DDRB_RB7_LENGTH                                    0x1
#define _DDRB_RB7_MASK                                      0x80

// Register: TRISC
#define TRISC TRISC
extern volatile unsigned char           TRISC               __at(0xF94);
#ifndef _LIB_BUILD
asm("TRISC equ 0F94h");
#endif
// aliases
extern volatile unsigned char           DDRC                __at(0xF94);
#ifndef _LIB_BUILD
asm("DDRC equ 0F94h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISC0                 :1;
        unsigned TRISC1                 :1;
        unsigned TRISC2                 :1;
        unsigned TRISC3                 :1;
        unsigned TRISC4                 :1;
        unsigned TRISC5                 :1;
        unsigned TRISC6                 :1;
        unsigned TRISC7                 :1;
    };
    struct {
        unsigned RC0                    :1;
        unsigned RC1                    :1;
        unsigned RC2                    :1;
        unsigned RC3                    :1;
        unsigned RC4                    :1;
        unsigned RC5                    :1;
        unsigned RC6                    :1;
        unsigned RC7                    :1;
    };
} TRISCbits_t;
extern volatile TRISCbits_t TRISCbits __at(0xF94);
// bitfield macros
#define _TRISC_TRISC0_POSN                                  0x0
#define _TRISC_TRISC0_POSITION                              0x0
#define _TRISC_TRISC0_SIZE                                  0x1
#define _TRISC_TRISC0_LENGTH                                0x1
#define _TRISC_TRISC0_MASK                                  0x1
#define _TRISC_TRISC1_POSN                                  0x1
#define _TRISC_TRISC1_POSITION                              0x1
#define _TRISC_TRISC1_SIZE                                  0x1
#define _TRISC_TRISC1_LENGTH                                0x1
#define _TRISC_TRISC1_MASK                                  0x2
#define _TRISC_TRISC2_POSN                                  0x2
#define _TRISC_TRISC2_POSITION                              0x2
#define _TRISC_TRISC2_SIZE                                  0x1
#define _TRISC_TRISC2_LENGTH                                0x1
#define _TRISC_TRISC2_MASK                                  0x4
#define _TRISC_TRISC3_POSN                                  0x3
#define _TRISC_TRISC3_POSITION                              0x3
#define _TRISC_TRISC3_SIZE                                  0x1
#define _TRISC_TRISC3_LENGTH                                0x1
#define _TRISC_TRISC3_MASK                                  0x8
#define _TRISC_TRISC4_POSN                                  0x4
#define _TRISC_TRISC4_POSITION                              0x4
#define _TRISC_TRISC4_SIZE                                  0x1
#define _TRISC_TRISC4_LENGTH                                0x1
#define _TRISC_TRISC4_MASK                                  0x10
#define _TRISC_TRISC5_POSN                                  0x5
#define _TRISC_TRISC5_POSITION                              0x5
#define _TRISC_TRISC5_SIZE                                  0x1
#define _TRISC_TRISC5_LENGTH                                0x1
#define _TRISC_TRISC5_MASK                                  0x20
#define _TRISC_TRISC6_POSN                                  0x6
#define _TRISC_TRISC6_POSITION                              0x6
#define _TRISC_TRISC6_SIZE                                  0x1
#define _TRISC_TRISC6_LENGTH                                0x1
#define _TRISC_TRISC6_MASK                                  0x40
#define _TRISC_TRISC7_POSN                                  0x7
#define _TRISC_TRISC7_POSITION                              0x7
#define _TRISC_TRISC7_SIZE                                  0x1
#define _TRISC_TRISC7_LENGTH                                0x1
#define _TRISC_TRISC7_MASK                                  0x80
#define _TRISC_RC0_POSN                                     0x0
#define _TRISC_RC0_POSITION                                 0x0
#define _TRISC_RC0_SIZE                                     0x1
#define _TRISC_RC0_LENGTH                                   0x1
#define _TRISC_RC0_MASK                                     0x1
#define _TRISC_RC1_POSN                                     0x1
#define _TRISC_RC1_POSITION                                 0x1
#define _TRISC_RC1_SIZE                                     0x1
#define _TRISC_RC1_LENGTH                                   0x1
#define _TRISC_RC1_MASK                                     0x2
#define _TRISC_RC2_POSN                                     0x2
#define _TRISC_RC2_POSITION                                 0x2
#define _TRISC_RC2_SIZE                                     0x1
#define _TRISC_RC2_LENGTH                                   0x1
#define _TRISC_RC2_MASK                                     0x4
#define _TRISC_RC3_POSN                                     0x3
#define _TRISC_RC3_POSITION                                 0x3
#define _TRISC_RC3_SIZE                                     0x1
#define _TRISC_RC3_LENGTH                                   0x1
#define _TRISC_RC3_MASK                                     0x8
#define _TRISC_RC4_POSN                                     0x4
#define _TRISC_RC4_POSITION                                 0x4
#define _TRISC_RC4_SIZE                                     0x1
#define _TRISC_RC4_LENGTH                                   0x1
#define _TRISC_RC4_MASK                                     0x10
#define _TRISC_RC5_POSN                                     0x5
#define _TRISC_RC5_POSITION                                 0x5
#define _TRISC_RC5_SIZE                                     0x1
#define _TRISC_RC5_LENGTH                                   0x1
#define _TRISC_RC5_MASK                                     0x20
#define _TRISC_RC6_POSN                                     0x6
#define _TRISC_RC6_POSITION                                 0x6
#define _TRISC_RC6_SIZE                                     0x1
#define _TRISC_RC6_LENGTH                                   0x1
#define _TRISC_RC6_MASK                                     0x40
#define _TRISC_RC7_POSN                                     0x7
#define _TRISC_RC7_POSITION                                 0x7
#define _TRISC_RC7_SIZE                                     0x1
#define _TRISC_RC7_LENGTH                                   0x1
#define _TRISC_RC7_MASK                                     0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TRISC0                 :1;
        unsigned TRISC1                 :1;
        unsigned TRISC2                 :1;
        unsigned TRISC3                 :1;
        unsigned TRISC4                 :1;
        unsigned TRISC5                 :1;
        unsigned TRISC6                 :1;
        unsigned TRISC7                 :1;
    };
    struct {
        unsigned RC0                    :1;
        unsigned RC1                    :1;
        unsigned RC2                    :1;
        unsigned RC3                    :1;
        unsigned RC4                    :1;
        unsigned RC5                    :1;
        unsigned RC6                    :1;
        unsigned RC7                    :1;
    };
} DDRCbits_t;
extern volatile DDRCbits_t DDRCbits __at(0xF94);
// bitfield macros
#define _DDRC_TRISC0_POSN                                   0x0
#define _DDRC_TRISC0_POSITION                               0x0
#define _DDRC_TRISC0_SIZE                                   0x1
#define _DDRC_TRISC0_LENGTH                                 0x1
#define _DDRC_TRISC0_MASK                                   0x1
#define _DDRC_TRISC1_POSN                                   0x1
#define _DDRC_TRISC1_POSITION                               0x1
#define _DDRC_TRISC1_SIZE                                   0x1
#define _DDRC_TRISC1_LENGTH                                 0x1
#define _DDRC_TRISC1_MASK                                   0x2
#define _DDRC_TRISC2_POSN                                   0x2
#define _DDRC_TRISC2_POSITION                               0x2
#define _DDRC_TRISC2_SIZE                                   0x1
#define _DDRC_TRISC2_LENGTH                                 0x1
#define _DDRC_TRISC2_MASK                                   0x4
#define _DDRC_TRISC3_POSN                                   0x3
#define _DDRC_TRISC3_POSITION                               0x3
#define _DDRC_TRISC3_SIZE                                   0x1
#define _DDRC_TRISC3_LENGTH                                 0x1
#define _DDRC_TRISC3_MASK                                   0x8
#define _DDRC_TRISC4_POSN                                   0x4
#define _DDRC_TRISC4_POSITION                               0x4
#define _DDRC_TRISC4_SIZE                                   0x1
#define _DDRC_TRISC4_LENGTH                                 0x1
#define _DDRC_TRISC4_MASK                                   0x10
#define _DDRC_TRISC5_POSN                                   0x5
#define _DDRC_TRISC5_POSITION                               0x5
#define _DDRC_TRISC5_SIZE                                   0x1
#define _DDRC_TRISC5_LENGTH                                 0x1
#define _DDRC_TRISC5_MASK                                   0x20
#define _DDRC_TRISC6_POSN                                   0x6
#define _DDRC_TRISC6_POSITION                               0x6
#define _DDRC_TRISC6_SIZE                                   0x1
#define _DDRC_TRISC6_LENGTH                                 0x1
#define _DDRC_TRISC6_MASK                                   0x40
#define _DDRC_TRISC7_POSN                                   0x7
#define _DDRC_TRISC7_POSITION                               0x7
#define _DDRC_TRISC7_SIZE                                   0x1
#define _DDRC_TRISC7_LENGTH                                 0x1
#define _DDRC_TRISC7_MASK                                   0x80
#define _DDRC_RC0_POSN                                      0x0
#define _DDRC_RC0_POSITION                                  0x0
#define _DDRC_RC0_SIZE                                      0x1
#define _DDRC_RC0_LENGTH                                    0x1
#define _DDRC_RC0_MASK                                      0x1
#define _DDRC_RC1_POSN                                      0x1
#define _DDRC_RC1_POSITION                                  0x1
#define _DDRC_RC1_SIZE                                      0x1
#define _DDRC_RC1_LENGTH                                    0x1
#define _DDRC_RC1_MASK                                      0x2
#define _DDRC_RC2_POSN                                      0x2
#define _DDRC_RC2_POSITION                                  0x2
#define _DDRC_RC2_SIZE                                      0x1
#define _DDRC_RC2_LENGTH                                    0x1
#define _DDRC_RC2_MASK                                      0x4
#define _DDRC_RC3_POSN                                      0x3
#define _DDRC_RC3_POSITION                                  0x3
#define _DDRC_RC3_SIZE                                      0x1
#define _DDRC_RC3_LENGTH                                    0x1
#define _DDRC_RC3_MASK                                      0x8
#define _DDRC_RC4_POSN                                      0x4
#define _DDRC_RC4_POSITION                                  0x4
#define _DDRC_RC4_SIZE                                      0x1
#define _DDRC_RC4_LENGTH                                    0x1
#define _DDRC_RC4_MASK                                      0x10
#define _DDRC_RC5_POSN                                      0x5
#define _DDRC_RC5_POSITION                                  0x5
#define _DDRC_RC5_SIZE                                      0x1
#define _DDRC_RC5_LENGTH                                    0x1
#define _DDRC_RC5_MASK                                      0x20
#define _DDRC_RC6_POSN                                      0x6
#define _DDRC_RC6_POSITION                                  0x6
#define _DDRC_RC6_SIZE                                      0x1
#define _DDRC_RC6_LENGTH                                    0x1
#define _DDRC_RC6_MASK                                      0x40
#define _DDRC_RC7_POSN                                      0x7
#define _DDRC_RC7_POSITION                                  0x7
#define _DDRC_RC7_SIZE                                      0x1
#define _DDRC_RC7_LENGTH                                    0x1
#define _DDRC_RC7_MASK                                      0x80

// Register: PIE1
#define PIE1 PIE1
extern volatile unsigned char           PIE1                __at(0xF9D);
#ifndef _LIB_BUILD
asm("PIE1 equ 0F9Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IE                 :1;
        unsigned TMR2IE                 :1;
        unsigned CCP1IE                 :1;
        unsigned SSPIE                  :1;
        unsigned TXIE                   :1;
        unsigned RCIE                   :1;
        unsigned ADIE                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned TX1IE                  :1;
        unsigned RC1IE                  :1;
    };
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits __at(0xF9D);
// bitfield macros
#define _PIE1_TMR1IE_POSN                                   0x0
#define _PIE1_TMR1IE_POSITION                               0x0
#define _PIE1_TMR1IE_SIZE                                   0x1
#define _PIE1_TMR1IE_LENGTH                                 0x1
#define _PIE1_TMR1IE_MASK                                   0x1
#define _PIE1_TMR2IE_POSN                                   0x1
#define _PIE1_TMR2IE_POSITION                               0x1
#define _PIE1_TMR2IE_SIZE                                   0x1
#define _PIE1_TMR2IE_LENGTH                                 0x1
#define _PIE1_TMR2IE_MASK                                   0x2
#define _PIE1_CCP1IE_POSN                                   0x2
#define _PIE1_CCP1IE_POSITION                               0x2
#define _PIE1_CCP1IE_SIZE                                   0x1
#define _PIE1_CCP1IE_LENGTH                                 0x1
#define _PIE1_CCP1IE_MASK                                   0x4
#define _PIE1_SSPIE_POSN                                    0x3
#define _PIE1_SSPIE_POSITION                                0x3
#define _PIE1_SSPIE_SIZE                                    0x1
#define _PIE1_SSPIE_LENGTH                                  0x1
#define _PIE1_SSPIE_MASK                                    0x8
#define _PIE1_TXIE_POSN                                     0x4
#define _PIE1_TXIE_POSITION                                 0x4
#define _PIE1_TXIE_SIZE                                     0x1
#define _PIE1_TXIE_LENGTH                                   0x1
#define _PIE1_TXIE_MASK                                     0x10
#define _PIE1_RCIE_POSN                                     0x5
#define _PIE1_RCIE_POSITION                                 0x5
#define _PIE1_RCIE_SIZE                                     0x1
#define _PIE1_RCIE_LENGTH                                   0x1
#define _PIE1_RCIE_MASK                                     0x20
#define _PIE1_ADIE_POSN                                     0x6
#define _PIE1_ADIE_POSITION                                 0x6
#define _PIE1_ADIE_SIZE                                     0x1
#define _PIE1_ADIE_LENGTH                                   0x1
#define _PIE1_ADIE_MASK                                     0x40
#define _PIE1_TX1IE_POSN                                    0x4
#define _PIE1_TX1IE_POSITION                                0x4
#define _PIE1_TX1IE_SIZE                                    0x1
#define _PIE1_TX1IE_LENGTH                                  0x1
#define _PIE1_TX1IE_MASK                                    0x10
#define _PIE1_RC1IE_POSN                                    0x5
#define _PIE1_RC1IE_POSITION                                0x5
#define _PIE1_RC1IE_SIZE                                    0x1
#define _PIE1_RC1IE_LENGTH                                  0x1
#define _PIE1_RC1IE_MASK                                    0x20

// Register: PIR1
#define PIR1 PIR1
extern volatile unsigned char           PIR1                __at(0xF9E);
#ifndef _LIB_BUILD
asm("PIR1 equ 0F9Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IF                 :1;
        unsigned TMR2IF                 :1;
        unsigned CCP1IF                 :1;
        unsigned SSPIF                  :1;
        unsigned TXIF                   :1;
        unsigned RCIF                   :1;
        unsigned ADIF                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned TX1IF                  :1;
        unsigned RC1IF                  :1;
    };
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits __at(0xF9E);
// bitfield macros
#define _PIR1_TMR1IF_POSN                                   0x0
#define _PIR1_TMR1IF_POSITION                               0x0
#define _PIR1_TMR1IF_SIZE                                   0x1
#define _PIR1_TMR1IF_LENGTH                                 0x1
#define _PIR1_TMR1IF_MASK                                   0x1
#define _PIR1_TMR2IF_POSN                                   0x1
#define _PIR1_TMR2IF_POSITION                               0x1
#define _PIR1_TMR2IF_SIZE                                   0x1
#define _PIR1_TMR2IF_LENGTH                                 0x1
#define _PIR1_TMR2IF_MASK                                   0x2
#define _PIR1_CCP1IF_POSN                                   0x2
#define _PIR1_CCP1IF_POSITION                               0x2
#define _PIR1_CCP1IF_SIZE                                   0x1
#define _PIR1_CCP1IF_LENGTH                                 0x1
#define _PIR1_CCP1IF_MASK                                   0x4
#define _PIR1_SSPIF_POSN                                    0x3
#define _PIR1_SSPIF_POSITION                                0x3
#define _PIR1_SSPIF_SIZE                                    0x1
#define _PIR1_SSPIF_LENGTH                                  0x1
#define _PIR1_SSPIF_MASK                                    0x8
#define _PIR1_TXIF_POSN                                     0x4
#define _PIR1_TXIF_POSITION                                 0x4
#define _PIR1_TXIF_SIZE                                     0x1
#define _PIR1_TXIF_LENGTH                                   0x1
#define _PIR1_TXIF_MASK                                     0x10
#define _PIR1_RCIF_POSN                                     0x5
#define _PIR1_RCIF_POSITION                                 0x5
#define _PIR1_RCIF_SIZE                                     0x1
#define _PIR1_RCIF_LENGTH                                   0x1
#define _PIR1_RCIF_MASK                                     0x20
#define _PIR1_ADIF_POSN                                     0x6
#define _PIR1_ADIF_POSITION                                 0x6
#define _PIR1_ADIF_SIZE                                     0x1
#define _PIR1_ADIF_LENGTH                                   0x1
#define _PIR1_ADIF_MASK                                     0x40
#define _PIR1_TX1IF_POSN                                    0x4
#define _PIR1_TX1IF_POSITION                                0x4
#define _PIR1_TX1IF_SIZE                                    0x1
#define _PIR1_TX1IF_LENGTH                                  0x1
#define _PIR1_TX1IF_MASK                                    0x10
#define _PIR1_RC1IF_POSN                                    0x5
#define _PIR1_RC1IF_POSITION                                0x5
#define _PIR1_RC1IF_SIZE                                    0x1
#define _PIR1_RC1IF_LENGTH                                  0x1
#define _PIR1_RC1IF_MASK                                    0x20

// Register: IPR1
#define IPR1 IPR1
extern volatile unsigned char           IPR1                __at(0xF9F);
#ifndef _LIB_BUILD
asm("IPR1 equ 0F9Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IP                 :1;
        unsigned TMR2IP                 :1;
        unsigned CCP1IP                 :1;
        unsigned SSPIP                  :1;
        unsigned TXIP                   :1;
        unsigned RCIP                   :1;
        unsigned ADIP                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned TX1IP                  :1;
        unsigned RC1IP                  :1;
    };
} IPR1bits_t;
extern volatile IPR1bits_t IPR1bits __at(0xF9F);
// bitfield macros
#define _IPR1_TMR1IP_POSN                                   0x0
#define _IPR1_TMR1IP_POSITION                               0x0
#define _IPR1_TMR1IP_SIZE                                   0x1
#define _IPR1_TMR1IP_LENGTH                                 0x1
#define _IPR1_TMR1IP_MASK                                   0x1
#define _IPR1_TMR2IP_POSN                                   0x1
#define _IPR1_TMR2IP_POSITION                               0x1
#define _IPR1_TMR2IP_SIZE                                   0x1
#define _IPR1_TMR2IP_LENGTH                                 0x1
#define _IPR1_TMR2IP_MASK                                   0x2
#define _IPR1_CCP1IP_POSN                                   0x2
#define _IPR1_CCP1IP_POSITION                               0x2
#define _IPR1_CCP1IP_SIZE                                   0x1
#define _IPR1_CCP1IP_LENGTH                                 0x1
#define _IPR1_CCP1IP_MASK                                   0x4
#define _IPR1_SSPIP_POSN                                    0x3
#define _IPR1_SSPIP_POSITION                                0x3
#define _IPR1_SSPIP_SIZE                                    0x1
#define _IPR1_SSPIP_LENGTH                                  0x1
#define _IPR1_SSPIP_MASK                                    0x8
#define _IPR1_TXIP_POSN                                     0x4
#define _IPR1_TXIP_POSITION                                 0x4
#define _IPR1_TXIP_SIZE                                     0x1
#define _IPR1_TXIP_LENGTH                                   0x1
#define _IPR1_TXIP_MASK                                     0x10
#define _IPR1_RCIP_POSN                                     0x5
#define _IPR1_RCIP_POSITION                                 0x5
#define _IPR1_RCIP_SIZE                                     0x1
#define _IPR1_RCIP_LENGTH                                   0x1
#define _IPR1_RCIP_MASK                                     0x20
#define _IPR1_ADIP_POSN                                     0x6
#define _IPR1_ADIP_POSITION                                 0x6
#define _IPR1_ADIP_SIZE                                     0x1
#define _IPR1_ADIP_LENGTH                                   0x1
#define _IPR1_ADIP_MASK                                     0x40
#define _IPR1_TX1IP_POSN                                    0x4
#define _IPR1_TX1IP_POSITION                                0x4
#define _IPR1_TX1IP_SIZE                                    0x1
#define _IPR1_TX1IP_LENGTH                                  0x1
#define _IPR1_TX1IP_MASK                                    0x10
#define _IPR1_RC1IP_POSN                                    0x5
#define _IPR1_RC1IP_POSITION                                0x5
#define _IPR1_RC1IP_SIZE                                    0x1
#define _IPR1_RC1IP_LENGTH                                  0x1
#define _IPR1_RC1IP_MASK                                    0x20

// Register: PIE2
#define PIE2 PIE2
extern volatile unsigned char           PIE2                __at(0xFA0);
#ifndef _LIB_BUILD
asm("PIE2 equ 0FA0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned TMR3IE                 :1;
        unsigned LVDIE                  :1;
        unsigned BCLIE                  :1;
        unsigned EEIE                   :1;
    };
} PIE2bits_t;
extern volatile PIE2bits_t PIE2bits __at(0xFA0);
// bitfield macros
#define _PIE2_TMR3IE_POSN                                   0x1
#define _PIE2_TMR3IE_POSITION                               0x1
#define _PIE2_TMR3IE_SIZE                                   0x1
#define _PIE2_TMR3IE_LENGTH                                 0x1
#define _PIE2_TMR3IE_MASK                                   0x2
#define _PIE2_LVDIE_POSN                                    0x2
#define _PIE2_LVDIE_POSITION                                0x2
#define _PIE2_LVDIE_SIZE                                    0x1
#define _PIE2_LVDIE_LENGTH                                  0x1
#define _PIE2_LVDIE_MASK                                    0x4
#define _PIE2_BCLIE_POSN                                    0x3
#define _PIE2_BCLIE_POSITION                                0x3
#define _PIE2_BCLIE_SIZE                                    0x1
#define _PIE2_BCLIE_LENGTH                                  0x1
#define _PIE2_BCLIE_MASK                                    0x8
#define _PIE2_EEIE_POSN                                     0x4
#define _PIE2_EEIE_POSITION                                 0x4
#define _PIE2_EEIE_SIZE                                     0x1
#define _PIE2_EEIE_LENGTH                                   0x1
#define _PIE2_EEIE_MASK                                     0x10

// Register: PIR2
#define PIR2 PIR2
extern volatile unsigned char           PIR2                __at(0xFA1);
#ifndef _LIB_BUILD
asm("PIR2 equ 0FA1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned TMR3IF                 :1;
        unsigned LVDIF                  :1;
        unsigned BCLIF                  :1;
        unsigned EEIF                   :1;
    };
} PIR2bits_t;
extern volatile PIR2bits_t PIR2bits __at(0xFA1);
// bitfield macros
#define _PIR2_TMR3IF_POSN                                   0x1
#define _PIR2_TMR3IF_POSITION                               0x1
#define _PIR2_TMR3IF_SIZE                                   0x1
#define _PIR2_TMR3IF_LENGTH                                 0x1
#define _PIR2_TMR3IF_MASK                                   0x2
#define _PIR2_LVDIF_POSN                                    0x2
#define _PIR2_LVDIF_POSITION                                0x2
#define _PIR2_LVDIF_SIZE                                    0x1
#define _PIR2_LVDIF_LENGTH                                  0x1
#define _PIR2_LVDIF_MASK                                    0x4
#define _PIR2_BCLIF_POSN                                    0x3
#define _PIR2_BCLIF_POSITION                                0x3
#define _PIR2_BCLIF_SIZE                                    0x1
#define _PIR2_BCLIF_LENGTH                                  0x1
#define _PIR2_BCLIF_MASK                                    0x8
#define _PIR2_EEIF_POSN                                     0x4
#define _PIR2_EEIF_POSITION                                 0x4
#define _PIR2_EEIF_SIZE                                     0x1
#define _PIR2_EEIF_LENGTH                                   0x1
#define _PIR2_EEIF_MASK                                     0x10

// Register: IPR2
#define IPR2 IPR2
extern volatile unsigned char           IPR2                __at(0xFA2);
#ifndef _LIB_BUILD
asm("IPR2 equ 0FA2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned TMR3IP                 :1;
        unsigned LVDIP                  :1;
        unsigned BCLIP                  :1;
        unsigned EEIP                   :1;
    };
} IPR2bits_t;
extern volatile IPR2bits_t IPR2bits __at(0xFA2);
// bitfield macros
#define _IPR2_TMR3IP_POSN                                   0x1
#define _IPR2_TMR3IP_POSITION                               0x1
#define _IPR2_TMR3IP_SIZE                                   0x1
#define _IPR2_TMR3IP_LENGTH                                 0x1
#define _IPR2_TMR3IP_MASK                                   0x2
#define _IPR2_LVDIP_POSN                                    0x2
#define _IPR2_LVDIP_POSITION                                0x2
#define _IPR2_LVDIP_SIZE                                    0x1
#define _IPR2_LVDIP_LENGTH                                  0x1
#define _IPR2_LVDIP_MASK                                    0x4
#define _IPR2_BCLIP_POSN                                    0x3
#define _IPR2_BCLIP_POSITION                                0x3
#define _IPR2_BCLIP_SIZE                                    0x1
#define _IPR2_BCLIP_LENGTH                                  0x1
#define _IPR2_BCLIP_MASK                                    0x8
#define _IPR2_EEIP_POSN                                     0x4
#define _IPR2_EEIP_POSITION                                 0x4
#define _IPR2_EEIP_SIZE                                     0x1
#define _IPR2_EEIP_LENGTH                                   0x1
#define _IPR2_EEIP_MASK                                     0x10

// Register: PIE3
#define PIE3 PIE3
extern volatile unsigned char           PIE3                __at(0xFA3);
#ifndef _LIB_BUILD
asm("PIE3 equ 0FA3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0IE                 :1;
        unsigned RXB1IE                 :1;
        unsigned TXB0IE                 :1;
        unsigned TXB1IE                 :1;
        unsigned TXB2IE                 :1;
        unsigned ERRIE                  :1;
        unsigned WAKIE                  :1;
        unsigned IRXIE                  :1;
    };
    struct {
        unsigned RX0IE                  :1;
        unsigned RX1IE                  :1;
        unsigned TX0IE                  :1;
        unsigned TX1IE                  :1;
        unsigned TX2IE                  :1;
        unsigned                        :2;
        unsigned IVRE                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIE                 :1;
        unsigned                        :2;
        unsigned TXBNIE                 :1;
    };
} PIE3bits_t;
extern volatile PIE3bits_t PIE3bits __at(0xFA3);
// bitfield macros
#define _PIE3_RXB0IE_POSN                                   0x0
#define _PIE3_RXB0IE_POSITION                               0x0
#define _PIE3_RXB0IE_SIZE                                   0x1
#define _PIE3_RXB0IE_LENGTH                                 0x1
#define _PIE3_RXB0IE_MASK                                   0x1
#define _PIE3_RXB1IE_POSN                                   0x1
#define _PIE3_RXB1IE_POSITION                               0x1
#define _PIE3_RXB1IE_SIZE                                   0x1
#define _PIE3_RXB1IE_LENGTH                                 0x1
#define _PIE3_RXB1IE_MASK                                   0x2
#define _PIE3_TXB0IE_POSN                                   0x2
#define _PIE3_TXB0IE_POSITION                               0x2
#define _PIE3_TXB0IE_SIZE                                   0x1
#define _PIE3_TXB0IE_LENGTH                                 0x1
#define _PIE3_TXB0IE_MASK                                   0x4
#define _PIE3_TXB1IE_POSN                                   0x3
#define _PIE3_TXB1IE_POSITION                               0x3
#define _PIE3_TXB1IE_SIZE                                   0x1
#define _PIE3_TXB1IE_LENGTH                                 0x1
#define _PIE3_TXB1IE_MASK                                   0x8
#define _PIE3_TXB2IE_POSN                                   0x4
#define _PIE3_TXB2IE_POSITION                               0x4
#define _PIE3_TXB2IE_SIZE                                   0x1
#define _PIE3_TXB2IE_LENGTH                                 0x1
#define _PIE3_TXB2IE_MASK                                   0x10
#define _PIE3_ERRIE_POSN                                    0x5
#define _PIE3_ERRIE_POSITION                                0x5
#define _PIE3_ERRIE_SIZE                                    0x1
#define _PIE3_ERRIE_LENGTH                                  0x1
#define _PIE3_ERRIE_MASK                                    0x20
#define _PIE3_WAKIE_POSN                                    0x6
#define _PIE3_WAKIE_POSITION                                0x6
#define _PIE3_WAKIE_SIZE                                    0x1
#define _PIE3_WAKIE_LENGTH                                  0x1
#define _PIE3_WAKIE_MASK                                    0x40
#define _PIE3_IRXIE_POSN                                    0x7
#define _PIE3_IRXIE_POSITION                                0x7
#define _PIE3_IRXIE_SIZE                                    0x1
#define _PIE3_IRXIE_LENGTH                                  0x1
#define _PIE3_IRXIE_MASK                                    0x80
#define _PIE3_RX0IE_POSN                                    0x0
#define _PIE3_RX0IE_POSITION                                0x0
#define _PIE3_RX0IE_SIZE                                    0x1
#define _PIE3_RX0IE_LENGTH                                  0x1
#define _PIE3_RX0IE_MASK                                    0x1
#define _PIE3_RX1IE_POSN                                    0x1
#define _PIE3_RX1IE_POSITION                                0x1
#define _PIE3_RX1IE_SIZE                                    0x1
#define _PIE3_RX1IE_LENGTH                                  0x1
#define _PIE3_RX1IE_MASK                                    0x2
#define _PIE3_TX0IE_POSN                                    0x2
#define _PIE3_TX0IE_POSITION                                0x2
#define _PIE3_TX0IE_SIZE                                    0x1
#define _PIE3_TX0IE_LENGTH                                  0x1
#define _PIE3_TX0IE_MASK                                    0x4
#define _PIE3_TX1IE_POSN                                    0x3
#define _PIE3_TX1IE_POSITION                                0x3
#define _PIE3_TX1IE_SIZE                                    0x1
#define _PIE3_TX1IE_LENGTH                                  0x1
#define _PIE3_TX1IE_MASK                                    0x8
#define _PIE3_TX2IE_POSN                                    0x4
#define _PIE3_TX2IE_POSITION                                0x4
#define _PIE3_TX2IE_SIZE                                    0x1
#define _PIE3_TX2IE_LENGTH                                  0x1
#define _PIE3_TX2IE_MASK                                    0x10
#define _PIE3_IVRE_POSN                                     0x7
#define _PIE3_IVRE_POSITION                                 0x7
#define _PIE3_IVRE_SIZE                                     0x1
#define _PIE3_IVRE_LENGTH                                   0x1
#define _PIE3_IVRE_MASK                                     0x80
#define _PIE3_RXBNIE_POSN                                   0x1
#define _PIE3_RXBNIE_POSITION                               0x1
#define _PIE3_RXBNIE_SIZE                                   0x1
#define _PIE3_RXBNIE_LENGTH                                 0x1
#define _PIE3_RXBNIE_MASK                                   0x2
#define _PIE3_TXBNIE_POSN                                   0x4
#define _PIE3_TXBNIE_POSITION                               0x4
#define _PIE3_TXBNIE_SIZE                                   0x1
#define _PIE3_TXBNIE_LENGTH                                 0x1
#define _PIE3_TXBNIE_MASK                                   0x10

// Register: PIR3
#define PIR3 PIR3
extern volatile unsigned char           PIR3                __at(0xFA4);
#ifndef _LIB_BUILD
asm("PIR3 equ 0FA4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0IF                 :1;
        unsigned RXB1IF                 :1;
        unsigned TXB0IF                 :1;
        unsigned TXB1IF                 :1;
        unsigned TXB2IF                 :1;
        unsigned ERRIF                  :1;
        unsigned WAKIF                  :1;
        unsigned IRXIF                  :1;
    };
    struct {
        unsigned RX0IF                  :1;
        unsigned RX1IF                  :1;
        unsigned TX0IF                  :1;
        unsigned TX1IF                  :1;
        unsigned TX2IF                  :1;
        unsigned                        :2;
        unsigned IVRF                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIF                 :1;
        unsigned                        :2;
        unsigned TXBNIF                 :1;
    };
} PIR3bits_t;
extern volatile PIR3bits_t PIR3bits __at(0xFA4);
// bitfield macros
#define _PIR3_RXB0IF_POSN                                   0x0
#define _PIR3_RXB0IF_POSITION                               0x0
#define _PIR3_RXB0IF_SIZE                                   0x1
#define _PIR3_RXB0IF_LENGTH                                 0x1
#define _PIR3_RXB0IF_MASK                                   0x1
#define _PIR3_RXB1IF_POSN                                   0x1
#define _PIR3_RXB1IF_POSITION                               0x1
#define _PIR3_RXB1IF_SIZE                                   0x1
#define _PIR3_RXB1IF_LENGTH                                 0x1
#define _PIR3_RXB1IF_MASK                                   0x2
#define _PIR3_TXB0IF_POSN                                   0x2
#define _PIR3_TXB0IF_POSITION                               0x2
#define _PIR3_TXB0IF_SIZE                                   0x1
#define _PIR3_TXB0IF_LENGTH                                 0x1
#define _PIR3_TXB0IF_MASK                                   0x4
#define _PIR3_TXB1IF_POSN                                   0x3
#define _PIR3_TXB1IF_POSITION                               0x3
#define _PIR3_TXB1IF_SIZE                                   0x1
#define _PIR3_TXB1IF_LENGTH                                 0x1
#define _PIR3_TXB1IF_MASK                                   0x8
#define _PIR3_TXB2IF_POSN                                   0x4
#define _PIR3_TXB2IF_POSITION                               0x4
#define _PIR3_TXB2IF_SIZE                                   0x1
#define _PIR3_TXB2IF_LENGTH                                 0x1
#define _PIR3_TXB2IF_MASK                                   0x10
#define _PIR3_ERRIF_POSN                                    0x5
#define _PIR3_ERRIF_POSITION                                0x5
#define _PIR3_ERRIF_SIZE                                    0x1
#define _PIR3_ERRIF_LENGTH                                  0x1
#define _PIR3_ERRIF_MASK                                    0x20
#define _PIR3_WAKIF_POSN                                    0x6
#define _PIR3_WAKIF_POSITION                                0x6
#define _PIR3_WAKIF_SIZE                                    0x1
#define _PIR3_WAKIF_LENGTH                                  0x1
#define _PIR3_WAKIF_MASK                                    0x40
#define _PIR3_IRXIF_POSN                                    0x7
#define _PIR3_IRXIF_POSITION                                0x7
#define _PIR3_IRXIF_SIZE                                    0x1
#define _PIR3_IRXIF_LENGTH                                  0x1
#define _PIR3_IRXIF_MASK                                    0x80
#define _PIR3_RX0IF_POSN                                    0x0
#define _PIR3_RX0IF_POSITION                                0x0
#define _PIR3_RX0IF_SIZE                                    0x1
#define _PIR3_RX0IF_LENGTH                                  0x1
#define _PIR3_RX0IF_MASK                                    0x1
#define _PIR3_RX1IF_POSN                                    0x1
#define _PIR3_RX1IF_POSITION                                0x1
#define _PIR3_RX1IF_SIZE                                    0x1
#define _PIR3_RX1IF_LENGTH                                  0x1
#define _PIR3_RX1IF_MASK                                    0x2
#define _PIR3_TX0IF_POSN                                    0x2
#define _PIR3_TX0IF_POSITION                                0x2
#define _PIR3_TX0IF_SIZE                                    0x1
#define _PIR3_TX0IF_LENGTH                                  0x1
#define _PIR3_TX0IF_MASK                                    0x4
#define _PIR3_TX1IF_POSN                                    0x3
#define _PIR3_TX1IF_POSITION                                0x3
#define _PIR3_TX1IF_SIZE                                    0x1
#define _PIR3_TX1IF_LENGTH                                  0x1
#define _PIR3_TX1IF_MASK                                    0x8
#define _PIR3_TX2IF_POSN                                    0x4
#define _PIR3_TX2IF_POSITION                                0x4
#define _PIR3_TX2IF_SIZE                                    0x1
#define _PIR3_TX2IF_LENGTH                                  0x1
#define _PIR3_TX2IF_MASK                                    0x10
#define _PIR3_IVRF_POSN                                     0x7
#define _PIR3_IVRF_POSITION                                 0x7
#define _PIR3_IVRF_SIZE                                     0x1
#define _PIR3_IVRF_LENGTH                                   0x1
#define _PIR3_IVRF_MASK                                     0x80
#define _PIR3_RXBNIF_POSN                                   0x1
#define _PIR3_RXBNIF_POSITION                               0x1
#define _PIR3_RXBNIF_SIZE                                   0x1
#define _PIR3_RXBNIF_LENGTH                                 0x1
#define _PIR3_RXBNIF_MASK                                   0x2
#define _PIR3_TXBNIF_POSN                                   0x4
#define _PIR3_TXBNIF_POSITION                               0x4
#define _PIR3_TXBNIF_SIZE                                   0x1
#define _PIR3_TXBNIF_LENGTH                                 0x1
#define _PIR3_TXBNIF_MASK                                   0x10

// Register: IPR3
#define IPR3 IPR3
extern volatile unsigned char           IPR3                __at(0xFA5);
#ifndef _LIB_BUILD
asm("IPR3 equ 0FA5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0IP                 :1;
        unsigned RXB1IP                 :1;
        unsigned TXB0IP                 :1;
        unsigned TXB1IP                 :1;
        unsigned TXB2IP                 :1;
        unsigned ERRIP                  :1;
        unsigned WAKIP                  :1;
        unsigned IRXIP                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned IVRP                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIP                 :1;
        unsigned                        :2;
        unsigned TXBNIP                 :1;
    };
} IPR3bits_t;
extern volatile IPR3bits_t IPR3bits __at(0xFA5);
// bitfield macros
#define _IPR3_RXB0IP_POSN                                   0x0
#define _IPR3_RXB0IP_POSITION                               0x0
#define _IPR3_RXB0IP_SIZE                                   0x1
#define _IPR3_RXB0IP_LENGTH                                 0x1
#define _IPR3_RXB0IP_MASK                                   0x1
#define _IPR3_RXB1IP_POSN                                   0x1
#define _IPR3_RXB1IP_POSITION                               0x1
#define _IPR3_RXB1IP_SIZE                                   0x1
#define _IPR3_RXB1IP_LENGTH                                 0x1
#define _IPR3_RXB1IP_MASK                                   0x2
#define _IPR3_TXB0IP_POSN                                   0x2
#define _IPR3_TXB0IP_POSITION                               0x2
#define _IPR3_TXB0IP_SIZE                                   0x1
#define _IPR3_TXB0IP_LENGTH                                 0x1
#define _IPR3_TXB0IP_MASK                                   0x4
#define _IPR3_TXB1IP_POSN                                   0x3
#define _IPR3_TXB1IP_POSITION                               0x3
#define _IPR3_TXB1IP_SIZE                                   0x1
#define _IPR3_TXB1IP_LENGTH                                 0x1
#define _IPR3_TXB1IP_MASK                                   0x8
#define _IPR3_TXB2IP_POSN                                   0x4
#define _IPR3_TXB2IP_POSITION                               0x4
#define _IPR3_TXB2IP_SIZE                                   0x1
#define _IPR3_TXB2IP_LENGTH                                 0x1
#define _IPR3_TXB2IP_MASK                                   0x10
#define _IPR3_ERRIP_POSN                                    0x5
#define _IPR3_ERRIP_POSITION                                0x5
#define _IPR3_ERRIP_SIZE                                    0x1
#define _IPR3_ERRIP_LENGTH                                  0x1
#define _IPR3_ERRIP_MASK                                    0x20
#define _IPR3_WAKIP_POSN                                    0x6
#define _IPR3_WAKIP_POSITION                                0x6
#define _IPR3_WAKIP_SIZE                                    0x1
#define _IPR3_WAKIP_LENGTH                                  0x1
#define _IPR3_WAKIP_MASK                                    0x40
#define _IPR3_IRXIP_POSN                                    0x7
#define _IPR3_IRXIP_POSITION                                0x7
#define _IPR3_IRXIP_SIZE                                    0x1
#define _IPR3_IRXIP_LENGTH                                  0x1
#define _IPR3_IRXIP_MASK                                    0x80
#define _IPR3_IVRP_POSN                                     0x7
#define _IPR3_IVRP_POSITION                                 0x7
#define _IPR3_IVRP_SIZE                                     0x1
#define _IPR3_IVRP_LENGTH                                   0x1
#define _IPR3_IVRP_MASK                                     0x80
#define _IPR3_RXBNIP_POSN                                   0x1
#define _IPR3_RXBNIP_POSITION                               0x1
#define _IPR3_RXBNIP_SIZE                                   0x1
#define _IPR3_RXBNIP_LENGTH                                 0x1
#define _IPR3_RXBNIP_MASK                                   0x2
#define _IPR3_TXBNIP_POSN                                   0x4
#define _IPR3_TXBNIP_POSITION                               0x4
#define _IPR3_TXBNIP_SIZE                                   0x1
#define _IPR3_TXBNIP_LENGTH                                 0x1
#define _IPR3_TXBNIP_MASK                                   0x10

// Register: EECON1
#define EECON1 EECON1
extern volatile unsigned char           EECON1              __at(0xFA6);
#ifndef _LIB_BUILD
asm("EECON1 equ 0FA6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD                     :1;
        unsigned WR                     :1;
        unsigned WREN                   :1;
        unsigned WRERR                  :1;
        unsigned FREE                   :1;
        unsigned                        :1;
        unsigned CFGS                   :1;
        unsigned EEPGD                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned EEFS                   :1;
    };
} EECON1bits_t;
extern volatile EECON1bits_t EECON1bits __at(0xFA6);
// bitfield macros
#define _EECON1_RD_POSN                                     0x0
#define _EECON1_RD_POSITION                                 0x0
#define _EECON1_RD_SIZE                                     0x1
#define _EECON1_RD_LENGTH                                   0x1
#define _EECON1_RD_MASK                                     0x1
#define _EECON1_WR_POSN                                     0x1
#define _EECON1_WR_POSITION                                 0x1
#define _EECON1_WR_SIZE                                     0x1
#define _EECON1_WR_LENGTH                                   0x1
#define _EECON1_WR_MASK                                     0x2
#define _EECON1_WREN_POSN                                   0x2
#define _EECON1_WREN_POSITION                               0x2
#define _EECON1_WREN_SIZE                                   0x1
#define _EECON1_WREN_LENGTH                                 0x1
#define _EECON1_WREN_MASK                                   0x4
#define _EECON1_WRERR_POSN                                  0x3
#define _EECON1_WRERR_POSITION                              0x3
#define _EECON1_WRERR_SIZE                                  0x1
#define _EECON1_WRERR_LENGTH                                0x1
#define _EECON1_WRERR_MASK                                  0x8
#define _EECON1_FREE_POSN                                   0x4
#define _EECON1_FREE_POSITION                               0x4
#define _EECON1_FREE_SIZE                                   0x1
#define _EECON1_FREE_LENGTH                                 0x1
#define _EECON1_FREE_MASK                                   0x10
#define _EECON1_CFGS_POSN                                   0x6
#define _EECON1_CFGS_POSITION                               0x6
#define _EECON1_CFGS_SIZE                                   0x1
#define _EECON1_CFGS_LENGTH                                 0x1
#define _EECON1_CFGS_MASK                                   0x40
#define _EECON1_EEPGD_POSN                                  0x7
#define _EECON1_EEPGD_POSITION                              0x7
#define _EECON1_EEPGD_SIZE                                  0x1
#define _EECON1_EEPGD_LENGTH                                0x1
#define _EECON1_EEPGD_MASK                                  0x80
#define _EECON1_EEFS_POSN                                   0x6
#define _EECON1_EEFS_POSITION                               0x6
#define _EECON1_EEFS_SIZE                                   0x1
#define _EECON1_EEFS_LENGTH                                 0x1
#define _EECON1_EEFS_MASK                                   0x40

// Register: EECON2
#define EECON2 EECON2
extern volatile unsigned char           EECON2              __at(0xFA7);
#ifndef _LIB_BUILD
asm("EECON2 equ 0FA7h");
#endif

// Register: EEDATA
#define EEDATA EEDATA
extern volatile unsigned char           EEDATA              __at(0xFA8);
#ifndef _LIB_BUILD
asm("EEDATA equ 0FA8h");
#endif

// Register: EEADR
#define EEADR EEADR
extern volatile unsigned char           EEADR               __at(0xFA9);
#ifndef _LIB_BUILD
asm("EEADR equ 0FA9h");
#endif

// Register: RCSTA
#define RCSTA RCSTA
extern volatile unsigned char           RCSTA               __at(0xFAB);
#ifndef _LIB_BUILD
asm("RCSTA equ 0FABh");
#endif
// aliases
extern volatile unsigned char           RCSTA1              __at(0xFAB);
#ifndef _LIB_BUILD
asm("RCSTA1 equ 0FABh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
    struct {
        unsigned RCD8                   :1;
        unsigned                        :5;
        unsigned RC9                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC8_9                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_RC8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nRC8                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned SRENA                  :1;
    };
} RCSTAbits_t;
extern volatile RCSTAbits_t RCSTAbits __at(0xFAB);
// bitfield macros
#define _RCSTA_RX9D_POSN                                    0x0
#define _RCSTA_RX9D_POSITION                                0x0
#define _RCSTA_RX9D_SIZE                                    0x1
#define _RCSTA_RX9D_LENGTH                                  0x1
#define _RCSTA_RX9D_MASK                                    0x1
#define _RCSTA_OERR_POSN                                    0x1
#define _RCSTA_OERR_POSITION                                0x1
#define _RCSTA_OERR_SIZE                                    0x1
#define _RCSTA_OERR_LENGTH                                  0x1
#define _RCSTA_OERR_MASK                                    0x2
#define _RCSTA_FERR_POSN                                    0x2
#define _RCSTA_FERR_POSITION                                0x2
#define _RCSTA_FERR_SIZE                                    0x1
#define _RCSTA_FERR_LENGTH                                  0x1
#define _RCSTA_FERR_MASK                                    0x4
#define _RCSTA_ADDEN_POSN                                   0x3
#define _RCSTA_ADDEN_POSITION                               0x3
#define _RCSTA_ADDEN_SIZE                                   0x1
#define _RCSTA_ADDEN_LENGTH                                 0x1
#define _RCSTA_ADDEN_MASK                                   0x8
#define _RCSTA_CREN_POSN                                    0x4
#define _RCSTA_CREN_POSITION                                0x4
#define _RCSTA_CREN_SIZE                                    0x1
#define _RCSTA_CREN_LENGTH                                  0x1
#define _RCSTA_CREN_MASK                                    0x10
#define _RCSTA_SREN_POSN                                    0x5
#define _RCSTA_SREN_POSITION                                0x5
#define _RCSTA_SREN_SIZE                                    0x1
#define _RCSTA_SREN_LENGTH                                  0x1
#define _RCSTA_SREN_MASK                                    0x20
#define _RCSTA_RX9_POSN                                     0x6
#define _RCSTA_RX9_POSITION                                 0x6
#define _RCSTA_RX9_SIZE                                     0x1
#define _RCSTA_RX9_LENGTH                                   0x1
#define _RCSTA_RX9_MASK                                     0x40
#define _RCSTA_SPEN_POSN                                    0x7
#define _RCSTA_SPEN_POSITION                                0x7
#define _RCSTA_SPEN_SIZE                                    0x1
#define _RCSTA_SPEN_LENGTH                                  0x1
#define _RCSTA_SPEN_MASK                                    0x80
#define _RCSTA_RCD8_POSN                                    0x0
#define _RCSTA_RCD8_POSITION                                0x0
#define _RCSTA_RCD8_SIZE                                    0x1
#define _RCSTA_RCD8_LENGTH                                  0x1
#define _RCSTA_RCD8_MASK                                    0x1
#define _RCSTA_RC9_POSN                                     0x6
#define _RCSTA_RC9_POSITION                                 0x6
#define _RCSTA_RC9_SIZE                                     0x1
#define _RCSTA_RC9_LENGTH                                   0x1
#define _RCSTA_RC9_MASK                                     0x40
#define _RCSTA_RC8_9_POSN                                   0x6
#define _RCSTA_RC8_9_POSITION                               0x6
#define _RCSTA_RC8_9_SIZE                                   0x1
#define _RCSTA_RC8_9_LENGTH                                 0x1
#define _RCSTA_RC8_9_MASK                                   0x40
#define _RCSTA_NOT_RC8_POSN                                 0x6
#define _RCSTA_NOT_RC8_POSITION                             0x6
#define _RCSTA_NOT_RC8_SIZE                                 0x1
#define _RCSTA_NOT_RC8_LENGTH                               0x1
#define _RCSTA_NOT_RC8_MASK                                 0x40
#define _RCSTA_nRC8_POSN                                    0x6
#define _RCSTA_nRC8_POSITION                                0x6
#define _RCSTA_nRC8_SIZE                                    0x1
#define _RCSTA_nRC8_LENGTH                                  0x1
#define _RCSTA_nRC8_MASK                                    0x40
#define _RCSTA_SRENA_POSN                                   0x5
#define _RCSTA_SRENA_POSITION                               0x5
#define _RCSTA_SRENA_SIZE                                   0x1
#define _RCSTA_SRENA_LENGTH                                 0x1
#define _RCSTA_SRENA_MASK                                   0x20
// alias bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
    struct {
        unsigned RCD8                   :1;
        unsigned                        :5;
        unsigned RC9                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC8_9                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_RC8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nRC8                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned SRENA                  :1;
    };
} RCSTA1bits_t;
extern volatile RCSTA1bits_t RCSTA1bits __at(0xFAB);
// bitfield macros
#define _RCSTA1_RX9D_POSN                                   0x0
#define _RCSTA1_RX9D_POSITION                               0x0
#define _RCSTA1_RX9D_SIZE                                   0x1
#define _RCSTA1_RX9D_LENGTH                                 0x1
#define _RCSTA1_RX9D_MASK                                   0x1
#define _RCSTA1_OERR_POSN                                   0x1
#define _RCSTA1_OERR_POSITION                               0x1
#define _RCSTA1_OERR_SIZE                                   0x1
#define _RCSTA1_OERR_LENGTH                                 0x1
#define _RCSTA1_OERR_MASK                                   0x2
#define _RCSTA1_FERR_POSN                                   0x2
#define _RCSTA1_FERR_POSITION                               0x2
#define _RCSTA1_FERR_SIZE                                   0x1
#define _RCSTA1_FERR_LENGTH                                 0x1
#define _RCSTA1_FERR_MASK                                   0x4
#define _RCSTA1_ADDEN_POSN                                  0x3
#define _RCSTA1_ADDEN_POSITION                              0x3
#define _RCSTA1_ADDEN_SIZE                                  0x1
#define _RCSTA1_ADDEN_LENGTH                                0x1
#define _RCSTA1_ADDEN_MASK                                  0x8
#define _RCSTA1_CREN_POSN                                   0x4
#define _RCSTA1_CREN_POSITION                               0x4
#define _RCSTA1_CREN_SIZE                                   0x1
#define _RCSTA1_CREN_LENGTH                                 0x1
#define _RCSTA1_CREN_MASK                                   0x10
#define _RCSTA1_SREN_POSN                                   0x5
#define _RCSTA1_SREN_POSITION                               0x5
#define _RCSTA1_SREN_SIZE                                   0x1
#define _RCSTA1_SREN_LENGTH                                 0x1
#define _RCSTA1_SREN_MASK                                   0x20
#define _RCSTA1_RX9_POSN                                    0x6
#define _RCSTA1_RX9_POSITION                                0x6
#define _RCSTA1_RX9_SIZE                                    0x1
#define _RCSTA1_RX9_LENGTH                                  0x1
#define _RCSTA1_RX9_MASK                                    0x40
#define _RCSTA1_SPEN_POSN                                   0x7
#define _RCSTA1_SPEN_POSITION                               0x7
#define _RCSTA1_SPEN_SIZE                                   0x1
#define _RCSTA1_SPEN_LENGTH                                 0x1
#define _RCSTA1_SPEN_MASK                                   0x80
#define _RCSTA1_RCD8_POSN                                   0x0
#define _RCSTA1_RCD8_POSITION                               0x0
#define _RCSTA1_RCD8_SIZE                                   0x1
#define _RCSTA1_RCD8_LENGTH                                 0x1
#define _RCSTA1_RCD8_MASK                                   0x1
#define _RCSTA1_RC9_POSN                                    0x6
#define _RCSTA1_RC9_POSITION                                0x6
#define _RCSTA1_RC9_SIZE                                    0x1
#define _RCSTA1_RC9_LENGTH                                  0x1
#define _RCSTA1_RC9_MASK                                    0x40
#define _RCSTA1_RC8_9_POSN                                  0x6
#define _RCSTA1_RC8_9_POSITION                              0x6
#define _RCSTA1_RC8_9_SIZE                                  0x1
#define _RCSTA1_RC8_9_LENGTH                                0x1
#define _RCSTA1_RC8_9_MASK                                  0x40
#define _RCSTA1_NOT_RC8_POSN                                0x6
#define _RCSTA1_NOT_RC8_POSITION                            0x6
#define _RCSTA1_NOT_RC8_SIZE                                0x1
#define _RCSTA1_NOT_RC8_LENGTH                              0x1
#define _RCSTA1_NOT_RC8_MASK                                0x40
#define _RCSTA1_nRC8_POSN                                   0x6
#define _RCSTA1_nRC8_POSITION                               0x6
#define _RCSTA1_nRC8_SIZE                                   0x1
#define _RCSTA1_nRC8_LENGTH                                 0x1
#define _RCSTA1_nRC8_MASK                                   0x40
#define _RCSTA1_SRENA_POSN                                  0x5
#define _RCSTA1_SRENA_POSITION                              0x5
#define _RCSTA1_SRENA_SIZE                                  0x1
#define _RCSTA1_SRENA_LENGTH                                0x1
#define _RCSTA1_SRENA_MASK                                  0x20

// Register: TXSTA
#define TXSTA TXSTA
extern volatile unsigned char           TXSTA               __at(0xFAC);
#ifndef _LIB_BUILD
asm("TXSTA equ 0FACh");
#endif
// aliases
extern volatile unsigned char           TXSTA1              __at(0xFAC);
#ifndef _LIB_BUILD
asm("TXSTA1 equ 0FACh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned                        :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
    struct {
        unsigned TXD8                   :1;
        unsigned                        :5;
        unsigned TX8_9                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_TX8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nTX8                   :1;
    };
    struct {
        unsigned TX9D1                  :1;
        unsigned TRMT1                  :1;
        unsigned BRGH1                  :1;
        unsigned                        :1;
        unsigned SYNC1                  :1;
        unsigned TXEN1                  :1;
        unsigned TX91                   :1;
        unsigned CSRC1                  :1;
    };
} TXSTAbits_t;
extern volatile TXSTAbits_t TXSTAbits __at(0xFAC);
// bitfield macros
#define _TXSTA_TX9D_POSN                                    0x0
#define _TXSTA_TX9D_POSITION                                0x0
#define _TXSTA_TX9D_SIZE                                    0x1
#define _TXSTA_TX9D_LENGTH                                  0x1
#define _TXSTA_TX9D_MASK                                    0x1
#define _TXSTA_TRMT_POSN                                    0x1
#define _TXSTA_TRMT_POSITION                                0x1
#define _TXSTA_TRMT_SIZE                                    0x1
#define _TXSTA_TRMT_LENGTH                                  0x1
#define _TXSTA_TRMT_MASK                                    0x2
#define _TXSTA_BRGH_POSN                                    0x2
#define _TXSTA_BRGH_POSITION                                0x2
#define _TXSTA_BRGH_SIZE                                    0x1
#define _TXSTA_BRGH_LENGTH                                  0x1
#define _TXSTA_BRGH_MASK                                    0x4
#define _TXSTA_SYNC_POSN                                    0x4
#define _TXSTA_SYNC_POSITION                                0x4
#define _TXSTA_SYNC_SIZE                                    0x1
#define _TXSTA_SYNC_LENGTH                                  0x1
#define _TXSTA_SYNC_MASK                                    0x10
#define _TXSTA_TXEN_POSN                                    0x5
#define _TXSTA_TXEN_POSITION                                0x5
#define _TXSTA_TXEN_SIZE                                    0x1
#define _TXSTA_TXEN_LENGTH                                  0x1
#define _TXSTA_TXEN_MASK                                    0x20
#define _TXSTA_TX9_POSN                                     0x6
#define _TXSTA_TX9_POSITION                                 0x6
#define _TXSTA_TX9_SIZE                                     0x1
#define _TXSTA_TX9_LENGTH                                   0x1
#define _TXSTA_TX9_MASK                                     0x40
#define _TXSTA_CSRC_POSN                                    0x7
#define _TXSTA_CSRC_POSITION                                0x7
#define _TXSTA_CSRC_SIZE                                    0x1
#define _TXSTA_CSRC_LENGTH                                  0x1
#define _TXSTA_CSRC_MASK                                    0x80
#define _TXSTA_TXD8_POSN                                    0x0
#define _TXSTA_TXD8_POSITION                                0x0
#define _TXSTA_TXD8_SIZE                                    0x1
#define _TXSTA_TXD8_LENGTH                                  0x1
#define _TXSTA_TXD8_MASK                                    0x1
#define _TXSTA_TX8_9_POSN                                   0x6
#define _TXSTA_TX8_9_POSITION                               0x6
#define _TXSTA_TX8_9_SIZE                                   0x1
#define _TXSTA_TX8_9_LENGTH                                 0x1
#define _TXSTA_TX8_9_MASK                                   0x40
#define _TXSTA_NOT_TX8_POSN                                 0x6
#define _TXSTA_NOT_TX8_POSITION                             0x6
#define _TXSTA_NOT_TX8_SIZE                                 0x1
#define _TXSTA_NOT_TX8_LENGTH                               0x1
#define _TXSTA_NOT_TX8_MASK                                 0x40
#define _TXSTA_nTX8_POSN                                    0x6
#define _TXSTA_nTX8_POSITION                                0x6
#define _TXSTA_nTX8_SIZE                                    0x1
#define _TXSTA_nTX8_LENGTH                                  0x1
#define _TXSTA_nTX8_MASK                                    0x40
#define _TXSTA_TX9D1_POSN                                   0x0
#define _TXSTA_TX9D1_POSITION                               0x0
#define _TXSTA_TX9D1_SIZE                                   0x1
#define _TXSTA_TX9D1_LENGTH                                 0x1
#define _TXSTA_TX9D1_MASK                                   0x1
#define _TXSTA_TRMT1_POSN                                   0x1
#define _TXSTA_TRMT1_POSITION                               0x1
#define _TXSTA_TRMT1_SIZE                                   0x1
#define _TXSTA_TRMT1_LENGTH                                 0x1
#define _TXSTA_TRMT1_MASK                                   0x2
#define _TXSTA_BRGH1_POSN                                   0x2
#define _TXSTA_BRGH1_POSITION                               0x2
#define _TXSTA_BRGH1_SIZE                                   0x1
#define _TXSTA_BRGH1_LENGTH                                 0x1
#define _TXSTA_BRGH1_MASK                                   0x4
#define _TXSTA_SYNC1_POSN                                   0x4
#define _TXSTA_SYNC1_POSITION                               0x4
#define _TXSTA_SYNC1_SIZE                                   0x1
#define _TXSTA_SYNC1_LENGTH                                 0x1
#define _TXSTA_SYNC1_MASK                                   0x10
#define _TXSTA_TXEN1_POSN                                   0x5
#define _TXSTA_TXEN1_POSITION                               0x5
#define _TXSTA_TXEN1_SIZE                                   0x1
#define _TXSTA_TXEN1_LENGTH                                 0x1
#define _TXSTA_TXEN1_MASK                                   0x20
#define _TXSTA_TX91_POSN                                    0x6
#define _TXSTA_TX91_POSITION                                0x6
#define _TXSTA_TX91_SIZE                                    0x1
#define _TXSTA_TX91_LENGTH                                  0x1
#define _TXSTA_TX91_MASK                                    0x40
#define _TXSTA_CSRC1_POSN                                   0x7
#define _TXSTA_CSRC1_POSITION                               0x7
#define _TXSTA_CSRC1_SIZE                                   0x1
#define _TXSTA_CSRC1_LENGTH                                 0x1
#define _TXSTA_CSRC1_MASK                                   0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned                        :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
    struct {
        unsigned TXD8                   :1;
        unsigned                        :5;
        unsigned TX8_9                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_TX8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nTX8                   :1;
    };
    struct {
        unsigned TX9D1                  :1;
        unsigned TRMT1                  :1;
        unsigned BRGH1                  :1;
        unsigned                        :1;
        unsigned SYNC1                  :1;
        unsigned TXEN1                  :1;
        unsigned TX91                   :1;
        unsigned CSRC1                  :1;
    };
} TXSTA1bits_t;
extern volatile TXSTA1bits_t TXSTA1bits __at(0xFAC);
// bitfield macros
#define _TXSTA1_TX9D_POSN                                   0x0
#define _TXSTA1_TX9D_POSITION                               0x0
#define _TXSTA1_TX9D_SIZE                                   0x1
#define _TXSTA1_TX9D_LENGTH                                 0x1
#define _TXSTA1_TX9D_MASK                                   0x1
#define _TXSTA1_TRMT_POSN                                   0x1
#define _TXSTA1_TRMT_POSITION                               0x1
#define _TXSTA1_TRMT_SIZE                                   0x1
#define _TXSTA1_TRMT_LENGTH                                 0x1
#define _TXSTA1_TRMT_MASK                                   0x2
#define _TXSTA1_BRGH_POSN                                   0x2
#define _TXSTA1_BRGH_POSITION                               0x2
#define _TXSTA1_BRGH_SIZE                                   0x1
#define _TXSTA1_BRGH_LENGTH                                 0x1
#define _TXSTA1_BRGH_MASK                                   0x4
#define _TXSTA1_SYNC_POSN                                   0x4
#define _TXSTA1_SYNC_POSITION                               0x4
#define _TXSTA1_SYNC_SIZE                                   0x1
#define _TXSTA1_SYNC_LENGTH                                 0x1
#define _TXSTA1_SYNC_MASK                                   0x10
#define _TXSTA1_TXEN_POSN                                   0x5
#define _TXSTA1_TXEN_POSITION                               0x5
#define _TXSTA1_TXEN_SIZE                                   0x1
#define _TXSTA1_TXEN_LENGTH                                 0x1
#define _TXSTA1_TXEN_MASK                                   0x20
#define _TXSTA1_TX9_POSN                                    0x6
#define _TXSTA1_TX9_POSITION                                0x6
#define _TXSTA1_TX9_SIZE                                    0x1
#define _TXSTA1_TX9_LENGTH                                  0x1
#define _TXSTA1_TX9_MASK                                    0x40
#define _TXSTA1_CSRC_POSN                                   0x7
#define _TXSTA1_CSRC_POSITION                               0x7
#define _TXSTA1_CSRC_SIZE                                   0x1
#define _TXSTA1_CSRC_LENGTH                                 0x1
#define _TXSTA1_CSRC_MASK                                   0x80
#define _TXSTA1_TXD8_POSN                                   0x0
#define _TXSTA1_TXD8_POSITION                               0x0
#define _TXSTA1_TXD8_SIZE                                   0x1
#define _TXSTA1_TXD8_LENGTH                                 0x1
#define _TXSTA1_TXD8_MASK                                   0x1
#define _TXSTA1_TX8_9_POSN                                  0x6
#define _TXSTA1_TX8_9_POSITION                              0x6
#define _TXSTA1_TX8_9_SIZE                                  0x1
#define _TXSTA1_TX8_9_LENGTH                                0x1
#define _TXSTA1_TX8_9_MASK                                  0x40
#define _TXSTA1_NOT_TX8_POSN                                0x6
#define _TXSTA1_NOT_TX8_POSITION                            0x6
#define _TXSTA1_NOT_TX8_SIZE                                0x1
#define _TXSTA1_NOT_TX8_LENGTH                              0x1
#define _TXSTA1_NOT_TX8_MASK                                0x40
#define _TXSTA1_nTX8_POSN                                   0x6
#define _TXSTA1_nTX8_POSITION                               0x6
#define _TXSTA1_nTX8_SIZE                                   0x1
#define _TXSTA1_nTX8_LENGTH                                 0x1
#define _TXSTA1_nTX8_MASK                                   0x40
#define _TXSTA1_TX9D1_POSN                                  0x0
#define _TXSTA1_TX9D1_POSITION                              0x0
#define _TXSTA1_TX9D1_SIZE                                  0x1
#define _TXSTA1_TX9D1_LENGTH                                0x1
#define _TXSTA1_TX9D1_MASK                                  0x1
#define _TXSTA1_TRMT1_POSN                                  0x1
#define _TXSTA1_TRMT1_POSITION                              0x1
#define _TXSTA1_TRMT1_SIZE                                  0x1
#define _TXSTA1_TRMT1_LENGTH                                0x1
#define _TXSTA1_TRMT1_MASK                                  0x2
#define _TXSTA1_BRGH1_POSN                                  0x2
#define _TXSTA1_BRGH1_POSITION                              0x2
#define _TXSTA1_BRGH1_SIZE                                  0x1
#define _TXSTA1_BRGH1_LENGTH                                0x1
#define _TXSTA1_BRGH1_MASK                                  0x4
#define _TXSTA1_SYNC1_POSN                                  0x4
#define _TXSTA1_SYNC1_POSITION                              0x4
#define _TXSTA1_SYNC1_SIZE                                  0x1
#define _TXSTA1_SYNC1_LENGTH                                0x1
#define _TXSTA1_SYNC1_MASK                                  0x10
#define _TXSTA1_TXEN1_POSN                                  0x5
#define _TXSTA1_TXEN1_POSITION                              0x5
#define _TXSTA1_TXEN1_SIZE                                  0x1
#define _TXSTA1_TXEN1_LENGTH                                0x1
#define _TXSTA1_TXEN1_MASK                                  0x20
#define _TXSTA1_TX91_POSN                                   0x6
#define _TXSTA1_TX91_POSITION                               0x6
#define _TXSTA1_TX91_SIZE                                   0x1
#define _TXSTA1_TX91_LENGTH                                 0x1
#define _TXSTA1_TX91_MASK                                   0x40
#define _TXSTA1_CSRC1_POSN                                  0x7
#define _TXSTA1_CSRC1_POSITION                              0x7
#define _TXSTA1_CSRC1_SIZE                                  0x1
#define _TXSTA1_CSRC1_LENGTH                                0x1
#define _TXSTA1_CSRC1_MASK                                  0x80

// Register: TXREG
#define TXREG TXREG
extern volatile unsigned char           TXREG               __at(0xFAD);
#ifndef _LIB_BUILD
asm("TXREG equ 0FADh");
#endif
// aliases
extern volatile unsigned char           TXREG1              __at(0xFAD);
#ifndef _LIB_BUILD
asm("TXREG1 equ 0FADh");
#endif

// Register: RCREG
#define RCREG RCREG
extern volatile unsigned char           RCREG               __at(0xFAE);
#ifndef _LIB_BUILD
asm("RCREG equ 0FAEh");
#endif
// aliases
extern volatile unsigned char           RCREG1              __at(0xFAE);
#ifndef _LIB_BUILD
asm("RCREG1 equ 0FAEh");
#endif

// Register: SPBRG
#define SPBRG SPBRG
extern volatile unsigned char           SPBRG               __at(0xFAF);
#ifndef _LIB_BUILD
asm("SPBRG equ 0FAFh");
#endif
// aliases
extern volatile unsigned char           SPBRG1              __at(0xFAF);
#ifndef _LIB_BUILD
asm("SPBRG1 equ 0FAFh");
#endif

// Register: T3CON
#define T3CON T3CON
extern volatile unsigned char           T3CON               __at(0xFB1);
#ifndef _LIB_BUILD
asm("T3CON equ 0FB1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned NOT_T3SYNC             :1;
    };
    struct {
        unsigned TMR3ON                 :1;
        unsigned TMR3CS                 :1;
        unsigned nT3SYNC                :1;
        unsigned T3CCP1                 :1;
        unsigned T3CKPS                 :2;
        unsigned T3ECCP1                :1;
        unsigned RD16                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned T3INSYNC               :1;
        unsigned                        :1;
        unsigned T3CKPS0                :1;
        unsigned T3CKPS1                :1;
    };
    struct {
        unsigned                        :2;
        unsigned T3SYNC                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned SOSCEN3                :1;
        unsigned                        :3;
        unsigned RD163                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned T3RD16                 :1;
    };
} T3CONbits_t;
extern volatile T3CONbits_t T3CONbits __at(0xFB1);
// bitfield macros
#define _T3CON_NOT_T3SYNC_POSN                              0x2
#define _T3CON_NOT_T3SYNC_POSITION                          0x2
#define _T3CON_NOT_T3SYNC_SIZE                              0x1
#define _T3CON_NOT_T3SYNC_LENGTH                            0x1
#define _T3CON_NOT_T3SYNC_MASK                              0x4
#define _T3CON_TMR3ON_POSN                                  0x0
#define _T3CON_TMR3ON_POSITION                              0x0
#define _T3CON_TMR3ON_SIZE                                  0x1
#define _T3CON_TMR3ON_LENGTH                                0x1
#define _T3CON_TMR3ON_MASK                                  0x1
#define _T3CON_TMR3CS_POSN                                  0x1
#define _T3CON_TMR3CS_POSITION                              0x1
#define _T3CON_TMR3CS_SIZE                                  0x1
#define _T3CON_TMR3CS_LENGTH                                0x1
#define _T3CON_TMR3CS_MASK                                  0x2
#define _T3CON_nT3SYNC_POSN                                 0x2
#define _T3CON_nT3SYNC_POSITION                             0x2
#define _T3CON_nT3SYNC_SIZE                                 0x1
#define _T3CON_nT3SYNC_LENGTH                               0x1
#define _T3CON_nT3SYNC_MASK                                 0x4
#define _T3CON_T3CCP1_POSN                                  0x3
#define _T3CON_T3CCP1_POSITION                              0x3
#define _T3CON_T3CCP1_SIZE                                  0x1
#define _T3CON_T3CCP1_LENGTH                                0x1
#define _T3CON_T3CCP1_MASK                                  0x8
#define _T3CON_T3CKPS_POSN                                  0x4
#define _T3CON_T3CKPS_POSITION                              0x4
#define _T3CON_T3CKPS_SIZE                                  0x2
#define _T3CON_T3CKPS_LENGTH                                0x2
#define _T3CON_T3CKPS_MASK                                  0x30
#define _T3CON_T3ECCP1_POSN                                 0x6
#define _T3CON_T3ECCP1_POSITION                             0x6
#define _T3CON_T3ECCP1_SIZE                                 0x1
#define _T3CON_T3ECCP1_LENGTH                               0x1
#define _T3CON_T3ECCP1_MASK                                 0x40
#define _T3CON_RD16_POSN                                    0x7
#define _T3CON_RD16_POSITION                                0x7
#define _T3CON_RD16_SIZE                                    0x1
#define _T3CON_RD16_LENGTH                                  0x1
#define _T3CON_RD16_MASK                                    0x80
#define _T3CON_T3INSYNC_POSN                                0x2
#define _T3CON_T3INSYNC_POSITION                            0x2
#define _T3CON_T3INSYNC_SIZE                                0x1
#define _T3CON_T3INSYNC_LENGTH                              0x1
#define _T3CON_T3INSYNC_MASK                                0x4
#define _T3CON_T3CKPS0_POSN                                 0x4
#define _T3CON_T3CKPS0_POSITION                             0x4
#define _T3CON_T3CKPS0_SIZE                                 0x1
#define _T3CON_T3CKPS0_LENGTH                               0x1
#define _T3CON_T3CKPS0_MASK                                 0x10
#define _T3CON_T3CKPS1_POSN                                 0x5
#define _T3CON_T3CKPS1_POSITION                             0x5
#define _T3CON_T3CKPS1_SIZE                                 0x1
#define _T3CON_T3CKPS1_LENGTH                               0x1
#define _T3CON_T3CKPS1_MASK                                 0x20
#define _T3CON_T3SYNC_POSN                                  0x2
#define _T3CON_T3SYNC_POSITION                              0x2
#define _T3CON_T3SYNC_SIZE                                  0x1
#define _T3CON_T3SYNC_LENGTH                                0x1
#define _T3CON_T3SYNC_MASK                                  0x4
#define _T3CON_SOSCEN3_POSN                                 0x3
#define _T3CON_SOSCEN3_POSITION                             0x3
#define _T3CON_SOSCEN3_SIZE                                 0x1
#define _T3CON_SOSCEN3_LENGTH                               0x1
#define _T3CON_SOSCEN3_MASK                                 0x8
#define _T3CON_RD163_POSN                                   0x7
#define _T3CON_RD163_POSITION                               0x7
#define _T3CON_RD163_SIZE                                   0x1
#define _T3CON_RD163_LENGTH                                 0x1
#define _T3CON_RD163_MASK                                   0x80
#define _T3CON_T3RD16_POSN                                  0x7
#define _T3CON_T3RD16_POSITION                              0x7
#define _T3CON_T3RD16_SIZE                                  0x1
#define _T3CON_T3RD16_LENGTH                                0x1
#define _T3CON_T3RD16_MASK                                  0x80

// Register: TMR3
#define TMR3 TMR3
extern volatile unsigned short          TMR3                __at(0xFB2);
#ifndef _LIB_BUILD
asm("TMR3 equ 0FB2h");
#endif

// Register: TMR3L
#define TMR3L TMR3L
extern volatile unsigned char           TMR3L               __at(0xFB2);
#ifndef _LIB_BUILD
asm("TMR3L equ 0FB2h");
#endif

// Register: TMR3H
#define TMR3H TMR3H
extern volatile unsigned char           TMR3H               __at(0xFB3);
#ifndef _LIB_BUILD
asm("TMR3H equ 0FB3h");
#endif

// Register: CCP1CON
#define CCP1CON CCP1CON
extern volatile unsigned char           CCP1CON             __at(0xFBD);
#ifndef _LIB_BUILD
asm("CCP1CON equ 0FBDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP1M                  :4;
        unsigned DC1B                   :2;
    };
    struct {
        unsigned CCP1M0                 :1;
        unsigned CCP1M1                 :1;
        unsigned CCP1M2                 :1;
        unsigned CCP1M3                 :1;
        unsigned DC1B0                  :1;
        unsigned DC1B1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP1Y                  :1;
        unsigned CCP1X                  :1;
    };
} CCP1CONbits_t;
extern volatile CCP1CONbits_t CCP1CONbits __at(0xFBD);
// bitfield macros
#define _CCP1CON_CCP1M_POSN                                 0x0
#define _CCP1CON_CCP1M_POSITION                             0x0
#define _CCP1CON_CCP1M_SIZE                                 0x4
#define _CCP1CON_CCP1M_LENGTH                               0x4
#define _CCP1CON_CCP1M_MASK                                 0xF
#define _CCP1CON_DC1B_POSN                                  0x4
#define _CCP1CON_DC1B_POSITION                              0x4
#define _CCP1CON_DC1B_SIZE                                  0x2
#define _CCP1CON_DC1B_LENGTH                                0x2
#define _CCP1CON_DC1B_MASK                                  0x30
#define _CCP1CON_CCP1M0_POSN                                0x0
#define _CCP1CON_CCP1M0_POSITION                            0x0
#define _CCP1CON_CCP1M0_SIZE                                0x1
#define _CCP1CON_CCP1M0_LENGTH                              0x1
#define _CCP1CON_CCP1M0_MASK                                0x1
#define _CCP1CON_CCP1M1_POSN                                0x1
#define _CCP1CON_CCP1M1_POSITION                            0x1
#define _CCP1CON_CCP1M1_SIZE                                0x1
#define _CCP1CON_CCP1M1_LENGTH                              0x1
#define _CCP1CON_CCP1M1_MASK                                0x2
#define _CCP1CON_CCP1M2_POSN                                0x2
#define _CCP1CON_CCP1M2_POSITION                            0x2
#define _CCP1CON_CCP1M2_SIZE                                0x1
#define _CCP1CON_CCP1M2_LENGTH                              0x1
#define _CCP1CON_CCP1M2_MASK                                0x4
#define _CCP1CON_CCP1M3_POSN                                0x3
#define _CCP1CON_CCP1M3_POSITION                            0x3
#define _CCP1CON_CCP1M3_SIZE                                0x1
#define _CCP1CON_CCP1M3_LENGTH                              0x1
#define _CCP1CON_CCP1M3_MASK                                0x8
#define _CCP1CON_DC1B0_POSN                                 0x4
#define _CCP1CON_DC1B0_POSITION                             0x4
#define _CCP1CON_DC1B0_SIZE                                 0x1
#define _CCP1CON_DC1B0_LENGTH                               0x1
#define _CCP1CON_DC1B0_MASK                                 0x10
#define _CCP1CON_DC1B1_POSN                                 0x5
#define _CCP1CON_DC1B1_POSITION                             0x5
#define _CCP1CON_DC1B1_SIZE                                 0x1
#define _CCP1CON_DC1B1_LENGTH                               0x1
#define _CCP1CON_DC1B1_MASK                                 0x20
#define _CCP1CON_CCP1Y_POSN                                 0x4
#define _CCP1CON_CCP1Y_POSITION                             0x4
#define _CCP1CON_CCP1Y_SIZE                                 0x1
#define _CCP1CON_CCP1Y_LENGTH                               0x1
#define _CCP1CON_CCP1Y_MASK                                 0x10
#define _CCP1CON_CCP1X_POSN                                 0x5
#define _CCP1CON_CCP1X_POSITION                             0x5
#define _CCP1CON_CCP1X_SIZE                                 0x1
#define _CCP1CON_CCP1X_LENGTH                               0x1
#define _CCP1CON_CCP1X_MASK                                 0x20

// Register: CCPR1
#define CCPR1 CCPR1
extern volatile unsigned short          CCPR1               __at(0xFBE);
#ifndef _LIB_BUILD
asm("CCPR1 equ 0FBEh");
#endif

// Register: CCPR1L
#define CCPR1L CCPR1L
extern volatile unsigned char           CCPR1L              __at(0xFBE);
#ifndef _LIB_BUILD
asm("CCPR1L equ 0FBEh");
#endif

// Register: CCPR1H
#define CCPR1H CCPR1H
extern volatile unsigned char           CCPR1H              __at(0xFBF);
#ifndef _LIB_BUILD
asm("CCPR1H equ 0FBFh");
#endif

// Register: ADCON1
#define ADCON1 ADCON1
extern volatile unsigned char           ADCON1              __at(0xFC1);
#ifndef _LIB_BUILD
asm("ADCON1 equ 0FC1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCFG                   :4;
        unsigned                        :2;
        unsigned ADCS2                  :1;
        unsigned ADFM                   :1;
    };
    struct {
        unsigned PCFG0                  :1;
        unsigned PCFG1                  :1;
        unsigned PCFG2                  :1;
        unsigned PCFG3                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned CHSN3                  :1;
    };
} ADCON1bits_t;
extern volatile ADCON1bits_t ADCON1bits __at(0xFC1);
// bitfield macros
#define _ADCON1_PCFG_POSN                                   0x0
#define _ADCON1_PCFG_POSITION                               0x0
#define _ADCON1_PCFG_SIZE                                   0x4
#define _ADCON1_PCFG_LENGTH                                 0x4
#define _ADCON1_PCFG_MASK                                   0xF
#define _ADCON1_ADCS2_POSN                                  0x6
#define _ADCON1_ADCS2_POSITION                              0x6
#define _ADCON1_ADCS2_SIZE                                  0x1
#define _ADCON1_ADCS2_LENGTH                                0x1
#define _ADCON1_ADCS2_MASK                                  0x40
#define _ADCON1_ADFM_POSN                                   0x7
#define _ADCON1_ADFM_POSITION                               0x7
#define _ADCON1_ADFM_SIZE                                   0x1
#define _ADCON1_ADFM_LENGTH                                 0x1
#define _ADCON1_ADFM_MASK                                   0x80
#define _ADCON1_PCFG0_POSN                                  0x0
#define _ADCON1_PCFG0_POSITION                              0x0
#define _ADCON1_PCFG0_SIZE                                  0x1
#define _ADCON1_PCFG0_LENGTH                                0x1
#define _ADCON1_PCFG0_MASK                                  0x1
#define _ADCON1_PCFG1_POSN                                  0x1
#define _ADCON1_PCFG1_POSITION                              0x1
#define _ADCON1_PCFG1_SIZE                                  0x1
#define _ADCON1_PCFG1_LENGTH                                0x1
#define _ADCON1_PCFG1_MASK                                  0x2
#define _ADCON1_PCFG2_POSN                                  0x2
#define _ADCON1_PCFG2_POSITION                              0x2
#define _ADCON1_PCFG2_SIZE                                  0x1
#define _ADCON1_PCFG2_LENGTH                                0x1
#define _ADCON1_PCFG2_MASK                                  0x4
#define _ADCON1_PCFG3_POSN                                  0x3
#define _ADCON1_PCFG3_POSITION                              0x3
#define _ADCON1_PCFG3_SIZE                                  0x1
#define _ADCON1_PCFG3_LENGTH                                0x1
#define _ADCON1_PCFG3_MASK                                  0x8
#define _ADCON1_CHSN3_POSN                                  0x3
#define _ADCON1_CHSN3_POSITION                              0x3
#define _ADCON1_CHSN3_SIZE                                  0x1
#define _ADCON1_CHSN3_LENGTH                                0x1
#define _ADCON1_CHSN3_MASK                                  0x8

// Register: ADCON0
#define ADCON0 ADCON0
extern volatile unsigned char           ADCON0              __at(0xFC2);
#ifndef _LIB_BUILD
asm("ADCON0 equ 0FC2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned GO_NOT_DONE            :1;
    };
    struct {
        unsigned ADON                   :1;
        unsigned                        :1;
        unsigned GO_nDONE               :1;
        unsigned CHS                    :3;
        unsigned ADCS                   :2;
    };
    struct {
        unsigned                        :2;
        unsigned DONE                   :1;
        unsigned CHS0                   :1;
        unsigned CHS1                   :1;
        unsigned CHS2                   :1;
        unsigned ADCS0                  :1;
        unsigned ADCS1                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned GO_DONE                :1;
    };
    struct {
        unsigned                        :2;
        unsigned GO                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_DONE               :1;
    };
    struct {
        unsigned                        :2;
        unsigned nDONE                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned ADCAL                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned GODONE                 :1;
    };
} ADCON0bits_t;
extern volatile ADCON0bits_t ADCON0bits __at(0xFC2);
// bitfield macros
#define _ADCON0_GO_NOT_DONE_POSN                            0x2
#define _ADCON0_GO_NOT_DONE_POSITION                        0x2
#define _ADCON0_GO_NOT_DONE_SIZE                            0x1
#define _ADCON0_GO_NOT_DONE_LENGTH                          0x1
#define _ADCON0_GO_NOT_DONE_MASK                            0x4
#define _ADCON0_ADON_POSN                                   0x0
#define _ADCON0_ADON_POSITION                               0x0
#define _ADCON0_ADON_SIZE                                   0x1
#define _ADCON0_ADON_LENGTH                                 0x1
#define _ADCON0_ADON_MASK                                   0x1
#define _ADCON0_GO_nDONE_POSN                               0x2
#define _ADCON0_GO_nDONE_POSITION                           0x2
#define _ADCON0_GO_nDONE_SIZE                               0x1
#define _ADCON0_GO_nDONE_LENGTH                             0x1
#define _ADCON0_GO_nDONE_MASK                               0x4
#define _ADCON0_CHS_POSN                                    0x3
#define _ADCON0_CHS_POSITION                                0x3
#define _ADCON0_CHS_SIZE                                    0x3
#define _ADCON0_CHS_LENGTH                                  0x3
#define _ADCON0_CHS_MASK                                    0x38
#define _ADCON0_ADCS_POSN                                   0x6
#define _ADCON0_ADCS_POSITION                               0x6
#define _ADCON0_ADCS_SIZE                                   0x2
#define _ADCON0_ADCS_LENGTH                                 0x2
#define _ADCON0_ADCS_MASK                                   0xC0
#define _ADCON0_DONE_POSN                                   0x2
#define _ADCON0_DONE_POSITION                               0x2
#define _ADCON0_DONE_SIZE                                   0x1
#define _ADCON0_DONE_LENGTH                                 0x1
#define _ADCON0_DONE_MASK                                   0x4
#define _ADCON0_CHS0_POSN                                   0x3
#define _ADCON0_CHS0_POSITION                               0x3
#define _ADCON0_CHS0_SIZE                                   0x1
#define _ADCON0_CHS0_LENGTH                                 0x1
#define _ADCON0_CHS0_MASK                                   0x8
#define _ADCON0_CHS1_POSN                                   0x4
#define _ADCON0_CHS1_POSITION                               0x4
#define _ADCON0_CHS1_SIZE                                   0x1
#define _ADCON0_CHS1_LENGTH                                 0x1
#define _ADCON0_CHS1_MASK                                   0x10
#define _ADCON0_CHS2_POSN                                   0x5
#define _ADCON0_CHS2_POSITION                               0x5
#define _ADCON0_CHS2_SIZE                                   0x1
#define _ADCON0_CHS2_LENGTH                                 0x1
#define _ADCON0_CHS2_MASK                                   0x20
#define _ADCON0_ADCS0_POSN                                  0x6
#define _ADCON0_ADCS0_POSITION                              0x6
#define _ADCON0_ADCS0_SIZE                                  0x1
#define _ADCON0_ADCS0_LENGTH                                0x1
#define _ADCON0_ADCS0_MASK                                  0x40
#define _ADCON0_ADCS1_POSN                                  0x7
#define _ADCON0_ADCS1_POSITION                              0x7
#define _ADCON0_ADCS1_SIZE                                  0x1
#define _ADCON0_ADCS1_LENGTH                                0x1
#define _ADCON0_ADCS1_MASK                                  0x80
#define _ADCON0_GO_DONE_POSN                                0x2
#define _ADCON0_GO_DONE_POSITION                            0x2
#define _ADCON0_GO_DONE_SIZE                                0x1
#define _ADCON0_GO_DONE_LENGTH                              0x1
#define _ADCON0_GO_DONE_MASK                                0x4
#define _ADCON0_GO_POSN                                     0x2
#define _ADCON0_GO_POSITION                                 0x2
#define _ADCON0_GO_SIZE                                     0x1
#define _ADCON0_GO_LENGTH                                   0x1
#define _ADCON0_GO_MASK                                     0x4
#define _ADCON0_NOT_DONE_POSN                               0x2
#define _ADCON0_NOT_DONE_POSITION                           0x2
#define _ADCON0_NOT_DONE_SIZE                               0x1
#define _ADCON0_NOT_DONE_LENGTH                             0x1
#define _ADCON0_NOT_DONE_MASK                               0x4
#define _ADCON0_nDONE_POSN                                  0x2
#define _ADCON0_nDONE_POSITION                              0x2
#define _ADCON0_nDONE_SIZE                                  0x1
#define _ADCON0_nDONE_LENGTH                                0x1
#define _ADCON0_nDONE_MASK                                  0x4
#define _ADCON0_ADCAL_POSN                                  0x7
#define _ADCON0_ADCAL_POSITION                              0x7
#define _ADCON0_ADCAL_SIZE                                  0x1
#define _ADCON0_ADCAL_LENGTH                                0x1
#define _ADCON0_ADCAL_MASK                                  0x80
#define _ADCON0_GODONE_POSN                                 0x2
#define _ADCON0_GODONE_POSITION                             0x2
#define _ADCON0_GODONE_SIZE                                 0x1
#define _ADCON0_GODONE_LENGTH                               0x1
#define _ADCON0_GODONE_MASK                                 0x4

// Register: ADRES
#define ADRES ADRES
extern volatile unsigned short          ADRES               __at(0xFC3);
#ifndef _LIB_BUILD
asm("ADRES equ 0FC3h");
#endif

// Register: ADRESL
#define ADRESL ADRESL
extern volatile unsigned char           ADRESL              __at(0xFC3);
#ifndef _LIB_BUILD
asm("ADRESL equ 0FC3h");
#endif

// Register: ADRESH
#define ADRESH ADRESH
extern volatile unsigned char           ADRESH              __at(0xFC4);
#ifndef _LIB_BUILD
asm("ADRESH equ 0FC4h");
#endif

// Register: SSPCON2
#define SSPCON2 SSPCON2
extern volatile unsigned char           SSPCON2             __at(0xFC5);
#ifndef _LIB_BUILD
asm("SSPCON2 equ 0FC5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
} SSPCON2bits_t;
extern volatile SSPCON2bits_t SSPCON2bits __at(0xFC5);
// bitfield macros
#define _SSPCON2_SEN_POSN                                   0x0
#define _SSPCON2_SEN_POSITION                               0x0
#define _SSPCON2_SEN_SIZE                                   0x1
#define _SSPCON2_SEN_LENGTH                                 0x1
#define _SSPCON2_SEN_MASK                                   0x1
#define _SSPCON2_RSEN_POSN                                  0x1
#define _SSPCON2_RSEN_POSITION                              0x1
#define _SSPCON2_RSEN_SIZE                                  0x1
#define _SSPCON2_RSEN_LENGTH                                0x1
#define _SSPCON2_RSEN_MASK                                  0x2
#define _SSPCON2_PEN_POSN                                   0x2
#define _SSPCON2_PEN_POSITION                               0x2
#define _SSPCON2_PEN_SIZE                                   0x1
#define _SSPCON2_PEN_LENGTH                                 0x1
#define _SSPCON2_PEN_MASK                                   0x4
#define _SSPCON2_RCEN_POSN                                  0x3
#define _SSPCON2_RCEN_POSITION                              0x3
#define _SSPCON2_RCEN_SIZE                                  0x1
#define _SSPCON2_RCEN_LENGTH                                0x1
#define _SSPCON2_RCEN_MASK                                  0x8
#define _SSPCON2_ACKEN_POSN                                 0x4
#define _SSPCON2_ACKEN_POSITION                             0x4
#define _SSPCON2_ACKEN_SIZE                                 0x1
#define _SSPCON2_ACKEN_LENGTH                               0x1
#define _SSPCON2_ACKEN_MASK                                 0x10
#define _SSPCON2_ACKDT_POSN                                 0x5
#define _SSPCON2_ACKDT_POSITION                             0x5
#define _SSPCON2_ACKDT_SIZE                                 0x1
#define _SSPCON2_ACKDT_LENGTH                               0x1
#define _SSPCON2_ACKDT_MASK                                 0x20
#define _SSPCON2_ACKSTAT_POSN                               0x6
#define _SSPCON2_ACKSTAT_POSITION                           0x6
#define _SSPCON2_ACKSTAT_SIZE                               0x1
#define _SSPCON2_ACKSTAT_LENGTH                             0x1
#define _SSPCON2_ACKSTAT_MASK                               0x40
#define _SSPCON2_GCEN_POSN                                  0x7
#define _SSPCON2_GCEN_POSITION                              0x7
#define _SSPCON2_GCEN_SIZE                                  0x1
#define _SSPCON2_GCEN_LENGTH                                0x1
#define _SSPCON2_GCEN_MASK                                  0x80

// Register: SSPCON1
#define SSPCON1 SSPCON1
extern volatile unsigned char           SSPCON1             __at(0xFC6);
#ifndef _LIB_BUILD
asm("SSPCON1 equ 0FC6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
} SSPCON1bits_t;
extern volatile SSPCON1bits_t SSPCON1bits __at(0xFC6);
// bitfield macros
#define _SSPCON1_SSPM_POSN                                  0x0
#define _SSPCON1_SSPM_POSITION                              0x0
#define _SSPCON1_SSPM_SIZE                                  0x4
#define _SSPCON1_SSPM_LENGTH                                0x4
#define _SSPCON1_SSPM_MASK                                  0xF
#define _SSPCON1_CKP_POSN                                   0x4
#define _SSPCON1_CKP_POSITION                               0x4
#define _SSPCON1_CKP_SIZE                                   0x1
#define _SSPCON1_CKP_LENGTH                                 0x1
#define _SSPCON1_CKP_MASK                                   0x10
#define _SSPCON1_SSPEN_POSN                                 0x5
#define _SSPCON1_SSPEN_POSITION                             0x5
#define _SSPCON1_SSPEN_SIZE                                 0x1
#define _SSPCON1_SSPEN_LENGTH                               0x1
#define _SSPCON1_SSPEN_MASK                                 0x20
#define _SSPCON1_SSPOV_POSN                                 0x6
#define _SSPCON1_SSPOV_POSITION                             0x6
#define _SSPCON1_SSPOV_SIZE                                 0x1
#define _SSPCON1_SSPOV_LENGTH                               0x1
#define _SSPCON1_SSPOV_MASK                                 0x40
#define _SSPCON1_WCOL_POSN                                  0x7
#define _SSPCON1_WCOL_POSITION                              0x7
#define _SSPCON1_WCOL_SIZE                                  0x1
#define _SSPCON1_WCOL_LENGTH                                0x1
#define _SSPCON1_WCOL_MASK                                  0x80
#define _SSPCON1_SSPM0_POSN                                 0x0
#define _SSPCON1_SSPM0_POSITION                             0x0
#define _SSPCON1_SSPM0_SIZE                                 0x1
#define _SSPCON1_SSPM0_LENGTH                               0x1
#define _SSPCON1_SSPM0_MASK                                 0x1
#define _SSPCON1_SSPM1_POSN                                 0x1
#define _SSPCON1_SSPM1_POSITION                             0x1
#define _SSPCON1_SSPM1_SIZE                                 0x1
#define _SSPCON1_SSPM1_LENGTH                               0x1
#define _SSPCON1_SSPM1_MASK                                 0x2
#define _SSPCON1_SSPM2_POSN                                 0x2
#define _SSPCON1_SSPM2_POSITION                             0x2
#define _SSPCON1_SSPM2_SIZE                                 0x1
#define _SSPCON1_SSPM2_LENGTH                               0x1
#define _SSPCON1_SSPM2_MASK                                 0x4
#define _SSPCON1_SSPM3_POSN                                 0x3
#define _SSPCON1_SSPM3_POSITION                             0x3
#define _SSPCON1_SSPM3_SIZE                                 0x1
#define _SSPCON1_SSPM3_LENGTH                               0x1
#define _SSPCON1_SSPM3_MASK                                 0x8

// Register: SSPSTAT
#define SSPSTAT SSPSTAT
extern volatile unsigned char           SSPSTAT             __at(0xFC7);
#ifndef _LIB_BUILD
asm("SSPSTAT equ 0FC7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned R_NOT_W                :1;
    };
    struct {
        unsigned                        :5;
        unsigned D_NOT_A                :1;
    };
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned I2C_READ               :1;
        unsigned I2C_START              :1;
        unsigned I2C_STOP               :1;
        unsigned I2C_DATA               :1;
    };
    struct {
        unsigned                        :2;
        unsigned R                      :1;
        unsigned                        :2;
        unsigned D                      :1;
    };
    struct {
        unsigned                        :2;
        unsigned READ_WRITE             :1;
        unsigned                        :2;
        unsigned DATA_ADDRESS           :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_WRITE              :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_ADDRESS            :1;
    };
    struct {
        unsigned                        :2;
        unsigned nWRITE                 :1;
        unsigned                        :2;
        unsigned nADDRESS               :1;
    };
    struct {
        unsigned                        :2;
        unsigned nW                     :1;
        unsigned                        :2;
        unsigned nA                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_W                    :1;
        unsigned                        :2;
        unsigned D_A                    :1;
    };
    struct {
        unsigned                        :5;
        unsigned I2C_DAT                :1;
    };
    struct {
        unsigned                        :2;
        unsigned RW                     :1;
        unsigned START                  :1;
        unsigned STOP                   :1;
        unsigned DA                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_W                  :1;
        unsigned                        :2;
        unsigned NOT_A                  :1;
    };
} SSPSTATbits_t;
extern volatile SSPSTATbits_t SSPSTATbits __at(0xFC7);
// bitfield macros
#define _SSPSTAT_R_NOT_W_POSN                               0x2
#define _SSPSTAT_R_NOT_W_POSITION                           0x2
#define _SSPSTAT_R_NOT_W_SIZE                               0x1
#define _SSPSTAT_R_NOT_W_LENGTH                             0x1
#define _SSPSTAT_R_NOT_W_MASK                               0x4
#define _SSPSTAT_D_NOT_A_POSN                               0x5
#define _SSPSTAT_D_NOT_A_POSITION                           0x5
#define _SSPSTAT_D_NOT_A_SIZE                               0x1
#define _SSPSTAT_D_NOT_A_LENGTH                             0x1
#define _SSPSTAT_D_NOT_A_MASK                               0x20
#define _SSPSTAT_BF_POSN                                    0x0
#define _SSPSTAT_BF_POSITION                                0x0
#define _SSPSTAT_BF_SIZE                                    0x1
#define _SSPSTAT_BF_LENGTH                                  0x1
#define _SSPSTAT_BF_MASK                                    0x1
#define _SSPSTAT_UA_POSN                                    0x1
#define _SSPSTAT_UA_POSITION                                0x1
#define _SSPSTAT_UA_SIZE                                    0x1
#define _SSPSTAT_UA_LENGTH                                  0x1
#define _SSPSTAT_UA_MASK                                    0x2
#define _SSPSTAT_R_nW_POSN                                  0x2
#define _SSPSTAT_R_nW_POSITION                              0x2
#define _SSPSTAT_R_nW_SIZE                                  0x1
#define _SSPSTAT_R_nW_LENGTH                                0x1
#define _SSPSTAT_R_nW_MASK                                  0x4
#define _SSPSTAT_S_POSN                                     0x3
#define _SSPSTAT_S_POSITION                                 0x3
#define _SSPSTAT_S_SIZE                                     0x1
#define _SSPSTAT_S_LENGTH                                   0x1
#define _SSPSTAT_S_MASK                                     0x8
#define _SSPSTAT_P_POSN                                     0x4
#define _SSPSTAT_P_POSITION                                 0x4
#define _SSPSTAT_P_SIZE                                     0x1
#define _SSPSTAT_P_LENGTH                                   0x1
#define _SSPSTAT_P_MASK                                     0x10
#define _SSPSTAT_D_nA_POSN                                  0x5
#define _SSPSTAT_D_nA_POSITION                              0x5
#define _SSPSTAT_D_nA_SIZE                                  0x1
#define _SSPSTAT_D_nA_LENGTH                                0x1
#define _SSPSTAT_D_nA_MASK                                  0x20
#define _SSPSTAT_CKE_POSN                                   0x6
#define _SSPSTAT_CKE_POSITION                               0x6
#define _SSPSTAT_CKE_SIZE                                   0x1
#define _SSPSTAT_CKE_LENGTH                                 0x1
#define _SSPSTAT_CKE_MASK                                   0x40
#define _SSPSTAT_SMP_POSN                                   0x7
#define _SSPSTAT_SMP_POSITION                               0x7
#define _SSPSTAT_SMP_SIZE                                   0x1
#define _SSPSTAT_SMP_LENGTH                                 0x1
#define _SSPSTAT_SMP_MASK                                   0x80
#define _SSPSTAT_I2C_READ_POSN                              0x2
#define _SSPSTAT_I2C_READ_POSITION                          0x2
#define _SSPSTAT_I2C_READ_SIZE                              0x1
#define _SSPSTAT_I2C_READ_LENGTH                            0x1
#define _SSPSTAT_I2C_READ_MASK                              0x4
#define _SSPSTAT_I2C_START_POSN                             0x3
#define _SSPSTAT_I2C_START_POSITION                         0x3
#define _SSPSTAT_I2C_START_SIZE                             0x1
#define _SSPSTAT_I2C_START_LENGTH                           0x1
#define _SSPSTAT_I2C_START_MASK                             0x8
#define _SSPSTAT_I2C_STOP_POSN                              0x4
#define _SSPSTAT_I2C_STOP_POSITION                          0x4
#define _SSPSTAT_I2C_STOP_SIZE                              0x1
#define _SSPSTAT_I2C_STOP_LENGTH                            0x1
#define _SSPSTAT_I2C_STOP_MASK                              0x10
#define _SSPSTAT_I2C_DATA_POSN                              0x5
#define _SSPSTAT_I2C_DATA_POSITION                          0x5
#define _SSPSTAT_I2C_DATA_SIZE                              0x1
#define _SSPSTAT_I2C_DATA_LENGTH                            0x1
#define _SSPSTAT_I2C_DATA_MASK                              0x20
#define _SSPSTAT_R_POSN                                     0x2
#define _SSPSTAT_R_POSITION                                 0x2
#define _SSPSTAT_R_SIZE                                     0x1
#define _SSPSTAT_R_LENGTH                                   0x1
#define _SSPSTAT_R_MASK                                     0x4
#define _SSPSTAT_D_POSN                                     0x5
#define _SSPSTAT_D_POSITION                                 0x5
#define _SSPSTAT_D_SIZE                                     0x1
#define _SSPSTAT_D_LENGTH                                   0x1
#define _SSPSTAT_D_MASK                                     0x20
#define _SSPSTAT_READ_WRITE_POSN                            0x2
#define _SSPSTAT_READ_WRITE_POSITION                        0x2
#define _SSPSTAT_READ_WRITE_SIZE                            0x1
#define _SSPSTAT_READ_WRITE_LENGTH                          0x1
#define _SSPSTAT_READ_WRITE_MASK                            0x4
#define _SSPSTAT_DATA_ADDRESS_POSN                          0x5
#define _SSPSTAT_DATA_ADDRESS_POSITION                      0x5
#define _SSPSTAT_DATA_ADDRESS_SIZE                          0x1
#define _SSPSTAT_DATA_ADDRESS_LENGTH                        0x1
#define _SSPSTAT_DATA_ADDRESS_MASK                          0x20
#define _SSPSTAT_NOT_WRITE_POSN                             0x2
#define _SSPSTAT_NOT_WRITE_POSITION                         0x2
#define _SSPSTAT_NOT_WRITE_SIZE                             0x1
#define _SSPSTAT_NOT_WRITE_LENGTH                           0x1
#define _SSPSTAT_NOT_WRITE_MASK                             0x4
#define _SSPSTAT_NOT_ADDRESS_POSN                           0x5
#define _SSPSTAT_NOT_ADDRESS_POSITION                       0x5
#define _SSPSTAT_NOT_ADDRESS_SIZE                           0x1
#define _SSPSTAT_NOT_ADDRESS_LENGTH                         0x1
#define _SSPSTAT_NOT_ADDRESS_MASK                           0x20
#define _SSPSTAT_nWRITE_POSN                                0x2
#define _SSPSTAT_nWRITE_POSITION                            0x2
#define _SSPSTAT_nWRITE_SIZE                                0x1
#define _SSPSTAT_nWRITE_LENGTH                              0x1
#define _SSPSTAT_nWRITE_MASK                                0x4
#define _SSPSTAT_nADDRESS_POSN                              0x5
#define _SSPSTAT_nADDRESS_POSITION                          0x5
#define _SSPSTAT_nADDRESS_SIZE                              0x1
#define _SSPSTAT_nADDRESS_LENGTH                            0x1
#define _SSPSTAT_nADDRESS_MASK                              0x20
#define _SSPSTAT_nW_POSN                                    0x2
#define _SSPSTAT_nW_POSITION                                0x2
#define _SSPSTAT_nW_SIZE                                    0x1
#define _SSPSTAT_nW_LENGTH                                  0x1
#define _SSPSTAT_nW_MASK                                    0x4
#define _SSPSTAT_nA_POSN                                    0x5
#define _SSPSTAT_nA_POSITION                                0x5
#define _SSPSTAT_nA_SIZE                                    0x1
#define _SSPSTAT_nA_LENGTH                                  0x1
#define _SSPSTAT_nA_MASK                                    0x20
#define _SSPSTAT_R_W_POSN                                   0x2
#define _SSPSTAT_R_W_POSITION                               0x2
#define _SSPSTAT_R_W_SIZE                                   0x1
#define _SSPSTAT_R_W_LENGTH                                 0x1
#define _SSPSTAT_R_W_MASK                                   0x4
#define _SSPSTAT_D_A_POSN                                   0x5
#define _SSPSTAT_D_A_POSITION                               0x5
#define _SSPSTAT_D_A_SIZE                                   0x1
#define _SSPSTAT_D_A_LENGTH                                 0x1
#define _SSPSTAT_D_A_MASK                                   0x20
#define _SSPSTAT_I2C_DAT_POSN                               0x5
#define _SSPSTAT_I2C_DAT_POSITION                           0x5
#define _SSPSTAT_I2C_DAT_SIZE                               0x1
#define _SSPSTAT_I2C_DAT_LENGTH                             0x1
#define _SSPSTAT_I2C_DAT_MASK                               0x20
#define _SSPSTAT_RW_POSN                                    0x2
#define _SSPSTAT_RW_POSITION                                0x2
#define _SSPSTAT_RW_SIZE                                    0x1
#define _SSPSTAT_RW_LENGTH                                  0x1
#define _SSPSTAT_RW_MASK                                    0x4
#define _SSPSTAT_START_POSN                                 0x3
#define _SSPSTAT_START_POSITION                             0x3
#define _SSPSTAT_START_SIZE                                 0x1
#define _SSPSTAT_START_LENGTH                               0x1
#define _SSPSTAT_START_MASK                                 0x8
#define _SSPSTAT_STOP_POSN                                  0x4
#define _SSPSTAT_STOP_POSITION                              0x4
#define _SSPSTAT_STOP_SIZE                                  0x1
#define _SSPSTAT_STOP_LENGTH                                0x1
#define _SSPSTAT_STOP_MASK                                  0x10
#define _SSPSTAT_DA_POSN                                    0x5
#define _SSPSTAT_DA_POSITION                                0x5
#define _SSPSTAT_DA_SIZE                                    0x1
#define _SSPSTAT_DA_LENGTH                                  0x1
#define _SSPSTAT_DA_MASK                                    0x20
#define _SSPSTAT_NOT_W_POSN                                 0x2
#define _SSPSTAT_NOT_W_POSITION                             0x2
#define _SSPSTAT_NOT_W_SIZE                                 0x1
#define _SSPSTAT_NOT_W_LENGTH                               0x1
#define _SSPSTAT_NOT_W_MASK                                 0x4
#define _SSPSTAT_NOT_A_POSN                                 0x5
#define _SSPSTAT_NOT_A_POSITION                             0x5
#define _SSPSTAT_NOT_A_SIZE                                 0x1
#define _SSPSTAT_NOT_A_LENGTH                               0x1
#define _SSPSTAT_NOT_A_MASK                                 0x20

// Register: SSPADD
#define SSPADD SSPADD
extern volatile unsigned char           SSPADD              __at(0xFC8);
#ifndef _LIB_BUILD
asm("SSPADD equ 0FC8h");
#endif

// Register: SSPBUF
#define SSPBUF SSPBUF
extern volatile unsigned char           SSPBUF              __at(0xFC9);
#ifndef _LIB_BUILD
asm("SSPBUF equ 0FC9h");
#endif

// Register: T2CON
#define T2CON T2CON
extern volatile unsigned char           T2CON               __at(0xFCA);
#ifndef _LIB_BUILD
asm("T2CON equ 0FCAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T2CKPS                 :2;
        unsigned TMR2ON                 :1;
        unsigned TOUTPS                 :4;
    };
    struct {
        unsigned T2CKPS0                :1;
        unsigned T2CKPS1                :1;
        unsigned                        :1;
        unsigned TOUTPS0                :1;
        unsigned TOUTPS1                :1;
        unsigned TOUTPS2                :1;
        unsigned TOUTPS3                :1;
    };
} T2CONbits_t;
extern volatile T2CONbits_t T2CONbits __at(0xFCA);
// bitfield macros
#define _T2CON_T2CKPS_POSN                                  0x0
#define _T2CON_T2CKPS_POSITION                              0x0
#define _T2CON_T2CKPS_SIZE                                  0x2
#define _T2CON_T2CKPS_LENGTH                                0x2
#define _T2CON_T2CKPS_MASK                                  0x3
#define _T2CON_TMR2ON_POSN                                  0x2
#define _T2CON_TMR2ON_POSITION                              0x2
#define _T2CON_TMR2ON_SIZE                                  0x1
#define _T2CON_TMR2ON_LENGTH                                0x1
#define _T2CON_TMR2ON_MASK                                  0x4
#define _T2CON_TOUTPS_POSN                                  0x3
#define _T2CON_TOUTPS_POSITION                              0x3
#define _T2CON_TOUTPS_SIZE                                  0x4
#define _T2CON_TOUTPS_LENGTH                                0x4
#define _T2CON_TOUTPS_MASK                                  0x78
#define _T2CON_T2CKPS0_POSN                                 0x0
#define _T2CON_T2CKPS0_POSITION                             0x0
#define _T2CON_T2CKPS0_SIZE                                 0x1
#define _T2CON_T2CKPS0_LENGTH                               0x1
#define _T2CON_T2CKPS0_MASK                                 0x1
#define _T2CON_T2CKPS1_POSN                                 0x1
#define _T2CON_T2CKPS1_POSITION                             0x1
#define _T2CON_T2CKPS1_SIZE                                 0x1
#define _T2CON_T2CKPS1_LENGTH                               0x1
#define _T2CON_T2CKPS1_MASK                                 0x2
#define _T2CON_TOUTPS0_POSN                                 0x3
#define _T2CON_TOUTPS0_POSITION                             0x3
#define _T2CON_TOUTPS0_SIZE                                 0x1
#define _T2CON_TOUTPS0_LENGTH                               0x1
#define _T2CON_TOUTPS0_MASK                                 0x8
#define _T2CON_TOUTPS1_POSN                                 0x4
#define _T2CON_TOUTPS1_POSITION                             0x4
#define _T2CON_TOUTPS1_SIZE                                 0x1
#define _T2CON_TOUTPS1_LENGTH                               0x1
#define _T2CON_TOUTPS1_MASK                                 0x10
#define _T2CON_TOUTPS2_POSN                                 0x5
#define _T2CON_TOUTPS2_POSITION                             0x5
#define _T2CON_TOUTPS2_SIZE                                 0x1
#define _T2CON_TOUTPS2_LENGTH                               0x1
#define _T2CON_TOUTPS2_MASK                                 0x20
#define _T2CON_TOUTPS3_POSN                                 0x6
#define _T2CON_TOUTPS3_POSITION                             0x6
#define _T2CON_TOUTPS3_SIZE                                 0x1
#define _T2CON_TOUTPS3_LENGTH                               0x1
#define _T2CON_TOUTPS3_MASK                                 0x40

// Register: PR2
#define PR2 PR2
extern volatile unsigned char           PR2                 __at(0xFCB);
#ifndef _LIB_BUILD
asm("PR2 equ 0FCBh");
#endif
// aliases
extern volatile unsigned char           MEMCON              __at(0xFCB);
#ifndef _LIB_BUILD
asm("MEMCON equ 0FCBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :7;
        unsigned EBDIS                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned WAIT0                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned WAIT1                  :1;
    };
    struct {
        unsigned WM0                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned WM1                    :1;
    };
} PR2bits_t;
extern volatile PR2bits_t PR2bits __at(0xFCB);
// bitfield macros
#define _PR2_EBDIS_POSN                                     0x7
#define _PR2_EBDIS_POSITION                                 0x7
#define _PR2_EBDIS_SIZE                                     0x1
#define _PR2_EBDIS_LENGTH                                   0x1
#define _PR2_EBDIS_MASK                                     0x80
#define _PR2_WAIT0_POSN                                     0x4
#define _PR2_WAIT0_POSITION                                 0x4
#define _PR2_WAIT0_SIZE                                     0x1
#define _PR2_WAIT0_LENGTH                                   0x1
#define _PR2_WAIT0_MASK                                     0x10
#define _PR2_WAIT1_POSN                                     0x5
#define _PR2_WAIT1_POSITION                                 0x5
#define _PR2_WAIT1_SIZE                                     0x1
#define _PR2_WAIT1_LENGTH                                   0x1
#define _PR2_WAIT1_MASK                                     0x20
#define _PR2_WM0_POSN                                       0x0
#define _PR2_WM0_POSITION                                   0x0
#define _PR2_WM0_SIZE                                       0x1
#define _PR2_WM0_LENGTH                                     0x1
#define _PR2_WM0_MASK                                       0x1
#define _PR2_WM1_POSN                                       0x1
#define _PR2_WM1_POSITION                                   0x1
#define _PR2_WM1_SIZE                                       0x1
#define _PR2_WM1_LENGTH                                     0x1
#define _PR2_WM1_MASK                                       0x2
// alias bitfield definitions
typedef union {
    struct {
        unsigned                        :7;
        unsigned EBDIS                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned WAIT0                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned WAIT1                  :1;
    };
    struct {
        unsigned WM0                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned WM1                    :1;
    };
} MEMCONbits_t;
extern volatile MEMCONbits_t MEMCONbits __at(0xFCB);
// bitfield macros
#define _MEMCON_EBDIS_POSN                                  0x7
#define _MEMCON_EBDIS_POSITION                              0x7
#define _MEMCON_EBDIS_SIZE                                  0x1
#define _MEMCON_EBDIS_LENGTH                                0x1
#define _MEMCON_EBDIS_MASK                                  0x80
#define _MEMCON_WAIT0_POSN                                  0x4
#define _MEMCON_WAIT0_POSITION                              0x4
#define _MEMCON_WAIT0_SIZE                                  0x1
#define _MEMCON_WAIT0_LENGTH                                0x1
#define _MEMCON_WAIT0_MASK                                  0x10
#define _MEMCON_WAIT1_POSN                                  0x5
#define _MEMCON_WAIT1_POSITION                              0x5
#define _MEMCON_WAIT1_SIZE                                  0x1
#define _MEMCON_WAIT1_LENGTH                                0x1
#define _MEMCON_WAIT1_MASK                                  0x20
#define _MEMCON_WM0_POSN                                    0x0
#define _MEMCON_WM0_POSITION                                0x0
#define _MEMCON_WM0_SIZE                                    0x1
#define _MEMCON_WM0_LENGTH                                  0x1
#define _MEMCON_WM0_MASK                                    0x1
#define _MEMCON_WM1_POSN                                    0x1
#define _MEMCON_WM1_POSITION                                0x1
#define _MEMCON_WM1_SIZE                                    0x1
#define _MEMCON_WM1_LENGTH                                  0x1
#define _MEMCON_WM1_MASK                                    0x2

// Register: TMR2
#define TMR2 TMR2
extern volatile unsigned char           TMR2                __at(0xFCC);
#ifndef _LIB_BUILD
asm("TMR2 equ 0FCCh");
#endif

// Register: T1CON
#define T1CON T1CON
extern volatile unsigned char           T1CON               __at(0xFCD);
#ifndef _LIB_BUILD
asm("T1CON equ 0FCDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned NOT_T1SYNC             :1;
    };
    struct {
        unsigned TMR1ON                 :1;
        unsigned TMR1CS                 :1;
        unsigned nT1SYNC                :1;
        unsigned T1OSCEN                :1;
        unsigned T1CKPS                 :2;
        unsigned                        :1;
        unsigned RD16                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned T1INSYNC               :1;
        unsigned                        :1;
        unsigned T1CKPS0                :1;
        unsigned T1CKPS1                :1;
    };
    struct {
        unsigned                        :2;
        unsigned T1SYNC                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned SOSCEN                 :1;
        unsigned                        :3;
        unsigned T1RD16                 :1;
    };
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits __at(0xFCD);
// bitfield macros
#define _T1CON_NOT_T1SYNC_POSN                              0x2
#define _T1CON_NOT_T1SYNC_POSITION                          0x2
#define _T1CON_NOT_T1SYNC_SIZE                              0x1
#define _T1CON_NOT_T1SYNC_LENGTH                            0x1
#define _T1CON_NOT_T1SYNC_MASK                              0x4
#define _T1CON_TMR1ON_POSN                                  0x0
#define _T1CON_TMR1ON_POSITION                              0x0
#define _T1CON_TMR1ON_SIZE                                  0x1
#define _T1CON_TMR1ON_LENGTH                                0x1
#define _T1CON_TMR1ON_MASK                                  0x1
#define _T1CON_TMR1CS_POSN                                  0x1
#define _T1CON_TMR1CS_POSITION                              0x1
#define _T1CON_TMR1CS_SIZE                                  0x1
#define _T1CON_TMR1CS_LENGTH                                0x1
#define _T1CON_TMR1CS_MASK                                  0x2
#define _T1CON_nT1SYNC_POSN                                 0x2
#define _T1CON_nT1SYNC_POSITION                             0x2
#define _T1CON_nT1SYNC_SIZE                                 0x1
#define _T1CON_nT1SYNC_LENGTH                               0x1
#define _T1CON_nT1SYNC_MASK                                 0x4
#define _T1CON_T1OSCEN_POSN                                 0x3
#define _T1CON_T1OSCEN_POSITION                             0x3
#define _T1CON_T1OSCEN_SIZE                                 0x1
#define _T1CON_T1OSCEN_LENGTH                               0x1
#define _T1CON_T1OSCEN_MASK                                 0x8
#define _T1CON_T1CKPS_POSN                                  0x4
#define _T1CON_T1CKPS_POSITION                              0x4
#define _T1CON_T1CKPS_SIZE                                  0x2
#define _T1CON_T1CKPS_LENGTH                                0x2
#define _T1CON_T1CKPS_MASK                                  0x30
#define _T1CON_RD16_POSN                                    0x7
#define _T1CON_RD16_POSITION                                0x7
#define _T1CON_RD16_SIZE                                    0x1
#define _T1CON_RD16_LENGTH                                  0x1
#define _T1CON_RD16_MASK                                    0x80
#define _T1CON_T1INSYNC_POSN                                0x2
#define _T1CON_T1INSYNC_POSITION                            0x2
#define _T1CON_T1INSYNC_SIZE                                0x1
#define _T1CON_T1INSYNC_LENGTH                              0x1
#define _T1CON_T1INSYNC_MASK                                0x4
#define _T1CON_T1CKPS0_POSN                                 0x4
#define _T1CON_T1CKPS0_POSITION                             0x4
#define _T1CON_T1CKPS0_SIZE                                 0x1
#define _T1CON_T1CKPS0_LENGTH                               0x1
#define _T1CON_T1CKPS0_MASK                                 0x10
#define _T1CON_T1CKPS1_POSN                                 0x5
#define _T1CON_T1CKPS1_POSITION                             0x5
#define _T1CON_T1CKPS1_SIZE                                 0x1
#define _T1CON_T1CKPS1_LENGTH                               0x1
#define _T1CON_T1CKPS1_MASK                                 0x20
#define _T1CON_T1SYNC_POSN                                  0x2
#define _T1CON_T1SYNC_POSITION                              0x2
#define _T1CON_T1SYNC_SIZE                                  0x1
#define _T1CON_T1SYNC_LENGTH                                0x1
#define _T1CON_T1SYNC_MASK                                  0x4
#define _T1CON_SOSCEN_POSN                                  0x3
#define _T1CON_SOSCEN_POSITION                              0x3
#define _T1CON_SOSCEN_SIZE                                  0x1
#define _T1CON_SOSCEN_LENGTH                                0x1
#define _T1CON_SOSCEN_MASK                                  0x8
#define _T1CON_T1RD16_POSN                                  0x7
#define _T1CON_T1RD16_POSITION                              0x7
#define _T1CON_T1RD16_SIZE                                  0x1
#define _T1CON_T1RD16_LENGTH                                0x1
#define _T1CON_T1RD16_MASK                                  0x80

// Register: TMR1
#define TMR1 TMR1
extern volatile unsigned short          TMR1                __at(0xFCE);
#ifndef _LIB_BUILD
asm("TMR1 equ 0FCEh");
#endif

// Register: TMR1L
#define TMR1L TMR1L
extern volatile unsigned char           TMR1L               __at(0xFCE);
#ifndef _LIB_BUILD
asm("TMR1L equ 0FCEh");
#endif

// Register: TMR1H
#define TMR1H TMR1H
extern volatile unsigned char           TMR1H               __at(0xFCF);
#ifndef _LIB_BUILD
asm("TMR1H equ 0FCFh");
#endif

// Register: RCON
#define RCON RCON
extern volatile unsigned char           RCON                __at(0xFD0);
#ifndef _LIB_BUILD
asm("RCON equ 0FD0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NOT_BOR                :1;
    };
    struct {
        unsigned                        :1;
        unsigned NOT_POR                :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_PD                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned NOT_TO                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned NOT_RI                 :1;
    };
    struct {
        unsigned nBOR                   :1;
        unsigned nPOR                   :1;
        unsigned nPD                    :1;
        unsigned nTO                    :1;
        unsigned nRI                    :1;
        unsigned                        :2;
        unsigned IPEN                   :1;
    };
    struct {
        unsigned                        :7;
        unsigned NOT_IPEN               :1;
    };
    struct {
        unsigned BOR                    :1;
        unsigned POR                    :1;
        unsigned PD                     :1;
        unsigned TO                     :1;
        unsigned RI                     :1;
        unsigned                        :2;
        unsigned nIPEN                  :1;
    };
} RCONbits_t;
extern volatile RCONbits_t RCONbits __at(0xFD0);
// bitfield macros
#define _RCON_NOT_BOR_POSN                                  0x0
#define _RCON_NOT_BOR_POSITION                              0x0
#define _RCON_NOT_BOR_SIZE                                  0x1
#define _RCON_NOT_BOR_LENGTH                                0x1
#define _RCON_NOT_BOR_MASK                                  0x1
#define _RCON_NOT_POR_POSN                                  0x1
#define _RCON_NOT_POR_POSITION                              0x1
#define _RCON_NOT_POR_SIZE                                  0x1
#define _RCON_NOT_POR_LENGTH                                0x1
#define _RCON_NOT_POR_MASK                                  0x2
#define _RCON_NOT_PD_POSN                                   0x2
#define _RCON_NOT_PD_POSITION                               0x2
#define _RCON_NOT_PD_SIZE                                   0x1
#define _RCON_NOT_PD_LENGTH                                 0x1
#define _RCON_NOT_PD_MASK                                   0x4
#define _RCON_NOT_TO_POSN                                   0x3
#define _RCON_NOT_TO_POSITION                               0x3
#define _RCON_NOT_TO_SIZE                                   0x1
#define _RCON_NOT_TO_LENGTH                                 0x1
#define _RCON_NOT_TO_MASK                                   0x8
#define _RCON_NOT_RI_POSN                                   0x4
#define _RCON_NOT_RI_POSITION                               0x4
#define _RCON_NOT_RI_SIZE                                   0x1
#define _RCON_NOT_RI_LENGTH                                 0x1
#define _RCON_NOT_RI_MASK                                   0x10
#define _RCON_nBOR_POSN                                     0x0
#define _RCON_nBOR_POSITION                                 0x0
#define _RCON_nBOR_SIZE                                     0x1
#define _RCON_nBOR_LENGTH                                   0x1
#define _RCON_nBOR_MASK                                     0x1
#define _RCON_nPOR_POSN                                     0x1
#define _RCON_nPOR_POSITION                                 0x1
#define _RCON_nPOR_SIZE                                     0x1
#define _RCON_nPOR_LENGTH                                   0x1
#define _RCON_nPOR_MASK                                     0x2
#define _RCON_nPD_POSN                                      0x2
#define _RCON_nPD_POSITION                                  0x2
#define _RCON_nPD_SIZE                                      0x1
#define _RCON_nPD_LENGTH                                    0x1
#define _RCON_nPD_MASK                                      0x4
#define _RCON_nTO_POSN                                      0x3
#define _RCON_nTO_POSITION                                  0x3
#define _RCON_nTO_SIZE                                      0x1
#define _RCON_nTO_LENGTH                                    0x1
#define _RCON_nTO_MASK                                      0x8
#define _RCON_nRI_POSN                                      0x4
#define _RCON_nRI_POSITION                                  0x4
#define _RCON_nRI_SIZE                                      0x1
#define _RCON_nRI_LENGTH                                    0x1
#define _RCON_nRI_MASK                                      0x10
#define _RCON_IPEN_POSN                                     0x7
#define _RCON_IPEN_POSITION                                 0x7
#define _RCON_IPEN_SIZE                                     0x1
#define _RCON_IPEN_LENGTH                                   0x1
#define _RCON_IPEN_MASK                                     0x80
#define _RCON_NOT_IPEN_POSN                                 0x7
#define _RCON_NOT_IPEN_POSITION                             0x7
#define _RCON_NOT_IPEN_SIZE                                 0x1
#define _RCON_NOT_IPEN_LENGTH                               0x1
#define _RCON_NOT_IPEN_MASK                                 0x80
#define _RCON_BOR_POSN                                      0x0
#define _RCON_BOR_POSITION                                  0x0
#define _RCON_BOR_SIZE                                      0x1
#define _RCON_BOR_LENGTH                                    0x1
#define _RCON_BOR_MASK                                      0x1
#define _RCON_POR_POSN                                      0x1
#define _RCON_POR_POSITION                                  0x1
#define _RCON_POR_SIZE                                      0x1
#define _RCON_POR_LENGTH                                    0x1
#define _RCON_POR_MASK                                      0x2
#define _RCON_PD_POSN                                       0x2
#define _RCON_PD_POSITION                                   0x2
#define _RCON_PD_SIZE                                       0x1
#define _RCON_PD_LENGTH                                     0x1
#define _RCON_PD_MASK                                       0x4
#define _RCON_TO_POSN                                       0x3
#define _RCON_TO_POSITION                                   0x3
#define _RCON_TO_SIZE                                       0x1
#define _RCON_TO_LENGTH                                     0x1
#define _RCON_TO_MASK                                       0x8
#define _RCON_RI_POSN                                       0x4
#define _RCON_RI_POSITION                                   0x4
#define _RCON_RI_SIZE                                       0x1
#define _RCON_RI_LENGTH                                     0x1
#define _RCON_RI_MASK                                       0x10
#define _RCON_nIPEN_POSN                                    0x7
#define _RCON_nIPEN_POSITION                                0x7
#define _RCON_nIPEN_SIZE                                    0x1
#define _RCON_nIPEN_LENGTH                                  0x1
#define _RCON_nIPEN_MASK                                    0x80

// Register: WDTCON
#define WDTCON WDTCON
extern volatile unsigned char           WDTCON              __at(0xFD1);
#ifndef _LIB_BUILD
asm("WDTCON equ 0FD1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SWDTEN                 :1;
    };
    struct {
        unsigned SWDTE                  :1;
    };
} WDTCONbits_t;
extern volatile WDTCONbits_t WDTCONbits __at(0xFD1);
// bitfield macros
#define _WDTCON_SWDTEN_POSN                                 0x0
#define _WDTCON_SWDTEN_POSITION                             0x0
#define _WDTCON_SWDTEN_SIZE                                 0x1
#define _WDTCON_SWDTEN_LENGTH                               0x1
#define _WDTCON_SWDTEN_MASK                                 0x1
#define _WDTCON_SWDTE_POSN                                  0x0
#define _WDTCON_SWDTE_POSITION                              0x0
#define _WDTCON_SWDTE_SIZE                                  0x1
#define _WDTCON_SWDTE_LENGTH                                0x1
#define _WDTCON_SWDTE_MASK                                  0x1

// Register: LVDCON
#define LVDCON LVDCON
extern volatile unsigned char           LVDCON              __at(0xFD2);
#ifndef _LIB_BUILD
asm("LVDCON equ 0FD2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LVDL                   :4;
        unsigned LVDEN                  :1;
        unsigned IRVST                  :1;
    };
    struct {
        unsigned LVDL0                  :1;
        unsigned LVDL1                  :1;
        unsigned LVDL2                  :1;
        unsigned LVDL3                  :1;
        unsigned                        :1;
        unsigned IVRST                  :1;
    };
} LVDCONbits_t;
extern volatile LVDCONbits_t LVDCONbits __at(0xFD2);
// bitfield macros
#define _LVDCON_LVDL_POSN                                   0x0
#define _LVDCON_LVDL_POSITION                               0x0
#define _LVDCON_LVDL_SIZE                                   0x4
#define _LVDCON_LVDL_LENGTH                                 0x4
#define _LVDCON_LVDL_MASK                                   0xF
#define _LVDCON_LVDEN_POSN                                  0x4
#define _LVDCON_LVDEN_POSITION                              0x4
#define _LVDCON_LVDEN_SIZE                                  0x1
#define _LVDCON_LVDEN_LENGTH                                0x1
#define _LVDCON_LVDEN_MASK                                  0x10
#define _LVDCON_IRVST_POSN                                  0x5
#define _LVDCON_IRVST_POSITION                              0x5
#define _LVDCON_IRVST_SIZE                                  0x1
#define _LVDCON_IRVST_LENGTH                                0x1
#define _LVDCON_IRVST_MASK                                  0x20
#define _LVDCON_LVDL0_POSN                                  0x0
#define _LVDCON_LVDL0_POSITION                              0x0
#define _LVDCON_LVDL0_SIZE                                  0x1
#define _LVDCON_LVDL0_LENGTH                                0x1
#define _LVDCON_LVDL0_MASK                                  0x1
#define _LVDCON_LVDL1_POSN                                  0x1
#define _LVDCON_LVDL1_POSITION                              0x1
#define _LVDCON_LVDL1_SIZE                                  0x1
#define _LVDCON_LVDL1_LENGTH                                0x1
#define _LVDCON_LVDL1_MASK                                  0x2
#define _LVDCON_LVDL2_POSN                                  0x2
#define _LVDCON_LVDL2_POSITION                              0x2
#define _LVDCON_LVDL2_SIZE                                  0x1
#define _LVDCON_LVDL2_LENGTH                                0x1
#define _LVDCON_LVDL2_MASK                                  0x4
#define _LVDCON_LVDL3_POSN                                  0x3
#define _LVDCON_LVDL3_POSITION                              0x3
#define _LVDCON_LVDL3_SIZE                                  0x1
#define _LVDCON_LVDL3_LENGTH                                0x1
#define _LVDCON_LVDL3_MASK                                  0x8
#define _LVDCON_IVRST_POSN                                  0x5
#define _LVDCON_IVRST_POSITION                              0x5
#define _LVDCON_IVRST_SIZE                                  0x1
#define _LVDCON_IVRST_LENGTH                                0x1
#define _LVDCON_IVRST_MASK                                  0x20

// Register: OSCCON
#define OSCCON OSCCON
extern volatile unsigned char           OSCCON              __at(0xFD3);
#ifndef _LIB_BUILD
asm("OSCCON equ 0FD3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SCS                    :1;
    };
} OSCCONbits_t;
extern volatile OSCCONbits_t OSCCONbits __at(0xFD3);
// bitfield macros
#define _OSCCON_SCS_POSN                                    0x0
#define _OSCCON_SCS_POSITION                                0x0
#define _OSCCON_SCS_SIZE                                    0x1
#define _OSCCON_SCS_LENGTH                                  0x1
#define _OSCCON_SCS_MASK                                    0x1

// Register: T0CON
#define T0CON T0CON
extern volatile unsigned char           T0CON               __at(0xFD5);
#ifndef _LIB_BUILD
asm("T0CON equ 0FD5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T0PS                   :3;
        unsigned PSA                    :1;
        unsigned T0SE                   :1;
        unsigned T0CS                   :1;
        unsigned T08BIT                 :1;
        unsigned TMR0ON                 :1;
    };
    struct {
        unsigned T0PS0                  :1;
        unsigned T0PS1                  :1;
        unsigned T0PS2                  :1;
    };
} T0CONbits_t;
extern volatile T0CONbits_t T0CONbits __at(0xFD5);
// bitfield macros
#define _T0CON_T0PS_POSN                                    0x0
#define _T0CON_T0PS_POSITION                                0x0
#define _T0CON_T0PS_SIZE                                    0x3
#define _T0CON_T0PS_LENGTH                                  0x3
#define _T0CON_T0PS_MASK                                    0x7
#define _T0CON_PSA_POSN                                     0x3
#define _T0CON_PSA_POSITION                                 0x3
#define _T0CON_PSA_SIZE                                     0x1
#define _T0CON_PSA_LENGTH                                   0x1
#define _T0CON_PSA_MASK                                     0x8
#define _T0CON_T0SE_POSN                                    0x4
#define _T0CON_T0SE_POSITION                                0x4
#define _T0CON_T0SE_SIZE                                    0x1
#define _T0CON_T0SE_LENGTH                                  0x1
#define _T0CON_T0SE_MASK                                    0x10
#define _T0CON_T0CS_POSN                                    0x5
#define _T0CON_T0CS_POSITION                                0x5
#define _T0CON_T0CS_SIZE                                    0x1
#define _T0CON_T0CS_LENGTH                                  0x1
#define _T0CON_T0CS_MASK                                    0x20
#define _T0CON_T08BIT_POSN                                  0x6
#define _T0CON_T08BIT_POSITION                              0x6
#define _T0CON_T08BIT_SIZE                                  0x1
#define _T0CON_T08BIT_LENGTH                                0x1
#define _T0CON_T08BIT_MASK                                  0x40
#define _T0CON_TMR0ON_POSN                                  0x7
#define _T0CON_TMR0ON_POSITION                              0x7
#define _T0CON_TMR0ON_SIZE                                  0x1
#define _T0CON_TMR0ON_LENGTH                                0x1
#define _T0CON_TMR0ON_MASK                                  0x80
#define _T0CON_T0PS0_POSN                                   0x0
#define _T0CON_T0PS0_POSITION                               0x0
#define _T0CON_T0PS0_SIZE                                   0x1
#define _T0CON_T0PS0_LENGTH                                 0x1
#define _T0CON_T0PS0_MASK                                   0x1
#define _T0CON_T0PS1_POSN                                   0x1
#define _T0CON_T0PS1_POSITION                               0x1
#define _T0CON_T0PS1_SIZE                                   0x1
#define _T0CON_T0PS1_LENGTH                                 0x1
#define _T0CON_T0PS1_MASK                                   0x2
#define _T0CON_T0PS2_POSN                                   0x2
#define _T0CON_T0PS2_POSITION                               0x2
#define _T0CON_T0PS2_SIZE                                   0x1
#define _T0CON_T0PS2_LENGTH                                 0x1
#define _T0CON_T0PS2_MASK                                   0x4

// Register: TMR0
#define TMR0 TMR0
extern volatile unsigned short          TMR0                __at(0xFD6);
#ifndef _LIB_BUILD
asm("TMR0 equ 0FD6h");
#endif

// Register: TMR0L
#define TMR0L TMR0L
extern volatile unsigned char           TMR0L               __at(0xFD6);
#ifndef _LIB_BUILD
asm("TMR0L equ 0FD6h");
#endif

// Register: TMR0H
#define TMR0H TMR0H
extern volatile unsigned char           TMR0H               __at(0xFD7);
#ifndef _LIB_BUILD
asm("TMR0H equ 0FD7h");
#endif

// Register: STATUS
#define STATUS STATUS
extern volatile unsigned char           STATUS              __at(0xFD8);
#ifndef _LIB_BUILD
asm("STATUS equ 0FD8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C                      :1;
        unsigned DC                     :1;
        unsigned Z                      :1;
        unsigned OV                     :1;
        unsigned N                      :1;
    };
    struct {
        unsigned CARRY                  :1;
        unsigned                        :1;
        unsigned ZERO                   :1;
        unsigned OVERFLOW               :1;
        unsigned NEGATIVE               :1;
    };
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits __at(0xFD8);
// bitfield macros
#define _STATUS_C_POSN                                      0x0
#define _STATUS_C_POSITION                                  0x0
#define _STATUS_C_SIZE                                      0x1
#define _STATUS_C_LENGTH                                    0x1
#define _STATUS_C_MASK                                      0x1
#define _STATUS_DC_POSN                                     0x1
#define _STATUS_DC_POSITION                                 0x1
#define _STATUS_DC_SIZE                                     0x1
#define _STATUS_DC_LENGTH                                   0x1
#define _STATUS_DC_MASK                                     0x2
#define _STATUS_Z_POSN                                      0x2
#define _STATUS_Z_POSITION                                  0x2
#define _STATUS_Z_SIZE                                      0x1
#define _STATUS_Z_LENGTH                                    0x1
#define _STATUS_Z_MASK                                      0x4
#define _STATUS_OV_POSN                                     0x3
#define _STATUS_OV_POSITION                                 0x3
#define _STATUS_OV_SIZE                                     0x1
#define _STATUS_OV_LENGTH                                   0x1
#define _STATUS_OV_MASK                                     0x8
#define _STATUS_N_POSN                                      0x4
#define _STATUS_N_POSITION                                  0x4
#define _STATUS_N_SIZE                                      0x1
#define _STATUS_N_LENGTH                                    0x1
#define _STATUS_N_MASK                                      0x10
#define _STATUS_CARRY_POSN                                  0x0
#define _STATUS_CARRY_POSITION                              0x0
#define _STATUS_CARRY_SIZE                                  0x1
#define _STATUS_CARRY_LENGTH                                0x1
#define _STATUS_CARRY_MASK                                  0x1
#define _STATUS_ZERO_POSN                                   0x2
#define _STATUS_ZERO_POSITION                               0x2
#define _STATUS_ZERO_SIZE                                   0x1
#define _STATUS_ZERO_LENGTH                                 0x1
#define _STATUS_ZERO_MASK                                   0x4
#define _STATUS_OVERFLOW_POSN                               0x3
#define _STATUS_OVERFLOW_POSITION                           0x3
#define _STATUS_OVERFLOW_SIZE                               0x1
#define _STATUS_OVERFLOW_LENGTH                             0x1
#define _STATUS_OVERFLOW_MASK                               0x8
#define _STATUS_NEGATIVE_POSN                               0x4
#define _STATUS_NEGATIVE_POSITION                           0x4
#define _STATUS_NEGATIVE_SIZE                               0x1
#define _STATUS_NEGATIVE_LENGTH                             0x1
#define _STATUS_NEGATIVE_MASK                               0x10

// Register: FSR2
#define FSR2 FSR2
extern volatile unsigned short          FSR2                __at(0xFD9);
#ifndef _LIB_BUILD
asm("FSR2 equ 0FD9h");
#endif

// Register: FSR2L
#define FSR2L FSR2L
extern volatile unsigned char           FSR2L               __at(0xFD9);
#ifndef _LIB_BUILD
asm("FSR2L equ 0FD9h");
#endif

// Register: FSR2H
#define FSR2H FSR2H
extern volatile unsigned char           FSR2H               __at(0xFDA);
#ifndef _LIB_BUILD
asm("FSR2H equ 0FDAh");
#endif

// Register: PLUSW2
#define PLUSW2 PLUSW2
extern volatile unsigned char           PLUSW2              __at(0xFDB);
#ifndef _LIB_BUILD
asm("PLUSW2 equ 0FDBh");
#endif

// Register: PREINC2
#define PREINC2 PREINC2
extern volatile unsigned char           PREINC2             __at(0xFDC);
#ifndef _LIB_BUILD
asm("PREINC2 equ 0FDCh");
#endif

// Register: POSTDEC2
#define POSTDEC2 POSTDEC2
extern volatile unsigned char           POSTDEC2            __at(0xFDD);
#ifndef _LIB_BUILD
asm("POSTDEC2 equ 0FDDh");
#endif

// Register: POSTINC2
#define POSTINC2 POSTINC2
extern volatile unsigned char           POSTINC2            __at(0xFDE);
#ifndef _LIB_BUILD
asm("POSTINC2 equ 0FDEh");
#endif

// Register: INDF2
#define INDF2 INDF2
extern volatile unsigned char           INDF2               __at(0xFDF);
#ifndef _LIB_BUILD
asm("INDF2 equ 0FDFh");
#endif

// Register: BSR
#define BSR BSR
extern volatile unsigned char           BSR                 __at(0xFE0);
#ifndef _LIB_BUILD
asm("BSR equ 0FE0h");
#endif

// Register: FSR1
#define FSR1 FSR1
extern volatile unsigned short          FSR1                __at(0xFE1);
#ifndef _LIB_BUILD
asm("FSR1 equ 0FE1h");
#endif

// Register: FSR1L
#define FSR1L FSR1L
extern volatile unsigned char           FSR1L               __at(0xFE1);
#ifndef _LIB_BUILD
asm("FSR1L equ 0FE1h");
#endif

// Register: FSR1H
#define FSR1H FSR1H
extern volatile unsigned char           FSR1H               __at(0xFE2);
#ifndef _LIB_BUILD
asm("FSR1H equ 0FE2h");
#endif

// Register: PLUSW1
#define PLUSW1 PLUSW1
extern volatile unsigned char           PLUSW1              __at(0xFE3);
#ifndef _LIB_BUILD
asm("PLUSW1 equ 0FE3h");
#endif

// Register: PREINC1
#define PREINC1 PREINC1
extern volatile unsigned char           PREINC1             __at(0xFE4);
#ifndef _LIB_BUILD
asm("PREINC1 equ 0FE4h");
#endif

// Register: POSTDEC1
#define POSTDEC1 POSTDEC1
extern volatile unsigned char           POSTDEC1            __at(0xFE5);
#ifndef _LIB_BUILD
asm("POSTDEC1 equ 0FE5h");
#endif

// Register: POSTINC1
#define POSTINC1 POSTINC1
extern volatile unsigned char           POSTINC1            __at(0xFE6);
#ifndef _LIB_BUILD
asm("POSTINC1 equ 0FE6h");
#endif

// Register: INDF1
#define INDF1 INDF1
extern volatile unsigned char           INDF1               __at(0xFE7);
#ifndef _LIB_BUILD
asm("INDF1 equ 0FE7h");
#endif

// Register: WREG
#define WREG WREG
extern volatile unsigned char           WREG                __at(0xFE8);
#ifndef _LIB_BUILD
asm("WREG equ 0FE8h");
#endif
// aliases
// extern volatile unsigned char           W                   __at(0xFE8);
#ifndef _LIB_BUILD
// asm("W equ 0FE8h");
#endif

// Register: FSR0
#define FSR0 FSR0
extern volatile unsigned short          FSR0                __at(0xFE9);
#ifndef _LIB_BUILD
asm("FSR0 equ 0FE9h");
#endif

// Register: FSR0L
#define FSR0L FSR0L
extern volatile unsigned char           FSR0L               __at(0xFE9);
#ifndef _LIB_BUILD
asm("FSR0L equ 0FE9h");
#endif

// Register: FSR0H
#define FSR0H FSR0H
extern volatile unsigned char           FSR0H               __at(0xFEA);
#ifndef _LIB_BUILD
asm("FSR0H equ 0FEAh");
#endif

// Register: PLUSW0
#define PLUSW0 PLUSW0
extern volatile unsigned char           PLUSW0              __at(0xFEB);
#ifndef _LIB_BUILD
asm("PLUSW0 equ 0FEBh");
#endif

// Register: PREINC0
#define PREINC0 PREINC0
extern volatile unsigned char           PREINC0             __at(0xFEC);
#ifndef _LIB_BUILD
asm("PREINC0 equ 0FECh");
#endif

// Register: POSTDEC0
#define POSTDEC0 POSTDEC0
extern volatile unsigned char           POSTDEC0            __at(0xFED);
#ifndef _LIB_BUILD
asm("POSTDEC0 equ 0FEDh");
#endif

// Register: POSTINC0
#define POSTINC0 POSTINC0
extern volatile unsigned char           POSTINC0            __at(0xFEE);
#ifndef _LIB_BUILD
asm("POSTINC0 equ 0FEEh");
#endif

// Register: INDF0
#define INDF0 INDF0
extern volatile unsigned char           INDF0               __at(0xFEF);
#ifndef _LIB_BUILD
asm("INDF0 equ 0FEFh");
#endif

// Register: INTCON3
#define INTCON3 INTCON3
extern volatile unsigned char           INTCON3             __at(0xFF0);
#ifndef _LIB_BUILD
asm("INTCON3 equ 0FF0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INT1IF                 :1;
        unsigned INT2IF                 :1;
        unsigned                        :1;
        unsigned INT1IE                 :1;
        unsigned INT2IE                 :1;
        unsigned                        :1;
        unsigned INT1IP                 :1;
        unsigned INT2IP                 :1;
    };
    struct {
        unsigned INT1F                  :1;
        unsigned INT2F                  :1;
        unsigned                        :1;
        unsigned INT1E                  :1;
        unsigned INT2E                  :1;
        unsigned                        :1;
        unsigned INT1P                  :1;
        unsigned INT2P                  :1;
    };
} INTCON3bits_t;
extern volatile INTCON3bits_t INTCON3bits __at(0xFF0);
// bitfield macros
#define _INTCON3_INT1IF_POSN                                0x0
#define _INTCON3_INT1IF_POSITION                            0x0
#define _INTCON3_INT1IF_SIZE                                0x1
#define _INTCON3_INT1IF_LENGTH                              0x1
#define _INTCON3_INT1IF_MASK                                0x1
#define _INTCON3_INT2IF_POSN                                0x1
#define _INTCON3_INT2IF_POSITION                            0x1
#define _INTCON3_INT2IF_SIZE                                0x1
#define _INTCON3_INT2IF_LENGTH                              0x1
#define _INTCON3_INT2IF_MASK                                0x2
#define _INTCON3_INT1IE_POSN                                0x3
#define _INTCON3_INT1IE_POSITION                            0x3
#define _INTCON3_INT1IE_SIZE                                0x1
#define _INTCON3_INT1IE_LENGTH                              0x1
#define _INTCON3_INT1IE_MASK                                0x8
#define _INTCON3_INT2IE_POSN                                0x4
#define _INTCON3_INT2IE_POSITION                            0x4
#define _INTCON3_INT2IE_SIZE                                0x1
#define _INTCON3_INT2IE_LENGTH                              0x1
#define _INTCON3_INT2IE_MASK                                0x10
#define _INTCON3_INT1IP_POSN                                0x6
#define _INTCON3_INT1IP_POSITION                            0x6
#define _INTCON3_INT1IP_SIZE                                0x1
#define _INTCON3_INT1IP_LENGTH                              0x1
#define _INTCON3_INT1IP_MASK                                0x40
#define _INTCON3_INT2IP_POSN                                0x7
#define _INTCON3_INT2IP_POSITION                            0x7
#define _INTCON3_INT2IP_SIZE                                0x1
#define _INTCON3_INT2IP_LENGTH                              0x1
#define _INTCON3_INT2IP_MASK                                0x80
#define _INTCON3_INT1F_POSN                                 0x0
#define _INTCON3_INT1F_POSITION                             0x0
#define _INTCON3_INT1F_SIZE                                 0x1
#define _INTCON3_INT1F_LENGTH                               0x1
#define _INTCON3_INT1F_MASK                                 0x1
#define _INTCON3_INT2F_POSN                                 0x1
#define _INTCON3_INT2F_POSITION                             0x1
#define _INTCON3_INT2F_SIZE                                 0x1
#define _INTCON3_INT2F_LENGTH                               0x1
#define _INTCON3_INT2F_MASK                                 0x2
#define _INTCON3_INT1E_POSN                                 0x3
#define _INTCON3_INT1E_POSITION                             0x3
#define _INTCON3_INT1E_SIZE                                 0x1
#define _INTCON3_INT1E_LENGTH                               0x1
#define _INTCON3_INT1E_MASK                                 0x8
#define _INTCON3_INT2E_POSN                                 0x4
#define _INTCON3_INT2E_POSITION                             0x4
#define _INTCON3_INT2E_SIZE                                 0x1
#define _INTCON3_INT2E_LENGTH                               0x1
#define _INTCON3_INT2E_MASK                                 0x10
#define _INTCON3_INT1P_POSN                                 0x6
#define _INTCON3_INT1P_POSITION                             0x6
#define _INTCON3_INT1P_SIZE                                 0x1
#define _INTCON3_INT1P_LENGTH                               0x1
#define _INTCON3_INT1P_MASK                                 0x40
#define _INTCON3_INT2P_POSN                                 0x7
#define _INTCON3_INT2P_POSITION                             0x7
#define _INTCON3_INT2P_SIZE                                 0x1
#define _INTCON3_INT2P_LENGTH                               0x1
#define _INTCON3_INT2P_MASK                                 0x80

// Register: INTCON2
#define INTCON2 INTCON2
extern volatile unsigned char           INTCON2             __at(0xFF1);
#ifndef _LIB_BUILD
asm("INTCON2 equ 0FF1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :7;
        unsigned NOT_RBPU               :1;
    };
    struct {
        unsigned RBIP                   :1;
        unsigned                        :1;
        unsigned TMR0IP                 :1;
        unsigned                        :1;
        unsigned INTEDG2                :1;
        unsigned INTEDG1                :1;
        unsigned INTEDG0                :1;
        unsigned nRBPU                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned T0IP                   :1;
        unsigned                        :4;
        unsigned RBPU                   :1;
    };
} INTCON2bits_t;
extern volatile INTCON2bits_t INTCON2bits __at(0xFF1);
// bitfield macros
#define _INTCON2_NOT_RBPU_POSN                              0x7
#define _INTCON2_NOT_RBPU_POSITION                          0x7
#define _INTCON2_NOT_RBPU_SIZE                              0x1
#define _INTCON2_NOT_RBPU_LENGTH                            0x1
#define _INTCON2_NOT_RBPU_MASK                              0x80
#define _INTCON2_RBIP_POSN                                  0x0
#define _INTCON2_RBIP_POSITION                              0x0
#define _INTCON2_RBIP_SIZE                                  0x1
#define _INTCON2_RBIP_LENGTH                                0x1
#define _INTCON2_RBIP_MASK                                  0x1
#define _INTCON2_TMR0IP_POSN                                0x2
#define _INTCON2_TMR0IP_POSITION                            0x2
#define _INTCON2_TMR0IP_SIZE                                0x1
#define _INTCON2_TMR0IP_LENGTH                              0x1
#define _INTCON2_TMR0IP_MASK                                0x4
#define _INTCON2_INTEDG2_POSN                               0x4
#define _INTCON2_INTEDG2_POSITION                           0x4
#define _INTCON2_INTEDG2_SIZE                               0x1
#define _INTCON2_INTEDG2_LENGTH                             0x1
#define _INTCON2_INTEDG2_MASK                               0x10
#define _INTCON2_INTEDG1_POSN                               0x5
#define _INTCON2_INTEDG1_POSITION                           0x5
#define _INTCON2_INTEDG1_SIZE                               0x1
#define _INTCON2_INTEDG1_LENGTH                             0x1
#define _INTCON2_INTEDG1_MASK                               0x20
#define _INTCON2_INTEDG0_POSN                               0x6
#define _INTCON2_INTEDG0_POSITION                           0x6
#define _INTCON2_INTEDG0_SIZE                               0x1
#define _INTCON2_INTEDG0_LENGTH                             0x1
#define _INTCON2_INTEDG0_MASK                               0x40
#define _INTCON2_nRBPU_POSN                                 0x7
#define _INTCON2_nRBPU_POSITION                             0x7
#define _INTCON2_nRBPU_SIZE                                 0x1
#define _INTCON2_nRBPU_LENGTH                               0x1
#define _INTCON2_nRBPU_MASK                                 0x80
#define _INTCON2_T0IP_POSN                                  0x2
#define _INTCON2_T0IP_POSITION                              0x2
#define _INTCON2_T0IP_SIZE                                  0x1
#define _INTCON2_T0IP_LENGTH                                0x1
#define _INTCON2_T0IP_MASK                                  0x4
#define _INTCON2_RBPU_POSN                                  0x7
#define _INTCON2_RBPU_POSITION                              0x7
#define _INTCON2_RBPU_SIZE                                  0x1
#define _INTCON2_RBPU_LENGTH                                0x1
#define _INTCON2_RBPU_MASK                                  0x80

// Register: INTCON
#define INTCON INTCON
extern volatile unsigned char           INTCON              __at(0xFF2);
#ifndef _LIB_BUILD
asm("INTCON equ 0FF2h");
#endif
// aliases
extern volatile unsigned char           INTCON1             __at(0xFF2);
#ifndef _LIB_BUILD
asm("INTCON1 equ 0FF2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RBIF                   :1;
        unsigned INT0IF                 :1;
        unsigned TMR0IF                 :1;
        unsigned RBIE                   :1;
        unsigned INT0IE                 :1;
        unsigned TMR0IE                 :1;
        unsigned PEIE_GIEL              :1;
        unsigned GIE_GIEH               :1;
    };
    struct {
        unsigned                        :1;
        unsigned INT0F                  :1;
        unsigned T0IF                   :1;
        unsigned                        :1;
        unsigned INT0E                  :1;
        unsigned T0IE                   :1;
        unsigned PEIE                   :1;
        unsigned GIE                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned GIEL                   :1;
        unsigned GIEH                   :1;
    };
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits __at(0xFF2);
// bitfield macros
#define _INTCON_RBIF_POSN                                   0x0
#define _INTCON_RBIF_POSITION                               0x0
#define _INTCON_RBIF_SIZE                                   0x1
#define _INTCON_RBIF_LENGTH                                 0x1
#define _INTCON_RBIF_MASK                                   0x1
#define _INTCON_INT0IF_POSN                                 0x1
#define _INTCON_INT0IF_POSITION                             0x1
#define _INTCON_INT0IF_SIZE                                 0x1
#define _INTCON_INT0IF_LENGTH                               0x1
#define _INTCON_INT0IF_MASK                                 0x2
#define _INTCON_TMR0IF_POSN                                 0x2
#define _INTCON_TMR0IF_POSITION                             0x2
#define _INTCON_TMR0IF_SIZE                                 0x1
#define _INTCON_TMR0IF_LENGTH                               0x1
#define _INTCON_TMR0IF_MASK                                 0x4
#define _INTCON_RBIE_POSN                                   0x3
#define _INTCON_RBIE_POSITION                               0x3
#define _INTCON_RBIE_SIZE                                   0x1
#define _INTCON_RBIE_LENGTH                                 0x1
#define _INTCON_RBIE_MASK                                   0x8
#define _INTCON_INT0IE_POSN                                 0x4
#define _INTCON_INT0IE_POSITION                             0x4
#define _INTCON_INT0IE_SIZE                                 0x1
#define _INTCON_INT0IE_LENGTH                               0x1
#define _INTCON_INT0IE_MASK                                 0x10
#define _INTCON_TMR0IE_POSN                                 0x5
#define _INTCON_TMR0IE_POSITION                             0x5
#define _INTCON_TMR0IE_SIZE                                 0x1
#define _INTCON_TMR0IE_LENGTH                               0x1
#define _INTCON_TMR0IE_MASK                                 0x20
#define _INTCON_PEIE_GIEL_POSN                              0x6
#define _INTCON_PEIE_GIEL_POSITION                          0x6
#define _INTCON_PEIE_GIEL_SIZE                              0x1
#define _INTCON_PEIE_GIEL_LENGTH                            0x1
#define _INTCON_PEIE_GIEL_MASK                              0x40
#define _INTCON_GIE_GIEH_POSN                               0x7
#define _INTCON_GIE_GIEH_POSITION                           0x7
#define _INTCON_GIE_GIEH_SIZE                               0x1
#define _INTCON_GIE_GIEH_LENGTH                             0x1
#define _INTCON_GIE_GIEH_MASK                               0x80
#define _INTCON_INT0F_POSN                                  0x1
#define _INTCON_INT0F_POSITION                              0x1
#define _INTCON_INT0F_SIZE                                  0x1
#define _INTCON_INT0F_LENGTH                                0x1
#define _INTCON_INT0F_MASK                                  0x2
#define _INTCON_T0IF_POSN                                   0x2
#define _INTCON_T0IF_POSITION                               0x2
#define _INTCON_T0IF_SIZE                                   0x1
#define _INTCON_T0IF_LENGTH                                 0x1
#define _INTCON_T0IF_MASK                                   0x4
#define _INTCON_INT0E_POSN                                  0x4
#define _INTCON_INT0E_POSITION                              0x4
#define _INTCON_INT0E_SIZE                                  0x1
#define _INTCON_INT0E_LENGTH                                0x1
#define _INTCON_INT0E_MASK                                  0x10
#define _INTCON_T0IE_POSN                                   0x5
#define _INTCON_T0IE_POSITION                               0x5
#define _INTCON_T0IE_SIZE                                   0x1
#define _INTCON_T0IE_LENGTH                                 0x1
#define _INTCON_T0IE_MASK                                   0x20
#define _INTCON_PEIE_POSN                                   0x6
#define _INTCON_PEIE_POSITION                               0x6
#define _INTCON_PEIE_SIZE                                   0x1
#define _INTCON_PEIE_LENGTH                                 0x1
#define _INTCON_PEIE_MASK                                   0x40
#define _INTCON_GIE_POSN                                    0x7
#define _INTCON_GIE_POSITION                                0x7
#define _INTCON_GIE_SIZE                                    0x1
#define _INTCON_GIE_LENGTH                                  0x1
#define _INTCON_GIE_MASK                                    0x80
#define _INTCON_GIEL_POSN                                   0x6
#define _INTCON_GIEL_POSITION                               0x6
#define _INTCON_GIEL_SIZE                                   0x1
#define _INTCON_GIEL_LENGTH                                 0x1
#define _INTCON_GIEL_MASK                                   0x40
#define _INTCON_GIEH_POSN                                   0x7
#define _INTCON_GIEH_POSITION                               0x7
#define _INTCON_GIEH_SIZE                                   0x1
#define _INTCON_GIEH_LENGTH                                 0x1
#define _INTCON_GIEH_MASK                                   0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned RBIF                   :1;
        unsigned INT0IF                 :1;
        unsigned TMR0IF                 :1;
        unsigned RBIE                   :1;
        unsigned INT0IE                 :1;
        unsigned TMR0IE                 :1;
        unsigned PEIE_GIEL              :1;
        unsigned GIE_GIEH               :1;
    };
    struct {
        unsigned                        :1;
        unsigned INT0F                  :1;
        unsigned T0IF                   :1;
        unsigned                        :1;
        unsigned INT0E                  :1;
        unsigned T0IE                   :1;
        unsigned PEIE                   :1;
        unsigned GIE                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned GIEL                   :1;
        unsigned GIEH                   :1;
    };
} INTCON1bits_t;
extern volatile INTCON1bits_t INTCON1bits __at(0xFF2);
// bitfield macros
#define _INTCON1_RBIF_POSN                                  0x0
#define _INTCON1_RBIF_POSITION                              0x0
#define _INTCON1_RBIF_SIZE                                  0x1
#define _INTCON1_RBIF_LENGTH                                0x1
#define _INTCON1_RBIF_MASK                                  0x1
#define _INTCON1_INT0IF_POSN                                0x1
#define _INTCON1_INT0IF_POSITION                            0x1
#define _INTCON1_INT0IF_SIZE                                0x1
#define _INTCON1_INT0IF_LENGTH                              0x1
#define _INTCON1_INT0IF_MASK                                0x2
#define _INTCON1_TMR0IF_POSN                                0x2
#define _INTCON1_TMR0IF_POSITION                            0x2
#define _INTCON1_TMR0IF_SIZE                                0x1
#define _INTCON1_TMR0IF_LENGTH                              0x1
#define _INTCON1_TMR0IF_MASK                                0x4
#define _INTCON1_RBIE_POSN                                  0x3
#define _INTCON1_RBIE_POSITION                              0x3
#define _INTCON1_RBIE_SIZE                                  0x1
#define _INTCON1_RBIE_LENGTH                                0x1
#define _INTCON1_RBIE_MASK                                  0x8
#define _INTCON1_INT0IE_POSN                                0x4
#define _INTCON1_INT0IE_POSITION                            0x4
#define _INTCON1_INT0IE_SIZE                                0x1
#define _INTCON1_INT0IE_LENGTH                              0x1
#define _INTCON1_INT0IE_MASK                                0x10
#define _INTCON1_TMR0IE_POSN                                0x5
#define _INTCON1_TMR0IE_POSITION                            0x5
#define _INTCON1_TMR0IE_SIZE                                0x1
#define _INTCON1_TMR0IE_LENGTH                              0x1
#define _INTCON1_TMR0IE_MASK                                0x20
#define _INTCON1_PEIE_GIEL_POSN                             0x6
#define _INTCON1_PEIE_GIEL_POSITION                         0x6
#define _INTCON1_PEIE_GIEL_SIZE                             0x1
#define _INTCON1_PEIE_GIEL_LENGTH                           0x1
#define _INTCON1_PEIE_GIEL_MASK                             0x40
#define _INTCON1_GIE_GIEH_POSN                              0x7
#define _INTCON1_GIE_GIEH_POSITION                          0x7
#define _INTCON1_GIE_GIEH_SIZE                              0x1
#define _INTCON1_GIE_GIEH_LENGTH                            0x1
#define _INTCON1_GIE_GIEH_MASK                              0x80
#define _INTCON1_INT0F_POSN                                 0x1
#define _INTCON1_INT0F_POSITION                             0x1
#define _INTCON1_INT0F_SIZE                                 0x1
#define _INTCON1_INT0F_LENGTH                               0x1
#define _INTCON1_INT0F_MASK                                 0x2
#define _INTCON1_T0IF_POSN                                  0x2
#define _INTCON1_T0IF_POSITION                              0x2
#define _INTCON1_T0IF_SIZE                                  0x1
#define _INTCON1_T0IF_LENGTH                                0x1
#define _INTCON1_T0IF_MASK                                  0x4
#define _INTCON1_INT0E_POSN                                 0x4
#define _INTCON1_INT0E_POSITION                             0x4
#define _INTCON1_INT0E_SIZE                                 0x1
#define _INTCON1_INT0E_LENGTH                               0x1
#define _INTCON1_INT0E_MASK                                 0x10
#define _INTCON1_T0IE_POSN                                  0x5
#define _INTCON1_T0IE_POSITION                              0x5
#define _INTCON1_T0IE_SIZE                                  0x1
#define _INTCON1_T0IE_LENGTH                                0x1
#define _INTCON1_T0IE_MASK                                  0x20
#define _INTCON1_PEIE_POSN                                  0x6
#define _INTCON1_PEIE_POSITION                              0x6
#define _INTCON1_PEIE_SIZE                                  0x1
#define _INTCON1_PEIE_LENGTH                                0x1
#define _INTCON1_PEIE_MASK                                  0x40
#define _INTCON1_GIE_POSN                                   0x7
#define _INTCON1_GIE_POSITION                               0x7
#define _INTCON1_GIE_SIZE                                   0x1
#define _INTCON1_GIE_LENGTH                                 0x1
#define _INTCON1_GIE_MASK                                   0x80
#define _INTCON1_GIEL_POSN                                  0x6
#define _INTCON1_GIEL_POSITION                              0x6
#define _INTCON1_GIEL_SIZE                                  0x1
#define _INTCON1_GIEL_LENGTH                                0x1
#define _INTCON1_GIEL_MASK                                  0x40
#define _INTCON1_GIEH_POSN                                  0x7
#define _INTCON1_GIEH_POSITION                              0x7
#define _INTCON1_GIEH_SIZE                                  0x1
#define _INTCON1_GIEH_LENGTH                                0x1
#define _INTCON1_GIEH_MASK                                  0x80

// Register: PROD
#define PROD PROD
extern volatile unsigned short          PROD                __at(0xFF3);
#ifndef _LIB_BUILD
asm("PROD equ 0FF3h");
#endif

// Register: PRODL
#define PRODL PRODL
extern volatile unsigned char           PRODL               __at(0xFF3);
#ifndef _LIB_BUILD
asm("PRODL equ 0FF3h");
#endif

// Register: PRODH
#define PRODH PRODH
extern volatile unsigned char           PRODH               __at(0xFF4);
#ifndef _LIB_BUILD
asm("PRODH equ 0FF4h");
#endif

// Register: TABLAT
#define TABLAT TABLAT
extern volatile unsigned char           TABLAT              __at(0xFF5);
#ifndef _LIB_BUILD
asm("TABLAT equ 0FF5h");
#endif

// Register: TBLPTR
#define TBLPTR TBLPTR
#ifndef __CCI__
extern volatile __uint24                TBLPTR              __at(0xFF6);
#endif
#ifndef _LIB_BUILD
asm("TBLPTR equ 0FF6h");
#endif

// Register: TBLPTRL
#define TBLPTRL TBLPTRL
extern volatile unsigned char           TBLPTRL             __at(0xFF6);
#ifndef _LIB_BUILD
asm("TBLPTRL equ 0FF6h");
#endif

// Register: TBLPTRH
#define TBLPTRH TBLPTRH
extern volatile unsigned char           TBLPTRH             __at(0xFF7);
#ifndef _LIB_BUILD
asm("TBLPTRH equ 0FF7h");
#endif

// Register: TBLPTRU
#define TBLPTRU TBLPTRU
extern volatile unsigned char           TBLPTRU             __at(0xFF8);
#ifndef _LIB_BUILD
asm("TBLPTRU equ 0FF8h");
#endif

// Register: PCLAT
#define PCLAT PCLAT
#ifndef __CCI__
extern volatile __uint24                PCLAT               __at(0xFF9);
#endif
#ifndef _LIB_BUILD
asm("PCLAT equ 0FF9h");
#endif
// aliases
#ifndef __CCI__
extern volatile __uint24                PC                  __at(0xFF9);
#endif
#ifndef _LIB_BUILD
asm("PC equ 0FF9h");
#endif

// Register: PCL
#define PCL PCL
extern volatile unsigned char           PCL                 __at(0xFF9);
#ifndef _LIB_BUILD
asm("PCL equ 0FF9h");
#endif

// Register: PCLATH
#define PCLATH PCLATH
extern volatile unsigned char           PCLATH              __at(0xFFA);
#ifndef _LIB_BUILD
asm("PCLATH equ 0FFAh");
#endif

// Register: PCLATU
#define PCLATU PCLATU
extern volatile unsigned char           PCLATU              __at(0xFFB);
#ifndef _LIB_BUILD
asm("PCLATU equ 0FFBh");
#endif

// Register: STKPTR
#define STKPTR STKPTR
extern volatile unsigned char           STKPTR              __at(0xFFC);
#ifndef _LIB_BUILD
asm("STKPTR equ 0FFCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STKPTR                 :5;
        unsigned                        :1;
        unsigned STKUNF                 :1;
        unsigned STKFUL                 :1;
    };
    struct {
        unsigned STKPTR0                :1;
        unsigned STKPTR1                :1;
        unsigned STKPTR2                :1;
        unsigned STKPTR3                :1;
        unsigned STKPTR4                :1;
        unsigned                        :2;
        unsigned STKOVF                 :1;
    };
    struct {
        unsigned SP0                    :1;
        unsigned SP1                    :1;
        unsigned SP2                    :1;
        unsigned SP3                    :1;
        unsigned SP4                    :1;
    };
} STKPTRbits_t;
extern volatile STKPTRbits_t STKPTRbits __at(0xFFC);
// bitfield macros
#define _STKPTR_STKPTR_POSN                                 0x0
#define _STKPTR_STKPTR_POSITION                             0x0
#define _STKPTR_STKPTR_SIZE                                 0x5
#define _STKPTR_STKPTR_LENGTH                               0x5
#define _STKPTR_STKPTR_MASK                                 0x1F
#define _STKPTR_STKUNF_POSN                                 0x6
#define _STKPTR_STKUNF_POSITION                             0x6
#define _STKPTR_STKUNF_SIZE                                 0x1
#define _STKPTR_STKUNF_LENGTH                               0x1
#define _STKPTR_STKUNF_MASK                                 0x40
#define _STKPTR_STKFUL_POSN                                 0x7
#define _STKPTR_STKFUL_POSITION                             0x7
#define _STKPTR_STKFUL_SIZE                                 0x1
#define _STKPTR_STKFUL_LENGTH                               0x1
#define _STKPTR_STKFUL_MASK                                 0x80
#define _STKPTR_STKPTR0_POSN                                0x0
#define _STKPTR_STKPTR0_POSITION                            0x0
#define _STKPTR_STKPTR0_SIZE                                0x1
#define _STKPTR_STKPTR0_LENGTH                              0x1
#define _STKPTR_STKPTR0_MASK                                0x1
#define _STKPTR_STKPTR1_POSN                                0x1
#define _STKPTR_STKPTR1_POSITION                            0x1
#define _STKPTR_STKPTR1_SIZE                                0x1
#define _STKPTR_STKPTR1_LENGTH                              0x1
#define _STKPTR_STKPTR1_MASK                                0x2
#define _STKPTR_STKPTR2_POSN                                0x2
#define _STKPTR_STKPTR2_POSITION                            0x2
#define _STKPTR_STKPTR2_SIZE                                0x1
#define _STKPTR_STKPTR2_LENGTH                              0x1
#define _STKPTR_STKPTR2_MASK                                0x4
#define _STKPTR_STKPTR3_POSN                                0x3
#define _STKPTR_STKPTR3_POSITION                            0x3
#define _STKPTR_STKPTR3_SIZE                                0x1
#define _STKPTR_STKPTR3_LENGTH                              0x1
#define _STKPTR_STKPTR3_MASK                                0x8
#define _STKPTR_STKPTR4_POSN                                0x4
#define _STKPTR_STKPTR4_POSITION                            0x4
#define _STKPTR_STKPTR4_SIZE                                0x1
#define _STKPTR_STKPTR4_LENGTH                              0x1
#define _STKPTR_STKPTR4_MASK                                0x10
#define _STKPTR_STKOVF_POSN                                 0x7
#define _STKPTR_STKOVF_POSITION                             0x7
#define _STKPTR_STKOVF_SIZE                                 0x1
#define _STKPTR_STKOVF_LENGTH                               0x1
#define _STKPTR_STKOVF_MASK                                 0x80
#define _STKPTR_SP0_POSN                                    0x0
#define _STKPTR_SP0_POSITION                                0x0
#define _STKPTR_SP0_SIZE                                    0x1
#define _STKPTR_SP0_LENGTH                                  0x1
#define _STKPTR_SP0_MASK                                    0x1
#define _STKPTR_SP1_POSN                                    0x1
#define _STKPTR_SP1_POSITION                                0x1
#define _STKPTR_SP1_SIZE                                    0x1
#define _STKPTR_SP1_LENGTH                                  0x1
#define _STKPTR_SP1_MASK                                    0x2
#define _STKPTR_SP2_POSN                                    0x2
#define _STKPTR_SP2_POSITION                                0x2
#define _STKPTR_SP2_SIZE                                    0x1
#define _STKPTR_SP2_LENGTH                                  0x1
#define _STKPTR_SP2_MASK                                    0x4
#define _STKPTR_SP3_POSN                                    0x3
#define _STKPTR_SP3_POSITION                                0x3
#define _STKPTR_SP3_SIZE                                    0x1
#define _STKPTR_SP3_LENGTH                                  0x1
#define _STKPTR_SP3_MASK                                    0x8
#define _STKPTR_SP4_POSN                                    0x4
#define _STKPTR_SP4_POSITION                                0x4
#define _STKPTR_SP4_SIZE                                    0x1
#define _STKPTR_SP4_LENGTH                                  0x1
#define _STKPTR_SP4_MASK                                    0x10

// Register: TOS
#define TOS TOS
#ifndef __CCI__
extern volatile __uint24                TOS                 __at(0xFFD);
#endif
#ifndef _LIB_BUILD
asm("TOS equ 0FFDh");
#endif

// Register: TOSL
#define TOSL TOSL
extern volatile unsigned char           TOSL                __at(0xFFD);
#ifndef _LIB_BUILD
asm("TOSL equ 0FFDh");
#endif

// Register: TOSH
#define TOSH TOSH
extern volatile unsigned char           TOSH                __at(0xFFE);
#ifndef _LIB_BUILD
asm("TOSH equ 0FFEh");
#endif

// Register: TOSU
#define TOSU TOSU
extern volatile unsigned char           TOSU                __at(0xFFF);
#ifndef _LIB_BUILD
asm("TOSU equ 0FFFh");
#endif

/*
 * Bit Definitions
 */
#define _DEPRECATED __attribute__((__deprecated__))
#ifndef BANKMASK
#define BANKMASK(addr) ((addr)&0FFh)
#endif
#define _BIT_ACCESS(r,b) ___mkstr(BANKMASK(r)) "," ___mkstr(b)
#ifndef PAGEMASK
#define PAGEMASK(addr) ((addr)&0FFFFFh)
#endif
// CANCON<ABAT>
extern volatile __bit                   ABAT                __at(0x7B7C);	// @ (0xF6F * 8 + 4)
#define                                 ABAT_bit            _BIT_ACCESS(CANCON,4)
// SSPCON2<ACKDT>
extern volatile __bit                   ACKDT               __at(0x7E2D);	// @ (0xFC5 * 8 + 5)
#define                                 ACKDT_bit           _BIT_ACCESS(SSPCON2,5)
// SSPCON2<ACKEN>
extern volatile __bit                   ACKEN               __at(0x7E2C);	// @ (0xFC5 * 8 + 4)
#define                                 ACKEN_bit           _BIT_ACCESS(SSPCON2,4)
// SSPCON2<ACKSTAT>
extern volatile __bit                   ACKSTAT             __at(0x7E2E);	// @ (0xFC5 * 8 + 6)
#define                                 ACKSTAT_bit         _BIT_ACCESS(SSPCON2,6)
// ADCON0<ADCAL>
extern volatile __bit                   ADCAL               __at(0x7E17);	// @ (0xFC2 * 8 + 7)
#define                                 ADCAL_bit           _BIT_ACCESS(ADCON0,7)
// ADCON0<ADCS0>
extern volatile __bit                   ADCS0               __at(0x7E16);	// @ (0xFC2 * 8 + 6)
#define                                 ADCS0_bit           _BIT_ACCESS(ADCON0,6)
// ADCON0<ADCS1>
extern volatile __bit                   ADCS1               __at(0x7E17);	// @ (0xFC2 * 8 + 7)
#define                                 ADCS1_bit           _BIT_ACCESS(ADCON0,7)
// ADCON1<ADCS2>
extern volatile __bit                   ADCS2               __at(0x7E0E);	// @ (0xFC1 * 8 + 6)
#define                                 ADCS2_bit           _BIT_ACCESS(ADCON1,6)
// RCSTA<ADDEN>
extern volatile __bit                   ADDEN               __at(0x7D5B);	// @ (0xFAB * 8 + 3)
#define                                 ADDEN_bit           _BIT_ACCESS(RCSTA,3)
// ADCON1<ADFM>
extern volatile __bit                   ADFM                __at(0x7E0F);	// @ (0xFC1 * 8 + 7)
#define                                 ADFM_bit            _BIT_ACCESS(ADCON1,7)
// PIE1<ADIE>
extern volatile __bit                   ADIE                __at(0x7CEE);	// @ (0xF9D * 8 + 6)
#define                                 ADIE_bit            _BIT_ACCESS(PIE1,6)
// PIR1<ADIF>
extern volatile __bit                   ADIF                __at(0x7CF6);	// @ (0xF9E * 8 + 6)
#define                                 ADIF_bit            _BIT_ACCESS(PIR1,6)
// IPR1<ADIP>
extern volatile __bit                   ADIP                __at(0x7CFE);	// @ (0xF9F * 8 + 6)
#define                                 ADIP_bit            _BIT_ACCESS(IPR1,6)
// ADCON0<ADON>
extern volatile __bit                   ADON                __at(0x7E10);	// @ (0xFC2 * 8 + 0)
#define                                 ADON_bit            _BIT_ACCESS(ADCON0,0)
// PORTA<AN0>
extern volatile __bit                   AN0                 __at(0x7C00);	// @ (0xF80 * 8 + 0)
#define                                 AN0_bit             _BIT_ACCESS(PORTA,0)
// PORTA<AN1>
extern volatile __bit                   AN1                 __at(0x7C01);	// @ (0xF80 * 8 + 1)
#define                                 AN1_bit             _BIT_ACCESS(PORTA,1)
// PORTA<AN2>
extern volatile __bit                   AN2                 __at(0x7C02);	// @ (0xF80 * 8 + 2)
#define                                 AN2_bit             _BIT_ACCESS(PORTA,2)
// PORTA<AN3>
extern volatile __bit                   AN3                 __at(0x7C03);	// @ (0xF80 * 8 + 3)
#define                                 AN3_bit             _BIT_ACCESS(PORTA,3)
// PORTA<AN4>
extern volatile __bit                   AN4                 __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 AN4_bit             _BIT_ACCESS(PORTA,5)
// PIE2<BCLIE>
extern volatile __bit                   BCLIE               __at(0x7D03);	// @ (0xFA0 * 8 + 3)
#define                                 BCLIE_bit           _BIT_ACCESS(PIE2,3)
// PIR2<BCLIF>
extern volatile __bit                   BCLIF               __at(0x7D0B);	// @ (0xFA1 * 8 + 3)
#define                                 BCLIF_bit           _BIT_ACCESS(PIR2,3)
// IPR2<BCLIP>
extern volatile __bit                   BCLIP               __at(0x7D13);	// @ (0xFA2 * 8 + 3)
#define                                 BCLIP_bit           _BIT_ACCESS(IPR2,3)
// SSPSTAT<BF>
extern volatile __bit                   BF                  __at(0x7E38);	// @ (0xFC7 * 8 + 0)
#define                                 BF_bit              _BIT_ACCESS(SSPSTAT,0)
// RCON<BOR>
extern volatile __bit                   BOR                 __at(0x7E80);	// @ (0xFD0 * 8 + 0)
#define                                 BOR_bit             _BIT_ACCESS(RCON,0)
// TXSTA<BRGH>
extern volatile __bit                   BRGH                __at(0x7D62);	// @ (0xFAC * 8 + 2)
#define                                 BRGH_bit            _BIT_ACCESS(TXSTA,2)
// TXSTA<BRGH1>
extern volatile __bit                   BRGH1               __at(0x7D62);	// @ (0xFAC * 8 + 2)
#define                                 BRGH1_bit           _BIT_ACCESS(TXSTA,2)
// BRGCON1<BRP0>
extern volatile __bit                   BRP0                __at(0x7B80);	// @ (0xF70 * 8 + 0)
#define                                 BRP0_bit            _BIT_ACCESS(BRGCON1,0)
// BRGCON1<BRP1>
extern volatile __bit                   BRP1                __at(0x7B81);	// @ (0xF70 * 8 + 1)
#define                                 BRP1_bit            _BIT_ACCESS(BRGCON1,1)
// BRGCON1<BRP2>
extern volatile __bit                   BRP2                __at(0x7B82);	// @ (0xF70 * 8 + 2)
#define                                 BRP2_bit            _BIT_ACCESS(BRGCON1,2)
// BRGCON1<BRP3>
extern volatile __bit                   BRP3                __at(0x7B83);	// @ (0xF70 * 8 + 3)
#define                                 BRP3_bit            _BIT_ACCESS(BRGCON1,3)
// BRGCON1<BRP4>
extern volatile __bit                   BRP4                __at(0x7B84);	// @ (0xF70 * 8 + 4)
#define                                 BRP4_bit            _BIT_ACCESS(BRGCON1,4)
// BRGCON1<BRP5>
extern volatile __bit                   BRP5                __at(0x7B85);	// @ (0xF70 * 8 + 5)
#define                                 BRP5_bit            _BIT_ACCESS(BRGCON1,5)
// CIOCON<CANCAP>
extern volatile __bit                   CANCAP              __at(0x7B9C);	// @ (0xF73 * 8 + 4)
#define                                 CANCAP_bit          _BIT_ACCESS(CIOCON,4)
// PORTB<CANRX>
extern volatile __bit                   CANRX               __at(0x7C0B);	// @ (0xF81 * 8 + 3)
#define                                 CANRX_bit           _BIT_ACCESS(PORTB,3)
// PORTB<CANTX>
extern volatile __bit                   CANTX               __at(0x7C0A);	// @ (0xF81 * 8 + 2)
#define                                 CANTX_bit           _BIT_ACCESS(PORTB,2)
// STATUS<CARRY>
extern volatile __bit                   CARRY               __at(0x7EC0);	// @ (0xFD8 * 8 + 0)
#define                                 CARRY_bit           _BIT_ACCESS(STATUS,0)
// PORTC<CCP1>
extern volatile __bit                   CCP1                __at(0x7C12);	// @ (0xF82 * 8 + 2)
#define                                 CCP1_bit            _BIT_ACCESS(PORTC,2)
// PIE1<CCP1IE>
extern volatile __bit                   CCP1IE              __at(0x7CEA);	// @ (0xF9D * 8 + 2)
#define                                 CCP1IE_bit          _BIT_ACCESS(PIE1,2)
// PIR1<CCP1IF>
extern volatile __bit                   CCP1IF              __at(0x7CF2);	// @ (0xF9E * 8 + 2)
#define                                 CCP1IF_bit          _BIT_ACCESS(PIR1,2)
// IPR1<CCP1IP>
extern volatile __bit                   CCP1IP              __at(0x7CFA);	// @ (0xF9F * 8 + 2)
#define                                 CCP1IP_bit          _BIT_ACCESS(IPR1,2)
// CCP1CON<CCP1M0>
extern volatile __bit                   CCP1M0              __at(0x7DE8);	// @ (0xFBD * 8 + 0)
#define                                 CCP1M0_bit          _BIT_ACCESS(CCP1CON,0)
// CCP1CON<CCP1M1>
extern volatile __bit                   CCP1M1              __at(0x7DE9);	// @ (0xFBD * 8 + 1)
#define                                 CCP1M1_bit          _BIT_ACCESS(CCP1CON,1)
// CCP1CON<CCP1M2>
extern volatile __bit                   CCP1M2              __at(0x7DEA);	// @ (0xFBD * 8 + 2)
#define                                 CCP1M2_bit          _BIT_ACCESS(CCP1CON,2)
// CCP1CON<CCP1M3>
extern volatile __bit                   CCP1M3              __at(0x7DEB);	// @ (0xFBD * 8 + 3)
#define                                 CCP1M3_bit          _BIT_ACCESS(CCP1CON,3)
// CCP1CON<CCP1X>
extern volatile __bit                   CCP1X               __at(0x7DED);	// @ (0xFBD * 8 + 5)
#define                                 CCP1X_bit           _BIT_ACCESS(CCP1CON,5)
// CCP1CON<CCP1Y>
extern volatile __bit                   CCP1Y               __at(0x7DEC);	// @ (0xFBD * 8 + 4)
#define                                 CCP1Y_bit           _BIT_ACCESS(CCP1CON,4)
// PORTC<CCP2>
extern volatile __bit                   CCP2                __at(0x7C11);	// @ (0xF82 * 8 + 1)
#define                                 CCP2_bit            _BIT_ACCESS(PORTC,1)
// PORTB<CCP2_PA2>
extern volatile __bit                   CCP2_PA2            __at(0x7C0B);	// @ (0xF81 * 8 + 3)
#define                                 CCP2_PA2_bit        _BIT_ACCESS(PORTB,3)
// EECON1<CFGS>
extern volatile __bit                   CFGS                __at(0x7D36);	// @ (0xFA6 * 8 + 6)
#define                                 CFGS_bit            _BIT_ACCESS(EECON1,6)
// ADCON0<CHS0>
extern volatile __bit                   CHS0                __at(0x7E13);	// @ (0xFC2 * 8 + 3)
#define                                 CHS0_bit            _BIT_ACCESS(ADCON0,3)
// ADCON0<CHS1>
extern volatile __bit                   CHS1                __at(0x7E14);	// @ (0xFC2 * 8 + 4)
#define                                 CHS1_bit            _BIT_ACCESS(ADCON0,4)
// ADCON0<CHS2>
extern volatile __bit                   CHS2                __at(0x7E15);	// @ (0xFC2 * 8 + 5)
#define                                 CHS2_bit            _BIT_ACCESS(ADCON0,5)
// ADCON1<CHSN3>
extern volatile __bit                   CHSN3               __at(0x7E0B);	// @ (0xFC1 * 8 + 3)
#define                                 CHSN3_bit           _BIT_ACCESS(ADCON1,3)
// PORTC<CK>
extern volatile __bit                   CK                  __at(0x7C16);	// @ (0xF82 * 8 + 6)
#define                                 CK_bit              _BIT_ACCESS(PORTC,6)
// SSPSTAT<CKE>
extern volatile __bit                   CKE                 __at(0x7E3E);	// @ (0xFC7 * 8 + 6)
#define                                 CKE_bit             _BIT_ACCESS(SSPSTAT,6)
// SSPCON1<CKP>
extern volatile __bit                   CKP                 __at(0x7E34);	// @ (0xFC6 * 8 + 4)
#define                                 CKP_bit             _BIT_ACCESS(SSPCON1,4)
// PORTA<CLKO>
extern volatile __bit                   CLKO                __at(0x7C06);	// @ (0xF80 * 8 + 6)
#define                                 CLKO_bit            _BIT_ACCESS(PORTA,6)
// RCSTA<CREN>
extern volatile __bit                   CREN                __at(0x7D5C);	// @ (0xFAB * 8 + 4)
#define                                 CREN_bit            _BIT_ACCESS(RCSTA,4)
// TXSTA<CSRC>
extern volatile __bit                   CSRC                __at(0x7D67);	// @ (0xFAC * 8 + 7)
#define                                 CSRC_bit            _BIT_ACCESS(TXSTA,7)
// TXSTA<CSRC1>
extern volatile __bit                   CSRC1               __at(0x7D67);	// @ (0xFAC * 8 + 7)
#define                                 CSRC1_bit           _BIT_ACCESS(TXSTA,7)
// PORTA<CVREF>
extern volatile __bit                   CVREF               __at(0x7C00);	// @ (0xF80 * 8 + 0)
#define                                 CVREF_bit           _BIT_ACCESS(PORTA,0)
// SSPSTAT<DA>
extern volatile __bit                   DA                  __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 DA_bit              _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<DATA_ADDRESS>
extern volatile __bit                   DATA_ADDRESS        __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 DATA_ADDRESS_bit    _BIT_ACCESS(SSPSTAT,5)
// STATUS<DC>
extern volatile __bit                   DC                  __at(0x7EC1);	// @ (0xFD8 * 8 + 1)
#define                                 DC_bit              _BIT_ACCESS(STATUS,1)
// CCP1CON<DC1B0>
extern volatile __bit                   DC1B0               __at(0x7DEC);	// @ (0xFBD * 8 + 4)
#define                                 DC1B0_bit           _BIT_ACCESS(CCP1CON,4)
// CCP1CON<DC1B1>
extern volatile __bit                   DC1B1               __at(0x7DED);	// @ (0xFBD * 8 + 5)
#define                                 DC1B1_bit           _BIT_ACCESS(CCP1CON,5)
// ADCON0<DONE>
extern volatile __bit                   DONE                __at(0x7E12);	// @ (0xFC2 * 8 + 2)
#define                                 DONE_bit            _BIT_ACCESS(ADCON0,2)
// PORTC<DT>
extern volatile __bit                   DT                  __at(0x7C17);	// @ (0xF82 * 8 + 7)
#define                                 DT_bit              _BIT_ACCESS(PORTC,7)
// SSPSTAT<D_A>
extern volatile __bit                   D_A                 __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 D_A_bit             _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<D_NOT_A>
extern volatile __bit                   D_NOT_A             __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 D_NOT_A_bit         _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<D_nA>
extern volatile __bit                   D_nA                __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 D_nA_bit            _BIT_ACCESS(SSPSTAT,5)
// PR2<EBDIS>
extern volatile __bit                   EBDIS               __at(0x7E5F);	// @ (0xFCB * 8 + 7)
#define                                 EBDIS_bit           _BIT_ACCESS(PR2,7)
// EECON1<EEFS>
extern volatile __bit                   EEFS                __at(0x7D36);	// @ (0xFA6 * 8 + 6)
#define                                 EEFS_bit            _BIT_ACCESS(EECON1,6)
// PIE2<EEIE>
extern volatile __bit                   EEIE                __at(0x7D04);	// @ (0xFA0 * 8 + 4)
#define                                 EEIE_bit            _BIT_ACCESS(PIE2,4)
// PIR2<EEIF>
extern volatile __bit                   EEIF                __at(0x7D0C);	// @ (0xFA1 * 8 + 4)
#define                                 EEIF_bit            _BIT_ACCESS(PIR2,4)
// IPR2<EEIP>
extern volatile __bit                   EEIP                __at(0x7D14);	// @ (0xFA2 * 8 + 4)
#define                                 EEIP_bit            _BIT_ACCESS(IPR2,4)
// EECON1<EEPGD>
extern volatile __bit                   EEPGD               __at(0x7D37);	// @ (0xFA6 * 8 + 7)
#define                                 EEPGD_bit           _BIT_ACCESS(EECON1,7)
// CANSTAT<EICODE1>
extern volatile __bit                   EICODE1             __at(0x7B71);	// @ (0xF6E * 8 + 1)
#define                                 EICODE1_bit         _BIT_ACCESS(CANSTAT,1)
// CANSTAT<EICODE2>
extern volatile __bit                   EICODE2             __at(0x7B72);	// @ (0xF6E * 8 + 2)
#define                                 EICODE2_bit         _BIT_ACCESS(CANSTAT,2)
// CANSTAT<EICODE3>
extern volatile __bit                   EICODE3             __at(0x7B73);	// @ (0xF6E * 8 + 3)
#define                                 EICODE3_bit         _BIT_ACCESS(CANSTAT,3)
// CIOCON<ENDRHI>
extern volatile __bit                   ENDRHI              __at(0x7B9D);	// @ (0xF73 * 8 + 5)
#define                                 ENDRHI_bit          _BIT_ACCESS(CIOCON,5)
// PIE3<ERRIE>
extern volatile __bit                   ERRIE               __at(0x7D1D);	// @ (0xFA3 * 8 + 5)
#define                                 ERRIE_bit           _BIT_ACCESS(PIE3,5)
// PIR3<ERRIF>
extern volatile __bit                   ERRIF               __at(0x7D25);	// @ (0xFA4 * 8 + 5)
#define                                 ERRIF_bit           _BIT_ACCESS(PIR3,5)
// IPR3<ERRIP>
extern volatile __bit                   ERRIP               __at(0x7D2D);	// @ (0xFA5 * 8 + 5)
#define                                 ERRIP_bit           _BIT_ACCESS(IPR3,5)
// COMSTAT<EWARN>
extern volatile __bit                   EWARN               __at(0x7BA0);	// @ (0xF74 * 8 + 0)
#define                                 EWARN_bit           _BIT_ACCESS(COMSTAT,0)
// RCSTA<FERR>
extern volatile __bit                   FERR                __at(0x7D5A);	// @ (0xFAB * 8 + 2)
#define                                 FERR_bit            _BIT_ACCESS(RCSTA,2)
// COMSTAT<FIFOEMPTY>
extern volatile __bit                   FIFOEMPTY           __at(0x7BA7);	// @ (0xF74 * 8 + 7)
#define                                 FIFOEMPTY_bit       _BIT_ACCESS(COMSTAT,7)
// RXB1CON<FILHIT1>
extern volatile __bit                   FILHIT1             __at(0x7A81);	// @ (0xF50 * 8 + 1)
#define                                 FILHIT1_bit         _BIT_ACCESS(RXB1CON,1)
// RXB1CON<FILHIT2>
extern volatile __bit                   FILHIT2             __at(0x7A82);	// @ (0xF50 * 8 + 2)
#define                                 FILHIT2_bit         _BIT_ACCESS(RXB1CON,2)
// CANCON<FP1>
extern volatile __bit                   FP1                 __at(0x7B79);	// @ (0xF6F * 8 + 1)
#define                                 FP1_bit             _BIT_ACCESS(CANCON,1)
// CANCON<FP2>
extern volatile __bit                   FP2                 __at(0x7B7A);	// @ (0xF6F * 8 + 2)
#define                                 FP2_bit             _BIT_ACCESS(CANCON,2)
// CANCON<FP3>
extern volatile __bit                   FP3                 __at(0x7B7B);	// @ (0xF6F * 8 + 3)
#define                                 FP3_bit             _BIT_ACCESS(CANCON,3)
// EECON1<FREE>
extern volatile __bit                   FREE                __at(0x7D34);	// @ (0xFA6 * 8 + 4)
#define                                 FREE_bit            _BIT_ACCESS(EECON1,4)
// SSPCON2<GCEN>
extern volatile __bit                   GCEN                __at(0x7E2F);	// @ (0xFC5 * 8 + 7)
#define                                 GCEN_bit            _BIT_ACCESS(SSPCON2,7)
// INTCON<GIE>
extern volatile __bit                   GIE                 __at(0x7F97);	// @ (0xFF2 * 8 + 7)
#define                                 GIE_bit             _BIT_ACCESS(INTCON,7)
// INTCON<GIEH>
extern volatile __bit                   GIEH                __at(0x7F97);	// @ (0xFF2 * 8 + 7)
#define                                 GIEH_bit            _BIT_ACCESS(INTCON,7)
// INTCON<GIEL>
extern volatile __bit                   GIEL                __at(0x7F96);	// @ (0xFF2 * 8 + 6)
#define                                 GIEL_bit            _BIT_ACCESS(INTCON,6)
// INTCON<GIE_GIEH>
extern volatile __bit                   GIE_GIEH            __at(0x7F97);	// @ (0xFF2 * 8 + 7)
#define                                 GIE_GIEH_bit        _BIT_ACCESS(INTCON,7)
// ADCON0<GO>
extern volatile __bit                   GO                  __at(0x7E12);	// @ (0xFC2 * 8 + 2)
#define                                 GO_bit              _BIT_ACCESS(ADCON0,2)
// ADCON0<GODONE>
extern volatile __bit                   GODONE              __at(0x7E12);	// @ (0xFC2 * 8 + 2)
#define                                 GODONE_bit          _BIT_ACCESS(ADCON0,2)
// ADCON0<GO_DONE>
extern volatile __bit                   GO_DONE             __at(0x7E12);	// @ (0xFC2 * 8 + 2)
#define                                 GO_DONE_bit         _BIT_ACCESS(ADCON0,2)
// ADCON0<GO_NOT_DONE>
extern volatile __bit                   GO_NOT_DONE         __at(0x7E12);	// @ (0xFC2 * 8 + 2)
#define                                 GO_NOT_DONE_bit     _BIT_ACCESS(ADCON0,2)
// ADCON0<GO_nDONE>
extern volatile __bit                   GO_nDONE            __at(0x7E12);	// @ (0xFC2 * 8 + 2)
#define                                 GO_nDONE_bit        _BIT_ACCESS(ADCON0,2)
// SSPSTAT<I2C_DAT>
extern volatile __bit                   I2C_DAT             __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 I2C_DAT_bit         _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<I2C_DATA>
extern volatile __bit                   I2C_DATA            __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 I2C_DATA_bit        _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<I2C_READ>
extern volatile __bit                   I2C_READ            __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 I2C_READ_bit        _BIT_ACCESS(SSPSTAT,2)
// SSPSTAT<I2C_START>
extern volatile __bit                   I2C_START           __at(0x7E3B);	// @ (0xFC7 * 8 + 3)
#define                                 I2C_START_bit       _BIT_ACCESS(SSPSTAT,3)
// SSPSTAT<I2C_STOP>
extern volatile __bit                   I2C_STOP            __at(0x7E3C);	// @ (0xFC7 * 8 + 4)
#define                                 I2C_STOP_bit        _BIT_ACCESS(SSPSTAT,4)
// PORTB<INT0>
extern volatile __bit                   INT0                __at(0x7C08);	// @ (0xF81 * 8 + 0)
#define                                 INT0_bit            _BIT_ACCESS(PORTB,0)
// INTCON<INT0E>
extern volatile __bit                   INT0E               __at(0x7F94);	// @ (0xFF2 * 8 + 4)
#define                                 INT0E_bit           _BIT_ACCESS(INTCON,4)
// INTCON<INT0F>
extern volatile __bit                   INT0F               __at(0x7F91);	// @ (0xFF2 * 8 + 1)
#define                                 INT0F_bit           _BIT_ACCESS(INTCON,1)
// INTCON<INT0IE>
extern volatile __bit                   INT0IE              __at(0x7F94);	// @ (0xFF2 * 8 + 4)
#define                                 INT0IE_bit          _BIT_ACCESS(INTCON,4)
// INTCON<INT0IF>
extern volatile __bit                   INT0IF              __at(0x7F91);	// @ (0xFF2 * 8 + 1)
#define                                 INT0IF_bit          _BIT_ACCESS(INTCON,1)
// PORTB<INT1>
extern volatile __bit                   INT1                __at(0x7C09);	// @ (0xF81 * 8 + 1)
#define                                 INT1_bit            _BIT_ACCESS(PORTB,1)
// INTCON3<INT1E>
extern volatile __bit                   INT1E               __at(0x7F83);	// @ (0xFF0 * 8 + 3)
#define                                 INT1E_bit           _BIT_ACCESS(INTCON3,3)
// INTCON3<INT1F>
extern volatile __bit                   INT1F               __at(0x7F80);	// @ (0xFF0 * 8 + 0)
#define                                 INT1F_bit           _BIT_ACCESS(INTCON3,0)
// INTCON3<INT1IE>
extern volatile __bit                   INT1IE              __at(0x7F83);	// @ (0xFF0 * 8 + 3)
#define                                 INT1IE_bit          _BIT_ACCESS(INTCON3,3)
// INTCON3<INT1IF>
extern volatile __bit                   INT1IF              __at(0x7F80);	// @ (0xFF0 * 8 + 0)
#define                                 INT1IF_bit          _BIT_ACCESS(INTCON3,0)
// INTCON3<INT1IP>
extern volatile __bit                   INT1IP              __at(0x7F86);	// @ (0xFF0 * 8 + 6)
#define                                 INT1IP_bit          _BIT_ACCESS(INTCON3,6)
// INTCON3<INT1P>
extern volatile __bit                   INT1P               __at(0x7F86);	// @ (0xFF0 * 8 + 6)
#define                                 INT1P_bit           _BIT_ACCESS(INTCON3,6)
// INTCON3<INT2E>
extern volatile __bit                   INT2E               __at(0x7F84);	// @ (0xFF0 * 8 + 4)
#define                                 INT2E_bit           _BIT_ACCESS(INTCON3,4)
// INTCON3<INT2F>
extern volatile __bit                   INT2F               __at(0x7F81);	// @ (0xFF0 * 8 + 1)
#define                                 INT2F_bit           _BIT_ACCESS(INTCON3,1)
// INTCON3<INT2IE>
extern volatile __bit                   INT2IE              __at(0x7F84);	// @ (0xFF0 * 8 + 4)
#define                                 INT2IE_bit          _BIT_ACCESS(INTCON3,4)
// INTCON3<INT2IF>
extern volatile __bit                   INT2IF              __at(0x7F81);	// @ (0xFF0 * 8 + 1)
#define                                 INT2IF_bit          _BIT_ACCESS(INTCON3,1)
// INTCON3<INT2IP>
extern volatile __bit                   INT2IP              __at(0x7F87);	// @ (0xFF0 * 8 + 7)
#define                                 INT2IP_bit          _BIT_ACCESS(INTCON3,7)
// INTCON3<INT2P>
extern volatile __bit                   INT2P               __at(0x7F87);	// @ (0xFF0 * 8 + 7)
#define                                 INT2P_bit           _BIT_ACCESS(INTCON3,7)
// INTCON2<INTEDG0>
extern volatile __bit                   INTEDG0             __at(0x7F8E);	// @ (0xFF1 * 8 + 6)
#define                                 INTEDG0_bit         _BIT_ACCESS(INTCON2,6)
// INTCON2<INTEDG1>
extern volatile __bit                   INTEDG1             __at(0x7F8D);	// @ (0xFF1 * 8 + 5)
#define                                 INTEDG1_bit         _BIT_ACCESS(INTCON2,5)
// INTCON2<INTEDG2>
extern volatile __bit                   INTEDG2             __at(0x7F8C);	// @ (0xFF1 * 8 + 4)
#define                                 INTEDG2_bit         _BIT_ACCESS(INTCON2,4)
// RCON<IPEN>
extern volatile __bit                   IPEN                __at(0x7E87);	// @ (0xFD0 * 8 + 7)
#define                                 IPEN_bit            _BIT_ACCESS(RCON,7)
// LVDCON<IRVST>
extern volatile __bit                   IRVST               __at(0x7E95);	// @ (0xFD2 * 8 + 5)
#define                                 IRVST_bit           _BIT_ACCESS(LVDCON,5)
// PIE3<IRXIE>
extern volatile __bit                   IRXIE               __at(0x7D1F);	// @ (0xFA3 * 8 + 7)
#define                                 IRXIE_bit           _BIT_ACCESS(PIE3,7)
// PIR3<IRXIF>
extern volatile __bit                   IRXIF               __at(0x7D27);	// @ (0xFA4 * 8 + 7)
#define                                 IRXIF_bit           _BIT_ACCESS(PIR3,7)
// IPR3<IRXIP>
extern volatile __bit                   IRXIP               __at(0x7D2F);	// @ (0xFA5 * 8 + 7)
#define                                 IRXIP_bit           _BIT_ACCESS(IPR3,7)
// PIE3<IVRE>
extern volatile __bit                   IVRE                __at(0x7D1F);	// @ (0xFA3 * 8 + 7)
#define                                 IVRE_bit            _BIT_ACCESS(PIE3,7)
// PIR3<IVRF>
extern volatile __bit                   IVRF                __at(0x7D27);	// @ (0xFA4 * 8 + 7)
#define                                 IVRF_bit            _BIT_ACCESS(PIR3,7)
// IPR3<IVRP>
extern volatile __bit                   IVRP                __at(0x7D2F);	// @ (0xFA5 * 8 + 7)
#define                                 IVRP_bit            _BIT_ACCESS(IPR3,7)
// LVDCON<IVRST>
extern volatile __bit                   IVRST               __at(0x7E95);	// @ (0xFD2 * 8 + 5)
#define                                 IVRST_bit           _BIT_ACCESS(LVDCON,5)
// RXB0CON<JTOFF>
extern volatile __bit                   JTOFF               __at(0x7B01);	// @ (0xF60 * 8 + 1)
#define                                 JTOFF_bit           _BIT_ACCESS(RXB0CON,1)
// LATA<LA0>
extern volatile __bit                   LA0                 __at(0x7C48);	// @ (0xF89 * 8 + 0)
#define                                 LA0_bit             _BIT_ACCESS(LATA,0)
// LATA<LA1>
extern volatile __bit                   LA1                 __at(0x7C49);	// @ (0xF89 * 8 + 1)
#define                                 LA1_bit             _BIT_ACCESS(LATA,1)
// LATA<LA2>
extern volatile __bit                   LA2                 __at(0x7C4A);	// @ (0xF89 * 8 + 2)
#define                                 LA2_bit             _BIT_ACCESS(LATA,2)
// LATA<LA3>
extern volatile __bit                   LA3                 __at(0x7C4B);	// @ (0xF89 * 8 + 3)
#define                                 LA3_bit             _BIT_ACCESS(LATA,3)
// LATA<LA4>
extern volatile __bit                   LA4                 __at(0x7C4C);	// @ (0xF89 * 8 + 4)
#define                                 LA4_bit             _BIT_ACCESS(LATA,4)
// LATA<LA5>
extern volatile __bit                   LA5                 __at(0x7C4D);	// @ (0xF89 * 8 + 5)
#define                                 LA5_bit             _BIT_ACCESS(LATA,5)
// LATA<LA6>
extern volatile __bit                   LA6                 __at(0x7C4E);	// @ (0xF89 * 8 + 6)
#define                                 LA6_bit             _BIT_ACCESS(LATA,6)
// LATA<LATA0>
extern volatile __bit                   LATA0               __at(0x7C48);	// @ (0xF89 * 8 + 0)
#define                                 LATA0_bit           _BIT_ACCESS(LATA,0)
// LATA<LATA1>
extern volatile __bit                   LATA1               __at(0x7C49);	// @ (0xF89 * 8 + 1)
#define                                 LATA1_bit           _BIT_ACCESS(LATA,1)
// LATA<LATA2>
extern volatile __bit                   LATA2               __at(0x7C4A);	// @ (0xF89 * 8 + 2)
#define                                 LATA2_bit           _BIT_ACCESS(LATA,2)
// LATA<LATA3>
extern volatile __bit                   LATA3               __at(0x7C4B);	// @ (0xF89 * 8 + 3)
#define                                 LATA3_bit           _BIT_ACCESS(LATA,3)
// LATA<LATA4>
extern volatile __bit                   LATA4               __at(0x7C4C);	// @ (0xF89 * 8 + 4)
#define                                 LATA4_bit           _BIT_ACCESS(LATA,4)
// LATA<LATA5>
extern volatile __bit                   LATA5               __at(0x7C4D);	// @ (0xF89 * 8 + 5)
#define                                 LATA5_bit           _BIT_ACCESS(LATA,5)
// LATA<LATA6>
extern volatile __bit                   LATA6               __at(0x7C4E);	// @ (0xF89 * 8 + 6)
#define                                 LATA6_bit           _BIT_ACCESS(LATA,6)
// LATB<LATB0>
extern volatile __bit                   LATB0               __at(0x7C50);	// @ (0xF8A * 8 + 0)
#define                                 LATB0_bit           _BIT_ACCESS(LATB,0)
// LATB<LATB1>
extern volatile __bit                   LATB1               __at(0x7C51);	// @ (0xF8A * 8 + 1)
#define                                 LATB1_bit           _BIT_ACCESS(LATB,1)
// LATB<LATB2>
extern volatile __bit                   LATB2               __at(0x7C52);	// @ (0xF8A * 8 + 2)
#define                                 LATB2_bit           _BIT_ACCESS(LATB,2)
// LATB<LATB3>
extern volatile __bit                   LATB3               __at(0x7C53);	// @ (0xF8A * 8 + 3)
#define                                 LATB3_bit           _BIT_ACCESS(LATB,3)
// LATB<LATB4>
extern volatile __bit                   LATB4               __at(0x7C54);	// @ (0xF8A * 8 + 4)
#define                                 LATB4_bit           _BIT_ACCESS(LATB,4)
// LATB<LATB5>
extern volatile __bit                   LATB5               __at(0x7C55);	// @ (0xF8A * 8 + 5)
#define                                 LATB5_bit           _BIT_ACCESS(LATB,5)
// LATB<LATB6>
extern volatile __bit                   LATB6               __at(0x7C56);	// @ (0xF8A * 8 + 6)
#define                                 LATB6_bit           _BIT_ACCESS(LATB,6)
// LATB<LATB7>
extern volatile __bit                   LATB7               __at(0x7C57);	// @ (0xF8A * 8 + 7)
#define                                 LATB7_bit           _BIT_ACCESS(LATB,7)
// LATC<LATC0>
extern volatile __bit                   LATC0               __at(0x7C58);	// @ (0xF8B * 8 + 0)
#define                                 LATC0_bit           _BIT_ACCESS(LATC,0)
// LATC<LATC1>
extern volatile __bit                   LATC1               __at(0x7C59);	// @ (0xF8B * 8 + 1)
#define                                 LATC1_bit           _BIT_ACCESS(LATC,1)
// LATC<LATC2>
extern volatile __bit                   LATC2               __at(0x7C5A);	// @ (0xF8B * 8 + 2)
#define                                 LATC2_bit           _BIT_ACCESS(LATC,2)
// LATC<LATC3>
extern volatile __bit                   LATC3               __at(0x7C5B);	// @ (0xF8B * 8 + 3)
#define                                 LATC3_bit           _BIT_ACCESS(LATC,3)
// LATC<LATC4>
extern volatile __bit                   LATC4               __at(0x7C5C);	// @ (0xF8B * 8 + 4)
#define                                 LATC4_bit           _BIT_ACCESS(LATC,4)
// LATC<LATC5>
extern volatile __bit                   LATC5               __at(0x7C5D);	// @ (0xF8B * 8 + 5)
#define                                 LATC5_bit           _BIT_ACCESS(LATC,5)
// LATC<LATC6>
extern volatile __bit                   LATC6               __at(0x7C5E);	// @ (0xF8B * 8 + 6)
#define                                 LATC6_bit           _BIT_ACCESS(LATC,6)
// LATC<LATC7>
extern volatile __bit                   LATC7               __at(0x7C5F);	// @ (0xF8B * 8 + 7)
#define                                 LATC7_bit           _BIT_ACCESS(LATC,7)
// LATB<LB0>
extern volatile __bit                   LB0                 __at(0x7C50);	// @ (0xF8A * 8 + 0)
#define                                 LB0_bit             _BIT_ACCESS(LATB,0)
// LATB<LB1>
extern volatile __bit                   LB1                 __at(0x7C51);	// @ (0xF8A * 8 + 1)
#define                                 LB1_bit             _BIT_ACCESS(LATB,1)
// LATB<LB2>
extern volatile __bit                   LB2                 __at(0x7C52);	// @ (0xF8A * 8 + 2)
#define                                 LB2_bit             _BIT_ACCESS(LATB,2)
// LATB<LB3>
extern volatile __bit                   LB3                 __at(0x7C53);	// @ (0xF8A * 8 + 3)
#define                                 LB3_bit             _BIT_ACCESS(LATB,3)
// LATB<LB4>
extern volatile __bit                   LB4                 __at(0x7C54);	// @ (0xF8A * 8 + 4)
#define                                 LB4_bit             _BIT_ACCESS(LATB,4)
// LATB<LB5>
extern volatile __bit                   LB5                 __at(0x7C55);	// @ (0xF8A * 8 + 5)
#define                                 LB5_bit             _BIT_ACCESS(LATB,5)
// LATB<LB6>
extern volatile __bit                   LB6                 __at(0x7C56);	// @ (0xF8A * 8 + 6)
#define                                 LB6_bit             _BIT_ACCESS(LATB,6)
// LATB<LB7>
extern volatile __bit                   LB7                 __at(0x7C57);	// @ (0xF8A * 8 + 7)
#define                                 LB7_bit             _BIT_ACCESS(LATB,7)
// LATC<LC0>
extern volatile __bit                   LC0                 __at(0x7C58);	// @ (0xF8B * 8 + 0)
#define                                 LC0_bit             _BIT_ACCESS(LATC,0)
// LATC<LC1>
extern volatile __bit                   LC1                 __at(0x7C59);	// @ (0xF8B * 8 + 1)
#define                                 LC1_bit             _BIT_ACCESS(LATC,1)
// LATC<LC2>
extern volatile __bit                   LC2                 __at(0x7C5A);	// @ (0xF8B * 8 + 2)
#define                                 LC2_bit             _BIT_ACCESS(LATC,2)
// LATC<LC3>
extern volatile __bit                   LC3                 __at(0x7C5B);	// @ (0xF8B * 8 + 3)
#define                                 LC3_bit             _BIT_ACCESS(LATC,3)
// LATC<LC4>
extern volatile __bit                   LC4                 __at(0x7C5C);	// @ (0xF8B * 8 + 4)
#define                                 LC4_bit             _BIT_ACCESS(LATC,4)
// LATC<LC5>
extern volatile __bit                   LC5                 __at(0x7C5D);	// @ (0xF8B * 8 + 5)
#define                                 LC5_bit             _BIT_ACCESS(LATC,5)
// LATC<LC6>
extern volatile __bit                   LC6                 __at(0x7C5E);	// @ (0xF8B * 8 + 6)
#define                                 LC6_bit             _BIT_ACCESS(LATC,6)
// LATC<LC7>
extern volatile __bit                   LC7                 __at(0x7C5F);	// @ (0xF8B * 8 + 7)
#define                                 LC7_bit             _BIT_ACCESS(LATC,7)
// LVDCON<LVDEN>
extern volatile __bit                   LVDEN               __at(0x7E94);	// @ (0xFD2 * 8 + 4)
#define                                 LVDEN_bit           _BIT_ACCESS(LVDCON,4)
// PIE2<LVDIE>
extern volatile __bit                   LVDIE               __at(0x7D02);	// @ (0xFA0 * 8 + 2)
#define                                 LVDIE_bit           _BIT_ACCESS(PIE2,2)
// PIR2<LVDIF>
extern volatile __bit                   LVDIF               __at(0x7D0A);	// @ (0xFA1 * 8 + 2)
#define                                 LVDIF_bit           _BIT_ACCESS(PIR2,2)
// PORTA<LVDIN>
extern volatile __bit                   LVDIN               __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 LVDIN_bit           _BIT_ACCESS(PORTA,5)
// IPR2<LVDIP>
extern volatile __bit                   LVDIP               __at(0x7D12);	// @ (0xFA2 * 8 + 2)
#define                                 LVDIP_bit           _BIT_ACCESS(IPR2,2)
// LVDCON<LVDL0>
extern volatile __bit                   LVDL0               __at(0x7E90);	// @ (0xFD2 * 8 + 0)
#define                                 LVDL0_bit           _BIT_ACCESS(LVDCON,0)
// LVDCON<LVDL1>
extern volatile __bit                   LVDL1               __at(0x7E91);	// @ (0xFD2 * 8 + 1)
#define                                 LVDL1_bit           _BIT_ACCESS(LVDCON,1)
// LVDCON<LVDL2>
extern volatile __bit                   LVDL2               __at(0x7E92);	// @ (0xFD2 * 8 + 2)
#define                                 LVDL2_bit           _BIT_ACCESS(LVDCON,2)
// LVDCON<LVDL3>
extern volatile __bit                   LVDL3               __at(0x7E93);	// @ (0xFD2 * 8 + 3)
#define                                 LVDL3_bit           _BIT_ACCESS(LVDCON,3)
// STATUS<NEGATIVE>
extern volatile __bit                   NEGATIVE            __at(0x7EC4);	// @ (0xFD8 * 8 + 4)
#define                                 NEGATIVE_bit        _BIT_ACCESS(STATUS,4)
// SSPSTAT<NOT_A>
extern volatile __bit                   NOT_A               __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 NOT_A_bit           _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<NOT_ADDRESS>
extern volatile __bit                   NOT_ADDRESS         __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 NOT_ADDRESS_bit     _BIT_ACCESS(SSPSTAT,5)
// RCON<NOT_BOR>
extern volatile __bit                   NOT_BOR             __at(0x7E80);	// @ (0xFD0 * 8 + 0)
#define                                 NOT_BOR_bit         _BIT_ACCESS(RCON,0)
// ADCON0<NOT_DONE>
extern volatile __bit                   NOT_DONE            __at(0x7E12);	// @ (0xFC2 * 8 + 2)
#define                                 NOT_DONE_bit        _BIT_ACCESS(ADCON0,2)
// RCON<NOT_IPEN>
extern volatile __bit                   NOT_IPEN            __at(0x7E87);	// @ (0xFD0 * 8 + 7)
#define                                 NOT_IPEN_bit        _BIT_ACCESS(RCON,7)
// RCON<NOT_PD>
extern volatile __bit                   NOT_PD              __at(0x7E82);	// @ (0xFD0 * 8 + 2)
#define                                 NOT_PD_bit          _BIT_ACCESS(RCON,2)
// RCON<NOT_POR>
extern volatile __bit                   NOT_POR             __at(0x7E81);	// @ (0xFD0 * 8 + 1)
#define                                 NOT_POR_bit         _BIT_ACCESS(RCON,1)
// INTCON2<NOT_RBPU>
extern volatile __bit                   NOT_RBPU            __at(0x7F8F);	// @ (0xFF1 * 8 + 7)
#define                                 NOT_RBPU_bit        _BIT_ACCESS(INTCON2,7)
// RCSTA<NOT_RC8>
extern volatile __bit                   NOT_RC8             __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 NOT_RC8_bit         _BIT_ACCESS(RCSTA,6)
// RCON<NOT_RI>
extern volatile __bit                   NOT_RI              __at(0x7E84);	// @ (0xFD0 * 8 + 4)
#define                                 NOT_RI_bit          _BIT_ACCESS(RCON,4)
// PORTA<NOT_SS>
extern volatile __bit                   NOT_SS              __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 NOT_SS_bit          _BIT_ACCESS(PORTA,5)
// T1CON<NOT_T1SYNC>
extern volatile __bit                   NOT_T1SYNC          __at(0x7E6A);	// @ (0xFCD * 8 + 2)
#define                                 NOT_T1SYNC_bit      _BIT_ACCESS(T1CON,2)
// T3CON<NOT_T3SYNC>
extern volatile __bit                   NOT_T3SYNC          __at(0x7D8A);	// @ (0xFB1 * 8 + 2)
#define                                 NOT_T3SYNC_bit      _BIT_ACCESS(T3CON,2)
// RCON<NOT_TO>
extern volatile __bit                   NOT_TO              __at(0x7E83);	// @ (0xFD0 * 8 + 3)
#define                                 NOT_TO_bit          _BIT_ACCESS(RCON,3)
// TXSTA<NOT_TX8>
extern volatile __bit                   NOT_TX8             __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 NOT_TX8_bit         _BIT_ACCESS(TXSTA,6)
// SSPSTAT<NOT_W>
extern volatile __bit                   NOT_W               __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 NOT_W_bit           _BIT_ACCESS(SSPSTAT,2)
// SSPSTAT<NOT_WRITE>
extern volatile __bit                   NOT_WRITE           __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 NOT_WRITE_bit       _BIT_ACCESS(SSPSTAT,2)
// RCSTA<OERR>
extern volatile __bit                   OERR                __at(0x7D59);	// @ (0xFAB * 8 + 1)
#define                                 OERR_bit            _BIT_ACCESS(RCSTA,1)
// PORTA<OSC2>
extern volatile __bit                   OSC2                __at(0x7C06);	// @ (0xF80 * 8 + 6)
#define                                 OSC2_bit            _BIT_ACCESS(PORTA,6)
// STATUS<OV>
extern volatile __bit                   OV                  __at(0x7EC3);	// @ (0xFD8 * 8 + 3)
#define                                 OV_bit              _BIT_ACCESS(STATUS,3)
// STATUS<OVERFLOW>
extern volatile __bit                   OVERFLOW            __at(0x7EC3);	// @ (0xFD8 * 8 + 3)
#define                                 OVERFLOW_bit        _BIT_ACCESS(STATUS,3)
// PORTC<PA1>
extern volatile __bit                   PA1                 __at(0x7C12);	// @ (0xF82 * 8 + 2)
#define                                 PA1_bit             _BIT_ACCESS(PORTC,2)
// PORTC<PA2>
extern volatile __bit                   PA2                 __at(0x7C11);	// @ (0xF82 * 8 + 1)
#define                                 PA2_bit             _BIT_ACCESS(PORTC,1)
// ADCON1<PCFG0>
extern volatile __bit                   PCFG0               __at(0x7E08);	// @ (0xFC1 * 8 + 0)
#define                                 PCFG0_bit           _BIT_ACCESS(ADCON1,0)
// ADCON1<PCFG1>
extern volatile __bit                   PCFG1               __at(0x7E09);	// @ (0xFC1 * 8 + 1)
#define                                 PCFG1_bit           _BIT_ACCESS(ADCON1,1)
// ADCON1<PCFG2>
extern volatile __bit                   PCFG2               __at(0x7E0A);	// @ (0xFC1 * 8 + 2)
#define                                 PCFG2_bit           _BIT_ACCESS(ADCON1,2)
// ADCON1<PCFG3>
extern volatile __bit                   PCFG3               __at(0x7E0B);	// @ (0xFC1 * 8 + 3)
#define                                 PCFG3_bit           _BIT_ACCESS(ADCON1,3)
// RCON<PD>
extern volatile __bit                   PD                  __at(0x7E82);	// @ (0xFD0 * 8 + 2)
#define                                 PD_bit              _BIT_ACCESS(RCON,2)
// INTCON<PEIE>
extern volatile __bit                   PEIE                __at(0x7F96);	// @ (0xFF2 * 8 + 6)
#define                                 PEIE_bit            _BIT_ACCESS(INTCON,6)
// INTCON<PEIE_GIEL>
extern volatile __bit                   PEIE_GIEL           __at(0x7F96);	// @ (0xFF2 * 8 + 6)
#define                                 PEIE_GIEL_bit       _BIT_ACCESS(INTCON,6)
// SSPCON2<PEN>
extern volatile __bit                   PEN                 __at(0x7E2A);	// @ (0xFC5 * 8 + 2)
#define                                 PEN_bit             _BIT_ACCESS(SSPCON2,2)
// PORTB<PGC>
extern volatile __bit                   PGC                 __at(0x7C0E);	// @ (0xF81 * 8 + 6)
#define                                 PGC_bit             _BIT_ACCESS(PORTB,6)
// PORTB<PGD>
extern volatile __bit                   PGD                 __at(0x7C0F);	// @ (0xF81 * 8 + 7)
#define                                 PGD_bit             _BIT_ACCESS(PORTB,7)
// PORTB<PGM>
extern volatile __bit                   PGM                 __at(0x7C0D);	// @ (0xF81 * 8 + 5)
#define                                 PGM_bit             _BIT_ACCESS(PORTB,5)
// RCON<POR>
extern volatile __bit                   POR                 __at(0x7E81);	// @ (0xFD0 * 8 + 1)
#define                                 POR_bit             _BIT_ACCESS(RCON,1)
// BRGCON2<PRSEG0>
extern volatile __bit                   PRSEG0              __at(0x7B88);	// @ (0xF71 * 8 + 0)
#define                                 PRSEG0_bit          _BIT_ACCESS(BRGCON2,0)
// BRGCON2<PRSEG1>
extern volatile __bit                   PRSEG1              __at(0x7B89);	// @ (0xF71 * 8 + 1)
#define                                 PRSEG1_bit          _BIT_ACCESS(BRGCON2,1)
// BRGCON2<PRSEG2>
extern volatile __bit                   PRSEG2              __at(0x7B8A);	// @ (0xF71 * 8 + 2)
#define                                 PRSEG2_bit          _BIT_ACCESS(BRGCON2,2)
// T0CON<PSA>
extern volatile __bit                   PSA                 __at(0x7EAB);	// @ (0xFD5 * 8 + 3)
#define                                 PSA_bit             _BIT_ACCESS(T0CON,3)
// PORTA<RA0>
extern volatile __bit _DEPRECATED       RA0                 __at(0x7C00);	// @ (0xF80 * 8 + 0)
#define                                 RA0_bit             _BIT_ACCESS(PORTA,0)
// PORTA<RA1>
extern volatile __bit _DEPRECATED       RA1                 __at(0x7C01);	// @ (0xF80 * 8 + 1)
#define                                 RA1_bit             _BIT_ACCESS(PORTA,1)
// PORTA<RA2>
extern volatile __bit _DEPRECATED       RA2                 __at(0x7C02);	// @ (0xF80 * 8 + 2)
#define                                 RA2_bit             _BIT_ACCESS(PORTA,2)
// PORTA<RA3>
extern volatile __bit _DEPRECATED       RA3                 __at(0x7C03);	// @ (0xF80 * 8 + 3)
#define                                 RA3_bit             _BIT_ACCESS(PORTA,3)
// PORTA<RA4>
extern volatile __bit _DEPRECATED       RA4                 __at(0x7C04);	// @ (0xF80 * 8 + 4)
#define                                 RA4_bit             _BIT_ACCESS(PORTA,4)
// PORTA<RA5>
extern volatile __bit _DEPRECATED       RA5                 __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 RA5_bit             _BIT_ACCESS(PORTA,5)
// PORTA<RA6>
extern volatile __bit _DEPRECATED       RA6                 __at(0x7C06);	// @ (0xF80 * 8 + 6)
#define                                 RA6_bit             _BIT_ACCESS(PORTA,6)
// PORTB<RB0>
extern volatile __bit _DEPRECATED       RB0                 __at(0x7C08);	// @ (0xF81 * 8 + 0)
#define                                 RB0_bit             _BIT_ACCESS(PORTB,0)
// RXB0D0<RB0D00>
extern volatile __bit                   RB0D00              __at(0x7B30);	// @ (0xF66 * 8 + 0)
#define                                 RB0D00_bit          _BIT_ACCESS(RXB0D0,0)
// RXB0D0<RB0D01>
extern volatile __bit                   RB0D01              __at(0x7B31);	// @ (0xF66 * 8 + 1)
#define                                 RB0D01_bit          _BIT_ACCESS(RXB0D0,1)
// RXB0D0<RB0D02>
extern volatile __bit                   RB0D02              __at(0x7B32);	// @ (0xF66 * 8 + 2)
#define                                 RB0D02_bit          _BIT_ACCESS(RXB0D0,2)
// RXB0D0<RB0D03>
extern volatile __bit                   RB0D03              __at(0x7B33);	// @ (0xF66 * 8 + 3)
#define                                 RB0D03_bit          _BIT_ACCESS(RXB0D0,3)
// RXB0D0<RB0D04>
extern volatile __bit                   RB0D04              __at(0x7B34);	// @ (0xF66 * 8 + 4)
#define                                 RB0D04_bit          _BIT_ACCESS(RXB0D0,4)
// RXB0D0<RB0D05>
extern volatile __bit                   RB0D05              __at(0x7B35);	// @ (0xF66 * 8 + 5)
#define                                 RB0D05_bit          _BIT_ACCESS(RXB0D0,5)
// RXB0D0<RB0D06>
extern volatile __bit                   RB0D06              __at(0x7B36);	// @ (0xF66 * 8 + 6)
#define                                 RB0D06_bit          _BIT_ACCESS(RXB0D0,6)
// RXB0D0<RB0D07>
extern volatile __bit                   RB0D07              __at(0x7B37);	// @ (0xF66 * 8 + 7)
#define                                 RB0D07_bit          _BIT_ACCESS(RXB0D0,7)
// RXB0D1<RB0D10>
extern volatile __bit                   RB0D10              __at(0x7B38);	// @ (0xF67 * 8 + 0)
#define                                 RB0D10_bit          _BIT_ACCESS(RXB0D1,0)
// RXB0D1<RB0D11>
extern volatile __bit                   RB0D11              __at(0x7B39);	// @ (0xF67 * 8 + 1)
#define                                 RB0D11_bit          _BIT_ACCESS(RXB0D1,1)
// RXB0D1<RB0D12>
extern volatile __bit                   RB0D12              __at(0x7B3A);	// @ (0xF67 * 8 + 2)
#define                                 RB0D12_bit          _BIT_ACCESS(RXB0D1,2)
// RXB0D1<RB0D13>
extern volatile __bit                   RB0D13              __at(0x7B3B);	// @ (0xF67 * 8 + 3)
#define                                 RB0D13_bit          _BIT_ACCESS(RXB0D1,3)
// RXB0D1<RB0D14>
extern volatile __bit                   RB0D14              __at(0x7B3C);	// @ (0xF67 * 8 + 4)
#define                                 RB0D14_bit          _BIT_ACCESS(RXB0D1,4)
// RXB0D1<RB0D15>
extern volatile __bit                   RB0D15              __at(0x7B3D);	// @ (0xF67 * 8 + 5)
#define                                 RB0D15_bit          _BIT_ACCESS(RXB0D1,5)
// RXB0D1<RB0D16>
extern volatile __bit                   RB0D16              __at(0x7B3E);	// @ (0xF67 * 8 + 6)
#define                                 RB0D16_bit          _BIT_ACCESS(RXB0D1,6)
// RXB0D1<RB0D17>
extern volatile __bit                   RB0D17              __at(0x7B3F);	// @ (0xF67 * 8 + 7)
#define                                 RB0D17_bit          _BIT_ACCESS(RXB0D1,7)
// RXB0D2<RB0D20>
extern volatile __bit                   RB0D20              __at(0x7B40);	// @ (0xF68 * 8 + 0)
#define                                 RB0D20_bit          _BIT_ACCESS(RXB0D2,0)
// RXB0D2<RB0D21>
extern volatile __bit                   RB0D21              __at(0x7B41);	// @ (0xF68 * 8 + 1)
#define                                 RB0D21_bit          _BIT_ACCESS(RXB0D2,1)
// RXB0D2<RB0D22>
extern volatile __bit                   RB0D22              __at(0x7B42);	// @ (0xF68 * 8 + 2)
#define                                 RB0D22_bit          _BIT_ACCESS(RXB0D2,2)
// RXB0D2<RB0D23>
extern volatile __bit                   RB0D23              __at(0x7B43);	// @ (0xF68 * 8 + 3)
#define                                 RB0D23_bit          _BIT_ACCESS(RXB0D2,3)
// RXB0D2<RB0D24>
extern volatile __bit                   RB0D24              __at(0x7B44);	// @ (0xF68 * 8 + 4)
#define                                 RB0D24_bit          _BIT_ACCESS(RXB0D2,4)
// RXB0D2<RB0D25>
extern volatile __bit                   RB0D25              __at(0x7B45);	// @ (0xF68 * 8 + 5)
#define                                 RB0D25_bit          _BIT_ACCESS(RXB0D2,5)
// RXB0D2<RB0D26>
extern volatile __bit                   RB0D26              __at(0x7B46);	// @ (0xF68 * 8 + 6)
#define                                 RB0D26_bit          _BIT_ACCESS(RXB0D2,6)
// RXB0D2<RB0D27>
extern volatile __bit                   RB0D27              __at(0x7B47);	// @ (0xF68 * 8 + 7)
#define                                 RB0D27_bit          _BIT_ACCESS(RXB0D2,7)
// RXB0D3<RB0D30>
extern volatile __bit                   RB0D30              __at(0x7B48);	// @ (0xF69 * 8 + 0)
#define                                 RB0D30_bit          _BIT_ACCESS(RXB0D3,0)
// RXB0D3<RB0D31>
extern volatile __bit                   RB0D31              __at(0x7B49);	// @ (0xF69 * 8 + 1)
#define                                 RB0D31_bit          _BIT_ACCESS(RXB0D3,1)
// RXB0D3<RB0D32>
extern volatile __bit                   RB0D32              __at(0x7B4A);	// @ (0xF69 * 8 + 2)
#define                                 RB0D32_bit          _BIT_ACCESS(RXB0D3,2)
// RXB0D3<RB0D33>
extern volatile __bit                   RB0D33              __at(0x7B4B);	// @ (0xF69 * 8 + 3)
#define                                 RB0D33_bit          _BIT_ACCESS(RXB0D3,3)
// RXB0D3<RB0D34>
extern volatile __bit                   RB0D34              __at(0x7B4C);	// @ (0xF69 * 8 + 4)
#define                                 RB0D34_bit          _BIT_ACCESS(RXB0D3,4)
// RXB0D3<RB0D35>
extern volatile __bit                   RB0D35              __at(0x7B4D);	// @ (0xF69 * 8 + 5)
#define                                 RB0D35_bit          _BIT_ACCESS(RXB0D3,5)
// RXB0D3<RB0D36>
extern volatile __bit                   RB0D36              __at(0x7B4E);	// @ (0xF69 * 8 + 6)
#define                                 RB0D36_bit          _BIT_ACCESS(RXB0D3,6)
// RXB0D3<RB0D37>
extern volatile __bit                   RB0D37              __at(0x7B4F);	// @ (0xF69 * 8 + 7)
#define                                 RB0D37_bit          _BIT_ACCESS(RXB0D3,7)
// RXB0D4<RB0D40>
extern volatile __bit                   RB0D40              __at(0x7B50);	// @ (0xF6A * 8 + 0)
#define                                 RB0D40_bit          _BIT_ACCESS(RXB0D4,0)
// RXB0D4<RB0D41>
extern volatile __bit                   RB0D41              __at(0x7B51);	// @ (0xF6A * 8 + 1)
#define                                 RB0D41_bit          _BIT_ACCESS(RXB0D4,1)
// RXB0D4<RB0D42>
extern volatile __bit                   RB0D42              __at(0x7B52);	// @ (0xF6A * 8 + 2)
#define                                 RB0D42_bit          _BIT_ACCESS(RXB0D4,2)
// RXB0D4<RB0D43>
extern volatile __bit                   RB0D43              __at(0x7B53);	// @ (0xF6A * 8 + 3)
#define                                 RB0D43_bit          _BIT_ACCESS(RXB0D4,3)
// RXB0D4<RB0D44>
extern volatile __bit                   RB0D44              __at(0x7B54);	// @ (0xF6A * 8 + 4)
#define                                 RB0D44_bit          _BIT_ACCESS(RXB0D4,4)
// RXB0D4<RB0D45>
extern volatile __bit                   RB0D45              __at(0x7B55);	// @ (0xF6A * 8 + 5)
#define                                 RB0D45_bit          _BIT_ACCESS(RXB0D4,5)
// RXB0D4<RB0D46>
extern volatile __bit                   RB0D46              __at(0x7B56);	// @ (0xF6A * 8 + 6)
#define                                 RB0D46_bit          _BIT_ACCESS(RXB0D4,6)
// RXB0D4<RB0D47>
extern volatile __bit                   RB0D47              __at(0x7B57);	// @ (0xF6A * 8 + 7)
#define                                 RB0D47_bit          _BIT_ACCESS(RXB0D4,7)
// RXB0D5<RB0D50>
extern volatile __bit                   RB0D50              __at(0x7B58);	// @ (0xF6B * 8 + 0)
#define                                 RB0D50_bit          _BIT_ACCESS(RXB0D5,0)
// RXB0D5<RB0D51>
extern volatile __bit                   RB0D51              __at(0x7B59);	// @ (0xF6B * 8 + 1)
#define                                 RB0D51_bit          _BIT_ACCESS(RXB0D5,1)
// RXB0D5<RB0D52>
extern volatile __bit                   RB0D52              __at(0x7B5A);	// @ (0xF6B * 8 + 2)
#define                                 RB0D52_bit          _BIT_ACCESS(RXB0D5,2)
// RXB0D5<RB0D53>
extern volatile __bit                   RB0D53              __at(0x7B5B);	// @ (0xF6B * 8 + 3)
#define                                 RB0D53_bit          _BIT_ACCESS(RXB0D5,3)
// RXB0D5<RB0D54>
extern volatile __bit                   RB0D54              __at(0x7B5C);	// @ (0xF6B * 8 + 4)
#define                                 RB0D54_bit          _BIT_ACCESS(RXB0D5,4)
// RXB0D5<RB0D55>
extern volatile __bit                   RB0D55              __at(0x7B5D);	// @ (0xF6B * 8 + 5)
#define                                 RB0D55_bit          _BIT_ACCESS(RXB0D5,5)
// RXB0D5<RB0D56>
extern volatile __bit                   RB0D56              __at(0x7B5E);	// @ (0xF6B * 8 + 6)
#define                                 RB0D56_bit          _BIT_ACCESS(RXB0D5,6)
// RXB0D5<RB0D57>
extern volatile __bit                   RB0D57              __at(0x7B5F);	// @ (0xF6B * 8 + 7)
#define                                 RB0D57_bit          _BIT_ACCESS(RXB0D5,7)
// RXB0D6<RB0D60>
extern volatile __bit                   RB0D60              __at(0x7B60);	// @ (0xF6C * 8 + 0)
#define                                 RB0D60_bit          _BIT_ACCESS(RXB0D6,0)
// RXB0D6<RB0D61>
extern volatile __bit                   RB0D61              __at(0x7B61);	// @ (0xF6C * 8 + 1)
#define                                 RB0D61_bit          _BIT_ACCESS(RXB0D6,1)
// RXB0D6<RB0D62>
extern volatile __bit                   RB0D62              __at(0x7B62);	// @ (0xF6C * 8 + 2)
#define                                 RB0D62_bit          _BIT_ACCESS(RXB0D6,2)
// RXB0D6<RB0D63>
extern volatile __bit                   RB0D63              __at(0x7B63);	// @ (0xF6C * 8 + 3)
#define                                 RB0D63_bit          _BIT_ACCESS(RXB0D6,3)
// RXB0D6<RB0D64>
extern volatile __bit                   RB0D64              __at(0x7B64);	// @ (0xF6C * 8 + 4)
#define                                 RB0D64_bit          _BIT_ACCESS(RXB0D6,4)
// RXB0D6<RB0D65>
extern volatile __bit                   RB0D65              __at(0x7B65);	// @ (0xF6C * 8 + 5)
#define                                 RB0D65_bit          _BIT_ACCESS(RXB0D6,5)
// RXB0D6<RB0D66>
extern volatile __bit                   RB0D66              __at(0x7B66);	// @ (0xF6C * 8 + 6)
#define                                 RB0D66_bit          _BIT_ACCESS(RXB0D6,6)
// RXB0D6<RB0D67>
extern volatile __bit                   RB0D67              __at(0x7B67);	// @ (0xF6C * 8 + 7)
#define                                 RB0D67_bit          _BIT_ACCESS(RXB0D6,7)
// RXB0D7<RB0D70>
extern volatile __bit                   RB0D70              __at(0x7B68);	// @ (0xF6D * 8 + 0)
#define                                 RB0D70_bit          _BIT_ACCESS(RXB0D7,0)
// RXB0D7<RB0D71>
extern volatile __bit                   RB0D71              __at(0x7B69);	// @ (0xF6D * 8 + 1)
#define                                 RB0D71_bit          _BIT_ACCESS(RXB0D7,1)
// RXB0D7<RB0D72>
extern volatile __bit                   RB0D72              __at(0x7B6A);	// @ (0xF6D * 8 + 2)
#define                                 RB0D72_bit          _BIT_ACCESS(RXB0D7,2)
// RXB0D7<RB0D73>
extern volatile __bit                   RB0D73              __at(0x7B6B);	// @ (0xF6D * 8 + 3)
#define                                 RB0D73_bit          _BIT_ACCESS(RXB0D7,3)
// RXB0D7<RB0D74>
extern volatile __bit                   RB0D74              __at(0x7B6C);	// @ (0xF6D * 8 + 4)
#define                                 RB0D74_bit          _BIT_ACCESS(RXB0D7,4)
// RXB0D7<RB0D75>
extern volatile __bit                   RB0D75              __at(0x7B6D);	// @ (0xF6D * 8 + 5)
#define                                 RB0D75_bit          _BIT_ACCESS(RXB0D7,5)
// RXB0D7<RB0D76>
extern volatile __bit                   RB0D76              __at(0x7B6E);	// @ (0xF6D * 8 + 6)
#define                                 RB0D76_bit          _BIT_ACCESS(RXB0D7,6)
// RXB0D7<RB0D77>
extern volatile __bit                   RB0D77              __at(0x7B6F);	// @ (0xF6D * 8 + 7)
#define                                 RB0D77_bit          _BIT_ACCESS(RXB0D7,7)
// PORTB<RB1>
extern volatile __bit _DEPRECATED       RB1                 __at(0x7C09);	// @ (0xF81 * 8 + 1)
#define                                 RB1_bit             _BIT_ACCESS(PORTB,1)
// PORTB<RB2>
extern volatile __bit _DEPRECATED       RB2                 __at(0x7C0A);	// @ (0xF81 * 8 + 2)
#define                                 RB2_bit             _BIT_ACCESS(PORTB,2)
// PORTB<RB3>
extern volatile __bit _DEPRECATED       RB3                 __at(0x7C0B);	// @ (0xF81 * 8 + 3)
#define                                 RB3_bit             _BIT_ACCESS(PORTB,3)
// PORTB<RB4>
extern volatile __bit _DEPRECATED       RB4                 __at(0x7C0C);	// @ (0xF81 * 8 + 4)
#define                                 RB4_bit             _BIT_ACCESS(PORTB,4)
// PORTB<RB5>
extern volatile __bit _DEPRECATED       RB5                 __at(0x7C0D);	// @ (0xF81 * 8 + 5)
#define                                 RB5_bit             _BIT_ACCESS(PORTB,5)
// PORTB<RB6>
extern volatile __bit _DEPRECATED       RB6                 __at(0x7C0E);	// @ (0xF81 * 8 + 6)
#define                                 RB6_bit             _BIT_ACCESS(PORTB,6)
// PORTB<RB7>
extern volatile __bit _DEPRECATED       RB7                 __at(0x7C0F);	// @ (0xF81 * 8 + 7)
#define                                 RB7_bit             _BIT_ACCESS(PORTB,7)
// INTCON<RBIE>
extern volatile __bit                   RBIE                __at(0x7F93);	// @ (0xFF2 * 8 + 3)
#define                                 RBIE_bit            _BIT_ACCESS(INTCON,3)
// INTCON<RBIF>
extern volatile __bit                   RBIF                __at(0x7F90);	// @ (0xFF2 * 8 + 0)
#define                                 RBIF_bit            _BIT_ACCESS(INTCON,0)
// INTCON2<RBIP>
extern volatile __bit                   RBIP                __at(0x7F88);	// @ (0xFF1 * 8 + 0)
#define                                 RBIP_bit            _BIT_ACCESS(INTCON2,0)
// INTCON2<RBPU>
extern volatile __bit                   RBPU                __at(0x7F8F);	// @ (0xFF1 * 8 + 7)
#define                                 RBPU_bit            _BIT_ACCESS(INTCON2,7)
// PORTC<RC0>
extern volatile __bit _DEPRECATED       RC0                 __at(0x7C10);	// @ (0xF82 * 8 + 0)
#define                                 RC0_bit             _BIT_ACCESS(PORTC,0)
// PORTC<RC1>
extern volatile __bit _DEPRECATED       RC1                 __at(0x7C11);	// @ (0xF82 * 8 + 1)
#define                                 RC1_bit             _BIT_ACCESS(PORTC,1)
// PIE1<RC1IE>
extern volatile __bit                   RC1IE               __at(0x7CED);	// @ (0xF9D * 8 + 5)
#define                                 RC1IE_bit           _BIT_ACCESS(PIE1,5)
// PIR1<RC1IF>
extern volatile __bit                   RC1IF               __at(0x7CF5);	// @ (0xF9E * 8 + 5)
#define                                 RC1IF_bit           _BIT_ACCESS(PIR1,5)
// IPR1<RC1IP>
extern volatile __bit                   RC1IP               __at(0x7CFD);	// @ (0xF9F * 8 + 5)
#define                                 RC1IP_bit           _BIT_ACCESS(IPR1,5)
// PORTC<RC2>
extern volatile __bit _DEPRECATED       RC2                 __at(0x7C12);	// @ (0xF82 * 8 + 2)
#define                                 RC2_bit             _BIT_ACCESS(PORTC,2)
// PORTC<RC3>
extern volatile __bit _DEPRECATED       RC3                 __at(0x7C13);	// @ (0xF82 * 8 + 3)
#define                                 RC3_bit             _BIT_ACCESS(PORTC,3)
// PORTC<RC4>
extern volatile __bit _DEPRECATED       RC4                 __at(0x7C14);	// @ (0xF82 * 8 + 4)
#define                                 RC4_bit             _BIT_ACCESS(PORTC,4)
// PORTC<RC5>
extern volatile __bit _DEPRECATED       RC5                 __at(0x7C15);	// @ (0xF82 * 8 + 5)
#define                                 RC5_bit             _BIT_ACCESS(PORTC,5)
// PORTC<RC6>
extern volatile __bit _DEPRECATED       RC6                 __at(0x7C16);	// @ (0xF82 * 8 + 6)
#define                                 RC6_bit             _BIT_ACCESS(PORTC,6)
// PORTC<RC7>
extern volatile __bit _DEPRECATED       RC7                 __at(0x7C17);	// @ (0xF82 * 8 + 7)
#define                                 RC7_bit             _BIT_ACCESS(PORTC,7)
// RCSTA<RC8_9>
extern volatile __bit                   RC8_9               __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 RC8_9_bit           _BIT_ACCESS(RCSTA,6)
// RCSTA<RC9>
extern volatile __bit                   RC9                 __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 RC9_bit             _BIT_ACCESS(RCSTA,6)
// RCSTA<RCD8>
extern volatile __bit                   RCD8                __at(0x7D58);	// @ (0xFAB * 8 + 0)
#define                                 RCD8_bit            _BIT_ACCESS(RCSTA,0)
// SSPCON2<RCEN>
extern volatile __bit                   RCEN                __at(0x7E2B);	// @ (0xFC5 * 8 + 3)
#define                                 RCEN_bit            _BIT_ACCESS(SSPCON2,3)
// PIE1<RCIE>
extern volatile __bit                   RCIE                __at(0x7CED);	// @ (0xF9D * 8 + 5)
#define                                 RCIE_bit            _BIT_ACCESS(PIE1,5)
// PIR1<RCIF>
extern volatile __bit                   RCIF                __at(0x7CF5);	// @ (0xF9E * 8 + 5)
#define                                 RCIF_bit            _BIT_ACCESS(PIR1,5)
// IPR1<RCIP>
extern volatile __bit                   RCIP                __at(0x7CFD);	// @ (0xF9F * 8 + 5)
#define                                 RCIP_bit            _BIT_ACCESS(IPR1,5)
// EECON1<RD>
extern volatile __bit                   RD                  __at(0x7D30);	// @ (0xFA6 * 8 + 0)
#define                                 RD_bit              _BIT_ACCESS(EECON1,0)
// T1CON<RD16>
extern volatile __bit _DEPRECATED       RD16                __at(0x7E6F);	// @ (0xFCD * 8 + 7)
#define                                 RD16_bit            _BIT_ACCESS(T1CON,7)
// T3CON<RD163>
extern volatile __bit                   RD163               __at(0x7D8F);	// @ (0xFB1 * 8 + 7)
#define                                 RD163_bit           _BIT_ACCESS(T3CON,7)
// SSPSTAT<READ_WRITE>
extern volatile __bit                   READ_WRITE          __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 READ_WRITE_bit      _BIT_ACCESS(SSPSTAT,2)
// RXERRCNT<REC0>
extern volatile __bit                   REC0                __at(0x7BA8);	// @ (0xF75 * 8 + 0)
#define                                 REC0_bit            _BIT_ACCESS(RXERRCNT,0)
// RXERRCNT<REC1>
extern volatile __bit                   REC1                __at(0x7BA9);	// @ (0xF75 * 8 + 1)
#define                                 REC1_bit            _BIT_ACCESS(RXERRCNT,1)
// RXERRCNT<REC2>
extern volatile __bit                   REC2                __at(0x7BAA);	// @ (0xF75 * 8 + 2)
#define                                 REC2_bit            _BIT_ACCESS(RXERRCNT,2)
// RXERRCNT<REC3>
extern volatile __bit                   REC3                __at(0x7BAB);	// @ (0xF75 * 8 + 3)
#define                                 REC3_bit            _BIT_ACCESS(RXERRCNT,3)
// RXERRCNT<REC4>
extern volatile __bit                   REC4                __at(0x7BAC);	// @ (0xF75 * 8 + 4)
#define                                 REC4_bit            _BIT_ACCESS(RXERRCNT,4)
// RXERRCNT<REC5>
extern volatile __bit                   REC5                __at(0x7BAD);	// @ (0xF75 * 8 + 5)
#define                                 REC5_bit            _BIT_ACCESS(RXERRCNT,5)
// RXERRCNT<REC6>
extern volatile __bit                   REC6                __at(0x7BAE);	// @ (0xF75 * 8 + 6)
#define                                 REC6_bit            _BIT_ACCESS(RXERRCNT,6)
// RXERRCNT<REC7>
extern volatile __bit                   REC7                __at(0x7BAF);	// @ (0xF75 * 8 + 7)
#define                                 REC7_bit            _BIT_ACCESS(RXERRCNT,7)
// CANCON<REQOP0>
extern volatile __bit                   REQOP0              __at(0x7B7D);	// @ (0xF6F * 8 + 5)
#define                                 REQOP0_bit          _BIT_ACCESS(CANCON,5)
// CANCON<REQOP1>
extern volatile __bit                   REQOP1              __at(0x7B7E);	// @ (0xF6F * 8 + 6)
#define                                 REQOP1_bit          _BIT_ACCESS(CANCON,6)
// CANCON<REQOP2>
extern volatile __bit                   REQOP2              __at(0x7B7F);	// @ (0xF6F * 8 + 7)
#define                                 REQOP2_bit          _BIT_ACCESS(CANCON,7)
// RCON<RI>
extern volatile __bit                   RI                  __at(0x7E84);	// @ (0xFD0 * 8 + 4)
#define                                 RI_bit              _BIT_ACCESS(RCON,4)
// SSPCON2<RSEN>
extern volatile __bit                   RSEN                __at(0x7E29);	// @ (0xFC5 * 8 + 1)
#define                                 RSEN_bit            _BIT_ACCESS(SSPCON2,1)
// SSPSTAT<RW>
extern volatile __bit                   RW                  __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 RW_bit              _BIT_ACCESS(SSPSTAT,2)
// PORTC<RX>
extern volatile __bit                   RX                  __at(0x7C17);	// @ (0xF82 * 8 + 7)
#define                                 RX_bit              _BIT_ACCESS(PORTC,7)
// PIE3<RX0IE>
extern volatile __bit                   RX0IE               __at(0x7D18);	// @ (0xFA3 * 8 + 0)
#define                                 RX0IE_bit           _BIT_ACCESS(PIE3,0)
// PIR3<RX0IF>
extern volatile __bit                   RX0IF               __at(0x7D20);	// @ (0xFA4 * 8 + 0)
#define                                 RX0IF_bit           _BIT_ACCESS(PIR3,0)
// PIE3<RX1IE>
extern volatile __bit                   RX1IE               __at(0x7D19);	// @ (0xFA3 * 8 + 1)
#define                                 RX1IE_bit           _BIT_ACCESS(PIE3,1)
// PIR3<RX1IF>
extern volatile __bit                   RX1IF               __at(0x7D21);	// @ (0xFA4 * 8 + 1)
#define                                 RX1IF_bit           _BIT_ACCESS(PIR3,1)
// COMSTAT<RX1OVFL>
extern volatile __bit                   RX1OVFL             __at(0x7BA7);	// @ (0xF74 * 8 + 7)
#define                                 RX1OVFL_bit         _BIT_ACCESS(COMSTAT,7)
// COMSTAT<RX2OVFL>
extern volatile __bit                   RX2OVFL             __at(0x7BA6);	// @ (0xF74 * 8 + 6)
#define                                 RX2OVFL_bit         _BIT_ACCESS(COMSTAT,6)
// RCSTA<RX9>
extern volatile __bit                   RX9                 __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 RX9_bit             _BIT_ACCESS(RCSTA,6)
// RCSTA<RX9D>
extern volatile __bit                   RX9D                __at(0x7D58);	// @ (0xFAB * 8 + 0)
#define                                 RX9D_bit            _BIT_ACCESS(RCSTA,0)
// RXB0D0<RXB0D00>
extern volatile __bit                   RXB0D00             __at(0x7B30);	// @ (0xF66 * 8 + 0)
#define                                 RXB0D00_bit         _BIT_ACCESS(RXB0D0,0)
// RXB0D0<RXB0D01>
extern volatile __bit                   RXB0D01             __at(0x7B31);	// @ (0xF66 * 8 + 1)
#define                                 RXB0D01_bit         _BIT_ACCESS(RXB0D0,1)
// RXB0D0<RXB0D02>
extern volatile __bit                   RXB0D02             __at(0x7B32);	// @ (0xF66 * 8 + 2)
#define                                 RXB0D02_bit         _BIT_ACCESS(RXB0D0,2)
// RXB0D0<RXB0D03>
extern volatile __bit                   RXB0D03             __at(0x7B33);	// @ (0xF66 * 8 + 3)
#define                                 RXB0D03_bit         _BIT_ACCESS(RXB0D0,3)
// RXB0D0<RXB0D04>
extern volatile __bit                   RXB0D04             __at(0x7B34);	// @ (0xF66 * 8 + 4)
#define                                 RXB0D04_bit         _BIT_ACCESS(RXB0D0,4)
// RXB0D0<RXB0D05>
extern volatile __bit                   RXB0D05             __at(0x7B35);	// @ (0xF66 * 8 + 5)
#define                                 RXB0D05_bit         _BIT_ACCESS(RXB0D0,5)
// RXB0D0<RXB0D06>
extern volatile __bit                   RXB0D06             __at(0x7B36);	// @ (0xF66 * 8 + 6)
#define                                 RXB0D06_bit         _BIT_ACCESS(RXB0D0,6)
// RXB0D0<RXB0D07>
extern volatile __bit                   RXB0D07             __at(0x7B37);	// @ (0xF66 * 8 + 7)
#define                                 RXB0D07_bit         _BIT_ACCESS(RXB0D0,7)
// RXB0D1<RXB0D10>
extern volatile __bit                   RXB0D10             __at(0x7B38);	// @ (0xF67 * 8 + 0)
#define                                 RXB0D10_bit         _BIT_ACCESS(RXB0D1,0)
// RXB0D1<RXB0D11>
extern volatile __bit                   RXB0D11             __at(0x7B39);	// @ (0xF67 * 8 + 1)
#define                                 RXB0D11_bit         _BIT_ACCESS(RXB0D1,1)
// RXB0D1<RXB0D12>
extern volatile __bit                   RXB0D12             __at(0x7B3A);	// @ (0xF67 * 8 + 2)
#define                                 RXB0D12_bit         _BIT_ACCESS(RXB0D1,2)
// RXB0D1<RXB0D13>
extern volatile __bit                   RXB0D13             __at(0x7B3B);	// @ (0xF67 * 8 + 3)
#define                                 RXB0D13_bit         _BIT_ACCESS(RXB0D1,3)
// RXB0D1<RXB0D14>
extern volatile __bit                   RXB0D14             __at(0x7B3C);	// @ (0xF67 * 8 + 4)
#define                                 RXB0D14_bit         _BIT_ACCESS(RXB0D1,4)
// RXB0D1<RXB0D15>
extern volatile __bit                   RXB0D15             __at(0x7B3D);	// @ (0xF67 * 8 + 5)
#define                                 RXB0D15_bit         _BIT_ACCESS(RXB0D1,5)
// RXB0D1<RXB0D16>
extern volatile __bit                   RXB0D16             __at(0x7B3E);	// @ (0xF67 * 8 + 6)
#define                                 RXB0D16_bit         _BIT_ACCESS(RXB0D1,6)
// RXB0D1<RXB0D17>
extern volatile __bit                   RXB0D17             __at(0x7B3F);	// @ (0xF67 * 8 + 7)
#define                                 RXB0D17_bit         _BIT_ACCESS(RXB0D1,7)
// RXB0D2<RXB0D20>
extern volatile __bit                   RXB0D20             __at(0x7B40);	// @ (0xF68 * 8 + 0)
#define                                 RXB0D20_bit         _BIT_ACCESS(RXB0D2,0)
// RXB0D2<RXB0D21>
extern volatile __bit                   RXB0D21             __at(0x7B41);	// @ (0xF68 * 8 + 1)
#define                                 RXB0D21_bit         _BIT_ACCESS(RXB0D2,1)
// RXB0D2<RXB0D22>
extern volatile __bit                   RXB0D22             __at(0x7B42);	// @ (0xF68 * 8 + 2)
#define                                 RXB0D22_bit         _BIT_ACCESS(RXB0D2,2)
// RXB0D2<RXB0D23>
extern volatile __bit                   RXB0D23             __at(0x7B43);	// @ (0xF68 * 8 + 3)
#define                                 RXB0D23_bit         _BIT_ACCESS(RXB0D2,3)
// RXB0D2<RXB0D24>
extern volatile __bit                   RXB0D24             __at(0x7B44);	// @ (0xF68 * 8 + 4)
#define                                 RXB0D24_bit         _BIT_ACCESS(RXB0D2,4)
// RXB0D2<RXB0D25>
extern volatile __bit                   RXB0D25             __at(0x7B45);	// @ (0xF68 * 8 + 5)
#define                                 RXB0D25_bit         _BIT_ACCESS(RXB0D2,5)
// RXB0D2<RXB0D26>
extern volatile __bit                   RXB0D26             __at(0x7B46);	// @ (0xF68 * 8 + 6)
#define                                 RXB0D26_bit         _BIT_ACCESS(RXB0D2,6)
// RXB0D2<RXB0D27>
extern volatile __bit                   RXB0D27             __at(0x7B47);	// @ (0xF68 * 8 + 7)
#define                                 RXB0D27_bit         _BIT_ACCESS(RXB0D2,7)
// RXB0D3<RXB0D30>
extern volatile __bit                   RXB0D30             __at(0x7B48);	// @ (0xF69 * 8 + 0)
#define                                 RXB0D30_bit         _BIT_ACCESS(RXB0D3,0)
// RXB0D3<RXB0D31>
extern volatile __bit                   RXB0D31             __at(0x7B49);	// @ (0xF69 * 8 + 1)
#define                                 RXB0D31_bit         _BIT_ACCESS(RXB0D3,1)
// RXB0D3<RXB0D32>
extern volatile __bit                   RXB0D32             __at(0x7B4A);	// @ (0xF69 * 8 + 2)
#define                                 RXB0D32_bit         _BIT_ACCESS(RXB0D3,2)
// RXB0D3<RXB0D33>
extern volatile __bit                   RXB0D33             __at(0x7B4B);	// @ (0xF69 * 8 + 3)
#define                                 RXB0D33_bit         _BIT_ACCESS(RXB0D3,3)
// RXB0D3<RXB0D34>
extern volatile __bit                   RXB0D34             __at(0x7B4C);	// @ (0xF69 * 8 + 4)
#define                                 RXB0D34_bit         _BIT_ACCESS(RXB0D3,4)
// RXB0D3<RXB0D35>
extern volatile __bit                   RXB0D35             __at(0x7B4D);	// @ (0xF69 * 8 + 5)
#define                                 RXB0D35_bit         _BIT_ACCESS(RXB0D3,5)
// RXB0D3<RXB0D36>
extern volatile __bit                   RXB0D36             __at(0x7B4E);	// @ (0xF69 * 8 + 6)
#define                                 RXB0D36_bit         _BIT_ACCESS(RXB0D3,6)
// RXB0D3<RXB0D37>
extern volatile __bit                   RXB0D37             __at(0x7B4F);	// @ (0xF69 * 8 + 7)
#define                                 RXB0D37_bit         _BIT_ACCESS(RXB0D3,7)
// RXB0D4<RXB0D40>
extern volatile __bit                   RXB0D40             __at(0x7B50);	// @ (0xF6A * 8 + 0)
#define                                 RXB0D40_bit         _BIT_ACCESS(RXB0D4,0)
// RXB0D4<RXB0D41>
extern volatile __bit                   RXB0D41             __at(0x7B51);	// @ (0xF6A * 8 + 1)
#define                                 RXB0D41_bit         _BIT_ACCESS(RXB0D4,1)
// RXB0D4<RXB0D42>
extern volatile __bit                   RXB0D42             __at(0x7B52);	// @ (0xF6A * 8 + 2)
#define                                 RXB0D42_bit         _BIT_ACCESS(RXB0D4,2)
// RXB0D4<RXB0D43>
extern volatile __bit                   RXB0D43             __at(0x7B53);	// @ (0xF6A * 8 + 3)
#define                                 RXB0D43_bit         _BIT_ACCESS(RXB0D4,3)
// RXB0D4<RXB0D44>
extern volatile __bit                   RXB0D44             __at(0x7B54);	// @ (0xF6A * 8 + 4)
#define                                 RXB0D44_bit         _BIT_ACCESS(RXB0D4,4)
// RXB0D4<RXB0D45>
extern volatile __bit                   RXB0D45             __at(0x7B55);	// @ (0xF6A * 8 + 5)
#define                                 RXB0D45_bit         _BIT_ACCESS(RXB0D4,5)
// RXB0D4<RXB0D46>
extern volatile __bit                   RXB0D46             __at(0x7B56);	// @ (0xF6A * 8 + 6)
#define                                 RXB0D46_bit         _BIT_ACCESS(RXB0D4,6)
// RXB0D4<RXB0D47>
extern volatile __bit                   RXB0D47             __at(0x7B57);	// @ (0xF6A * 8 + 7)
#define                                 RXB0D47_bit         _BIT_ACCESS(RXB0D4,7)
// RXB0D5<RXB0D50>
extern volatile __bit                   RXB0D50             __at(0x7B58);	// @ (0xF6B * 8 + 0)
#define                                 RXB0D50_bit         _BIT_ACCESS(RXB0D5,0)
// RXB0D5<RXB0D51>
extern volatile __bit                   RXB0D51             __at(0x7B59);	// @ (0xF6B * 8 + 1)
#define                                 RXB0D51_bit         _BIT_ACCESS(RXB0D5,1)
// RXB0D5<RXB0D52>
extern volatile __bit                   RXB0D52             __at(0x7B5A);	// @ (0xF6B * 8 + 2)
#define                                 RXB0D52_bit         _BIT_ACCESS(RXB0D5,2)
// RXB0D5<RXB0D53>
extern volatile __bit                   RXB0D53             __at(0x7B5B);	// @ (0xF6B * 8 + 3)
#define                                 RXB0D53_bit         _BIT_ACCESS(RXB0D5,3)
// RXB0D5<RXB0D54>
extern volatile __bit                   RXB0D54             __at(0x7B5C);	// @ (0xF6B * 8 + 4)
#define                                 RXB0D54_bit         _BIT_ACCESS(RXB0D5,4)
// RXB0D5<RXB0D55>
extern volatile __bit                   RXB0D55             __at(0x7B5D);	// @ (0xF6B * 8 + 5)
#define                                 RXB0D55_bit         _BIT_ACCESS(RXB0D5,5)
// RXB0D5<RXB0D56>
extern volatile __bit                   RXB0D56             __at(0x7B5E);	// @ (0xF6B * 8 + 6)
#define                                 RXB0D56_bit         _BIT_ACCESS(RXB0D5,6)
// RXB0D5<RXB0D57>
extern volatile __bit                   RXB0D57             __at(0x7B5F);	// @ (0xF6B * 8 + 7)
#define                                 RXB0D57_bit         _BIT_ACCESS(RXB0D5,7)
// RXB0D6<RXB0D60>
extern volatile __bit                   RXB0D60             __at(0x7B60);	// @ (0xF6C * 8 + 0)
#define                                 RXB0D60_bit         _BIT_ACCESS(RXB0D6,0)
// RXB0D6<RXB0D61>
extern volatile __bit                   RXB0D61             __at(0x7B61);	// @ (0xF6C * 8 + 1)
#define                                 RXB0D61_bit         _BIT_ACCESS(RXB0D6,1)
// RXB0D6<RXB0D62>
extern volatile __bit                   RXB0D62             __at(0x7B62);	// @ (0xF6C * 8 + 2)
#define                                 RXB0D62_bit         _BIT_ACCESS(RXB0D6,2)
// RXB0D6<RXB0D63>
extern volatile __bit                   RXB0D63             __at(0x7B63);	// @ (0xF6C * 8 + 3)
#define                                 RXB0D63_bit         _BIT_ACCESS(RXB0D6,3)
// RXB0D6<RXB0D64>
extern volatile __bit                   RXB0D64             __at(0x7B64);	// @ (0xF6C * 8 + 4)
#define                                 RXB0D64_bit         _BIT_ACCESS(RXB0D6,4)
// RXB0D6<RXB0D65>
extern volatile __bit                   RXB0D65             __at(0x7B65);	// @ (0xF6C * 8 + 5)
#define                                 RXB0D65_bit         _BIT_ACCESS(RXB0D6,5)
// RXB0D6<RXB0D66>
extern volatile __bit                   RXB0D66             __at(0x7B66);	// @ (0xF6C * 8 + 6)
#define                                 RXB0D66_bit         _BIT_ACCESS(RXB0D6,6)
// RXB0D6<RXB0D67>
extern volatile __bit                   RXB0D67             __at(0x7B67);	// @ (0xF6C * 8 + 7)
#define                                 RXB0D67_bit         _BIT_ACCESS(RXB0D6,7)
// RXB0D7<RXB0D70>
extern volatile __bit                   RXB0D70             __at(0x7B68);	// @ (0xF6D * 8 + 0)
#define                                 RXB0D70_bit         _BIT_ACCESS(RXB0D7,0)
// RXB0D7<RXB0D71>
extern volatile __bit                   RXB0D71             __at(0x7B69);	// @ (0xF6D * 8 + 1)
#define                                 RXB0D71_bit         _BIT_ACCESS(RXB0D7,1)
// RXB0D7<RXB0D72>
extern volatile __bit                   RXB0D72             __at(0x7B6A);	// @ (0xF6D * 8 + 2)
#define                                 RXB0D72_bit         _BIT_ACCESS(RXB0D7,2)
// RXB0D7<RXB0D73>
extern volatile __bit                   RXB0D73             __at(0x7B6B);	// @ (0xF6D * 8 + 3)
#define                                 RXB0D73_bit         _BIT_ACCESS(RXB0D7,3)
// RXB0D7<RXB0D74>
extern volatile __bit                   RXB0D74             __at(0x7B6C);	// @ (0xF6D * 8 + 4)
#define                                 RXB0D74_bit         _BIT_ACCESS(RXB0D7,4)
// RXB0D7<RXB0D75>
extern volatile __bit                   RXB0D75             __at(0x7B6D);	// @ (0xF6D * 8 + 5)
#define                                 RXB0D75_bit         _BIT_ACCESS(RXB0D7,5)
// RXB0D7<RXB0D76>
extern volatile __bit                   RXB0D76             __at(0x7B6E);	// @ (0xF6D * 8 + 6)
#define                                 RXB0D76_bit         _BIT_ACCESS(RXB0D7,6)
// RXB0D7<RXB0D77>
extern volatile __bit                   RXB0D77             __at(0x7B6F);	// @ (0xF6D * 8 + 7)
#define                                 RXB0D77_bit         _BIT_ACCESS(RXB0D7,7)
// RXB0CON<RXB0DBEN>
extern volatile __bit                   RXB0DBEN            __at(0x7B02);	// @ (0xF60 * 8 + 2)
#define                                 RXB0DBEN_bit        _BIT_ACCESS(RXB0CON,2)
// RXB0DLC<RXB0DLC0>
extern volatile __bit                   RXB0DLC0            __at(0x7B28);	// @ (0xF65 * 8 + 0)
#define                                 RXB0DLC0_bit        _BIT_ACCESS(RXB0DLC,0)
// RXB0DLC<RXB0DLC1>
extern volatile __bit                   RXB0DLC1            __at(0x7B29);	// @ (0xF65 * 8 + 1)
#define                                 RXB0DLC1_bit        _BIT_ACCESS(RXB0DLC,1)
// RXB0DLC<RXB0DLC2>
extern volatile __bit                   RXB0DLC2            __at(0x7B2A);	// @ (0xF65 * 8 + 2)
#define                                 RXB0DLC2_bit        _BIT_ACCESS(RXB0DLC,2)
// RXB0DLC<RXB0DLC3>
extern volatile __bit                   RXB0DLC3            __at(0x7B2B);	// @ (0xF65 * 8 + 3)
#define                                 RXB0DLC3_bit        _BIT_ACCESS(RXB0DLC,3)
// RXB0EIDL<RXB0EID0>
extern volatile __bit                   RXB0EID0            __at(0x7B20);	// @ (0xF64 * 8 + 0)
#define                                 RXB0EID0_bit        _BIT_ACCESS(RXB0EIDL,0)
// RXB0EIDL<RXB0EID1>
extern volatile __bit                   RXB0EID1            __at(0x7B21);	// @ (0xF64 * 8 + 1)
#define                                 RXB0EID1_bit        _BIT_ACCESS(RXB0EIDL,1)
// RXB0EIDH<RXB0EID10>
extern volatile __bit                   RXB0EID10           __at(0x7B1A);	// @ (0xF63 * 8 + 2)
#define                                 RXB0EID10_bit       _BIT_ACCESS(RXB0EIDH,2)
// RXB0EIDH<RXB0EID11>
extern volatile __bit                   RXB0EID11           __at(0x7B1B);	// @ (0xF63 * 8 + 3)
#define                                 RXB0EID11_bit       _BIT_ACCESS(RXB0EIDH,3)
// RXB0EIDH<RXB0EID12>
extern volatile __bit                   RXB0EID12           __at(0x7B1C);	// @ (0xF63 * 8 + 4)
#define                                 RXB0EID12_bit       _BIT_ACCESS(RXB0EIDH,4)
// RXB0EIDH<RXB0EID13>
extern volatile __bit                   RXB0EID13           __at(0x7B1D);	// @ (0xF63 * 8 + 5)
#define                                 RXB0EID13_bit       _BIT_ACCESS(RXB0EIDH,5)
// RXB0EIDH<RXB0EID14>
extern volatile __bit                   RXB0EID14           __at(0x7B1E);	// @ (0xF63 * 8 + 6)
#define                                 RXB0EID14_bit       _BIT_ACCESS(RXB0EIDH,6)
// RXB0EIDH<RXB0EID15>
extern volatile __bit                   RXB0EID15           __at(0x7B1F);	// @ (0xF63 * 8 + 7)
#define                                 RXB0EID15_bit       _BIT_ACCESS(RXB0EIDH,7)
// RXB0SIDL<RXB0EID16>
extern volatile __bit                   RXB0EID16           __at(0x7B10);	// @ (0xF62 * 8 + 0)
#define                                 RXB0EID16_bit       _BIT_ACCESS(RXB0SIDL,0)
// RXB0SIDL<RXB0EID17>
extern volatile __bit                   RXB0EID17           __at(0x7B11);	// @ (0xF62 * 8 + 1)
#define                                 RXB0EID17_bit       _BIT_ACCESS(RXB0SIDL,1)
// RXB0EIDL<RXB0EID2>
extern volatile __bit                   RXB0EID2            __at(0x7B22);	// @ (0xF64 * 8 + 2)
#define                                 RXB0EID2_bit        _BIT_ACCESS(RXB0EIDL,2)
// RXB0EIDL<RXB0EID3>
extern volatile __bit                   RXB0EID3            __at(0x7B23);	// @ (0xF64 * 8 + 3)
#define                                 RXB0EID3_bit        _BIT_ACCESS(RXB0EIDL,3)
// RXB0EIDL<RXB0EID4>
extern volatile __bit                   RXB0EID4            __at(0x7B24);	// @ (0xF64 * 8 + 4)
#define                                 RXB0EID4_bit        _BIT_ACCESS(RXB0EIDL,4)
// RXB0EIDL<RXB0EID5>
extern volatile __bit                   RXB0EID5            __at(0x7B25);	// @ (0xF64 * 8 + 5)
#define                                 RXB0EID5_bit        _BIT_ACCESS(RXB0EIDL,5)
// RXB0EIDL<RXB0EID6>
extern volatile __bit                   RXB0EID6            __at(0x7B26);	// @ (0xF64 * 8 + 6)
#define                                 RXB0EID6_bit        _BIT_ACCESS(RXB0EIDL,6)
// RXB0EIDL<RXB0EID7>
extern volatile __bit                   RXB0EID7            __at(0x7B27);	// @ (0xF64 * 8 + 7)
#define                                 RXB0EID7_bit        _BIT_ACCESS(RXB0EIDL,7)
// RXB0EIDH<RXB0EID8>
extern volatile __bit                   RXB0EID8            __at(0x7B18);	// @ (0xF63 * 8 + 0)
#define                                 RXB0EID8_bit        _BIT_ACCESS(RXB0EIDH,0)
// RXB0EIDH<RXB0EID9>
extern volatile __bit                   RXB0EID9            __at(0x7B19);	// @ (0xF63 * 8 + 1)
#define                                 RXB0EID9_bit        _BIT_ACCESS(RXB0EIDH,1)
// RXB0SIDL<RXB0EXID>
extern volatile __bit                   RXB0EXID            __at(0x7B13);	// @ (0xF62 * 8 + 3)
#define                                 RXB0EXID_bit        _BIT_ACCESS(RXB0SIDL,3)
// RXB0CON<RXB0FILHIT0>
extern volatile __bit                   RXB0FILHIT0         __at(0x7B00);	// @ (0xF60 * 8 + 0)
#define                                 RXB0FILHIT0_bit     _BIT_ACCESS(RXB0CON,0)
// RXB0CON<RXB0FILHIT1>
extern volatile __bit                   RXB0FILHIT1         __at(0x7B01);	// @ (0xF60 * 8 + 1)
#define                                 RXB0FILHIT1_bit     _BIT_ACCESS(RXB0CON,1)
// RXB0CON<RXB0FILHIT2>
extern volatile __bit                   RXB0FILHIT2         __at(0x7B02);	// @ (0xF60 * 8 + 2)
#define                                 RXB0FILHIT2_bit     _BIT_ACCESS(RXB0CON,2)
// RXB0CON<RXB0FILHIT3>
extern volatile __bit                   RXB0FILHIT3         __at(0x7B03);	// @ (0xF60 * 8 + 3)
#define                                 RXB0FILHIT3_bit     _BIT_ACCESS(RXB0CON,3)
// RXB0CON<RXB0FUL>
extern volatile __bit                   RXB0FUL             __at(0x7B07);	// @ (0xF60 * 8 + 7)
#define                                 RXB0FUL_bit         _BIT_ACCESS(RXB0CON,7)
// PIE3<RXB0IE>
extern volatile __bit                   RXB0IE              __at(0x7D18);	// @ (0xFA3 * 8 + 0)
#define                                 RXB0IE_bit          _BIT_ACCESS(PIE3,0)
// PIR3<RXB0IF>
extern volatile __bit                   RXB0IF              __at(0x7D20);	// @ (0xFA4 * 8 + 0)
#define                                 RXB0IF_bit          _BIT_ACCESS(PIR3,0)
// IPR3<RXB0IP>
extern volatile __bit                   RXB0IP              __at(0x7D28);	// @ (0xFA5 * 8 + 0)
#define                                 RXB0IP_bit          _BIT_ACCESS(IPR3,0)
// RXB0CON<RXB0M0>
extern volatile __bit                   RXB0M0              __at(0x7B05);	// @ (0xF60 * 8 + 5)
#define                                 RXB0M0_bit          _BIT_ACCESS(RXB0CON,5)
// RXB0CON<RXB0M1>
extern volatile __bit                   RXB0M1              __at(0x7B06);	// @ (0xF60 * 8 + 6)
#define                                 RXB0M1_bit          _BIT_ACCESS(RXB0CON,6)
// COMSTAT<RXB0OVFL>
extern volatile __bit                   RXB0OVFL            __at(0x7BA7);	// @ (0xF74 * 8 + 7)
#define                                 RXB0OVFL_bit        _BIT_ACCESS(COMSTAT,7)
// RXB0DLC<RXB0RB0>
extern volatile __bit                   RXB0RB0             __at(0x7B2C);	// @ (0xF65 * 8 + 4)
#define                                 RXB0RB0_bit         _BIT_ACCESS(RXB0DLC,4)
// RXB0DLC<RXB0RB1>
extern volatile __bit                   RXB0RB1             __at(0x7B2D);	// @ (0xF65 * 8 + 5)
#define                                 RXB0RB1_bit         _BIT_ACCESS(RXB0DLC,5)
// RXB0DLC<RXB0RTR>
extern volatile __bit                   RXB0RTR             __at(0x7B2E);	// @ (0xF65 * 8 + 6)
#define                                 RXB0RTR_bit         _BIT_ACCESS(RXB0DLC,6)
// RXB0CON<RXB0RTRR0>
extern volatile __bit                   RXB0RTRR0           __at(0x7B03);	// @ (0xF60 * 8 + 3)
#define                                 RXB0RTRR0_bit       _BIT_ACCESS(RXB0CON,3)
// RXB0CON<RXB0RTRRO>
extern volatile __bit                   RXB0RTRRO           __at(0x7B05);	// @ (0xF60 * 8 + 5)
#define                                 RXB0RTRRO_bit       _BIT_ACCESS(RXB0CON,5)
// RXB0SIDL<RXB0SID0>
extern volatile __bit                   RXB0SID0            __at(0x7B15);	// @ (0xF62 * 8 + 5)
#define                                 RXB0SID0_bit        _BIT_ACCESS(RXB0SIDL,5)
// RXB0SIDL<RXB0SID1>
extern volatile __bit                   RXB0SID1            __at(0x7B16);	// @ (0xF62 * 8 + 6)
#define                                 RXB0SID1_bit        _BIT_ACCESS(RXB0SIDL,6)
// RXB0SIDH<RXB0SID10>
extern volatile __bit                   RXB0SID10           __at(0x7B0F);	// @ (0xF61 * 8 + 7)
#define                                 RXB0SID10_bit       _BIT_ACCESS(RXB0SIDH,7)
// RXB0SIDL<RXB0SID2>
extern volatile __bit                   RXB0SID2            __at(0x7B17);	// @ (0xF62 * 8 + 7)
#define                                 RXB0SID2_bit        _BIT_ACCESS(RXB0SIDL,7)
// RXB0SIDH<RXB0SID3>
extern volatile __bit                   RXB0SID3            __at(0x7B08);	// @ (0xF61 * 8 + 0)
#define                                 RXB0SID3_bit        _BIT_ACCESS(RXB0SIDH,0)
// RXB0SIDH<RXB0SID4>
extern volatile __bit                   RXB0SID4            __at(0x7B09);	// @ (0xF61 * 8 + 1)
#define                                 RXB0SID4_bit        _BIT_ACCESS(RXB0SIDH,1)
// RXB0SIDH<RXB0SID5>
extern volatile __bit                   RXB0SID5            __at(0x7B0A);	// @ (0xF61 * 8 + 2)
#define                                 RXB0SID5_bit        _BIT_ACCESS(RXB0SIDH,2)
// RXB0SIDH<RXB0SID6>
extern volatile __bit                   RXB0SID6            __at(0x7B0B);	// @ (0xF61 * 8 + 3)
#define                                 RXB0SID6_bit        _BIT_ACCESS(RXB0SIDH,3)
// RXB0SIDH<RXB0SID7>
extern volatile __bit                   RXB0SID7            __at(0x7B0C);	// @ (0xF61 * 8 + 4)
#define                                 RXB0SID7_bit        _BIT_ACCESS(RXB0SIDH,4)
// RXB0SIDH<RXB0SID8>
extern volatile __bit                   RXB0SID8            __at(0x7B0D);	// @ (0xF61 * 8 + 5)
#define                                 RXB0SID8_bit        _BIT_ACCESS(RXB0SIDH,5)
// RXB0SIDH<RXB0SID9>
extern volatile __bit                   RXB0SID9            __at(0x7B0E);	// @ (0xF61 * 8 + 6)
#define                                 RXB0SID9_bit        _BIT_ACCESS(RXB0SIDH,6)
// RXB0SIDL<RXB0SRR>
extern volatile __bit                   RXB0SRR             __at(0x7B14);	// @ (0xF62 * 8 + 4)
#define                                 RXB0SRR_bit         _BIT_ACCESS(RXB0SIDL,4)
// RXB1D0<RXB1D00>
extern volatile __bit                   RXB1D00             __at(0x7AB0);	// @ (0xF56 * 8 + 0)
#define                                 RXB1D00_bit         _BIT_ACCESS(RXB1D0,0)
// RXB1D0<RXB1D01>
extern volatile __bit                   RXB1D01             __at(0x7AB1);	// @ (0xF56 * 8 + 1)
#define                                 RXB1D01_bit         _BIT_ACCESS(RXB1D0,1)
// RXB1D0<RXB1D02>
extern volatile __bit                   RXB1D02             __at(0x7AB2);	// @ (0xF56 * 8 + 2)
#define                                 RXB1D02_bit         _BIT_ACCESS(RXB1D0,2)
// RXB1D0<RXB1D03>
extern volatile __bit                   RXB1D03             __at(0x7AB3);	// @ (0xF56 * 8 + 3)
#define                                 RXB1D03_bit         _BIT_ACCESS(RXB1D0,3)
// RXB1D0<RXB1D04>
extern volatile __bit                   RXB1D04             __at(0x7AB4);	// @ (0xF56 * 8 + 4)
#define                                 RXB1D04_bit         _BIT_ACCESS(RXB1D0,4)
// RXB1D0<RXB1D05>
extern volatile __bit                   RXB1D05             __at(0x7AB5);	// @ (0xF56 * 8 + 5)
#define                                 RXB1D05_bit         _BIT_ACCESS(RXB1D0,5)
// RXB1D0<RXB1D06>
extern volatile __bit                   RXB1D06             __at(0x7AB6);	// @ (0xF56 * 8 + 6)
#define                                 RXB1D06_bit         _BIT_ACCESS(RXB1D0,6)
// RXB1D0<RXB1D07>
extern volatile __bit                   RXB1D07             __at(0x7AB7);	// @ (0xF56 * 8 + 7)
#define                                 RXB1D07_bit         _BIT_ACCESS(RXB1D0,7)
// RXB1D1<RXB1D10>
extern volatile __bit                   RXB1D10             __at(0x7AB8);	// @ (0xF57 * 8 + 0)
#define                                 RXB1D10_bit         _BIT_ACCESS(RXB1D1,0)
// RXB1D1<RXB1D11>
extern volatile __bit                   RXB1D11             __at(0x7AB9);	// @ (0xF57 * 8 + 1)
#define                                 RXB1D11_bit         _BIT_ACCESS(RXB1D1,1)
// RXB1D1<RXB1D12>
extern volatile __bit                   RXB1D12             __at(0x7ABA);	// @ (0xF57 * 8 + 2)
#define                                 RXB1D12_bit         _BIT_ACCESS(RXB1D1,2)
// RXB1D1<RXB1D13>
extern volatile __bit                   RXB1D13             __at(0x7ABB);	// @ (0xF57 * 8 + 3)
#define                                 RXB1D13_bit         _BIT_ACCESS(RXB1D1,3)
// RXB1D1<RXB1D14>
extern volatile __bit                   RXB1D14             __at(0x7ABC);	// @ (0xF57 * 8 + 4)
#define                                 RXB1D14_bit         _BIT_ACCESS(RXB1D1,4)
// RXB1D1<RXB1D15>
extern volatile __bit                   RXB1D15             __at(0x7ABD);	// @ (0xF57 * 8 + 5)
#define                                 RXB1D15_bit         _BIT_ACCESS(RXB1D1,5)
// RXB1D1<RXB1D16>
extern volatile __bit                   RXB1D16             __at(0x7ABE);	// @ (0xF57 * 8 + 6)
#define                                 RXB1D16_bit         _BIT_ACCESS(RXB1D1,6)
// RXB1D1<RXB1D17>
extern volatile __bit                   RXB1D17             __at(0x7ABF);	// @ (0xF57 * 8 + 7)
#define                                 RXB1D17_bit         _BIT_ACCESS(RXB1D1,7)
// RXB1D2<RXB1D20>
extern volatile __bit                   RXB1D20             __at(0x7AC0);	// @ (0xF58 * 8 + 0)
#define                                 RXB1D20_bit         _BIT_ACCESS(RXB1D2,0)
// RXB1D2<RXB1D21>
extern volatile __bit                   RXB1D21             __at(0x7AC1);	// @ (0xF58 * 8 + 1)
#define                                 RXB1D21_bit         _BIT_ACCESS(RXB1D2,1)
// RXB1D2<RXB1D22>
extern volatile __bit                   RXB1D22             __at(0x7AC2);	// @ (0xF58 * 8 + 2)
#define                                 RXB1D22_bit         _BIT_ACCESS(RXB1D2,2)
// RXB1D2<RXB1D23>
extern volatile __bit                   RXB1D23             __at(0x7AC3);	// @ (0xF58 * 8 + 3)
#define                                 RXB1D23_bit         _BIT_ACCESS(RXB1D2,3)
// RXB1D2<RXB1D24>
extern volatile __bit                   RXB1D24             __at(0x7AC4);	// @ (0xF58 * 8 + 4)
#define                                 RXB1D24_bit         _BIT_ACCESS(RXB1D2,4)
// RXB1D2<RXB1D25>
extern volatile __bit                   RXB1D25             __at(0x7AC5);	// @ (0xF58 * 8 + 5)
#define                                 RXB1D25_bit         _BIT_ACCESS(RXB1D2,5)
// RXB1D2<RXB1D26>
extern volatile __bit                   RXB1D26             __at(0x7AC6);	// @ (0xF58 * 8 + 6)
#define                                 RXB1D26_bit         _BIT_ACCESS(RXB1D2,6)
// RXB1D2<RXB1D27>
extern volatile __bit                   RXB1D27             __at(0x7AC7);	// @ (0xF58 * 8 + 7)
#define                                 RXB1D27_bit         _BIT_ACCESS(RXB1D2,7)
// RXB1D3<RXB1D30>
extern volatile __bit                   RXB1D30             __at(0x7AC8);	// @ (0xF59 * 8 + 0)
#define                                 RXB1D30_bit         _BIT_ACCESS(RXB1D3,0)
// RXB1D3<RXB1D31>
extern volatile __bit                   RXB1D31             __at(0x7AC9);	// @ (0xF59 * 8 + 1)
#define                                 RXB1D31_bit         _BIT_ACCESS(RXB1D3,1)
// RXB1D3<RXB1D32>
extern volatile __bit                   RXB1D32             __at(0x7ACA);	// @ (0xF59 * 8 + 2)
#define                                 RXB1D32_bit         _BIT_ACCESS(RXB1D3,2)
// RXB1D3<RXB1D33>
extern volatile __bit                   RXB1D33             __at(0x7ACB);	// @ (0xF59 * 8 + 3)
#define                                 RXB1D33_bit         _BIT_ACCESS(RXB1D3,3)
// RXB1D3<RXB1D34>
extern volatile __bit                   RXB1D34             __at(0x7ACC);	// @ (0xF59 * 8 + 4)
#define                                 RXB1D34_bit         _BIT_ACCESS(RXB1D3,4)
// RXB1D3<RXB1D35>
extern volatile __bit                   RXB1D35             __at(0x7ACD);	// @ (0xF59 * 8 + 5)
#define                                 RXB1D35_bit         _BIT_ACCESS(RXB1D3,5)
// RXB1D3<RXB1D36>
extern volatile __bit                   RXB1D36             __at(0x7ACE);	// @ (0xF59 * 8 + 6)
#define                                 RXB1D36_bit         _BIT_ACCESS(RXB1D3,6)
// RXB1D3<RXB1D37>
extern volatile __bit                   RXB1D37             __at(0x7ACF);	// @ (0xF59 * 8 + 7)
#define                                 RXB1D37_bit         _BIT_ACCESS(RXB1D3,7)
// RXB1D4<RXB1D40>
extern volatile __bit                   RXB1D40             __at(0x7AD0);	// @ (0xF5A * 8 + 0)
#define                                 RXB1D40_bit         _BIT_ACCESS(RXB1D4,0)
// RXB1D4<RXB1D41>
extern volatile __bit                   RXB1D41             __at(0x7AD1);	// @ (0xF5A * 8 + 1)
#define                                 RXB1D41_bit         _BIT_ACCESS(RXB1D4,1)
// RXB1D4<RXB1D42>
extern volatile __bit                   RXB1D42             __at(0x7AD2);	// @ (0xF5A * 8 + 2)
#define                                 RXB1D42_bit         _BIT_ACCESS(RXB1D4,2)
// RXB1D4<RXB1D43>
extern volatile __bit                   RXB1D43             __at(0x7AD3);	// @ (0xF5A * 8 + 3)
#define                                 RXB1D43_bit         _BIT_ACCESS(RXB1D4,3)
// RXB1D4<RXB1D44>
extern volatile __bit                   RXB1D44             __at(0x7AD4);	// @ (0xF5A * 8 + 4)
#define                                 RXB1D44_bit         _BIT_ACCESS(RXB1D4,4)
// RXB1D4<RXB1D45>
extern volatile __bit                   RXB1D45             __at(0x7AD5);	// @ (0xF5A * 8 + 5)
#define                                 RXB1D45_bit         _BIT_ACCESS(RXB1D4,5)
// RXB1D4<RXB1D46>
extern volatile __bit                   RXB1D46             __at(0x7AD6);	// @ (0xF5A * 8 + 6)
#define                                 RXB1D46_bit         _BIT_ACCESS(RXB1D4,6)
// RXB1D4<RXB1D47>
extern volatile __bit                   RXB1D47             __at(0x7AD7);	// @ (0xF5A * 8 + 7)
#define                                 RXB1D47_bit         _BIT_ACCESS(RXB1D4,7)
// RXB1D5<RXB1D50>
extern volatile __bit                   RXB1D50             __at(0x7AD8);	// @ (0xF5B * 8 + 0)
#define                                 RXB1D50_bit         _BIT_ACCESS(RXB1D5,0)
// RXB1D5<RXB1D51>
extern volatile __bit                   RXB1D51             __at(0x7AD9);	// @ (0xF5B * 8 + 1)
#define                                 RXB1D51_bit         _BIT_ACCESS(RXB1D5,1)
// RXB1D5<RXB1D52>
extern volatile __bit                   RXB1D52             __at(0x7ADA);	// @ (0xF5B * 8 + 2)
#define                                 RXB1D52_bit         _BIT_ACCESS(RXB1D5,2)
// RXB1D5<RXB1D53>
extern volatile __bit                   RXB1D53             __at(0x7ADB);	// @ (0xF5B * 8 + 3)
#define                                 RXB1D53_bit         _BIT_ACCESS(RXB1D5,3)
// RXB1D5<RXB1D54>
extern volatile __bit                   RXB1D54             __at(0x7ADC);	// @ (0xF5B * 8 + 4)
#define                                 RXB1D54_bit         _BIT_ACCESS(RXB1D5,4)
// RXB1D5<RXB1D55>
extern volatile __bit                   RXB1D55             __at(0x7ADD);	// @ (0xF5B * 8 + 5)
#define                                 RXB1D55_bit         _BIT_ACCESS(RXB1D5,5)
// RXB1D5<RXB1D56>
extern volatile __bit                   RXB1D56             __at(0x7ADE);	// @ (0xF5B * 8 + 6)
#define                                 RXB1D56_bit         _BIT_ACCESS(RXB1D5,6)
// RXB1D5<RXB1D57>
extern volatile __bit                   RXB1D57             __at(0x7ADF);	// @ (0xF5B * 8 + 7)
#define                                 RXB1D57_bit         _BIT_ACCESS(RXB1D5,7)
// RXB1D6<RXB1D60>
extern volatile __bit                   RXB1D60             __at(0x7AE0);	// @ (0xF5C * 8 + 0)
#define                                 RXB1D60_bit         _BIT_ACCESS(RXB1D6,0)
// RXB1D6<RXB1D61>
extern volatile __bit                   RXB1D61             __at(0x7AE1);	// @ (0xF5C * 8 + 1)
#define                                 RXB1D61_bit         _BIT_ACCESS(RXB1D6,1)
// RXB1D6<RXB1D62>
extern volatile __bit                   RXB1D62             __at(0x7AE2);	// @ (0xF5C * 8 + 2)
#define                                 RXB1D62_bit         _BIT_ACCESS(RXB1D6,2)
// RXB1D6<RXB1D63>
extern volatile __bit                   RXB1D63             __at(0x7AE3);	// @ (0xF5C * 8 + 3)
#define                                 RXB1D63_bit         _BIT_ACCESS(RXB1D6,3)
// RXB1D6<RXB1D64>
extern volatile __bit                   RXB1D64             __at(0x7AE4);	// @ (0xF5C * 8 + 4)
#define                                 RXB1D64_bit         _BIT_ACCESS(RXB1D6,4)
// RXB1D6<RXB1D65>
extern volatile __bit                   RXB1D65             __at(0x7AE5);	// @ (0xF5C * 8 + 5)
#define                                 RXB1D65_bit         _BIT_ACCESS(RXB1D6,5)
// RXB1D6<RXB1D66>
extern volatile __bit                   RXB1D66             __at(0x7AE6);	// @ (0xF5C * 8 + 6)
#define                                 RXB1D66_bit         _BIT_ACCESS(RXB1D6,6)
// RXB1D6<RXB1D67>
extern volatile __bit                   RXB1D67             __at(0x7AE7);	// @ (0xF5C * 8 + 7)
#define                                 RXB1D67_bit         _BIT_ACCESS(RXB1D6,7)
// RXB1D7<RXB1D70>
extern volatile __bit                   RXB1D70             __at(0x7AE8);	// @ (0xF5D * 8 + 0)
#define                                 RXB1D70_bit         _BIT_ACCESS(RXB1D7,0)
// RXB1D7<RXB1D71>
extern volatile __bit                   RXB1D71             __at(0x7AE9);	// @ (0xF5D * 8 + 1)
#define                                 RXB1D71_bit         _BIT_ACCESS(RXB1D7,1)
// RXB1D7<RXB1D72>
extern volatile __bit                   RXB1D72             __at(0x7AEA);	// @ (0xF5D * 8 + 2)
#define                                 RXB1D72_bit         _BIT_ACCESS(RXB1D7,2)
// RXB1D7<RXB1D73>
extern volatile __bit                   RXB1D73             __at(0x7AEB);	// @ (0xF5D * 8 + 3)
#define                                 RXB1D73_bit         _BIT_ACCESS(RXB1D7,3)
// RXB1D7<RXB1D74>
extern volatile __bit                   RXB1D74             __at(0x7AEC);	// @ (0xF5D * 8 + 4)
#define                                 RXB1D74_bit         _BIT_ACCESS(RXB1D7,4)
// RXB1D7<RXB1D75>
extern volatile __bit                   RXB1D75             __at(0x7AED);	// @ (0xF5D * 8 + 5)
#define                                 RXB1D75_bit         _BIT_ACCESS(RXB1D7,5)
// RXB1D7<RXB1D76>
extern volatile __bit                   RXB1D76             __at(0x7AEE);	// @ (0xF5D * 8 + 6)
#define                                 RXB1D76_bit         _BIT_ACCESS(RXB1D7,6)
// RXB1D7<RXB1D77>
extern volatile __bit                   RXB1D77             __at(0x7AEF);	// @ (0xF5D * 8 + 7)
#define                                 RXB1D77_bit         _BIT_ACCESS(RXB1D7,7)
// RXB1DLC<RXB1DLC0>
extern volatile __bit                   RXB1DLC0            __at(0x7AA8);	// @ (0xF55 * 8 + 0)
#define                                 RXB1DLC0_bit        _BIT_ACCESS(RXB1DLC,0)
// RXB1DLC<RXB1DLC1>
extern volatile __bit                   RXB1DLC1            __at(0x7AA9);	// @ (0xF55 * 8 + 1)
#define                                 RXB1DLC1_bit        _BIT_ACCESS(RXB1DLC,1)
// RXB1DLC<RXB1DLC2>
extern volatile __bit                   RXB1DLC2            __at(0x7AAA);	// @ (0xF55 * 8 + 2)
#define                                 RXB1DLC2_bit        _BIT_ACCESS(RXB1DLC,2)
// RXB1DLC<RXB1DLC3>
extern volatile __bit                   RXB1DLC3            __at(0x7AAB);	// @ (0xF55 * 8 + 3)
#define                                 RXB1DLC3_bit        _BIT_ACCESS(RXB1DLC,3)
// RXB1EIDL<RXB1EID0>
extern volatile __bit                   RXB1EID0            __at(0x7AA0);	// @ (0xF54 * 8 + 0)
#define                                 RXB1EID0_bit        _BIT_ACCESS(RXB1EIDL,0)
// RXB1EIDL<RXB1EID1>
extern volatile __bit                   RXB1EID1            __at(0x7AA1);	// @ (0xF54 * 8 + 1)
#define                                 RXB1EID1_bit        _BIT_ACCESS(RXB1EIDL,1)
// RXB1EIDH<RXB1EID10>
extern volatile __bit                   RXB1EID10           __at(0x7A9A);	// @ (0xF53 * 8 + 2)
#define                                 RXB1EID10_bit       _BIT_ACCESS(RXB1EIDH,2)
// RXB1EIDH<RXB1EID11>
extern volatile __bit                   RXB1EID11           __at(0x7A9B);	// @ (0xF53 * 8 + 3)
#define                                 RXB1EID11_bit       _BIT_ACCESS(RXB1EIDH,3)
// RXB1EIDH<RXB1EID12>
extern volatile __bit                   RXB1EID12           __at(0x7A9C);	// @ (0xF53 * 8 + 4)
#define                                 RXB1EID12_bit       _BIT_ACCESS(RXB1EIDH,4)
// RXB1EIDH<RXB1EID13>
extern volatile __bit                   RXB1EID13           __at(0x7A9D);	// @ (0xF53 * 8 + 5)
#define                                 RXB1EID13_bit       _BIT_ACCESS(RXB1EIDH,5)
// RXB1EIDH<RXB1EID14>
extern volatile __bit                   RXB1EID14           __at(0x7A9E);	// @ (0xF53 * 8 + 6)
#define                                 RXB1EID14_bit       _BIT_ACCESS(RXB1EIDH,6)
// RXB1EIDH<RXB1EID15>
extern volatile __bit                   RXB1EID15           __at(0x7A9F);	// @ (0xF53 * 8 + 7)
#define                                 RXB1EID15_bit       _BIT_ACCESS(RXB1EIDH,7)
// RXB1SIDL<RXB1EID16>
extern volatile __bit                   RXB1EID16           __at(0x7A90);	// @ (0xF52 * 8 + 0)
#define                                 RXB1EID16_bit       _BIT_ACCESS(RXB1SIDL,0)
// RXB1SIDL<RXB1EID17>
extern volatile __bit                   RXB1EID17           __at(0x7A91);	// @ (0xF52 * 8 + 1)
#define                                 RXB1EID17_bit       _BIT_ACCESS(RXB1SIDL,1)
// RXB1EIDL<RXB1EID2>
extern volatile __bit                   RXB1EID2            __at(0x7AA2);	// @ (0xF54 * 8 + 2)
#define                                 RXB1EID2_bit        _BIT_ACCESS(RXB1EIDL,2)
// RXB1EIDL<RXB1EID3>
extern volatile __bit                   RXB1EID3            __at(0x7AA3);	// @ (0xF54 * 8 + 3)
#define                                 RXB1EID3_bit        _BIT_ACCESS(RXB1EIDL,3)
// RXB1EIDL<RXB1EID4>
extern volatile __bit                   RXB1EID4            __at(0x7AA4);	// @ (0xF54 * 8 + 4)
#define                                 RXB1EID4_bit        _BIT_ACCESS(RXB1EIDL,4)
// RXB1EIDL<RXB1EID5>
extern volatile __bit                   RXB1EID5            __at(0x7AA5);	// @ (0xF54 * 8 + 5)
#define                                 RXB1EID5_bit        _BIT_ACCESS(RXB1EIDL,5)
// RXB1EIDL<RXB1EID6>
extern volatile __bit                   RXB1EID6            __at(0x7AA6);	// @ (0xF54 * 8 + 6)
#define                                 RXB1EID6_bit        _BIT_ACCESS(RXB1EIDL,6)
// RXB1EIDL<RXB1EID7>
extern volatile __bit                   RXB1EID7            __at(0x7AA7);	// @ (0xF54 * 8 + 7)
#define                                 RXB1EID7_bit        _BIT_ACCESS(RXB1EIDL,7)
// RXB1EIDH<RXB1EID8>
extern volatile __bit                   RXB1EID8            __at(0x7A98);	// @ (0xF53 * 8 + 0)
#define                                 RXB1EID8_bit        _BIT_ACCESS(RXB1EIDH,0)
// RXB1EIDH<RXB1EID9>
extern volatile __bit                   RXB1EID9            __at(0x7A99);	// @ (0xF53 * 8 + 1)
#define                                 RXB1EID9_bit        _BIT_ACCESS(RXB1EIDH,1)
// RXB1SIDL<RXB1EXID>
extern volatile __bit                   RXB1EXID            __at(0x7A93);	// @ (0xF52 * 8 + 3)
#define                                 RXB1EXID_bit        _BIT_ACCESS(RXB1SIDL,3)
// RXB1CON<RXB1FILHIT0>
extern volatile __bit                   RXB1FILHIT0         __at(0x7A80);	// @ (0xF50 * 8 + 0)
#define                                 RXB1FILHIT0_bit     _BIT_ACCESS(RXB1CON,0)
// RXB1CON<RXB1FILHIT1>
extern volatile __bit                   RXB1FILHIT1         __at(0x7A81);	// @ (0xF50 * 8 + 1)
#define                                 RXB1FILHIT1_bit     _BIT_ACCESS(RXB1CON,1)
// RXB1CON<RXB1FILHIT2>
extern volatile __bit                   RXB1FILHIT2         __at(0x7A82);	// @ (0xF50 * 8 + 2)
#define                                 RXB1FILHIT2_bit     _BIT_ACCESS(RXB1CON,2)
// RXB1CON<RXB1FILHIT3>
extern volatile __bit                   RXB1FILHIT3         __at(0x7A83);	// @ (0xF50 * 8 + 3)
#define                                 RXB1FILHIT3_bit     _BIT_ACCESS(RXB1CON,3)
// RXB1CON<RXB1FUL>
extern volatile __bit                   RXB1FUL             __at(0x7A87);	// @ (0xF50 * 8 + 7)
#define                                 RXB1FUL_bit         _BIT_ACCESS(RXB1CON,7)
// PIE3<RXB1IE>
extern volatile __bit                   RXB1IE              __at(0x7D19);	// @ (0xFA3 * 8 + 1)
#define                                 RXB1IE_bit          _BIT_ACCESS(PIE3,1)
// PIR3<RXB1IF>
extern volatile __bit                   RXB1IF              __at(0x7D21);	// @ (0xFA4 * 8 + 1)
#define                                 RXB1IF_bit          _BIT_ACCESS(PIR3,1)
// IPR3<RXB1IP>
extern volatile __bit                   RXB1IP              __at(0x7D29);	// @ (0xFA5 * 8 + 1)
#define                                 RXB1IP_bit          _BIT_ACCESS(IPR3,1)
// RXB1CON<RXB1M0>
extern volatile __bit                   RXB1M0              __at(0x7A85);	// @ (0xF50 * 8 + 5)
#define                                 RXB1M0_bit          _BIT_ACCESS(RXB1CON,5)
// RXB1CON<RXB1M1>
extern volatile __bit                   RXB1M1              __at(0x7A86);	// @ (0xF50 * 8 + 6)
#define                                 RXB1M1_bit          _BIT_ACCESS(RXB1CON,6)
// COMSTAT<RXB1OVFL>
extern volatile __bit                   RXB1OVFL            __at(0x7BA6);	// @ (0xF74 * 8 + 6)
#define                                 RXB1OVFL_bit        _BIT_ACCESS(COMSTAT,6)
// RXB1DLC<RXB1RB0>
extern volatile __bit                   RXB1RB0             __at(0x7AAC);	// @ (0xF55 * 8 + 4)
#define                                 RXB1RB0_bit         _BIT_ACCESS(RXB1DLC,4)
// RXB1DLC<RXB1RB1>
extern volatile __bit                   RXB1RB1             __at(0x7AAD);	// @ (0xF55 * 8 + 5)
#define                                 RXB1RB1_bit         _BIT_ACCESS(RXB1DLC,5)
// RXB1DLC<RXB1RTR>
extern volatile __bit                   RXB1RTR             __at(0x7AAE);	// @ (0xF55 * 8 + 6)
#define                                 RXB1RTR_bit         _BIT_ACCESS(RXB1DLC,6)
// RXB1CON<RXB1RTRR0>
extern volatile __bit                   RXB1RTRR0           __at(0x7A83);	// @ (0xF50 * 8 + 3)
#define                                 RXB1RTRR0_bit       _BIT_ACCESS(RXB1CON,3)
// RXB1CON<RXB1RTRRO>
extern volatile __bit                   RXB1RTRRO           __at(0x7A85);	// @ (0xF50 * 8 + 5)
#define                                 RXB1RTRRO_bit       _BIT_ACCESS(RXB1CON,5)
// RXB1SIDL<RXB1SID0>
extern volatile __bit                   RXB1SID0            __at(0x7A95);	// @ (0xF52 * 8 + 5)
#define                                 RXB1SID0_bit        _BIT_ACCESS(RXB1SIDL,5)
// RXB1SIDL<RXB1SID1>
extern volatile __bit                   RXB1SID1            __at(0x7A96);	// @ (0xF52 * 8 + 6)
#define                                 RXB1SID1_bit        _BIT_ACCESS(RXB1SIDL,6)
// RXB1SIDH<RXB1SID10>
extern volatile __bit                   RXB1SID10           __at(0x7A8F);	// @ (0xF51 * 8 + 7)
#define                                 RXB1SID10_bit       _BIT_ACCESS(RXB1SIDH,7)
// RXB1SIDL<RXB1SID2>
extern volatile __bit                   RXB1SID2            __at(0x7A97);	// @ (0xF52 * 8 + 7)
#define                                 RXB1SID2_bit        _BIT_ACCESS(RXB1SIDL,7)
// RXB1SIDH<RXB1SID3>
extern volatile __bit                   RXB1SID3            __at(0x7A88);	// @ (0xF51 * 8 + 0)
#define                                 RXB1SID3_bit        _BIT_ACCESS(RXB1SIDH,0)
// RXB1SIDH<RXB1SID4>
extern volatile __bit                   RXB1SID4            __at(0x7A89);	// @ (0xF51 * 8 + 1)
#define                                 RXB1SID4_bit        _BIT_ACCESS(RXB1SIDH,1)
// RXB1SIDH<RXB1SID5>
extern volatile __bit                   RXB1SID5            __at(0x7A8A);	// @ (0xF51 * 8 + 2)
#define                                 RXB1SID5_bit        _BIT_ACCESS(RXB1SIDH,2)
// RXB1SIDH<RXB1SID6>
extern volatile __bit                   RXB1SID6            __at(0x7A8B);	// @ (0xF51 * 8 + 3)
#define                                 RXB1SID6_bit        _BIT_ACCESS(RXB1SIDH,3)
// RXB1SIDH<RXB1SID7>
extern volatile __bit                   RXB1SID7            __at(0x7A8C);	// @ (0xF51 * 8 + 4)
#define                                 RXB1SID7_bit        _BIT_ACCESS(RXB1SIDH,4)
// RXB1SIDH<RXB1SID8>
extern volatile __bit                   RXB1SID8            __at(0x7A8D);	// @ (0xF51 * 8 + 5)
#define                                 RXB1SID8_bit        _BIT_ACCESS(RXB1SIDH,5)
// RXB1SIDH<RXB1SID9>
extern volatile __bit                   RXB1SID9            __at(0x7A8E);	// @ (0xF51 * 8 + 6)
#define                                 RXB1SID9_bit        _BIT_ACCESS(RXB1SIDH,6)
// RXB1SIDL<RXB1SRR>
extern volatile __bit                   RXB1SRR             __at(0x7A94);	// @ (0xF52 * 8 + 4)
#define                                 RXB1SRR_bit         _BIT_ACCESS(RXB1SIDL,4)
// PIE3<RXBNIE>
extern volatile __bit                   RXBNIE              __at(0x7D19);	// @ (0xFA3 * 8 + 1)
#define                                 RXBNIE_bit          _BIT_ACCESS(PIE3,1)
// PIR3<RXBNIF>
extern volatile __bit                   RXBNIF              __at(0x7D21);	// @ (0xFA4 * 8 + 1)
#define                                 RXBNIF_bit          _BIT_ACCESS(PIR3,1)
// IPR3<RXBNIP>
extern volatile __bit                   RXBNIP              __at(0x7D29);	// @ (0xFA5 * 8 + 1)
#define                                 RXBNIP_bit          _BIT_ACCESS(IPR3,1)
// COMSTAT<RXBNOVFL>
extern volatile __bit                   RXBNOVFL            __at(0x7BA6);	// @ (0xF74 * 8 + 6)
#define                                 RXBNOVFL_bit        _BIT_ACCESS(COMSTAT,6)
// COMSTAT<RXBP>
extern volatile __bit                   RXBP                __at(0x7BA3);	// @ (0xF74 * 8 + 3)
#define                                 RXBP_bit            _BIT_ACCESS(COMSTAT,3)
// RXF0EIDL<RXF0EID0>
extern volatile __bit                   RXF0EID0            __at(0x7818);	// @ (0xF03 * 8 + 0)
#define                                 RXF0EID0_bit        _BIT_ACCESS(RXF0EIDL,0)
// RXF0EIDL<RXF0EID1>
extern volatile __bit                   RXF0EID1            __at(0x7819);	// @ (0xF03 * 8 + 1)
#define                                 RXF0EID1_bit        _BIT_ACCESS(RXF0EIDL,1)
// RXF0EIDH<RXF0EID10>
extern volatile __bit                   RXF0EID10           __at(0x7812);	// @ (0xF02 * 8 + 2)
#define                                 RXF0EID10_bit       _BIT_ACCESS(RXF0EIDH,2)
// RXF0EIDH<RXF0EID11>
extern volatile __bit                   RXF0EID11           __at(0x7813);	// @ (0xF02 * 8 + 3)
#define                                 RXF0EID11_bit       _BIT_ACCESS(RXF0EIDH,3)
// RXF0EIDH<RXF0EID12>
extern volatile __bit                   RXF0EID12           __at(0x7814);	// @ (0xF02 * 8 + 4)
#define                                 RXF0EID12_bit       _BIT_ACCESS(RXF0EIDH,4)
// RXF0EIDH<RXF0EID13>
extern volatile __bit                   RXF0EID13           __at(0x7815);	// @ (0xF02 * 8 + 5)
#define                                 RXF0EID13_bit       _BIT_ACCESS(RXF0EIDH,5)
// RXF0EIDH<RXF0EID14>
extern volatile __bit                   RXF0EID14           __at(0x7816);	// @ (0xF02 * 8 + 6)
#define                                 RXF0EID14_bit       _BIT_ACCESS(RXF0EIDH,6)
// RXF0EIDH<RXF0EID15>
extern volatile __bit                   RXF0EID15           __at(0x7817);	// @ (0xF02 * 8 + 7)
#define                                 RXF0EID15_bit       _BIT_ACCESS(RXF0EIDH,7)
// RXF0SIDL<RXF0EID16>
extern volatile __bit                   RXF0EID16           __at(0x7808);	// @ (0xF01 * 8 + 0)
#define                                 RXF0EID16_bit       _BIT_ACCESS(RXF0SIDL,0)
// RXF0SIDL<RXF0EID17>
extern volatile __bit                   RXF0EID17           __at(0x7809);	// @ (0xF01 * 8 + 1)
#define                                 RXF0EID17_bit       _BIT_ACCESS(RXF0SIDL,1)
// RXF0EIDL<RXF0EID2>
extern volatile __bit                   RXF0EID2            __at(0x781A);	// @ (0xF03 * 8 + 2)
#define                                 RXF0EID2_bit        _BIT_ACCESS(RXF0EIDL,2)
// RXF0EIDL<RXF0EID3>
extern volatile __bit                   RXF0EID3            __at(0x781B);	// @ (0xF03 * 8 + 3)
#define                                 RXF0EID3_bit        _BIT_ACCESS(RXF0EIDL,3)
// RXF0EIDL<RXF0EID4>
extern volatile __bit                   RXF0EID4            __at(0x781C);	// @ (0xF03 * 8 + 4)
#define                                 RXF0EID4_bit        _BIT_ACCESS(RXF0EIDL,4)
// RXF0EIDL<RXF0EID5>
extern volatile __bit                   RXF0EID5            __at(0x781D);	// @ (0xF03 * 8 + 5)
#define                                 RXF0EID5_bit        _BIT_ACCESS(RXF0EIDL,5)
// RXF0EIDL<RXF0EID6>
extern volatile __bit                   RXF0EID6            __at(0x781E);	// @ (0xF03 * 8 + 6)
#define                                 RXF0EID6_bit        _BIT_ACCESS(RXF0EIDL,6)
// RXF0EIDL<RXF0EID7>
extern volatile __bit                   RXF0EID7            __at(0x781F);	// @ (0xF03 * 8 + 7)
#define                                 RXF0EID7_bit        _BIT_ACCESS(RXF0EIDL,7)
// RXF0EIDH<RXF0EID8>
extern volatile __bit                   RXF0EID8            __at(0x7810);	// @ (0xF02 * 8 + 0)
#define                                 RXF0EID8_bit        _BIT_ACCESS(RXF0EIDH,0)
// RXF0EIDH<RXF0EID9>
extern volatile __bit                   RXF0EID9            __at(0x7811);	// @ (0xF02 * 8 + 1)
#define                                 RXF0EID9_bit        _BIT_ACCESS(RXF0EIDH,1)
// RXF0SIDL<RXF0EXIDEN>
extern volatile __bit                   RXF0EXIDEN          __at(0x780B);	// @ (0xF01 * 8 + 3)
#define                                 RXF0EXIDEN_bit      _BIT_ACCESS(RXF0SIDL,3)
// RXF0SIDL<RXF0SID0>
extern volatile __bit                   RXF0SID0            __at(0x780D);	// @ (0xF01 * 8 + 5)
#define                                 RXF0SID0_bit        _BIT_ACCESS(RXF0SIDL,5)
// RXF0SIDL<RXF0SID1>
extern volatile __bit                   RXF0SID1            __at(0x780E);	// @ (0xF01 * 8 + 6)
#define                                 RXF0SID1_bit        _BIT_ACCESS(RXF0SIDL,6)
// RXF0SIDH<RXF0SID10>
extern volatile __bit                   RXF0SID10           __at(0x7807);	// @ (0xF00 * 8 + 7)
#define                                 RXF0SID10_bit       _BIT_ACCESS(RXF0SIDH,7)
// RXF0SIDL<RXF0SID2>
extern volatile __bit                   RXF0SID2            __at(0x780F);	// @ (0xF01 * 8 + 7)
#define                                 RXF0SID2_bit        _BIT_ACCESS(RXF0SIDL,7)
// RXF0SIDH<RXF0SID3>
extern volatile __bit                   RXF0SID3            __at(0x7800);	// @ (0xF00 * 8 + 0)
#define                                 RXF0SID3_bit        _BIT_ACCESS(RXF0SIDH,0)
// RXF0SIDH<RXF0SID4>
extern volatile __bit                   RXF0SID4            __at(0x7801);	// @ (0xF00 * 8 + 1)
#define                                 RXF0SID4_bit        _BIT_ACCESS(RXF0SIDH,1)
// RXF0SIDH<RXF0SID5>
extern volatile __bit                   RXF0SID5            __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 RXF0SID5_bit        _BIT_ACCESS(RXF0SIDH,2)
// RXF0SIDH<RXF0SID6>
extern volatile __bit                   RXF0SID6            __at(0x7803);	// @ (0xF00 * 8 + 3)
#define                                 RXF0SID6_bit        _BIT_ACCESS(RXF0SIDH,3)
// RXF0SIDH<RXF0SID7>
extern volatile __bit                   RXF0SID7            __at(0x7804);	// @ (0xF00 * 8 + 4)
#define                                 RXF0SID7_bit        _BIT_ACCESS(RXF0SIDH,4)
// RXF0SIDH<RXF0SID8>
extern volatile __bit                   RXF0SID8            __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 RXF0SID8_bit        _BIT_ACCESS(RXF0SIDH,5)
// RXF0SIDH<RXF0SID9>
extern volatile __bit                   RXF0SID9            __at(0x7806);	// @ (0xF00 * 8 + 6)
#define                                 RXF0SID9_bit        _BIT_ACCESS(RXF0SIDH,6)
// RXF1EIDL<RXF1EID0>
extern volatile __bit                   RXF1EID0            __at(0x7838);	// @ (0xF07 * 8 + 0)
#define                                 RXF1EID0_bit        _BIT_ACCESS(RXF1EIDL,0)
// RXF1EIDL<RXF1EID1>
extern volatile __bit                   RXF1EID1            __at(0x7839);	// @ (0xF07 * 8 + 1)
#define                                 RXF1EID1_bit        _BIT_ACCESS(RXF1EIDL,1)
// RXF1EIDH<RXF1EID10>
extern volatile __bit                   RXF1EID10           __at(0x7832);	// @ (0xF06 * 8 + 2)
#define                                 RXF1EID10_bit       _BIT_ACCESS(RXF1EIDH,2)
// RXF1EIDH<RXF1EID11>
extern volatile __bit                   RXF1EID11           __at(0x7833);	// @ (0xF06 * 8 + 3)
#define                                 RXF1EID11_bit       _BIT_ACCESS(RXF1EIDH,3)
// RXF1EIDH<RXF1EID12>
extern volatile __bit                   RXF1EID12           __at(0x7834);	// @ (0xF06 * 8 + 4)
#define                                 RXF1EID12_bit       _BIT_ACCESS(RXF1EIDH,4)
// RXF1EIDH<RXF1EID13>
extern volatile __bit                   RXF1EID13           __at(0x7835);	// @ (0xF06 * 8 + 5)
#define                                 RXF1EID13_bit       _BIT_ACCESS(RXF1EIDH,5)
// RXF1EIDH<RXF1EID14>
extern volatile __bit                   RXF1EID14           __at(0x7836);	// @ (0xF06 * 8 + 6)
#define                                 RXF1EID14_bit       _BIT_ACCESS(RXF1EIDH,6)
// RXF1EIDH<RXF1EID15>
extern volatile __bit                   RXF1EID15           __at(0x7837);	// @ (0xF06 * 8 + 7)
#define                                 RXF1EID15_bit       _BIT_ACCESS(RXF1EIDH,7)
// RXF1SIDL<RXF1EID16>
extern volatile __bit                   RXF1EID16           __at(0x7828);	// @ (0xF05 * 8 + 0)
#define                                 RXF1EID16_bit       _BIT_ACCESS(RXF1SIDL,0)
// RXF1SIDL<RXF1EID17>
extern volatile __bit                   RXF1EID17           __at(0x7829);	// @ (0xF05 * 8 + 1)
#define                                 RXF1EID17_bit       _BIT_ACCESS(RXF1SIDL,1)
// RXF1EIDL<RXF1EID2>
extern volatile __bit                   RXF1EID2            __at(0x783A);	// @ (0xF07 * 8 + 2)
#define                                 RXF1EID2_bit        _BIT_ACCESS(RXF1EIDL,2)
// RXF1EIDL<RXF1EID3>
extern volatile __bit                   RXF1EID3            __at(0x783B);	// @ (0xF07 * 8 + 3)
#define                                 RXF1EID3_bit        _BIT_ACCESS(RXF1EIDL,3)
// RXF1EIDL<RXF1EID4>
extern volatile __bit                   RXF1EID4            __at(0x783C);	// @ (0xF07 * 8 + 4)
#define                                 RXF1EID4_bit        _BIT_ACCESS(RXF1EIDL,4)
// RXF1EIDL<RXF1EID5>
extern volatile __bit                   RXF1EID5            __at(0x783D);	// @ (0xF07 * 8 + 5)
#define                                 RXF1EID5_bit        _BIT_ACCESS(RXF1EIDL,5)
// RXF1EIDL<RXF1EID6>
extern volatile __bit                   RXF1EID6            __at(0x783E);	// @ (0xF07 * 8 + 6)
#define                                 RXF1EID6_bit        _BIT_ACCESS(RXF1EIDL,6)
// RXF1EIDL<RXF1EID7>
extern volatile __bit                   RXF1EID7            __at(0x783F);	// @ (0xF07 * 8 + 7)
#define                                 RXF1EID7_bit        _BIT_ACCESS(RXF1EIDL,7)
// RXF1EIDH<RXF1EID8>
extern volatile __bit                   RXF1EID8            __at(0x7830);	// @ (0xF06 * 8 + 0)
#define                                 RXF1EID8_bit        _BIT_ACCESS(RXF1EIDH,0)
// RXF1EIDH<RXF1EID9>
extern volatile __bit                   RXF1EID9            __at(0x7831);	// @ (0xF06 * 8 + 1)
#define                                 RXF1EID9_bit        _BIT_ACCESS(RXF1EIDH,1)
// RXF1SIDL<RXF1EXIDEN>
extern volatile __bit                   RXF1EXIDEN          __at(0x782B);	// @ (0xF05 * 8 + 3)
#define                                 RXF1EXIDEN_bit      _BIT_ACCESS(RXF1SIDL,3)
// RXF1SIDL<RXF1SID0>
extern volatile __bit                   RXF1SID0            __at(0x782D);	// @ (0xF05 * 8 + 5)
#define                                 RXF1SID0_bit        _BIT_ACCESS(RXF1SIDL,5)
// RXF1SIDL<RXF1SID1>
extern volatile __bit                   RXF1SID1            __at(0x782E);	// @ (0xF05 * 8 + 6)
#define                                 RXF1SID1_bit        _BIT_ACCESS(RXF1SIDL,6)
// RXF1SIDH<RXF1SID10>
extern volatile __bit                   RXF1SID10           __at(0x7827);	// @ (0xF04 * 8 + 7)
#define                                 RXF1SID10_bit       _BIT_ACCESS(RXF1SIDH,7)
// RXF1SIDL<RXF1SID2>
extern volatile __bit                   RXF1SID2            __at(0x782F);	// @ (0xF05 * 8 + 7)
#define                                 RXF1SID2_bit        _BIT_ACCESS(RXF1SIDL,7)
// RXF1SIDH<RXF1SID3>
extern volatile __bit                   RXF1SID3            __at(0x7820);	// @ (0xF04 * 8 + 0)
#define                                 RXF1SID3_bit        _BIT_ACCESS(RXF1SIDH,0)
// RXF1SIDH<RXF1SID4>
extern volatile __bit                   RXF1SID4            __at(0x7821);	// @ (0xF04 * 8 + 1)
#define                                 RXF1SID4_bit        _BIT_ACCESS(RXF1SIDH,1)
// RXF1SIDH<RXF1SID5>
extern volatile __bit                   RXF1SID5            __at(0x7822);	// @ (0xF04 * 8 + 2)
#define                                 RXF1SID5_bit        _BIT_ACCESS(RXF1SIDH,2)
// RXF1SIDH<RXF1SID6>
extern volatile __bit                   RXF1SID6            __at(0x7823);	// @ (0xF04 * 8 + 3)
#define                                 RXF1SID6_bit        _BIT_ACCESS(RXF1SIDH,3)
// RXF1SIDH<RXF1SID7>
extern volatile __bit                   RXF1SID7            __at(0x7824);	// @ (0xF04 * 8 + 4)
#define                                 RXF1SID7_bit        _BIT_ACCESS(RXF1SIDH,4)
// RXF1SIDH<RXF1SID8>
extern volatile __bit                   RXF1SID8            __at(0x7825);	// @ (0xF04 * 8 + 5)
#define                                 RXF1SID8_bit        _BIT_ACCESS(RXF1SIDH,5)
// RXF1SIDH<RXF1SID9>
extern volatile __bit                   RXF1SID9            __at(0x7826);	// @ (0xF04 * 8 + 6)
#define                                 RXF1SID9_bit        _BIT_ACCESS(RXF1SIDH,6)
// RXF2EIDL<RXF2EID0>
extern volatile __bit                   RXF2EID0            __at(0x7858);	// @ (0xF0B * 8 + 0)
#define                                 RXF2EID0_bit        _BIT_ACCESS(RXF2EIDL,0)
// RXF2EIDL<RXF2EID1>
extern volatile __bit                   RXF2EID1            __at(0x7859);	// @ (0xF0B * 8 + 1)
#define                                 RXF2EID1_bit        _BIT_ACCESS(RXF2EIDL,1)
// RXF2EIDH<RXF2EID10>
extern volatile __bit                   RXF2EID10           __at(0x7852);	// @ (0xF0A * 8 + 2)
#define                                 RXF2EID10_bit       _BIT_ACCESS(RXF2EIDH,2)
// RXF2EIDH<RXF2EID11>
extern volatile __bit                   RXF2EID11           __at(0x7853);	// @ (0xF0A * 8 + 3)
#define                                 RXF2EID11_bit       _BIT_ACCESS(RXF2EIDH,3)
// RXF2EIDH<RXF2EID12>
extern volatile __bit                   RXF2EID12           __at(0x7854);	// @ (0xF0A * 8 + 4)
#define                                 RXF2EID12_bit       _BIT_ACCESS(RXF2EIDH,4)
// RXF2EIDH<RXF2EID13>
extern volatile __bit                   RXF2EID13           __at(0x7855);	// @ (0xF0A * 8 + 5)
#define                                 RXF2EID13_bit       _BIT_ACCESS(RXF2EIDH,5)
// RXF2EIDH<RXF2EID14>
extern volatile __bit                   RXF2EID14           __at(0x7856);	// @ (0xF0A * 8 + 6)
#define                                 RXF2EID14_bit       _BIT_ACCESS(RXF2EIDH,6)
// RXF2EIDH<RXF2EID15>
extern volatile __bit                   RXF2EID15           __at(0x7857);	// @ (0xF0A * 8 + 7)
#define                                 RXF2EID15_bit       _BIT_ACCESS(RXF2EIDH,7)
// RXF2SIDL<RXF2EID16>
extern volatile __bit                   RXF2EID16           __at(0x7848);	// @ (0xF09 * 8 + 0)
#define                                 RXF2EID16_bit       _BIT_ACCESS(RXF2SIDL,0)
// RXF2SIDL<RXF2EID17>
extern volatile __bit                   RXF2EID17           __at(0x7849);	// @ (0xF09 * 8 + 1)
#define                                 RXF2EID17_bit       _BIT_ACCESS(RXF2SIDL,1)
// RXF2EIDL<RXF2EID2>
extern volatile __bit                   RXF2EID2            __at(0x785A);	// @ (0xF0B * 8 + 2)
#define                                 RXF2EID2_bit        _BIT_ACCESS(RXF2EIDL,2)
// RXF2EIDL<RXF2EID3>
extern volatile __bit                   RXF2EID3            __at(0x785B);	// @ (0xF0B * 8 + 3)
#define                                 RXF2EID3_bit        _BIT_ACCESS(RXF2EIDL,3)
// RXF2EIDL<RXF2EID4>
extern volatile __bit                   RXF2EID4            __at(0x785C);	// @ (0xF0B * 8 + 4)
#define                                 RXF2EID4_bit        _BIT_ACCESS(RXF2EIDL,4)
// RXF2EIDL<RXF2EID5>
extern volatile __bit                   RXF2EID5            __at(0x785D);	// @ (0xF0B * 8 + 5)
#define                                 RXF2EID5_bit        _BIT_ACCESS(RXF2EIDL,5)
// RXF2EIDL<RXF2EID6>
extern volatile __bit                   RXF2EID6            __at(0x785E);	// @ (0xF0B * 8 + 6)
#define                                 RXF2EID6_bit        _BIT_ACCESS(RXF2EIDL,6)
// RXF2EIDL<RXF2EID7>
extern volatile __bit                   RXF2EID7            __at(0x785F);	// @ (0xF0B * 8 + 7)
#define                                 RXF2EID7_bit        _BIT_ACCESS(RXF2EIDL,7)
// RXF2EIDH<RXF2EID8>
extern volatile __bit                   RXF2EID8            __at(0x7850);	// @ (0xF0A * 8 + 0)
#define                                 RXF2EID8_bit        _BIT_ACCESS(RXF2EIDH,0)
// RXF2EIDH<RXF2EID9>
extern volatile __bit                   RXF2EID9            __at(0x7851);	// @ (0xF0A * 8 + 1)
#define                                 RXF2EID9_bit        _BIT_ACCESS(RXF2EIDH,1)
// RXF2SIDL<RXF2EXIDEN>
extern volatile __bit                   RXF2EXIDEN          __at(0x784B);	// @ (0xF09 * 8 + 3)
#define                                 RXF2EXIDEN_bit      _BIT_ACCESS(RXF2SIDL,3)
// RXF2SIDL<RXF2SID0>
extern volatile __bit                   RXF2SID0            __at(0x784D);	// @ (0xF09 * 8 + 5)
#define                                 RXF2SID0_bit        _BIT_ACCESS(RXF2SIDL,5)
// RXF2SIDL<RXF2SID1>
extern volatile __bit                   RXF2SID1            __at(0x784E);	// @ (0xF09 * 8 + 6)
#define                                 RXF2SID1_bit        _BIT_ACCESS(RXF2SIDL,6)
// RXF2SIDH<RXF2SID10>
extern volatile __bit                   RXF2SID10           __at(0x7847);	// @ (0xF08 * 8 + 7)
#define                                 RXF2SID10_bit       _BIT_ACCESS(RXF2SIDH,7)
// RXF2SIDL<RXF2SID2>
extern volatile __bit                   RXF2SID2            __at(0x784F);	// @ (0xF09 * 8 + 7)
#define                                 RXF2SID2_bit        _BIT_ACCESS(RXF2SIDL,7)
// RXF2SIDH<RXF2SID3>
extern volatile __bit                   RXF2SID3            __at(0x7840);	// @ (0xF08 * 8 + 0)
#define                                 RXF2SID3_bit        _BIT_ACCESS(RXF2SIDH,0)
// RXF2SIDH<RXF2SID4>
extern volatile __bit                   RXF2SID4            __at(0x7841);	// @ (0xF08 * 8 + 1)
#define                                 RXF2SID4_bit        _BIT_ACCESS(RXF2SIDH,1)
// RXF2SIDH<RXF2SID5>
extern volatile __bit                   RXF2SID5            __at(0x7842);	// @ (0xF08 * 8 + 2)
#define                                 RXF2SID5_bit        _BIT_ACCESS(RXF2SIDH,2)
// RXF2SIDH<RXF2SID6>
extern volatile __bit                   RXF2SID6            __at(0x7843);	// @ (0xF08 * 8 + 3)
#define                                 RXF2SID6_bit        _BIT_ACCESS(RXF2SIDH,3)
// RXF2SIDH<RXF2SID7>
extern volatile __bit                   RXF2SID7            __at(0x7844);	// @ (0xF08 * 8 + 4)
#define                                 RXF2SID7_bit        _BIT_ACCESS(RXF2SIDH,4)
// RXF2SIDH<RXF2SID8>
extern volatile __bit                   RXF2SID8            __at(0x7845);	// @ (0xF08 * 8 + 5)
#define                                 RXF2SID8_bit        _BIT_ACCESS(RXF2SIDH,5)
// RXF2SIDH<RXF2SID9>
extern volatile __bit                   RXF2SID9            __at(0x7846);	// @ (0xF08 * 8 + 6)
#define                                 RXF2SID9_bit        _BIT_ACCESS(RXF2SIDH,6)
// RXF3EIDL<RXF3EID0>
extern volatile __bit                   RXF3EID0            __at(0x7878);	// @ (0xF0F * 8 + 0)
#define                                 RXF3EID0_bit        _BIT_ACCESS(RXF3EIDL,0)
// RXF3EIDL<RXF3EID1>
extern volatile __bit                   RXF3EID1            __at(0x7879);	// @ (0xF0F * 8 + 1)
#define                                 RXF3EID1_bit        _BIT_ACCESS(RXF3EIDL,1)
// RXF3EIDH<RXF3EID10>
extern volatile __bit                   RXF3EID10           __at(0x7872);	// @ (0xF0E * 8 + 2)
#define                                 RXF3EID10_bit       _BIT_ACCESS(RXF3EIDH,2)
// RXF3EIDH<RXF3EID11>
extern volatile __bit                   RXF3EID11           __at(0x7873);	// @ (0xF0E * 8 + 3)
#define                                 RXF3EID11_bit       _BIT_ACCESS(RXF3EIDH,3)
// RXF3EIDH<RXF3EID12>
extern volatile __bit                   RXF3EID12           __at(0x7874);	// @ (0xF0E * 8 + 4)
#define                                 RXF3EID12_bit       _BIT_ACCESS(RXF3EIDH,4)
// RXF3EIDH<RXF3EID13>
extern volatile __bit                   RXF3EID13           __at(0x7875);	// @ (0xF0E * 8 + 5)
#define                                 RXF3EID13_bit       _BIT_ACCESS(RXF3EIDH,5)
// RXF3EIDH<RXF3EID14>
extern volatile __bit                   RXF3EID14           __at(0x7876);	// @ (0xF0E * 8 + 6)
#define                                 RXF3EID14_bit       _BIT_ACCESS(RXF3EIDH,6)
// RXF3EIDH<RXF3EID15>
extern volatile __bit                   RXF3EID15           __at(0x7877);	// @ (0xF0E * 8 + 7)
#define                                 RXF3EID15_bit       _BIT_ACCESS(RXF3EIDH,7)
// RXF3SIDL<RXF3EID16>
extern volatile __bit                   RXF3EID16           __at(0x7868);	// @ (0xF0D * 8 + 0)
#define                                 RXF3EID16_bit       _BIT_ACCESS(RXF3SIDL,0)
// RXF3SIDL<RXF3EID17>
extern volatile __bit                   RXF3EID17           __at(0x7869);	// @ (0xF0D * 8 + 1)
#define                                 RXF3EID17_bit       _BIT_ACCESS(RXF3SIDL,1)
// RXF3EIDL<RXF3EID2>
extern volatile __bit                   RXF3EID2            __at(0x787A);	// @ (0xF0F * 8 + 2)
#define                                 RXF3EID2_bit        _BIT_ACCESS(RXF3EIDL,2)
// RXF3EIDL<RXF3EID3>
extern volatile __bit                   RXF3EID3            __at(0x787B);	// @ (0xF0F * 8 + 3)
#define                                 RXF3EID3_bit        _BIT_ACCESS(RXF3EIDL,3)
// RXF3EIDL<RXF3EID4>
extern volatile __bit                   RXF3EID4            __at(0x787C);	// @ (0xF0F * 8 + 4)
#define                                 RXF3EID4_bit        _BIT_ACCESS(RXF3EIDL,4)
// RXF3EIDL<RXF3EID5>
extern volatile __bit                   RXF3EID5            __at(0x787D);	// @ (0xF0F * 8 + 5)
#define                                 RXF3EID5_bit        _BIT_ACCESS(RXF3EIDL,5)
// RXF3EIDL<RXF3EID6>
extern volatile __bit                   RXF3EID6            __at(0x787E);	// @ (0xF0F * 8 + 6)
#define                                 RXF3EID6_bit        _BIT_ACCESS(RXF3EIDL,6)
// RXF3EIDL<RXF3EID7>
extern volatile __bit                   RXF3EID7            __at(0x787F);	// @ (0xF0F * 8 + 7)
#define                                 RXF3EID7_bit        _BIT_ACCESS(RXF3EIDL,7)
// RXF3EIDH<RXF3EID8>
extern volatile __bit                   RXF3EID8            __at(0x7870);	// @ (0xF0E * 8 + 0)
#define                                 RXF3EID8_bit        _BIT_ACCESS(RXF3EIDH,0)
// RXF3EIDH<RXF3EID9>
extern volatile __bit                   RXF3EID9            __at(0x7871);	// @ (0xF0E * 8 + 1)
#define                                 RXF3EID9_bit        _BIT_ACCESS(RXF3EIDH,1)
// RXF3SIDL<RXF3EXIDEN>
extern volatile __bit                   RXF3EXIDEN          __at(0x786B);	// @ (0xF0D * 8 + 3)
#define                                 RXF3EXIDEN_bit      _BIT_ACCESS(RXF3SIDL,3)
// RXF3SIDL<RXF3SID0>
extern volatile __bit                   RXF3SID0            __at(0x786D);	// @ (0xF0D * 8 + 5)
#define                                 RXF3SID0_bit        _BIT_ACCESS(RXF3SIDL,5)
// RXF3SIDL<RXF3SID1>
extern volatile __bit                   RXF3SID1            __at(0x786E);	// @ (0xF0D * 8 + 6)
#define                                 RXF3SID1_bit        _BIT_ACCESS(RXF3SIDL,6)
// RXF3SIDH<RXF3SID10>
extern volatile __bit                   RXF3SID10           __at(0x7867);	// @ (0xF0C * 8 + 7)
#define                                 RXF3SID10_bit       _BIT_ACCESS(RXF3SIDH,7)
// RXF3SIDL<RXF3SID2>
extern volatile __bit                   RXF3SID2            __at(0x786F);	// @ (0xF0D * 8 + 7)
#define                                 RXF3SID2_bit        _BIT_ACCESS(RXF3SIDL,7)
// RXF3SIDH<RXF3SID3>
extern volatile __bit                   RXF3SID3            __at(0x7860);	// @ (0xF0C * 8 + 0)
#define                                 RXF3SID3_bit        _BIT_ACCESS(RXF3SIDH,0)
// RXF3SIDH<RXF3SID4>
extern volatile __bit                   RXF3SID4            __at(0x7861);	// @ (0xF0C * 8 + 1)
#define                                 RXF3SID4_bit        _BIT_ACCESS(RXF3SIDH,1)
// RXF3SIDH<RXF3SID5>
extern volatile __bit                   RXF3SID5            __at(0x7862);	// @ (0xF0C * 8 + 2)
#define                                 RXF3SID5_bit        _BIT_ACCESS(RXF3SIDH,2)
// RXF3SIDH<RXF3SID6>
extern volatile __bit                   RXF3SID6            __at(0x7863);	// @ (0xF0C * 8 + 3)
#define                                 RXF3SID6_bit        _BIT_ACCESS(RXF3SIDH,3)
// RXF3SIDH<RXF3SID7>
extern volatile __bit                   RXF3SID7            __at(0x7864);	// @ (0xF0C * 8 + 4)
#define                                 RXF3SID7_bit        _BIT_ACCESS(RXF3SIDH,4)
// RXF3SIDH<RXF3SID8>
extern volatile __bit                   RXF3SID8            __at(0x7865);	// @ (0xF0C * 8 + 5)
#define                                 RXF3SID8_bit        _BIT_ACCESS(RXF3SIDH,5)
// RXF3SIDH<RXF3SID9>
extern volatile __bit                   RXF3SID9            __at(0x7866);	// @ (0xF0C * 8 + 6)
#define                                 RXF3SID9_bit        _BIT_ACCESS(RXF3SIDH,6)
// RXF4EIDL<RXF4EID0>
extern volatile __bit                   RXF4EID0            __at(0x7898);	// @ (0xF13 * 8 + 0)
#define                                 RXF4EID0_bit        _BIT_ACCESS(RXF4EIDL,0)
// RXF4EIDL<RXF4EID1>
extern volatile __bit                   RXF4EID1            __at(0x7899);	// @ (0xF13 * 8 + 1)
#define                                 RXF4EID1_bit        _BIT_ACCESS(RXF4EIDL,1)
// RXF4EIDH<RXF4EID10>
extern volatile __bit                   RXF4EID10           __at(0x7892);	// @ (0xF12 * 8 + 2)
#define                                 RXF4EID10_bit       _BIT_ACCESS(RXF4EIDH,2)
// RXF4EIDH<RXF4EID11>
extern volatile __bit                   RXF4EID11           __at(0x7893);	// @ (0xF12 * 8 + 3)
#define                                 RXF4EID11_bit       _BIT_ACCESS(RXF4EIDH,3)
// RXF4EIDH<RXF4EID12>
extern volatile __bit                   RXF4EID12           __at(0x7894);	// @ (0xF12 * 8 + 4)
#define                                 RXF4EID12_bit       _BIT_ACCESS(RXF4EIDH,4)
// RXF4EIDH<RXF4EID13>
extern volatile __bit                   RXF4EID13           __at(0x7895);	// @ (0xF12 * 8 + 5)
#define                                 RXF4EID13_bit       _BIT_ACCESS(RXF4EIDH,5)
// RXF4EIDH<RXF4EID14>
extern volatile __bit                   RXF4EID14           __at(0x7896);	// @ (0xF12 * 8 + 6)
#define                                 RXF4EID14_bit       _BIT_ACCESS(RXF4EIDH,6)
// RXF4EIDH<RXF4EID15>
extern volatile __bit                   RXF4EID15           __at(0x7897);	// @ (0xF12 * 8 + 7)
#define                                 RXF4EID15_bit       _BIT_ACCESS(RXF4EIDH,7)
// RXF4SIDL<RXF4EID16>
extern volatile __bit                   RXF4EID16           __at(0x7888);	// @ (0xF11 * 8 + 0)
#define                                 RXF4EID16_bit       _BIT_ACCESS(RXF4SIDL,0)
// RXF4SIDL<RXF4EID17>
extern volatile __bit                   RXF4EID17           __at(0x7889);	// @ (0xF11 * 8 + 1)
#define                                 RXF4EID17_bit       _BIT_ACCESS(RXF4SIDL,1)
// RXF4EIDL<RXF4EID2>
extern volatile __bit                   RXF4EID2            __at(0x789A);	// @ (0xF13 * 8 + 2)
#define                                 RXF4EID2_bit        _BIT_ACCESS(RXF4EIDL,2)
// RXF4EIDL<RXF4EID3>
extern volatile __bit                   RXF4EID3            __at(0x789B);	// @ (0xF13 * 8 + 3)
#define                                 RXF4EID3_bit        _BIT_ACCESS(RXF4EIDL,3)
// RXF4EIDL<RXF4EID4>
extern volatile __bit                   RXF4EID4            __at(0x789C);	// @ (0xF13 * 8 + 4)
#define                                 RXF4EID4_bit        _BIT_ACCESS(RXF4EIDL,4)
// RXF4EIDL<RXF4EID5>
extern volatile __bit                   RXF4EID5            __at(0x789D);	// @ (0xF13 * 8 + 5)
#define                                 RXF4EID5_bit        _BIT_ACCESS(RXF4EIDL,5)
// RXF4EIDL<RXF4EID6>
extern volatile __bit                   RXF4EID6            __at(0x789E);	// @ (0xF13 * 8 + 6)
#define                                 RXF4EID6_bit        _BIT_ACCESS(RXF4EIDL,6)
// RXF4EIDL<RXF4EID7>
extern volatile __bit                   RXF4EID7            __at(0x789F);	// @ (0xF13 * 8 + 7)
#define                                 RXF4EID7_bit        _BIT_ACCESS(RXF4EIDL,7)
// RXF4EIDH<RXF4EID8>
extern volatile __bit                   RXF4EID8            __at(0x7890);	// @ (0xF12 * 8 + 0)
#define                                 RXF4EID8_bit        _BIT_ACCESS(RXF4EIDH,0)
// RXF4EIDH<RXF4EID9>
extern volatile __bit                   RXF4EID9            __at(0x7891);	// @ (0xF12 * 8 + 1)
#define                                 RXF4EID9_bit        _BIT_ACCESS(RXF4EIDH,1)
// RXF4SIDL<RXF4EXIDEN>
extern volatile __bit                   RXF4EXIDEN          __at(0x788B);	// @ (0xF11 * 8 + 3)
#define                                 RXF4EXIDEN_bit      _BIT_ACCESS(RXF4SIDL,3)
// RXF4SIDL<RXF4SID0>
extern volatile __bit                   RXF4SID0            __at(0x788D);	// @ (0xF11 * 8 + 5)
#define                                 RXF4SID0_bit        _BIT_ACCESS(RXF4SIDL,5)
// RXF4SIDL<RXF4SID1>
extern volatile __bit                   RXF4SID1            __at(0x788E);	// @ (0xF11 * 8 + 6)
#define                                 RXF4SID1_bit        _BIT_ACCESS(RXF4SIDL,6)
// RXF4SIDH<RXF4SID10>
extern volatile __bit                   RXF4SID10           __at(0x7887);	// @ (0xF10 * 8 + 7)
#define                                 RXF4SID10_bit       _BIT_ACCESS(RXF4SIDH,7)
// RXF4SIDL<RXF4SID2>
extern volatile __bit                   RXF4SID2            __at(0x788F);	// @ (0xF11 * 8 + 7)
#define                                 RXF4SID2_bit        _BIT_ACCESS(RXF4SIDL,7)
// RXF4SIDH<RXF4SID3>
extern volatile __bit                   RXF4SID3            __at(0x7880);	// @ (0xF10 * 8 + 0)
#define                                 RXF4SID3_bit        _BIT_ACCESS(RXF4SIDH,0)
// RXF4SIDH<RXF4SID4>
extern volatile __bit                   RXF4SID4            __at(0x7881);	// @ (0xF10 * 8 + 1)
#define                                 RXF4SID4_bit        _BIT_ACCESS(RXF4SIDH,1)
// RXF4SIDH<RXF4SID5>
extern volatile __bit                   RXF4SID5            __at(0x7882);	// @ (0xF10 * 8 + 2)
#define                                 RXF4SID5_bit        _BIT_ACCESS(RXF4SIDH,2)
// RXF4SIDH<RXF4SID6>
extern volatile __bit                   RXF4SID6            __at(0x7883);	// @ (0xF10 * 8 + 3)
#define                                 RXF4SID6_bit        _BIT_ACCESS(RXF4SIDH,3)
// RXF4SIDH<RXF4SID7>
extern volatile __bit                   RXF4SID7            __at(0x7884);	// @ (0xF10 * 8 + 4)
#define                                 RXF4SID7_bit        _BIT_ACCESS(RXF4SIDH,4)
// RXF4SIDH<RXF4SID8>
extern volatile __bit                   RXF4SID8            __at(0x7885);	// @ (0xF10 * 8 + 5)
#define                                 RXF4SID8_bit        _BIT_ACCESS(RXF4SIDH,5)
// RXF4SIDH<RXF4SID9>
extern volatile __bit                   RXF4SID9            __at(0x7886);	// @ (0xF10 * 8 + 6)
#define                                 RXF4SID9_bit        _BIT_ACCESS(RXF4SIDH,6)
// RXF5EIDL<RXF5EID0>
extern volatile __bit                   RXF5EID0            __at(0x78B8);	// @ (0xF17 * 8 + 0)
#define                                 RXF5EID0_bit        _BIT_ACCESS(RXF5EIDL,0)
// RXF5EIDL<RXF5EID1>
extern volatile __bit                   RXF5EID1            __at(0x78B9);	// @ (0xF17 * 8 + 1)
#define                                 RXF5EID1_bit        _BIT_ACCESS(RXF5EIDL,1)
// RXF5EIDH<RXF5EID10>
extern volatile __bit                   RXF5EID10           __at(0x78B2);	// @ (0xF16 * 8 + 2)
#define                                 RXF5EID10_bit       _BIT_ACCESS(RXF5EIDH,2)
// RXF5EIDH<RXF5EID11>
extern volatile __bit                   RXF5EID11           __at(0x78B3);	// @ (0xF16 * 8 + 3)
#define                                 RXF5EID11_bit       _BIT_ACCESS(RXF5EIDH,3)
// RXF5EIDH<RXF5EID12>
extern volatile __bit                   RXF5EID12           __at(0x78B4);	// @ (0xF16 * 8 + 4)
#define                                 RXF5EID12_bit       _BIT_ACCESS(RXF5EIDH,4)
// RXF5EIDH<RXF5EID13>
extern volatile __bit                   RXF5EID13           __at(0x78B5);	// @ (0xF16 * 8 + 5)
#define                                 RXF5EID13_bit       _BIT_ACCESS(RXF5EIDH,5)
// RXF5EIDH<RXF5EID14>
extern volatile __bit                   RXF5EID14           __at(0x78B6);	// @ (0xF16 * 8 + 6)
#define                                 RXF5EID14_bit       _BIT_ACCESS(RXF5EIDH,6)
// RXF5EIDH<RXF5EID15>
extern volatile __bit                   RXF5EID15           __at(0x78B7);	// @ (0xF16 * 8 + 7)
#define                                 RXF5EID15_bit       _BIT_ACCESS(RXF5EIDH,7)
// RXF5SIDL<RXF5EID16>
extern volatile __bit                   RXF5EID16           __at(0x78A8);	// @ (0xF15 * 8 + 0)
#define                                 RXF5EID16_bit       _BIT_ACCESS(RXF5SIDL,0)
// RXF5SIDL<RXF5EID17>
extern volatile __bit                   RXF5EID17           __at(0x78A9);	// @ (0xF15 * 8 + 1)
#define                                 RXF5EID17_bit       _BIT_ACCESS(RXF5SIDL,1)
// RXF5EIDL<RXF5EID2>
extern volatile __bit                   RXF5EID2            __at(0x78BA);	// @ (0xF17 * 8 + 2)
#define                                 RXF5EID2_bit        _BIT_ACCESS(RXF5EIDL,2)
// RXF5EIDL<RXF5EID3>
extern volatile __bit                   RXF5EID3            __at(0x78BB);	// @ (0xF17 * 8 + 3)
#define                                 RXF5EID3_bit        _BIT_ACCESS(RXF5EIDL,3)
// RXF5EIDL<RXF5EID4>
extern volatile __bit                   RXF5EID4            __at(0x78BC);	// @ (0xF17 * 8 + 4)
#define                                 RXF5EID4_bit        _BIT_ACCESS(RXF5EIDL,4)
// RXF5EIDL<RXF5EID5>
extern volatile __bit                   RXF5EID5            __at(0x78BD);	// @ (0xF17 * 8 + 5)
#define                                 RXF5EID5_bit        _BIT_ACCESS(RXF5EIDL,5)
// RXF5EIDL<RXF5EID6>
extern volatile __bit                   RXF5EID6            __at(0x78BE);	// @ (0xF17 * 8 + 6)
#define                                 RXF5EID6_bit        _BIT_ACCESS(RXF5EIDL,6)
// RXF5EIDL<RXF5EID7>
extern volatile __bit                   RXF5EID7            __at(0x78BF);	// @ (0xF17 * 8 + 7)
#define                                 RXF5EID7_bit        _BIT_ACCESS(RXF5EIDL,7)
// RXF5EIDH<RXF5EID8>
extern volatile __bit                   RXF5EID8            __at(0x78B0);	// @ (0xF16 * 8 + 0)
#define                                 RXF5EID8_bit        _BIT_ACCESS(RXF5EIDH,0)
// RXF5EIDH<RXF5EID9>
extern volatile __bit                   RXF5EID9            __at(0x78B1);	// @ (0xF16 * 8 + 1)
#define                                 RXF5EID9_bit        _BIT_ACCESS(RXF5EIDH,1)
// RXF5SIDL<RXF5EXIDEN>
extern volatile __bit                   RXF5EXIDEN          __at(0x78AB);	// @ (0xF15 * 8 + 3)
#define                                 RXF5EXIDEN_bit      _BIT_ACCESS(RXF5SIDL,3)
// RXF5SIDL<RXF5SID0>
extern volatile __bit                   RXF5SID0            __at(0x78AD);	// @ (0xF15 * 8 + 5)
#define                                 RXF5SID0_bit        _BIT_ACCESS(RXF5SIDL,5)
// RXF5SIDL<RXF5SID1>
extern volatile __bit                   RXF5SID1            __at(0x78AE);	// @ (0xF15 * 8 + 6)
#define                                 RXF5SID1_bit        _BIT_ACCESS(RXF5SIDL,6)
// RXF5SIDH<RXF5SID10>
extern volatile __bit                   RXF5SID10           __at(0x78A7);	// @ (0xF14 * 8 + 7)
#define                                 RXF5SID10_bit       _BIT_ACCESS(RXF5SIDH,7)
// RXF5SIDL<RXF5SID2>
extern volatile __bit                   RXF5SID2            __at(0x78AF);	// @ (0xF15 * 8 + 7)
#define                                 RXF5SID2_bit        _BIT_ACCESS(RXF5SIDL,7)
// RXF5SIDH<RXF5SID3>
extern volatile __bit                   RXF5SID3            __at(0x78A0);	// @ (0xF14 * 8 + 0)
#define                                 RXF5SID3_bit        _BIT_ACCESS(RXF5SIDH,0)
// RXF5SIDH<RXF5SID4>
extern volatile __bit                   RXF5SID4            __at(0x78A1);	// @ (0xF14 * 8 + 1)
#define                                 RXF5SID4_bit        _BIT_ACCESS(RXF5SIDH,1)
// RXF5SIDH<RXF5SID5>
extern volatile __bit                   RXF5SID5            __at(0x78A2);	// @ (0xF14 * 8 + 2)
#define                                 RXF5SID5_bit        _BIT_ACCESS(RXF5SIDH,2)
// RXF5SIDH<RXF5SID6>
extern volatile __bit                   RXF5SID6            __at(0x78A3);	// @ (0xF14 * 8 + 3)
#define                                 RXF5SID6_bit        _BIT_ACCESS(RXF5SIDH,3)
// RXF5SIDH<RXF5SID7>
extern volatile __bit                   RXF5SID7            __at(0x78A4);	// @ (0xF14 * 8 + 4)
#define                                 RXF5SID7_bit        _BIT_ACCESS(RXF5SIDH,4)
// RXF5SIDH<RXF5SID8>
extern volatile __bit                   RXF5SID8            __at(0x78A5);	// @ (0xF14 * 8 + 5)
#define                                 RXF5SID8_bit        _BIT_ACCESS(RXF5SIDH,5)
// RXF5SIDH<RXF5SID9>
extern volatile __bit                   RXF5SID9            __at(0x78A6);	// @ (0xF14 * 8 + 6)
#define                                 RXF5SID9_bit        _BIT_ACCESS(RXF5SIDH,6)
// RXM0EIDL<RXM0EID0>
extern volatile __bit                   RXM0EID0            __at(0x78D8);	// @ (0xF1B * 8 + 0)
#define                                 RXM0EID0_bit        _BIT_ACCESS(RXM0EIDL,0)
// RXM0EIDL<RXM0EID1>
extern volatile __bit                   RXM0EID1            __at(0x78D9);	// @ (0xF1B * 8 + 1)
#define                                 RXM0EID1_bit        _BIT_ACCESS(RXM0EIDL,1)
// RXM0EIDH<RXM0EID10>
extern volatile __bit                   RXM0EID10           __at(0x78D2);	// @ (0xF1A * 8 + 2)
#define                                 RXM0EID10_bit       _BIT_ACCESS(RXM0EIDH,2)
// RXM0EIDH<RXM0EID11>
extern volatile __bit                   RXM0EID11           __at(0x78D3);	// @ (0xF1A * 8 + 3)
#define                                 RXM0EID11_bit       _BIT_ACCESS(RXM0EIDH,3)
// RXM0EIDH<RXM0EID12>
extern volatile __bit                   RXM0EID12           __at(0x78D4);	// @ (0xF1A * 8 + 4)
#define                                 RXM0EID12_bit       _BIT_ACCESS(RXM0EIDH,4)
// RXM0EIDH<RXM0EID13>
extern volatile __bit                   RXM0EID13           __at(0x78D5);	// @ (0xF1A * 8 + 5)
#define                                 RXM0EID13_bit       _BIT_ACCESS(RXM0EIDH,5)
// RXM0EIDH<RXM0EID14>
extern volatile __bit                   RXM0EID14           __at(0x78D6);	// @ (0xF1A * 8 + 6)
#define                                 RXM0EID14_bit       _BIT_ACCESS(RXM0EIDH,6)
// RXM0EIDH<RXM0EID15>
extern volatile __bit                   RXM0EID15           __at(0x78D7);	// @ (0xF1A * 8 + 7)
#define                                 RXM0EID15_bit       _BIT_ACCESS(RXM0EIDH,7)
// RXM0SIDL<RXM0EID16>
extern volatile __bit                   RXM0EID16           __at(0x78C8);	// @ (0xF19 * 8 + 0)
#define                                 RXM0EID16_bit       _BIT_ACCESS(RXM0SIDL,0)
// RXM0SIDL<RXM0EID17>
extern volatile __bit                   RXM0EID17           __at(0x78C9);	// @ (0xF19 * 8 + 1)
#define                                 RXM0EID17_bit       _BIT_ACCESS(RXM0SIDL,1)
// RXM0EIDL<RXM0EID2>
extern volatile __bit                   RXM0EID2            __at(0x78DA);	// @ (0xF1B * 8 + 2)
#define                                 RXM0EID2_bit        _BIT_ACCESS(RXM0EIDL,2)
// RXM0EIDL<RXM0EID3>
extern volatile __bit                   RXM0EID3            __at(0x78DB);	// @ (0xF1B * 8 + 3)
#define                                 RXM0EID3_bit        _BIT_ACCESS(RXM0EIDL,3)
// RXM0EIDL<RXM0EID4>
extern volatile __bit                   RXM0EID4            __at(0x78DC);	// @ (0xF1B * 8 + 4)
#define                                 RXM0EID4_bit        _BIT_ACCESS(RXM0EIDL,4)
// RXM0EIDL<RXM0EID5>
extern volatile __bit                   RXM0EID5            __at(0x78DD);	// @ (0xF1B * 8 + 5)
#define                                 RXM0EID5_bit        _BIT_ACCESS(RXM0EIDL,5)
// RXM0EIDL<RXM0EID6>
extern volatile __bit                   RXM0EID6            __at(0x78DE);	// @ (0xF1B * 8 + 6)
#define                                 RXM0EID6_bit        _BIT_ACCESS(RXM0EIDL,6)
// RXM0EIDL<RXM0EID7>
extern volatile __bit                   RXM0EID7            __at(0x78DF);	// @ (0xF1B * 8 + 7)
#define                                 RXM0EID7_bit        _BIT_ACCESS(RXM0EIDL,7)
// RXM0EIDH<RXM0EID8>
extern volatile __bit                   RXM0EID8            __at(0x78D0);	// @ (0xF1A * 8 + 0)
#define                                 RXM0EID8_bit        _BIT_ACCESS(RXM0EIDH,0)
// RXM0EIDH<RXM0EID9>
extern volatile __bit                   RXM0EID9            __at(0x78D1);	// @ (0xF1A * 8 + 1)
#define                                 RXM0EID9_bit        _BIT_ACCESS(RXM0EIDH,1)
// RXM0SIDL<RXM0SID0>
extern volatile __bit                   RXM0SID0            __at(0x78CD);	// @ (0xF19 * 8 + 5)
#define                                 RXM0SID0_bit        _BIT_ACCESS(RXM0SIDL,5)
// RXM0SIDL<RXM0SID1>
extern volatile __bit                   RXM0SID1            __at(0x78CE);	// @ (0xF19 * 8 + 6)
#define                                 RXM0SID1_bit        _BIT_ACCESS(RXM0SIDL,6)
// RXM0SIDH<RXM0SID10>
extern volatile __bit                   RXM0SID10           __at(0x78C7);	// @ (0xF18 * 8 + 7)
#define                                 RXM0SID10_bit       _BIT_ACCESS(RXM0SIDH,7)
// RXM0SIDL<RXM0SID2>
extern volatile __bit                   RXM0SID2            __at(0x78CF);	// @ (0xF19 * 8 + 7)
#define                                 RXM0SID2_bit        _BIT_ACCESS(RXM0SIDL,7)
// RXM0SIDH<RXM0SID3>
extern volatile __bit                   RXM0SID3            __at(0x78C0);	// @ (0xF18 * 8 + 0)
#define                                 RXM0SID3_bit        _BIT_ACCESS(RXM0SIDH,0)
// RXM0SIDH<RXM0SID4>
extern volatile __bit                   RXM0SID4            __at(0x78C1);	// @ (0xF18 * 8 + 1)
#define                                 RXM0SID4_bit        _BIT_ACCESS(RXM0SIDH,1)
// RXM0SIDH<RXM0SID5>
extern volatile __bit                   RXM0SID5            __at(0x78C2);	// @ (0xF18 * 8 + 2)
#define                                 RXM0SID5_bit        _BIT_ACCESS(RXM0SIDH,2)
// RXM0SIDH<RXM0SID6>
extern volatile __bit                   RXM0SID6            __at(0x78C3);	// @ (0xF18 * 8 + 3)
#define                                 RXM0SID6_bit        _BIT_ACCESS(RXM0SIDH,3)
// RXM0SIDH<RXM0SID7>
extern volatile __bit                   RXM0SID7            __at(0x78C4);	// @ (0xF18 * 8 + 4)
#define                                 RXM0SID7_bit        _BIT_ACCESS(RXM0SIDH,4)
// RXM0SIDH<RXM0SID8>
extern volatile __bit                   RXM0SID8            __at(0x78C5);	// @ (0xF18 * 8 + 5)
#define                                 RXM0SID8_bit        _BIT_ACCESS(RXM0SIDH,5)
// RXM0SIDH<RXM0SID9>
extern volatile __bit                   RXM0SID9            __at(0x78C6);	// @ (0xF18 * 8 + 6)
#define                                 RXM0SID9_bit        _BIT_ACCESS(RXM0SIDH,6)
// RXM1EIDL<RXM1EID0>
extern volatile __bit                   RXM1EID0            __at(0x78F8);	// @ (0xF1F * 8 + 0)
#define                                 RXM1EID0_bit        _BIT_ACCESS(RXM1EIDL,0)
// RXM1EIDL<RXM1EID1>
extern volatile __bit                   RXM1EID1            __at(0x78F9);	// @ (0xF1F * 8 + 1)
#define                                 RXM1EID1_bit        _BIT_ACCESS(RXM1EIDL,1)
// RXM1EIDH<RXM1EID10>
extern volatile __bit                   RXM1EID10           __at(0x78F2);	// @ (0xF1E * 8 + 2)
#define                                 RXM1EID10_bit       _BIT_ACCESS(RXM1EIDH,2)
// RXM1EIDH<RXM1EID11>
extern volatile __bit                   RXM1EID11           __at(0x78F3);	// @ (0xF1E * 8 + 3)
#define                                 RXM1EID11_bit       _BIT_ACCESS(RXM1EIDH,3)
// RXM1EIDH<RXM1EID12>
extern volatile __bit                   RXM1EID12           __at(0x78F4);	// @ (0xF1E * 8 + 4)
#define                                 RXM1EID12_bit       _BIT_ACCESS(RXM1EIDH,4)
// RXM1EIDH<RXM1EID13>
extern volatile __bit                   RXM1EID13           __at(0x78F5);	// @ (0xF1E * 8 + 5)
#define                                 RXM1EID13_bit       _BIT_ACCESS(RXM1EIDH,5)
// RXM1EIDH<RXM1EID14>
extern volatile __bit                   RXM1EID14           __at(0x78F6);	// @ (0xF1E * 8 + 6)
#define                                 RXM1EID14_bit       _BIT_ACCESS(RXM1EIDH,6)
// RXM1EIDH<RXM1EID15>
extern volatile __bit                   RXM1EID15           __at(0x78F7);	// @ (0xF1E * 8 + 7)
#define                                 RXM1EID15_bit       _BIT_ACCESS(RXM1EIDH,7)
// RXM1SIDL<RXM1EID16>
extern volatile __bit                   RXM1EID16           __at(0x78E8);	// @ (0xF1D * 8 + 0)
#define                                 RXM1EID16_bit       _BIT_ACCESS(RXM1SIDL,0)
// RXM1SIDL<RXM1EID17>
extern volatile __bit                   RXM1EID17           __at(0x78E9);	// @ (0xF1D * 8 + 1)
#define                                 RXM1EID17_bit       _BIT_ACCESS(RXM1SIDL,1)
// RXM1EIDL<RXM1EID2>
extern volatile __bit                   RXM1EID2            __at(0x78FA);	// @ (0xF1F * 8 + 2)
#define                                 RXM1EID2_bit        _BIT_ACCESS(RXM1EIDL,2)
// RXM1EIDL<RXM1EID3>
extern volatile __bit                   RXM1EID3            __at(0x78FB);	// @ (0xF1F * 8 + 3)
#define                                 RXM1EID3_bit        _BIT_ACCESS(RXM1EIDL,3)
// RXM1EIDL<RXM1EID4>
extern volatile __bit                   RXM1EID4            __at(0x78FC);	// @ (0xF1F * 8 + 4)
#define                                 RXM1EID4_bit        _BIT_ACCESS(RXM1EIDL,4)
// RXM1EIDL<RXM1EID5>
extern volatile __bit                   RXM1EID5            __at(0x78FD);	// @ (0xF1F * 8 + 5)
#define                                 RXM1EID5_bit        _BIT_ACCESS(RXM1EIDL,5)
// RXM1EIDL<RXM1EID6>
extern volatile __bit                   RXM1EID6            __at(0x78FE);	// @ (0xF1F * 8 + 6)
#define                                 RXM1EID6_bit        _BIT_ACCESS(RXM1EIDL,6)
// RXM1EIDL<RXM1EID7>
extern volatile __bit                   RXM1EID7            __at(0x78FF);	// @ (0xF1F * 8 + 7)
#define                                 RXM1EID7_bit        _BIT_ACCESS(RXM1EIDL,7)
// RXM1EIDH<RXM1EID8>
extern volatile __bit                   RXM1EID8            __at(0x78F0);	// @ (0xF1E * 8 + 0)
#define                                 RXM1EID8_bit        _BIT_ACCESS(RXM1EIDH,0)
// RXM1EIDH<RXM1EID9>
extern volatile __bit                   RXM1EID9            __at(0x78F1);	// @ (0xF1E * 8 + 1)
#define                                 RXM1EID9_bit        _BIT_ACCESS(RXM1EIDH,1)
// RXM1SIDL<RXM1SID0>
extern volatile __bit                   RXM1SID0            __at(0x78ED);	// @ (0xF1D * 8 + 5)
#define                                 RXM1SID0_bit        _BIT_ACCESS(RXM1SIDL,5)
// RXM1SIDL<RXM1SID1>
extern volatile __bit                   RXM1SID1            __at(0x78EE);	// @ (0xF1D * 8 + 6)
#define                                 RXM1SID1_bit        _BIT_ACCESS(RXM1SIDL,6)
// RXM1SIDH<RXM1SID10>
extern volatile __bit                   RXM1SID10           __at(0x78E7);	// @ (0xF1C * 8 + 7)
#define                                 RXM1SID10_bit       _BIT_ACCESS(RXM1SIDH,7)
// RXM1SIDL<RXM1SID2>
extern volatile __bit                   RXM1SID2            __at(0x78EF);	// @ (0xF1D * 8 + 7)
#define                                 RXM1SID2_bit        _BIT_ACCESS(RXM1SIDL,7)
// RXM1SIDH<RXM1SID3>
extern volatile __bit                   RXM1SID3            __at(0x78E0);	// @ (0xF1C * 8 + 0)
#define                                 RXM1SID3_bit        _BIT_ACCESS(RXM1SIDH,0)
// RXM1SIDH<RXM1SID4>
extern volatile __bit                   RXM1SID4            __at(0x78E1);	// @ (0xF1C * 8 + 1)
#define                                 RXM1SID4_bit        _BIT_ACCESS(RXM1SIDH,1)
// RXM1SIDH<RXM1SID5>
extern volatile __bit                   RXM1SID5            __at(0x78E2);	// @ (0xF1C * 8 + 2)
#define                                 RXM1SID5_bit        _BIT_ACCESS(RXM1SIDH,2)
// RXM1SIDH<RXM1SID6>
extern volatile __bit                   RXM1SID6            __at(0x78E3);	// @ (0xF1C * 8 + 3)
#define                                 RXM1SID6_bit        _BIT_ACCESS(RXM1SIDH,3)
// RXM1SIDH<RXM1SID7>
extern volatile __bit                   RXM1SID7            __at(0x78E4);	// @ (0xF1C * 8 + 4)
#define                                 RXM1SID7_bit        _BIT_ACCESS(RXM1SIDH,4)
// RXM1SIDH<RXM1SID8>
extern volatile __bit                   RXM1SID8            __at(0x78E5);	// @ (0xF1C * 8 + 5)
#define                                 RXM1SID8_bit        _BIT_ACCESS(RXM1SIDH,5)
// RXM1SIDH<RXM1SID9>
extern volatile __bit                   RXM1SID9            __at(0x78E6);	// @ (0xF1C * 8 + 6)
#define                                 RXM1SID9_bit        _BIT_ACCESS(RXM1SIDH,6)
// COMSTAT<RXWARN>
extern volatile __bit                   RXWARN              __at(0x7BA1);	// @ (0xF74 * 8 + 1)
#define                                 RXWARN_bit          _BIT_ACCESS(COMSTAT,1)
// SSPSTAT<R_NOT_W>
extern volatile __bit                   R_NOT_W             __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 R_NOT_W_bit         _BIT_ACCESS(SSPSTAT,2)
// SSPSTAT<R_W>
extern volatile __bit                   R_W                 __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 R_W_bit             _BIT_ACCESS(SSPSTAT,2)
// SSPSTAT<R_nW>
extern volatile __bit                   R_nW                __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 R_nW_bit            _BIT_ACCESS(SSPSTAT,2)
// BRGCON2<SAM>
extern volatile __bit                   SAM                 __at(0x7B8E);	// @ (0xF71 * 8 + 6)
#define                                 SAM_bit             _BIT_ACCESS(BRGCON2,6)
// PORTC<SCK>
extern volatile __bit                   SCK                 __at(0x7C13);	// @ (0xF82 * 8 + 3)
#define                                 SCK_bit             _BIT_ACCESS(PORTC,3)
// PORTC<SCL>
extern volatile __bit                   SCL                 __at(0x7C13);	// @ (0xF82 * 8 + 3)
#define                                 SCL_bit             _BIT_ACCESS(PORTC,3)
// OSCCON<SCS>
extern volatile __bit                   SCS                 __at(0x7E98);	// @ (0xFD3 * 8 + 0)
#define                                 SCS_bit             _BIT_ACCESS(OSCCON,0)
// PORTC<SDA>
extern volatile __bit                   SDA                 __at(0x7C14);	// @ (0xF82 * 8 + 4)
#define                                 SDA_bit             _BIT_ACCESS(PORTC,4)
// PORTC<SDI>
extern volatile __bit                   SDI                 __at(0x7C14);	// @ (0xF82 * 8 + 4)
#define                                 SDI_bit             _BIT_ACCESS(PORTC,4)
// PORTC<SDO>
extern volatile __bit                   SDO                 __at(0x7C15);	// @ (0xF82 * 8 + 5)
#define                                 SDO_bit             _BIT_ACCESS(PORTC,5)
// BRGCON2<SEG1PH0>
extern volatile __bit                   SEG1PH0             __at(0x7B8B);	// @ (0xF71 * 8 + 3)
#define                                 SEG1PH0_bit         _BIT_ACCESS(BRGCON2,3)
// BRGCON2<SEG1PH1>
extern volatile __bit                   SEG1PH1             __at(0x7B8C);	// @ (0xF71 * 8 + 4)
#define                                 SEG1PH1_bit         _BIT_ACCESS(BRGCON2,4)
// BRGCON2<SEG1PH2>
extern volatile __bit                   SEG1PH2             __at(0x7B8D);	// @ (0xF71 * 8 + 5)
#define                                 SEG1PH2_bit         _BIT_ACCESS(BRGCON2,5)
// BRGCON3<SEG2PH0>
extern volatile __bit                   SEG2PH0             __at(0x7B90);	// @ (0xF72 * 8 + 0)
#define                                 SEG2PH0_bit         _BIT_ACCESS(BRGCON3,0)
// BRGCON3<SEG2PH1>
extern volatile __bit                   SEG2PH1             __at(0x7B91);	// @ (0xF72 * 8 + 1)
#define                                 SEG2PH1_bit         _BIT_ACCESS(BRGCON3,1)
// BRGCON3<SEG2PH2>
extern volatile __bit                   SEG2PH2             __at(0x7B92);	// @ (0xF72 * 8 + 2)
#define                                 SEG2PH2_bit         _BIT_ACCESS(BRGCON3,2)
// BRGCON2<SEG2PHT>
extern volatile __bit                   SEG2PHT             __at(0x7B8F);	// @ (0xF71 * 8 + 7)
#define                                 SEG2PHT_bit         _BIT_ACCESS(BRGCON2,7)
// BRGCON2<SEG2PHTS>
extern volatile __bit                   SEG2PHTS            __at(0x7B8F);	// @ (0xF71 * 8 + 7)
#define                                 SEG2PHTS_bit        _BIT_ACCESS(BRGCON2,7)
// SSPCON2<SEN>
extern volatile __bit                   SEN                 __at(0x7E28);	// @ (0xFC5 * 8 + 0)
#define                                 SEN_bit             _BIT_ACCESS(SSPCON2,0)
// BRGCON1<SJW0>
extern volatile __bit                   SJW0                __at(0x7B86);	// @ (0xF70 * 8 + 6)
#define                                 SJW0_bit            _BIT_ACCESS(BRGCON1,6)
// BRGCON1<SJW1>
extern volatile __bit                   SJW1                __at(0x7B87);	// @ (0xF70 * 8 + 7)
#define                                 SJW1_bit            _BIT_ACCESS(BRGCON1,7)
// SSPSTAT<SMP>
extern volatile __bit                   SMP                 __at(0x7E3F);	// @ (0xFC7 * 8 + 7)
#define                                 SMP_bit             _BIT_ACCESS(SSPSTAT,7)
// T1CON<SOSCEN>
extern volatile __bit                   SOSCEN              __at(0x7E6B);	// @ (0xFCD * 8 + 3)
#define                                 SOSCEN_bit          _BIT_ACCESS(T1CON,3)
// T3CON<SOSCEN3>
extern volatile __bit                   SOSCEN3             __at(0x7D8B);	// @ (0xFB1 * 8 + 3)
#define                                 SOSCEN3_bit         _BIT_ACCESS(T3CON,3)
// STKPTR<SP0>
extern volatile __bit                   SP0                 __at(0x7FE0);	// @ (0xFFC * 8 + 0)
#define                                 SP0_bit             _BIT_ACCESS(STKPTR,0)
// STKPTR<SP1>
extern volatile __bit                   SP1                 __at(0x7FE1);	// @ (0xFFC * 8 + 1)
#define                                 SP1_bit             _BIT_ACCESS(STKPTR,1)
// STKPTR<SP2>
extern volatile __bit                   SP2                 __at(0x7FE2);	// @ (0xFFC * 8 + 2)
#define                                 SP2_bit             _BIT_ACCESS(STKPTR,2)
// STKPTR<SP3>
extern volatile __bit                   SP3                 __at(0x7FE3);	// @ (0xFFC * 8 + 3)
#define                                 SP3_bit             _BIT_ACCESS(STKPTR,3)
// STKPTR<SP4>
extern volatile __bit                   SP4                 __at(0x7FE4);	// @ (0xFFC * 8 + 4)
#define                                 SP4_bit             _BIT_ACCESS(STKPTR,4)
// RCSTA<SPEN>
extern volatile __bit                   SPEN                __at(0x7D5F);	// @ (0xFAB * 8 + 7)
#define                                 SPEN_bit            _BIT_ACCESS(RCSTA,7)
// RCSTA<SREN>
extern volatile __bit                   SREN                __at(0x7D5D);	// @ (0xFAB * 8 + 5)
#define                                 SREN_bit            _BIT_ACCESS(RCSTA,5)
// RCSTA<SRENA>
extern volatile __bit                   SRENA               __at(0x7D5D);	// @ (0xFAB * 8 + 5)
#define                                 SRENA_bit           _BIT_ACCESS(RCSTA,5)
// PORTA<SS>
extern volatile __bit                   SS                  __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 SS_bit              _BIT_ACCESS(PORTA,5)
// SSPCON1<SSPEN>
extern volatile __bit                   SSPEN               __at(0x7E35);	// @ (0xFC6 * 8 + 5)
#define                                 SSPEN_bit           _BIT_ACCESS(SSPCON1,5)
// PIE1<SSPIE>
extern volatile __bit                   SSPIE               __at(0x7CEB);	// @ (0xF9D * 8 + 3)
#define                                 SSPIE_bit           _BIT_ACCESS(PIE1,3)
// PIR1<SSPIF>
extern volatile __bit                   SSPIF               __at(0x7CF3);	// @ (0xF9E * 8 + 3)
#define                                 SSPIF_bit           _BIT_ACCESS(PIR1,3)
// IPR1<SSPIP>
extern volatile __bit                   SSPIP               __at(0x7CFB);	// @ (0xF9F * 8 + 3)
#define                                 SSPIP_bit           _BIT_ACCESS(IPR1,3)
// SSPCON1<SSPM0>
extern volatile __bit                   SSPM0               __at(0x7E30);	// @ (0xFC6 * 8 + 0)
#define                                 SSPM0_bit           _BIT_ACCESS(SSPCON1,0)
// SSPCON1<SSPM1>
extern volatile __bit                   SSPM1               __at(0x7E31);	// @ (0xFC6 * 8 + 1)
#define                                 SSPM1_bit           _BIT_ACCESS(SSPCON1,1)
// SSPCON1<SSPM2>
extern volatile __bit                   SSPM2               __at(0x7E32);	// @ (0xFC6 * 8 + 2)
#define                                 SSPM2_bit           _BIT_ACCESS(SSPCON1,2)
// SSPCON1<SSPM3>
extern volatile __bit                   SSPM3               __at(0x7E33);	// @ (0xFC6 * 8 + 3)
#define                                 SSPM3_bit           _BIT_ACCESS(SSPCON1,3)
// SSPCON1<SSPOV>
extern volatile __bit                   SSPOV               __at(0x7E36);	// @ (0xFC6 * 8 + 6)
#define                                 SSPOV_bit           _BIT_ACCESS(SSPCON1,6)
// SSPSTAT<START>
extern volatile __bit                   START               __at(0x7E3B);	// @ (0xFC7 * 8 + 3)
#define                                 START_bit           _BIT_ACCESS(SSPSTAT,3)
// STKPTR<STKFUL>
extern volatile __bit                   STKFUL              __at(0x7FE7);	// @ (0xFFC * 8 + 7)
#define                                 STKFUL_bit          _BIT_ACCESS(STKPTR,7)
// STKPTR<STKOVF>
extern volatile __bit                   STKOVF              __at(0x7FE7);	// @ (0xFFC * 8 + 7)
#define                                 STKOVF_bit          _BIT_ACCESS(STKPTR,7)
// STKPTR<STKPTR0>
extern volatile __bit                   STKPTR0             __at(0x7FE0);	// @ (0xFFC * 8 + 0)
#define                                 STKPTR0_bit         _BIT_ACCESS(STKPTR,0)
// STKPTR<STKPTR1>
extern volatile __bit                   STKPTR1             __at(0x7FE1);	// @ (0xFFC * 8 + 1)
#define                                 STKPTR1_bit         _BIT_ACCESS(STKPTR,1)
// STKPTR<STKPTR2>
extern volatile __bit                   STKPTR2             __at(0x7FE2);	// @ (0xFFC * 8 + 2)
#define                                 STKPTR2_bit         _BIT_ACCESS(STKPTR,2)
// STKPTR<STKPTR3>
extern volatile __bit                   STKPTR3             __at(0x7FE3);	// @ (0xFFC * 8 + 3)
#define                                 STKPTR3_bit         _BIT_ACCESS(STKPTR,3)
// STKPTR<STKPTR4>
extern volatile __bit                   STKPTR4             __at(0x7FE4);	// @ (0xFFC * 8 + 4)
#define                                 STKPTR4_bit         _BIT_ACCESS(STKPTR,4)
// STKPTR<STKUNF>
extern volatile __bit                   STKUNF              __at(0x7FE6);	// @ (0xFFC * 8 + 6)
#define                                 STKUNF_bit          _BIT_ACCESS(STKPTR,6)
// SSPSTAT<STOP>
extern volatile __bit                   STOP                __at(0x7E3C);	// @ (0xFC7 * 8 + 4)
#define                                 STOP_bit            _BIT_ACCESS(SSPSTAT,4)
// WDTCON<SWDTE>
extern volatile __bit                   SWDTE               __at(0x7E88);	// @ (0xFD1 * 8 + 0)
#define                                 SWDTE_bit           _BIT_ACCESS(WDTCON,0)
// WDTCON<SWDTEN>
extern volatile __bit                   SWDTEN              __at(0x7E88);	// @ (0xFD1 * 8 + 0)
#define                                 SWDTEN_bit          _BIT_ACCESS(WDTCON,0)
// TXSTA<SYNC>
extern volatile __bit                   SYNC                __at(0x7D64);	// @ (0xFAC * 8 + 4)
#define                                 SYNC_bit            _BIT_ACCESS(TXSTA,4)
// TXSTA<SYNC1>
extern volatile __bit                   SYNC1               __at(0x7D64);	// @ (0xFAC * 8 + 4)
#define                                 SYNC1_bit           _BIT_ACCESS(TXSTA,4)
// T0CON<T08BIT>
extern volatile __bit                   T08BIT              __at(0x7EAE);	// @ (0xFD5 * 8 + 6)
#define                                 T08BIT_bit          _BIT_ACCESS(T0CON,6)
// PORTA<T0CKI>
extern volatile __bit                   T0CKI               __at(0x7C04);	// @ (0xF80 * 8 + 4)
#define                                 T0CKI_bit           _BIT_ACCESS(PORTA,4)
// T0CON<T0CS>
extern volatile __bit                   T0CS                __at(0x7EAD);	// @ (0xFD5 * 8 + 5)
#define                                 T0CS_bit            _BIT_ACCESS(T0CON,5)
// INTCON<T0IE>
extern volatile __bit                   T0IE                __at(0x7F95);	// @ (0xFF2 * 8 + 5)
#define                                 T0IE_bit            _BIT_ACCESS(INTCON,5)
// INTCON<T0IF>
extern volatile __bit                   T0IF                __at(0x7F92);	// @ (0xFF2 * 8 + 2)
#define                                 T0IF_bit            _BIT_ACCESS(INTCON,2)
// INTCON2<T0IP>
extern volatile __bit                   T0IP                __at(0x7F8A);	// @ (0xFF1 * 8 + 2)
#define                                 T0IP_bit            _BIT_ACCESS(INTCON2,2)
// T0CON<T0PS0>
extern volatile __bit                   T0PS0               __at(0x7EA8);	// @ (0xFD5 * 8 + 0)
#define                                 T0PS0_bit           _BIT_ACCESS(T0CON,0)
// T0CON<T0PS1>
extern volatile __bit                   T0PS1               __at(0x7EA9);	// @ (0xFD5 * 8 + 1)
#define                                 T0PS1_bit           _BIT_ACCESS(T0CON,1)
// T0CON<T0PS2>
extern volatile __bit                   T0PS2               __at(0x7EAA);	// @ (0xFD5 * 8 + 2)
#define                                 T0PS2_bit           _BIT_ACCESS(T0CON,2)
// T0CON<T0SE>
extern volatile __bit                   T0SE                __at(0x7EAC);	// @ (0xFD5 * 8 + 4)
#define                                 T0SE_bit            _BIT_ACCESS(T0CON,4)
// PORTC<T1CKI>
extern volatile __bit                   T1CKI               __at(0x7C10);	// @ (0xF82 * 8 + 0)
#define                                 T1CKI_bit           _BIT_ACCESS(PORTC,0)
// T1CON<T1CKPS0>
extern volatile __bit                   T1CKPS0             __at(0x7E6C);	// @ (0xFCD * 8 + 4)
#define                                 T1CKPS0_bit         _BIT_ACCESS(T1CON,4)
// T1CON<T1CKPS1>
extern volatile __bit                   T1CKPS1             __at(0x7E6D);	// @ (0xFCD * 8 + 5)
#define                                 T1CKPS1_bit         _BIT_ACCESS(T1CON,5)
// T1CON<T1INSYNC>
extern volatile __bit                   T1INSYNC            __at(0x7E6A);	// @ (0xFCD * 8 + 2)
#define                                 T1INSYNC_bit        _BIT_ACCESS(T1CON,2)
// T1CON<T1OSCEN>
extern volatile __bit                   T1OSCEN             __at(0x7E6B);	// @ (0xFCD * 8 + 3)
#define                                 T1OSCEN_bit         _BIT_ACCESS(T1CON,3)
// PORTC<T1OSI>
extern volatile __bit                   T1OSI               __at(0x7C11);	// @ (0xF82 * 8 + 1)
#define                                 T1OSI_bit           _BIT_ACCESS(PORTC,1)
// PORTC<T1OSO>
extern volatile __bit                   T1OSO               __at(0x7C10);	// @ (0xF82 * 8 + 0)
#define                                 T1OSO_bit           _BIT_ACCESS(PORTC,0)
// T1CON<T1RD16>
extern volatile __bit                   T1RD16              __at(0x7E6F);	// @ (0xFCD * 8 + 7)
#define                                 T1RD16_bit          _BIT_ACCESS(T1CON,7)
// T1CON<T1SYNC>
extern volatile __bit                   T1SYNC              __at(0x7E6A);	// @ (0xFCD * 8 + 2)
#define                                 T1SYNC_bit          _BIT_ACCESS(T1CON,2)
// T2CON<T2CKPS0>
extern volatile __bit                   T2CKPS0             __at(0x7E50);	// @ (0xFCA * 8 + 0)
#define                                 T2CKPS0_bit         _BIT_ACCESS(T2CON,0)
// T2CON<T2CKPS1>
extern volatile __bit                   T2CKPS1             __at(0x7E51);	// @ (0xFCA * 8 + 1)
#define                                 T2CKPS1_bit         _BIT_ACCESS(T2CON,1)
// T3CON<T3CCP1>
extern volatile __bit                   T3CCP1              __at(0x7D8B);	// @ (0xFB1 * 8 + 3)
#define                                 T3CCP1_bit          _BIT_ACCESS(T3CON,3)
// T3CON<T3CKPS0>
extern volatile __bit                   T3CKPS0             __at(0x7D8C);	// @ (0xFB1 * 8 + 4)
#define                                 T3CKPS0_bit         _BIT_ACCESS(T3CON,4)
// T3CON<T3CKPS1>
extern volatile __bit                   T3CKPS1             __at(0x7D8D);	// @ (0xFB1 * 8 + 5)
#define                                 T3CKPS1_bit         _BIT_ACCESS(T3CON,5)
// T3CON<T3ECCP1>
extern volatile __bit                   T3ECCP1             __at(0x7D8E);	// @ (0xFB1 * 8 + 6)
#define                                 T3ECCP1_bit         _BIT_ACCESS(T3CON,6)
// T3CON<T3INSYNC>
extern volatile __bit                   T3INSYNC            __at(0x7D8A);	// @ (0xFB1 * 8 + 2)
#define                                 T3INSYNC_bit        _BIT_ACCESS(T3CON,2)
// T3CON<T3RD16>
extern volatile __bit                   T3RD16              __at(0x7D8F);	// @ (0xFB1 * 8 + 7)
#define                                 T3RD16_bit          _BIT_ACCESS(T3CON,7)
// T3CON<T3SYNC>
extern volatile __bit                   T3SYNC              __at(0x7D8A);	// @ (0xFB1 * 8 + 2)
#define                                 T3SYNC_bit          _BIT_ACCESS(T3CON,2)
// TXB1D2<TBB1D23>
extern volatile __bit                   TBB1D23             __at(0x79C3);	// @ (0xF38 * 8 + 3)
#define                                 TBB1D23_bit         _BIT_ACCESS(TXB1D2,3)
// TXERRCNT<TEC0>
extern volatile __bit                   TEC0                __at(0x7BB0);	// @ (0xF76 * 8 + 0)
#define                                 TEC0_bit            _BIT_ACCESS(TXERRCNT,0)
// TXERRCNT<TEC1>
extern volatile __bit                   TEC1                __at(0x7BB1);	// @ (0xF76 * 8 + 1)
#define                                 TEC1_bit            _BIT_ACCESS(TXERRCNT,1)
// TXERRCNT<TEC2>
extern volatile __bit                   TEC2                __at(0x7BB2);	// @ (0xF76 * 8 + 2)
#define                                 TEC2_bit            _BIT_ACCESS(TXERRCNT,2)
// TXERRCNT<TEC3>
extern volatile __bit                   TEC3                __at(0x7BB3);	// @ (0xF76 * 8 + 3)
#define                                 TEC3_bit            _BIT_ACCESS(TXERRCNT,3)
// TXERRCNT<TEC4>
extern volatile __bit                   TEC4                __at(0x7BB4);	// @ (0xF76 * 8 + 4)
#define                                 TEC4_bit            _BIT_ACCESS(TXERRCNT,4)
// TXERRCNT<TEC5>
extern volatile __bit                   TEC5                __at(0x7BB5);	// @ (0xF76 * 8 + 5)
#define                                 TEC5_bit            _BIT_ACCESS(TXERRCNT,5)
// TXERRCNT<TEC6>
extern volatile __bit                   TEC6                __at(0x7BB6);	// @ (0xF76 * 8 + 6)
#define                                 TEC6_bit            _BIT_ACCESS(TXERRCNT,6)
// TXERRCNT<TEC7>
extern volatile __bit                   TEC7                __at(0x7BB7);	// @ (0xF76 * 8 + 7)
#define                                 TEC7_bit            _BIT_ACCESS(TXERRCNT,7)
// INTCON<TMR0IE>
extern volatile __bit                   TMR0IE              __at(0x7F95);	// @ (0xFF2 * 8 + 5)
#define                                 TMR0IE_bit          _BIT_ACCESS(INTCON,5)
// INTCON<TMR0IF>
extern volatile __bit                   TMR0IF              __at(0x7F92);	// @ (0xFF2 * 8 + 2)
#define                                 TMR0IF_bit          _BIT_ACCESS(INTCON,2)
// INTCON2<TMR0IP>
extern volatile __bit                   TMR0IP              __at(0x7F8A);	// @ (0xFF1 * 8 + 2)
#define                                 TMR0IP_bit          _BIT_ACCESS(INTCON2,2)
// T0CON<TMR0ON>
extern volatile __bit                   TMR0ON              __at(0x7EAF);	// @ (0xFD5 * 8 + 7)
#define                                 TMR0ON_bit          _BIT_ACCESS(T0CON,7)
// T1CON<TMR1CS>
extern volatile __bit                   TMR1CS              __at(0x7E69);	// @ (0xFCD * 8 + 1)
#define                                 TMR1CS_bit          _BIT_ACCESS(T1CON,1)
// PIE1<TMR1IE>
extern volatile __bit                   TMR1IE              __at(0x7CE8);	// @ (0xF9D * 8 + 0)
#define                                 TMR1IE_bit          _BIT_ACCESS(PIE1,0)
// PIR1<TMR1IF>
extern volatile __bit                   TMR1IF              __at(0x7CF0);	// @ (0xF9E * 8 + 0)
#define                                 TMR1IF_bit          _BIT_ACCESS(PIR1,0)
// IPR1<TMR1IP>
extern volatile __bit                   TMR1IP              __at(0x7CF8);	// @ (0xF9F * 8 + 0)
#define                                 TMR1IP_bit          _BIT_ACCESS(IPR1,0)
// T1CON<TMR1ON>
extern volatile __bit                   TMR1ON              __at(0x7E68);	// @ (0xFCD * 8 + 0)
#define                                 TMR1ON_bit          _BIT_ACCESS(T1CON,0)
// PIE1<TMR2IE>
extern volatile __bit                   TMR2IE              __at(0x7CE9);	// @ (0xF9D * 8 + 1)
#define                                 TMR2IE_bit          _BIT_ACCESS(PIE1,1)
// PIR1<TMR2IF>
extern volatile __bit                   TMR2IF              __at(0x7CF1);	// @ (0xF9E * 8 + 1)
#define                                 TMR2IF_bit          _BIT_ACCESS(PIR1,1)
// IPR1<TMR2IP>
extern volatile __bit                   TMR2IP              __at(0x7CF9);	// @ (0xF9F * 8 + 1)
#define                                 TMR2IP_bit          _BIT_ACCESS(IPR1,1)
// T2CON<TMR2ON>
extern volatile __bit                   TMR2ON              __at(0x7E52);	// @ (0xFCA * 8 + 2)
#define                                 TMR2ON_bit          _BIT_ACCESS(T2CON,2)
// T3CON<TMR3CS>
extern volatile __bit                   TMR3CS              __at(0x7D89);	// @ (0xFB1 * 8 + 1)
#define                                 TMR3CS_bit          _BIT_ACCESS(T3CON,1)
// PIE2<TMR3IE>
extern volatile __bit                   TMR3IE              __at(0x7D01);	// @ (0xFA0 * 8 + 1)
#define                                 TMR3IE_bit          _BIT_ACCESS(PIE2,1)
// PIR2<TMR3IF>
extern volatile __bit                   TMR3IF              __at(0x7D09);	// @ (0xFA1 * 8 + 1)
#define                                 TMR3IF_bit          _BIT_ACCESS(PIR2,1)
// IPR2<TMR3IP>
extern volatile __bit                   TMR3IP              __at(0x7D11);	// @ (0xFA2 * 8 + 1)
#define                                 TMR3IP_bit          _BIT_ACCESS(IPR2,1)
// T3CON<TMR3ON>
extern volatile __bit                   TMR3ON              __at(0x7D88);	// @ (0xFB1 * 8 + 0)
#define                                 TMR3ON_bit          _BIT_ACCESS(T3CON,0)
// RCON<TO>
extern volatile __bit                   TO                  __at(0x7E83);	// @ (0xFD0 * 8 + 3)
#define                                 TO_bit              _BIT_ACCESS(RCON,3)
// T2CON<TOUTPS0>
extern volatile __bit                   TOUTPS0             __at(0x7E53);	// @ (0xFCA * 8 + 3)
#define                                 TOUTPS0_bit         _BIT_ACCESS(T2CON,3)
// T2CON<TOUTPS1>
extern volatile __bit                   TOUTPS1             __at(0x7E54);	// @ (0xFCA * 8 + 4)
#define                                 TOUTPS1_bit         _BIT_ACCESS(T2CON,4)
// T2CON<TOUTPS2>
extern volatile __bit                   TOUTPS2             __at(0x7E55);	// @ (0xFCA * 8 + 5)
#define                                 TOUTPS2_bit         _BIT_ACCESS(T2CON,5)
// T2CON<TOUTPS3>
extern volatile __bit                   TOUTPS3             __at(0x7E56);	// @ (0xFCA * 8 + 6)
#define                                 TOUTPS3_bit         _BIT_ACCESS(T2CON,6)
// TRISA<TRISA0>
extern volatile __bit                   TRISA0              __at(0x7C90);	// @ (0xF92 * 8 + 0)
#define                                 TRISA0_bit          _BIT_ACCESS(TRISA,0)
// TRISA<TRISA1>
extern volatile __bit                   TRISA1              __at(0x7C91);	// @ (0xF92 * 8 + 1)
#define                                 TRISA1_bit          _BIT_ACCESS(TRISA,1)
// TRISA<TRISA2>
extern volatile __bit                   TRISA2              __at(0x7C92);	// @ (0xF92 * 8 + 2)
#define                                 TRISA2_bit          _BIT_ACCESS(TRISA,2)
// TRISA<TRISA3>
extern volatile __bit                   TRISA3              __at(0x7C93);	// @ (0xF92 * 8 + 3)
#define                                 TRISA3_bit          _BIT_ACCESS(TRISA,3)
// TRISA<TRISA4>
extern volatile __bit                   TRISA4              __at(0x7C94);	// @ (0xF92 * 8 + 4)
#define                                 TRISA4_bit          _BIT_ACCESS(TRISA,4)
// TRISA<TRISA5>
extern volatile __bit                   TRISA5              __at(0x7C95);	// @ (0xF92 * 8 + 5)
#define                                 TRISA5_bit          _BIT_ACCESS(TRISA,5)
// TRISA<TRISA6>
extern volatile __bit                   TRISA6              __at(0x7C96);	// @ (0xF92 * 8 + 6)
#define                                 TRISA6_bit          _BIT_ACCESS(TRISA,6)
// TRISB<TRISB0>
extern volatile __bit                   TRISB0              __at(0x7C98);	// @ (0xF93 * 8 + 0)
#define                                 TRISB0_bit          _BIT_ACCESS(TRISB,0)
// TRISB<TRISB1>
extern volatile __bit                   TRISB1              __at(0x7C99);	// @ (0xF93 * 8 + 1)
#define                                 TRISB1_bit          _BIT_ACCESS(TRISB,1)
// TRISB<TRISB2>
extern volatile __bit                   TRISB2              __at(0x7C9A);	// @ (0xF93 * 8 + 2)
#define                                 TRISB2_bit          _BIT_ACCESS(TRISB,2)
// TRISB<TRISB3>
extern volatile __bit                   TRISB3              __at(0x7C9B);	// @ (0xF93 * 8 + 3)
#define                                 TRISB3_bit          _BIT_ACCESS(TRISB,3)
// TRISB<TRISB4>
extern volatile __bit                   TRISB4              __at(0x7C9C);	// @ (0xF93 * 8 + 4)
#define                                 TRISB4_bit          _BIT_ACCESS(TRISB,4)
// TRISB<TRISB5>
extern volatile __bit                   TRISB5              __at(0x7C9D);	// @ (0xF93 * 8 + 5)
#define                                 TRISB5_bit          _BIT_ACCESS(TRISB,5)
// TRISB<TRISB6>
extern volatile __bit                   TRISB6              __at(0x7C9E);	// @ (0xF93 * 8 + 6)
#define                                 TRISB6_bit          _BIT_ACCESS(TRISB,6)
// TRISB<TRISB7>
extern volatile __bit                   TRISB7              __at(0x7C9F);	// @ (0xF93 * 8 + 7)
#define                                 TRISB7_bit          _BIT_ACCESS(TRISB,7)
// TRISC<TRISC0>
extern volatile __bit                   TRISC0              __at(0x7CA0);	// @ (0xF94 * 8 + 0)
#define                                 TRISC0_bit          _BIT_ACCESS(TRISC,0)
// TRISC<TRISC1>
extern volatile __bit                   TRISC1              __at(0x7CA1);	// @ (0xF94 * 8 + 1)
#define                                 TRISC1_bit          _BIT_ACCESS(TRISC,1)
// TRISC<TRISC2>
extern volatile __bit                   TRISC2              __at(0x7CA2);	// @ (0xF94 * 8 + 2)
#define                                 TRISC2_bit          _BIT_ACCESS(TRISC,2)
// TRISC<TRISC3>
extern volatile __bit                   TRISC3              __at(0x7CA3);	// @ (0xF94 * 8 + 3)
#define                                 TRISC3_bit          _BIT_ACCESS(TRISC,3)
// TRISC<TRISC4>
extern volatile __bit                   TRISC4              __at(0x7CA4);	// @ (0xF94 * 8 + 4)
#define                                 TRISC4_bit          _BIT_ACCESS(TRISC,4)
// TRISC<TRISC5>
extern volatile __bit                   TRISC5              __at(0x7CA5);	// @ (0xF94 * 8 + 5)
#define                                 TRISC5_bit          _BIT_ACCESS(TRISC,5)
// TRISC<TRISC6>
extern volatile __bit                   TRISC6              __at(0x7CA6);	// @ (0xF94 * 8 + 6)
#define                                 TRISC6_bit          _BIT_ACCESS(TRISC,6)
// TRISC<TRISC7>
extern volatile __bit                   TRISC7              __at(0x7CA7);	// @ (0xF94 * 8 + 7)
#define                                 TRISC7_bit          _BIT_ACCESS(TRISC,7)
// TXSTA<TRMT>
extern volatile __bit                   TRMT                __at(0x7D61);	// @ (0xFAC * 8 + 1)
#define                                 TRMT_bit            _BIT_ACCESS(TXSTA,1)
// TXSTA<TRMT1>
extern volatile __bit                   TRMT1               __at(0x7D61);	// @ (0xFAC * 8 + 1)
#define                                 TRMT1_bit           _BIT_ACCESS(TXSTA,1)
// PORTC<TX>
extern volatile __bit                   TX                  __at(0x7C16);	// @ (0xF82 * 8 + 6)
#define                                 TX_bit              _BIT_ACCESS(PORTC,6)
// PIE3<TX0IE>
extern volatile __bit                   TX0IE               __at(0x7D1A);	// @ (0xFA3 * 8 + 2)
#define                                 TX0IE_bit           _BIT_ACCESS(PIE3,2)
// PIR3<TX0IF>
extern volatile __bit                   TX0IF               __at(0x7D22);	// @ (0xFA4 * 8 + 2)
#define                                 TX0IF_bit           _BIT_ACCESS(PIR3,2)
// PIE3<TX1IE>
extern volatile __bit _DEPRECATED       TX1IE               __at(0x7D1B);	// @ (0xFA3 * 8 + 3)
#define                                 TX1IE_bit           _BIT_ACCESS(PIE3,3)
// PIR3<TX1IF>
extern volatile __bit _DEPRECATED       TX1IF               __at(0x7D23);	// @ (0xFA4 * 8 + 3)
#define                                 TX1IF_bit           _BIT_ACCESS(PIR3,3)
// IPR1<TX1IP>
extern volatile __bit                   TX1IP               __at(0x7CFC);	// @ (0xF9F * 8 + 4)
#define                                 TX1IP_bit           _BIT_ACCESS(IPR1,4)
// PIE3<TX2IE>
extern volatile __bit                   TX2IE               __at(0x7D1C);	// @ (0xFA3 * 8 + 4)
#define                                 TX2IE_bit           _BIT_ACCESS(PIE3,4)
// PIR3<TX2IF>
extern volatile __bit                   TX2IF               __at(0x7D24);	// @ (0xFA4 * 8 + 4)
#define                                 TX2IF_bit           _BIT_ACCESS(PIR3,4)
// TXSTA<TX8_9>
extern volatile __bit                   TX8_9               __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 TX8_9_bit           _BIT_ACCESS(TXSTA,6)
// TXSTA<TX9>
extern volatile __bit                   TX9                 __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 TX9_bit             _BIT_ACCESS(TXSTA,6)
// TXSTA<TX91>
extern volatile __bit                   TX91                __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 TX91_bit            _BIT_ACCESS(TXSTA,6)
// TXSTA<TX9D>
extern volatile __bit                   TX9D                __at(0x7D60);	// @ (0xFAC * 8 + 0)
#define                                 TX9D_bit            _BIT_ACCESS(TXSTA,0)
// TXSTA<TX9D1>
extern volatile __bit                   TX9D1               __at(0x7D60);	// @ (0xFAC * 8 + 0)
#define                                 TX9D1_bit           _BIT_ACCESS(TXSTA,0)
// TXB0CON<TXB0ABT>
extern volatile __bit                   TXB0ABT             __at(0x7A06);	// @ (0xF40 * 8 + 6)
#define                                 TXB0ABT_bit         _BIT_ACCESS(TXB0CON,6)
// TXB0D0<TXB0D00>
extern volatile __bit                   TXB0D00             __at(0x7A30);	// @ (0xF46 * 8 + 0)
#define                                 TXB0D00_bit         _BIT_ACCESS(TXB0D0,0)
// TXB0D0<TXB0D01>
extern volatile __bit                   TXB0D01             __at(0x7A31);	// @ (0xF46 * 8 + 1)
#define                                 TXB0D01_bit         _BIT_ACCESS(TXB0D0,1)
// TXB0D0<TXB0D02>
extern volatile __bit                   TXB0D02             __at(0x7A32);	// @ (0xF46 * 8 + 2)
#define                                 TXB0D02_bit         _BIT_ACCESS(TXB0D0,2)
// TXB0D0<TXB0D03>
extern volatile __bit                   TXB0D03             __at(0x7A33);	// @ (0xF46 * 8 + 3)
#define                                 TXB0D03_bit         _BIT_ACCESS(TXB0D0,3)
// TXB0D0<TXB0D04>
extern volatile __bit                   TXB0D04             __at(0x7A34);	// @ (0xF46 * 8 + 4)
#define                                 TXB0D04_bit         _BIT_ACCESS(TXB0D0,4)
// TXB0D0<TXB0D05>
extern volatile __bit                   TXB0D05             __at(0x7A35);	// @ (0xF46 * 8 + 5)
#define                                 TXB0D05_bit         _BIT_ACCESS(TXB0D0,5)
// TXB0D0<TXB0D06>
extern volatile __bit                   TXB0D06             __at(0x7A36);	// @ (0xF46 * 8 + 6)
#define                                 TXB0D06_bit         _BIT_ACCESS(TXB0D0,6)
// TXB0D0<TXB0D07>
extern volatile __bit                   TXB0D07             __at(0x7A37);	// @ (0xF46 * 8 + 7)
#define                                 TXB0D07_bit         _BIT_ACCESS(TXB0D0,7)
// TXB0D1<TXB0D10>
extern volatile __bit                   TXB0D10             __at(0x7A38);	// @ (0xF47 * 8 + 0)
#define                                 TXB0D10_bit         _BIT_ACCESS(TXB0D1,0)
// TXB0D1<TXB0D11>
extern volatile __bit                   TXB0D11             __at(0x7A39);	// @ (0xF47 * 8 + 1)
#define                                 TXB0D11_bit         _BIT_ACCESS(TXB0D1,1)
// TXB0D1<TXB0D12>
extern volatile __bit                   TXB0D12             __at(0x7A3A);	// @ (0xF47 * 8 + 2)
#define                                 TXB0D12_bit         _BIT_ACCESS(TXB0D1,2)
// TXB0D1<TXB0D13>
extern volatile __bit                   TXB0D13             __at(0x7A3B);	// @ (0xF47 * 8 + 3)
#define                                 TXB0D13_bit         _BIT_ACCESS(TXB0D1,3)
// TXB0D1<TXB0D14>
extern volatile __bit                   TXB0D14             __at(0x7A3C);	// @ (0xF47 * 8 + 4)
#define                                 TXB0D14_bit         _BIT_ACCESS(TXB0D1,4)
// TXB0D1<TXB0D15>
extern volatile __bit                   TXB0D15             __at(0x7A3D);	// @ (0xF47 * 8 + 5)
#define                                 TXB0D15_bit         _BIT_ACCESS(TXB0D1,5)
// TXB0D1<TXB0D16>
extern volatile __bit                   TXB0D16             __at(0x7A3E);	// @ (0xF47 * 8 + 6)
#define                                 TXB0D16_bit         _BIT_ACCESS(TXB0D1,6)
// TXB0D1<TXB0D17>
extern volatile __bit                   TXB0D17             __at(0x7A3F);	// @ (0xF47 * 8 + 7)
#define                                 TXB0D17_bit         _BIT_ACCESS(TXB0D1,7)
// TXB0D2<TXB0D20>
extern volatile __bit                   TXB0D20             __at(0x7A40);	// @ (0xF48 * 8 + 0)
#define                                 TXB0D20_bit         _BIT_ACCESS(TXB0D2,0)
// TXB0D2<TXB0D21>
extern volatile __bit                   TXB0D21             __at(0x7A41);	// @ (0xF48 * 8 + 1)
#define                                 TXB0D21_bit         _BIT_ACCESS(TXB0D2,1)
// TXB0D2<TXB0D22>
extern volatile __bit                   TXB0D22             __at(0x7A42);	// @ (0xF48 * 8 + 2)
#define                                 TXB0D22_bit         _BIT_ACCESS(TXB0D2,2)
// TXB0D2<TXB0D23>
extern volatile __bit                   TXB0D23             __at(0x7A43);	// @ (0xF48 * 8 + 3)
#define                                 TXB0D23_bit         _BIT_ACCESS(TXB0D2,3)
// TXB0D2<TXB0D24>
extern volatile __bit                   TXB0D24             __at(0x7A44);	// @ (0xF48 * 8 + 4)
#define                                 TXB0D24_bit         _BIT_ACCESS(TXB0D2,4)
// TXB0D2<TXB0D25>
extern volatile __bit                   TXB0D25             __at(0x7A45);	// @ (0xF48 * 8 + 5)
#define                                 TXB0D25_bit         _BIT_ACCESS(TXB0D2,5)
// TXB0D2<TXB0D26>
extern volatile __bit                   TXB0D26             __at(0x7A46);	// @ (0xF48 * 8 + 6)
#define                                 TXB0D26_bit         _BIT_ACCESS(TXB0D2,6)
// TXB0D2<TXB0D27>
extern volatile __bit                   TXB0D27             __at(0x7A47);	// @ (0xF48 * 8 + 7)
#define                                 TXB0D27_bit         _BIT_ACCESS(TXB0D2,7)
// TXB0D3<TXB0D30>
extern volatile __bit                   TXB0D30             __at(0x7A48);	// @ (0xF49 * 8 + 0)
#define                                 TXB0D30_bit         _BIT_ACCESS(TXB0D3,0)
// TXB0D3<TXB0D31>
extern volatile __bit                   TXB0D31             __at(0x7A49);	// @ (0xF49 * 8 + 1)
#define                                 TXB0D31_bit         _BIT_ACCESS(TXB0D3,1)
// TXB0D3<TXB0D32>
extern volatile __bit                   TXB0D32             __at(0x7A4A);	// @ (0xF49 * 8 + 2)
#define                                 TXB0D32_bit         _BIT_ACCESS(TXB0D3,2)
// TXB0D3<TXB0D33>
extern volatile __bit                   TXB0D33             __at(0x7A4B);	// @ (0xF49 * 8 + 3)
#define                                 TXB0D33_bit         _BIT_ACCESS(TXB0D3,3)
// TXB0D3<TXB0D34>
extern volatile __bit                   TXB0D34             __at(0x7A4C);	// @ (0xF49 * 8 + 4)
#define                                 TXB0D34_bit         _BIT_ACCESS(TXB0D3,4)
// TXB0D3<TXB0D35>
extern volatile __bit                   TXB0D35             __at(0x7A4D);	// @ (0xF49 * 8 + 5)
#define                                 TXB0D35_bit         _BIT_ACCESS(TXB0D3,5)
// TXB0D3<TXB0D36>
extern volatile __bit                   TXB0D36             __at(0x7A4E);	// @ (0xF49 * 8 + 6)
#define                                 TXB0D36_bit         _BIT_ACCESS(TXB0D3,6)
// TXB0D3<TXB0D37>
extern volatile __bit                   TXB0D37             __at(0x7A4F);	// @ (0xF49 * 8 + 7)
#define                                 TXB0D37_bit         _BIT_ACCESS(TXB0D3,7)
// TXB0D4<TXB0D40>
extern volatile __bit                   TXB0D40             __at(0x7A50);	// @ (0xF4A * 8 + 0)
#define                                 TXB0D40_bit         _BIT_ACCESS(TXB0D4,0)
// TXB0D4<TXB0D41>
extern volatile __bit                   TXB0D41             __at(0x7A51);	// @ (0xF4A * 8 + 1)
#define                                 TXB0D41_bit         _BIT_ACCESS(TXB0D4,1)
// TXB0D4<TXB0D42>
extern volatile __bit                   TXB0D42             __at(0x7A52);	// @ (0xF4A * 8 + 2)
#define                                 TXB0D42_bit         _BIT_ACCESS(TXB0D4,2)
// TXB0D4<TXB0D43>
extern volatile __bit                   TXB0D43             __at(0x7A53);	// @ (0xF4A * 8 + 3)
#define                                 TXB0D43_bit         _BIT_ACCESS(TXB0D4,3)
// TXB0D4<TXB0D44>
extern volatile __bit                   TXB0D44             __at(0x7A54);	// @ (0xF4A * 8 + 4)
#define                                 TXB0D44_bit         _BIT_ACCESS(TXB0D4,4)
// TXB0D4<TXB0D45>
extern volatile __bit                   TXB0D45             __at(0x7A55);	// @ (0xF4A * 8 + 5)
#define                                 TXB0D45_bit         _BIT_ACCESS(TXB0D4,5)
// TXB0D4<TXB0D46>
extern volatile __bit                   TXB0D46             __at(0x7A56);	// @ (0xF4A * 8 + 6)
#define                                 TXB0D46_bit         _BIT_ACCESS(TXB0D4,6)
// TXB0D4<TXB0D47>
extern volatile __bit                   TXB0D47             __at(0x7A57);	// @ (0xF4A * 8 + 7)
#define                                 TXB0D47_bit         _BIT_ACCESS(TXB0D4,7)
// TXB0D5<TXB0D50>
extern volatile __bit                   TXB0D50             __at(0x7A58);	// @ (0xF4B * 8 + 0)
#define                                 TXB0D50_bit         _BIT_ACCESS(TXB0D5,0)
// TXB0D5<TXB0D51>
extern volatile __bit                   TXB0D51             __at(0x7A59);	// @ (0xF4B * 8 + 1)
#define                                 TXB0D51_bit         _BIT_ACCESS(TXB0D5,1)
// TXB0D5<TXB0D52>
extern volatile __bit                   TXB0D52             __at(0x7A5A);	// @ (0xF4B * 8 + 2)
#define                                 TXB0D52_bit         _BIT_ACCESS(TXB0D5,2)
// TXB0D5<TXB0D53>
extern volatile __bit                   TXB0D53             __at(0x7A5B);	// @ (0xF4B * 8 + 3)
#define                                 TXB0D53_bit         _BIT_ACCESS(TXB0D5,3)
// TXB0D5<TXB0D54>
extern volatile __bit                   TXB0D54             __at(0x7A5C);	// @ (0xF4B * 8 + 4)
#define                                 TXB0D54_bit         _BIT_ACCESS(TXB0D5,4)
// TXB0D5<TXB0D55>
extern volatile __bit                   TXB0D55             __at(0x7A5D);	// @ (0xF4B * 8 + 5)
#define                                 TXB0D55_bit         _BIT_ACCESS(TXB0D5,5)
// TXB0D5<TXB0D56>
extern volatile __bit                   TXB0D56             __at(0x7A5E);	// @ (0xF4B * 8 + 6)
#define                                 TXB0D56_bit         _BIT_ACCESS(TXB0D5,6)
// TXB0D5<TXB0D57>
extern volatile __bit                   TXB0D57             __at(0x7A5F);	// @ (0xF4B * 8 + 7)
#define                                 TXB0D57_bit         _BIT_ACCESS(TXB0D5,7)
// TXB0D6<TXB0D60>
extern volatile __bit                   TXB0D60             __at(0x7A60);	// @ (0xF4C * 8 + 0)
#define                                 TXB0D60_bit         _BIT_ACCESS(TXB0D6,0)
// TXB0D6<TXB0D61>
extern volatile __bit                   TXB0D61             __at(0x7A61);	// @ (0xF4C * 8 + 1)
#define                                 TXB0D61_bit         _BIT_ACCESS(TXB0D6,1)
// TXB0D6<TXB0D62>
extern volatile __bit                   TXB0D62             __at(0x7A62);	// @ (0xF4C * 8 + 2)
#define                                 TXB0D62_bit         _BIT_ACCESS(TXB0D6,2)
// TXB0D6<TXB0D63>
extern volatile __bit                   TXB0D63             __at(0x7A63);	// @ (0xF4C * 8 + 3)
#define                                 TXB0D63_bit         _BIT_ACCESS(TXB0D6,3)
// TXB0D6<TXB0D64>
extern volatile __bit                   TXB0D64             __at(0x7A64);	// @ (0xF4C * 8 + 4)
#define                                 TXB0D64_bit         _BIT_ACCESS(TXB0D6,4)
// TXB0D6<TXB0D65>
extern volatile __bit                   TXB0D65             __at(0x7A65);	// @ (0xF4C * 8 + 5)
#define                                 TXB0D65_bit         _BIT_ACCESS(TXB0D6,5)
// TXB0D6<TXB0D66>
extern volatile __bit                   TXB0D66             __at(0x7A66);	// @ (0xF4C * 8 + 6)
#define                                 TXB0D66_bit         _BIT_ACCESS(TXB0D6,6)
// TXB0D6<TXB0D67>
extern volatile __bit                   TXB0D67             __at(0x7A67);	// @ (0xF4C * 8 + 7)
#define                                 TXB0D67_bit         _BIT_ACCESS(TXB0D6,7)
// TXB0D7<TXB0D70>
extern volatile __bit                   TXB0D70             __at(0x7A68);	// @ (0xF4D * 8 + 0)
#define                                 TXB0D70_bit         _BIT_ACCESS(TXB0D7,0)
// TXB0D7<TXB0D71>
extern volatile __bit                   TXB0D71             __at(0x7A69);	// @ (0xF4D * 8 + 1)
#define                                 TXB0D71_bit         _BIT_ACCESS(TXB0D7,1)
// TXB0D7<TXB0D72>
extern volatile __bit                   TXB0D72             __at(0x7A6A);	// @ (0xF4D * 8 + 2)
#define                                 TXB0D72_bit         _BIT_ACCESS(TXB0D7,2)
// TXB0D7<TXB0D73>
extern volatile __bit                   TXB0D73             __at(0x7A6B);	// @ (0xF4D * 8 + 3)
#define                                 TXB0D73_bit         _BIT_ACCESS(TXB0D7,3)
// TXB0D7<TXB0D74>
extern volatile __bit                   TXB0D74             __at(0x7A6C);	// @ (0xF4D * 8 + 4)
#define                                 TXB0D74_bit         _BIT_ACCESS(TXB0D7,4)
// TXB0D7<TXB0D75>
extern volatile __bit                   TXB0D75             __at(0x7A6D);	// @ (0xF4D * 8 + 5)
#define                                 TXB0D75_bit         _BIT_ACCESS(TXB0D7,5)
// TXB0D7<TXB0D76>
extern volatile __bit                   TXB0D76             __at(0x7A6E);	// @ (0xF4D * 8 + 6)
#define                                 TXB0D76_bit         _BIT_ACCESS(TXB0D7,6)
// TXB0D7<TXB0D77>
extern volatile __bit                   TXB0D77             __at(0x7A6F);	// @ (0xF4D * 8 + 7)
#define                                 TXB0D77_bit         _BIT_ACCESS(TXB0D7,7)
// TXB0DLC<TXB0DLC0>
extern volatile __bit                   TXB0DLC0            __at(0x7A28);	// @ (0xF45 * 8 + 0)
#define                                 TXB0DLC0_bit        _BIT_ACCESS(TXB0DLC,0)
// TXB0DLC<TXB0DLC1>
extern volatile __bit                   TXB0DLC1            __at(0x7A29);	// @ (0xF45 * 8 + 1)
#define                                 TXB0DLC1_bit        _BIT_ACCESS(TXB0DLC,1)
// TXB0DLC<TXB0DLC2>
extern volatile __bit                   TXB0DLC2            __at(0x7A2A);	// @ (0xF45 * 8 + 2)
#define                                 TXB0DLC2_bit        _BIT_ACCESS(TXB0DLC,2)
// TXB0DLC<TXB0DLC3>
extern volatile __bit                   TXB0DLC3            __at(0x7A2B);	// @ (0xF45 * 8 + 3)
#define                                 TXB0DLC3_bit        _BIT_ACCESS(TXB0DLC,3)
// TXB0EIDL<TXB0EID0>
extern volatile __bit                   TXB0EID0            __at(0x7A20);	// @ (0xF44 * 8 + 0)
#define                                 TXB0EID0_bit        _BIT_ACCESS(TXB0EIDL,0)
// TXB0EIDL<TXB0EID1>
extern volatile __bit                   TXB0EID1            __at(0x7A21);	// @ (0xF44 * 8 + 1)
#define                                 TXB0EID1_bit        _BIT_ACCESS(TXB0EIDL,1)
// TXB0EIDH<TXB0EID10>
extern volatile __bit                   TXB0EID10           __at(0x7A1A);	// @ (0xF43 * 8 + 2)
#define                                 TXB0EID10_bit       _BIT_ACCESS(TXB0EIDH,2)
// TXB0EIDH<TXB0EID11>
extern volatile __bit                   TXB0EID11           __at(0x7A1B);	// @ (0xF43 * 8 + 3)
#define                                 TXB0EID11_bit       _BIT_ACCESS(TXB0EIDH,3)
// TXB0EIDH<TXB0EID12>
extern volatile __bit                   TXB0EID12           __at(0x7A1C);	// @ (0xF43 * 8 + 4)
#define                                 TXB0EID12_bit       _BIT_ACCESS(TXB0EIDH,4)
// TXB0EIDH<TXB0EID13>
extern volatile __bit                   TXB0EID13           __at(0x7A1D);	// @ (0xF43 * 8 + 5)
#define                                 TXB0EID13_bit       _BIT_ACCESS(TXB0EIDH,5)
// TXB0EIDH<TXB0EID14>
extern volatile __bit                   TXB0EID14           __at(0x7A1E);	// @ (0xF43 * 8 + 6)
#define                                 TXB0EID14_bit       _BIT_ACCESS(TXB0EIDH,6)
// TXB0EIDH<TXB0EID15>
extern volatile __bit                   TXB0EID15           __at(0x7A1F);	// @ (0xF43 * 8 + 7)
#define                                 TXB0EID15_bit       _BIT_ACCESS(TXB0EIDH,7)
// TXB0SIDL<TXB0EID16>
extern volatile __bit                   TXB0EID16           __at(0x7A10);	// @ (0xF42 * 8 + 0)
#define                                 TXB0EID16_bit       _BIT_ACCESS(TXB0SIDL,0)
// TXB0SIDL<TXB0EID17>
extern volatile __bit                   TXB0EID17           __at(0x7A11);	// @ (0xF42 * 8 + 1)
#define                                 TXB0EID17_bit       _BIT_ACCESS(TXB0SIDL,1)
// TXB0EIDL<TXB0EID2>
extern volatile __bit                   TXB0EID2            __at(0x7A22);	// @ (0xF44 * 8 + 2)
#define                                 TXB0EID2_bit        _BIT_ACCESS(TXB0EIDL,2)
// TXB0EIDL<TXB0EID3>
extern volatile __bit                   TXB0EID3            __at(0x7A23);	// @ (0xF44 * 8 + 3)
#define                                 TXB0EID3_bit        _BIT_ACCESS(TXB0EIDL,3)
// TXB0EIDL<TXB0EID4>
extern volatile __bit                   TXB0EID4            __at(0x7A24);	// @ (0xF44 * 8 + 4)
#define                                 TXB0EID4_bit        _BIT_ACCESS(TXB0EIDL,4)
// TXB0EIDL<TXB0EID5>
extern volatile __bit                   TXB0EID5            __at(0x7A25);	// @ (0xF44 * 8 + 5)
#define                                 TXB0EID5_bit        _BIT_ACCESS(TXB0EIDL,5)
// TXB0EIDL<TXB0EID6>
extern volatile __bit                   TXB0EID6            __at(0x7A26);	// @ (0xF44 * 8 + 6)
#define                                 TXB0EID6_bit        _BIT_ACCESS(TXB0EIDL,6)
// TXB0EIDL<TXB0EID7>
extern volatile __bit                   TXB0EID7            __at(0x7A27);	// @ (0xF44 * 8 + 7)
#define                                 TXB0EID7_bit        _BIT_ACCESS(TXB0EIDL,7)
// TXB0EIDH<TXB0EID8>
extern volatile __bit                   TXB0EID8            __at(0x7A18);	// @ (0xF43 * 8 + 0)
#define                                 TXB0EID8_bit        _BIT_ACCESS(TXB0EIDH,0)
// TXB0EIDH<TXB0EID9>
extern volatile __bit                   TXB0EID9            __at(0x7A19);	// @ (0xF43 * 8 + 1)
#define                                 TXB0EID9_bit        _BIT_ACCESS(TXB0EIDH,1)
// TXB0CON<TXB0ERR>
extern volatile __bit                   TXB0ERR             __at(0x7A04);	// @ (0xF40 * 8 + 4)
#define                                 TXB0ERR_bit         _BIT_ACCESS(TXB0CON,4)
// TXB0SIDL<TXB0EXIDE>
extern volatile __bit                   TXB0EXIDE           __at(0x7A13);	// @ (0xF42 * 8 + 3)
#define                                 TXB0EXIDE_bit       _BIT_ACCESS(TXB0SIDL,3)
// PIE3<TXB0IE>
extern volatile __bit                   TXB0IE              __at(0x7D1A);	// @ (0xFA3 * 8 + 2)
#define                                 TXB0IE_bit          _BIT_ACCESS(PIE3,2)
// PIR3<TXB0IF>
extern volatile __bit                   TXB0IF              __at(0x7D22);	// @ (0xFA4 * 8 + 2)
#define                                 TXB0IF_bit          _BIT_ACCESS(PIR3,2)
// IPR3<TXB0IP>
extern volatile __bit                   TXB0IP              __at(0x7D2A);	// @ (0xFA5 * 8 + 2)
#define                                 TXB0IP_bit          _BIT_ACCESS(IPR3,2)
// TXB0CON<TXB0LARB>
extern volatile __bit                   TXB0LARB            __at(0x7A05);	// @ (0xF40 * 8 + 5)
#define                                 TXB0LARB_bit        _BIT_ACCESS(TXB0CON,5)
// TXB0CON<TXB0PRI0>
extern volatile __bit                   TXB0PRI0            __at(0x7A00);	// @ (0xF40 * 8 + 0)
#define                                 TXB0PRI0_bit        _BIT_ACCESS(TXB0CON,0)
// TXB0CON<TXB0PRI1>
extern volatile __bit                   TXB0PRI1            __at(0x7A01);	// @ (0xF40 * 8 + 1)
#define                                 TXB0PRI1_bit        _BIT_ACCESS(TXB0CON,1)
// TXB0CON<TXB0REQ>
extern volatile __bit                   TXB0REQ             __at(0x7A03);	// @ (0xF40 * 8 + 3)
#define                                 TXB0REQ_bit         _BIT_ACCESS(TXB0CON,3)
// TXB0DLC<TXB0RTR>
extern volatile __bit                   TXB0RTR             __at(0x7A2E);	// @ (0xF45 * 8 + 6)
#define                                 TXB0RTR_bit         _BIT_ACCESS(TXB0DLC,6)
// TXB0SIDL<TXB0SID0>
extern volatile __bit                   TXB0SID0            __at(0x7A15);	// @ (0xF42 * 8 + 5)
#define                                 TXB0SID0_bit        _BIT_ACCESS(TXB0SIDL,5)
// TXB0SIDL<TXB0SID1>
extern volatile __bit                   TXB0SID1            __at(0x7A16);	// @ (0xF42 * 8 + 6)
#define                                 TXB0SID1_bit        _BIT_ACCESS(TXB0SIDL,6)
// TXB0SIDH<TXB0SID10>
extern volatile __bit                   TXB0SID10           __at(0x7A0F);	// @ (0xF41 * 8 + 7)
#define                                 TXB0SID10_bit       _BIT_ACCESS(TXB0SIDH,7)
// TXB0SIDL<TXB0SID2>
extern volatile __bit                   TXB0SID2            __at(0x7A17);	// @ (0xF42 * 8 + 7)
#define                                 TXB0SID2_bit        _BIT_ACCESS(TXB0SIDL,7)
// TXB0SIDH<TXB0SID3>
extern volatile __bit                   TXB0SID3            __at(0x7A08);	// @ (0xF41 * 8 + 0)
#define                                 TXB0SID3_bit        _BIT_ACCESS(TXB0SIDH,0)
// TXB0SIDH<TXB0SID4>
extern volatile __bit                   TXB0SID4            __at(0x7A09);	// @ (0xF41 * 8 + 1)
#define                                 TXB0SID4_bit        _BIT_ACCESS(TXB0SIDH,1)
// TXB0SIDH<TXB0SID5>
extern volatile __bit                   TXB0SID5            __at(0x7A0A);	// @ (0xF41 * 8 + 2)
#define                                 TXB0SID5_bit        _BIT_ACCESS(TXB0SIDH,2)
// TXB0SIDH<TXB0SID6>
extern volatile __bit                   TXB0SID6            __at(0x7A0B);	// @ (0xF41 * 8 + 3)
#define                                 TXB0SID6_bit        _BIT_ACCESS(TXB0SIDH,3)
// TXB0SIDH<TXB0SID7>
extern volatile __bit                   TXB0SID7            __at(0x7A0C);	// @ (0xF41 * 8 + 4)
#define                                 TXB0SID7_bit        _BIT_ACCESS(TXB0SIDH,4)
// TXB0SIDH<TXB0SID8>
extern volatile __bit                   TXB0SID8            __at(0x7A0D);	// @ (0xF41 * 8 + 5)
#define                                 TXB0SID8_bit        _BIT_ACCESS(TXB0SIDH,5)
// TXB0SIDH<TXB0SID9>
extern volatile __bit                   TXB0SID9            __at(0x7A0E);	// @ (0xF41 * 8 + 6)
#define                                 TXB0SID9_bit        _BIT_ACCESS(TXB0SIDH,6)
// TXB1CON<TXB1ABT>
extern volatile __bit                   TXB1ABT             __at(0x7986);	// @ (0xF30 * 8 + 6)
#define                                 TXB1ABT_bit         _BIT_ACCESS(TXB1CON,6)
// TXB1D0<TXB1D00>
extern volatile __bit                   TXB1D00             __at(0x79B0);	// @ (0xF36 * 8 + 0)
#define                                 TXB1D00_bit         _BIT_ACCESS(TXB1D0,0)
// TXB1D0<TXB1D01>
extern volatile __bit                   TXB1D01             __at(0x79B1);	// @ (0xF36 * 8 + 1)
#define                                 TXB1D01_bit         _BIT_ACCESS(TXB1D0,1)
// TXB1D0<TXB1D02>
extern volatile __bit                   TXB1D02             __at(0x79B2);	// @ (0xF36 * 8 + 2)
#define                                 TXB1D02_bit         _BIT_ACCESS(TXB1D0,2)
// TXB1D0<TXB1D03>
extern volatile __bit                   TXB1D03             __at(0x79B3);	// @ (0xF36 * 8 + 3)
#define                                 TXB1D03_bit         _BIT_ACCESS(TXB1D0,3)
// TXB1D0<TXB1D04>
extern volatile __bit                   TXB1D04             __at(0x79B4);	// @ (0xF36 * 8 + 4)
#define                                 TXB1D04_bit         _BIT_ACCESS(TXB1D0,4)
// TXB1D0<TXB1D05>
extern volatile __bit                   TXB1D05             __at(0x79B5);	// @ (0xF36 * 8 + 5)
#define                                 TXB1D05_bit         _BIT_ACCESS(TXB1D0,5)
// TXB1D0<TXB1D06>
extern volatile __bit                   TXB1D06             __at(0x79B6);	// @ (0xF36 * 8 + 6)
#define                                 TXB1D06_bit         _BIT_ACCESS(TXB1D0,6)
// TXB1D0<TXB1D07>
extern volatile __bit                   TXB1D07             __at(0x79B7);	// @ (0xF36 * 8 + 7)
#define                                 TXB1D07_bit         _BIT_ACCESS(TXB1D0,7)
// TXB1D1<TXB1D10>
extern volatile __bit                   TXB1D10             __at(0x79B8);	// @ (0xF37 * 8 + 0)
#define                                 TXB1D10_bit         _BIT_ACCESS(TXB1D1,0)
// TXB1D1<TXB1D11>
extern volatile __bit                   TXB1D11             __at(0x79B9);	// @ (0xF37 * 8 + 1)
#define                                 TXB1D11_bit         _BIT_ACCESS(TXB1D1,1)
// TXB1D1<TXB1D12>
extern volatile __bit                   TXB1D12             __at(0x79BA);	// @ (0xF37 * 8 + 2)
#define                                 TXB1D12_bit         _BIT_ACCESS(TXB1D1,2)
// TXB1D1<TXB1D13>
extern volatile __bit                   TXB1D13             __at(0x79BB);	// @ (0xF37 * 8 + 3)
#define                                 TXB1D13_bit         _BIT_ACCESS(TXB1D1,3)
// TXB1D1<TXB1D14>
extern volatile __bit                   TXB1D14             __at(0x79BC);	// @ (0xF37 * 8 + 4)
#define                                 TXB1D14_bit         _BIT_ACCESS(TXB1D1,4)
// TXB1D1<TXB1D15>
extern volatile __bit                   TXB1D15             __at(0x79BD);	// @ (0xF37 * 8 + 5)
#define                                 TXB1D15_bit         _BIT_ACCESS(TXB1D1,5)
// TXB1D1<TXB1D16>
extern volatile __bit                   TXB1D16             __at(0x79BE);	// @ (0xF37 * 8 + 6)
#define                                 TXB1D16_bit         _BIT_ACCESS(TXB1D1,6)
// TXB1D1<TXB1D17>
extern volatile __bit                   TXB1D17             __at(0x79BF);	// @ (0xF37 * 8 + 7)
#define                                 TXB1D17_bit         _BIT_ACCESS(TXB1D1,7)
// TXB1D2<TXB1D20>
extern volatile __bit                   TXB1D20             __at(0x79C0);	// @ (0xF38 * 8 + 0)
#define                                 TXB1D20_bit         _BIT_ACCESS(TXB1D2,0)
// TXB1D2<TXB1D21>
extern volatile __bit                   TXB1D21             __at(0x79C1);	// @ (0xF38 * 8 + 1)
#define                                 TXB1D21_bit         _BIT_ACCESS(TXB1D2,1)
// TXB1D2<TXB1D22>
extern volatile __bit                   TXB1D22             __at(0x79C2);	// @ (0xF38 * 8 + 2)
#define                                 TXB1D22_bit         _BIT_ACCESS(TXB1D2,2)
// TXB1D2<TXB1D23>
extern volatile __bit                   TXB1D23             __at(0x79C3);	// @ (0xF38 * 8 + 3)
#define                                 TXB1D23_bit         _BIT_ACCESS(TXB1D2,3)
// TXB1D2<TXB1D24>
extern volatile __bit                   TXB1D24             __at(0x79C4);	// @ (0xF38 * 8 + 4)
#define                                 TXB1D24_bit         _BIT_ACCESS(TXB1D2,4)
// TXB1D2<TXB1D25>
extern volatile __bit                   TXB1D25             __at(0x79C5);	// @ (0xF38 * 8 + 5)
#define                                 TXB1D25_bit         _BIT_ACCESS(TXB1D2,5)
// TXB1D2<TXB1D26>
extern volatile __bit                   TXB1D26             __at(0x79C6);	// @ (0xF38 * 8 + 6)
#define                                 TXB1D26_bit         _BIT_ACCESS(TXB1D2,6)
// TXB1D2<TXB1D27>
extern volatile __bit                   TXB1D27             __at(0x79C7);	// @ (0xF38 * 8 + 7)
#define                                 TXB1D27_bit         _BIT_ACCESS(TXB1D2,7)
// TXB1D3<TXB1D30>
extern volatile __bit                   TXB1D30             __at(0x79C8);	// @ (0xF39 * 8 + 0)
#define                                 TXB1D30_bit         _BIT_ACCESS(TXB1D3,0)
// TXB1D3<TXB1D31>
extern volatile __bit                   TXB1D31             __at(0x79C9);	// @ (0xF39 * 8 + 1)
#define                                 TXB1D31_bit         _BIT_ACCESS(TXB1D3,1)
// TXB1D3<TXB1D32>
extern volatile __bit                   TXB1D32             __at(0x79CA);	// @ (0xF39 * 8 + 2)
#define                                 TXB1D32_bit         _BIT_ACCESS(TXB1D3,2)
// TXB1D3<TXB1D33>
extern volatile __bit                   TXB1D33             __at(0x79CB);	// @ (0xF39 * 8 + 3)
#define                                 TXB1D33_bit         _BIT_ACCESS(TXB1D3,3)
// TXB1D3<TXB1D34>
extern volatile __bit                   TXB1D34             __at(0x79CC);	// @ (0xF39 * 8 + 4)
#define                                 TXB1D34_bit         _BIT_ACCESS(TXB1D3,4)
// TXB1D3<TXB1D35>
extern volatile __bit                   TXB1D35             __at(0x79CD);	// @ (0xF39 * 8 + 5)
#define                                 TXB1D35_bit         _BIT_ACCESS(TXB1D3,5)
// TXB1D3<TXB1D36>
extern volatile __bit                   TXB1D36             __at(0x79CE);	// @ (0xF39 * 8 + 6)
#define                                 TXB1D36_bit         _BIT_ACCESS(TXB1D3,6)
// TXB1D3<TXB1D37>
extern volatile __bit                   TXB1D37             __at(0x79CF);	// @ (0xF39 * 8 + 7)
#define                                 TXB1D37_bit         _BIT_ACCESS(TXB1D3,7)
// TXB1D4<TXB1D40>
extern volatile __bit                   TXB1D40             __at(0x79D0);	// @ (0xF3A * 8 + 0)
#define                                 TXB1D40_bit         _BIT_ACCESS(TXB1D4,0)
// TXB1D4<TXB1D41>
extern volatile __bit                   TXB1D41             __at(0x79D1);	// @ (0xF3A * 8 + 1)
#define                                 TXB1D41_bit         _BIT_ACCESS(TXB1D4,1)
// TXB1D4<TXB1D42>
extern volatile __bit                   TXB1D42             __at(0x79D2);	// @ (0xF3A * 8 + 2)
#define                                 TXB1D42_bit         _BIT_ACCESS(TXB1D4,2)
// TXB1D4<TXB1D43>
extern volatile __bit                   TXB1D43             __at(0x79D3);	// @ (0xF3A * 8 + 3)
#define                                 TXB1D43_bit         _BIT_ACCESS(TXB1D4,3)
// TXB1D4<TXB1D44>
extern volatile __bit                   TXB1D44             __at(0x79D4);	// @ (0xF3A * 8 + 4)
#define                                 TXB1D44_bit         _BIT_ACCESS(TXB1D4,4)
// TXB1D4<TXB1D45>
extern volatile __bit                   TXB1D45             __at(0x79D5);	// @ (0xF3A * 8 + 5)
#define                                 TXB1D45_bit         _BIT_ACCESS(TXB1D4,5)
// TXB1D4<TXB1D46>
extern volatile __bit                   TXB1D46             __at(0x79D6);	// @ (0xF3A * 8 + 6)
#define                                 TXB1D46_bit         _BIT_ACCESS(TXB1D4,6)
// TXB1D4<TXB1D47>
extern volatile __bit                   TXB1D47             __at(0x79D7);	// @ (0xF3A * 8 + 7)
#define                                 TXB1D47_bit         _BIT_ACCESS(TXB1D4,7)
// TXB1D5<TXB1D50>
extern volatile __bit                   TXB1D50             __at(0x79D8);	// @ (0xF3B * 8 + 0)
#define                                 TXB1D50_bit         _BIT_ACCESS(TXB1D5,0)
// TXB1D5<TXB1D51>
extern volatile __bit                   TXB1D51             __at(0x79D9);	// @ (0xF3B * 8 + 1)
#define                                 TXB1D51_bit         _BIT_ACCESS(TXB1D5,1)
// TXB1D5<TXB1D52>
extern volatile __bit                   TXB1D52             __at(0x79DA);	// @ (0xF3B * 8 + 2)
#define                                 TXB1D52_bit         _BIT_ACCESS(TXB1D5,2)
// TXB1D5<TXB1D53>
extern volatile __bit                   TXB1D53             __at(0x79DB);	// @ (0xF3B * 8 + 3)
#define                                 TXB1D53_bit         _BIT_ACCESS(TXB1D5,3)
// TXB1D5<TXB1D54>
extern volatile __bit                   TXB1D54             __at(0x79DC);	// @ (0xF3B * 8 + 4)
#define                                 TXB1D54_bit         _BIT_ACCESS(TXB1D5,4)
// TXB1D5<TXB1D55>
extern volatile __bit                   TXB1D55             __at(0x79DD);	// @ (0xF3B * 8 + 5)
#define                                 TXB1D55_bit         _BIT_ACCESS(TXB1D5,5)
// TXB1D5<TXB1D56>
extern volatile __bit                   TXB1D56             __at(0x79DE);	// @ (0xF3B * 8 + 6)
#define                                 TXB1D56_bit         _BIT_ACCESS(TXB1D5,6)
// TXB1D5<TXB1D57>
extern volatile __bit                   TXB1D57             __at(0x79DF);	// @ (0xF3B * 8 + 7)
#define                                 TXB1D57_bit         _BIT_ACCESS(TXB1D5,7)
// TXB1D6<TXB1D60>
extern volatile __bit                   TXB1D60             __at(0x79E0);	// @ (0xF3C * 8 + 0)
#define                                 TXB1D60_bit         _BIT_ACCESS(TXB1D6,0)
// TXB1D6<TXB1D61>
extern volatile __bit                   TXB1D61             __at(0x79E1);	// @ (0xF3C * 8 + 1)
#define                                 TXB1D61_bit         _BIT_ACCESS(TXB1D6,1)
// TXB1D6<TXB1D62>
extern volatile __bit                   TXB1D62             __at(0x79E2);	// @ (0xF3C * 8 + 2)
#define                                 TXB1D62_bit         _BIT_ACCESS(TXB1D6,2)
// TXB1D6<TXB1D63>
extern volatile __bit                   TXB1D63             __at(0x79E3);	// @ (0xF3C * 8 + 3)
#define                                 TXB1D63_bit         _BIT_ACCESS(TXB1D6,3)
// TXB1D6<TXB1D64>
extern volatile __bit                   TXB1D64             __at(0x79E4);	// @ (0xF3C * 8 + 4)
#define                                 TXB1D64_bit         _BIT_ACCESS(TXB1D6,4)
// TXB1D6<TXB1D65>
extern volatile __bit                   TXB1D65             __at(0x79E5);	// @ (0xF3C * 8 + 5)
#define                                 TXB1D65_bit         _BIT_ACCESS(TXB1D6,5)
// TXB1D6<TXB1D66>
extern volatile __bit                   TXB1D66             __at(0x79E6);	// @ (0xF3C * 8 + 6)
#define                                 TXB1D66_bit         _BIT_ACCESS(TXB1D6,6)
// TXB1D6<TXB1D67>
extern volatile __bit                   TXB1D67             __at(0x79E7);	// @ (0xF3C * 8 + 7)
#define                                 TXB1D67_bit         _BIT_ACCESS(TXB1D6,7)
// TXB1D7<TXB1D70>
extern volatile __bit                   TXB1D70             __at(0x79E8);	// @ (0xF3D * 8 + 0)
#define                                 TXB1D70_bit         _BIT_ACCESS(TXB1D7,0)
// TXB1D7<TXB1D71>
extern volatile __bit                   TXB1D71             __at(0x79E9);	// @ (0xF3D * 8 + 1)
#define                                 TXB1D71_bit         _BIT_ACCESS(TXB1D7,1)
// TXB1D7<TXB1D72>
extern volatile __bit                   TXB1D72             __at(0x79EA);	// @ (0xF3D * 8 + 2)
#define                                 TXB1D72_bit         _BIT_ACCESS(TXB1D7,2)
// TXB1D7<TXB1D73>
extern volatile __bit                   TXB1D73             __at(0x79EB);	// @ (0xF3D * 8 + 3)
#define                                 TXB1D73_bit         _BIT_ACCESS(TXB1D7,3)
// TXB1D7<TXB1D74>
extern volatile __bit                   TXB1D74             __at(0x79EC);	// @ (0xF3D * 8 + 4)
#define                                 TXB1D74_bit         _BIT_ACCESS(TXB1D7,4)
// TXB1D7<TXB1D75>
extern volatile __bit                   TXB1D75             __at(0x79ED);	// @ (0xF3D * 8 + 5)
#define                                 TXB1D75_bit         _BIT_ACCESS(TXB1D7,5)
// TXB1D7<TXB1D76>
extern volatile __bit                   TXB1D76             __at(0x79EE);	// @ (0xF3D * 8 + 6)
#define                                 TXB1D76_bit         _BIT_ACCESS(TXB1D7,6)
// TXB1D7<TXB1D77>
extern volatile __bit                   TXB1D77             __at(0x79EF);	// @ (0xF3D * 8 + 7)
#define                                 TXB1D77_bit         _BIT_ACCESS(TXB1D7,7)
// TXB1DLC<TXB1DLC0>
extern volatile __bit                   TXB1DLC0            __at(0x79A8);	// @ (0xF35 * 8 + 0)
#define                                 TXB1DLC0_bit        _BIT_ACCESS(TXB1DLC,0)
// TXB1DLC<TXB1DLC1>
extern volatile __bit                   TXB1DLC1            __at(0x79A9);	// @ (0xF35 * 8 + 1)
#define                                 TXB1DLC1_bit        _BIT_ACCESS(TXB1DLC,1)
// TXB1DLC<TXB1DLC2>
extern volatile __bit                   TXB1DLC2            __at(0x79AA);	// @ (0xF35 * 8 + 2)
#define                                 TXB1DLC2_bit        _BIT_ACCESS(TXB1DLC,2)
// TXB1DLC<TXB1DLC3>
extern volatile __bit                   TXB1DLC3            __at(0x79AB);	// @ (0xF35 * 8 + 3)
#define                                 TXB1DLC3_bit        _BIT_ACCESS(TXB1DLC,3)
// TXB1EIDL<TXB1EID0>
extern volatile __bit                   TXB1EID0            __at(0x79A0);	// @ (0xF34 * 8 + 0)
#define                                 TXB1EID0_bit        _BIT_ACCESS(TXB1EIDL,0)
// TXB1EIDL<TXB1EID1>
extern volatile __bit                   TXB1EID1            __at(0x79A1);	// @ (0xF34 * 8 + 1)
#define                                 TXB1EID1_bit        _BIT_ACCESS(TXB1EIDL,1)
// TXB1EIDH<TXB1EID10>
extern volatile __bit                   TXB1EID10           __at(0x799A);	// @ (0xF33 * 8 + 2)
#define                                 TXB1EID10_bit       _BIT_ACCESS(TXB1EIDH,2)
// TXB1EIDH<TXB1EID11>
extern volatile __bit                   TXB1EID11           __at(0x799B);	// @ (0xF33 * 8 + 3)
#define                                 TXB1EID11_bit       _BIT_ACCESS(TXB1EIDH,3)
// TXB1EIDH<TXB1EID12>
extern volatile __bit                   TXB1EID12           __at(0x799C);	// @ (0xF33 * 8 + 4)
#define                                 TXB1EID12_bit       _BIT_ACCESS(TXB1EIDH,4)
// TXB1EIDH<TXB1EID13>
extern volatile __bit                   TXB1EID13           __at(0x799D);	// @ (0xF33 * 8 + 5)
#define                                 TXB1EID13_bit       _BIT_ACCESS(TXB1EIDH,5)
// TXB1EIDH<TXB1EID14>
extern volatile __bit                   TXB1EID14           __at(0x799E);	// @ (0xF33 * 8 + 6)
#define                                 TXB1EID14_bit       _BIT_ACCESS(TXB1EIDH,6)
// TXB1EIDH<TXB1EID15>
extern volatile __bit                   TXB1EID15           __at(0x799F);	// @ (0xF33 * 8 + 7)
#define                                 TXB1EID15_bit       _BIT_ACCESS(TXB1EIDH,7)
// TXB1SIDL<TXB1EID16>
extern volatile __bit                   TXB1EID16           __at(0x7990);	// @ (0xF32 * 8 + 0)
#define                                 TXB1EID16_bit       _BIT_ACCESS(TXB1SIDL,0)
// TXB1SIDL<TXB1EID17>
extern volatile __bit                   TXB1EID17           __at(0x7991);	// @ (0xF32 * 8 + 1)
#define                                 TXB1EID17_bit       _BIT_ACCESS(TXB1SIDL,1)
// TXB1EIDL<TXB1EID2>
extern volatile __bit                   TXB1EID2            __at(0x79A2);	// @ (0xF34 * 8 + 2)
#define                                 TXB1EID2_bit        _BIT_ACCESS(TXB1EIDL,2)
// TXB1EIDL<TXB1EID3>
extern volatile __bit                   TXB1EID3            __at(0x79A3);	// @ (0xF34 * 8 + 3)
#define                                 TXB1EID3_bit        _BIT_ACCESS(TXB1EIDL,3)
// TXB1EIDL<TXB1EID4>
extern volatile __bit                   TXB1EID4            __at(0x79A4);	// @ (0xF34 * 8 + 4)
#define                                 TXB1EID4_bit        _BIT_ACCESS(TXB1EIDL,4)
// TXB1EIDL<TXB1EID5>
extern volatile __bit                   TXB1EID5            __at(0x79A5);	// @ (0xF34 * 8 + 5)
#define                                 TXB1EID5_bit        _BIT_ACCESS(TXB1EIDL,5)
// TXB1EIDL<TXB1EID6>
extern volatile __bit                   TXB1EID6            __at(0x79A6);	// @ (0xF34 * 8 + 6)
#define                                 TXB1EID6_bit        _BIT_ACCESS(TXB1EIDL,6)
// TXB1EIDL<TXB1EID7>
extern volatile __bit                   TXB1EID7            __at(0x79A7);	// @ (0xF34 * 8 + 7)
#define                                 TXB1EID7_bit        _BIT_ACCESS(TXB1EIDL,7)
// TXB1EIDH<TXB1EID8>
extern volatile __bit                   TXB1EID8            __at(0x7998);	// @ (0xF33 * 8 + 0)
#define                                 TXB1EID8_bit        _BIT_ACCESS(TXB1EIDH,0)
// TXB1EIDH<TXB1EID9>
extern volatile __bit                   TXB1EID9            __at(0x7999);	// @ (0xF33 * 8 + 1)
#define                                 TXB1EID9_bit        _BIT_ACCESS(TXB1EIDH,1)
// TXB1CON<TXB1ERR>
extern volatile __bit                   TXB1ERR             __at(0x7984);	// @ (0xF30 * 8 + 4)
#define                                 TXB1ERR_bit         _BIT_ACCESS(TXB1CON,4)
// TXB1SIDL<TXB1EXIDE>
extern volatile __bit                   TXB1EXIDE           __at(0x7993);	// @ (0xF32 * 8 + 3)
#define                                 TXB1EXIDE_bit       _BIT_ACCESS(TXB1SIDL,3)
// PIE3<TXB1IE>
extern volatile __bit                   TXB1IE              __at(0x7D1B);	// @ (0xFA3 * 8 + 3)
#define                                 TXB1IE_bit          _BIT_ACCESS(PIE3,3)
// PIR3<TXB1IF>
extern volatile __bit                   TXB1IF              __at(0x7D23);	// @ (0xFA4 * 8 + 3)
#define                                 TXB1IF_bit          _BIT_ACCESS(PIR3,3)
// IPR3<TXB1IP>
extern volatile __bit                   TXB1IP              __at(0x7D2B);	// @ (0xFA5 * 8 + 3)
#define                                 TXB1IP_bit          _BIT_ACCESS(IPR3,3)
// TXB1CON<TXB1LARB>
extern volatile __bit                   TXB1LARB            __at(0x7985);	// @ (0xF30 * 8 + 5)
#define                                 TXB1LARB_bit        _BIT_ACCESS(TXB1CON,5)
// TXB1CON<TXB1PRI0>
extern volatile __bit                   TXB1PRI0            __at(0x7980);	// @ (0xF30 * 8 + 0)
#define                                 TXB1PRI0_bit        _BIT_ACCESS(TXB1CON,0)
// TXB1CON<TXB1PRI1>
extern volatile __bit                   TXB1PRI1            __at(0x7981);	// @ (0xF30 * 8 + 1)
#define                                 TXB1PRI1_bit        _BIT_ACCESS(TXB1CON,1)
// TXB1CON<TXB1REQ>
extern volatile __bit                   TXB1REQ             __at(0x7983);	// @ (0xF30 * 8 + 3)
#define                                 TXB1REQ_bit         _BIT_ACCESS(TXB1CON,3)
// TXB1DLC<TXB1RTR>
extern volatile __bit                   TXB1RTR             __at(0x79AE);	// @ (0xF35 * 8 + 6)
#define                                 TXB1RTR_bit         _BIT_ACCESS(TXB1DLC,6)
// TXB1SIDL<TXB1SID0>
extern volatile __bit                   TXB1SID0            __at(0x7995);	// @ (0xF32 * 8 + 5)
#define                                 TXB1SID0_bit        _BIT_ACCESS(TXB1SIDL,5)
// TXB1SIDL<TXB1SID1>
extern volatile __bit                   TXB1SID1            __at(0x7996);	// @ (0xF32 * 8 + 6)
#define                                 TXB1SID1_bit        _BIT_ACCESS(TXB1SIDL,6)
// TXB1SIDH<TXB1SID10>
extern volatile __bit                   TXB1SID10           __at(0x798F);	// @ (0xF31 * 8 + 7)
#define                                 TXB1SID10_bit       _BIT_ACCESS(TXB1SIDH,7)
// TXB1SIDL<TXB1SID2>
extern volatile __bit                   TXB1SID2            __at(0x7997);	// @ (0xF32 * 8 + 7)
#define                                 TXB1SID2_bit        _BIT_ACCESS(TXB1SIDL,7)
// TXB1SIDH<TXB1SID3>
extern volatile __bit                   TXB1SID3            __at(0x7988);	// @ (0xF31 * 8 + 0)
#define                                 TXB1SID3_bit        _BIT_ACCESS(TXB1SIDH,0)
// TXB1SIDH<TXB1SID4>
extern volatile __bit                   TXB1SID4            __at(0x7989);	// @ (0xF31 * 8 + 1)
#define                                 TXB1SID4_bit        _BIT_ACCESS(TXB1SIDH,1)
// TXB1SIDH<TXB1SID5>
extern volatile __bit                   TXB1SID5            __at(0x798A);	// @ (0xF31 * 8 + 2)
#define                                 TXB1SID5_bit        _BIT_ACCESS(TXB1SIDH,2)
// TXB1SIDH<TXB1SID6>
extern volatile __bit                   TXB1SID6            __at(0x798B);	// @ (0xF31 * 8 + 3)
#define                                 TXB1SID6_bit        _BIT_ACCESS(TXB1SIDH,3)
// TXB1SIDH<TXB1SID7>
extern volatile __bit                   TXB1SID7            __at(0x798C);	// @ (0xF31 * 8 + 4)
#define                                 TXB1SID7_bit        _BIT_ACCESS(TXB1SIDH,4)
// TXB1SIDH<TXB1SID8>
extern volatile __bit                   TXB1SID8            __at(0x798D);	// @ (0xF31 * 8 + 5)
#define                                 TXB1SID8_bit        _BIT_ACCESS(TXB1SIDH,5)
// TXB1SIDH<TXB1SID9>
extern volatile __bit                   TXB1SID9            __at(0x798E);	// @ (0xF31 * 8 + 6)
#define                                 TXB1SID9_bit        _BIT_ACCESS(TXB1SIDH,6)
// TXB2CON<TXB2ABT>
extern volatile __bit                   TXB2ABT             __at(0x7906);	// @ (0xF20 * 8 + 6)
#define                                 TXB2ABT_bit         _BIT_ACCESS(TXB2CON,6)
// TXB2D0<TXB2D00>
extern volatile __bit                   TXB2D00             __at(0x7930);	// @ (0xF26 * 8 + 0)
#define                                 TXB2D00_bit         _BIT_ACCESS(TXB2D0,0)
// TXB2D0<TXB2D01>
extern volatile __bit                   TXB2D01             __at(0x7931);	// @ (0xF26 * 8 + 1)
#define                                 TXB2D01_bit         _BIT_ACCESS(TXB2D0,1)
// TXB2D0<TXB2D02>
extern volatile __bit                   TXB2D02             __at(0x7932);	// @ (0xF26 * 8 + 2)
#define                                 TXB2D02_bit         _BIT_ACCESS(TXB2D0,2)
// TXB2D0<TXB2D03>
extern volatile __bit                   TXB2D03             __at(0x7933);	// @ (0xF26 * 8 + 3)
#define                                 TXB2D03_bit         _BIT_ACCESS(TXB2D0,3)
// TXB2D0<TXB2D04>
extern volatile __bit                   TXB2D04             __at(0x7934);	// @ (0xF26 * 8 + 4)
#define                                 TXB2D04_bit         _BIT_ACCESS(TXB2D0,4)
// TXB2D0<TXB2D05>
extern volatile __bit                   TXB2D05             __at(0x7935);	// @ (0xF26 * 8 + 5)
#define                                 TXB2D05_bit         _BIT_ACCESS(TXB2D0,5)
// TXB2D0<TXB2D06>
extern volatile __bit                   TXB2D06             __at(0x7936);	// @ (0xF26 * 8 + 6)
#define                                 TXB2D06_bit         _BIT_ACCESS(TXB2D0,6)
// TXB2D0<TXB2D07>
extern volatile __bit                   TXB2D07             __at(0x7937);	// @ (0xF26 * 8 + 7)
#define                                 TXB2D07_bit         _BIT_ACCESS(TXB2D0,7)
// TXB2D1<TXB2D10>
extern volatile __bit                   TXB2D10             __at(0x7938);	// @ (0xF27 * 8 + 0)
#define                                 TXB2D10_bit         _BIT_ACCESS(TXB2D1,0)
// TXB2D1<TXB2D11>
extern volatile __bit                   TXB2D11             __at(0x7939);	// @ (0xF27 * 8 + 1)
#define                                 TXB2D11_bit         _BIT_ACCESS(TXB2D1,1)
// TXB2D1<TXB2D12>
extern volatile __bit                   TXB2D12             __at(0x793A);	// @ (0xF27 * 8 + 2)
#define                                 TXB2D12_bit         _BIT_ACCESS(TXB2D1,2)
// TXB2D1<TXB2D13>
extern volatile __bit                   TXB2D13             __at(0x793B);	// @ (0xF27 * 8 + 3)
#define                                 TXB2D13_bit         _BIT_ACCESS(TXB2D1,3)
// TXB2D1<TXB2D14>
extern volatile __bit                   TXB2D14             __at(0x793C);	// @ (0xF27 * 8 + 4)
#define                                 TXB2D14_bit         _BIT_ACCESS(TXB2D1,4)
// TXB2D1<TXB2D15>
extern volatile __bit                   TXB2D15             __at(0x793D);	// @ (0xF27 * 8 + 5)
#define                                 TXB2D15_bit         _BIT_ACCESS(TXB2D1,5)
// TXB2D1<TXB2D16>
extern volatile __bit                   TXB2D16             __at(0x793E);	// @ (0xF27 * 8 + 6)
#define                                 TXB2D16_bit         _BIT_ACCESS(TXB2D1,6)
// TXB2D1<TXB2D17>
extern volatile __bit                   TXB2D17             __at(0x793F);	// @ (0xF27 * 8 + 7)
#define                                 TXB2D17_bit         _BIT_ACCESS(TXB2D1,7)
// TXB2D2<TXB2D20>
extern volatile __bit                   TXB2D20             __at(0x7940);	// @ (0xF28 * 8 + 0)
#define                                 TXB2D20_bit         _BIT_ACCESS(TXB2D2,0)
// TXB2D2<TXB2D21>
extern volatile __bit                   TXB2D21             __at(0x7941);	// @ (0xF28 * 8 + 1)
#define                                 TXB2D21_bit         _BIT_ACCESS(TXB2D2,1)
// TXB2D2<TXB2D22>
extern volatile __bit                   TXB2D22             __at(0x7942);	// @ (0xF28 * 8 + 2)
#define                                 TXB2D22_bit         _BIT_ACCESS(TXB2D2,2)
// TXB2D2<TXB2D23>
extern volatile __bit                   TXB2D23             __at(0x7943);	// @ (0xF28 * 8 + 3)
#define                                 TXB2D23_bit         _BIT_ACCESS(TXB2D2,3)
// TXB2D2<TXB2D24>
extern volatile __bit                   TXB2D24             __at(0x7944);	// @ (0xF28 * 8 + 4)
#define                                 TXB2D24_bit         _BIT_ACCESS(TXB2D2,4)
// TXB2D2<TXB2D25>
extern volatile __bit                   TXB2D25             __at(0x7945);	// @ (0xF28 * 8 + 5)
#define                                 TXB2D25_bit         _BIT_ACCESS(TXB2D2,5)
// TXB2D2<TXB2D26>
extern volatile __bit                   TXB2D26             __at(0x7946);	// @ (0xF28 * 8 + 6)
#define                                 TXB2D26_bit         _BIT_ACCESS(TXB2D2,6)
// TXB2D2<TXB2D27>
extern volatile __bit                   TXB2D27             __at(0x7947);	// @ (0xF28 * 8 + 7)
#define                                 TXB2D27_bit         _BIT_ACCESS(TXB2D2,7)
// TXB2D3<TXB2D30>
extern volatile __bit                   TXB2D30             __at(0x7948);	// @ (0xF29 * 8 + 0)
#define                                 TXB2D30_bit         _BIT_ACCESS(TXB2D3,0)
// TXB2D3<TXB2D31>
extern volatile __bit                   TXB2D31             __at(0x7949);	// @ (0xF29 * 8 + 1)
#define                                 TXB2D31_bit         _BIT_ACCESS(TXB2D3,1)
// TXB2D3<TXB2D32>
extern volatile __bit                   TXB2D32             __at(0x794A);	// @ (0xF29 * 8 + 2)
#define                                 TXB2D32_bit         _BIT_ACCESS(TXB2D3,2)
// TXB2D3<TXB2D33>
extern volatile __bit                   TXB2D33             __at(0x794B);	// @ (0xF29 * 8 + 3)
#define                                 TXB2D33_bit         _BIT_ACCESS(TXB2D3,3)
// TXB2D3<TXB2D34>
extern volatile __bit                   TXB2D34             __at(0x794C);	// @ (0xF29 * 8 + 4)
#define                                 TXB2D34_bit         _BIT_ACCESS(TXB2D3,4)
// TXB2D3<TXB2D35>
extern volatile __bit                   TXB2D35             __at(0x794D);	// @ (0xF29 * 8 + 5)
#define                                 TXB2D35_bit         _BIT_ACCESS(TXB2D3,5)
// TXB2D3<TXB2D36>
extern volatile __bit                   TXB2D36             __at(0x794E);	// @ (0xF29 * 8 + 6)
#define                                 TXB2D36_bit         _BIT_ACCESS(TXB2D3,6)
// TXB2D3<TXB2D37>
extern volatile __bit                   TXB2D37             __at(0x794F);	// @ (0xF29 * 8 + 7)
#define                                 TXB2D37_bit         _BIT_ACCESS(TXB2D3,7)
// TXB2D4<TXB2D40>
extern volatile __bit                   TXB2D40             __at(0x7950);	// @ (0xF2A * 8 + 0)
#define                                 TXB2D40_bit         _BIT_ACCESS(TXB2D4,0)
// TXB2D4<TXB2D41>
extern volatile __bit                   TXB2D41             __at(0x7951);	// @ (0xF2A * 8 + 1)
#define                                 TXB2D41_bit         _BIT_ACCESS(TXB2D4,1)
// TXB2D4<TXB2D42>
extern volatile __bit                   TXB2D42             __at(0x7952);	// @ (0xF2A * 8 + 2)
#define                                 TXB2D42_bit         _BIT_ACCESS(TXB2D4,2)
// TXB2D4<TXB2D43>
extern volatile __bit                   TXB2D43             __at(0x7953);	// @ (0xF2A * 8 + 3)
#define                                 TXB2D43_bit         _BIT_ACCESS(TXB2D4,3)
// TXB2D4<TXB2D44>
extern volatile __bit                   TXB2D44             __at(0x7954);	// @ (0xF2A * 8 + 4)
#define                                 TXB2D44_bit         _BIT_ACCESS(TXB2D4,4)
// TXB2D4<TXB2D45>
extern volatile __bit                   TXB2D45             __at(0x7955);	// @ (0xF2A * 8 + 5)
#define                                 TXB2D45_bit         _BIT_ACCESS(TXB2D4,5)
// TXB2D4<TXB2D46>
extern volatile __bit                   TXB2D46             __at(0x7956);	// @ (0xF2A * 8 + 6)
#define                                 TXB2D46_bit         _BIT_ACCESS(TXB2D4,6)
// TXB2D4<TXB2D47>
extern volatile __bit                   TXB2D47             __at(0x7957);	// @ (0xF2A * 8 + 7)
#define                                 TXB2D47_bit         _BIT_ACCESS(TXB2D4,7)
// TXB2D5<TXB2D50>
extern volatile __bit                   TXB2D50             __at(0x7958);	// @ (0xF2B * 8 + 0)
#define                                 TXB2D50_bit         _BIT_ACCESS(TXB2D5,0)
// TXB2D5<TXB2D51>
extern volatile __bit                   TXB2D51             __at(0x7959);	// @ (0xF2B * 8 + 1)
#define                                 TXB2D51_bit         _BIT_ACCESS(TXB2D5,1)
// TXB2D5<TXB2D52>
extern volatile __bit                   TXB2D52             __at(0x795A);	// @ (0xF2B * 8 + 2)
#define                                 TXB2D52_bit         _BIT_ACCESS(TXB2D5,2)
// TXB2D5<TXB2D53>
extern volatile __bit                   TXB2D53             __at(0x795B);	// @ (0xF2B * 8 + 3)
#define                                 TXB2D53_bit         _BIT_ACCESS(TXB2D5,3)
// TXB2D5<TXB2D54>
extern volatile __bit                   TXB2D54             __at(0x795C);	// @ (0xF2B * 8 + 4)
#define                                 TXB2D54_bit         _BIT_ACCESS(TXB2D5,4)
// TXB2D5<TXB2D55>
extern volatile __bit                   TXB2D55             __at(0x795D);	// @ (0xF2B * 8 + 5)
#define                                 TXB2D55_bit         _BIT_ACCESS(TXB2D5,5)
// TXB2D5<TXB2D56>
extern volatile __bit                   TXB2D56             __at(0x795E);	// @ (0xF2B * 8 + 6)
#define                                 TXB2D56_bit         _BIT_ACCESS(TXB2D5,6)
// TXB2D5<TXB2D57>
extern volatile __bit                   TXB2D57             __at(0x795F);	// @ (0xF2B * 8 + 7)
#define                                 TXB2D57_bit         _BIT_ACCESS(TXB2D5,7)
// TXB2D6<TXB2D60>
extern volatile __bit                   TXB2D60             __at(0x7960);	// @ (0xF2C * 8 + 0)
#define                                 TXB2D60_bit         _BIT_ACCESS(TXB2D6,0)
// TXB2D6<TXB2D61>
extern volatile __bit                   TXB2D61             __at(0x7961);	// @ (0xF2C * 8 + 1)
#define                                 TXB2D61_bit         _BIT_ACCESS(TXB2D6,1)
// TXB2D6<TXB2D62>
extern volatile __bit                   TXB2D62             __at(0x7962);	// @ (0xF2C * 8 + 2)
#define                                 TXB2D62_bit         _BIT_ACCESS(TXB2D6,2)
// TXB2D6<TXB2D63>
extern volatile __bit                   TXB2D63             __at(0x7963);	// @ (0xF2C * 8 + 3)
#define                                 TXB2D63_bit         _BIT_ACCESS(TXB2D6,3)
// TXB2D6<TXB2D64>
extern volatile __bit                   TXB2D64             __at(0x7964);	// @ (0xF2C * 8 + 4)
#define                                 TXB2D64_bit         _BIT_ACCESS(TXB2D6,4)
// TXB2D6<TXB2D65>
extern volatile __bit                   TXB2D65             __at(0x7965);	// @ (0xF2C * 8 + 5)
#define                                 TXB2D65_bit         _BIT_ACCESS(TXB2D6,5)
// TXB2D6<TXB2D66>
extern volatile __bit                   TXB2D66             __at(0x7966);	// @ (0xF2C * 8 + 6)
#define                                 TXB2D66_bit         _BIT_ACCESS(TXB2D6,6)
// TXB2D6<TXB2D67>
extern volatile __bit                   TXB2D67             __at(0x7967);	// @ (0xF2C * 8 + 7)
#define                                 TXB2D67_bit         _BIT_ACCESS(TXB2D6,7)
// TXB2D7<TXB2D70>
extern volatile __bit                   TXB2D70             __at(0x7968);	// @ (0xF2D * 8 + 0)
#define                                 TXB2D70_bit         _BIT_ACCESS(TXB2D7,0)
// TXB2D7<TXB2D71>
extern volatile __bit                   TXB2D71             __at(0x7969);	// @ (0xF2D * 8 + 1)
#define                                 TXB2D71_bit         _BIT_ACCESS(TXB2D7,1)
// TXB2D7<TXB2D72>
extern volatile __bit                   TXB2D72             __at(0x796A);	// @ (0xF2D * 8 + 2)
#define                                 TXB2D72_bit         _BIT_ACCESS(TXB2D7,2)
// TXB2D7<TXB2D73>
extern volatile __bit                   TXB2D73             __at(0x796B);	// @ (0xF2D * 8 + 3)
#define                                 TXB2D73_bit         _BIT_ACCESS(TXB2D7,3)
// TXB2D7<TXB2D74>
extern volatile __bit                   TXB2D74             __at(0x796C);	// @ (0xF2D * 8 + 4)
#define                                 TXB2D74_bit         _BIT_ACCESS(TXB2D7,4)
// TXB2D7<TXB2D75>
extern volatile __bit                   TXB2D75             __at(0x796D);	// @ (0xF2D * 8 + 5)
#define                                 TXB2D75_bit         _BIT_ACCESS(TXB2D7,5)
// TXB2D7<TXB2D76>
extern volatile __bit                   TXB2D76             __at(0x796E);	// @ (0xF2D * 8 + 6)
#define                                 TXB2D76_bit         _BIT_ACCESS(TXB2D7,6)
// TXB2D7<TXB2D77>
extern volatile __bit                   TXB2D77             __at(0x796F);	// @ (0xF2D * 8 + 7)
#define                                 TXB2D77_bit         _BIT_ACCESS(TXB2D7,7)
// TXB2DLC<TXB2DLC0>
extern volatile __bit                   TXB2DLC0            __at(0x7928);	// @ (0xF25 * 8 + 0)
#define                                 TXB2DLC0_bit        _BIT_ACCESS(TXB2DLC,0)
// TXB2DLC<TXB2DLC1>
extern volatile __bit                   TXB2DLC1            __at(0x7929);	// @ (0xF25 * 8 + 1)
#define                                 TXB2DLC1_bit        _BIT_ACCESS(TXB2DLC,1)
// TXB2DLC<TXB2DLC2>
extern volatile __bit                   TXB2DLC2            __at(0x792A);	// @ (0xF25 * 8 + 2)
#define                                 TXB2DLC2_bit        _BIT_ACCESS(TXB2DLC,2)
// TXB2DLC<TXB2DLC3>
extern volatile __bit                   TXB2DLC3            __at(0x792B);	// @ (0xF25 * 8 + 3)
#define                                 TXB2DLC3_bit        _BIT_ACCESS(TXB2DLC,3)
// TXB2EIDL<TXB2EID0>
extern volatile __bit                   TXB2EID0            __at(0x7920);	// @ (0xF24 * 8 + 0)
#define                                 TXB2EID0_bit        _BIT_ACCESS(TXB2EIDL,0)
// TXB2EIDL<TXB2EID1>
extern volatile __bit                   TXB2EID1            __at(0x7921);	// @ (0xF24 * 8 + 1)
#define                                 TXB2EID1_bit        _BIT_ACCESS(TXB2EIDL,1)
// TXB2EIDH<TXB2EID10>
extern volatile __bit                   TXB2EID10           __at(0x791A);	// @ (0xF23 * 8 + 2)
#define                                 TXB2EID10_bit       _BIT_ACCESS(TXB2EIDH,2)
// TXB2EIDH<TXB2EID11>
extern volatile __bit                   TXB2EID11           __at(0x791B);	// @ (0xF23 * 8 + 3)
#define                                 TXB2EID11_bit       _BIT_ACCESS(TXB2EIDH,3)
// TXB2EIDH<TXB2EID12>
extern volatile __bit                   TXB2EID12           __at(0x791C);	// @ (0xF23 * 8 + 4)
#define                                 TXB2EID12_bit       _BIT_ACCESS(TXB2EIDH,4)
// TXB2EIDH<TXB2EID13>
extern volatile __bit                   TXB2EID13           __at(0x791D);	// @ (0xF23 * 8 + 5)
#define                                 TXB2EID13_bit       _BIT_ACCESS(TXB2EIDH,5)
// TXB2EIDH<TXB2EID14>
extern volatile __bit                   TXB2EID14           __at(0x791E);	// @ (0xF23 * 8 + 6)
#define                                 TXB2EID14_bit       _BIT_ACCESS(TXB2EIDH,6)
// TXB2EIDH<TXB2EID15>
extern volatile __bit                   TXB2EID15           __at(0x791F);	// @ (0xF23 * 8 + 7)
#define                                 TXB2EID15_bit       _BIT_ACCESS(TXB2EIDH,7)
// TXB2SIDL<TXB2EID16>
extern volatile __bit                   TXB2EID16           __at(0x7910);	// @ (0xF22 * 8 + 0)
#define                                 TXB2EID16_bit       _BIT_ACCESS(TXB2SIDL,0)
// TXB2SIDL<TXB2EID17>
extern volatile __bit                   TXB2EID17           __at(0x7911);	// @ (0xF22 * 8 + 1)
#define                                 TXB2EID17_bit       _BIT_ACCESS(TXB2SIDL,1)
// TXB2EIDL<TXB2EID2>
extern volatile __bit                   TXB2EID2            __at(0x7922);	// @ (0xF24 * 8 + 2)
#define                                 TXB2EID2_bit        _BIT_ACCESS(TXB2EIDL,2)
// TXB2EIDL<TXB2EID3>
extern volatile __bit                   TXB2EID3            __at(0x7923);	// @ (0xF24 * 8 + 3)
#define                                 TXB2EID3_bit        _BIT_ACCESS(TXB2EIDL,3)
// TXB2EIDL<TXB2EID4>
extern volatile __bit                   TXB2EID4            __at(0x7924);	// @ (0xF24 * 8 + 4)
#define                                 TXB2EID4_bit        _BIT_ACCESS(TXB2EIDL,4)
// TXB2EIDL<TXB2EID5>
extern volatile __bit                   TXB2EID5            __at(0x7925);	// @ (0xF24 * 8 + 5)
#define                                 TXB2EID5_bit        _BIT_ACCESS(TXB2EIDL,5)
// TXB2EIDL<TXB2EID6>
extern volatile __bit                   TXB2EID6            __at(0x7926);	// @ (0xF24 * 8 + 6)
#define                                 TXB2EID6_bit        _BIT_ACCESS(TXB2EIDL,6)
// TXB2EIDL<TXB2EID7>
extern volatile __bit                   TXB2EID7            __at(0x7927);	// @ (0xF24 * 8 + 7)
#define                                 TXB2EID7_bit        _BIT_ACCESS(TXB2EIDL,7)
// TXB2EIDH<TXB2EID8>
extern volatile __bit                   TXB2EID8            __at(0x7918);	// @ (0xF23 * 8 + 0)
#define                                 TXB2EID8_bit        _BIT_ACCESS(TXB2EIDH,0)
// TXB2EIDH<TXB2EID9>
extern volatile __bit                   TXB2EID9            __at(0x7919);	// @ (0xF23 * 8 + 1)
#define                                 TXB2EID9_bit        _BIT_ACCESS(TXB2EIDH,1)
// TXB2CON<TXB2ERR>
extern volatile __bit                   TXB2ERR             __at(0x7904);	// @ (0xF20 * 8 + 4)
#define                                 TXB2ERR_bit         _BIT_ACCESS(TXB2CON,4)
// TXB2SIDL<TXB2EXIDE>
extern volatile __bit                   TXB2EXIDE           __at(0x7913);	// @ (0xF22 * 8 + 3)
#define                                 TXB2EXIDE_bit       _BIT_ACCESS(TXB2SIDL,3)
// PIE3<TXB2IE>
extern volatile __bit                   TXB2IE              __at(0x7D1C);	// @ (0xFA3 * 8 + 4)
#define                                 TXB2IE_bit          _BIT_ACCESS(PIE3,4)
// PIR3<TXB2IF>
extern volatile __bit                   TXB2IF              __at(0x7D24);	// @ (0xFA4 * 8 + 4)
#define                                 TXB2IF_bit          _BIT_ACCESS(PIR3,4)
// IPR3<TXB2IP>
extern volatile __bit                   TXB2IP              __at(0x7D2C);	// @ (0xFA5 * 8 + 4)
#define                                 TXB2IP_bit          _BIT_ACCESS(IPR3,4)
// TXB2CON<TXB2LARB>
extern volatile __bit                   TXB2LARB            __at(0x7905);	// @ (0xF20 * 8 + 5)
#define                                 TXB2LARB_bit        _BIT_ACCESS(TXB2CON,5)
// TXB2CON<TXB2PRI0>
extern volatile __bit                   TXB2PRI0            __at(0x7900);	// @ (0xF20 * 8 + 0)
#define                                 TXB2PRI0_bit        _BIT_ACCESS(TXB2CON,0)
// TXB2CON<TXB2PRI1>
extern volatile __bit                   TXB2PRI1            __at(0x7901);	// @ (0xF20 * 8 + 1)
#define                                 TXB2PRI1_bit        _BIT_ACCESS(TXB2CON,1)
// TXB2CON<TXB2REQ>
extern volatile __bit                   TXB2REQ             __at(0x7903);	// @ (0xF20 * 8 + 3)
#define                                 TXB2REQ_bit         _BIT_ACCESS(TXB2CON,3)
// TXB2DLC<TXB2RTR>
extern volatile __bit                   TXB2RTR             __at(0x792E);	// @ (0xF25 * 8 + 6)
#define                                 TXB2RTR_bit         _BIT_ACCESS(TXB2DLC,6)
// TXB2SIDL<TXB2SID0>
extern volatile __bit                   TXB2SID0            __at(0x7915);	// @ (0xF22 * 8 + 5)
#define                                 TXB2SID0_bit        _BIT_ACCESS(TXB2SIDL,5)
// TXB2SIDL<TXB2SID1>
extern volatile __bit                   TXB2SID1            __at(0x7916);	// @ (0xF22 * 8 + 6)
#define                                 TXB2SID1_bit        _BIT_ACCESS(TXB2SIDL,6)
// TXB2SIDH<TXB2SID10>
extern volatile __bit                   TXB2SID10           __at(0x790F);	// @ (0xF21 * 8 + 7)
#define                                 TXB2SID10_bit       _BIT_ACCESS(TXB2SIDH,7)
// TXB2SIDL<TXB2SID2>
extern volatile __bit                   TXB2SID2            __at(0x7917);	// @ (0xF22 * 8 + 7)
#define                                 TXB2SID2_bit        _BIT_ACCESS(TXB2SIDL,7)
// TXB2SIDH<TXB2SID3>
extern volatile __bit                   TXB2SID3            __at(0x7908);	// @ (0xF21 * 8 + 0)
#define                                 TXB2SID3_bit        _BIT_ACCESS(TXB2SIDH,0)
// TXB2SIDH<TXB2SID4>
extern volatile __bit                   TXB2SID4            __at(0x7909);	// @ (0xF21 * 8 + 1)
#define                                 TXB2SID4_bit        _BIT_ACCESS(TXB2SIDH,1)
// TXB2SIDH<TXB2SID5>
extern volatile __bit                   TXB2SID5            __at(0x790A);	// @ (0xF21 * 8 + 2)
#define                                 TXB2SID5_bit        _BIT_ACCESS(TXB2SIDH,2)
// TXB2SIDH<TXB2SID6>
extern volatile __bit                   TXB2SID6            __at(0x790B);	// @ (0xF21 * 8 + 3)
#define                                 TXB2SID6_bit        _BIT_ACCESS(TXB2SIDH,3)
// TXB2SIDH<TXB2SID7>
extern volatile __bit                   TXB2SID7            __at(0x790C);	// @ (0xF21 * 8 + 4)
#define                                 TXB2SID7_bit        _BIT_ACCESS(TXB2SIDH,4)
// TXB2SIDH<TXB2SID8>
extern volatile __bit                   TXB2SID8            __at(0x790D);	// @ (0xF21 * 8 + 5)
#define                                 TXB2SID8_bit        _BIT_ACCESS(TXB2SIDH,5)
// TXB2SIDH<TXB2SID9>
extern volatile __bit                   TXB2SID9            __at(0x790E);	// @ (0xF21 * 8 + 6)
#define                                 TXB2SID9_bit        _BIT_ACCESS(TXB2SIDH,6)
// PIE3<TXBNIE>
extern volatile __bit                   TXBNIE              __at(0x7D1C);	// @ (0xFA3 * 8 + 4)
#define                                 TXBNIE_bit          _BIT_ACCESS(PIE3,4)
// PIR3<TXBNIF>
extern volatile __bit                   TXBNIF              __at(0x7D24);	// @ (0xFA4 * 8 + 4)
#define                                 TXBNIF_bit          _BIT_ACCESS(PIR3,4)
// IPR3<TXBNIP>
extern volatile __bit                   TXBNIP              __at(0x7D2C);	// @ (0xFA5 * 8 + 4)
#define                                 TXBNIP_bit          _BIT_ACCESS(IPR3,4)
// COMSTAT<TXBO>
extern volatile __bit                   TXBO                __at(0x7BA5);	// @ (0xF74 * 8 + 5)
#define                                 TXBO_bit            _BIT_ACCESS(COMSTAT,5)
// COMSTAT<TXBP>
extern volatile __bit                   TXBP                __at(0x7BA4);	// @ (0xF74 * 8 + 4)
#define                                 TXBP_bit            _BIT_ACCESS(COMSTAT,4)
// TXSTA<TXD8>
extern volatile __bit                   TXD8                __at(0x7D60);	// @ (0xFAC * 8 + 0)
#define                                 TXD8_bit            _BIT_ACCESS(TXSTA,0)
// TXSTA<TXEN>
extern volatile __bit                   TXEN                __at(0x7D65);	// @ (0xFAC * 8 + 5)
#define                                 TXEN_bit            _BIT_ACCESS(TXSTA,5)
// TXSTA<TXEN1>
extern volatile __bit                   TXEN1               __at(0x7D65);	// @ (0xFAC * 8 + 5)
#define                                 TXEN1_bit           _BIT_ACCESS(TXSTA,5)
// PIE1<TXIE>
extern volatile __bit                   TXIE                __at(0x7CEC);	// @ (0xF9D * 8 + 4)
#define                                 TXIE_bit            _BIT_ACCESS(PIE1,4)
// PIR1<TXIF>
extern volatile __bit                   TXIF                __at(0x7CF4);	// @ (0xF9E * 8 + 4)
#define                                 TXIF_bit            _BIT_ACCESS(PIR1,4)
// IPR1<TXIP>
extern volatile __bit                   TXIP                __at(0x7CFC);	// @ (0xF9F * 8 + 4)
#define                                 TXIP_bit            _BIT_ACCESS(IPR1,4)
// COMSTAT<TXWARN>
extern volatile __bit                   TXWARN              __at(0x7BA2);	// @ (0xF74 * 8 + 2)
#define                                 TXWARN_bit          _BIT_ACCESS(COMSTAT,2)
// SSPSTAT<UA>
extern volatile __bit                   UA                  __at(0x7E39);	// @ (0xFC7 * 8 + 1)
#define                                 UA_bit              _BIT_ACCESS(SSPSTAT,1)
// PORTA<ULPWUIN>
extern volatile __bit                   ULPWUIN             __at(0x7C00);	// @ (0xF80 * 8 + 0)
#define                                 ULPWUIN_bit         _BIT_ACCESS(PORTA,0)
// PORTA<VREFM>
extern volatile __bit                   VREFM               __at(0x7C02);	// @ (0xF80 * 8 + 2)
#define                                 VREFM_bit           _BIT_ACCESS(PORTA,2)
// PORTA<VREFP>
extern volatile __bit                   VREFP               __at(0x7C03);	// @ (0xF80 * 8 + 3)
#define                                 VREFP_bit           _BIT_ACCESS(PORTA,3)
// PR2<WAIT0>
extern volatile __bit                   WAIT0               __at(0x7E5C);	// @ (0xFCB * 8 + 4)
#define                                 WAIT0_bit           _BIT_ACCESS(PR2,4)
// PR2<WAIT1>
extern volatile __bit                   WAIT1               __at(0x7E5D);	// @ (0xFCB * 8 + 5)
#define                                 WAIT1_bit           _BIT_ACCESS(PR2,5)
// BRGCON3<WAKFIL>
extern volatile __bit                   WAKFIL              __at(0x7B96);	// @ (0xF72 * 8 + 6)
#define                                 WAKFIL_bit          _BIT_ACCESS(BRGCON3,6)
// PIE3<WAKIE>
extern volatile __bit                   WAKIE               __at(0x7D1E);	// @ (0xFA3 * 8 + 6)
#define                                 WAKIE_bit           _BIT_ACCESS(PIE3,6)
// PIR3<WAKIF>
extern volatile __bit                   WAKIF               __at(0x7D26);	// @ (0xFA4 * 8 + 6)
#define                                 WAKIF_bit           _BIT_ACCESS(PIR3,6)
// IPR3<WAKIP>
extern volatile __bit                   WAKIP               __at(0x7D2E);	// @ (0xFA5 * 8 + 6)
#define                                 WAKIP_bit           _BIT_ACCESS(IPR3,6)
// SSPCON1<WCOL>
extern volatile __bit                   WCOL                __at(0x7E37);	// @ (0xFC6 * 8 + 7)
#define                                 WCOL_bit            _BIT_ACCESS(SSPCON1,7)
// CANCON<WIN0>
extern volatile __bit                   WIN0                __at(0x7B79);	// @ (0xF6F * 8 + 1)
#define                                 WIN0_bit            _BIT_ACCESS(CANCON,1)
// CANCON<WIN1>
extern volatile __bit                   WIN1                __at(0x7B7A);	// @ (0xF6F * 8 + 2)
#define                                 WIN1_bit            _BIT_ACCESS(CANCON,2)
// CANCON<WIN2>
extern volatile __bit                   WIN2                __at(0x7B7B);	// @ (0xF6F * 8 + 3)
#define                                 WIN2_bit            _BIT_ACCESS(CANCON,3)
// PR2<WM0>
extern volatile __bit                   WM0                 __at(0x7E58);	// @ (0xFCB * 8 + 0)
#define                                 WM0_bit             _BIT_ACCESS(PR2,0)
// PR2<WM1>
extern volatile __bit                   WM1                 __at(0x7E59);	// @ (0xFCB * 8 + 1)
#define                                 WM1_bit             _BIT_ACCESS(PR2,1)
// EECON1<WR>
extern volatile __bit                   WR                  __at(0x7D31);	// @ (0xFA6 * 8 + 1)
#define                                 WR_bit              _BIT_ACCESS(EECON1,1)
// EECON1<WREN>
extern volatile __bit                   WREN                __at(0x7D32);	// @ (0xFA6 * 8 + 2)
#define                                 WREN_bit            _BIT_ACCESS(EECON1,2)
// EECON1<WRERR>
extern volatile __bit                   WRERR               __at(0x7D33);	// @ (0xFA6 * 8 + 3)
#define                                 WRERR_bit           _BIT_ACCESS(EECON1,3)
// STATUS<ZERO>
extern volatile __bit                   ZERO                __at(0x7EC2);	// @ (0xFD8 * 8 + 2)
#define                                 ZERO_bit            _BIT_ACCESS(STATUS,2)
// SSPSTAT<nA>
extern volatile __bit                   nA                  __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 nA_bit              _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<nADDRESS>
extern volatile __bit                   nADDRESS            __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 nADDRESS_bit        _BIT_ACCESS(SSPSTAT,5)
// RCON<nBOR>
extern volatile __bit                   nBOR                __at(0x7E80);	// @ (0xFD0 * 8 + 0)
#define                                 nBOR_bit            _BIT_ACCESS(RCON,0)
// ADCON0<nDONE>
extern volatile __bit                   nDONE               __at(0x7E12);	// @ (0xFC2 * 8 + 2)
#define                                 nDONE_bit           _BIT_ACCESS(ADCON0,2)
// RCON<nIPEN>
extern volatile __bit                   nIPEN               __at(0x7E87);	// @ (0xFD0 * 8 + 7)
#define                                 nIPEN_bit           _BIT_ACCESS(RCON,7)
// RCON<nPD>
extern volatile __bit                   nPD                 __at(0x7E82);	// @ (0xFD0 * 8 + 2)
#define                                 nPD_bit             _BIT_ACCESS(RCON,2)
// RCON<nPOR>
extern volatile __bit                   nPOR                __at(0x7E81);	// @ (0xFD0 * 8 + 1)
#define                                 nPOR_bit            _BIT_ACCESS(RCON,1)
// INTCON2<nRBPU>
extern volatile __bit                   nRBPU               __at(0x7F8F);	// @ (0xFF1 * 8 + 7)
#define                                 nRBPU_bit           _BIT_ACCESS(INTCON2,7)
// RCSTA<nRC8>
extern volatile __bit                   nRC8                __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 nRC8_bit            _BIT_ACCESS(RCSTA,6)
// RCON<nRI>
extern volatile __bit                   nRI                 __at(0x7E84);	// @ (0xFD0 * 8 + 4)
#define                                 nRI_bit             _BIT_ACCESS(RCON,4)
// PORTA<nSS>
extern volatile __bit                   nSS                 __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 nSS_bit             _BIT_ACCESS(PORTA,5)
// T1CON<nT1SYNC>
extern volatile __bit                   nT1SYNC             __at(0x7E6A);	// @ (0xFCD * 8 + 2)
#define                                 nT1SYNC_bit         _BIT_ACCESS(T1CON,2)
// T3CON<nT3SYNC>
extern volatile __bit                   nT3SYNC             __at(0x7D8A);	// @ (0xFB1 * 8 + 2)
#define                                 nT3SYNC_bit         _BIT_ACCESS(T3CON,2)
// RCON<nTO>
extern volatile __bit                   nTO                 __at(0x7E83);	// @ (0xFD0 * 8 + 3)
#define                                 nTO_bit             _BIT_ACCESS(RCON,3)
// TXSTA<nTX8>
extern volatile __bit                   nTX8                __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 nTX8_bit            _BIT_ACCESS(TXSTA,6)
// SSPSTAT<nW>
extern volatile __bit                   nW                  __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 nW_bit              _BIT_ACCESS(SSPSTAT,2)
// SSPSTAT<nWRITE>
extern volatile __bit                   nWRITE              __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 nWRITE_bit          _BIT_ACCESS(SSPSTAT,2)

#endif // _PIC18F248_H_
