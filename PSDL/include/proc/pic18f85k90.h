// Generated 09/02/2023 GMT

/*
 * Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
 * All rights reserved.
 * 
 * This software is developed by Microchip Technology Inc. and its subsidiaries ("Microchip").
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *     1. Redistributions of source code must retain the above copyright notice, this list of
 *        conditions and the following disclaimer.
 * 
 *     2. Redistributions in binary form must reproduce the above copyright notice, this list
 *        of conditions and the following disclaimer in the documentation and/or other
 *        materials provided with the distribution. Publication is not required when
 *        this file is used in an embedded application.
 * 
 *     3. Microchip's name may not be used to endorse or promote products derived from this
 *        software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _PIC18F85K90_H_
#define _PIC18F85K90_H_

/*
 * C Header file for the Microchip PIC Microcontroller
 * PIC18F85K90
 */
#ifndef _XC_H_
#warning Header file pic18f85k90.h included directly. Use #include <xc.h> instead.
#endif

#include <__at.h>

/*
 * Register Definitions
 */

// Register: LCDCON
#define LCDCON LCDCON
extern volatile unsigned char           LCDCON              __at(0xEF4);
#ifndef _LIB_BUILD
asm("LCDCON equ 0EF4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LMUX                   :2;
        unsigned CS                     :2;
        unsigned                        :1;
        unsigned WERR                   :1;
        unsigned SLPEN                  :1;
        unsigned LCDEN                  :1;
    };
    struct {
        unsigned LMUX0                  :1;
        unsigned LMUX1                  :1;
        unsigned CS0                    :1;
        unsigned CS1                    :1;
    };
} LCDCONbits_t;
extern volatile LCDCONbits_t LCDCONbits __at(0xEF4);
// bitfield macros
#define _LCDCON_LMUX_POSN                                   0x0
#define _LCDCON_LMUX_POSITION                               0x0
#define _LCDCON_LMUX_SIZE                                   0x2
#define _LCDCON_LMUX_LENGTH                                 0x2
#define _LCDCON_LMUX_MASK                                   0x3
#define _LCDCON_CS_POSN                                     0x2
#define _LCDCON_CS_POSITION                                 0x2
#define _LCDCON_CS_SIZE                                     0x2
#define _LCDCON_CS_LENGTH                                   0x2
#define _LCDCON_CS_MASK                                     0xC
#define _LCDCON_WERR_POSN                                   0x5
#define _LCDCON_WERR_POSITION                               0x5
#define _LCDCON_WERR_SIZE                                   0x1
#define _LCDCON_WERR_LENGTH                                 0x1
#define _LCDCON_WERR_MASK                                   0x20
#define _LCDCON_SLPEN_POSN                                  0x6
#define _LCDCON_SLPEN_POSITION                              0x6
#define _LCDCON_SLPEN_SIZE                                  0x1
#define _LCDCON_SLPEN_LENGTH                                0x1
#define _LCDCON_SLPEN_MASK                                  0x40
#define _LCDCON_LCDEN_POSN                                  0x7
#define _LCDCON_LCDEN_POSITION                              0x7
#define _LCDCON_LCDEN_SIZE                                  0x1
#define _LCDCON_LCDEN_LENGTH                                0x1
#define _LCDCON_LCDEN_MASK                                  0x80
#define _LCDCON_LMUX0_POSN                                  0x0
#define _LCDCON_LMUX0_POSITION                              0x0
#define _LCDCON_LMUX0_SIZE                                  0x1
#define _LCDCON_LMUX0_LENGTH                                0x1
#define _LCDCON_LMUX0_MASK                                  0x1
#define _LCDCON_LMUX1_POSN                                  0x1
#define _LCDCON_LMUX1_POSITION                              0x1
#define _LCDCON_LMUX1_SIZE                                  0x1
#define _LCDCON_LMUX1_LENGTH                                0x1
#define _LCDCON_LMUX1_MASK                                  0x2
#define _LCDCON_CS0_POSN                                    0x2
#define _LCDCON_CS0_POSITION                                0x2
#define _LCDCON_CS0_SIZE                                    0x1
#define _LCDCON_CS0_LENGTH                                  0x1
#define _LCDCON_CS0_MASK                                    0x4
#define _LCDCON_CS1_POSN                                    0x3
#define _LCDCON_CS1_POSITION                                0x3
#define _LCDCON_CS1_SIZE                                    0x1
#define _LCDCON_CS1_LENGTH                                  0x1
#define _LCDCON_CS1_MASK                                    0x8

// Register: LCDPS
#define LCDPS LCDPS
extern volatile unsigned char           LCDPS               __at(0xEF5);
#ifndef _LIB_BUILD
asm("LCDPS equ 0EF5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LP                     :4;
        unsigned WA                     :1;
        unsigned LCDA                   :1;
        unsigned BIASMD                 :1;
        unsigned WFT                    :1;
    };
    struct {
        unsigned LP0                    :1;
        unsigned LP1                    :1;
        unsigned LP2                    :1;
        unsigned LP3                    :1;
    };
} LCDPSbits_t;
extern volatile LCDPSbits_t LCDPSbits __at(0xEF5);
// bitfield macros
#define _LCDPS_LP_POSN                                      0x0
#define _LCDPS_LP_POSITION                                  0x0
#define _LCDPS_LP_SIZE                                      0x4
#define _LCDPS_LP_LENGTH                                    0x4
#define _LCDPS_LP_MASK                                      0xF
#define _LCDPS_WA_POSN                                      0x4
#define _LCDPS_WA_POSITION                                  0x4
#define _LCDPS_WA_SIZE                                      0x1
#define _LCDPS_WA_LENGTH                                    0x1
#define _LCDPS_WA_MASK                                      0x10
#define _LCDPS_LCDA_POSN                                    0x5
#define _LCDPS_LCDA_POSITION                                0x5
#define _LCDPS_LCDA_SIZE                                    0x1
#define _LCDPS_LCDA_LENGTH                                  0x1
#define _LCDPS_LCDA_MASK                                    0x20
#define _LCDPS_BIASMD_POSN                                  0x6
#define _LCDPS_BIASMD_POSITION                              0x6
#define _LCDPS_BIASMD_SIZE                                  0x1
#define _LCDPS_BIASMD_LENGTH                                0x1
#define _LCDPS_BIASMD_MASK                                  0x40
#define _LCDPS_WFT_POSN                                     0x7
#define _LCDPS_WFT_POSITION                                 0x7
#define _LCDPS_WFT_SIZE                                     0x1
#define _LCDPS_WFT_LENGTH                                   0x1
#define _LCDPS_WFT_MASK                                     0x80
#define _LCDPS_LP0_POSN                                     0x0
#define _LCDPS_LP0_POSITION                                 0x0
#define _LCDPS_LP0_SIZE                                     0x1
#define _LCDPS_LP0_LENGTH                                   0x1
#define _LCDPS_LP0_MASK                                     0x1
#define _LCDPS_LP1_POSN                                     0x1
#define _LCDPS_LP1_POSITION                                 0x1
#define _LCDPS_LP1_SIZE                                     0x1
#define _LCDPS_LP1_LENGTH                                   0x1
#define _LCDPS_LP1_MASK                                     0x2
#define _LCDPS_LP2_POSN                                     0x2
#define _LCDPS_LP2_POSITION                                 0x2
#define _LCDPS_LP2_SIZE                                     0x1
#define _LCDPS_LP2_LENGTH                                   0x1
#define _LCDPS_LP2_MASK                                     0x4
#define _LCDPS_LP3_POSN                                     0x3
#define _LCDPS_LP3_POSITION                                 0x3
#define _LCDPS_LP3_SIZE                                     0x1
#define _LCDPS_LP3_LENGTH                                   0x1
#define _LCDPS_LP3_MASK                                     0x8

// Register: LCDSE0
#define LCDSE0 LCDSE0
extern volatile unsigned char           LCDSE0              __at(0xEF6);
#ifndef _LIB_BUILD
asm("LCDSE0 equ 0EF6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SE00                   :1;
        unsigned SE01                   :1;
        unsigned SE02                   :1;
        unsigned SE03                   :1;
        unsigned SE04                   :1;
        unsigned SE05                   :1;
        unsigned SE06                   :1;
        unsigned SE07                   :1;
    };
} LCDSE0bits_t;
extern volatile LCDSE0bits_t LCDSE0bits __at(0xEF6);
// bitfield macros
#define _LCDSE0_SE00_POSN                                   0x0
#define _LCDSE0_SE00_POSITION                               0x0
#define _LCDSE0_SE00_SIZE                                   0x1
#define _LCDSE0_SE00_LENGTH                                 0x1
#define _LCDSE0_SE00_MASK                                   0x1
#define _LCDSE0_SE01_POSN                                   0x1
#define _LCDSE0_SE01_POSITION                               0x1
#define _LCDSE0_SE01_SIZE                                   0x1
#define _LCDSE0_SE01_LENGTH                                 0x1
#define _LCDSE0_SE01_MASK                                   0x2
#define _LCDSE0_SE02_POSN                                   0x2
#define _LCDSE0_SE02_POSITION                               0x2
#define _LCDSE0_SE02_SIZE                                   0x1
#define _LCDSE0_SE02_LENGTH                                 0x1
#define _LCDSE0_SE02_MASK                                   0x4
#define _LCDSE0_SE03_POSN                                   0x3
#define _LCDSE0_SE03_POSITION                               0x3
#define _LCDSE0_SE03_SIZE                                   0x1
#define _LCDSE0_SE03_LENGTH                                 0x1
#define _LCDSE0_SE03_MASK                                   0x8
#define _LCDSE0_SE04_POSN                                   0x4
#define _LCDSE0_SE04_POSITION                               0x4
#define _LCDSE0_SE04_SIZE                                   0x1
#define _LCDSE0_SE04_LENGTH                                 0x1
#define _LCDSE0_SE04_MASK                                   0x10
#define _LCDSE0_SE05_POSN                                   0x5
#define _LCDSE0_SE05_POSITION                               0x5
#define _LCDSE0_SE05_SIZE                                   0x1
#define _LCDSE0_SE05_LENGTH                                 0x1
#define _LCDSE0_SE05_MASK                                   0x20
#define _LCDSE0_SE06_POSN                                   0x6
#define _LCDSE0_SE06_POSITION                               0x6
#define _LCDSE0_SE06_SIZE                                   0x1
#define _LCDSE0_SE06_LENGTH                                 0x1
#define _LCDSE0_SE06_MASK                                   0x40
#define _LCDSE0_SE07_POSN                                   0x7
#define _LCDSE0_SE07_POSITION                               0x7
#define _LCDSE0_SE07_SIZE                                   0x1
#define _LCDSE0_SE07_LENGTH                                 0x1
#define _LCDSE0_SE07_MASK                                   0x80

// Register: LCDSE1
#define LCDSE1 LCDSE1
extern volatile unsigned char           LCDSE1              __at(0xEF7);
#ifndef _LIB_BUILD
asm("LCDSE1 equ 0EF7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SE08                   :1;
        unsigned SE09                   :1;
        unsigned SE10                   :1;
        unsigned SE11                   :1;
        unsigned SE12                   :1;
        unsigned SE13                   :1;
        unsigned SE14                   :1;
        unsigned SE15                   :1;
    };
} LCDSE1bits_t;
extern volatile LCDSE1bits_t LCDSE1bits __at(0xEF7);
// bitfield macros
#define _LCDSE1_SE08_POSN                                   0x0
#define _LCDSE1_SE08_POSITION                               0x0
#define _LCDSE1_SE08_SIZE                                   0x1
#define _LCDSE1_SE08_LENGTH                                 0x1
#define _LCDSE1_SE08_MASK                                   0x1
#define _LCDSE1_SE09_POSN                                   0x1
#define _LCDSE1_SE09_POSITION                               0x1
#define _LCDSE1_SE09_SIZE                                   0x1
#define _LCDSE1_SE09_LENGTH                                 0x1
#define _LCDSE1_SE09_MASK                                   0x2
#define _LCDSE1_SE10_POSN                                   0x2
#define _LCDSE1_SE10_POSITION                               0x2
#define _LCDSE1_SE10_SIZE                                   0x1
#define _LCDSE1_SE10_LENGTH                                 0x1
#define _LCDSE1_SE10_MASK                                   0x4
#define _LCDSE1_SE11_POSN                                   0x3
#define _LCDSE1_SE11_POSITION                               0x3
#define _LCDSE1_SE11_SIZE                                   0x1
#define _LCDSE1_SE11_LENGTH                                 0x1
#define _LCDSE1_SE11_MASK                                   0x8
#define _LCDSE1_SE12_POSN                                   0x4
#define _LCDSE1_SE12_POSITION                               0x4
#define _LCDSE1_SE12_SIZE                                   0x1
#define _LCDSE1_SE12_LENGTH                                 0x1
#define _LCDSE1_SE12_MASK                                   0x10
#define _LCDSE1_SE13_POSN                                   0x5
#define _LCDSE1_SE13_POSITION                               0x5
#define _LCDSE1_SE13_SIZE                                   0x1
#define _LCDSE1_SE13_LENGTH                                 0x1
#define _LCDSE1_SE13_MASK                                   0x20
#define _LCDSE1_SE14_POSN                                   0x6
#define _LCDSE1_SE14_POSITION                               0x6
#define _LCDSE1_SE14_SIZE                                   0x1
#define _LCDSE1_SE14_LENGTH                                 0x1
#define _LCDSE1_SE14_MASK                                   0x40
#define _LCDSE1_SE15_POSN                                   0x7
#define _LCDSE1_SE15_POSITION                               0x7
#define _LCDSE1_SE15_SIZE                                   0x1
#define _LCDSE1_SE15_LENGTH                                 0x1
#define _LCDSE1_SE15_MASK                                   0x80

// Register: LCDSE2
#define LCDSE2 LCDSE2
extern volatile unsigned char           LCDSE2              __at(0xEF8);
#ifndef _LIB_BUILD
asm("LCDSE2 equ 0EF8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SE16                   :1;
        unsigned SE17                   :1;
        unsigned SE18                   :1;
        unsigned SE19                   :1;
        unsigned SE20                   :1;
        unsigned SE21                   :1;
        unsigned SE22                   :1;
        unsigned SE23                   :1;
    };
} LCDSE2bits_t;
extern volatile LCDSE2bits_t LCDSE2bits __at(0xEF8);
// bitfield macros
#define _LCDSE2_SE16_POSN                                   0x0
#define _LCDSE2_SE16_POSITION                               0x0
#define _LCDSE2_SE16_SIZE                                   0x1
#define _LCDSE2_SE16_LENGTH                                 0x1
#define _LCDSE2_SE16_MASK                                   0x1
#define _LCDSE2_SE17_POSN                                   0x1
#define _LCDSE2_SE17_POSITION                               0x1
#define _LCDSE2_SE17_SIZE                                   0x1
#define _LCDSE2_SE17_LENGTH                                 0x1
#define _LCDSE2_SE17_MASK                                   0x2
#define _LCDSE2_SE18_POSN                                   0x2
#define _LCDSE2_SE18_POSITION                               0x2
#define _LCDSE2_SE18_SIZE                                   0x1
#define _LCDSE2_SE18_LENGTH                                 0x1
#define _LCDSE2_SE18_MASK                                   0x4
#define _LCDSE2_SE19_POSN                                   0x3
#define _LCDSE2_SE19_POSITION                               0x3
#define _LCDSE2_SE19_SIZE                                   0x1
#define _LCDSE2_SE19_LENGTH                                 0x1
#define _LCDSE2_SE19_MASK                                   0x8
#define _LCDSE2_SE20_POSN                                   0x4
#define _LCDSE2_SE20_POSITION                               0x4
#define _LCDSE2_SE20_SIZE                                   0x1
#define _LCDSE2_SE20_LENGTH                                 0x1
#define _LCDSE2_SE20_MASK                                   0x10
#define _LCDSE2_SE21_POSN                                   0x5
#define _LCDSE2_SE21_POSITION                               0x5
#define _LCDSE2_SE21_SIZE                                   0x1
#define _LCDSE2_SE21_LENGTH                                 0x1
#define _LCDSE2_SE21_MASK                                   0x20
#define _LCDSE2_SE22_POSN                                   0x6
#define _LCDSE2_SE22_POSITION                               0x6
#define _LCDSE2_SE22_SIZE                                   0x1
#define _LCDSE2_SE22_LENGTH                                 0x1
#define _LCDSE2_SE22_MASK                                   0x40
#define _LCDSE2_SE23_POSN                                   0x7
#define _LCDSE2_SE23_POSITION                               0x7
#define _LCDSE2_SE23_SIZE                                   0x1
#define _LCDSE2_SE23_LENGTH                                 0x1
#define _LCDSE2_SE23_MASK                                   0x80

// Register: LCDSE3
#define LCDSE3 LCDSE3
extern volatile unsigned char           LCDSE3              __at(0xEF9);
#ifndef _LIB_BUILD
asm("LCDSE3 equ 0EF9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SE24                   :1;
        unsigned SE25                   :1;
        unsigned SE26                   :1;
        unsigned SE27                   :1;
        unsigned SE28                   :1;
        unsigned SE29                   :1;
        unsigned SE30                   :1;
        unsigned SE31                   :1;
    };
} LCDSE3bits_t;
extern volatile LCDSE3bits_t LCDSE3bits __at(0xEF9);
// bitfield macros
#define _LCDSE3_SE24_POSN                                   0x0
#define _LCDSE3_SE24_POSITION                               0x0
#define _LCDSE3_SE24_SIZE                                   0x1
#define _LCDSE3_SE24_LENGTH                                 0x1
#define _LCDSE3_SE24_MASK                                   0x1
#define _LCDSE3_SE25_POSN                                   0x1
#define _LCDSE3_SE25_POSITION                               0x1
#define _LCDSE3_SE25_SIZE                                   0x1
#define _LCDSE3_SE25_LENGTH                                 0x1
#define _LCDSE3_SE25_MASK                                   0x2
#define _LCDSE3_SE26_POSN                                   0x2
#define _LCDSE3_SE26_POSITION                               0x2
#define _LCDSE3_SE26_SIZE                                   0x1
#define _LCDSE3_SE26_LENGTH                                 0x1
#define _LCDSE3_SE26_MASK                                   0x4
#define _LCDSE3_SE27_POSN                                   0x3
#define _LCDSE3_SE27_POSITION                               0x3
#define _LCDSE3_SE27_SIZE                                   0x1
#define _LCDSE3_SE27_LENGTH                                 0x1
#define _LCDSE3_SE27_MASK                                   0x8
#define _LCDSE3_SE28_POSN                                   0x4
#define _LCDSE3_SE28_POSITION                               0x4
#define _LCDSE3_SE28_SIZE                                   0x1
#define _LCDSE3_SE28_LENGTH                                 0x1
#define _LCDSE3_SE28_MASK                                   0x10
#define _LCDSE3_SE29_POSN                                   0x5
#define _LCDSE3_SE29_POSITION                               0x5
#define _LCDSE3_SE29_SIZE                                   0x1
#define _LCDSE3_SE29_LENGTH                                 0x1
#define _LCDSE3_SE29_MASK                                   0x20
#define _LCDSE3_SE30_POSN                                   0x6
#define _LCDSE3_SE30_POSITION                               0x6
#define _LCDSE3_SE30_SIZE                                   0x1
#define _LCDSE3_SE30_LENGTH                                 0x1
#define _LCDSE3_SE30_MASK                                   0x40
#define _LCDSE3_SE31_POSN                                   0x7
#define _LCDSE3_SE31_POSITION                               0x7
#define _LCDSE3_SE31_SIZE                                   0x1
#define _LCDSE3_SE31_LENGTH                                 0x1
#define _LCDSE3_SE31_MASK                                   0x80

// Register: LCDSE4
#define LCDSE4 LCDSE4
extern volatile unsigned char           LCDSE4              __at(0xEFA);
#ifndef _LIB_BUILD
asm("LCDSE4 equ 0EFAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SE32                   :1;
        unsigned SE33                   :1;
        unsigned SE34                   :1;
        unsigned SE35                   :1;
        unsigned SE36                   :1;
        unsigned SE37                   :1;
        unsigned SE38                   :1;
        unsigned SE39                   :1;
    };
} LCDSE4bits_t;
extern volatile LCDSE4bits_t LCDSE4bits __at(0xEFA);
// bitfield macros
#define _LCDSE4_SE32_POSN                                   0x0
#define _LCDSE4_SE32_POSITION                               0x0
#define _LCDSE4_SE32_SIZE                                   0x1
#define _LCDSE4_SE32_LENGTH                                 0x1
#define _LCDSE4_SE32_MASK                                   0x1
#define _LCDSE4_SE33_POSN                                   0x1
#define _LCDSE4_SE33_POSITION                               0x1
#define _LCDSE4_SE33_SIZE                                   0x1
#define _LCDSE4_SE33_LENGTH                                 0x1
#define _LCDSE4_SE33_MASK                                   0x2
#define _LCDSE4_SE34_POSN                                   0x2
#define _LCDSE4_SE34_POSITION                               0x2
#define _LCDSE4_SE34_SIZE                                   0x1
#define _LCDSE4_SE34_LENGTH                                 0x1
#define _LCDSE4_SE34_MASK                                   0x4
#define _LCDSE4_SE35_POSN                                   0x3
#define _LCDSE4_SE35_POSITION                               0x3
#define _LCDSE4_SE35_SIZE                                   0x1
#define _LCDSE4_SE35_LENGTH                                 0x1
#define _LCDSE4_SE35_MASK                                   0x8
#define _LCDSE4_SE36_POSN                                   0x4
#define _LCDSE4_SE36_POSITION                               0x4
#define _LCDSE4_SE36_SIZE                                   0x1
#define _LCDSE4_SE36_LENGTH                                 0x1
#define _LCDSE4_SE36_MASK                                   0x10
#define _LCDSE4_SE37_POSN                                   0x5
#define _LCDSE4_SE37_POSITION                               0x5
#define _LCDSE4_SE37_SIZE                                   0x1
#define _LCDSE4_SE37_LENGTH                                 0x1
#define _LCDSE4_SE37_MASK                                   0x20
#define _LCDSE4_SE38_POSN                                   0x6
#define _LCDSE4_SE38_POSITION                               0x6
#define _LCDSE4_SE38_SIZE                                   0x1
#define _LCDSE4_SE38_LENGTH                                 0x1
#define _LCDSE4_SE38_MASK                                   0x40
#define _LCDSE4_SE39_POSN                                   0x7
#define _LCDSE4_SE39_POSITION                               0x7
#define _LCDSE4_SE39_SIZE                                   0x1
#define _LCDSE4_SE39_LENGTH                                 0x1
#define _LCDSE4_SE39_MASK                                   0x80

// Register: LCDSE5
#define LCDSE5 LCDSE5
extern volatile unsigned char           LCDSE5              __at(0xEFB);
#ifndef _LIB_BUILD
asm("LCDSE5 equ 0EFBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SE40                   :1;
        unsigned SE41                   :1;
        unsigned SE42                   :1;
        unsigned SE43                   :1;
        unsigned SE44                   :1;
        unsigned SE45                   :1;
        unsigned SE46                   :1;
        unsigned SE47                   :1;
    };
} LCDSE5bits_t;
extern volatile LCDSE5bits_t LCDSE5bits __at(0xEFB);
// bitfield macros
#define _LCDSE5_SE40_POSN                                   0x0
#define _LCDSE5_SE40_POSITION                               0x0
#define _LCDSE5_SE40_SIZE                                   0x1
#define _LCDSE5_SE40_LENGTH                                 0x1
#define _LCDSE5_SE40_MASK                                   0x1
#define _LCDSE5_SE41_POSN                                   0x1
#define _LCDSE5_SE41_POSITION                               0x1
#define _LCDSE5_SE41_SIZE                                   0x1
#define _LCDSE5_SE41_LENGTH                                 0x1
#define _LCDSE5_SE41_MASK                                   0x2
#define _LCDSE5_SE42_POSN                                   0x2
#define _LCDSE5_SE42_POSITION                               0x2
#define _LCDSE5_SE42_SIZE                                   0x1
#define _LCDSE5_SE42_LENGTH                                 0x1
#define _LCDSE5_SE42_MASK                                   0x4
#define _LCDSE5_SE43_POSN                                   0x3
#define _LCDSE5_SE43_POSITION                               0x3
#define _LCDSE5_SE43_SIZE                                   0x1
#define _LCDSE5_SE43_LENGTH                                 0x1
#define _LCDSE5_SE43_MASK                                   0x8
#define _LCDSE5_SE44_POSN                                   0x4
#define _LCDSE5_SE44_POSITION                               0x4
#define _LCDSE5_SE44_SIZE                                   0x1
#define _LCDSE5_SE44_LENGTH                                 0x1
#define _LCDSE5_SE44_MASK                                   0x10
#define _LCDSE5_SE45_POSN                                   0x5
#define _LCDSE5_SE45_POSITION                               0x5
#define _LCDSE5_SE45_SIZE                                   0x1
#define _LCDSE5_SE45_LENGTH                                 0x1
#define _LCDSE5_SE45_MASK                                   0x20
#define _LCDSE5_SE46_POSN                                   0x6
#define _LCDSE5_SE46_POSITION                               0x6
#define _LCDSE5_SE46_SIZE                                   0x1
#define _LCDSE5_SE46_LENGTH                                 0x1
#define _LCDSE5_SE46_MASK                                   0x40
#define _LCDSE5_SE47_POSN                                   0x7
#define _LCDSE5_SE47_POSITION                               0x7
#define _LCDSE5_SE47_SIZE                                   0x1
#define _LCDSE5_SE47_LENGTH                                 0x1
#define _LCDSE5_SE47_MASK                                   0x80

// Register: LCDRL
#define LCDRL LCDRL
extern volatile unsigned char           LCDRL               __at(0xEFC);
#ifndef _LIB_BUILD
asm("LCDRL equ 0EFCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LRLAT                  :3;
        unsigned LCDIRI                 :1;
        unsigned LRLBP                  :2;
        unsigned LRLAP                  :2;
    };
    struct {
        unsigned LRLAT0                 :1;
        unsigned LRLAT1                 :1;
        unsigned LRLAT2                 :1;
        unsigned                        :1;
        unsigned LRLBP0                 :1;
        unsigned LRLBP1                 :1;
        unsigned LRLAP0                 :1;
        unsigned LRLAP1                 :1;
    };
} LCDRLbits_t;
extern volatile LCDRLbits_t LCDRLbits __at(0xEFC);
// bitfield macros
#define _LCDRL_LRLAT_POSN                                   0x0
#define _LCDRL_LRLAT_POSITION                               0x0
#define _LCDRL_LRLAT_SIZE                                   0x3
#define _LCDRL_LRLAT_LENGTH                                 0x3
#define _LCDRL_LRLAT_MASK                                   0x7
#define _LCDRL_LCDIRI_POSN                                  0x3
#define _LCDRL_LCDIRI_POSITION                              0x3
#define _LCDRL_LCDIRI_SIZE                                  0x1
#define _LCDRL_LCDIRI_LENGTH                                0x1
#define _LCDRL_LCDIRI_MASK                                  0x8
#define _LCDRL_LRLBP_POSN                                   0x4
#define _LCDRL_LRLBP_POSITION                               0x4
#define _LCDRL_LRLBP_SIZE                                   0x2
#define _LCDRL_LRLBP_LENGTH                                 0x2
#define _LCDRL_LRLBP_MASK                                   0x30
#define _LCDRL_LRLAP_POSN                                   0x6
#define _LCDRL_LRLAP_POSITION                               0x6
#define _LCDRL_LRLAP_SIZE                                   0x2
#define _LCDRL_LRLAP_LENGTH                                 0x2
#define _LCDRL_LRLAP_MASK                                   0xC0
#define _LCDRL_LRLAT0_POSN                                  0x0
#define _LCDRL_LRLAT0_POSITION                              0x0
#define _LCDRL_LRLAT0_SIZE                                  0x1
#define _LCDRL_LRLAT0_LENGTH                                0x1
#define _LCDRL_LRLAT0_MASK                                  0x1
#define _LCDRL_LRLAT1_POSN                                  0x1
#define _LCDRL_LRLAT1_POSITION                              0x1
#define _LCDRL_LRLAT1_SIZE                                  0x1
#define _LCDRL_LRLAT1_LENGTH                                0x1
#define _LCDRL_LRLAT1_MASK                                  0x2
#define _LCDRL_LRLAT2_POSN                                  0x2
#define _LCDRL_LRLAT2_POSITION                              0x2
#define _LCDRL_LRLAT2_SIZE                                  0x1
#define _LCDRL_LRLAT2_LENGTH                                0x1
#define _LCDRL_LRLAT2_MASK                                  0x4
#define _LCDRL_LRLBP0_POSN                                  0x4
#define _LCDRL_LRLBP0_POSITION                              0x4
#define _LCDRL_LRLBP0_SIZE                                  0x1
#define _LCDRL_LRLBP0_LENGTH                                0x1
#define _LCDRL_LRLBP0_MASK                                  0x10
#define _LCDRL_LRLBP1_POSN                                  0x5
#define _LCDRL_LRLBP1_POSITION                              0x5
#define _LCDRL_LRLBP1_SIZE                                  0x1
#define _LCDRL_LRLBP1_LENGTH                                0x1
#define _LCDRL_LRLBP1_MASK                                  0x20
#define _LCDRL_LRLAP0_POSN                                  0x6
#define _LCDRL_LRLAP0_POSITION                              0x6
#define _LCDRL_LRLAP0_SIZE                                  0x1
#define _LCDRL_LRLAP0_LENGTH                                0x1
#define _LCDRL_LRLAP0_MASK                                  0x40
#define _LCDRL_LRLAP1_POSN                                  0x7
#define _LCDRL_LRLAP1_POSITION                              0x7
#define _LCDRL_LRLAP1_SIZE                                  0x1
#define _LCDRL_LRLAP1_LENGTH                                0x1
#define _LCDRL_LRLAP1_MASK                                  0x80

// Register: LCDREF
#define LCDREF LCDREF
extern volatile unsigned char           LCDREF              __at(0xEFD);
#ifndef _LIB_BUILD
asm("LCDREF equ 0EFDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned VLCD1PE                :1;
        unsigned VLCD2PE                :1;
        unsigned VLCD3PE                :1;
        unsigned LCDCST                 :3;
        unsigned LCDIRS                 :1;
        unsigned LCDIRE                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned LCDCST0                :1;
        unsigned LCDCST1                :1;
        unsigned LCDCST2                :1;
    };
} LCDREFbits_t;
extern volatile LCDREFbits_t LCDREFbits __at(0xEFD);
// bitfield macros
#define _LCDREF_VLCD1PE_POSN                                0x0
#define _LCDREF_VLCD1PE_POSITION                            0x0
#define _LCDREF_VLCD1PE_SIZE                                0x1
#define _LCDREF_VLCD1PE_LENGTH                              0x1
#define _LCDREF_VLCD1PE_MASK                                0x1
#define _LCDREF_VLCD2PE_POSN                                0x1
#define _LCDREF_VLCD2PE_POSITION                            0x1
#define _LCDREF_VLCD2PE_SIZE                                0x1
#define _LCDREF_VLCD2PE_LENGTH                              0x1
#define _LCDREF_VLCD2PE_MASK                                0x2
#define _LCDREF_VLCD3PE_POSN                                0x2
#define _LCDREF_VLCD3PE_POSITION                            0x2
#define _LCDREF_VLCD3PE_SIZE                                0x1
#define _LCDREF_VLCD3PE_LENGTH                              0x1
#define _LCDREF_VLCD3PE_MASK                                0x4
#define _LCDREF_LCDCST_POSN                                 0x3
#define _LCDREF_LCDCST_POSITION                             0x3
#define _LCDREF_LCDCST_SIZE                                 0x3
#define _LCDREF_LCDCST_LENGTH                               0x3
#define _LCDREF_LCDCST_MASK                                 0x38
#define _LCDREF_LCDIRS_POSN                                 0x6
#define _LCDREF_LCDIRS_POSITION                             0x6
#define _LCDREF_LCDIRS_SIZE                                 0x1
#define _LCDREF_LCDIRS_LENGTH                               0x1
#define _LCDREF_LCDIRS_MASK                                 0x40
#define _LCDREF_LCDIRE_POSN                                 0x7
#define _LCDREF_LCDIRE_POSITION                             0x7
#define _LCDREF_LCDIRE_SIZE                                 0x1
#define _LCDREF_LCDIRE_LENGTH                               0x1
#define _LCDREF_LCDIRE_MASK                                 0x80
#define _LCDREF_LCDCST0_POSN                                0x3
#define _LCDREF_LCDCST0_POSITION                            0x3
#define _LCDREF_LCDCST0_SIZE                                0x1
#define _LCDREF_LCDCST0_LENGTH                              0x1
#define _LCDREF_LCDCST0_MASK                                0x8
#define _LCDREF_LCDCST1_POSN                                0x4
#define _LCDREF_LCDCST1_POSITION                            0x4
#define _LCDREF_LCDCST1_SIZE                                0x1
#define _LCDREF_LCDCST1_LENGTH                              0x1
#define _LCDREF_LCDCST1_MASK                                0x10
#define _LCDREF_LCDCST2_POSN                                0x5
#define _LCDREF_LCDCST2_POSITION                            0x5
#define _LCDREF_LCDCST2_SIZE                                0x1
#define _LCDREF_LCDCST2_LENGTH                              0x1
#define _LCDREF_LCDCST2_MASK                                0x20

// Register: SSP2CON2
#define SSP2CON2 SSP2CON2
extern volatile unsigned char           SSP2CON2            __at(0xEFE);
#ifndef _LIB_BUILD
asm("SSP2CON2 equ 0EFEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned ADMSK1                 :1;
        unsigned ADMSK2                 :1;
        unsigned ADMSK3                 :1;
        unsigned ADMSK4                 :1;
        unsigned ADMSK5                 :1;
    };
    struct {
        unsigned SEN2                   :1;
        unsigned ADMSK12                :1;
        unsigned ADMSK22                :1;
        unsigned ADMSK32                :1;
        unsigned ACKEN2                 :1;
        unsigned ACKDT2                 :1;
        unsigned ACKSTAT2               :1;
        unsigned GCEN2                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned RSEN2                  :1;
        unsigned PEN2                   :1;
        unsigned RCEN2                  :1;
        unsigned ADMSK42                :1;
        unsigned ADMSK52                :1;
    };
} SSP2CON2bits_t;
extern volatile SSP2CON2bits_t SSP2CON2bits __at(0xEFE);
// bitfield macros
#define _SSP2CON2_SEN_POSN                                  0x0
#define _SSP2CON2_SEN_POSITION                              0x0
#define _SSP2CON2_SEN_SIZE                                  0x1
#define _SSP2CON2_SEN_LENGTH                                0x1
#define _SSP2CON2_SEN_MASK                                  0x1
#define _SSP2CON2_RSEN_POSN                                 0x1
#define _SSP2CON2_RSEN_POSITION                             0x1
#define _SSP2CON2_RSEN_SIZE                                 0x1
#define _SSP2CON2_RSEN_LENGTH                               0x1
#define _SSP2CON2_RSEN_MASK                                 0x2
#define _SSP2CON2_PEN_POSN                                  0x2
#define _SSP2CON2_PEN_POSITION                              0x2
#define _SSP2CON2_PEN_SIZE                                  0x1
#define _SSP2CON2_PEN_LENGTH                                0x1
#define _SSP2CON2_PEN_MASK                                  0x4
#define _SSP2CON2_RCEN_POSN                                 0x3
#define _SSP2CON2_RCEN_POSITION                             0x3
#define _SSP2CON2_RCEN_SIZE                                 0x1
#define _SSP2CON2_RCEN_LENGTH                               0x1
#define _SSP2CON2_RCEN_MASK                                 0x8
#define _SSP2CON2_ACKEN_POSN                                0x4
#define _SSP2CON2_ACKEN_POSITION                            0x4
#define _SSP2CON2_ACKEN_SIZE                                0x1
#define _SSP2CON2_ACKEN_LENGTH                              0x1
#define _SSP2CON2_ACKEN_MASK                                0x10
#define _SSP2CON2_ACKDT_POSN                                0x5
#define _SSP2CON2_ACKDT_POSITION                            0x5
#define _SSP2CON2_ACKDT_SIZE                                0x1
#define _SSP2CON2_ACKDT_LENGTH                              0x1
#define _SSP2CON2_ACKDT_MASK                                0x20
#define _SSP2CON2_ACKSTAT_POSN                              0x6
#define _SSP2CON2_ACKSTAT_POSITION                          0x6
#define _SSP2CON2_ACKSTAT_SIZE                              0x1
#define _SSP2CON2_ACKSTAT_LENGTH                            0x1
#define _SSP2CON2_ACKSTAT_MASK                              0x40
#define _SSP2CON2_GCEN_POSN                                 0x7
#define _SSP2CON2_GCEN_POSITION                             0x7
#define _SSP2CON2_GCEN_SIZE                                 0x1
#define _SSP2CON2_GCEN_LENGTH                               0x1
#define _SSP2CON2_GCEN_MASK                                 0x80
#define _SSP2CON2_ADMSK1_POSN                               0x1
#define _SSP2CON2_ADMSK1_POSITION                           0x1
#define _SSP2CON2_ADMSK1_SIZE                               0x1
#define _SSP2CON2_ADMSK1_LENGTH                             0x1
#define _SSP2CON2_ADMSK1_MASK                               0x2
#define _SSP2CON2_ADMSK2_POSN                               0x2
#define _SSP2CON2_ADMSK2_POSITION                           0x2
#define _SSP2CON2_ADMSK2_SIZE                               0x1
#define _SSP2CON2_ADMSK2_LENGTH                             0x1
#define _SSP2CON2_ADMSK2_MASK                               0x4
#define _SSP2CON2_ADMSK3_POSN                               0x3
#define _SSP2CON2_ADMSK3_POSITION                           0x3
#define _SSP2CON2_ADMSK3_SIZE                               0x1
#define _SSP2CON2_ADMSK3_LENGTH                             0x1
#define _SSP2CON2_ADMSK3_MASK                               0x8
#define _SSP2CON2_ADMSK4_POSN                               0x4
#define _SSP2CON2_ADMSK4_POSITION                           0x4
#define _SSP2CON2_ADMSK4_SIZE                               0x1
#define _SSP2CON2_ADMSK4_LENGTH                             0x1
#define _SSP2CON2_ADMSK4_MASK                               0x10
#define _SSP2CON2_ADMSK5_POSN                               0x5
#define _SSP2CON2_ADMSK5_POSITION                           0x5
#define _SSP2CON2_ADMSK5_SIZE                               0x1
#define _SSP2CON2_ADMSK5_LENGTH                             0x1
#define _SSP2CON2_ADMSK5_MASK                               0x20
#define _SSP2CON2_SEN2_POSN                                 0x0
#define _SSP2CON2_SEN2_POSITION                             0x0
#define _SSP2CON2_SEN2_SIZE                                 0x1
#define _SSP2CON2_SEN2_LENGTH                               0x1
#define _SSP2CON2_SEN2_MASK                                 0x1
#define _SSP2CON2_ADMSK12_POSN                              0x1
#define _SSP2CON2_ADMSK12_POSITION                          0x1
#define _SSP2CON2_ADMSK12_SIZE                              0x1
#define _SSP2CON2_ADMSK12_LENGTH                            0x1
#define _SSP2CON2_ADMSK12_MASK                              0x2
#define _SSP2CON2_ADMSK22_POSN                              0x2
#define _SSP2CON2_ADMSK22_POSITION                          0x2
#define _SSP2CON2_ADMSK22_SIZE                              0x1
#define _SSP2CON2_ADMSK22_LENGTH                            0x1
#define _SSP2CON2_ADMSK22_MASK                              0x4
#define _SSP2CON2_ADMSK32_POSN                              0x3
#define _SSP2CON2_ADMSK32_POSITION                          0x3
#define _SSP2CON2_ADMSK32_SIZE                              0x1
#define _SSP2CON2_ADMSK32_LENGTH                            0x1
#define _SSP2CON2_ADMSK32_MASK                              0x8
#define _SSP2CON2_ACKEN2_POSN                               0x4
#define _SSP2CON2_ACKEN2_POSITION                           0x4
#define _SSP2CON2_ACKEN2_SIZE                               0x1
#define _SSP2CON2_ACKEN2_LENGTH                             0x1
#define _SSP2CON2_ACKEN2_MASK                               0x10
#define _SSP2CON2_ACKDT2_POSN                               0x5
#define _SSP2CON2_ACKDT2_POSITION                           0x5
#define _SSP2CON2_ACKDT2_SIZE                               0x1
#define _SSP2CON2_ACKDT2_LENGTH                             0x1
#define _SSP2CON2_ACKDT2_MASK                               0x20
#define _SSP2CON2_ACKSTAT2_POSN                             0x6
#define _SSP2CON2_ACKSTAT2_POSITION                         0x6
#define _SSP2CON2_ACKSTAT2_SIZE                             0x1
#define _SSP2CON2_ACKSTAT2_LENGTH                           0x1
#define _SSP2CON2_ACKSTAT2_MASK                             0x40
#define _SSP2CON2_GCEN2_POSN                                0x7
#define _SSP2CON2_GCEN2_POSITION                            0x7
#define _SSP2CON2_GCEN2_SIZE                                0x1
#define _SSP2CON2_GCEN2_LENGTH                              0x1
#define _SSP2CON2_GCEN2_MASK                                0x80
#define _SSP2CON2_RSEN2_POSN                                0x1
#define _SSP2CON2_RSEN2_POSITION                            0x1
#define _SSP2CON2_RSEN2_SIZE                                0x1
#define _SSP2CON2_RSEN2_LENGTH                              0x1
#define _SSP2CON2_RSEN2_MASK                                0x2
#define _SSP2CON2_PEN2_POSN                                 0x2
#define _SSP2CON2_PEN2_POSITION                             0x2
#define _SSP2CON2_PEN2_SIZE                                 0x1
#define _SSP2CON2_PEN2_LENGTH                               0x1
#define _SSP2CON2_PEN2_MASK                                 0x4
#define _SSP2CON2_RCEN2_POSN                                0x3
#define _SSP2CON2_RCEN2_POSITION                            0x3
#define _SSP2CON2_RCEN2_SIZE                                0x1
#define _SSP2CON2_RCEN2_LENGTH                              0x1
#define _SSP2CON2_RCEN2_MASK                                0x8
#define _SSP2CON2_ADMSK42_POSN                              0x4
#define _SSP2CON2_ADMSK42_POSITION                          0x4
#define _SSP2CON2_ADMSK42_SIZE                              0x1
#define _SSP2CON2_ADMSK42_LENGTH                            0x1
#define _SSP2CON2_ADMSK42_MASK                              0x10
#define _SSP2CON2_ADMSK52_POSN                              0x5
#define _SSP2CON2_ADMSK52_POSITION                          0x5
#define _SSP2CON2_ADMSK52_SIZE                              0x1
#define _SSP2CON2_ADMSK52_LENGTH                            0x1
#define _SSP2CON2_ADMSK52_MASK                              0x20

// Register: SSP2CON1
#define SSP2CON1 SSP2CON1
extern volatile unsigned char           SSP2CON1            __at(0xEFF);
#ifndef _LIB_BUILD
asm("SSP2CON1 equ 0EFFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM                   :4;
    };
    struct {
        unsigned SSPM02                 :1;
        unsigned SSPM12                 :1;
        unsigned SSPM22                 :1;
        unsigned SSPM32                 :1;
        unsigned CKP2                   :1;
        unsigned SSPEN2                 :1;
        unsigned SSPOV2                 :1;
        unsigned WCOL2                  :1;
    };
} SSP2CON1bits_t;
extern volatile SSP2CON1bits_t SSP2CON1bits __at(0xEFF);
// bitfield macros
#define _SSP2CON1_SSPM0_POSN                                0x0
#define _SSP2CON1_SSPM0_POSITION                            0x0
#define _SSP2CON1_SSPM0_SIZE                                0x1
#define _SSP2CON1_SSPM0_LENGTH                              0x1
#define _SSP2CON1_SSPM0_MASK                                0x1
#define _SSP2CON1_SSPM1_POSN                                0x1
#define _SSP2CON1_SSPM1_POSITION                            0x1
#define _SSP2CON1_SSPM1_SIZE                                0x1
#define _SSP2CON1_SSPM1_LENGTH                              0x1
#define _SSP2CON1_SSPM1_MASK                                0x2
#define _SSP2CON1_SSPM2_POSN                                0x2
#define _SSP2CON1_SSPM2_POSITION                            0x2
#define _SSP2CON1_SSPM2_SIZE                                0x1
#define _SSP2CON1_SSPM2_LENGTH                              0x1
#define _SSP2CON1_SSPM2_MASK                                0x4
#define _SSP2CON1_SSPM3_POSN                                0x3
#define _SSP2CON1_SSPM3_POSITION                            0x3
#define _SSP2CON1_SSPM3_SIZE                                0x1
#define _SSP2CON1_SSPM3_LENGTH                              0x1
#define _SSP2CON1_SSPM3_MASK                                0x8
#define _SSP2CON1_CKP_POSN                                  0x4
#define _SSP2CON1_CKP_POSITION                              0x4
#define _SSP2CON1_CKP_SIZE                                  0x1
#define _SSP2CON1_CKP_LENGTH                                0x1
#define _SSP2CON1_CKP_MASK                                  0x10
#define _SSP2CON1_SSPEN_POSN                                0x5
#define _SSP2CON1_SSPEN_POSITION                            0x5
#define _SSP2CON1_SSPEN_SIZE                                0x1
#define _SSP2CON1_SSPEN_LENGTH                              0x1
#define _SSP2CON1_SSPEN_MASK                                0x20
#define _SSP2CON1_SSPOV_POSN                                0x6
#define _SSP2CON1_SSPOV_POSITION                            0x6
#define _SSP2CON1_SSPOV_SIZE                                0x1
#define _SSP2CON1_SSPOV_LENGTH                              0x1
#define _SSP2CON1_SSPOV_MASK                                0x40
#define _SSP2CON1_WCOL_POSN                                 0x7
#define _SSP2CON1_WCOL_POSITION                             0x7
#define _SSP2CON1_WCOL_SIZE                                 0x1
#define _SSP2CON1_WCOL_LENGTH                               0x1
#define _SSP2CON1_WCOL_MASK                                 0x80
#define _SSP2CON1_SSPM_POSN                                 0x0
#define _SSP2CON1_SSPM_POSITION                             0x0
#define _SSP2CON1_SSPM_SIZE                                 0x4
#define _SSP2CON1_SSPM_LENGTH                               0x4
#define _SSP2CON1_SSPM_MASK                                 0xF
#define _SSP2CON1_SSPM02_POSN                               0x0
#define _SSP2CON1_SSPM02_POSITION                           0x0
#define _SSP2CON1_SSPM02_SIZE                               0x1
#define _SSP2CON1_SSPM02_LENGTH                             0x1
#define _SSP2CON1_SSPM02_MASK                               0x1
#define _SSP2CON1_SSPM12_POSN                               0x1
#define _SSP2CON1_SSPM12_POSITION                           0x1
#define _SSP2CON1_SSPM12_SIZE                               0x1
#define _SSP2CON1_SSPM12_LENGTH                             0x1
#define _SSP2CON1_SSPM12_MASK                               0x2
#define _SSP2CON1_SSPM22_POSN                               0x2
#define _SSP2CON1_SSPM22_POSITION                           0x2
#define _SSP2CON1_SSPM22_SIZE                               0x1
#define _SSP2CON1_SSPM22_LENGTH                             0x1
#define _SSP2CON1_SSPM22_MASK                               0x4
#define _SSP2CON1_SSPM32_POSN                               0x3
#define _SSP2CON1_SSPM32_POSITION                           0x3
#define _SSP2CON1_SSPM32_SIZE                               0x1
#define _SSP2CON1_SSPM32_LENGTH                             0x1
#define _SSP2CON1_SSPM32_MASK                               0x8
#define _SSP2CON1_CKP2_POSN                                 0x4
#define _SSP2CON1_CKP2_POSITION                             0x4
#define _SSP2CON1_CKP2_SIZE                                 0x1
#define _SSP2CON1_CKP2_LENGTH                               0x1
#define _SSP2CON1_CKP2_MASK                                 0x10
#define _SSP2CON1_SSPEN2_POSN                               0x5
#define _SSP2CON1_SSPEN2_POSITION                           0x5
#define _SSP2CON1_SSPEN2_SIZE                               0x1
#define _SSP2CON1_SSPEN2_LENGTH                             0x1
#define _SSP2CON1_SSPEN2_MASK                               0x20
#define _SSP2CON1_SSPOV2_POSN                               0x6
#define _SSP2CON1_SSPOV2_POSITION                           0x6
#define _SSP2CON1_SSPOV2_SIZE                               0x1
#define _SSP2CON1_SSPOV2_LENGTH                             0x1
#define _SSP2CON1_SSPOV2_MASK                               0x40
#define _SSP2CON1_WCOL2_POSN                                0x7
#define _SSP2CON1_WCOL2_POSITION                            0x7
#define _SSP2CON1_WCOL2_SIZE                                0x1
#define _SSP2CON1_WCOL2_LENGTH                              0x1
#define _SSP2CON1_WCOL2_MASK                                0x80

// Register: SSP2STAT
#define SSP2STAT SSP2STAT
extern volatile unsigned char           SSP2STAT            __at(0xF00);
#ifndef _LIB_BUILD
asm("SSP2STAT equ 0F00h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned R_NOT_W                :1;
    };
    struct {
        unsigned                        :5;
        unsigned D_NOT_A                :1;
    };
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned R                      :1;
        unsigned                        :2;
        unsigned D                      :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_W                    :1;
        unsigned                        :2;
        unsigned D_A                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned nW                     :1;
        unsigned                        :2;
        unsigned nA                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_WRITE              :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_ADDRESS            :1;
    };
    struct {
        unsigned                        :2;
        unsigned nWRITE                 :1;
        unsigned                        :2;
        unsigned nADDRESS               :1;
    };
    struct {
        unsigned                        :2;
        unsigned READ_WRITE             :1;
        unsigned                        :2;
        unsigned DATA_ADDRESS           :1;
    };
    struct {
        unsigned                        :2;
        unsigned I2C_READ               :1;
        unsigned I2C_START              :1;
        unsigned I2C_STOP               :1;
        unsigned I2C_DAT                :1;
    };
    struct {
        unsigned BF2                    :1;
        unsigned UA2                    :1;
        unsigned I2C_READ2              :1;
        unsigned I2C_START2             :1;
        unsigned I2C_STOP2              :1;
        unsigned DA2                    :1;
        unsigned CKE2                   :1;
        unsigned SMP2                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned READ_WRITE2            :1;
        unsigned S2                     :1;
        unsigned P2                     :1;
        unsigned DATA_ADDRESS2          :1;
    };
    struct {
        unsigned                        :2;
        unsigned RW2                    :1;
        unsigned START2                 :1;
        unsigned STOP2                  :1;
        unsigned D_A2                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned D_NOT_A2               :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_W2                   :1;
        unsigned                        :2;
        unsigned D_nA2                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_NOT_W2               :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_nW2                  :1;
        unsigned                        :2;
        unsigned I2C_DAT2               :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_W2                 :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_A2                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned nW2                    :1;
        unsigned                        :2;
        unsigned nA2                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_WRITE2             :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_ADDRESS2           :1;
    };
    struct {
        unsigned                        :2;
        unsigned nWRITE2                :1;
        unsigned                        :2;
        unsigned nADDRESS2              :1;
    };
} SSP2STATbits_t;
extern volatile SSP2STATbits_t SSP2STATbits __at(0xF00);
// bitfield macros
#define _SSP2STAT_R_NOT_W_POSN                              0x2
#define _SSP2STAT_R_NOT_W_POSITION                          0x2
#define _SSP2STAT_R_NOT_W_SIZE                              0x1
#define _SSP2STAT_R_NOT_W_LENGTH                            0x1
#define _SSP2STAT_R_NOT_W_MASK                              0x4
#define _SSP2STAT_D_NOT_A_POSN                              0x5
#define _SSP2STAT_D_NOT_A_POSITION                          0x5
#define _SSP2STAT_D_NOT_A_SIZE                              0x1
#define _SSP2STAT_D_NOT_A_LENGTH                            0x1
#define _SSP2STAT_D_NOT_A_MASK                              0x20
#define _SSP2STAT_BF_POSN                                   0x0
#define _SSP2STAT_BF_POSITION                               0x0
#define _SSP2STAT_BF_SIZE                                   0x1
#define _SSP2STAT_BF_LENGTH                                 0x1
#define _SSP2STAT_BF_MASK                                   0x1
#define _SSP2STAT_UA_POSN                                   0x1
#define _SSP2STAT_UA_POSITION                               0x1
#define _SSP2STAT_UA_SIZE                                   0x1
#define _SSP2STAT_UA_LENGTH                                 0x1
#define _SSP2STAT_UA_MASK                                   0x2
#define _SSP2STAT_R_nW_POSN                                 0x2
#define _SSP2STAT_R_nW_POSITION                             0x2
#define _SSP2STAT_R_nW_SIZE                                 0x1
#define _SSP2STAT_R_nW_LENGTH                               0x1
#define _SSP2STAT_R_nW_MASK                                 0x4
#define _SSP2STAT_S_POSN                                    0x3
#define _SSP2STAT_S_POSITION                                0x3
#define _SSP2STAT_S_SIZE                                    0x1
#define _SSP2STAT_S_LENGTH                                  0x1
#define _SSP2STAT_S_MASK                                    0x8
#define _SSP2STAT_P_POSN                                    0x4
#define _SSP2STAT_P_POSITION                                0x4
#define _SSP2STAT_P_SIZE                                    0x1
#define _SSP2STAT_P_LENGTH                                  0x1
#define _SSP2STAT_P_MASK                                    0x10
#define _SSP2STAT_D_nA_POSN                                 0x5
#define _SSP2STAT_D_nA_POSITION                             0x5
#define _SSP2STAT_D_nA_SIZE                                 0x1
#define _SSP2STAT_D_nA_LENGTH                               0x1
#define _SSP2STAT_D_nA_MASK                                 0x20
#define _SSP2STAT_CKE_POSN                                  0x6
#define _SSP2STAT_CKE_POSITION                              0x6
#define _SSP2STAT_CKE_SIZE                                  0x1
#define _SSP2STAT_CKE_LENGTH                                0x1
#define _SSP2STAT_CKE_MASK                                  0x40
#define _SSP2STAT_SMP_POSN                                  0x7
#define _SSP2STAT_SMP_POSITION                              0x7
#define _SSP2STAT_SMP_SIZE                                  0x1
#define _SSP2STAT_SMP_LENGTH                                0x1
#define _SSP2STAT_SMP_MASK                                  0x80
#define _SSP2STAT_R_POSN                                    0x2
#define _SSP2STAT_R_POSITION                                0x2
#define _SSP2STAT_R_SIZE                                    0x1
#define _SSP2STAT_R_LENGTH                                  0x1
#define _SSP2STAT_R_MASK                                    0x4
#define _SSP2STAT_D_POSN                                    0x5
#define _SSP2STAT_D_POSITION                                0x5
#define _SSP2STAT_D_SIZE                                    0x1
#define _SSP2STAT_D_LENGTH                                  0x1
#define _SSP2STAT_D_MASK                                    0x20
#define _SSP2STAT_R_W_POSN                                  0x2
#define _SSP2STAT_R_W_POSITION                              0x2
#define _SSP2STAT_R_W_SIZE                                  0x1
#define _SSP2STAT_R_W_LENGTH                                0x1
#define _SSP2STAT_R_W_MASK                                  0x4
#define _SSP2STAT_D_A_POSN                                  0x5
#define _SSP2STAT_D_A_POSITION                              0x5
#define _SSP2STAT_D_A_SIZE                                  0x1
#define _SSP2STAT_D_A_LENGTH                                0x1
#define _SSP2STAT_D_A_MASK                                  0x20
#define _SSP2STAT_nW_POSN                                   0x2
#define _SSP2STAT_nW_POSITION                               0x2
#define _SSP2STAT_nW_SIZE                                   0x1
#define _SSP2STAT_nW_LENGTH                                 0x1
#define _SSP2STAT_nW_MASK                                   0x4
#define _SSP2STAT_nA_POSN                                   0x5
#define _SSP2STAT_nA_POSITION                               0x5
#define _SSP2STAT_nA_SIZE                                   0x1
#define _SSP2STAT_nA_LENGTH                                 0x1
#define _SSP2STAT_nA_MASK                                   0x20
#define _SSP2STAT_NOT_WRITE_POSN                            0x2
#define _SSP2STAT_NOT_WRITE_POSITION                        0x2
#define _SSP2STAT_NOT_WRITE_SIZE                            0x1
#define _SSP2STAT_NOT_WRITE_LENGTH                          0x1
#define _SSP2STAT_NOT_WRITE_MASK                            0x4
#define _SSP2STAT_NOT_ADDRESS_POSN                          0x5
#define _SSP2STAT_NOT_ADDRESS_POSITION                      0x5
#define _SSP2STAT_NOT_ADDRESS_SIZE                          0x1
#define _SSP2STAT_NOT_ADDRESS_LENGTH                        0x1
#define _SSP2STAT_NOT_ADDRESS_MASK                          0x20
#define _SSP2STAT_nWRITE_POSN                               0x2
#define _SSP2STAT_nWRITE_POSITION                           0x2
#define _SSP2STAT_nWRITE_SIZE                               0x1
#define _SSP2STAT_nWRITE_LENGTH                             0x1
#define _SSP2STAT_nWRITE_MASK                               0x4
#define _SSP2STAT_nADDRESS_POSN                             0x5
#define _SSP2STAT_nADDRESS_POSITION                         0x5
#define _SSP2STAT_nADDRESS_SIZE                             0x1
#define _SSP2STAT_nADDRESS_LENGTH                           0x1
#define _SSP2STAT_nADDRESS_MASK                             0x20
#define _SSP2STAT_READ_WRITE_POSN                           0x2
#define _SSP2STAT_READ_WRITE_POSITION                       0x2
#define _SSP2STAT_READ_WRITE_SIZE                           0x1
#define _SSP2STAT_READ_WRITE_LENGTH                         0x1
#define _SSP2STAT_READ_WRITE_MASK                           0x4
#define _SSP2STAT_DATA_ADDRESS_POSN                         0x5
#define _SSP2STAT_DATA_ADDRESS_POSITION                     0x5
#define _SSP2STAT_DATA_ADDRESS_SIZE                         0x1
#define _SSP2STAT_DATA_ADDRESS_LENGTH                       0x1
#define _SSP2STAT_DATA_ADDRESS_MASK                         0x20
#define _SSP2STAT_I2C_READ_POSN                             0x2
#define _SSP2STAT_I2C_READ_POSITION                         0x2
#define _SSP2STAT_I2C_READ_SIZE                             0x1
#define _SSP2STAT_I2C_READ_LENGTH                           0x1
#define _SSP2STAT_I2C_READ_MASK                             0x4
#define _SSP2STAT_I2C_START_POSN                            0x3
#define _SSP2STAT_I2C_START_POSITION                        0x3
#define _SSP2STAT_I2C_START_SIZE                            0x1
#define _SSP2STAT_I2C_START_LENGTH                          0x1
#define _SSP2STAT_I2C_START_MASK                            0x8
#define _SSP2STAT_I2C_STOP_POSN                             0x4
#define _SSP2STAT_I2C_STOP_POSITION                         0x4
#define _SSP2STAT_I2C_STOP_SIZE                             0x1
#define _SSP2STAT_I2C_STOP_LENGTH                           0x1
#define _SSP2STAT_I2C_STOP_MASK                             0x10
#define _SSP2STAT_I2C_DAT_POSN                              0x5
#define _SSP2STAT_I2C_DAT_POSITION                          0x5
#define _SSP2STAT_I2C_DAT_SIZE                              0x1
#define _SSP2STAT_I2C_DAT_LENGTH                            0x1
#define _SSP2STAT_I2C_DAT_MASK                              0x20
#define _SSP2STAT_BF2_POSN                                  0x0
#define _SSP2STAT_BF2_POSITION                              0x0
#define _SSP2STAT_BF2_SIZE                                  0x1
#define _SSP2STAT_BF2_LENGTH                                0x1
#define _SSP2STAT_BF2_MASK                                  0x1
#define _SSP2STAT_UA2_POSN                                  0x1
#define _SSP2STAT_UA2_POSITION                              0x1
#define _SSP2STAT_UA2_SIZE                                  0x1
#define _SSP2STAT_UA2_LENGTH                                0x1
#define _SSP2STAT_UA2_MASK                                  0x2
#define _SSP2STAT_I2C_READ2_POSN                            0x2
#define _SSP2STAT_I2C_READ2_POSITION                        0x2
#define _SSP2STAT_I2C_READ2_SIZE                            0x1
#define _SSP2STAT_I2C_READ2_LENGTH                          0x1
#define _SSP2STAT_I2C_READ2_MASK                            0x4
#define _SSP2STAT_I2C_START2_POSN                           0x3
#define _SSP2STAT_I2C_START2_POSITION                       0x3
#define _SSP2STAT_I2C_START2_SIZE                           0x1
#define _SSP2STAT_I2C_START2_LENGTH                         0x1
#define _SSP2STAT_I2C_START2_MASK                           0x8
#define _SSP2STAT_I2C_STOP2_POSN                            0x4
#define _SSP2STAT_I2C_STOP2_POSITION                        0x4
#define _SSP2STAT_I2C_STOP2_SIZE                            0x1
#define _SSP2STAT_I2C_STOP2_LENGTH                          0x1
#define _SSP2STAT_I2C_STOP2_MASK                            0x10
#define _SSP2STAT_DA2_POSN                                  0x5
#define _SSP2STAT_DA2_POSITION                              0x5
#define _SSP2STAT_DA2_SIZE                                  0x1
#define _SSP2STAT_DA2_LENGTH                                0x1
#define _SSP2STAT_DA2_MASK                                  0x20
#define _SSP2STAT_CKE2_POSN                                 0x6
#define _SSP2STAT_CKE2_POSITION                             0x6
#define _SSP2STAT_CKE2_SIZE                                 0x1
#define _SSP2STAT_CKE2_LENGTH                               0x1
#define _SSP2STAT_CKE2_MASK                                 0x40
#define _SSP2STAT_SMP2_POSN                                 0x7
#define _SSP2STAT_SMP2_POSITION                             0x7
#define _SSP2STAT_SMP2_SIZE                                 0x1
#define _SSP2STAT_SMP2_LENGTH                               0x1
#define _SSP2STAT_SMP2_MASK                                 0x80
#define _SSP2STAT_READ_WRITE2_POSN                          0x2
#define _SSP2STAT_READ_WRITE2_POSITION                      0x2
#define _SSP2STAT_READ_WRITE2_SIZE                          0x1
#define _SSP2STAT_READ_WRITE2_LENGTH                        0x1
#define _SSP2STAT_READ_WRITE2_MASK                          0x4
#define _SSP2STAT_S2_POSN                                   0x3
#define _SSP2STAT_S2_POSITION                               0x3
#define _SSP2STAT_S2_SIZE                                   0x1
#define _SSP2STAT_S2_LENGTH                                 0x1
#define _SSP2STAT_S2_MASK                                   0x8
#define _SSP2STAT_P2_POSN                                   0x4
#define _SSP2STAT_P2_POSITION                               0x4
#define _SSP2STAT_P2_SIZE                                   0x1
#define _SSP2STAT_P2_LENGTH                                 0x1
#define _SSP2STAT_P2_MASK                                   0x10
#define _SSP2STAT_DATA_ADDRESS2_POSN                        0x5
#define _SSP2STAT_DATA_ADDRESS2_POSITION                    0x5
#define _SSP2STAT_DATA_ADDRESS2_SIZE                        0x1
#define _SSP2STAT_DATA_ADDRESS2_LENGTH                      0x1
#define _SSP2STAT_DATA_ADDRESS2_MASK                        0x20
#define _SSP2STAT_RW2_POSN                                  0x2
#define _SSP2STAT_RW2_POSITION                              0x2
#define _SSP2STAT_RW2_SIZE                                  0x1
#define _SSP2STAT_RW2_LENGTH                                0x1
#define _SSP2STAT_RW2_MASK                                  0x4
#define _SSP2STAT_START2_POSN                               0x3
#define _SSP2STAT_START2_POSITION                           0x3
#define _SSP2STAT_START2_SIZE                               0x1
#define _SSP2STAT_START2_LENGTH                             0x1
#define _SSP2STAT_START2_MASK                               0x8
#define _SSP2STAT_STOP2_POSN                                0x4
#define _SSP2STAT_STOP2_POSITION                            0x4
#define _SSP2STAT_STOP2_SIZE                                0x1
#define _SSP2STAT_STOP2_LENGTH                              0x1
#define _SSP2STAT_STOP2_MASK                                0x10
#define _SSP2STAT_D_A2_POSN                                 0x5
#define _SSP2STAT_D_A2_POSITION                             0x5
#define _SSP2STAT_D_A2_SIZE                                 0x1
#define _SSP2STAT_D_A2_LENGTH                               0x1
#define _SSP2STAT_D_A2_MASK                                 0x20
#define _SSP2STAT_D_NOT_A2_POSN                             0x5
#define _SSP2STAT_D_NOT_A2_POSITION                         0x5
#define _SSP2STAT_D_NOT_A2_SIZE                             0x1
#define _SSP2STAT_D_NOT_A2_LENGTH                           0x1
#define _SSP2STAT_D_NOT_A2_MASK                             0x20
#define _SSP2STAT_R_W2_POSN                                 0x2
#define _SSP2STAT_R_W2_POSITION                             0x2
#define _SSP2STAT_R_W2_SIZE                                 0x1
#define _SSP2STAT_R_W2_LENGTH                               0x1
#define _SSP2STAT_R_W2_MASK                                 0x4
#define _SSP2STAT_D_nA2_POSN                                0x5
#define _SSP2STAT_D_nA2_POSITION                            0x5
#define _SSP2STAT_D_nA2_SIZE                                0x1
#define _SSP2STAT_D_nA2_LENGTH                              0x1
#define _SSP2STAT_D_nA2_MASK                                0x20
#define _SSP2STAT_R_NOT_W2_POSN                             0x2
#define _SSP2STAT_R_NOT_W2_POSITION                         0x2
#define _SSP2STAT_R_NOT_W2_SIZE                             0x1
#define _SSP2STAT_R_NOT_W2_LENGTH                           0x1
#define _SSP2STAT_R_NOT_W2_MASK                             0x4
#define _SSP2STAT_R_nW2_POSN                                0x2
#define _SSP2STAT_R_nW2_POSITION                            0x2
#define _SSP2STAT_R_nW2_SIZE                                0x1
#define _SSP2STAT_R_nW2_LENGTH                              0x1
#define _SSP2STAT_R_nW2_MASK                                0x4
#define _SSP2STAT_I2C_DAT2_POSN                             0x5
#define _SSP2STAT_I2C_DAT2_POSITION                         0x5
#define _SSP2STAT_I2C_DAT2_SIZE                             0x1
#define _SSP2STAT_I2C_DAT2_LENGTH                           0x1
#define _SSP2STAT_I2C_DAT2_MASK                             0x20
#define _SSP2STAT_NOT_W2_POSN                               0x2
#define _SSP2STAT_NOT_W2_POSITION                           0x2
#define _SSP2STAT_NOT_W2_SIZE                               0x1
#define _SSP2STAT_NOT_W2_LENGTH                             0x1
#define _SSP2STAT_NOT_W2_MASK                               0x4
#define _SSP2STAT_NOT_A2_POSN                               0x5
#define _SSP2STAT_NOT_A2_POSITION                           0x5
#define _SSP2STAT_NOT_A2_SIZE                               0x1
#define _SSP2STAT_NOT_A2_LENGTH                             0x1
#define _SSP2STAT_NOT_A2_MASK                               0x20
#define _SSP2STAT_nW2_POSN                                  0x2
#define _SSP2STAT_nW2_POSITION                              0x2
#define _SSP2STAT_nW2_SIZE                                  0x1
#define _SSP2STAT_nW2_LENGTH                                0x1
#define _SSP2STAT_nW2_MASK                                  0x4
#define _SSP2STAT_nA2_POSN                                  0x5
#define _SSP2STAT_nA2_POSITION                              0x5
#define _SSP2STAT_nA2_SIZE                                  0x1
#define _SSP2STAT_nA2_LENGTH                                0x1
#define _SSP2STAT_nA2_MASK                                  0x20
#define _SSP2STAT_NOT_WRITE2_POSN                           0x2
#define _SSP2STAT_NOT_WRITE2_POSITION                       0x2
#define _SSP2STAT_NOT_WRITE2_SIZE                           0x1
#define _SSP2STAT_NOT_WRITE2_LENGTH                         0x1
#define _SSP2STAT_NOT_WRITE2_MASK                           0x4
#define _SSP2STAT_NOT_ADDRESS2_POSN                         0x5
#define _SSP2STAT_NOT_ADDRESS2_POSITION                     0x5
#define _SSP2STAT_NOT_ADDRESS2_SIZE                         0x1
#define _SSP2STAT_NOT_ADDRESS2_LENGTH                       0x1
#define _SSP2STAT_NOT_ADDRESS2_MASK                         0x20
#define _SSP2STAT_nWRITE2_POSN                              0x2
#define _SSP2STAT_nWRITE2_POSITION                          0x2
#define _SSP2STAT_nWRITE2_SIZE                              0x1
#define _SSP2STAT_nWRITE2_LENGTH                            0x1
#define _SSP2STAT_nWRITE2_MASK                              0x4
#define _SSP2STAT_nADDRESS2_POSN                            0x5
#define _SSP2STAT_nADDRESS2_POSITION                        0x5
#define _SSP2STAT_nADDRESS2_SIZE                            0x1
#define _SSP2STAT_nADDRESS2_LENGTH                          0x1
#define _SSP2STAT_nADDRESS2_MASK                            0x20

// Register: SSP2ADD
#define SSP2ADD SSP2ADD
extern volatile unsigned char           SSP2ADD             __at(0xF01);
#ifndef _LIB_BUILD
asm("SSP2ADD equ 0F01h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSP2ADD                :8;
    };
    struct {
        unsigned MSK0                   :1;
        unsigned MSK1                   :1;
        unsigned MSK2                   :1;
        unsigned MSK3                   :1;
        unsigned MSK4                   :1;
        unsigned MSK5                   :1;
        unsigned MSK6                   :1;
        unsigned MSK7                   :1;
    };
    struct {
        unsigned MSK02                  :1;
        unsigned MSK12                  :1;
        unsigned MSK22                  :1;
        unsigned MSK32                  :1;
        unsigned MSK42                  :1;
        unsigned MSK52                  :1;
        unsigned MSK62                  :1;
        unsigned MSK72                  :1;
    };
} SSP2ADDbits_t;
extern volatile SSP2ADDbits_t SSP2ADDbits __at(0xF01);
// bitfield macros
#define _SSP2ADD_SSP2ADD_POSN                               0x0
#define _SSP2ADD_SSP2ADD_POSITION                           0x0
#define _SSP2ADD_SSP2ADD_SIZE                               0x8
#define _SSP2ADD_SSP2ADD_LENGTH                             0x8
#define _SSP2ADD_SSP2ADD_MASK                               0xFF
#define _SSP2ADD_MSK0_POSN                                  0x0
#define _SSP2ADD_MSK0_POSITION                              0x0
#define _SSP2ADD_MSK0_SIZE                                  0x1
#define _SSP2ADD_MSK0_LENGTH                                0x1
#define _SSP2ADD_MSK0_MASK                                  0x1
#define _SSP2ADD_MSK1_POSN                                  0x1
#define _SSP2ADD_MSK1_POSITION                              0x1
#define _SSP2ADD_MSK1_SIZE                                  0x1
#define _SSP2ADD_MSK1_LENGTH                                0x1
#define _SSP2ADD_MSK1_MASK                                  0x2
#define _SSP2ADD_MSK2_POSN                                  0x2
#define _SSP2ADD_MSK2_POSITION                              0x2
#define _SSP2ADD_MSK2_SIZE                                  0x1
#define _SSP2ADD_MSK2_LENGTH                                0x1
#define _SSP2ADD_MSK2_MASK                                  0x4
#define _SSP2ADD_MSK3_POSN                                  0x3
#define _SSP2ADD_MSK3_POSITION                              0x3
#define _SSP2ADD_MSK3_SIZE                                  0x1
#define _SSP2ADD_MSK3_LENGTH                                0x1
#define _SSP2ADD_MSK3_MASK                                  0x8
#define _SSP2ADD_MSK4_POSN                                  0x4
#define _SSP2ADD_MSK4_POSITION                              0x4
#define _SSP2ADD_MSK4_SIZE                                  0x1
#define _SSP2ADD_MSK4_LENGTH                                0x1
#define _SSP2ADD_MSK4_MASK                                  0x10
#define _SSP2ADD_MSK5_POSN                                  0x5
#define _SSP2ADD_MSK5_POSITION                              0x5
#define _SSP2ADD_MSK5_SIZE                                  0x1
#define _SSP2ADD_MSK5_LENGTH                                0x1
#define _SSP2ADD_MSK5_MASK                                  0x20
#define _SSP2ADD_MSK6_POSN                                  0x6
#define _SSP2ADD_MSK6_POSITION                              0x6
#define _SSP2ADD_MSK6_SIZE                                  0x1
#define _SSP2ADD_MSK6_LENGTH                                0x1
#define _SSP2ADD_MSK6_MASK                                  0x40
#define _SSP2ADD_MSK7_POSN                                  0x7
#define _SSP2ADD_MSK7_POSITION                              0x7
#define _SSP2ADD_MSK7_SIZE                                  0x1
#define _SSP2ADD_MSK7_LENGTH                                0x1
#define _SSP2ADD_MSK7_MASK                                  0x80
#define _SSP2ADD_MSK02_POSN                                 0x0
#define _SSP2ADD_MSK02_POSITION                             0x0
#define _SSP2ADD_MSK02_SIZE                                 0x1
#define _SSP2ADD_MSK02_LENGTH                               0x1
#define _SSP2ADD_MSK02_MASK                                 0x1
#define _SSP2ADD_MSK12_POSN                                 0x1
#define _SSP2ADD_MSK12_POSITION                             0x1
#define _SSP2ADD_MSK12_SIZE                                 0x1
#define _SSP2ADD_MSK12_LENGTH                               0x1
#define _SSP2ADD_MSK12_MASK                                 0x2
#define _SSP2ADD_MSK22_POSN                                 0x2
#define _SSP2ADD_MSK22_POSITION                             0x2
#define _SSP2ADD_MSK22_SIZE                                 0x1
#define _SSP2ADD_MSK22_LENGTH                               0x1
#define _SSP2ADD_MSK22_MASK                                 0x4
#define _SSP2ADD_MSK32_POSN                                 0x3
#define _SSP2ADD_MSK32_POSITION                             0x3
#define _SSP2ADD_MSK32_SIZE                                 0x1
#define _SSP2ADD_MSK32_LENGTH                               0x1
#define _SSP2ADD_MSK32_MASK                                 0x8
#define _SSP2ADD_MSK42_POSN                                 0x4
#define _SSP2ADD_MSK42_POSITION                             0x4
#define _SSP2ADD_MSK42_SIZE                                 0x1
#define _SSP2ADD_MSK42_LENGTH                               0x1
#define _SSP2ADD_MSK42_MASK                                 0x10
#define _SSP2ADD_MSK52_POSN                                 0x5
#define _SSP2ADD_MSK52_POSITION                             0x5
#define _SSP2ADD_MSK52_SIZE                                 0x1
#define _SSP2ADD_MSK52_LENGTH                               0x1
#define _SSP2ADD_MSK52_MASK                                 0x20
#define _SSP2ADD_MSK62_POSN                                 0x6
#define _SSP2ADD_MSK62_POSITION                             0x6
#define _SSP2ADD_MSK62_SIZE                                 0x1
#define _SSP2ADD_MSK62_LENGTH                               0x1
#define _SSP2ADD_MSK62_MASK                                 0x40
#define _SSP2ADD_MSK72_POSN                                 0x7
#define _SSP2ADD_MSK72_POSITION                             0x7
#define _SSP2ADD_MSK72_SIZE                                 0x1
#define _SSP2ADD_MSK72_LENGTH                               0x1
#define _SSP2ADD_MSK72_MASK                                 0x80

// Register: SSP2BUF
#define SSP2BUF SSP2BUF
extern volatile unsigned char           SSP2BUF             __at(0xF02);
#ifndef _LIB_BUILD
asm("SSP2BUF equ 0F02h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSP2BUF                :8;
    };
} SSP2BUFbits_t;
extern volatile SSP2BUFbits_t SSP2BUFbits __at(0xF02);
// bitfield macros
#define _SSP2BUF_SSP2BUF_POSN                               0x0
#define _SSP2BUF_SSP2BUF_POSITION                           0x0
#define _SSP2BUF_SSP2BUF_SIZE                               0x8
#define _SSP2BUF_SSP2BUF_LENGTH                             0x8
#define _SSP2BUF_SSP2BUF_MASK                               0xFF

// Register: T4CON
#define T4CON T4CON
extern volatile unsigned char           T4CON               __at(0xF03);
#ifndef _LIB_BUILD
asm("T4CON equ 0F03h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T4CKPS0                :1;
        unsigned T4CKPS1                :1;
        unsigned TMR4ON                 :1;
        unsigned T4OUTPS0               :1;
        unsigned T4OUTPS1               :1;
        unsigned T4OUTPS2               :1;
        unsigned T4OUTPS3               :1;
    };
    struct {
        unsigned T4CKPS                 :2;
        unsigned                        :1;
        unsigned T4OUTPS                :4;
    };
} T4CONbits_t;
extern volatile T4CONbits_t T4CONbits __at(0xF03);
// bitfield macros
#define _T4CON_T4CKPS0_POSN                                 0x0
#define _T4CON_T4CKPS0_POSITION                             0x0
#define _T4CON_T4CKPS0_SIZE                                 0x1
#define _T4CON_T4CKPS0_LENGTH                               0x1
#define _T4CON_T4CKPS0_MASK                                 0x1
#define _T4CON_T4CKPS1_POSN                                 0x1
#define _T4CON_T4CKPS1_POSITION                             0x1
#define _T4CON_T4CKPS1_SIZE                                 0x1
#define _T4CON_T4CKPS1_LENGTH                               0x1
#define _T4CON_T4CKPS1_MASK                                 0x2
#define _T4CON_TMR4ON_POSN                                  0x2
#define _T4CON_TMR4ON_POSITION                              0x2
#define _T4CON_TMR4ON_SIZE                                  0x1
#define _T4CON_TMR4ON_LENGTH                                0x1
#define _T4CON_TMR4ON_MASK                                  0x4
#define _T4CON_T4OUTPS0_POSN                                0x3
#define _T4CON_T4OUTPS0_POSITION                            0x3
#define _T4CON_T4OUTPS0_SIZE                                0x1
#define _T4CON_T4OUTPS0_LENGTH                              0x1
#define _T4CON_T4OUTPS0_MASK                                0x8
#define _T4CON_T4OUTPS1_POSN                                0x4
#define _T4CON_T4OUTPS1_POSITION                            0x4
#define _T4CON_T4OUTPS1_SIZE                                0x1
#define _T4CON_T4OUTPS1_LENGTH                              0x1
#define _T4CON_T4OUTPS1_MASK                                0x10
#define _T4CON_T4OUTPS2_POSN                                0x5
#define _T4CON_T4OUTPS2_POSITION                            0x5
#define _T4CON_T4OUTPS2_SIZE                                0x1
#define _T4CON_T4OUTPS2_LENGTH                              0x1
#define _T4CON_T4OUTPS2_MASK                                0x20
#define _T4CON_T4OUTPS3_POSN                                0x6
#define _T4CON_T4OUTPS3_POSITION                            0x6
#define _T4CON_T4OUTPS3_SIZE                                0x1
#define _T4CON_T4OUTPS3_LENGTH                              0x1
#define _T4CON_T4OUTPS3_MASK                                0x40
#define _T4CON_T4CKPS_POSN                                  0x0
#define _T4CON_T4CKPS_POSITION                              0x0
#define _T4CON_T4CKPS_SIZE                                  0x2
#define _T4CON_T4CKPS_LENGTH                                0x2
#define _T4CON_T4CKPS_MASK                                  0x3
#define _T4CON_T4OUTPS_POSN                                 0x3
#define _T4CON_T4OUTPS_POSITION                             0x3
#define _T4CON_T4OUTPS_SIZE                                 0x4
#define _T4CON_T4OUTPS_LENGTH                               0x4
#define _T4CON_T4OUTPS_MASK                                 0x78

// Register: PR4
#define PR4 PR4
extern volatile unsigned char           PR4                 __at(0xF04);
#ifndef _LIB_BUILD
asm("PR4 equ 0F04h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR4                    :8;
    };
} PR4bits_t;
extern volatile PR4bits_t PR4bits __at(0xF04);
// bitfield macros
#define _PR4_PR4_POSN                                       0x0
#define _PR4_PR4_POSITION                                   0x0
#define _PR4_PR4_SIZE                                       0x8
#define _PR4_PR4_LENGTH                                     0x8
#define _PR4_PR4_MASK                                       0xFF

// Register: TMR4
#define TMR4 TMR4
extern volatile unsigned char           TMR4                __at(0xF05);
#ifndef _LIB_BUILD
asm("TMR4 equ 0F05h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR4                   :8;
    };
} TMR4bits_t;
extern volatile TMR4bits_t TMR4bits __at(0xF05);
// bitfield macros
#define _TMR4_TMR4_POSN                                     0x0
#define _TMR4_TMR4_POSITION                                 0x0
#define _TMR4_TMR4_SIZE                                     0x8
#define _TMR4_TMR4_LENGTH                                   0x8
#define _TMR4_TMR4_MASK                                     0xFF

// Register: CCP7CON
#define CCP7CON CCP7CON
extern volatile unsigned char           CCP7CON             __at(0xF06);
#ifndef _LIB_BUILD
asm("CCP7CON equ 0F06h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP7M                  :4;
        unsigned DC7B                   :2;
    };
    struct {
        unsigned CCP7M0                 :1;
        unsigned CCP7M1                 :1;
        unsigned CCP7M2                 :1;
        unsigned CCP7M3                 :1;
        unsigned DC7B0                  :1;
        unsigned DC7B1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP7Y                  :1;
        unsigned CCP7X                  :1;
    };
} CCP7CONbits_t;
extern volatile CCP7CONbits_t CCP7CONbits __at(0xF06);
// bitfield macros
#define _CCP7CON_CCP7M_POSN                                 0x0
#define _CCP7CON_CCP7M_POSITION                             0x0
#define _CCP7CON_CCP7M_SIZE                                 0x4
#define _CCP7CON_CCP7M_LENGTH                               0x4
#define _CCP7CON_CCP7M_MASK                                 0xF
#define _CCP7CON_DC7B_POSN                                  0x4
#define _CCP7CON_DC7B_POSITION                              0x4
#define _CCP7CON_DC7B_SIZE                                  0x2
#define _CCP7CON_DC7B_LENGTH                                0x2
#define _CCP7CON_DC7B_MASK                                  0x30
#define _CCP7CON_CCP7M0_POSN                                0x0
#define _CCP7CON_CCP7M0_POSITION                            0x0
#define _CCP7CON_CCP7M0_SIZE                                0x1
#define _CCP7CON_CCP7M0_LENGTH                              0x1
#define _CCP7CON_CCP7M0_MASK                                0x1
#define _CCP7CON_CCP7M1_POSN                                0x1
#define _CCP7CON_CCP7M1_POSITION                            0x1
#define _CCP7CON_CCP7M1_SIZE                                0x1
#define _CCP7CON_CCP7M1_LENGTH                              0x1
#define _CCP7CON_CCP7M1_MASK                                0x2
#define _CCP7CON_CCP7M2_POSN                                0x2
#define _CCP7CON_CCP7M2_POSITION                            0x2
#define _CCP7CON_CCP7M2_SIZE                                0x1
#define _CCP7CON_CCP7M2_LENGTH                              0x1
#define _CCP7CON_CCP7M2_MASK                                0x4
#define _CCP7CON_CCP7M3_POSN                                0x3
#define _CCP7CON_CCP7M3_POSITION                            0x3
#define _CCP7CON_CCP7M3_SIZE                                0x1
#define _CCP7CON_CCP7M3_LENGTH                              0x1
#define _CCP7CON_CCP7M3_MASK                                0x8
#define _CCP7CON_DC7B0_POSN                                 0x4
#define _CCP7CON_DC7B0_POSITION                             0x4
#define _CCP7CON_DC7B0_SIZE                                 0x1
#define _CCP7CON_DC7B0_LENGTH                               0x1
#define _CCP7CON_DC7B0_MASK                                 0x10
#define _CCP7CON_DC7B1_POSN                                 0x5
#define _CCP7CON_DC7B1_POSITION                             0x5
#define _CCP7CON_DC7B1_SIZE                                 0x1
#define _CCP7CON_DC7B1_LENGTH                               0x1
#define _CCP7CON_DC7B1_MASK                                 0x20
#define _CCP7CON_CCP7Y_POSN                                 0x4
#define _CCP7CON_CCP7Y_POSITION                             0x4
#define _CCP7CON_CCP7Y_SIZE                                 0x1
#define _CCP7CON_CCP7Y_LENGTH                               0x1
#define _CCP7CON_CCP7Y_MASK                                 0x10
#define _CCP7CON_CCP7X_POSN                                 0x5
#define _CCP7CON_CCP7X_POSITION                             0x5
#define _CCP7CON_CCP7X_SIZE                                 0x1
#define _CCP7CON_CCP7X_LENGTH                               0x1
#define _CCP7CON_CCP7X_MASK                                 0x20

// Register: CCPR7
#define CCPR7 CCPR7
extern volatile unsigned short          CCPR7               __at(0xF07);
#ifndef _LIB_BUILD
asm("CCPR7 equ 0F07h");
#endif

// Register: CCPR7L
#define CCPR7L CCPR7L
extern volatile unsigned char           CCPR7L              __at(0xF07);
#ifndef _LIB_BUILD
asm("CCPR7L equ 0F07h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR7L                 :8;
    };
} CCPR7Lbits_t;
extern volatile CCPR7Lbits_t CCPR7Lbits __at(0xF07);
// bitfield macros
#define _CCPR7L_CCPR7L_POSN                                 0x0
#define _CCPR7L_CCPR7L_POSITION                             0x0
#define _CCPR7L_CCPR7L_SIZE                                 0x8
#define _CCPR7L_CCPR7L_LENGTH                               0x8
#define _CCPR7L_CCPR7L_MASK                                 0xFF

// Register: CCPR7H
#define CCPR7H CCPR7H
extern volatile unsigned char           CCPR7H              __at(0xF08);
#ifndef _LIB_BUILD
asm("CCPR7H equ 0F08h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR7H                 :8;
    };
} CCPR7Hbits_t;
extern volatile CCPR7Hbits_t CCPR7Hbits __at(0xF08);
// bitfield macros
#define _CCPR7H_CCPR7H_POSN                                 0x0
#define _CCPR7H_CCPR7H_POSITION                             0x0
#define _CCPR7H_CCPR7H_SIZE                                 0x8
#define _CCPR7H_CCPR7H_LENGTH                               0x8
#define _CCPR7H_CCPR7H_MASK                                 0xFF

// Register: CCP6CON
#define CCP6CON CCP6CON
extern volatile unsigned char           CCP6CON             __at(0xF09);
#ifndef _LIB_BUILD
asm("CCP6CON equ 0F09h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP6M                  :4;
        unsigned DC6B                   :2;
    };
    struct {
        unsigned CCP6M0                 :1;
        unsigned CCP6M1                 :1;
        unsigned CCP6M2                 :1;
        unsigned CCP6M3                 :1;
        unsigned DC6B0                  :1;
        unsigned DC6B1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP6Y                  :1;
        unsigned CCP6X                  :1;
    };
} CCP6CONbits_t;
extern volatile CCP6CONbits_t CCP6CONbits __at(0xF09);
// bitfield macros
#define _CCP6CON_CCP6M_POSN                                 0x0
#define _CCP6CON_CCP6M_POSITION                             0x0
#define _CCP6CON_CCP6M_SIZE                                 0x4
#define _CCP6CON_CCP6M_LENGTH                               0x4
#define _CCP6CON_CCP6M_MASK                                 0xF
#define _CCP6CON_DC6B_POSN                                  0x4
#define _CCP6CON_DC6B_POSITION                              0x4
#define _CCP6CON_DC6B_SIZE                                  0x2
#define _CCP6CON_DC6B_LENGTH                                0x2
#define _CCP6CON_DC6B_MASK                                  0x30
#define _CCP6CON_CCP6M0_POSN                                0x0
#define _CCP6CON_CCP6M0_POSITION                            0x0
#define _CCP6CON_CCP6M0_SIZE                                0x1
#define _CCP6CON_CCP6M0_LENGTH                              0x1
#define _CCP6CON_CCP6M0_MASK                                0x1
#define _CCP6CON_CCP6M1_POSN                                0x1
#define _CCP6CON_CCP6M1_POSITION                            0x1
#define _CCP6CON_CCP6M1_SIZE                                0x1
#define _CCP6CON_CCP6M1_LENGTH                              0x1
#define _CCP6CON_CCP6M1_MASK                                0x2
#define _CCP6CON_CCP6M2_POSN                                0x2
#define _CCP6CON_CCP6M2_POSITION                            0x2
#define _CCP6CON_CCP6M2_SIZE                                0x1
#define _CCP6CON_CCP6M2_LENGTH                              0x1
#define _CCP6CON_CCP6M2_MASK                                0x4
#define _CCP6CON_CCP6M3_POSN                                0x3
#define _CCP6CON_CCP6M3_POSITION                            0x3
#define _CCP6CON_CCP6M3_SIZE                                0x1
#define _CCP6CON_CCP6M3_LENGTH                              0x1
#define _CCP6CON_CCP6M3_MASK                                0x8
#define _CCP6CON_DC6B0_POSN                                 0x4
#define _CCP6CON_DC6B0_POSITION                             0x4
#define _CCP6CON_DC6B0_SIZE                                 0x1
#define _CCP6CON_DC6B0_LENGTH                               0x1
#define _CCP6CON_DC6B0_MASK                                 0x10
#define _CCP6CON_DC6B1_POSN                                 0x5
#define _CCP6CON_DC6B1_POSITION                             0x5
#define _CCP6CON_DC6B1_SIZE                                 0x1
#define _CCP6CON_DC6B1_LENGTH                               0x1
#define _CCP6CON_DC6B1_MASK                                 0x20
#define _CCP6CON_CCP6Y_POSN                                 0x4
#define _CCP6CON_CCP6Y_POSITION                             0x4
#define _CCP6CON_CCP6Y_SIZE                                 0x1
#define _CCP6CON_CCP6Y_LENGTH                               0x1
#define _CCP6CON_CCP6Y_MASK                                 0x10
#define _CCP6CON_CCP6X_POSN                                 0x5
#define _CCP6CON_CCP6X_POSITION                             0x5
#define _CCP6CON_CCP6X_SIZE                                 0x1
#define _CCP6CON_CCP6X_LENGTH                               0x1
#define _CCP6CON_CCP6X_MASK                                 0x20

// Register: CCPR6
#define CCPR6 CCPR6
extern volatile unsigned short          CCPR6               __at(0xF0A);
#ifndef _LIB_BUILD
asm("CCPR6 equ 0F0Ah");
#endif

// Register: CCPR6L
#define CCPR6L CCPR6L
extern volatile unsigned char           CCPR6L              __at(0xF0A);
#ifndef _LIB_BUILD
asm("CCPR6L equ 0F0Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR6L                 :8;
    };
} CCPR6Lbits_t;
extern volatile CCPR6Lbits_t CCPR6Lbits __at(0xF0A);
// bitfield macros
#define _CCPR6L_CCPR6L_POSN                                 0x0
#define _CCPR6L_CCPR6L_POSITION                             0x0
#define _CCPR6L_CCPR6L_SIZE                                 0x8
#define _CCPR6L_CCPR6L_LENGTH                               0x8
#define _CCPR6L_CCPR6L_MASK                                 0xFF

// Register: CCPR6H
#define CCPR6H CCPR6H
extern volatile unsigned char           CCPR6H              __at(0xF0B);
#ifndef _LIB_BUILD
asm("CCPR6H equ 0F0Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR6H                 :8;
    };
} CCPR6Hbits_t;
extern volatile CCPR6Hbits_t CCPR6Hbits __at(0xF0B);
// bitfield macros
#define _CCPR6H_CCPR6H_POSN                                 0x0
#define _CCPR6H_CCPR6H_POSITION                             0x0
#define _CCPR6H_CCPR6H_SIZE                                 0x8
#define _CCPR6H_CCPR6H_LENGTH                               0x8
#define _CCPR6H_CCPR6H_MASK                                 0xFF

// Register: CCP5CON
#define CCP5CON CCP5CON
extern volatile unsigned char           CCP5CON             __at(0xF0C);
#ifndef _LIB_BUILD
asm("CCP5CON equ 0F0Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP5M                  :4;
        unsigned DC5B                   :2;
    };
    struct {
        unsigned CCP5M0                 :1;
        unsigned CCP5M1                 :1;
        unsigned CCP5M2                 :1;
        unsigned CCP5M3                 :1;
        unsigned DC5B0                  :1;
        unsigned DC5B1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP5Y                  :1;
        unsigned CCP5X                  :1;
    };
} CCP5CONbits_t;
extern volatile CCP5CONbits_t CCP5CONbits __at(0xF0C);
// bitfield macros
#define _CCP5CON_CCP5M_POSN                                 0x0
#define _CCP5CON_CCP5M_POSITION                             0x0
#define _CCP5CON_CCP5M_SIZE                                 0x4
#define _CCP5CON_CCP5M_LENGTH                               0x4
#define _CCP5CON_CCP5M_MASK                                 0xF
#define _CCP5CON_DC5B_POSN                                  0x4
#define _CCP5CON_DC5B_POSITION                              0x4
#define _CCP5CON_DC5B_SIZE                                  0x2
#define _CCP5CON_DC5B_LENGTH                                0x2
#define _CCP5CON_DC5B_MASK                                  0x30
#define _CCP5CON_CCP5M0_POSN                                0x0
#define _CCP5CON_CCP5M0_POSITION                            0x0
#define _CCP5CON_CCP5M0_SIZE                                0x1
#define _CCP5CON_CCP5M0_LENGTH                              0x1
#define _CCP5CON_CCP5M0_MASK                                0x1
#define _CCP5CON_CCP5M1_POSN                                0x1
#define _CCP5CON_CCP5M1_POSITION                            0x1
#define _CCP5CON_CCP5M1_SIZE                                0x1
#define _CCP5CON_CCP5M1_LENGTH                              0x1
#define _CCP5CON_CCP5M1_MASK                                0x2
#define _CCP5CON_CCP5M2_POSN                                0x2
#define _CCP5CON_CCP5M2_POSITION                            0x2
#define _CCP5CON_CCP5M2_SIZE                                0x1
#define _CCP5CON_CCP5M2_LENGTH                              0x1
#define _CCP5CON_CCP5M2_MASK                                0x4
#define _CCP5CON_CCP5M3_POSN                                0x3
#define _CCP5CON_CCP5M3_POSITION                            0x3
#define _CCP5CON_CCP5M3_SIZE                                0x1
#define _CCP5CON_CCP5M3_LENGTH                              0x1
#define _CCP5CON_CCP5M3_MASK                                0x8
#define _CCP5CON_DC5B0_POSN                                 0x4
#define _CCP5CON_DC5B0_POSITION                             0x4
#define _CCP5CON_DC5B0_SIZE                                 0x1
#define _CCP5CON_DC5B0_LENGTH                               0x1
#define _CCP5CON_DC5B0_MASK                                 0x10
#define _CCP5CON_DC5B1_POSN                                 0x5
#define _CCP5CON_DC5B1_POSITION                             0x5
#define _CCP5CON_DC5B1_SIZE                                 0x1
#define _CCP5CON_DC5B1_LENGTH                               0x1
#define _CCP5CON_DC5B1_MASK                                 0x20
#define _CCP5CON_CCP5Y_POSN                                 0x4
#define _CCP5CON_CCP5Y_POSITION                             0x4
#define _CCP5CON_CCP5Y_SIZE                                 0x1
#define _CCP5CON_CCP5Y_LENGTH                               0x1
#define _CCP5CON_CCP5Y_MASK                                 0x10
#define _CCP5CON_CCP5X_POSN                                 0x5
#define _CCP5CON_CCP5X_POSITION                             0x5
#define _CCP5CON_CCP5X_SIZE                                 0x1
#define _CCP5CON_CCP5X_LENGTH                               0x1
#define _CCP5CON_CCP5X_MASK                                 0x20

// Register: CCPR5
#define CCPR5 CCPR5
extern volatile unsigned short          CCPR5               __at(0xF0D);
#ifndef _LIB_BUILD
asm("CCPR5 equ 0F0Dh");
#endif

// Register: CCPR5L
#define CCPR5L CCPR5L
extern volatile unsigned char           CCPR5L              __at(0xF0D);
#ifndef _LIB_BUILD
asm("CCPR5L equ 0F0Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR5L                 :8;
    };
} CCPR5Lbits_t;
extern volatile CCPR5Lbits_t CCPR5Lbits __at(0xF0D);
// bitfield macros
#define _CCPR5L_CCPR5L_POSN                                 0x0
#define _CCPR5L_CCPR5L_POSITION                             0x0
#define _CCPR5L_CCPR5L_SIZE                                 0x8
#define _CCPR5L_CCPR5L_LENGTH                               0x8
#define _CCPR5L_CCPR5L_MASK                                 0xFF

// Register: CCPR5H
#define CCPR5H CCPR5H
extern volatile unsigned char           CCPR5H              __at(0xF0E);
#ifndef _LIB_BUILD
asm("CCPR5H equ 0F0Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR5H                 :8;
    };
} CCPR5Hbits_t;
extern volatile CCPR5Hbits_t CCPR5Hbits __at(0xF0E);
// bitfield macros
#define _CCPR5H_CCPR5H_POSN                                 0x0
#define _CCPR5H_CCPR5H_POSITION                             0x0
#define _CCPR5H_CCPR5H_SIZE                                 0x8
#define _CCPR5H_CCPR5H_LENGTH                               0x8
#define _CCPR5H_CCPR5H_MASK                                 0xFF

// Register: CCP4CON
#define CCP4CON CCP4CON
extern volatile unsigned char           CCP4CON             __at(0xF0F);
#ifndef _LIB_BUILD
asm("CCP4CON equ 0F0Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP4M                  :4;
        unsigned DC4B                   :2;
    };
    struct {
        unsigned CCP4M0                 :1;
        unsigned CCP4M1                 :1;
        unsigned CCP4M2                 :1;
        unsigned CCP4M3                 :1;
        unsigned DC4B0                  :1;
        unsigned DC4B1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP4Y                  :1;
        unsigned CCP4X                  :1;
    };
} CCP4CONbits_t;
extern volatile CCP4CONbits_t CCP4CONbits __at(0xF0F);
// bitfield macros
#define _CCP4CON_CCP4M_POSN                                 0x0
#define _CCP4CON_CCP4M_POSITION                             0x0
#define _CCP4CON_CCP4M_SIZE                                 0x4
#define _CCP4CON_CCP4M_LENGTH                               0x4
#define _CCP4CON_CCP4M_MASK                                 0xF
#define _CCP4CON_DC4B_POSN                                  0x4
#define _CCP4CON_DC4B_POSITION                              0x4
#define _CCP4CON_DC4B_SIZE                                  0x2
#define _CCP4CON_DC4B_LENGTH                                0x2
#define _CCP4CON_DC4B_MASK                                  0x30
#define _CCP4CON_CCP4M0_POSN                                0x0
#define _CCP4CON_CCP4M0_POSITION                            0x0
#define _CCP4CON_CCP4M0_SIZE                                0x1
#define _CCP4CON_CCP4M0_LENGTH                              0x1
#define _CCP4CON_CCP4M0_MASK                                0x1
#define _CCP4CON_CCP4M1_POSN                                0x1
#define _CCP4CON_CCP4M1_POSITION                            0x1
#define _CCP4CON_CCP4M1_SIZE                                0x1
#define _CCP4CON_CCP4M1_LENGTH                              0x1
#define _CCP4CON_CCP4M1_MASK                                0x2
#define _CCP4CON_CCP4M2_POSN                                0x2
#define _CCP4CON_CCP4M2_POSITION                            0x2
#define _CCP4CON_CCP4M2_SIZE                                0x1
#define _CCP4CON_CCP4M2_LENGTH                              0x1
#define _CCP4CON_CCP4M2_MASK                                0x4
#define _CCP4CON_CCP4M3_POSN                                0x3
#define _CCP4CON_CCP4M3_POSITION                            0x3
#define _CCP4CON_CCP4M3_SIZE                                0x1
#define _CCP4CON_CCP4M3_LENGTH                              0x1
#define _CCP4CON_CCP4M3_MASK                                0x8
#define _CCP4CON_DC4B0_POSN                                 0x4
#define _CCP4CON_DC4B0_POSITION                             0x4
#define _CCP4CON_DC4B0_SIZE                                 0x1
#define _CCP4CON_DC4B0_LENGTH                               0x1
#define _CCP4CON_DC4B0_MASK                                 0x10
#define _CCP4CON_DC4B1_POSN                                 0x5
#define _CCP4CON_DC4B1_POSITION                             0x5
#define _CCP4CON_DC4B1_SIZE                                 0x1
#define _CCP4CON_DC4B1_LENGTH                               0x1
#define _CCP4CON_DC4B1_MASK                                 0x20
#define _CCP4CON_CCP4Y_POSN                                 0x4
#define _CCP4CON_CCP4Y_POSITION                             0x4
#define _CCP4CON_CCP4Y_SIZE                                 0x1
#define _CCP4CON_CCP4Y_LENGTH                               0x1
#define _CCP4CON_CCP4Y_MASK                                 0x10
#define _CCP4CON_CCP4X_POSN                                 0x5
#define _CCP4CON_CCP4X_POSITION                             0x5
#define _CCP4CON_CCP4X_SIZE                                 0x1
#define _CCP4CON_CCP4X_LENGTH                               0x1
#define _CCP4CON_CCP4X_MASK                                 0x20

// Register: CCPR4
#define CCPR4 CCPR4
extern volatile unsigned short          CCPR4               __at(0xF10);
#ifndef _LIB_BUILD
asm("CCPR4 equ 0F10h");
#endif

// Register: CCPR4L
#define CCPR4L CCPR4L
extern volatile unsigned char           CCPR4L              __at(0xF10);
#ifndef _LIB_BUILD
asm("CCPR4L equ 0F10h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR4L                 :8;
    };
} CCPR4Lbits_t;
extern volatile CCPR4Lbits_t CCPR4Lbits __at(0xF10);
// bitfield macros
#define _CCPR4L_CCPR4L_POSN                                 0x0
#define _CCPR4L_CCPR4L_POSITION                             0x0
#define _CCPR4L_CCPR4L_SIZE                                 0x8
#define _CCPR4L_CCPR4L_LENGTH                               0x8
#define _CCPR4L_CCPR4L_MASK                                 0xFF

// Register: CCPR4H
#define CCPR4H CCPR4H
extern volatile unsigned char           CCPR4H              __at(0xF11);
#ifndef _LIB_BUILD
asm("CCPR4H equ 0F11h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR4H                 :8;
    };
} CCPR4Hbits_t;
extern volatile CCPR4Hbits_t CCPR4Hbits __at(0xF11);
// bitfield macros
#define _CCPR4H_CCPR4H_POSN                                 0x0
#define _CCPR4H_CCPR4H_POSITION                             0x0
#define _CCPR4H_CCPR4H_SIZE                                 0x8
#define _CCPR4H_CCPR4H_LENGTH                               0x8
#define _CCPR4H_CCPR4H_MASK                                 0xFF

// Register: T5GCON
#define T5GCON T5GCON
extern volatile unsigned char           T5GCON              __at(0xF12);
#ifndef _LIB_BUILD
asm("T5GCON equ 0F12h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :3;
        unsigned T5GGO_NOT_T5DONE       :1;
    };
    struct {
        unsigned T5GSS                  :2;
        unsigned T5GVAL                 :1;
        unsigned T5GGO_nT5DONE          :1;
        unsigned T5GSPM                 :1;
        unsigned T5GTM                  :1;
        unsigned T5GPOL                 :1;
        unsigned TMR5GE                 :1;
    };
    struct {
        unsigned T5GSS0                 :1;
        unsigned T5GSS1                 :1;
        unsigned                        :1;
        unsigned T5GGO                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned NOT_T5DONE             :1;
    };
    struct {
        unsigned                        :3;
        unsigned nT5DONE                :1;
    };
} T5GCONbits_t;
extern volatile T5GCONbits_t T5GCONbits __at(0xF12);
// bitfield macros
#define _T5GCON_T5GGO_NOT_T5DONE_POSN                       0x3
#define _T5GCON_T5GGO_NOT_T5DONE_POSITION                   0x3
#define _T5GCON_T5GGO_NOT_T5DONE_SIZE                       0x1
#define _T5GCON_T5GGO_NOT_T5DONE_LENGTH                     0x1
#define _T5GCON_T5GGO_NOT_T5DONE_MASK                       0x8
#define _T5GCON_T5GSS_POSN                                  0x0
#define _T5GCON_T5GSS_POSITION                              0x0
#define _T5GCON_T5GSS_SIZE                                  0x2
#define _T5GCON_T5GSS_LENGTH                                0x2
#define _T5GCON_T5GSS_MASK                                  0x3
#define _T5GCON_T5GVAL_POSN                                 0x2
#define _T5GCON_T5GVAL_POSITION                             0x2
#define _T5GCON_T5GVAL_SIZE                                 0x1
#define _T5GCON_T5GVAL_LENGTH                               0x1
#define _T5GCON_T5GVAL_MASK                                 0x4
#define _T5GCON_T5GGO_nT5DONE_POSN                          0x3
#define _T5GCON_T5GGO_nT5DONE_POSITION                      0x3
#define _T5GCON_T5GGO_nT5DONE_SIZE                          0x1
#define _T5GCON_T5GGO_nT5DONE_LENGTH                        0x1
#define _T5GCON_T5GGO_nT5DONE_MASK                          0x8
#define _T5GCON_T5GSPM_POSN                                 0x4
#define _T5GCON_T5GSPM_POSITION                             0x4
#define _T5GCON_T5GSPM_SIZE                                 0x1
#define _T5GCON_T5GSPM_LENGTH                               0x1
#define _T5GCON_T5GSPM_MASK                                 0x10
#define _T5GCON_T5GTM_POSN                                  0x5
#define _T5GCON_T5GTM_POSITION                              0x5
#define _T5GCON_T5GTM_SIZE                                  0x1
#define _T5GCON_T5GTM_LENGTH                                0x1
#define _T5GCON_T5GTM_MASK                                  0x20
#define _T5GCON_T5GPOL_POSN                                 0x6
#define _T5GCON_T5GPOL_POSITION                             0x6
#define _T5GCON_T5GPOL_SIZE                                 0x1
#define _T5GCON_T5GPOL_LENGTH                               0x1
#define _T5GCON_T5GPOL_MASK                                 0x40
#define _T5GCON_TMR5GE_POSN                                 0x7
#define _T5GCON_TMR5GE_POSITION                             0x7
#define _T5GCON_TMR5GE_SIZE                                 0x1
#define _T5GCON_TMR5GE_LENGTH                               0x1
#define _T5GCON_TMR5GE_MASK                                 0x80
#define _T5GCON_T5GSS0_POSN                                 0x0
#define _T5GCON_T5GSS0_POSITION                             0x0
#define _T5GCON_T5GSS0_SIZE                                 0x1
#define _T5GCON_T5GSS0_LENGTH                               0x1
#define _T5GCON_T5GSS0_MASK                                 0x1
#define _T5GCON_T5GSS1_POSN                                 0x1
#define _T5GCON_T5GSS1_POSITION                             0x1
#define _T5GCON_T5GSS1_SIZE                                 0x1
#define _T5GCON_T5GSS1_LENGTH                               0x1
#define _T5GCON_T5GSS1_MASK                                 0x2
#define _T5GCON_T5GGO_POSN                                  0x3
#define _T5GCON_T5GGO_POSITION                              0x3
#define _T5GCON_T5GGO_SIZE                                  0x1
#define _T5GCON_T5GGO_LENGTH                                0x1
#define _T5GCON_T5GGO_MASK                                  0x8
#define _T5GCON_NOT_T5DONE_POSN                             0x3
#define _T5GCON_NOT_T5DONE_POSITION                         0x3
#define _T5GCON_NOT_T5DONE_SIZE                             0x1
#define _T5GCON_NOT_T5DONE_LENGTH                           0x1
#define _T5GCON_NOT_T5DONE_MASK                             0x8
#define _T5GCON_nT5DONE_POSN                                0x3
#define _T5GCON_nT5DONE_POSITION                            0x3
#define _T5GCON_nT5DONE_SIZE                                0x1
#define _T5GCON_nT5DONE_LENGTH                              0x1
#define _T5GCON_nT5DONE_MASK                                0x8

// Register: T5CON
#define T5CON T5CON
extern volatile unsigned char           T5CON               __at(0xF13);
#ifndef _LIB_BUILD
asm("T5CON equ 0F13h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned NOT_T5SYNC             :1;
    };
    struct {
        unsigned TMR5ON                 :1;
        unsigned RD16                   :1;
        unsigned nT5SYNC                :1;
        unsigned SOSCEN                 :1;
        unsigned T5CKPS                 :2;
        unsigned TMR5CS                 :2;
    };
    struct {
        unsigned                        :4;
        unsigned T5CKPS0                :1;
        unsigned T5CKPS1                :1;
        unsigned TMR5CS0                :1;
        unsigned TMR5CS1                :1;
    };
    struct {
        unsigned                        :1;
        unsigned RD165                  :1;
        unsigned                        :1;
        unsigned SOSCEN5                :1;
    };
} T5CONbits_t;
extern volatile T5CONbits_t T5CONbits __at(0xF13);
// bitfield macros
#define _T5CON_NOT_T5SYNC_POSN                              0x2
#define _T5CON_NOT_T5SYNC_POSITION                          0x2
#define _T5CON_NOT_T5SYNC_SIZE                              0x1
#define _T5CON_NOT_T5SYNC_LENGTH                            0x1
#define _T5CON_NOT_T5SYNC_MASK                              0x4
#define _T5CON_TMR5ON_POSN                                  0x0
#define _T5CON_TMR5ON_POSITION                              0x0
#define _T5CON_TMR5ON_SIZE                                  0x1
#define _T5CON_TMR5ON_LENGTH                                0x1
#define _T5CON_TMR5ON_MASK                                  0x1
#define _T5CON_RD16_POSN                                    0x1
#define _T5CON_RD16_POSITION                                0x1
#define _T5CON_RD16_SIZE                                    0x1
#define _T5CON_RD16_LENGTH                                  0x1
#define _T5CON_RD16_MASK                                    0x2
#define _T5CON_nT5SYNC_POSN                                 0x2
#define _T5CON_nT5SYNC_POSITION                             0x2
#define _T5CON_nT5SYNC_SIZE                                 0x1
#define _T5CON_nT5SYNC_LENGTH                               0x1
#define _T5CON_nT5SYNC_MASK                                 0x4
#define _T5CON_SOSCEN_POSN                                  0x3
#define _T5CON_SOSCEN_POSITION                              0x3
#define _T5CON_SOSCEN_SIZE                                  0x1
#define _T5CON_SOSCEN_LENGTH                                0x1
#define _T5CON_SOSCEN_MASK                                  0x8
#define _T5CON_T5CKPS_POSN                                  0x4
#define _T5CON_T5CKPS_POSITION                              0x4
#define _T5CON_T5CKPS_SIZE                                  0x2
#define _T5CON_T5CKPS_LENGTH                                0x2
#define _T5CON_T5CKPS_MASK                                  0x30
#define _T5CON_TMR5CS_POSN                                  0x6
#define _T5CON_TMR5CS_POSITION                              0x6
#define _T5CON_TMR5CS_SIZE                                  0x2
#define _T5CON_TMR5CS_LENGTH                                0x2
#define _T5CON_TMR5CS_MASK                                  0xC0
#define _T5CON_T5CKPS0_POSN                                 0x4
#define _T5CON_T5CKPS0_POSITION                             0x4
#define _T5CON_T5CKPS0_SIZE                                 0x1
#define _T5CON_T5CKPS0_LENGTH                               0x1
#define _T5CON_T5CKPS0_MASK                                 0x10
#define _T5CON_T5CKPS1_POSN                                 0x5
#define _T5CON_T5CKPS1_POSITION                             0x5
#define _T5CON_T5CKPS1_SIZE                                 0x1
#define _T5CON_T5CKPS1_LENGTH                               0x1
#define _T5CON_T5CKPS1_MASK                                 0x20
#define _T5CON_TMR5CS0_POSN                                 0x6
#define _T5CON_TMR5CS0_POSITION                             0x6
#define _T5CON_TMR5CS0_SIZE                                 0x1
#define _T5CON_TMR5CS0_LENGTH                               0x1
#define _T5CON_TMR5CS0_MASK                                 0x40
#define _T5CON_TMR5CS1_POSN                                 0x7
#define _T5CON_TMR5CS1_POSITION                             0x7
#define _T5CON_TMR5CS1_SIZE                                 0x1
#define _T5CON_TMR5CS1_LENGTH                               0x1
#define _T5CON_TMR5CS1_MASK                                 0x80
#define _T5CON_RD165_POSN                                   0x1
#define _T5CON_RD165_POSITION                               0x1
#define _T5CON_RD165_SIZE                                   0x1
#define _T5CON_RD165_LENGTH                                 0x1
#define _T5CON_RD165_MASK                                   0x2
#define _T5CON_SOSCEN5_POSN                                 0x3
#define _T5CON_SOSCEN5_POSITION                             0x3
#define _T5CON_SOSCEN5_SIZE                                 0x1
#define _T5CON_SOSCEN5_LENGTH                               0x1
#define _T5CON_SOSCEN5_MASK                                 0x8

// Register: TMR5
#define TMR5 TMR5
extern volatile unsigned short          TMR5                __at(0xF14);
#ifndef _LIB_BUILD
asm("TMR5 equ 0F14h");
#endif

// Register: TMR5L
#define TMR5L TMR5L
extern volatile unsigned char           TMR5L               __at(0xF14);
#ifndef _LIB_BUILD
asm("TMR5L equ 0F14h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR5L                  :8;
    };
} TMR5Lbits_t;
extern volatile TMR5Lbits_t TMR5Lbits __at(0xF14);
// bitfield macros
#define _TMR5L_TMR5L_POSN                                   0x0
#define _TMR5L_TMR5L_POSITION                               0x0
#define _TMR5L_TMR5L_SIZE                                   0x8
#define _TMR5L_TMR5L_LENGTH                                 0x8
#define _TMR5L_TMR5L_MASK                                   0xFF

// Register: TMR5H
#define TMR5H TMR5H
extern volatile unsigned char           TMR5H               __at(0xF15);
#ifndef _LIB_BUILD
asm("TMR5H equ 0F15h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR5H                  :8;
    };
} TMR5Hbits_t;
extern volatile TMR5Hbits_t TMR5Hbits __at(0xF15);
// bitfield macros
#define _TMR5H_TMR5H_POSN                                   0x0
#define _TMR5H_TMR5H_POSITION                               0x0
#define _TMR5H_TMR5H_SIZE                                   0x8
#define _TMR5H_TMR5H_LENGTH                                 0x8
#define _TMR5H_TMR5H_MASK                                   0xFF

// Register: PMD3
#define PMD3 PMD3
extern volatile unsigned char           PMD3                __at(0xF16);
#ifndef _LIB_BUILD
asm("PMD3 equ 0F16h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned CCP4MD                 :1;
        unsigned CCP5MD                 :1;
        unsigned CCP6MD                 :1;
        unsigned CCP7MD                 :1;
        unsigned CCP8MD                 :1;
    };
} PMD3bits_t;
extern volatile PMD3bits_t PMD3bits __at(0xF16);
// bitfield macros
#define _PMD3_CCP4MD_POSN                                   0x1
#define _PMD3_CCP4MD_POSITION                               0x1
#define _PMD3_CCP4MD_SIZE                                   0x1
#define _PMD3_CCP4MD_LENGTH                                 0x1
#define _PMD3_CCP4MD_MASK                                   0x2
#define _PMD3_CCP5MD_POSN                                   0x2
#define _PMD3_CCP5MD_POSITION                               0x2
#define _PMD3_CCP5MD_SIZE                                   0x1
#define _PMD3_CCP5MD_LENGTH                                 0x1
#define _PMD3_CCP5MD_MASK                                   0x4
#define _PMD3_CCP6MD_POSN                                   0x3
#define _PMD3_CCP6MD_POSITION                               0x3
#define _PMD3_CCP6MD_SIZE                                   0x1
#define _PMD3_CCP6MD_LENGTH                                 0x1
#define _PMD3_CCP6MD_MASK                                   0x8
#define _PMD3_CCP7MD_POSN                                   0x4
#define _PMD3_CCP7MD_POSITION                               0x4
#define _PMD3_CCP7MD_SIZE                                   0x1
#define _PMD3_CCP7MD_LENGTH                                 0x1
#define _PMD3_CCP7MD_MASK                                   0x10
#define _PMD3_CCP8MD_POSN                                   0x5
#define _PMD3_CCP8MD_POSITION                               0x5
#define _PMD3_CCP8MD_SIZE                                   0x1
#define _PMD3_CCP8MD_LENGTH                                 0x1
#define _PMD3_CCP8MD_MASK                                   0x20

// Register: PMD2
#define PMD2 PMD2
extern volatile unsigned char           PMD2                __at(0xF17);
#ifndef _LIB_BUILD
asm("PMD2 equ 0F17h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CMP1MD                 :1;
        unsigned CMP2MD                 :1;
        unsigned CMP3MD                 :1;
        unsigned TMR5MD                 :1;
        unsigned TMR6MD                 :1;
        unsigned                        :1;
        unsigned TMR8MD                 :1;
    };
} PMD2bits_t;
extern volatile PMD2bits_t PMD2bits __at(0xF17);
// bitfield macros
#define _PMD2_CMP1MD_POSN                                   0x0
#define _PMD2_CMP1MD_POSITION                               0x0
#define _PMD2_CMP1MD_SIZE                                   0x1
#define _PMD2_CMP1MD_LENGTH                                 0x1
#define _PMD2_CMP1MD_MASK                                   0x1
#define _PMD2_CMP2MD_POSN                                   0x1
#define _PMD2_CMP2MD_POSITION                               0x1
#define _PMD2_CMP2MD_SIZE                                   0x1
#define _PMD2_CMP2MD_LENGTH                                 0x1
#define _PMD2_CMP2MD_MASK                                   0x2
#define _PMD2_CMP3MD_POSN                                   0x2
#define _PMD2_CMP3MD_POSITION                               0x2
#define _PMD2_CMP3MD_SIZE                                   0x1
#define _PMD2_CMP3MD_LENGTH                                 0x1
#define _PMD2_CMP3MD_MASK                                   0x4
#define _PMD2_TMR5MD_POSN                                   0x3
#define _PMD2_TMR5MD_POSITION                               0x3
#define _PMD2_TMR5MD_SIZE                                   0x1
#define _PMD2_TMR5MD_LENGTH                                 0x1
#define _PMD2_TMR5MD_MASK                                   0x8
#define _PMD2_TMR6MD_POSN                                   0x4
#define _PMD2_TMR6MD_POSITION                               0x4
#define _PMD2_TMR6MD_SIZE                                   0x1
#define _PMD2_TMR6MD_LENGTH                                 0x1
#define _PMD2_TMR6MD_MASK                                   0x10
#define _PMD2_TMR8MD_POSN                                   0x6
#define _PMD2_TMR8MD_POSITION                               0x6
#define _PMD2_TMR8MD_SIZE                                   0x1
#define _PMD2_TMR8MD_LENGTH                                 0x1
#define _PMD2_TMR8MD_MASK                                   0x40

// Register: PMD1
#define PMD1 PMD1
extern volatile unsigned char           PMD1                __at(0xF18);
#ifndef _LIB_BUILD
asm("PMD1 equ 0F18h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned TMR1MD                 :1;
        unsigned TMR2MD                 :1;
        unsigned TMR3MD                 :1;
        unsigned TMR4MD                 :1;
        unsigned RTCCMD                 :1;
        unsigned CTMUMD                 :1;
    };
} PMD1bits_t;
extern volatile PMD1bits_t PMD1bits __at(0xF18);
// bitfield macros
#define _PMD1_TMR1MD_POSN                                   0x1
#define _PMD1_TMR1MD_POSITION                               0x1
#define _PMD1_TMR1MD_SIZE                                   0x1
#define _PMD1_TMR1MD_LENGTH                                 0x1
#define _PMD1_TMR1MD_MASK                                   0x2
#define _PMD1_TMR2MD_POSN                                   0x2
#define _PMD1_TMR2MD_POSITION                               0x2
#define _PMD1_TMR2MD_SIZE                                   0x1
#define _PMD1_TMR2MD_LENGTH                                 0x1
#define _PMD1_TMR2MD_MASK                                   0x4
#define _PMD1_TMR3MD_POSN                                   0x3
#define _PMD1_TMR3MD_POSITION                               0x3
#define _PMD1_TMR3MD_SIZE                                   0x1
#define _PMD1_TMR3MD_LENGTH                                 0x1
#define _PMD1_TMR3MD_MASK                                   0x8
#define _PMD1_TMR4MD_POSN                                   0x4
#define _PMD1_TMR4MD_POSITION                               0x4
#define _PMD1_TMR4MD_SIZE                                   0x1
#define _PMD1_TMR4MD_LENGTH                                 0x1
#define _PMD1_TMR4MD_MASK                                   0x10
#define _PMD1_RTCCMD_POSN                                   0x5
#define _PMD1_RTCCMD_POSITION                               0x5
#define _PMD1_RTCCMD_SIZE                                   0x1
#define _PMD1_RTCCMD_LENGTH                                 0x1
#define _PMD1_RTCCMD_MASK                                   0x20
#define _PMD1_CTMUMD_POSN                                   0x6
#define _PMD1_CTMUMD_POSITION                               0x6
#define _PMD1_CTMUMD_SIZE                                   0x1
#define _PMD1_CTMUMD_LENGTH                                 0x1
#define _PMD1_CTMUMD_MASK                                   0x40

// Register: PMD0
#define PMD0 PMD0
extern volatile unsigned char           PMD0                __at(0xF19);
#ifndef _LIB_BUILD
asm("PMD0 equ 0F19h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADCMD                  :1;
        unsigned SSP1MD                 :1;
        unsigned SSP2MD                 :1;
        unsigned UART1MD                :1;
        unsigned UART2MD                :1;
        unsigned CCP1MD                 :1;
        unsigned CCP2MD                 :1;
        unsigned CCP3MD                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned SPI1MD                 :1;
        unsigned SPI2MD                 :1;
    };
} PMD0bits_t;
extern volatile PMD0bits_t PMD0bits __at(0xF19);
// bitfield macros
#define _PMD0_ADCMD_POSN                                    0x0
#define _PMD0_ADCMD_POSITION                                0x0
#define _PMD0_ADCMD_SIZE                                    0x1
#define _PMD0_ADCMD_LENGTH                                  0x1
#define _PMD0_ADCMD_MASK                                    0x1
#define _PMD0_SSP1MD_POSN                                   0x1
#define _PMD0_SSP1MD_POSITION                               0x1
#define _PMD0_SSP1MD_SIZE                                   0x1
#define _PMD0_SSP1MD_LENGTH                                 0x1
#define _PMD0_SSP1MD_MASK                                   0x2
#define _PMD0_SSP2MD_POSN                                   0x2
#define _PMD0_SSP2MD_POSITION                               0x2
#define _PMD0_SSP2MD_SIZE                                   0x1
#define _PMD0_SSP2MD_LENGTH                                 0x1
#define _PMD0_SSP2MD_MASK                                   0x4
#define _PMD0_UART1MD_POSN                                  0x3
#define _PMD0_UART1MD_POSITION                              0x3
#define _PMD0_UART1MD_SIZE                                  0x1
#define _PMD0_UART1MD_LENGTH                                0x1
#define _PMD0_UART1MD_MASK                                  0x8
#define _PMD0_UART2MD_POSN                                  0x4
#define _PMD0_UART2MD_POSITION                              0x4
#define _PMD0_UART2MD_SIZE                                  0x1
#define _PMD0_UART2MD_LENGTH                                0x1
#define _PMD0_UART2MD_MASK                                  0x10
#define _PMD0_CCP1MD_POSN                                   0x5
#define _PMD0_CCP1MD_POSITION                               0x5
#define _PMD0_CCP1MD_SIZE                                   0x1
#define _PMD0_CCP1MD_LENGTH                                 0x1
#define _PMD0_CCP1MD_MASK                                   0x20
#define _PMD0_CCP2MD_POSN                                   0x6
#define _PMD0_CCP2MD_POSITION                               0x6
#define _PMD0_CCP2MD_SIZE                                   0x1
#define _PMD0_CCP2MD_LENGTH                                 0x1
#define _PMD0_CCP2MD_MASK                                   0x40
#define _PMD0_CCP3MD_POSN                                   0x7
#define _PMD0_CCP3MD_POSITION                               0x7
#define _PMD0_CCP3MD_SIZE                                   0x1
#define _PMD0_CCP3MD_LENGTH                                 0x1
#define _PMD0_CCP3MD_MASK                                   0x80
#define _PMD0_SPI1MD_POSN                                   0x1
#define _PMD0_SPI1MD_POSITION                               0x1
#define _PMD0_SPI1MD_SIZE                                   0x1
#define _PMD0_SPI1MD_LENGTH                                 0x1
#define _PMD0_SPI1MD_MASK                                   0x2
#define _PMD0_SPI2MD_POSN                                   0x2
#define _PMD0_SPI2MD_POSITION                               0x2
#define _PMD0_SPI2MD_SIZE                                   0x1
#define _PMD0_SPI2MD_LENGTH                                 0x1
#define _PMD0_SPI2MD_MASK                                   0x4

// Register: PSTR3CON
#define PSTR3CON PSTR3CON
extern volatile unsigned char           PSTR3CON            __at(0xF1A);
#ifndef _LIB_BUILD
asm("PSTR3CON equ 0F1Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned STRSYNC                :1;
        unsigned                        :1;
        unsigned CMPL                   :2;
    };
    struct {
        unsigned                        :6;
        unsigned CMPL0                  :1;
        unsigned CMPL1                  :1;
    };
    struct {
        unsigned STRA3                  :1;
        unsigned STRB3                  :1;
        unsigned STRC3                  :1;
        unsigned STRD3                  :1;
        unsigned STRSYNC3               :1;
        unsigned                        :1;
        unsigned CMPL03                 :1;
        unsigned CMPL13                 :1;
    };
} PSTR3CONbits_t;
extern volatile PSTR3CONbits_t PSTR3CONbits __at(0xF1A);
// bitfield macros
#define _PSTR3CON_STRA_POSN                                 0x0
#define _PSTR3CON_STRA_POSITION                             0x0
#define _PSTR3CON_STRA_SIZE                                 0x1
#define _PSTR3CON_STRA_LENGTH                               0x1
#define _PSTR3CON_STRA_MASK                                 0x1
#define _PSTR3CON_STRB_POSN                                 0x1
#define _PSTR3CON_STRB_POSITION                             0x1
#define _PSTR3CON_STRB_SIZE                                 0x1
#define _PSTR3CON_STRB_LENGTH                               0x1
#define _PSTR3CON_STRB_MASK                                 0x2
#define _PSTR3CON_STRC_POSN                                 0x2
#define _PSTR3CON_STRC_POSITION                             0x2
#define _PSTR3CON_STRC_SIZE                                 0x1
#define _PSTR3CON_STRC_LENGTH                               0x1
#define _PSTR3CON_STRC_MASK                                 0x4
#define _PSTR3CON_STRD_POSN                                 0x3
#define _PSTR3CON_STRD_POSITION                             0x3
#define _PSTR3CON_STRD_SIZE                                 0x1
#define _PSTR3CON_STRD_LENGTH                               0x1
#define _PSTR3CON_STRD_MASK                                 0x8
#define _PSTR3CON_STRSYNC_POSN                              0x4
#define _PSTR3CON_STRSYNC_POSITION                          0x4
#define _PSTR3CON_STRSYNC_SIZE                              0x1
#define _PSTR3CON_STRSYNC_LENGTH                            0x1
#define _PSTR3CON_STRSYNC_MASK                              0x10
#define _PSTR3CON_CMPL_POSN                                 0x6
#define _PSTR3CON_CMPL_POSITION                             0x6
#define _PSTR3CON_CMPL_SIZE                                 0x2
#define _PSTR3CON_CMPL_LENGTH                               0x2
#define _PSTR3CON_CMPL_MASK                                 0xC0
#define _PSTR3CON_CMPL0_POSN                                0x6
#define _PSTR3CON_CMPL0_POSITION                            0x6
#define _PSTR3CON_CMPL0_SIZE                                0x1
#define _PSTR3CON_CMPL0_LENGTH                              0x1
#define _PSTR3CON_CMPL0_MASK                                0x40
#define _PSTR3CON_CMPL1_POSN                                0x7
#define _PSTR3CON_CMPL1_POSITION                            0x7
#define _PSTR3CON_CMPL1_SIZE                                0x1
#define _PSTR3CON_CMPL1_LENGTH                              0x1
#define _PSTR3CON_CMPL1_MASK                                0x80
#define _PSTR3CON_STRA3_POSN                                0x0
#define _PSTR3CON_STRA3_POSITION                            0x0
#define _PSTR3CON_STRA3_SIZE                                0x1
#define _PSTR3CON_STRA3_LENGTH                              0x1
#define _PSTR3CON_STRA3_MASK                                0x1
#define _PSTR3CON_STRB3_POSN                                0x1
#define _PSTR3CON_STRB3_POSITION                            0x1
#define _PSTR3CON_STRB3_SIZE                                0x1
#define _PSTR3CON_STRB3_LENGTH                              0x1
#define _PSTR3CON_STRB3_MASK                                0x2
#define _PSTR3CON_STRC3_POSN                                0x2
#define _PSTR3CON_STRC3_POSITION                            0x2
#define _PSTR3CON_STRC3_SIZE                                0x1
#define _PSTR3CON_STRC3_LENGTH                              0x1
#define _PSTR3CON_STRC3_MASK                                0x4
#define _PSTR3CON_STRD3_POSN                                0x3
#define _PSTR3CON_STRD3_POSITION                            0x3
#define _PSTR3CON_STRD3_SIZE                                0x1
#define _PSTR3CON_STRD3_LENGTH                              0x1
#define _PSTR3CON_STRD3_MASK                                0x8
#define _PSTR3CON_STRSYNC3_POSN                             0x4
#define _PSTR3CON_STRSYNC3_POSITION                         0x4
#define _PSTR3CON_STRSYNC3_SIZE                             0x1
#define _PSTR3CON_STRSYNC3_LENGTH                           0x1
#define _PSTR3CON_STRSYNC3_MASK                             0x10
#define _PSTR3CON_CMPL03_POSN                               0x6
#define _PSTR3CON_CMPL03_POSITION                           0x6
#define _PSTR3CON_CMPL03_SIZE                               0x1
#define _PSTR3CON_CMPL03_LENGTH                             0x1
#define _PSTR3CON_CMPL03_MASK                               0x40
#define _PSTR3CON_CMPL13_POSN                               0x7
#define _PSTR3CON_CMPL13_POSITION                           0x7
#define _PSTR3CON_CMPL13_SIZE                               0x1
#define _PSTR3CON_CMPL13_LENGTH                             0x1
#define _PSTR3CON_CMPL13_MASK                               0x80

// Register: PSTR2CON
#define PSTR2CON PSTR2CON
extern volatile unsigned char           PSTR2CON            __at(0xF1B);
#ifndef _LIB_BUILD
asm("PSTR2CON equ 0F1Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned STRSYNC                :1;
        unsigned                        :1;
        unsigned CMPL                   :2;
    };
    struct {
        unsigned                        :6;
        unsigned CMPL0                  :1;
        unsigned CMPL1                  :1;
    };
    struct {
        unsigned P2DC02                 :1;
        unsigned P2DC12                 :1;
        unsigned P2DC22                 :1;
        unsigned P2DC32                 :1;
        unsigned P2DC42                 :1;
        unsigned                        :1;
        unsigned CMPL02                 :1;
        unsigned CMPL12                 :1;
    };
    struct {
        unsigned P2DC0CON               :1;
        unsigned P2DC1CON               :1;
        unsigned P2DC2CON               :1;
        unsigned P2DC3CON               :1;
        unsigned P2DC4CON               :1;
        unsigned                        :1;
        unsigned P2DC62                 :1;
    };
    struct {
        unsigned STRA2                  :1;
        unsigned STRB2                  :1;
        unsigned STRC2                  :1;
        unsigned STRD2                  :1;
        unsigned STRSYNC2               :1;
        unsigned                        :1;
        unsigned P2DC6CON               :1;
    };
} PSTR2CONbits_t;
extern volatile PSTR2CONbits_t PSTR2CONbits __at(0xF1B);
// bitfield macros
#define _PSTR2CON_STRA_POSN                                 0x0
#define _PSTR2CON_STRA_POSITION                             0x0
#define _PSTR2CON_STRA_SIZE                                 0x1
#define _PSTR2CON_STRA_LENGTH                               0x1
#define _PSTR2CON_STRA_MASK                                 0x1
#define _PSTR2CON_STRB_POSN                                 0x1
#define _PSTR2CON_STRB_POSITION                             0x1
#define _PSTR2CON_STRB_SIZE                                 0x1
#define _PSTR2CON_STRB_LENGTH                               0x1
#define _PSTR2CON_STRB_MASK                                 0x2
#define _PSTR2CON_STRC_POSN                                 0x2
#define _PSTR2CON_STRC_POSITION                             0x2
#define _PSTR2CON_STRC_SIZE                                 0x1
#define _PSTR2CON_STRC_LENGTH                               0x1
#define _PSTR2CON_STRC_MASK                                 0x4
#define _PSTR2CON_STRD_POSN                                 0x3
#define _PSTR2CON_STRD_POSITION                             0x3
#define _PSTR2CON_STRD_SIZE                                 0x1
#define _PSTR2CON_STRD_LENGTH                               0x1
#define _PSTR2CON_STRD_MASK                                 0x8
#define _PSTR2CON_STRSYNC_POSN                              0x4
#define _PSTR2CON_STRSYNC_POSITION                          0x4
#define _PSTR2CON_STRSYNC_SIZE                              0x1
#define _PSTR2CON_STRSYNC_LENGTH                            0x1
#define _PSTR2CON_STRSYNC_MASK                              0x10
#define _PSTR2CON_CMPL_POSN                                 0x6
#define _PSTR2CON_CMPL_POSITION                             0x6
#define _PSTR2CON_CMPL_SIZE                                 0x2
#define _PSTR2CON_CMPL_LENGTH                               0x2
#define _PSTR2CON_CMPL_MASK                                 0xC0
#define _PSTR2CON_CMPL0_POSN                                0x6
#define _PSTR2CON_CMPL0_POSITION                            0x6
#define _PSTR2CON_CMPL0_SIZE                                0x1
#define _PSTR2CON_CMPL0_LENGTH                              0x1
#define _PSTR2CON_CMPL0_MASK                                0x40
#define _PSTR2CON_CMPL1_POSN                                0x7
#define _PSTR2CON_CMPL1_POSITION                            0x7
#define _PSTR2CON_CMPL1_SIZE                                0x1
#define _PSTR2CON_CMPL1_LENGTH                              0x1
#define _PSTR2CON_CMPL1_MASK                                0x80
#define _PSTR2CON_P2DC02_POSN                               0x0
#define _PSTR2CON_P2DC02_POSITION                           0x0
#define _PSTR2CON_P2DC02_SIZE                               0x1
#define _PSTR2CON_P2DC02_LENGTH                             0x1
#define _PSTR2CON_P2DC02_MASK                               0x1
#define _PSTR2CON_P2DC12_POSN                               0x1
#define _PSTR2CON_P2DC12_POSITION                           0x1
#define _PSTR2CON_P2DC12_SIZE                               0x1
#define _PSTR2CON_P2DC12_LENGTH                             0x1
#define _PSTR2CON_P2DC12_MASK                               0x2
#define _PSTR2CON_P2DC22_POSN                               0x2
#define _PSTR2CON_P2DC22_POSITION                           0x2
#define _PSTR2CON_P2DC22_SIZE                               0x1
#define _PSTR2CON_P2DC22_LENGTH                             0x1
#define _PSTR2CON_P2DC22_MASK                               0x4
#define _PSTR2CON_P2DC32_POSN                               0x3
#define _PSTR2CON_P2DC32_POSITION                           0x3
#define _PSTR2CON_P2DC32_SIZE                               0x1
#define _PSTR2CON_P2DC32_LENGTH                             0x1
#define _PSTR2CON_P2DC32_MASK                               0x8
#define _PSTR2CON_P2DC42_POSN                               0x4
#define _PSTR2CON_P2DC42_POSITION                           0x4
#define _PSTR2CON_P2DC42_SIZE                               0x1
#define _PSTR2CON_P2DC42_LENGTH                             0x1
#define _PSTR2CON_P2DC42_MASK                               0x10
#define _PSTR2CON_CMPL02_POSN                               0x6
#define _PSTR2CON_CMPL02_POSITION                           0x6
#define _PSTR2CON_CMPL02_SIZE                               0x1
#define _PSTR2CON_CMPL02_LENGTH                             0x1
#define _PSTR2CON_CMPL02_MASK                               0x40
#define _PSTR2CON_CMPL12_POSN                               0x7
#define _PSTR2CON_CMPL12_POSITION                           0x7
#define _PSTR2CON_CMPL12_SIZE                               0x1
#define _PSTR2CON_CMPL12_LENGTH                             0x1
#define _PSTR2CON_CMPL12_MASK                               0x80
#define _PSTR2CON_P2DC0CON_POSN                             0x0
#define _PSTR2CON_P2DC0CON_POSITION                         0x0
#define _PSTR2CON_P2DC0CON_SIZE                             0x1
#define _PSTR2CON_P2DC0CON_LENGTH                           0x1
#define _PSTR2CON_P2DC0CON_MASK                             0x1
#define _PSTR2CON_P2DC1CON_POSN                             0x1
#define _PSTR2CON_P2DC1CON_POSITION                         0x1
#define _PSTR2CON_P2DC1CON_SIZE                             0x1
#define _PSTR2CON_P2DC1CON_LENGTH                           0x1
#define _PSTR2CON_P2DC1CON_MASK                             0x2
#define _PSTR2CON_P2DC2CON_POSN                             0x2
#define _PSTR2CON_P2DC2CON_POSITION                         0x2
#define _PSTR2CON_P2DC2CON_SIZE                             0x1
#define _PSTR2CON_P2DC2CON_LENGTH                           0x1
#define _PSTR2CON_P2DC2CON_MASK                             0x4
#define _PSTR2CON_P2DC3CON_POSN                             0x3
#define _PSTR2CON_P2DC3CON_POSITION                         0x3
#define _PSTR2CON_P2DC3CON_SIZE                             0x1
#define _PSTR2CON_P2DC3CON_LENGTH                           0x1
#define _PSTR2CON_P2DC3CON_MASK                             0x8
#define _PSTR2CON_P2DC4CON_POSN                             0x4
#define _PSTR2CON_P2DC4CON_POSITION                         0x4
#define _PSTR2CON_P2DC4CON_SIZE                             0x1
#define _PSTR2CON_P2DC4CON_LENGTH                           0x1
#define _PSTR2CON_P2DC4CON_MASK                             0x10
#define _PSTR2CON_P2DC62_POSN                               0x6
#define _PSTR2CON_P2DC62_POSITION                           0x6
#define _PSTR2CON_P2DC62_SIZE                               0x1
#define _PSTR2CON_P2DC62_LENGTH                             0x1
#define _PSTR2CON_P2DC62_MASK                               0x40
#define _PSTR2CON_STRA2_POSN                                0x0
#define _PSTR2CON_STRA2_POSITION                            0x0
#define _PSTR2CON_STRA2_SIZE                                0x1
#define _PSTR2CON_STRA2_LENGTH                              0x1
#define _PSTR2CON_STRA2_MASK                                0x1
#define _PSTR2CON_STRB2_POSN                                0x1
#define _PSTR2CON_STRB2_POSITION                            0x1
#define _PSTR2CON_STRB2_SIZE                                0x1
#define _PSTR2CON_STRB2_LENGTH                              0x1
#define _PSTR2CON_STRB2_MASK                                0x2
#define _PSTR2CON_STRC2_POSN                                0x2
#define _PSTR2CON_STRC2_POSITION                            0x2
#define _PSTR2CON_STRC2_SIZE                                0x1
#define _PSTR2CON_STRC2_LENGTH                              0x1
#define _PSTR2CON_STRC2_MASK                                0x4
#define _PSTR2CON_STRD2_POSN                                0x3
#define _PSTR2CON_STRD2_POSITION                            0x3
#define _PSTR2CON_STRD2_SIZE                                0x1
#define _PSTR2CON_STRD2_LENGTH                              0x1
#define _PSTR2CON_STRD2_MASK                                0x8
#define _PSTR2CON_STRSYNC2_POSN                             0x4
#define _PSTR2CON_STRSYNC2_POSITION                         0x4
#define _PSTR2CON_STRSYNC2_SIZE                             0x1
#define _PSTR2CON_STRSYNC2_LENGTH                           0x1
#define _PSTR2CON_STRSYNC2_MASK                             0x10
#define _PSTR2CON_P2DC6CON_POSN                             0x6
#define _PSTR2CON_P2DC6CON_POSITION                         0x6
#define _PSTR2CON_P2DC6CON_SIZE                             0x1
#define _PSTR2CON_P2DC6CON_LENGTH                           0x1
#define _PSTR2CON_P2DC6CON_MASK                             0x40

// Register: TXREG2
#define TXREG2 TXREG2
extern volatile unsigned char           TXREG2              __at(0xF1C);
#ifndef _LIB_BUILD
asm("TXREG2 equ 0F1Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXREG2                 :8;
    };
} TXREG2bits_t;
extern volatile TXREG2bits_t TXREG2bits __at(0xF1C);
// bitfield macros
#define _TXREG2_TXREG2_POSN                                 0x0
#define _TXREG2_TXREG2_POSITION                             0x0
#define _TXREG2_TXREG2_SIZE                                 0x8
#define _TXREG2_TXREG2_LENGTH                               0x8
#define _TXREG2_TXREG2_MASK                                 0xFF

// Register: RCREG2
#define RCREG2 RCREG2
extern volatile unsigned char           RCREG2              __at(0xF1D);
#ifndef _LIB_BUILD
asm("RCREG2 equ 0F1Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RCREG2                 :8;
    };
} RCREG2bits_t;
extern volatile RCREG2bits_t RCREG2bits __at(0xF1D);
// bitfield macros
#define _RCREG2_RCREG2_POSN                                 0x0
#define _RCREG2_RCREG2_POSITION                             0x0
#define _RCREG2_RCREG2_SIZE                                 0x8
#define _RCREG2_RCREG2_LENGTH                               0x8
#define _RCREG2_RCREG2_MASK                                 0xFF

// Register: SPBRG2
#define SPBRG2 SPBRG2
extern volatile unsigned char           SPBRG2              __at(0xF1E);
#ifndef _LIB_BUILD
asm("SPBRG2 equ 0F1Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SPBRG2                 :8;
    };
} SPBRG2bits_t;
extern volatile SPBRG2bits_t SPBRG2bits __at(0xF1E);
// bitfield macros
#define _SPBRG2_SPBRG2_POSN                                 0x0
#define _SPBRG2_SPBRG2_POSITION                             0x0
#define _SPBRG2_SPBRG2_SIZE                                 0x8
#define _SPBRG2_SPBRG2_LENGTH                               0x8
#define _SPBRG2_SPBRG2_MASK                                 0xFF

// Register: SPBRGH2
#define SPBRGH2 SPBRGH2
extern volatile unsigned char           SPBRGH2             __at(0xF1F);
#ifndef _LIB_BUILD
asm("SPBRGH2 equ 0F1Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SPBRGH2                :8;
    };
} SPBRGH2bits_t;
extern volatile SPBRGH2bits_t SPBRGH2bits __at(0xF1F);
// bitfield macros
#define _SPBRGH2_SPBRGH2_POSN                               0x0
#define _SPBRGH2_SPBRGH2_POSITION                           0x0
#define _SPBRGH2_SPBRGH2_SIZE                               0x8
#define _SPBRGH2_SPBRGH2_LENGTH                             0x8
#define _SPBRGH2_SPBRGH2_MASK                               0xFF

// Register: BAUDCON2
#define BAUDCON2 BAUDCON2
extern volatile unsigned char           BAUDCON2            __at(0xF20);
#ifndef _LIB_BUILD
asm("BAUDCON2 equ 0F20h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned TXCKP                  :1;
        unsigned RXDTP                  :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
    struct {
        unsigned ABDEN2                 :1;
        unsigned WUE2                   :1;
        unsigned                        :1;
        unsigned BRG162                 :1;
        unsigned SCKP2                  :1;
        unsigned DTRXP2                 :1;
        unsigned RCIDL2                 :1;
        unsigned ABDOVF2                :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXCKP2                 :1;
        unsigned RXDTP2                 :1;
        unsigned RCMT2                  :1;
    };
} BAUDCON2bits_t;
extern volatile BAUDCON2bits_t BAUDCON2bits __at(0xF20);
// bitfield macros
#define _BAUDCON2_ABDEN_POSN                                0x0
#define _BAUDCON2_ABDEN_POSITION                            0x0
#define _BAUDCON2_ABDEN_SIZE                                0x1
#define _BAUDCON2_ABDEN_LENGTH                              0x1
#define _BAUDCON2_ABDEN_MASK                                0x1
#define _BAUDCON2_WUE_POSN                                  0x1
#define _BAUDCON2_WUE_POSITION                              0x1
#define _BAUDCON2_WUE_SIZE                                  0x1
#define _BAUDCON2_WUE_LENGTH                                0x1
#define _BAUDCON2_WUE_MASK                                  0x2
#define _BAUDCON2_BRG16_POSN                                0x3
#define _BAUDCON2_BRG16_POSITION                            0x3
#define _BAUDCON2_BRG16_SIZE                                0x1
#define _BAUDCON2_BRG16_LENGTH                              0x1
#define _BAUDCON2_BRG16_MASK                                0x8
#define _BAUDCON2_TXCKP_POSN                                0x4
#define _BAUDCON2_TXCKP_POSITION                            0x4
#define _BAUDCON2_TXCKP_SIZE                                0x1
#define _BAUDCON2_TXCKP_LENGTH                              0x1
#define _BAUDCON2_TXCKP_MASK                                0x10
#define _BAUDCON2_RXDTP_POSN                                0x5
#define _BAUDCON2_RXDTP_POSITION                            0x5
#define _BAUDCON2_RXDTP_SIZE                                0x1
#define _BAUDCON2_RXDTP_LENGTH                              0x1
#define _BAUDCON2_RXDTP_MASK                                0x20
#define _BAUDCON2_RCIDL_POSN                                0x6
#define _BAUDCON2_RCIDL_POSITION                            0x6
#define _BAUDCON2_RCIDL_SIZE                                0x1
#define _BAUDCON2_RCIDL_LENGTH                              0x1
#define _BAUDCON2_RCIDL_MASK                                0x40
#define _BAUDCON2_ABDOVF_POSN                               0x7
#define _BAUDCON2_ABDOVF_POSITION                           0x7
#define _BAUDCON2_ABDOVF_SIZE                               0x1
#define _BAUDCON2_ABDOVF_LENGTH                             0x1
#define _BAUDCON2_ABDOVF_MASK                               0x80
#define _BAUDCON2_ABDEN2_POSN                               0x0
#define _BAUDCON2_ABDEN2_POSITION                           0x0
#define _BAUDCON2_ABDEN2_SIZE                               0x1
#define _BAUDCON2_ABDEN2_LENGTH                             0x1
#define _BAUDCON2_ABDEN2_MASK                               0x1
#define _BAUDCON2_WUE2_POSN                                 0x1
#define _BAUDCON2_WUE2_POSITION                             0x1
#define _BAUDCON2_WUE2_SIZE                                 0x1
#define _BAUDCON2_WUE2_LENGTH                               0x1
#define _BAUDCON2_WUE2_MASK                                 0x2
#define _BAUDCON2_BRG162_POSN                               0x3
#define _BAUDCON2_BRG162_POSITION                           0x3
#define _BAUDCON2_BRG162_SIZE                               0x1
#define _BAUDCON2_BRG162_LENGTH                             0x1
#define _BAUDCON2_BRG162_MASK                               0x8
#define _BAUDCON2_SCKP2_POSN                                0x4
#define _BAUDCON2_SCKP2_POSITION                            0x4
#define _BAUDCON2_SCKP2_SIZE                                0x1
#define _BAUDCON2_SCKP2_LENGTH                              0x1
#define _BAUDCON2_SCKP2_MASK                                0x10
#define _BAUDCON2_DTRXP2_POSN                               0x5
#define _BAUDCON2_DTRXP2_POSITION                           0x5
#define _BAUDCON2_DTRXP2_SIZE                               0x1
#define _BAUDCON2_DTRXP2_LENGTH                             0x1
#define _BAUDCON2_DTRXP2_MASK                               0x20
#define _BAUDCON2_RCIDL2_POSN                               0x6
#define _BAUDCON2_RCIDL2_POSITION                           0x6
#define _BAUDCON2_RCIDL2_SIZE                               0x1
#define _BAUDCON2_RCIDL2_LENGTH                             0x1
#define _BAUDCON2_RCIDL2_MASK                               0x40
#define _BAUDCON2_ABDOVF2_POSN                              0x7
#define _BAUDCON2_ABDOVF2_POSITION                          0x7
#define _BAUDCON2_ABDOVF2_SIZE                              0x1
#define _BAUDCON2_ABDOVF2_LENGTH                            0x1
#define _BAUDCON2_ABDOVF2_MASK                              0x80
#define _BAUDCON2_TXCKP2_POSN                               0x4
#define _BAUDCON2_TXCKP2_POSITION                           0x4
#define _BAUDCON2_TXCKP2_SIZE                               0x1
#define _BAUDCON2_TXCKP2_LENGTH                             0x1
#define _BAUDCON2_TXCKP2_MASK                               0x10
#define _BAUDCON2_RXDTP2_POSN                               0x5
#define _BAUDCON2_RXDTP2_POSITION                           0x5
#define _BAUDCON2_RXDTP2_SIZE                               0x1
#define _BAUDCON2_RXDTP2_LENGTH                             0x1
#define _BAUDCON2_RXDTP2_MASK                               0x20
#define _BAUDCON2_RCMT2_POSN                                0x6
#define _BAUDCON2_RCMT2_POSITION                            0x6
#define _BAUDCON2_RCMT2_SIZE                                0x1
#define _BAUDCON2_RCMT2_LENGTH                              0x1
#define _BAUDCON2_RCMT2_MASK                                0x40

// Register: TXSTA2
#define TXSTA2 TXSTA2
extern volatile unsigned char           TXSTA2              __at(0xF21);
#ifndef _LIB_BUILD
asm("TXSTA2 equ 0F21h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
    struct {
        unsigned TX9D2                  :1;
        unsigned TRMT2                  :1;
        unsigned BRGH2                  :1;
        unsigned SENDB2                 :1;
        unsigned SYNC2                  :1;
        unsigned TXEN2                  :1;
        unsigned TX92                   :1;
        unsigned CSRC2                  :1;
    };
    struct {
        unsigned TXD82                  :1;
        unsigned                        :5;
        unsigned TX8_92                 :1;
    };
} TXSTA2bits_t;
extern volatile TXSTA2bits_t TXSTA2bits __at(0xF21);
// bitfield macros
#define _TXSTA2_TX9D_POSN                                   0x0
#define _TXSTA2_TX9D_POSITION                               0x0
#define _TXSTA2_TX9D_SIZE                                   0x1
#define _TXSTA2_TX9D_LENGTH                                 0x1
#define _TXSTA2_TX9D_MASK                                   0x1
#define _TXSTA2_TRMT_POSN                                   0x1
#define _TXSTA2_TRMT_POSITION                               0x1
#define _TXSTA2_TRMT_SIZE                                   0x1
#define _TXSTA2_TRMT_LENGTH                                 0x1
#define _TXSTA2_TRMT_MASK                                   0x2
#define _TXSTA2_BRGH_POSN                                   0x2
#define _TXSTA2_BRGH_POSITION                               0x2
#define _TXSTA2_BRGH_SIZE                                   0x1
#define _TXSTA2_BRGH_LENGTH                                 0x1
#define _TXSTA2_BRGH_MASK                                   0x4
#define _TXSTA2_SENDB_POSN                                  0x3
#define _TXSTA2_SENDB_POSITION                              0x3
#define _TXSTA2_SENDB_SIZE                                  0x1
#define _TXSTA2_SENDB_LENGTH                                0x1
#define _TXSTA2_SENDB_MASK                                  0x8
#define _TXSTA2_SYNC_POSN                                   0x4
#define _TXSTA2_SYNC_POSITION                               0x4
#define _TXSTA2_SYNC_SIZE                                   0x1
#define _TXSTA2_SYNC_LENGTH                                 0x1
#define _TXSTA2_SYNC_MASK                                   0x10
#define _TXSTA2_TXEN_POSN                                   0x5
#define _TXSTA2_TXEN_POSITION                               0x5
#define _TXSTA2_TXEN_SIZE                                   0x1
#define _TXSTA2_TXEN_LENGTH                                 0x1
#define _TXSTA2_TXEN_MASK                                   0x20
#define _TXSTA2_TX9_POSN                                    0x6
#define _TXSTA2_TX9_POSITION                                0x6
#define _TXSTA2_TX9_SIZE                                    0x1
#define _TXSTA2_TX9_LENGTH                                  0x1
#define _TXSTA2_TX9_MASK                                    0x40
#define _TXSTA2_CSRC_POSN                                   0x7
#define _TXSTA2_CSRC_POSITION                               0x7
#define _TXSTA2_CSRC_SIZE                                   0x1
#define _TXSTA2_CSRC_LENGTH                                 0x1
#define _TXSTA2_CSRC_MASK                                   0x80
#define _TXSTA2_TX9D2_POSN                                  0x0
#define _TXSTA2_TX9D2_POSITION                              0x0
#define _TXSTA2_TX9D2_SIZE                                  0x1
#define _TXSTA2_TX9D2_LENGTH                                0x1
#define _TXSTA2_TX9D2_MASK                                  0x1
#define _TXSTA2_TRMT2_POSN                                  0x1
#define _TXSTA2_TRMT2_POSITION                              0x1
#define _TXSTA2_TRMT2_SIZE                                  0x1
#define _TXSTA2_TRMT2_LENGTH                                0x1
#define _TXSTA2_TRMT2_MASK                                  0x2
#define _TXSTA2_BRGH2_POSN                                  0x2
#define _TXSTA2_BRGH2_POSITION                              0x2
#define _TXSTA2_BRGH2_SIZE                                  0x1
#define _TXSTA2_BRGH2_LENGTH                                0x1
#define _TXSTA2_BRGH2_MASK                                  0x4
#define _TXSTA2_SENDB2_POSN                                 0x3
#define _TXSTA2_SENDB2_POSITION                             0x3
#define _TXSTA2_SENDB2_SIZE                                 0x1
#define _TXSTA2_SENDB2_LENGTH                               0x1
#define _TXSTA2_SENDB2_MASK                                 0x8
#define _TXSTA2_SYNC2_POSN                                  0x4
#define _TXSTA2_SYNC2_POSITION                              0x4
#define _TXSTA2_SYNC2_SIZE                                  0x1
#define _TXSTA2_SYNC2_LENGTH                                0x1
#define _TXSTA2_SYNC2_MASK                                  0x10
#define _TXSTA2_TXEN2_POSN                                  0x5
#define _TXSTA2_TXEN2_POSITION                              0x5
#define _TXSTA2_TXEN2_SIZE                                  0x1
#define _TXSTA2_TXEN2_LENGTH                                0x1
#define _TXSTA2_TXEN2_MASK                                  0x20
#define _TXSTA2_TX92_POSN                                   0x6
#define _TXSTA2_TX92_POSITION                               0x6
#define _TXSTA2_TX92_SIZE                                   0x1
#define _TXSTA2_TX92_LENGTH                                 0x1
#define _TXSTA2_TX92_MASK                                   0x40
#define _TXSTA2_CSRC2_POSN                                  0x7
#define _TXSTA2_CSRC2_POSITION                              0x7
#define _TXSTA2_CSRC2_SIZE                                  0x1
#define _TXSTA2_CSRC2_LENGTH                                0x1
#define _TXSTA2_CSRC2_MASK                                  0x80
#define _TXSTA2_TXD82_POSN                                  0x0
#define _TXSTA2_TXD82_POSITION                              0x0
#define _TXSTA2_TXD82_SIZE                                  0x1
#define _TXSTA2_TXD82_LENGTH                                0x1
#define _TXSTA2_TXD82_MASK                                  0x1
#define _TXSTA2_TX8_92_POSN                                 0x6
#define _TXSTA2_TX8_92_POSITION                             0x6
#define _TXSTA2_TX8_92_SIZE                                 0x1
#define _TXSTA2_TX8_92_LENGTH                               0x1
#define _TXSTA2_TX8_92_MASK                                 0x40

// Register: RCSTA2
#define RCSTA2 RCSTA2
extern volatile unsigned char           RCSTA2              __at(0xF22);
#ifndef _LIB_BUILD
asm("RCSTA2 equ 0F22h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
    struct {
        unsigned RX9D2                  :1;
        unsigned OERR2                  :1;
        unsigned FERR2                  :1;
        unsigned ADDEN2                 :1;
        unsigned CREN2                  :1;
        unsigned SREN2                  :1;
        unsigned RX92                   :1;
        unsigned SPEN2                  :1;
    };
    struct {
        unsigned RCD82                  :1;
        unsigned                        :5;
        unsigned RC8_92                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC92                   :1;
    };
} RCSTA2bits_t;
extern volatile RCSTA2bits_t RCSTA2bits __at(0xF22);
// bitfield macros
#define _RCSTA2_RX9D_POSN                                   0x0
#define _RCSTA2_RX9D_POSITION                               0x0
#define _RCSTA2_RX9D_SIZE                                   0x1
#define _RCSTA2_RX9D_LENGTH                                 0x1
#define _RCSTA2_RX9D_MASK                                   0x1
#define _RCSTA2_OERR_POSN                                   0x1
#define _RCSTA2_OERR_POSITION                               0x1
#define _RCSTA2_OERR_SIZE                                   0x1
#define _RCSTA2_OERR_LENGTH                                 0x1
#define _RCSTA2_OERR_MASK                                   0x2
#define _RCSTA2_FERR_POSN                                   0x2
#define _RCSTA2_FERR_POSITION                               0x2
#define _RCSTA2_FERR_SIZE                                   0x1
#define _RCSTA2_FERR_LENGTH                                 0x1
#define _RCSTA2_FERR_MASK                                   0x4
#define _RCSTA2_ADDEN_POSN                                  0x3
#define _RCSTA2_ADDEN_POSITION                              0x3
#define _RCSTA2_ADDEN_SIZE                                  0x1
#define _RCSTA2_ADDEN_LENGTH                                0x1
#define _RCSTA2_ADDEN_MASK                                  0x8
#define _RCSTA2_CREN_POSN                                   0x4
#define _RCSTA2_CREN_POSITION                               0x4
#define _RCSTA2_CREN_SIZE                                   0x1
#define _RCSTA2_CREN_LENGTH                                 0x1
#define _RCSTA2_CREN_MASK                                   0x10
#define _RCSTA2_SREN_POSN                                   0x5
#define _RCSTA2_SREN_POSITION                               0x5
#define _RCSTA2_SREN_SIZE                                   0x1
#define _RCSTA2_SREN_LENGTH                                 0x1
#define _RCSTA2_SREN_MASK                                   0x20
#define _RCSTA2_RX9_POSN                                    0x6
#define _RCSTA2_RX9_POSITION                                0x6
#define _RCSTA2_RX9_SIZE                                    0x1
#define _RCSTA2_RX9_LENGTH                                  0x1
#define _RCSTA2_RX9_MASK                                    0x40
#define _RCSTA2_SPEN_POSN                                   0x7
#define _RCSTA2_SPEN_POSITION                               0x7
#define _RCSTA2_SPEN_SIZE                                   0x1
#define _RCSTA2_SPEN_LENGTH                                 0x1
#define _RCSTA2_SPEN_MASK                                   0x80
#define _RCSTA2_RX9D2_POSN                                  0x0
#define _RCSTA2_RX9D2_POSITION                              0x0
#define _RCSTA2_RX9D2_SIZE                                  0x1
#define _RCSTA2_RX9D2_LENGTH                                0x1
#define _RCSTA2_RX9D2_MASK                                  0x1
#define _RCSTA2_OERR2_POSN                                  0x1
#define _RCSTA2_OERR2_POSITION                              0x1
#define _RCSTA2_OERR2_SIZE                                  0x1
#define _RCSTA2_OERR2_LENGTH                                0x1
#define _RCSTA2_OERR2_MASK                                  0x2
#define _RCSTA2_FERR2_POSN                                  0x2
#define _RCSTA2_FERR2_POSITION                              0x2
#define _RCSTA2_FERR2_SIZE                                  0x1
#define _RCSTA2_FERR2_LENGTH                                0x1
#define _RCSTA2_FERR2_MASK                                  0x4
#define _RCSTA2_ADDEN2_POSN                                 0x3
#define _RCSTA2_ADDEN2_POSITION                             0x3
#define _RCSTA2_ADDEN2_SIZE                                 0x1
#define _RCSTA2_ADDEN2_LENGTH                               0x1
#define _RCSTA2_ADDEN2_MASK                                 0x8
#define _RCSTA2_CREN2_POSN                                  0x4
#define _RCSTA2_CREN2_POSITION                              0x4
#define _RCSTA2_CREN2_SIZE                                  0x1
#define _RCSTA2_CREN2_LENGTH                                0x1
#define _RCSTA2_CREN2_MASK                                  0x10
#define _RCSTA2_SREN2_POSN                                  0x5
#define _RCSTA2_SREN2_POSITION                              0x5
#define _RCSTA2_SREN2_SIZE                                  0x1
#define _RCSTA2_SREN2_LENGTH                                0x1
#define _RCSTA2_SREN2_MASK                                  0x20
#define _RCSTA2_RX92_POSN                                   0x6
#define _RCSTA2_RX92_POSITION                               0x6
#define _RCSTA2_RX92_SIZE                                   0x1
#define _RCSTA2_RX92_LENGTH                                 0x1
#define _RCSTA2_RX92_MASK                                   0x40
#define _RCSTA2_SPEN2_POSN                                  0x7
#define _RCSTA2_SPEN2_POSITION                              0x7
#define _RCSTA2_SPEN2_SIZE                                  0x1
#define _RCSTA2_SPEN2_LENGTH                                0x1
#define _RCSTA2_SPEN2_MASK                                  0x80
#define _RCSTA2_RCD82_POSN                                  0x0
#define _RCSTA2_RCD82_POSITION                              0x0
#define _RCSTA2_RCD82_SIZE                                  0x1
#define _RCSTA2_RCD82_LENGTH                                0x1
#define _RCSTA2_RCD82_MASK                                  0x1
#define _RCSTA2_RC8_92_POSN                                 0x6
#define _RCSTA2_RC8_92_POSITION                             0x6
#define _RCSTA2_RC8_92_SIZE                                 0x1
#define _RCSTA2_RC8_92_LENGTH                               0x1
#define _RCSTA2_RC8_92_MASK                                 0x40
#define _RCSTA2_RC92_POSN                                   0x6
#define _RCSTA2_RC92_POSITION                               0x6
#define _RCSTA2_RC92_SIZE                                   0x1
#define _RCSTA2_RC92_LENGTH                                 0x1
#define _RCSTA2_RC92_MASK                                   0x40

// Register: ANCON2
#define ANCON2 ANCON2
extern volatile unsigned char           ANCON2              __at(0xF23);
#ifndef _LIB_BUILD
asm("ANCON2 equ 0F23h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ANSEL16                :1;
        unsigned ANSEL17                :1;
        unsigned ANSEL18                :1;
        unsigned ANSEL19                :1;
        unsigned ANSEL20                :1;
        unsigned ANSEL21                :1;
        unsigned ANSEL22                :1;
        unsigned ANSEL23                :1;
    };
    struct {
        unsigned PCFG16                 :1;
        unsigned PCFG17                 :1;
        unsigned PCFG18                 :1;
        unsigned PCFG19                 :1;
        unsigned PCFG20                 :1;
        unsigned PCFG21                 :1;
        unsigned PCFG22                 :1;
        unsigned PCFG23                 :1;
    };
} ANCON2bits_t;
extern volatile ANCON2bits_t ANCON2bits __at(0xF23);
// bitfield macros
#define _ANCON2_ANSEL16_POSN                                0x0
#define _ANCON2_ANSEL16_POSITION                            0x0
#define _ANCON2_ANSEL16_SIZE                                0x1
#define _ANCON2_ANSEL16_LENGTH                              0x1
#define _ANCON2_ANSEL16_MASK                                0x1
#define _ANCON2_ANSEL17_POSN                                0x1
#define _ANCON2_ANSEL17_POSITION                            0x1
#define _ANCON2_ANSEL17_SIZE                                0x1
#define _ANCON2_ANSEL17_LENGTH                              0x1
#define _ANCON2_ANSEL17_MASK                                0x2
#define _ANCON2_ANSEL18_POSN                                0x2
#define _ANCON2_ANSEL18_POSITION                            0x2
#define _ANCON2_ANSEL18_SIZE                                0x1
#define _ANCON2_ANSEL18_LENGTH                              0x1
#define _ANCON2_ANSEL18_MASK                                0x4
#define _ANCON2_ANSEL19_POSN                                0x3
#define _ANCON2_ANSEL19_POSITION                            0x3
#define _ANCON2_ANSEL19_SIZE                                0x1
#define _ANCON2_ANSEL19_LENGTH                              0x1
#define _ANCON2_ANSEL19_MASK                                0x8
#define _ANCON2_ANSEL20_POSN                                0x4
#define _ANCON2_ANSEL20_POSITION                            0x4
#define _ANCON2_ANSEL20_SIZE                                0x1
#define _ANCON2_ANSEL20_LENGTH                              0x1
#define _ANCON2_ANSEL20_MASK                                0x10
#define _ANCON2_ANSEL21_POSN                                0x5
#define _ANCON2_ANSEL21_POSITION                            0x5
#define _ANCON2_ANSEL21_SIZE                                0x1
#define _ANCON2_ANSEL21_LENGTH                              0x1
#define _ANCON2_ANSEL21_MASK                                0x20
#define _ANCON2_ANSEL22_POSN                                0x6
#define _ANCON2_ANSEL22_POSITION                            0x6
#define _ANCON2_ANSEL22_SIZE                                0x1
#define _ANCON2_ANSEL22_LENGTH                              0x1
#define _ANCON2_ANSEL22_MASK                                0x40
#define _ANCON2_ANSEL23_POSN                                0x7
#define _ANCON2_ANSEL23_POSITION                            0x7
#define _ANCON2_ANSEL23_SIZE                                0x1
#define _ANCON2_ANSEL23_LENGTH                              0x1
#define _ANCON2_ANSEL23_MASK                                0x80
#define _ANCON2_PCFG16_POSN                                 0x0
#define _ANCON2_PCFG16_POSITION                             0x0
#define _ANCON2_PCFG16_SIZE                                 0x1
#define _ANCON2_PCFG16_LENGTH                               0x1
#define _ANCON2_PCFG16_MASK                                 0x1
#define _ANCON2_PCFG17_POSN                                 0x1
#define _ANCON2_PCFG17_POSITION                             0x1
#define _ANCON2_PCFG17_SIZE                                 0x1
#define _ANCON2_PCFG17_LENGTH                               0x1
#define _ANCON2_PCFG17_MASK                                 0x2
#define _ANCON2_PCFG18_POSN                                 0x2
#define _ANCON2_PCFG18_POSITION                             0x2
#define _ANCON2_PCFG18_SIZE                                 0x1
#define _ANCON2_PCFG18_LENGTH                               0x1
#define _ANCON2_PCFG18_MASK                                 0x4
#define _ANCON2_PCFG19_POSN                                 0x3
#define _ANCON2_PCFG19_POSITION                             0x3
#define _ANCON2_PCFG19_SIZE                                 0x1
#define _ANCON2_PCFG19_LENGTH                               0x1
#define _ANCON2_PCFG19_MASK                                 0x8
#define _ANCON2_PCFG20_POSN                                 0x4
#define _ANCON2_PCFG20_POSITION                             0x4
#define _ANCON2_PCFG20_SIZE                                 0x1
#define _ANCON2_PCFG20_LENGTH                               0x1
#define _ANCON2_PCFG20_MASK                                 0x10
#define _ANCON2_PCFG21_POSN                                 0x5
#define _ANCON2_PCFG21_POSITION                             0x5
#define _ANCON2_PCFG21_SIZE                                 0x1
#define _ANCON2_PCFG21_LENGTH                               0x1
#define _ANCON2_PCFG21_MASK                                 0x20
#define _ANCON2_PCFG22_POSN                                 0x6
#define _ANCON2_PCFG22_POSITION                             0x6
#define _ANCON2_PCFG22_SIZE                                 0x1
#define _ANCON2_PCFG22_LENGTH                               0x1
#define _ANCON2_PCFG22_MASK                                 0x40
#define _ANCON2_PCFG23_POSN                                 0x7
#define _ANCON2_PCFG23_POSITION                             0x7
#define _ANCON2_PCFG23_SIZE                                 0x1
#define _ANCON2_PCFG23_LENGTH                               0x1
#define _ANCON2_PCFG23_MASK                                 0x80

// Register: ANCON1
#define ANCON1 ANCON1
extern volatile unsigned char           ANCON1              __at(0xF24);
#ifndef _LIB_BUILD
asm("ANCON1 equ 0F24h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ANSEL8                 :1;
        unsigned ANSEL9                 :1;
        unsigned ANSEL10                :1;
        unsigned ANSEL11                :1;
        unsigned ANSEL12                :1;
        unsigned ANSEL13                :1;
        unsigned ANSEL14                :1;
        unsigned ANSEL15                :1;
    };
    struct {
        unsigned PCFG8                  :1;
        unsigned PCFG9                  :1;
        unsigned PCFG10                 :1;
        unsigned PCFG11                 :1;
        unsigned PCFG12                 :1;
        unsigned PCFG13                 :1;
        unsigned PCFG14                 :1;
        unsigned PCFG15                 :1;
    };
} ANCON1bits_t;
extern volatile ANCON1bits_t ANCON1bits __at(0xF24);
// bitfield macros
#define _ANCON1_ANSEL8_POSN                                 0x0
#define _ANCON1_ANSEL8_POSITION                             0x0
#define _ANCON1_ANSEL8_SIZE                                 0x1
#define _ANCON1_ANSEL8_LENGTH                               0x1
#define _ANCON1_ANSEL8_MASK                                 0x1
#define _ANCON1_ANSEL9_POSN                                 0x1
#define _ANCON1_ANSEL9_POSITION                             0x1
#define _ANCON1_ANSEL9_SIZE                                 0x1
#define _ANCON1_ANSEL9_LENGTH                               0x1
#define _ANCON1_ANSEL9_MASK                                 0x2
#define _ANCON1_ANSEL10_POSN                                0x2
#define _ANCON1_ANSEL10_POSITION                            0x2
#define _ANCON1_ANSEL10_SIZE                                0x1
#define _ANCON1_ANSEL10_LENGTH                              0x1
#define _ANCON1_ANSEL10_MASK                                0x4
#define _ANCON1_ANSEL11_POSN                                0x3
#define _ANCON1_ANSEL11_POSITION                            0x3
#define _ANCON1_ANSEL11_SIZE                                0x1
#define _ANCON1_ANSEL11_LENGTH                              0x1
#define _ANCON1_ANSEL11_MASK                                0x8
#define _ANCON1_ANSEL12_POSN                                0x4
#define _ANCON1_ANSEL12_POSITION                            0x4
#define _ANCON1_ANSEL12_SIZE                                0x1
#define _ANCON1_ANSEL12_LENGTH                              0x1
#define _ANCON1_ANSEL12_MASK                                0x10
#define _ANCON1_ANSEL13_POSN                                0x5
#define _ANCON1_ANSEL13_POSITION                            0x5
#define _ANCON1_ANSEL13_SIZE                                0x1
#define _ANCON1_ANSEL13_LENGTH                              0x1
#define _ANCON1_ANSEL13_MASK                                0x20
#define _ANCON1_ANSEL14_POSN                                0x6
#define _ANCON1_ANSEL14_POSITION                            0x6
#define _ANCON1_ANSEL14_SIZE                                0x1
#define _ANCON1_ANSEL14_LENGTH                              0x1
#define _ANCON1_ANSEL14_MASK                                0x40
#define _ANCON1_ANSEL15_POSN                                0x7
#define _ANCON1_ANSEL15_POSITION                            0x7
#define _ANCON1_ANSEL15_SIZE                                0x1
#define _ANCON1_ANSEL15_LENGTH                              0x1
#define _ANCON1_ANSEL15_MASK                                0x80
#define _ANCON1_PCFG8_POSN                                  0x0
#define _ANCON1_PCFG8_POSITION                              0x0
#define _ANCON1_PCFG8_SIZE                                  0x1
#define _ANCON1_PCFG8_LENGTH                                0x1
#define _ANCON1_PCFG8_MASK                                  0x1
#define _ANCON1_PCFG9_POSN                                  0x1
#define _ANCON1_PCFG9_POSITION                              0x1
#define _ANCON1_PCFG9_SIZE                                  0x1
#define _ANCON1_PCFG9_LENGTH                                0x1
#define _ANCON1_PCFG9_MASK                                  0x2
#define _ANCON1_PCFG10_POSN                                 0x2
#define _ANCON1_PCFG10_POSITION                             0x2
#define _ANCON1_PCFG10_SIZE                                 0x1
#define _ANCON1_PCFG10_LENGTH                               0x1
#define _ANCON1_PCFG10_MASK                                 0x4
#define _ANCON1_PCFG11_POSN                                 0x3
#define _ANCON1_PCFG11_POSITION                             0x3
#define _ANCON1_PCFG11_SIZE                                 0x1
#define _ANCON1_PCFG11_LENGTH                               0x1
#define _ANCON1_PCFG11_MASK                                 0x8
#define _ANCON1_PCFG12_POSN                                 0x4
#define _ANCON1_PCFG12_POSITION                             0x4
#define _ANCON1_PCFG12_SIZE                                 0x1
#define _ANCON1_PCFG12_LENGTH                               0x1
#define _ANCON1_PCFG12_MASK                                 0x10
#define _ANCON1_PCFG13_POSN                                 0x5
#define _ANCON1_PCFG13_POSITION                             0x5
#define _ANCON1_PCFG13_SIZE                                 0x1
#define _ANCON1_PCFG13_LENGTH                               0x1
#define _ANCON1_PCFG13_MASK                                 0x20
#define _ANCON1_PCFG14_POSN                                 0x6
#define _ANCON1_PCFG14_POSITION                             0x6
#define _ANCON1_PCFG14_SIZE                                 0x1
#define _ANCON1_PCFG14_LENGTH                               0x1
#define _ANCON1_PCFG14_MASK                                 0x40
#define _ANCON1_PCFG15_POSN                                 0x7
#define _ANCON1_PCFG15_POSITION                             0x7
#define _ANCON1_PCFG15_SIZE                                 0x1
#define _ANCON1_PCFG15_LENGTH                               0x1
#define _ANCON1_PCFG15_MASK                                 0x80

// Register: ANCON0
#define ANCON0 ANCON0
extern volatile unsigned char           ANCON0              __at(0xF25);
#ifndef _LIB_BUILD
asm("ANCON0 equ 0F25h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ANSEL0                 :1;
        unsigned ANSEL1                 :1;
        unsigned ANSEL2                 :1;
        unsigned ANSEL3                 :1;
        unsigned ANSEL4                 :1;
        unsigned ANSEL5                 :1;
        unsigned ANSEL6                 :1;
        unsigned ANSEL7                 :1;
    };
    struct {
        unsigned PCFG0                  :1;
        unsigned PCFG1                  :1;
        unsigned PCFG2                  :1;
        unsigned PCFG3                  :1;
        unsigned PCFG4                  :1;
        unsigned PCFG5                  :1;
        unsigned PCFG6                  :1;
        unsigned PCFG7                  :1;
    };
} ANCON0bits_t;
extern volatile ANCON0bits_t ANCON0bits __at(0xF25);
// bitfield macros
#define _ANCON0_ANSEL0_POSN                                 0x0
#define _ANCON0_ANSEL0_POSITION                             0x0
#define _ANCON0_ANSEL0_SIZE                                 0x1
#define _ANCON0_ANSEL0_LENGTH                               0x1
#define _ANCON0_ANSEL0_MASK                                 0x1
#define _ANCON0_ANSEL1_POSN                                 0x1
#define _ANCON0_ANSEL1_POSITION                             0x1
#define _ANCON0_ANSEL1_SIZE                                 0x1
#define _ANCON0_ANSEL1_LENGTH                               0x1
#define _ANCON0_ANSEL1_MASK                                 0x2
#define _ANCON0_ANSEL2_POSN                                 0x2
#define _ANCON0_ANSEL2_POSITION                             0x2
#define _ANCON0_ANSEL2_SIZE                                 0x1
#define _ANCON0_ANSEL2_LENGTH                               0x1
#define _ANCON0_ANSEL2_MASK                                 0x4
#define _ANCON0_ANSEL3_POSN                                 0x3
#define _ANCON0_ANSEL3_POSITION                             0x3
#define _ANCON0_ANSEL3_SIZE                                 0x1
#define _ANCON0_ANSEL3_LENGTH                               0x1
#define _ANCON0_ANSEL3_MASK                                 0x8
#define _ANCON0_ANSEL4_POSN                                 0x4
#define _ANCON0_ANSEL4_POSITION                             0x4
#define _ANCON0_ANSEL4_SIZE                                 0x1
#define _ANCON0_ANSEL4_LENGTH                               0x1
#define _ANCON0_ANSEL4_MASK                                 0x10
#define _ANCON0_ANSEL5_POSN                                 0x5
#define _ANCON0_ANSEL5_POSITION                             0x5
#define _ANCON0_ANSEL5_SIZE                                 0x1
#define _ANCON0_ANSEL5_LENGTH                               0x1
#define _ANCON0_ANSEL5_MASK                                 0x20
#define _ANCON0_ANSEL6_POSN                                 0x6
#define _ANCON0_ANSEL6_POSITION                             0x6
#define _ANCON0_ANSEL6_SIZE                                 0x1
#define _ANCON0_ANSEL6_LENGTH                               0x1
#define _ANCON0_ANSEL6_MASK                                 0x40
#define _ANCON0_ANSEL7_POSN                                 0x7
#define _ANCON0_ANSEL7_POSITION                             0x7
#define _ANCON0_ANSEL7_SIZE                                 0x1
#define _ANCON0_ANSEL7_LENGTH                               0x1
#define _ANCON0_ANSEL7_MASK                                 0x80
#define _ANCON0_PCFG0_POSN                                  0x0
#define _ANCON0_PCFG0_POSITION                              0x0
#define _ANCON0_PCFG0_SIZE                                  0x1
#define _ANCON0_PCFG0_LENGTH                                0x1
#define _ANCON0_PCFG0_MASK                                  0x1
#define _ANCON0_PCFG1_POSN                                  0x1
#define _ANCON0_PCFG1_POSITION                              0x1
#define _ANCON0_PCFG1_SIZE                                  0x1
#define _ANCON0_PCFG1_LENGTH                                0x1
#define _ANCON0_PCFG1_MASK                                  0x2
#define _ANCON0_PCFG2_POSN                                  0x2
#define _ANCON0_PCFG2_POSITION                              0x2
#define _ANCON0_PCFG2_SIZE                                  0x1
#define _ANCON0_PCFG2_LENGTH                                0x1
#define _ANCON0_PCFG2_MASK                                  0x4
#define _ANCON0_PCFG3_POSN                                  0x3
#define _ANCON0_PCFG3_POSITION                              0x3
#define _ANCON0_PCFG3_SIZE                                  0x1
#define _ANCON0_PCFG3_LENGTH                                0x1
#define _ANCON0_PCFG3_MASK                                  0x8
#define _ANCON0_PCFG4_POSN                                  0x4
#define _ANCON0_PCFG4_POSITION                              0x4
#define _ANCON0_PCFG4_SIZE                                  0x1
#define _ANCON0_PCFG4_LENGTH                                0x1
#define _ANCON0_PCFG4_MASK                                  0x10
#define _ANCON0_PCFG5_POSN                                  0x5
#define _ANCON0_PCFG5_POSITION                              0x5
#define _ANCON0_PCFG5_SIZE                                  0x1
#define _ANCON0_PCFG5_LENGTH                                0x1
#define _ANCON0_PCFG5_MASK                                  0x20
#define _ANCON0_PCFG6_POSN                                  0x6
#define _ANCON0_PCFG6_POSITION                              0x6
#define _ANCON0_PCFG6_SIZE                                  0x1
#define _ANCON0_PCFG6_LENGTH                                0x1
#define _ANCON0_PCFG6_MASK                                  0x40
#define _ANCON0_PCFG7_POSN                                  0x7
#define _ANCON0_PCFG7_POSITION                              0x7
#define _ANCON0_PCFG7_SIZE                                  0x1
#define _ANCON0_PCFG7_LENGTH                                0x1
#define _ANCON0_PCFG7_MASK                                  0x80

// Register: ODCON3
#define ODCON3 ODCON3
extern volatile unsigned char           ODCON3              __at(0xF27);
#ifndef _LIB_BUILD
asm("ODCON3 equ 0F27h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CTMUDS                 :1;
        unsigned                        :5;
        unsigned U1OD                   :1;
        unsigned U2OD                   :1;
    };
} ODCON3bits_t;
extern volatile ODCON3bits_t ODCON3bits __at(0xF27);
// bitfield macros
#define _ODCON3_CTMUDS_POSN                                 0x0
#define _ODCON3_CTMUDS_POSITION                             0x0
#define _ODCON3_CTMUDS_SIZE                                 0x1
#define _ODCON3_CTMUDS_LENGTH                               0x1
#define _ODCON3_CTMUDS_MASK                                 0x1
#define _ODCON3_U1OD_POSN                                   0x6
#define _ODCON3_U1OD_POSITION                               0x6
#define _ODCON3_U1OD_SIZE                                   0x1
#define _ODCON3_U1OD_LENGTH                                 0x1
#define _ODCON3_U1OD_MASK                                   0x40
#define _ODCON3_U2OD_POSN                                   0x7
#define _ODCON3_U2OD_POSITION                               0x7
#define _ODCON3_U2OD_SIZE                                   0x1
#define _ODCON3_U2OD_LENGTH                                 0x1
#define _ODCON3_U2OD_MASK                                   0x80

// Register: ODCON2
#define ODCON2 ODCON2
extern volatile unsigned char           ODCON2              __at(0xF28);
#ifndef _LIB_BUILD
asm("ODCON2 equ 0F28h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3OD                 :1;
        unsigned CCP4OD                 :1;
        unsigned CCP5OD                 :1;
        unsigned CCP6OD                 :1;
        unsigned CCP7OD                 :1;
        unsigned CCP8OD                 :1;
    };
} ODCON2bits_t;
extern volatile ODCON2bits_t ODCON2bits __at(0xF28);
// bitfield macros
#define _ODCON2_CCP3OD_POSN                                 0x0
#define _ODCON2_CCP3OD_POSITION                             0x0
#define _ODCON2_CCP3OD_SIZE                                 0x1
#define _ODCON2_CCP3OD_LENGTH                               0x1
#define _ODCON2_CCP3OD_MASK                                 0x1
#define _ODCON2_CCP4OD_POSN                                 0x1
#define _ODCON2_CCP4OD_POSITION                             0x1
#define _ODCON2_CCP4OD_SIZE                                 0x1
#define _ODCON2_CCP4OD_LENGTH                               0x1
#define _ODCON2_CCP4OD_MASK                                 0x2
#define _ODCON2_CCP5OD_POSN                                 0x2
#define _ODCON2_CCP5OD_POSITION                             0x2
#define _ODCON2_CCP5OD_SIZE                                 0x1
#define _ODCON2_CCP5OD_LENGTH                               0x1
#define _ODCON2_CCP5OD_MASK                                 0x4
#define _ODCON2_CCP6OD_POSN                                 0x3
#define _ODCON2_CCP6OD_POSITION                             0x3
#define _ODCON2_CCP6OD_SIZE                                 0x1
#define _ODCON2_CCP6OD_LENGTH                               0x1
#define _ODCON2_CCP6OD_MASK                                 0x8
#define _ODCON2_CCP7OD_POSN                                 0x4
#define _ODCON2_CCP7OD_POSITION                             0x4
#define _ODCON2_CCP7OD_SIZE                                 0x1
#define _ODCON2_CCP7OD_LENGTH                               0x1
#define _ODCON2_CCP7OD_MASK                                 0x10
#define _ODCON2_CCP8OD_POSN                                 0x5
#define _ODCON2_CCP8OD_POSITION                             0x5
#define _ODCON2_CCP8OD_SIZE                                 0x1
#define _ODCON2_CCP8OD_LENGTH                               0x1
#define _ODCON2_CCP8OD_MASK                                 0x20

// Register: ODCON1
#define ODCON1 ODCON1
extern volatile unsigned char           ODCON1              __at(0xF29);
#ifndef _LIB_BUILD
asm("ODCON1 equ 0F29h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SPI2OD                 :1;
        unsigned                        :4;
        unsigned CCP1OD                 :1;
        unsigned CCP2OD                 :1;
        unsigned SPI1OD                 :1;
    };
} ODCON1bits_t;
extern volatile ODCON1bits_t ODCON1bits __at(0xF29);
// bitfield macros
#define _ODCON1_SPI2OD_POSN                                 0x0
#define _ODCON1_SPI2OD_POSITION                             0x0
#define _ODCON1_SPI2OD_SIZE                                 0x1
#define _ODCON1_SPI2OD_LENGTH                               0x1
#define _ODCON1_SPI2OD_MASK                                 0x1
#define _ODCON1_CCP1OD_POSN                                 0x5
#define _ODCON1_CCP1OD_POSITION                             0x5
#define _ODCON1_CCP1OD_SIZE                                 0x1
#define _ODCON1_CCP1OD_LENGTH                               0x1
#define _ODCON1_CCP1OD_MASK                                 0x20
#define _ODCON1_CCP2OD_POSN                                 0x6
#define _ODCON1_CCP2OD_POSITION                             0x6
#define _ODCON1_CCP2OD_SIZE                                 0x1
#define _ODCON1_CCP2OD_LENGTH                               0x1
#define _ODCON1_CCP2OD_MASK                                 0x40
#define _ODCON1_SPI1OD_POSN                                 0x7
#define _ODCON1_SPI1OD_POSITION                             0x7
#define _ODCON1_SPI1OD_SIZE                                 0x1
#define _ODCON1_SPI1OD_LENGTH                               0x1
#define _ODCON1_SPI1OD_MASK                                 0x80

// Register: REFOCON
#define REFOCON REFOCON
extern volatile unsigned char           REFOCON             __at(0xF2A);
#ifndef _LIB_BUILD
asm("REFOCON equ 0F2Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RODIV                  :4;
        unsigned ROSEL                  :1;
        unsigned ROSSLP                 :1;
        unsigned                        :1;
        unsigned ROON                   :1;
    };
    struct {
        unsigned RODIV0                 :1;
        unsigned RODIV1                 :1;
        unsigned RODIV2                 :1;
        unsigned RODIV3                 :1;
    };
} REFOCONbits_t;
extern volatile REFOCONbits_t REFOCONbits __at(0xF2A);
// bitfield macros
#define _REFOCON_RODIV_POSN                                 0x0
#define _REFOCON_RODIV_POSITION                             0x0
#define _REFOCON_RODIV_SIZE                                 0x4
#define _REFOCON_RODIV_LENGTH                               0x4
#define _REFOCON_RODIV_MASK                                 0xF
#define _REFOCON_ROSEL_POSN                                 0x4
#define _REFOCON_ROSEL_POSITION                             0x4
#define _REFOCON_ROSEL_SIZE                                 0x1
#define _REFOCON_ROSEL_LENGTH                               0x1
#define _REFOCON_ROSEL_MASK                                 0x10
#define _REFOCON_ROSSLP_POSN                                0x5
#define _REFOCON_ROSSLP_POSITION                            0x5
#define _REFOCON_ROSSLP_SIZE                                0x1
#define _REFOCON_ROSSLP_LENGTH                              0x1
#define _REFOCON_ROSSLP_MASK                                0x20
#define _REFOCON_ROON_POSN                                  0x7
#define _REFOCON_ROON_POSITION                              0x7
#define _REFOCON_ROON_SIZE                                  0x1
#define _REFOCON_ROON_LENGTH                                0x1
#define _REFOCON_ROON_MASK                                  0x80
#define _REFOCON_RODIV0_POSN                                0x0
#define _REFOCON_RODIV0_POSITION                            0x0
#define _REFOCON_RODIV0_SIZE                                0x1
#define _REFOCON_RODIV0_LENGTH                              0x1
#define _REFOCON_RODIV0_MASK                                0x1
#define _REFOCON_RODIV1_POSN                                0x1
#define _REFOCON_RODIV1_POSITION                            0x1
#define _REFOCON_RODIV1_SIZE                                0x1
#define _REFOCON_RODIV1_LENGTH                              0x1
#define _REFOCON_RODIV1_MASK                                0x2
#define _REFOCON_RODIV2_POSN                                0x2
#define _REFOCON_RODIV2_POSITION                            0x2
#define _REFOCON_RODIV2_SIZE                                0x1
#define _REFOCON_RODIV2_LENGTH                              0x1
#define _REFOCON_RODIV2_MASK                                0x4
#define _REFOCON_RODIV3_POSN                                0x3
#define _REFOCON_RODIV3_POSITION                            0x3
#define _REFOCON_RODIV3_SIZE                                0x1
#define _REFOCON_RODIV3_LENGTH                              0x1
#define _REFOCON_RODIV3_MASK                                0x8

// Register: CCPTMRS2
#define CCPTMRS2 CCPTMRS2
extern volatile unsigned char           CCPTMRS2            __at(0xF2B);
#ifndef _LIB_BUILD
asm("CCPTMRS2 equ 0F2Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C8TSEL                 :2;
    };
    struct {
        unsigned C8TSEL0                :1;
        unsigned C8TSEL1                :1;
    };
} CCPTMRS2bits_t;
extern volatile CCPTMRS2bits_t CCPTMRS2bits __at(0xF2B);
// bitfield macros
#define _CCPTMRS2_C8TSEL_POSN                               0x0
#define _CCPTMRS2_C8TSEL_POSITION                           0x0
#define _CCPTMRS2_C8TSEL_SIZE                               0x2
#define _CCPTMRS2_C8TSEL_LENGTH                             0x2
#define _CCPTMRS2_C8TSEL_MASK                               0x3
#define _CCPTMRS2_C8TSEL0_POSN                              0x0
#define _CCPTMRS2_C8TSEL0_POSITION                          0x0
#define _CCPTMRS2_C8TSEL0_SIZE                              0x1
#define _CCPTMRS2_C8TSEL0_LENGTH                            0x1
#define _CCPTMRS2_C8TSEL0_MASK                              0x1
#define _CCPTMRS2_C8TSEL1_POSN                              0x1
#define _CCPTMRS2_C8TSEL1_POSITION                          0x1
#define _CCPTMRS2_C8TSEL1_SIZE                              0x1
#define _CCPTMRS2_C8TSEL1_LENGTH                            0x1
#define _CCPTMRS2_C8TSEL1_MASK                              0x2

// Register: CCPTMRS1
#define CCPTMRS1 CCPTMRS1
extern volatile unsigned char           CCPTMRS1            __at(0xF2C);
#ifndef _LIB_BUILD
asm("CCPTMRS1 equ 0F2Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C4TSEL                 :2;
        unsigned C5TSEL0                :1;
        unsigned                        :1;
        unsigned C6TSEL0                :1;
        unsigned                        :1;
        unsigned C7TSEL                 :2;
    };
    struct {
        unsigned C4TSEL0                :1;
        unsigned C4TSEL1                :1;
        unsigned                        :4;
        unsigned C7TSEL0                :1;
        unsigned C7TSEL1                :1;
    };
} CCPTMRS1bits_t;
extern volatile CCPTMRS1bits_t CCPTMRS1bits __at(0xF2C);
// bitfield macros
#define _CCPTMRS1_C4TSEL_POSN                               0x0
#define _CCPTMRS1_C4TSEL_POSITION                           0x0
#define _CCPTMRS1_C4TSEL_SIZE                               0x2
#define _CCPTMRS1_C4TSEL_LENGTH                             0x2
#define _CCPTMRS1_C4TSEL_MASK                               0x3
#define _CCPTMRS1_C5TSEL0_POSN                              0x2
#define _CCPTMRS1_C5TSEL0_POSITION                          0x2
#define _CCPTMRS1_C5TSEL0_SIZE                              0x1
#define _CCPTMRS1_C5TSEL0_LENGTH                            0x1
#define _CCPTMRS1_C5TSEL0_MASK                              0x4
#define _CCPTMRS1_C6TSEL0_POSN                              0x4
#define _CCPTMRS1_C6TSEL0_POSITION                          0x4
#define _CCPTMRS1_C6TSEL0_SIZE                              0x1
#define _CCPTMRS1_C6TSEL0_LENGTH                            0x1
#define _CCPTMRS1_C6TSEL0_MASK                              0x10
#define _CCPTMRS1_C7TSEL_POSN                               0x6
#define _CCPTMRS1_C7TSEL_POSITION                           0x6
#define _CCPTMRS1_C7TSEL_SIZE                               0x2
#define _CCPTMRS1_C7TSEL_LENGTH                             0x2
#define _CCPTMRS1_C7TSEL_MASK                               0xC0
#define _CCPTMRS1_C4TSEL0_POSN                              0x0
#define _CCPTMRS1_C4TSEL0_POSITION                          0x0
#define _CCPTMRS1_C4TSEL0_SIZE                              0x1
#define _CCPTMRS1_C4TSEL0_LENGTH                            0x1
#define _CCPTMRS1_C4TSEL0_MASK                              0x1
#define _CCPTMRS1_C4TSEL1_POSN                              0x1
#define _CCPTMRS1_C4TSEL1_POSITION                          0x1
#define _CCPTMRS1_C4TSEL1_SIZE                              0x1
#define _CCPTMRS1_C4TSEL1_LENGTH                            0x1
#define _CCPTMRS1_C4TSEL1_MASK                              0x2
#define _CCPTMRS1_C7TSEL0_POSN                              0x6
#define _CCPTMRS1_C7TSEL0_POSITION                          0x6
#define _CCPTMRS1_C7TSEL0_SIZE                              0x1
#define _CCPTMRS1_C7TSEL0_LENGTH                            0x1
#define _CCPTMRS1_C7TSEL0_MASK                              0x40
#define _CCPTMRS1_C7TSEL1_POSN                              0x7
#define _CCPTMRS1_C7TSEL1_POSITION                          0x7
#define _CCPTMRS1_C7TSEL1_SIZE                              0x1
#define _CCPTMRS1_C7TSEL1_LENGTH                            0x1
#define _CCPTMRS1_C7TSEL1_MASK                              0x80

// Register: CCPTMRS0
#define CCPTMRS0 CCPTMRS0
extern volatile unsigned char           CCPTMRS0            __at(0xF2D);
#ifndef _LIB_BUILD
asm("CCPTMRS0 equ 0F2Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C1TSEL                 :3;
        unsigned C2TSEL                 :3;
        unsigned C3TSEL                 :2;
    };
    struct {
        unsigned C1TSEL0                :1;
        unsigned C1TSEL1                :1;
        unsigned C1TSEL2                :1;
        unsigned C2TSEL0                :1;
        unsigned C2TSEL1                :1;
        unsigned C2TSEL2                :1;
        unsigned C3TSEL0                :1;
        unsigned C3TSEL1                :1;
    };
} CCPTMRS0bits_t;
extern volatile CCPTMRS0bits_t CCPTMRS0bits __at(0xF2D);
// bitfield macros
#define _CCPTMRS0_C1TSEL_POSN                               0x0
#define _CCPTMRS0_C1TSEL_POSITION                           0x0
#define _CCPTMRS0_C1TSEL_SIZE                               0x3
#define _CCPTMRS0_C1TSEL_LENGTH                             0x3
#define _CCPTMRS0_C1TSEL_MASK                               0x7
#define _CCPTMRS0_C2TSEL_POSN                               0x3
#define _CCPTMRS0_C2TSEL_POSITION                           0x3
#define _CCPTMRS0_C2TSEL_SIZE                               0x3
#define _CCPTMRS0_C2TSEL_LENGTH                             0x3
#define _CCPTMRS0_C2TSEL_MASK                               0x38
#define _CCPTMRS0_C3TSEL_POSN                               0x6
#define _CCPTMRS0_C3TSEL_POSITION                           0x6
#define _CCPTMRS0_C3TSEL_SIZE                               0x2
#define _CCPTMRS0_C3TSEL_LENGTH                             0x2
#define _CCPTMRS0_C3TSEL_MASK                               0xC0
#define _CCPTMRS0_C1TSEL0_POSN                              0x0
#define _CCPTMRS0_C1TSEL0_POSITION                          0x0
#define _CCPTMRS0_C1TSEL0_SIZE                              0x1
#define _CCPTMRS0_C1TSEL0_LENGTH                            0x1
#define _CCPTMRS0_C1TSEL0_MASK                              0x1
#define _CCPTMRS0_C1TSEL1_POSN                              0x1
#define _CCPTMRS0_C1TSEL1_POSITION                          0x1
#define _CCPTMRS0_C1TSEL1_SIZE                              0x1
#define _CCPTMRS0_C1TSEL1_LENGTH                            0x1
#define _CCPTMRS0_C1TSEL1_MASK                              0x2
#define _CCPTMRS0_C1TSEL2_POSN                              0x2
#define _CCPTMRS0_C1TSEL2_POSITION                          0x2
#define _CCPTMRS0_C1TSEL2_SIZE                              0x1
#define _CCPTMRS0_C1TSEL2_LENGTH                            0x1
#define _CCPTMRS0_C1TSEL2_MASK                              0x4
#define _CCPTMRS0_C2TSEL0_POSN                              0x3
#define _CCPTMRS0_C2TSEL0_POSITION                          0x3
#define _CCPTMRS0_C2TSEL0_SIZE                              0x1
#define _CCPTMRS0_C2TSEL0_LENGTH                            0x1
#define _CCPTMRS0_C2TSEL0_MASK                              0x8
#define _CCPTMRS0_C2TSEL1_POSN                              0x4
#define _CCPTMRS0_C2TSEL1_POSITION                          0x4
#define _CCPTMRS0_C2TSEL1_SIZE                              0x1
#define _CCPTMRS0_C2TSEL1_LENGTH                            0x1
#define _CCPTMRS0_C2TSEL1_MASK                              0x10
#define _CCPTMRS0_C2TSEL2_POSN                              0x5
#define _CCPTMRS0_C2TSEL2_POSITION                          0x5
#define _CCPTMRS0_C2TSEL2_SIZE                              0x1
#define _CCPTMRS0_C2TSEL2_LENGTH                            0x1
#define _CCPTMRS0_C2TSEL2_MASK                              0x20
#define _CCPTMRS0_C3TSEL0_POSN                              0x6
#define _CCPTMRS0_C3TSEL0_POSITION                          0x6
#define _CCPTMRS0_C3TSEL0_SIZE                              0x1
#define _CCPTMRS0_C3TSEL0_LENGTH                            0x1
#define _CCPTMRS0_C3TSEL0_MASK                              0x40
#define _CCPTMRS0_C3TSEL1_POSN                              0x7
#define _CCPTMRS0_C3TSEL1_POSITION                          0x7
#define _CCPTMRS0_C3TSEL1_SIZE                              0x1
#define _CCPTMRS0_C3TSEL1_LENGTH                            0x1
#define _CCPTMRS0_C3TSEL1_MASK                              0x80

// Register: CM3CON
#define CM3CON CM3CON
extern volatile unsigned char           CM3CON              __at(0xF2E);
#ifndef _LIB_BUILD
asm("CM3CON equ 0F2Eh");
#endif
// aliases
extern volatile unsigned char           CM3CON1             __at(0xF2E);
#ifndef _LIB_BUILD
asm("CM3CON1 equ 0F2Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCH                    :2;
        unsigned CREF                   :1;
        unsigned EVPOL                  :2;
        unsigned CPOL                   :1;
        unsigned COE                    :1;
        unsigned CON                    :1;
    };
    struct {
        unsigned CCH0                   :1;
        unsigned CCH1                   :1;
        unsigned                        :1;
        unsigned EVPOL0                 :1;
        unsigned EVPOL1                 :1;
    };
    struct {
        unsigned CCH03                  :1;
        unsigned CCH13                  :1;
        unsigned CREF3                  :1;
        unsigned EVPOL03                :1;
        unsigned EVPOL13                :1;
        unsigned CPOL3                  :1;
        unsigned COE3                   :1;
        unsigned CON3                   :1;
    };
} CM3CONbits_t;
extern volatile CM3CONbits_t CM3CONbits __at(0xF2E);
// bitfield macros
#define _CM3CON_CCH_POSN                                    0x0
#define _CM3CON_CCH_POSITION                                0x0
#define _CM3CON_CCH_SIZE                                    0x2
#define _CM3CON_CCH_LENGTH                                  0x2
#define _CM3CON_CCH_MASK                                    0x3
#define _CM3CON_CREF_POSN                                   0x2
#define _CM3CON_CREF_POSITION                               0x2
#define _CM3CON_CREF_SIZE                                   0x1
#define _CM3CON_CREF_LENGTH                                 0x1
#define _CM3CON_CREF_MASK                                   0x4
#define _CM3CON_EVPOL_POSN                                  0x3
#define _CM3CON_EVPOL_POSITION                              0x3
#define _CM3CON_EVPOL_SIZE                                  0x2
#define _CM3CON_EVPOL_LENGTH                                0x2
#define _CM3CON_EVPOL_MASK                                  0x18
#define _CM3CON_CPOL_POSN                                   0x5
#define _CM3CON_CPOL_POSITION                               0x5
#define _CM3CON_CPOL_SIZE                                   0x1
#define _CM3CON_CPOL_LENGTH                                 0x1
#define _CM3CON_CPOL_MASK                                   0x20
#define _CM3CON_COE_POSN                                    0x6
#define _CM3CON_COE_POSITION                                0x6
#define _CM3CON_COE_SIZE                                    0x1
#define _CM3CON_COE_LENGTH                                  0x1
#define _CM3CON_COE_MASK                                    0x40
#define _CM3CON_CON_POSN                                    0x7
#define _CM3CON_CON_POSITION                                0x7
#define _CM3CON_CON_SIZE                                    0x1
#define _CM3CON_CON_LENGTH                                  0x1
#define _CM3CON_CON_MASK                                    0x80
#define _CM3CON_CCH0_POSN                                   0x0
#define _CM3CON_CCH0_POSITION                               0x0
#define _CM3CON_CCH0_SIZE                                   0x1
#define _CM3CON_CCH0_LENGTH                                 0x1
#define _CM3CON_CCH0_MASK                                   0x1
#define _CM3CON_CCH1_POSN                                   0x1
#define _CM3CON_CCH1_POSITION                               0x1
#define _CM3CON_CCH1_SIZE                                   0x1
#define _CM3CON_CCH1_LENGTH                                 0x1
#define _CM3CON_CCH1_MASK                                   0x2
#define _CM3CON_EVPOL0_POSN                                 0x3
#define _CM3CON_EVPOL0_POSITION                             0x3
#define _CM3CON_EVPOL0_SIZE                                 0x1
#define _CM3CON_EVPOL0_LENGTH                               0x1
#define _CM3CON_EVPOL0_MASK                                 0x8
#define _CM3CON_EVPOL1_POSN                                 0x4
#define _CM3CON_EVPOL1_POSITION                             0x4
#define _CM3CON_EVPOL1_SIZE                                 0x1
#define _CM3CON_EVPOL1_LENGTH                               0x1
#define _CM3CON_EVPOL1_MASK                                 0x10
#define _CM3CON_CCH03_POSN                                  0x0
#define _CM3CON_CCH03_POSITION                              0x0
#define _CM3CON_CCH03_SIZE                                  0x1
#define _CM3CON_CCH03_LENGTH                                0x1
#define _CM3CON_CCH03_MASK                                  0x1
#define _CM3CON_CCH13_POSN                                  0x1
#define _CM3CON_CCH13_POSITION                              0x1
#define _CM3CON_CCH13_SIZE                                  0x1
#define _CM3CON_CCH13_LENGTH                                0x1
#define _CM3CON_CCH13_MASK                                  0x2
#define _CM3CON_CREF3_POSN                                  0x2
#define _CM3CON_CREF3_POSITION                              0x2
#define _CM3CON_CREF3_SIZE                                  0x1
#define _CM3CON_CREF3_LENGTH                                0x1
#define _CM3CON_CREF3_MASK                                  0x4
#define _CM3CON_EVPOL03_POSN                                0x3
#define _CM3CON_EVPOL03_POSITION                            0x3
#define _CM3CON_EVPOL03_SIZE                                0x1
#define _CM3CON_EVPOL03_LENGTH                              0x1
#define _CM3CON_EVPOL03_MASK                                0x8
#define _CM3CON_EVPOL13_POSN                                0x4
#define _CM3CON_EVPOL13_POSITION                            0x4
#define _CM3CON_EVPOL13_SIZE                                0x1
#define _CM3CON_EVPOL13_LENGTH                              0x1
#define _CM3CON_EVPOL13_MASK                                0x10
#define _CM3CON_CPOL3_POSN                                  0x5
#define _CM3CON_CPOL3_POSITION                              0x5
#define _CM3CON_CPOL3_SIZE                                  0x1
#define _CM3CON_CPOL3_LENGTH                                0x1
#define _CM3CON_CPOL3_MASK                                  0x20
#define _CM3CON_COE3_POSN                                   0x6
#define _CM3CON_COE3_POSITION                               0x6
#define _CM3CON_COE3_SIZE                                   0x1
#define _CM3CON_COE3_LENGTH                                 0x1
#define _CM3CON_COE3_MASK                                   0x40
#define _CM3CON_CON3_POSN                                   0x7
#define _CM3CON_CON3_POSITION                               0x7
#define _CM3CON_CON3_SIZE                                   0x1
#define _CM3CON_CON3_LENGTH                                 0x1
#define _CM3CON_CON3_MASK                                   0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned CCH                    :2;
        unsigned CREF                   :1;
        unsigned EVPOL                  :2;
        unsigned CPOL                   :1;
        unsigned COE                    :1;
        unsigned CON                    :1;
    };
    struct {
        unsigned CCH0                   :1;
        unsigned CCH1                   :1;
        unsigned                        :1;
        unsigned EVPOL0                 :1;
        unsigned EVPOL1                 :1;
    };
    struct {
        unsigned CCH03                  :1;
        unsigned CCH13                  :1;
        unsigned CREF3                  :1;
        unsigned EVPOL03                :1;
        unsigned EVPOL13                :1;
        unsigned CPOL3                  :1;
        unsigned COE3                   :1;
        unsigned CON3                   :1;
    };
} CM3CON1bits_t;
extern volatile CM3CON1bits_t CM3CON1bits __at(0xF2E);
// bitfield macros
#define _CM3CON1_CCH_POSN                                   0x0
#define _CM3CON1_CCH_POSITION                               0x0
#define _CM3CON1_CCH_SIZE                                   0x2
#define _CM3CON1_CCH_LENGTH                                 0x2
#define _CM3CON1_CCH_MASK                                   0x3
#define _CM3CON1_CREF_POSN                                  0x2
#define _CM3CON1_CREF_POSITION                              0x2
#define _CM3CON1_CREF_SIZE                                  0x1
#define _CM3CON1_CREF_LENGTH                                0x1
#define _CM3CON1_CREF_MASK                                  0x4
#define _CM3CON1_EVPOL_POSN                                 0x3
#define _CM3CON1_EVPOL_POSITION                             0x3
#define _CM3CON1_EVPOL_SIZE                                 0x2
#define _CM3CON1_EVPOL_LENGTH                               0x2
#define _CM3CON1_EVPOL_MASK                                 0x18
#define _CM3CON1_CPOL_POSN                                  0x5
#define _CM3CON1_CPOL_POSITION                              0x5
#define _CM3CON1_CPOL_SIZE                                  0x1
#define _CM3CON1_CPOL_LENGTH                                0x1
#define _CM3CON1_CPOL_MASK                                  0x20
#define _CM3CON1_COE_POSN                                   0x6
#define _CM3CON1_COE_POSITION                               0x6
#define _CM3CON1_COE_SIZE                                   0x1
#define _CM3CON1_COE_LENGTH                                 0x1
#define _CM3CON1_COE_MASK                                   0x40
#define _CM3CON1_CON_POSN                                   0x7
#define _CM3CON1_CON_POSITION                               0x7
#define _CM3CON1_CON_SIZE                                   0x1
#define _CM3CON1_CON_LENGTH                                 0x1
#define _CM3CON1_CON_MASK                                   0x80
#define _CM3CON1_CCH0_POSN                                  0x0
#define _CM3CON1_CCH0_POSITION                              0x0
#define _CM3CON1_CCH0_SIZE                                  0x1
#define _CM3CON1_CCH0_LENGTH                                0x1
#define _CM3CON1_CCH0_MASK                                  0x1
#define _CM3CON1_CCH1_POSN                                  0x1
#define _CM3CON1_CCH1_POSITION                              0x1
#define _CM3CON1_CCH1_SIZE                                  0x1
#define _CM3CON1_CCH1_LENGTH                                0x1
#define _CM3CON1_CCH1_MASK                                  0x2
#define _CM3CON1_EVPOL0_POSN                                0x3
#define _CM3CON1_EVPOL0_POSITION                            0x3
#define _CM3CON1_EVPOL0_SIZE                                0x1
#define _CM3CON1_EVPOL0_LENGTH                              0x1
#define _CM3CON1_EVPOL0_MASK                                0x8
#define _CM3CON1_EVPOL1_POSN                                0x4
#define _CM3CON1_EVPOL1_POSITION                            0x4
#define _CM3CON1_EVPOL1_SIZE                                0x1
#define _CM3CON1_EVPOL1_LENGTH                              0x1
#define _CM3CON1_EVPOL1_MASK                                0x10
#define _CM3CON1_CCH03_POSN                                 0x0
#define _CM3CON1_CCH03_POSITION                             0x0
#define _CM3CON1_CCH03_SIZE                                 0x1
#define _CM3CON1_CCH03_LENGTH                               0x1
#define _CM3CON1_CCH03_MASK                                 0x1
#define _CM3CON1_CCH13_POSN                                 0x1
#define _CM3CON1_CCH13_POSITION                             0x1
#define _CM3CON1_CCH13_SIZE                                 0x1
#define _CM3CON1_CCH13_LENGTH                               0x1
#define _CM3CON1_CCH13_MASK                                 0x2
#define _CM3CON1_CREF3_POSN                                 0x2
#define _CM3CON1_CREF3_POSITION                             0x2
#define _CM3CON1_CREF3_SIZE                                 0x1
#define _CM3CON1_CREF3_LENGTH                               0x1
#define _CM3CON1_CREF3_MASK                                 0x4
#define _CM3CON1_EVPOL03_POSN                               0x3
#define _CM3CON1_EVPOL03_POSITION                           0x3
#define _CM3CON1_EVPOL03_SIZE                               0x1
#define _CM3CON1_EVPOL03_LENGTH                             0x1
#define _CM3CON1_EVPOL03_MASK                               0x8
#define _CM3CON1_EVPOL13_POSN                               0x4
#define _CM3CON1_EVPOL13_POSITION                           0x4
#define _CM3CON1_EVPOL13_SIZE                               0x1
#define _CM3CON1_EVPOL13_LENGTH                             0x1
#define _CM3CON1_EVPOL13_MASK                               0x10
#define _CM3CON1_CPOL3_POSN                                 0x5
#define _CM3CON1_CPOL3_POSITION                             0x5
#define _CM3CON1_CPOL3_SIZE                                 0x1
#define _CM3CON1_CPOL3_LENGTH                               0x1
#define _CM3CON1_CPOL3_MASK                                 0x20
#define _CM3CON1_COE3_POSN                                  0x6
#define _CM3CON1_COE3_POSITION                              0x6
#define _CM3CON1_COE3_SIZE                                  0x1
#define _CM3CON1_COE3_LENGTH                                0x1
#define _CM3CON1_COE3_MASK                                  0x40
#define _CM3CON1_CON3_POSN                                  0x7
#define _CM3CON1_CON3_POSITION                              0x7
#define _CM3CON1_CON3_SIZE                                  0x1
#define _CM3CON1_CON3_LENGTH                                0x1
#define _CM3CON1_CON3_MASK                                  0x80

// Register: CM2CON
#define CM2CON CM2CON
extern volatile unsigned char           CM2CON              __at(0xF2F);
#ifndef _LIB_BUILD
asm("CM2CON equ 0F2Fh");
#endif
// aliases
extern volatile unsigned char           CM2CON1             __at(0xF2F);
#ifndef _LIB_BUILD
asm("CM2CON1 equ 0F2Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCH                    :2;
        unsigned CREF                   :1;
        unsigned EVPOL                  :2;
        unsigned CPOL                   :1;
        unsigned COE                    :1;
        unsigned CON                    :1;
    };
    struct {
        unsigned CCH0                   :1;
        unsigned CCH1                   :1;
        unsigned                        :1;
        unsigned EVPOL0                 :1;
        unsigned EVPOL1                 :1;
    };
    struct {
        unsigned CCH02                  :1;
        unsigned CCH12                  :1;
        unsigned CREF2                  :1;
        unsigned EVPOL02                :1;
        unsigned EVPOL12                :1;
        unsigned CPOL2                  :1;
        unsigned COE2                   :1;
        unsigned CON2                   :1;
    };
} CM2CONbits_t;
extern volatile CM2CONbits_t CM2CONbits __at(0xF2F);
// bitfield macros
#define _CM2CON_CCH_POSN                                    0x0
#define _CM2CON_CCH_POSITION                                0x0
#define _CM2CON_CCH_SIZE                                    0x2
#define _CM2CON_CCH_LENGTH                                  0x2
#define _CM2CON_CCH_MASK                                    0x3
#define _CM2CON_CREF_POSN                                   0x2
#define _CM2CON_CREF_POSITION                               0x2
#define _CM2CON_CREF_SIZE                                   0x1
#define _CM2CON_CREF_LENGTH                                 0x1
#define _CM2CON_CREF_MASK                                   0x4
#define _CM2CON_EVPOL_POSN                                  0x3
#define _CM2CON_EVPOL_POSITION                              0x3
#define _CM2CON_EVPOL_SIZE                                  0x2
#define _CM2CON_EVPOL_LENGTH                                0x2
#define _CM2CON_EVPOL_MASK                                  0x18
#define _CM2CON_CPOL_POSN                                   0x5
#define _CM2CON_CPOL_POSITION                               0x5
#define _CM2CON_CPOL_SIZE                                   0x1
#define _CM2CON_CPOL_LENGTH                                 0x1
#define _CM2CON_CPOL_MASK                                   0x20
#define _CM2CON_COE_POSN                                    0x6
#define _CM2CON_COE_POSITION                                0x6
#define _CM2CON_COE_SIZE                                    0x1
#define _CM2CON_COE_LENGTH                                  0x1
#define _CM2CON_COE_MASK                                    0x40
#define _CM2CON_CON_POSN                                    0x7
#define _CM2CON_CON_POSITION                                0x7
#define _CM2CON_CON_SIZE                                    0x1
#define _CM2CON_CON_LENGTH                                  0x1
#define _CM2CON_CON_MASK                                    0x80
#define _CM2CON_CCH0_POSN                                   0x0
#define _CM2CON_CCH0_POSITION                               0x0
#define _CM2CON_CCH0_SIZE                                   0x1
#define _CM2CON_CCH0_LENGTH                                 0x1
#define _CM2CON_CCH0_MASK                                   0x1
#define _CM2CON_CCH1_POSN                                   0x1
#define _CM2CON_CCH1_POSITION                               0x1
#define _CM2CON_CCH1_SIZE                                   0x1
#define _CM2CON_CCH1_LENGTH                                 0x1
#define _CM2CON_CCH1_MASK                                   0x2
#define _CM2CON_EVPOL0_POSN                                 0x3
#define _CM2CON_EVPOL0_POSITION                             0x3
#define _CM2CON_EVPOL0_SIZE                                 0x1
#define _CM2CON_EVPOL0_LENGTH                               0x1
#define _CM2CON_EVPOL0_MASK                                 0x8
#define _CM2CON_EVPOL1_POSN                                 0x4
#define _CM2CON_EVPOL1_POSITION                             0x4
#define _CM2CON_EVPOL1_SIZE                                 0x1
#define _CM2CON_EVPOL1_LENGTH                               0x1
#define _CM2CON_EVPOL1_MASK                                 0x10
#define _CM2CON_CCH02_POSN                                  0x0
#define _CM2CON_CCH02_POSITION                              0x0
#define _CM2CON_CCH02_SIZE                                  0x1
#define _CM2CON_CCH02_LENGTH                                0x1
#define _CM2CON_CCH02_MASK                                  0x1
#define _CM2CON_CCH12_POSN                                  0x1
#define _CM2CON_CCH12_POSITION                              0x1
#define _CM2CON_CCH12_SIZE                                  0x1
#define _CM2CON_CCH12_LENGTH                                0x1
#define _CM2CON_CCH12_MASK                                  0x2
#define _CM2CON_CREF2_POSN                                  0x2
#define _CM2CON_CREF2_POSITION                              0x2
#define _CM2CON_CREF2_SIZE                                  0x1
#define _CM2CON_CREF2_LENGTH                                0x1
#define _CM2CON_CREF2_MASK                                  0x4
#define _CM2CON_EVPOL02_POSN                                0x3
#define _CM2CON_EVPOL02_POSITION                            0x3
#define _CM2CON_EVPOL02_SIZE                                0x1
#define _CM2CON_EVPOL02_LENGTH                              0x1
#define _CM2CON_EVPOL02_MASK                                0x8
#define _CM2CON_EVPOL12_POSN                                0x4
#define _CM2CON_EVPOL12_POSITION                            0x4
#define _CM2CON_EVPOL12_SIZE                                0x1
#define _CM2CON_EVPOL12_LENGTH                              0x1
#define _CM2CON_EVPOL12_MASK                                0x10
#define _CM2CON_CPOL2_POSN                                  0x5
#define _CM2CON_CPOL2_POSITION                              0x5
#define _CM2CON_CPOL2_SIZE                                  0x1
#define _CM2CON_CPOL2_LENGTH                                0x1
#define _CM2CON_CPOL2_MASK                                  0x20
#define _CM2CON_COE2_POSN                                   0x6
#define _CM2CON_COE2_POSITION                               0x6
#define _CM2CON_COE2_SIZE                                   0x1
#define _CM2CON_COE2_LENGTH                                 0x1
#define _CM2CON_COE2_MASK                                   0x40
#define _CM2CON_CON2_POSN                                   0x7
#define _CM2CON_CON2_POSITION                               0x7
#define _CM2CON_CON2_SIZE                                   0x1
#define _CM2CON_CON2_LENGTH                                 0x1
#define _CM2CON_CON2_MASK                                   0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned CCH                    :2;
        unsigned CREF                   :1;
        unsigned EVPOL                  :2;
        unsigned CPOL                   :1;
        unsigned COE                    :1;
        unsigned CON                    :1;
    };
    struct {
        unsigned CCH0                   :1;
        unsigned CCH1                   :1;
        unsigned                        :1;
        unsigned EVPOL0                 :1;
        unsigned EVPOL1                 :1;
    };
    struct {
        unsigned CCH02                  :1;
        unsigned CCH12                  :1;
        unsigned CREF2                  :1;
        unsigned EVPOL02                :1;
        unsigned EVPOL12                :1;
        unsigned CPOL2                  :1;
        unsigned COE2                   :1;
        unsigned CON2                   :1;
    };
} CM2CON1bits_t;
extern volatile CM2CON1bits_t CM2CON1bits __at(0xF2F);
// bitfield macros
#define _CM2CON1_CCH_POSN                                   0x0
#define _CM2CON1_CCH_POSITION                               0x0
#define _CM2CON1_CCH_SIZE                                   0x2
#define _CM2CON1_CCH_LENGTH                                 0x2
#define _CM2CON1_CCH_MASK                                   0x3
#define _CM2CON1_CREF_POSN                                  0x2
#define _CM2CON1_CREF_POSITION                              0x2
#define _CM2CON1_CREF_SIZE                                  0x1
#define _CM2CON1_CREF_LENGTH                                0x1
#define _CM2CON1_CREF_MASK                                  0x4
#define _CM2CON1_EVPOL_POSN                                 0x3
#define _CM2CON1_EVPOL_POSITION                             0x3
#define _CM2CON1_EVPOL_SIZE                                 0x2
#define _CM2CON1_EVPOL_LENGTH                               0x2
#define _CM2CON1_EVPOL_MASK                                 0x18
#define _CM2CON1_CPOL_POSN                                  0x5
#define _CM2CON1_CPOL_POSITION                              0x5
#define _CM2CON1_CPOL_SIZE                                  0x1
#define _CM2CON1_CPOL_LENGTH                                0x1
#define _CM2CON1_CPOL_MASK                                  0x20
#define _CM2CON1_COE_POSN                                   0x6
#define _CM2CON1_COE_POSITION                               0x6
#define _CM2CON1_COE_SIZE                                   0x1
#define _CM2CON1_COE_LENGTH                                 0x1
#define _CM2CON1_COE_MASK                                   0x40
#define _CM2CON1_CON_POSN                                   0x7
#define _CM2CON1_CON_POSITION                               0x7
#define _CM2CON1_CON_SIZE                                   0x1
#define _CM2CON1_CON_LENGTH                                 0x1
#define _CM2CON1_CON_MASK                                   0x80
#define _CM2CON1_CCH0_POSN                                  0x0
#define _CM2CON1_CCH0_POSITION                              0x0
#define _CM2CON1_CCH0_SIZE                                  0x1
#define _CM2CON1_CCH0_LENGTH                                0x1
#define _CM2CON1_CCH0_MASK                                  0x1
#define _CM2CON1_CCH1_POSN                                  0x1
#define _CM2CON1_CCH1_POSITION                              0x1
#define _CM2CON1_CCH1_SIZE                                  0x1
#define _CM2CON1_CCH1_LENGTH                                0x1
#define _CM2CON1_CCH1_MASK                                  0x2
#define _CM2CON1_EVPOL0_POSN                                0x3
#define _CM2CON1_EVPOL0_POSITION                            0x3
#define _CM2CON1_EVPOL0_SIZE                                0x1
#define _CM2CON1_EVPOL0_LENGTH                              0x1
#define _CM2CON1_EVPOL0_MASK                                0x8
#define _CM2CON1_EVPOL1_POSN                                0x4
#define _CM2CON1_EVPOL1_POSITION                            0x4
#define _CM2CON1_EVPOL1_SIZE                                0x1
#define _CM2CON1_EVPOL1_LENGTH                              0x1
#define _CM2CON1_EVPOL1_MASK                                0x10
#define _CM2CON1_CCH02_POSN                                 0x0
#define _CM2CON1_CCH02_POSITION                             0x0
#define _CM2CON1_CCH02_SIZE                                 0x1
#define _CM2CON1_CCH02_LENGTH                               0x1
#define _CM2CON1_CCH02_MASK                                 0x1
#define _CM2CON1_CCH12_POSN                                 0x1
#define _CM2CON1_CCH12_POSITION                             0x1
#define _CM2CON1_CCH12_SIZE                                 0x1
#define _CM2CON1_CCH12_LENGTH                               0x1
#define _CM2CON1_CCH12_MASK                                 0x2
#define _CM2CON1_CREF2_POSN                                 0x2
#define _CM2CON1_CREF2_POSITION                             0x2
#define _CM2CON1_CREF2_SIZE                                 0x1
#define _CM2CON1_CREF2_LENGTH                               0x1
#define _CM2CON1_CREF2_MASK                                 0x4
#define _CM2CON1_EVPOL02_POSN                               0x3
#define _CM2CON1_EVPOL02_POSITION                           0x3
#define _CM2CON1_EVPOL02_SIZE                               0x1
#define _CM2CON1_EVPOL02_LENGTH                             0x1
#define _CM2CON1_EVPOL02_MASK                               0x8
#define _CM2CON1_EVPOL12_POSN                               0x4
#define _CM2CON1_EVPOL12_POSITION                           0x4
#define _CM2CON1_EVPOL12_SIZE                               0x1
#define _CM2CON1_EVPOL12_LENGTH                             0x1
#define _CM2CON1_EVPOL12_MASK                               0x10
#define _CM2CON1_CPOL2_POSN                                 0x5
#define _CM2CON1_CPOL2_POSITION                             0x5
#define _CM2CON1_CPOL2_SIZE                                 0x1
#define _CM2CON1_CPOL2_LENGTH                               0x1
#define _CM2CON1_CPOL2_MASK                                 0x20
#define _CM2CON1_COE2_POSN                                  0x6
#define _CM2CON1_COE2_POSITION                              0x6
#define _CM2CON1_COE2_SIZE                                  0x1
#define _CM2CON1_COE2_LENGTH                                0x1
#define _CM2CON1_COE2_MASK                                  0x40
#define _CM2CON1_CON2_POSN                                  0x7
#define _CM2CON1_CON2_POSITION                              0x7
#define _CM2CON1_CON2_SIZE                                  0x1
#define _CM2CON1_CON2_LENGTH                                0x1
#define _CM2CON1_CON2_MASK                                  0x80

// Register: T8CON
#define T8CON T8CON
extern volatile unsigned char           T8CON               __at(0xF36);
#ifndef _LIB_BUILD
asm("T8CON equ 0F36h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T8CKPS                 :2;
        unsigned TMR8ON                 :1;
        unsigned T8OUTPS                :4;
    };
    struct {
        unsigned T8CKPS0                :1;
        unsigned T8CKPS1                :1;
        unsigned                        :1;
        unsigned T8OUTPS0               :1;
        unsigned T8OUTPS1               :1;
        unsigned T8OUTPS2               :1;
        unsigned T8OUTPS3               :1;
    };
} T8CONbits_t;
extern volatile T8CONbits_t T8CONbits __at(0xF36);
// bitfield macros
#define _T8CON_T8CKPS_POSN                                  0x0
#define _T8CON_T8CKPS_POSITION                              0x0
#define _T8CON_T8CKPS_SIZE                                  0x2
#define _T8CON_T8CKPS_LENGTH                                0x2
#define _T8CON_T8CKPS_MASK                                  0x3
#define _T8CON_TMR8ON_POSN                                  0x2
#define _T8CON_TMR8ON_POSITION                              0x2
#define _T8CON_TMR8ON_SIZE                                  0x1
#define _T8CON_TMR8ON_LENGTH                                0x1
#define _T8CON_TMR8ON_MASK                                  0x4
#define _T8CON_T8OUTPS_POSN                                 0x3
#define _T8CON_T8OUTPS_POSITION                             0x3
#define _T8CON_T8OUTPS_SIZE                                 0x4
#define _T8CON_T8OUTPS_LENGTH                               0x4
#define _T8CON_T8OUTPS_MASK                                 0x78
#define _T8CON_T8CKPS0_POSN                                 0x0
#define _T8CON_T8CKPS0_POSITION                             0x0
#define _T8CON_T8CKPS0_SIZE                                 0x1
#define _T8CON_T8CKPS0_LENGTH                               0x1
#define _T8CON_T8CKPS0_MASK                                 0x1
#define _T8CON_T8CKPS1_POSN                                 0x1
#define _T8CON_T8CKPS1_POSITION                             0x1
#define _T8CON_T8CKPS1_SIZE                                 0x1
#define _T8CON_T8CKPS1_LENGTH                               0x1
#define _T8CON_T8CKPS1_MASK                                 0x2
#define _T8CON_T8OUTPS0_POSN                                0x3
#define _T8CON_T8OUTPS0_POSITION                            0x3
#define _T8CON_T8OUTPS0_SIZE                                0x1
#define _T8CON_T8OUTPS0_LENGTH                              0x1
#define _T8CON_T8OUTPS0_MASK                                0x8
#define _T8CON_T8OUTPS1_POSN                                0x4
#define _T8CON_T8OUTPS1_POSITION                            0x4
#define _T8CON_T8OUTPS1_SIZE                                0x1
#define _T8CON_T8OUTPS1_LENGTH                              0x1
#define _T8CON_T8OUTPS1_MASK                                0x10
#define _T8CON_T8OUTPS2_POSN                                0x5
#define _T8CON_T8OUTPS2_POSITION                            0x5
#define _T8CON_T8OUTPS2_SIZE                                0x1
#define _T8CON_T8OUTPS2_LENGTH                              0x1
#define _T8CON_T8OUTPS2_MASK                                0x20
#define _T8CON_T8OUTPS3_POSN                                0x6
#define _T8CON_T8OUTPS3_POSITION                            0x6
#define _T8CON_T8OUTPS3_SIZE                                0x1
#define _T8CON_T8OUTPS3_LENGTH                              0x1
#define _T8CON_T8OUTPS3_MASK                                0x40

// Register: PR8
#define PR8 PR8
extern volatile unsigned char           PR8                 __at(0xF37);
#ifndef _LIB_BUILD
asm("PR8 equ 0F37h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR8                    :8;
    };
} PR8bits_t;
extern volatile PR8bits_t PR8bits __at(0xF37);
// bitfield macros
#define _PR8_PR8_POSN                                       0x0
#define _PR8_PR8_POSITION                                   0x0
#define _PR8_PR8_SIZE                                       0x8
#define _PR8_PR8_LENGTH                                     0x8
#define _PR8_PR8_MASK                                       0xFF

// Register: TMR8
#define TMR8 TMR8
extern volatile unsigned char           TMR8                __at(0xF38);
#ifndef _LIB_BUILD
asm("TMR8 equ 0F38h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR8                   :8;
    };
} TMR8bits_t;
extern volatile TMR8bits_t TMR8bits __at(0xF38);
// bitfield macros
#define _TMR8_TMR8_POSN                                     0x0
#define _TMR8_TMR8_POSITION                                 0x0
#define _TMR8_TMR8_SIZE                                     0x8
#define _TMR8_TMR8_LENGTH                                   0x8
#define _TMR8_TMR8_MASK                                     0xFF

// Register: T6CON
#define T6CON T6CON
extern volatile unsigned char           T6CON               __at(0xF39);
#ifndef _LIB_BUILD
asm("T6CON equ 0F39h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T6CKPS                 :2;
        unsigned TMR6ON                 :1;
        unsigned T6OUTPS                :4;
    };
    struct {
        unsigned T6CKPS0                :1;
        unsigned T6CKPS1                :1;
        unsigned                        :1;
        unsigned T6OUTPS0               :1;
        unsigned T6OUTPS1               :1;
        unsigned T6OUTPS2               :1;
        unsigned T6OUTPS3               :1;
    };
} T6CONbits_t;
extern volatile T6CONbits_t T6CONbits __at(0xF39);
// bitfield macros
#define _T6CON_T6CKPS_POSN                                  0x0
#define _T6CON_T6CKPS_POSITION                              0x0
#define _T6CON_T6CKPS_SIZE                                  0x2
#define _T6CON_T6CKPS_LENGTH                                0x2
#define _T6CON_T6CKPS_MASK                                  0x3
#define _T6CON_TMR6ON_POSN                                  0x2
#define _T6CON_TMR6ON_POSITION                              0x2
#define _T6CON_TMR6ON_SIZE                                  0x1
#define _T6CON_TMR6ON_LENGTH                                0x1
#define _T6CON_TMR6ON_MASK                                  0x4
#define _T6CON_T6OUTPS_POSN                                 0x3
#define _T6CON_T6OUTPS_POSITION                             0x3
#define _T6CON_T6OUTPS_SIZE                                 0x4
#define _T6CON_T6OUTPS_LENGTH                               0x4
#define _T6CON_T6OUTPS_MASK                                 0x78
#define _T6CON_T6CKPS0_POSN                                 0x0
#define _T6CON_T6CKPS0_POSITION                             0x0
#define _T6CON_T6CKPS0_SIZE                                 0x1
#define _T6CON_T6CKPS0_LENGTH                               0x1
#define _T6CON_T6CKPS0_MASK                                 0x1
#define _T6CON_T6CKPS1_POSN                                 0x1
#define _T6CON_T6CKPS1_POSITION                             0x1
#define _T6CON_T6CKPS1_SIZE                                 0x1
#define _T6CON_T6CKPS1_LENGTH                               0x1
#define _T6CON_T6CKPS1_MASK                                 0x2
#define _T6CON_T6OUTPS0_POSN                                0x3
#define _T6CON_T6OUTPS0_POSITION                            0x3
#define _T6CON_T6OUTPS0_SIZE                                0x1
#define _T6CON_T6OUTPS0_LENGTH                              0x1
#define _T6CON_T6OUTPS0_MASK                                0x8
#define _T6CON_T6OUTPS1_POSN                                0x4
#define _T6CON_T6OUTPS1_POSITION                            0x4
#define _T6CON_T6OUTPS1_SIZE                                0x1
#define _T6CON_T6OUTPS1_LENGTH                              0x1
#define _T6CON_T6OUTPS1_MASK                                0x10
#define _T6CON_T6OUTPS2_POSN                                0x5
#define _T6CON_T6OUTPS2_POSITION                            0x5
#define _T6CON_T6OUTPS2_SIZE                                0x1
#define _T6CON_T6OUTPS2_LENGTH                              0x1
#define _T6CON_T6OUTPS2_MASK                                0x20
#define _T6CON_T6OUTPS3_POSN                                0x6
#define _T6CON_T6OUTPS3_POSITION                            0x6
#define _T6CON_T6OUTPS3_SIZE                                0x1
#define _T6CON_T6OUTPS3_LENGTH                              0x1
#define _T6CON_T6OUTPS3_MASK                                0x40

// Register: PR6
#define PR6 PR6
extern volatile unsigned char           PR6                 __at(0xF3A);
#ifndef _LIB_BUILD
asm("PR6 equ 0F3Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR6                    :8;
    };
} PR6bits_t;
extern volatile PR6bits_t PR6bits __at(0xF3A);
// bitfield macros
#define _PR6_PR6_POSN                                       0x0
#define _PR6_PR6_POSITION                                   0x0
#define _PR6_PR6_SIZE                                       0x8
#define _PR6_PR6_LENGTH                                     0x8
#define _PR6_PR6_MASK                                       0xFF

// Register: TMR6
#define TMR6 TMR6
extern volatile unsigned char           TMR6                __at(0xF3B);
#ifndef _LIB_BUILD
asm("TMR6 equ 0F3Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR6                   :8;
    };
} TMR6bits_t;
extern volatile TMR6bits_t TMR6bits __at(0xF3B);
// bitfield macros
#define _TMR6_TMR6_POSN                                     0x0
#define _TMR6_TMR6_POSITION                                 0x0
#define _TMR6_TMR6_SIZE                                     0x8
#define _TMR6_TMR6_LENGTH                                   0x8
#define _TMR6_TMR6_MASK                                     0xFF

// Register: CCP8CON
#define CCP8CON CCP8CON
extern volatile unsigned char           CCP8CON             __at(0xF46);
#ifndef _LIB_BUILD
asm("CCP8CON equ 0F46h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP8M                  :4;
        unsigned DC8B                   :2;
    };
    struct {
        unsigned CCP8M0                 :1;
        unsigned CCP8M1                 :1;
        unsigned CCP8M2                 :1;
        unsigned CCP8M3                 :1;
        unsigned DC8B0                  :1;
        unsigned DC8B1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP8Y                  :1;
        unsigned CCP8X                  :1;
    };
} CCP8CONbits_t;
extern volatile CCP8CONbits_t CCP8CONbits __at(0xF46);
// bitfield macros
#define _CCP8CON_CCP8M_POSN                                 0x0
#define _CCP8CON_CCP8M_POSITION                             0x0
#define _CCP8CON_CCP8M_SIZE                                 0x4
#define _CCP8CON_CCP8M_LENGTH                               0x4
#define _CCP8CON_CCP8M_MASK                                 0xF
#define _CCP8CON_DC8B_POSN                                  0x4
#define _CCP8CON_DC8B_POSITION                              0x4
#define _CCP8CON_DC8B_SIZE                                  0x2
#define _CCP8CON_DC8B_LENGTH                                0x2
#define _CCP8CON_DC8B_MASK                                  0x30
#define _CCP8CON_CCP8M0_POSN                                0x0
#define _CCP8CON_CCP8M0_POSITION                            0x0
#define _CCP8CON_CCP8M0_SIZE                                0x1
#define _CCP8CON_CCP8M0_LENGTH                              0x1
#define _CCP8CON_CCP8M0_MASK                                0x1
#define _CCP8CON_CCP8M1_POSN                                0x1
#define _CCP8CON_CCP8M1_POSITION                            0x1
#define _CCP8CON_CCP8M1_SIZE                                0x1
#define _CCP8CON_CCP8M1_LENGTH                              0x1
#define _CCP8CON_CCP8M1_MASK                                0x2
#define _CCP8CON_CCP8M2_POSN                                0x2
#define _CCP8CON_CCP8M2_POSITION                            0x2
#define _CCP8CON_CCP8M2_SIZE                                0x1
#define _CCP8CON_CCP8M2_LENGTH                              0x1
#define _CCP8CON_CCP8M2_MASK                                0x4
#define _CCP8CON_CCP8M3_POSN                                0x3
#define _CCP8CON_CCP8M3_POSITION                            0x3
#define _CCP8CON_CCP8M3_SIZE                                0x1
#define _CCP8CON_CCP8M3_LENGTH                              0x1
#define _CCP8CON_CCP8M3_MASK                                0x8
#define _CCP8CON_DC8B0_POSN                                 0x4
#define _CCP8CON_DC8B0_POSITION                             0x4
#define _CCP8CON_DC8B0_SIZE                                 0x1
#define _CCP8CON_DC8B0_LENGTH                               0x1
#define _CCP8CON_DC8B0_MASK                                 0x10
#define _CCP8CON_DC8B1_POSN                                 0x5
#define _CCP8CON_DC8B1_POSITION                             0x5
#define _CCP8CON_DC8B1_SIZE                                 0x1
#define _CCP8CON_DC8B1_LENGTH                               0x1
#define _CCP8CON_DC8B1_MASK                                 0x20
#define _CCP8CON_CCP8Y_POSN                                 0x4
#define _CCP8CON_CCP8Y_POSITION                             0x4
#define _CCP8CON_CCP8Y_SIZE                                 0x1
#define _CCP8CON_CCP8Y_LENGTH                               0x1
#define _CCP8CON_CCP8Y_MASK                                 0x10
#define _CCP8CON_CCP8X_POSN                                 0x5
#define _CCP8CON_CCP8X_POSITION                             0x5
#define _CCP8CON_CCP8X_SIZE                                 0x1
#define _CCP8CON_CCP8X_LENGTH                               0x1
#define _CCP8CON_CCP8X_MASK                                 0x20

// Register: CCPR8
#define CCPR8 CCPR8
extern volatile unsigned short          CCPR8               __at(0xF47);
#ifndef _LIB_BUILD
asm("CCPR8 equ 0F47h");
#endif

// Register: CCPR8L
#define CCPR8L CCPR8L
extern volatile unsigned char           CCPR8L              __at(0xF47);
#ifndef _LIB_BUILD
asm("CCPR8L equ 0F47h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR8L                 :8;
    };
} CCPR8Lbits_t;
extern volatile CCPR8Lbits_t CCPR8Lbits __at(0xF47);
// bitfield macros
#define _CCPR8L_CCPR8L_POSN                                 0x0
#define _CCPR8L_CCPR8L_POSITION                             0x0
#define _CCPR8L_CCPR8L_SIZE                                 0x8
#define _CCPR8L_CCPR8L_LENGTH                               0x8
#define _CCPR8L_CCPR8L_MASK                                 0xFF

// Register: CCPR8H
#define CCPR8H CCPR8H
extern volatile unsigned char           CCPR8H              __at(0xF48);
#ifndef _LIB_BUILD
asm("CCPR8H equ 0F48h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR8H                 :8;
    };
} CCPR8Hbits_t;
extern volatile CCPR8Hbits_t CCPR8Hbits __at(0xF48);
// bitfield macros
#define _CCPR8H_CCPR8H_POSN                                 0x0
#define _CCPR8H_CCPR8H_POSITION                             0x0
#define _CCPR8H_CCPR8H_SIZE                                 0x8
#define _CCPR8H_CCPR8H_LENGTH                               0x8
#define _CCPR8H_CCPR8H_MASK                                 0xFF

// Register: CCP3CON
#define CCP3CON CCP3CON
extern volatile unsigned char           CCP3CON             __at(0xF49);
#ifndef _LIB_BUILD
asm("CCP3CON equ 0F49h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3M                  :4;
        unsigned DC3B                   :2;
        unsigned P3M                    :2;
    };
    struct {
        unsigned CCP3M0                 :1;
        unsigned CCP3M1                 :1;
        unsigned CCP3M2                 :1;
        unsigned CCP3M3                 :1;
        unsigned DC3B0                  :1;
        unsigned DC3B1                  :1;
        unsigned P3M0                   :1;
        unsigned P3M1                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP3Y                  :1;
        unsigned CCP3X                  :1;
    };
} CCP3CONbits_t;
extern volatile CCP3CONbits_t CCP3CONbits __at(0xF49);
// bitfield macros
#define _CCP3CON_CCP3M_POSN                                 0x0
#define _CCP3CON_CCP3M_POSITION                             0x0
#define _CCP3CON_CCP3M_SIZE                                 0x4
#define _CCP3CON_CCP3M_LENGTH                               0x4
#define _CCP3CON_CCP3M_MASK                                 0xF
#define _CCP3CON_DC3B_POSN                                  0x4
#define _CCP3CON_DC3B_POSITION                              0x4
#define _CCP3CON_DC3B_SIZE                                  0x2
#define _CCP3CON_DC3B_LENGTH                                0x2
#define _CCP3CON_DC3B_MASK                                  0x30
#define _CCP3CON_P3M_POSN                                   0x6
#define _CCP3CON_P3M_POSITION                               0x6
#define _CCP3CON_P3M_SIZE                                   0x2
#define _CCP3CON_P3M_LENGTH                                 0x2
#define _CCP3CON_P3M_MASK                                   0xC0
#define _CCP3CON_CCP3M0_POSN                                0x0
#define _CCP3CON_CCP3M0_POSITION                            0x0
#define _CCP3CON_CCP3M0_SIZE                                0x1
#define _CCP3CON_CCP3M0_LENGTH                              0x1
#define _CCP3CON_CCP3M0_MASK                                0x1
#define _CCP3CON_CCP3M1_POSN                                0x1
#define _CCP3CON_CCP3M1_POSITION                            0x1
#define _CCP3CON_CCP3M1_SIZE                                0x1
#define _CCP3CON_CCP3M1_LENGTH                              0x1
#define _CCP3CON_CCP3M1_MASK                                0x2
#define _CCP3CON_CCP3M2_POSN                                0x2
#define _CCP3CON_CCP3M2_POSITION                            0x2
#define _CCP3CON_CCP3M2_SIZE                                0x1
#define _CCP3CON_CCP3M2_LENGTH                              0x1
#define _CCP3CON_CCP3M2_MASK                                0x4
#define _CCP3CON_CCP3M3_POSN                                0x3
#define _CCP3CON_CCP3M3_POSITION                            0x3
#define _CCP3CON_CCP3M3_SIZE                                0x1
#define _CCP3CON_CCP3M3_LENGTH                              0x1
#define _CCP3CON_CCP3M3_MASK                                0x8
#define _CCP3CON_DC3B0_POSN                                 0x4
#define _CCP3CON_DC3B0_POSITION                             0x4
#define _CCP3CON_DC3B0_SIZE                                 0x1
#define _CCP3CON_DC3B0_LENGTH                               0x1
#define _CCP3CON_DC3B0_MASK                                 0x10
#define _CCP3CON_DC3B1_POSN                                 0x5
#define _CCP3CON_DC3B1_POSITION                             0x5
#define _CCP3CON_DC3B1_SIZE                                 0x1
#define _CCP3CON_DC3B1_LENGTH                               0x1
#define _CCP3CON_DC3B1_MASK                                 0x20
#define _CCP3CON_P3M0_POSN                                  0x6
#define _CCP3CON_P3M0_POSITION                              0x6
#define _CCP3CON_P3M0_SIZE                                  0x1
#define _CCP3CON_P3M0_LENGTH                                0x1
#define _CCP3CON_P3M0_MASK                                  0x40
#define _CCP3CON_P3M1_POSN                                  0x7
#define _CCP3CON_P3M1_POSITION                              0x7
#define _CCP3CON_P3M1_SIZE                                  0x1
#define _CCP3CON_P3M1_LENGTH                                0x1
#define _CCP3CON_P3M1_MASK                                  0x80
#define _CCP3CON_CCP3Y_POSN                                 0x4
#define _CCP3CON_CCP3Y_POSITION                             0x4
#define _CCP3CON_CCP3Y_SIZE                                 0x1
#define _CCP3CON_CCP3Y_LENGTH                               0x1
#define _CCP3CON_CCP3Y_MASK                                 0x10
#define _CCP3CON_CCP3X_POSN                                 0x5
#define _CCP3CON_CCP3X_POSITION                             0x5
#define _CCP3CON_CCP3X_SIZE                                 0x1
#define _CCP3CON_CCP3X_LENGTH                               0x1
#define _CCP3CON_CCP3X_MASK                                 0x20

// Register: CCPR3
#define CCPR3 CCPR3
extern volatile unsigned short          CCPR3               __at(0xF4A);
#ifndef _LIB_BUILD
asm("CCPR3 equ 0F4Ah");
#endif

// Register: CCPR3L
#define CCPR3L CCPR3L
extern volatile unsigned char           CCPR3L              __at(0xF4A);
#ifndef _LIB_BUILD
asm("CCPR3L equ 0F4Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR3L                 :8;
    };
} CCPR3Lbits_t;
extern volatile CCPR3Lbits_t CCPR3Lbits __at(0xF4A);
// bitfield macros
#define _CCPR3L_CCPR3L_POSN                                 0x0
#define _CCPR3L_CCPR3L_POSITION                             0x0
#define _CCPR3L_CCPR3L_SIZE                                 0x8
#define _CCPR3L_CCPR3L_LENGTH                               0x8
#define _CCPR3L_CCPR3L_MASK                                 0xFF

// Register: CCPR3H
#define CCPR3H CCPR3H
extern volatile unsigned char           CCPR3H              __at(0xF4B);
#ifndef _LIB_BUILD
asm("CCPR3H equ 0F4Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR3H                 :8;
    };
} CCPR3Hbits_t;
extern volatile CCPR3Hbits_t CCPR3Hbits __at(0xF4B);
// bitfield macros
#define _CCPR3H_CCPR3H_POSN                                 0x0
#define _CCPR3H_CCPR3H_POSITION                             0x0
#define _CCPR3H_CCPR3H_SIZE                                 0x8
#define _CCPR3H_CCPR3H_LENGTH                               0x8
#define _CCPR3H_CCPR3H_MASK                                 0xFF

// Register: ECCP3DEL
#define ECCP3DEL ECCP3DEL
extern volatile unsigned char           ECCP3DEL            __at(0xF4C);
#ifndef _LIB_BUILD
asm("ECCP3DEL equ 0F4Ch");
#endif
// aliases
extern volatile unsigned char           PWM3CON             __at(0xF4C);
#ifndef _LIB_BUILD
asm("PWM3CON equ 0F4Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned P3DC                   :7;
        unsigned P3RSEN                 :1;
    };
    struct {
        unsigned P3DC0                  :1;
        unsigned P3DC1                  :1;
        unsigned P3DC2                  :1;
        unsigned P3DC3                  :1;
        unsigned P3DC4                  :1;
        unsigned P3DC5                  :1;
        unsigned P3DC6                  :1;
    };
} ECCP3DELbits_t;
extern volatile ECCP3DELbits_t ECCP3DELbits __at(0xF4C);
// bitfield macros
#define _ECCP3DEL_P3DC_POSN                                 0x0
#define _ECCP3DEL_P3DC_POSITION                             0x0
#define _ECCP3DEL_P3DC_SIZE                                 0x7
#define _ECCP3DEL_P3DC_LENGTH                               0x7
#define _ECCP3DEL_P3DC_MASK                                 0x7F
#define _ECCP3DEL_P3RSEN_POSN                               0x7
#define _ECCP3DEL_P3RSEN_POSITION                           0x7
#define _ECCP3DEL_P3RSEN_SIZE                               0x1
#define _ECCP3DEL_P3RSEN_LENGTH                             0x1
#define _ECCP3DEL_P3RSEN_MASK                               0x80
#define _ECCP3DEL_P3DC0_POSN                                0x0
#define _ECCP3DEL_P3DC0_POSITION                            0x0
#define _ECCP3DEL_P3DC0_SIZE                                0x1
#define _ECCP3DEL_P3DC0_LENGTH                              0x1
#define _ECCP3DEL_P3DC0_MASK                                0x1
#define _ECCP3DEL_P3DC1_POSN                                0x1
#define _ECCP3DEL_P3DC1_POSITION                            0x1
#define _ECCP3DEL_P3DC1_SIZE                                0x1
#define _ECCP3DEL_P3DC1_LENGTH                              0x1
#define _ECCP3DEL_P3DC1_MASK                                0x2
#define _ECCP3DEL_P3DC2_POSN                                0x2
#define _ECCP3DEL_P3DC2_POSITION                            0x2
#define _ECCP3DEL_P3DC2_SIZE                                0x1
#define _ECCP3DEL_P3DC2_LENGTH                              0x1
#define _ECCP3DEL_P3DC2_MASK                                0x4
#define _ECCP3DEL_P3DC3_POSN                                0x3
#define _ECCP3DEL_P3DC3_POSITION                            0x3
#define _ECCP3DEL_P3DC3_SIZE                                0x1
#define _ECCP3DEL_P3DC3_LENGTH                              0x1
#define _ECCP3DEL_P3DC3_MASK                                0x8
#define _ECCP3DEL_P3DC4_POSN                                0x4
#define _ECCP3DEL_P3DC4_POSITION                            0x4
#define _ECCP3DEL_P3DC4_SIZE                                0x1
#define _ECCP3DEL_P3DC4_LENGTH                              0x1
#define _ECCP3DEL_P3DC4_MASK                                0x10
#define _ECCP3DEL_P3DC5_POSN                                0x5
#define _ECCP3DEL_P3DC5_POSITION                            0x5
#define _ECCP3DEL_P3DC5_SIZE                                0x1
#define _ECCP3DEL_P3DC5_LENGTH                              0x1
#define _ECCP3DEL_P3DC5_MASK                                0x20
#define _ECCP3DEL_P3DC6_POSN                                0x6
#define _ECCP3DEL_P3DC6_POSITION                            0x6
#define _ECCP3DEL_P3DC6_SIZE                                0x1
#define _ECCP3DEL_P3DC6_LENGTH                              0x1
#define _ECCP3DEL_P3DC6_MASK                                0x40
// alias bitfield definitions
typedef union {
    struct {
        unsigned P3DC                   :7;
        unsigned P3RSEN                 :1;
    };
    struct {
        unsigned P3DC0                  :1;
        unsigned P3DC1                  :1;
        unsigned P3DC2                  :1;
        unsigned P3DC3                  :1;
        unsigned P3DC4                  :1;
        unsigned P3DC5                  :1;
        unsigned P3DC6                  :1;
    };
} PWM3CONbits_t;
extern volatile PWM3CONbits_t PWM3CONbits __at(0xF4C);
// bitfield macros
#define _PWM3CON_P3DC_POSN                                  0x0
#define _PWM3CON_P3DC_POSITION                              0x0
#define _PWM3CON_P3DC_SIZE                                  0x7
#define _PWM3CON_P3DC_LENGTH                                0x7
#define _PWM3CON_P3DC_MASK                                  0x7F
#define _PWM3CON_P3RSEN_POSN                                0x7
#define _PWM3CON_P3RSEN_POSITION                            0x7
#define _PWM3CON_P3RSEN_SIZE                                0x1
#define _PWM3CON_P3RSEN_LENGTH                              0x1
#define _PWM3CON_P3RSEN_MASK                                0x80
#define _PWM3CON_P3DC0_POSN                                 0x0
#define _PWM3CON_P3DC0_POSITION                             0x0
#define _PWM3CON_P3DC0_SIZE                                 0x1
#define _PWM3CON_P3DC0_LENGTH                               0x1
#define _PWM3CON_P3DC0_MASK                                 0x1
#define _PWM3CON_P3DC1_POSN                                 0x1
#define _PWM3CON_P3DC1_POSITION                             0x1
#define _PWM3CON_P3DC1_SIZE                                 0x1
#define _PWM3CON_P3DC1_LENGTH                               0x1
#define _PWM3CON_P3DC1_MASK                                 0x2
#define _PWM3CON_P3DC2_POSN                                 0x2
#define _PWM3CON_P3DC2_POSITION                             0x2
#define _PWM3CON_P3DC2_SIZE                                 0x1
#define _PWM3CON_P3DC2_LENGTH                               0x1
#define _PWM3CON_P3DC2_MASK                                 0x4
#define _PWM3CON_P3DC3_POSN                                 0x3
#define _PWM3CON_P3DC3_POSITION                             0x3
#define _PWM3CON_P3DC3_SIZE                                 0x1
#define _PWM3CON_P3DC3_LENGTH                               0x1
#define _PWM3CON_P3DC3_MASK                                 0x8
#define _PWM3CON_P3DC4_POSN                                 0x4
#define _PWM3CON_P3DC4_POSITION                             0x4
#define _PWM3CON_P3DC4_SIZE                                 0x1
#define _PWM3CON_P3DC4_LENGTH                               0x1
#define _PWM3CON_P3DC4_MASK                                 0x10
#define _PWM3CON_P3DC5_POSN                                 0x5
#define _PWM3CON_P3DC5_POSITION                             0x5
#define _PWM3CON_P3DC5_SIZE                                 0x1
#define _PWM3CON_P3DC5_LENGTH                               0x1
#define _PWM3CON_P3DC5_MASK                                 0x20
#define _PWM3CON_P3DC6_POSN                                 0x6
#define _PWM3CON_P3DC6_POSITION                             0x6
#define _PWM3CON_P3DC6_SIZE                                 0x1
#define _PWM3CON_P3DC6_LENGTH                               0x1
#define _PWM3CON_P3DC6_MASK                                 0x40

// Register: ECCP3AS
#define ECCP3AS ECCP3AS
extern volatile unsigned char           ECCP3AS             __at(0xF4D);
#ifndef _LIB_BUILD
asm("ECCP3AS equ 0F4Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PSS3BD                 :2;
        unsigned PSS3AC                 :2;
        unsigned ECCP3AS                :3;
        unsigned ECCP3ASE               :1;
    };
    struct {
        unsigned PSS3BD0                :1;
        unsigned PSS3BD1                :1;
        unsigned PSS3AC0                :1;
        unsigned PSS3AC1                :1;
        unsigned ECCP3AS0               :1;
        unsigned ECCP3AS1               :1;
        unsigned ECCP3AS2               :1;
    };
} ECCP3ASbits_t;
extern volatile ECCP3ASbits_t ECCP3ASbits __at(0xF4D);
// bitfield macros
#define _ECCP3AS_PSS3BD_POSN                                0x0
#define _ECCP3AS_PSS3BD_POSITION                            0x0
#define _ECCP3AS_PSS3BD_SIZE                                0x2
#define _ECCP3AS_PSS3BD_LENGTH                              0x2
#define _ECCP3AS_PSS3BD_MASK                                0x3
#define _ECCP3AS_PSS3AC_POSN                                0x2
#define _ECCP3AS_PSS3AC_POSITION                            0x2
#define _ECCP3AS_PSS3AC_SIZE                                0x2
#define _ECCP3AS_PSS3AC_LENGTH                              0x2
#define _ECCP3AS_PSS3AC_MASK                                0xC
#define _ECCP3AS_ECCP3AS_POSN                               0x4
#define _ECCP3AS_ECCP3AS_POSITION                           0x4
#define _ECCP3AS_ECCP3AS_SIZE                               0x3
#define _ECCP3AS_ECCP3AS_LENGTH                             0x3
#define _ECCP3AS_ECCP3AS_MASK                               0x70
#define _ECCP3AS_ECCP3ASE_POSN                              0x7
#define _ECCP3AS_ECCP3ASE_POSITION                          0x7
#define _ECCP3AS_ECCP3ASE_SIZE                              0x1
#define _ECCP3AS_ECCP3ASE_LENGTH                            0x1
#define _ECCP3AS_ECCP3ASE_MASK                              0x80
#define _ECCP3AS_PSS3BD0_POSN                               0x0
#define _ECCP3AS_PSS3BD0_POSITION                           0x0
#define _ECCP3AS_PSS3BD0_SIZE                               0x1
#define _ECCP3AS_PSS3BD0_LENGTH                             0x1
#define _ECCP3AS_PSS3BD0_MASK                               0x1
#define _ECCP3AS_PSS3BD1_POSN                               0x1
#define _ECCP3AS_PSS3BD1_POSITION                           0x1
#define _ECCP3AS_PSS3BD1_SIZE                               0x1
#define _ECCP3AS_PSS3BD1_LENGTH                             0x1
#define _ECCP3AS_PSS3BD1_MASK                               0x2
#define _ECCP3AS_PSS3AC0_POSN                               0x2
#define _ECCP3AS_PSS3AC0_POSITION                           0x2
#define _ECCP3AS_PSS3AC0_SIZE                               0x1
#define _ECCP3AS_PSS3AC0_LENGTH                             0x1
#define _ECCP3AS_PSS3AC0_MASK                               0x4
#define _ECCP3AS_PSS3AC1_POSN                               0x3
#define _ECCP3AS_PSS3AC1_POSITION                           0x3
#define _ECCP3AS_PSS3AC1_SIZE                               0x1
#define _ECCP3AS_PSS3AC1_LENGTH                             0x1
#define _ECCP3AS_PSS3AC1_MASK                               0x8
#define _ECCP3AS_ECCP3AS0_POSN                              0x4
#define _ECCP3AS_ECCP3AS0_POSITION                          0x4
#define _ECCP3AS_ECCP3AS0_SIZE                              0x1
#define _ECCP3AS_ECCP3AS0_LENGTH                            0x1
#define _ECCP3AS_ECCP3AS0_MASK                              0x10
#define _ECCP3AS_ECCP3AS1_POSN                              0x5
#define _ECCP3AS_ECCP3AS1_POSITION                          0x5
#define _ECCP3AS_ECCP3AS1_SIZE                              0x1
#define _ECCP3AS_ECCP3AS1_LENGTH                            0x1
#define _ECCP3AS_ECCP3AS1_MASK                              0x20
#define _ECCP3AS_ECCP3AS2_POSN                              0x6
#define _ECCP3AS_ECCP3AS2_POSITION                          0x6
#define _ECCP3AS_ECCP3AS2_SIZE                              0x1
#define _ECCP3AS_ECCP3AS2_LENGTH                            0x1
#define _ECCP3AS_ECCP3AS2_MASK                              0x40

// Register: CCP2CON
#define CCP2CON CCP2CON
extern volatile unsigned char           CCP2CON             __at(0xF4E);
#ifndef _LIB_BUILD
asm("CCP2CON equ 0F4Eh");
#endif
// aliases
extern volatile unsigned char           ECCP2CON            __at(0xF4E);
#ifndef _LIB_BUILD
asm("ECCP2CON equ 0F4Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2M                  :4;
        unsigned DC2B                   :2;
        unsigned P2M                    :2;
    };
    struct {
        unsigned CCP2M0                 :1;
        unsigned CCP2M1                 :1;
        unsigned CCP2M2                 :1;
        unsigned CCP2M3                 :1;
        unsigned DC2B0                  :1;
        unsigned DC2B1                  :1;
        unsigned P2M0                   :1;
        unsigned P2M1                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP2Y                  :1;
        unsigned CCP2X                  :1;
    };
} CCP2CONbits_t;
extern volatile CCP2CONbits_t CCP2CONbits __at(0xF4E);
// bitfield macros
#define _CCP2CON_CCP2M_POSN                                 0x0
#define _CCP2CON_CCP2M_POSITION                             0x0
#define _CCP2CON_CCP2M_SIZE                                 0x4
#define _CCP2CON_CCP2M_LENGTH                               0x4
#define _CCP2CON_CCP2M_MASK                                 0xF
#define _CCP2CON_DC2B_POSN                                  0x4
#define _CCP2CON_DC2B_POSITION                              0x4
#define _CCP2CON_DC2B_SIZE                                  0x2
#define _CCP2CON_DC2B_LENGTH                                0x2
#define _CCP2CON_DC2B_MASK                                  0x30
#define _CCP2CON_P2M_POSN                                   0x6
#define _CCP2CON_P2M_POSITION                               0x6
#define _CCP2CON_P2M_SIZE                                   0x2
#define _CCP2CON_P2M_LENGTH                                 0x2
#define _CCP2CON_P2M_MASK                                   0xC0
#define _CCP2CON_CCP2M0_POSN                                0x0
#define _CCP2CON_CCP2M0_POSITION                            0x0
#define _CCP2CON_CCP2M0_SIZE                                0x1
#define _CCP2CON_CCP2M0_LENGTH                              0x1
#define _CCP2CON_CCP2M0_MASK                                0x1
#define _CCP2CON_CCP2M1_POSN                                0x1
#define _CCP2CON_CCP2M1_POSITION                            0x1
#define _CCP2CON_CCP2M1_SIZE                                0x1
#define _CCP2CON_CCP2M1_LENGTH                              0x1
#define _CCP2CON_CCP2M1_MASK                                0x2
#define _CCP2CON_CCP2M2_POSN                                0x2
#define _CCP2CON_CCP2M2_POSITION                            0x2
#define _CCP2CON_CCP2M2_SIZE                                0x1
#define _CCP2CON_CCP2M2_LENGTH                              0x1
#define _CCP2CON_CCP2M2_MASK                                0x4
#define _CCP2CON_CCP2M3_POSN                                0x3
#define _CCP2CON_CCP2M3_POSITION                            0x3
#define _CCP2CON_CCP2M3_SIZE                                0x1
#define _CCP2CON_CCP2M3_LENGTH                              0x1
#define _CCP2CON_CCP2M3_MASK                                0x8
#define _CCP2CON_DC2B0_POSN                                 0x4
#define _CCP2CON_DC2B0_POSITION                             0x4
#define _CCP2CON_DC2B0_SIZE                                 0x1
#define _CCP2CON_DC2B0_LENGTH                               0x1
#define _CCP2CON_DC2B0_MASK                                 0x10
#define _CCP2CON_DC2B1_POSN                                 0x5
#define _CCP2CON_DC2B1_POSITION                             0x5
#define _CCP2CON_DC2B1_SIZE                                 0x1
#define _CCP2CON_DC2B1_LENGTH                               0x1
#define _CCP2CON_DC2B1_MASK                                 0x20
#define _CCP2CON_P2M0_POSN                                  0x6
#define _CCP2CON_P2M0_POSITION                              0x6
#define _CCP2CON_P2M0_SIZE                                  0x1
#define _CCP2CON_P2M0_LENGTH                                0x1
#define _CCP2CON_P2M0_MASK                                  0x40
#define _CCP2CON_P2M1_POSN                                  0x7
#define _CCP2CON_P2M1_POSITION                              0x7
#define _CCP2CON_P2M1_SIZE                                  0x1
#define _CCP2CON_P2M1_LENGTH                                0x1
#define _CCP2CON_P2M1_MASK                                  0x80
#define _CCP2CON_CCP2Y_POSN                                 0x4
#define _CCP2CON_CCP2Y_POSITION                             0x4
#define _CCP2CON_CCP2Y_SIZE                                 0x1
#define _CCP2CON_CCP2Y_LENGTH                               0x1
#define _CCP2CON_CCP2Y_MASK                                 0x10
#define _CCP2CON_CCP2X_POSN                                 0x5
#define _CCP2CON_CCP2X_POSITION                             0x5
#define _CCP2CON_CCP2X_SIZE                                 0x1
#define _CCP2CON_CCP2X_LENGTH                               0x1
#define _CCP2CON_CCP2X_MASK                                 0x20
// alias bitfield definitions
typedef union {
    struct {
        unsigned CCP2M                  :4;
        unsigned DC2B                   :2;
        unsigned P2M                    :2;
    };
    struct {
        unsigned CCP2M0                 :1;
        unsigned CCP2M1                 :1;
        unsigned CCP2M2                 :1;
        unsigned CCP2M3                 :1;
        unsigned DC2B0                  :1;
        unsigned DC2B1                  :1;
        unsigned P2M0                   :1;
        unsigned P2M1                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP2Y                  :1;
        unsigned CCP2X                  :1;
    };
} ECCP2CONbits_t;
extern volatile ECCP2CONbits_t ECCP2CONbits __at(0xF4E);
// bitfield macros
#define _ECCP2CON_CCP2M_POSN                                0x0
#define _ECCP2CON_CCP2M_POSITION                            0x0
#define _ECCP2CON_CCP2M_SIZE                                0x4
#define _ECCP2CON_CCP2M_LENGTH                              0x4
#define _ECCP2CON_CCP2M_MASK                                0xF
#define _ECCP2CON_DC2B_POSN                                 0x4
#define _ECCP2CON_DC2B_POSITION                             0x4
#define _ECCP2CON_DC2B_SIZE                                 0x2
#define _ECCP2CON_DC2B_LENGTH                               0x2
#define _ECCP2CON_DC2B_MASK                                 0x30
#define _ECCP2CON_P2M_POSN                                  0x6
#define _ECCP2CON_P2M_POSITION                              0x6
#define _ECCP2CON_P2M_SIZE                                  0x2
#define _ECCP2CON_P2M_LENGTH                                0x2
#define _ECCP2CON_P2M_MASK                                  0xC0
#define _ECCP2CON_CCP2M0_POSN                               0x0
#define _ECCP2CON_CCP2M0_POSITION                           0x0
#define _ECCP2CON_CCP2M0_SIZE                               0x1
#define _ECCP2CON_CCP2M0_LENGTH                             0x1
#define _ECCP2CON_CCP2M0_MASK                               0x1
#define _ECCP2CON_CCP2M1_POSN                               0x1
#define _ECCP2CON_CCP2M1_POSITION                           0x1
#define _ECCP2CON_CCP2M1_SIZE                               0x1
#define _ECCP2CON_CCP2M1_LENGTH                             0x1
#define _ECCP2CON_CCP2M1_MASK                               0x2
#define _ECCP2CON_CCP2M2_POSN                               0x2
#define _ECCP2CON_CCP2M2_POSITION                           0x2
#define _ECCP2CON_CCP2M2_SIZE                               0x1
#define _ECCP2CON_CCP2M2_LENGTH                             0x1
#define _ECCP2CON_CCP2M2_MASK                               0x4
#define _ECCP2CON_CCP2M3_POSN                               0x3
#define _ECCP2CON_CCP2M3_POSITION                           0x3
#define _ECCP2CON_CCP2M3_SIZE                               0x1
#define _ECCP2CON_CCP2M3_LENGTH                             0x1
#define _ECCP2CON_CCP2M3_MASK                               0x8
#define _ECCP2CON_DC2B0_POSN                                0x4
#define _ECCP2CON_DC2B0_POSITION                            0x4
#define _ECCP2CON_DC2B0_SIZE                                0x1
#define _ECCP2CON_DC2B0_LENGTH                              0x1
#define _ECCP2CON_DC2B0_MASK                                0x10
#define _ECCP2CON_DC2B1_POSN                                0x5
#define _ECCP2CON_DC2B1_POSITION                            0x5
#define _ECCP2CON_DC2B1_SIZE                                0x1
#define _ECCP2CON_DC2B1_LENGTH                              0x1
#define _ECCP2CON_DC2B1_MASK                                0x20
#define _ECCP2CON_P2M0_POSN                                 0x6
#define _ECCP2CON_P2M0_POSITION                             0x6
#define _ECCP2CON_P2M0_SIZE                                 0x1
#define _ECCP2CON_P2M0_LENGTH                               0x1
#define _ECCP2CON_P2M0_MASK                                 0x40
#define _ECCP2CON_P2M1_POSN                                 0x7
#define _ECCP2CON_P2M1_POSITION                             0x7
#define _ECCP2CON_P2M1_SIZE                                 0x1
#define _ECCP2CON_P2M1_LENGTH                               0x1
#define _ECCP2CON_P2M1_MASK                                 0x80
#define _ECCP2CON_CCP2Y_POSN                                0x4
#define _ECCP2CON_CCP2Y_POSITION                            0x4
#define _ECCP2CON_CCP2Y_SIZE                                0x1
#define _ECCP2CON_CCP2Y_LENGTH                              0x1
#define _ECCP2CON_CCP2Y_MASK                                0x10
#define _ECCP2CON_CCP2X_POSN                                0x5
#define _ECCP2CON_CCP2X_POSITION                            0x5
#define _ECCP2CON_CCP2X_SIZE                                0x1
#define _ECCP2CON_CCP2X_LENGTH                              0x1
#define _ECCP2CON_CCP2X_MASK                                0x20

// Register: CCPR2
#define CCPR2 CCPR2
extern volatile unsigned short          CCPR2               __at(0xF4F);
#ifndef _LIB_BUILD
asm("CCPR2 equ 0F4Fh");
#endif

// Register: CCPR2L
#define CCPR2L CCPR2L
extern volatile unsigned char           CCPR2L              __at(0xF4F);
#ifndef _LIB_BUILD
asm("CCPR2L equ 0F4Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR2L                 :8;
    };
} CCPR2Lbits_t;
extern volatile CCPR2Lbits_t CCPR2Lbits __at(0xF4F);
// bitfield macros
#define _CCPR2L_CCPR2L_POSN                                 0x0
#define _CCPR2L_CCPR2L_POSITION                             0x0
#define _CCPR2L_CCPR2L_SIZE                                 0x8
#define _CCPR2L_CCPR2L_LENGTH                               0x8
#define _CCPR2L_CCPR2L_MASK                                 0xFF

// Register: CCPR2H
#define CCPR2H CCPR2H
extern volatile unsigned char           CCPR2H              __at(0xF50);
#ifndef _LIB_BUILD
asm("CCPR2H equ 0F50h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR2H                 :8;
    };
} CCPR2Hbits_t;
extern volatile CCPR2Hbits_t CCPR2Hbits __at(0xF50);
// bitfield macros
#define _CCPR2H_CCPR2H_POSN                                 0x0
#define _CCPR2H_CCPR2H_POSITION                             0x0
#define _CCPR2H_CCPR2H_SIZE                                 0x8
#define _CCPR2H_CCPR2H_LENGTH                               0x8
#define _CCPR2H_CCPR2H_MASK                                 0xFF

// Register: ECCP2DEL
#define ECCP2DEL ECCP2DEL
extern volatile unsigned char           ECCP2DEL            __at(0xF51);
#ifndef _LIB_BUILD
asm("ECCP2DEL equ 0F51h");
#endif
// aliases
extern volatile unsigned char           PWM2CON             __at(0xF51);
#ifndef _LIB_BUILD
asm("PWM2CON equ 0F51h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned P2DC                   :7;
        unsigned P2RSEN                 :1;
    };
    struct {
        unsigned P2DC0                  :1;
        unsigned P2DC1                  :1;
        unsigned P2DC2                  :1;
        unsigned P2DC3                  :1;
        unsigned P2DC4                  :1;
        unsigned P2DC5                  :1;
        unsigned P2DC6                  :1;
    };
} ECCP2DELbits_t;
extern volatile ECCP2DELbits_t ECCP2DELbits __at(0xF51);
// bitfield macros
#define _ECCP2DEL_P2DC_POSN                                 0x0
#define _ECCP2DEL_P2DC_POSITION                             0x0
#define _ECCP2DEL_P2DC_SIZE                                 0x7
#define _ECCP2DEL_P2DC_LENGTH                               0x7
#define _ECCP2DEL_P2DC_MASK                                 0x7F
#define _ECCP2DEL_P2RSEN_POSN                               0x7
#define _ECCP2DEL_P2RSEN_POSITION                           0x7
#define _ECCP2DEL_P2RSEN_SIZE                               0x1
#define _ECCP2DEL_P2RSEN_LENGTH                             0x1
#define _ECCP2DEL_P2RSEN_MASK                               0x80
#define _ECCP2DEL_P2DC0_POSN                                0x0
#define _ECCP2DEL_P2DC0_POSITION                            0x0
#define _ECCP2DEL_P2DC0_SIZE                                0x1
#define _ECCP2DEL_P2DC0_LENGTH                              0x1
#define _ECCP2DEL_P2DC0_MASK                                0x1
#define _ECCP2DEL_P2DC1_POSN                                0x1
#define _ECCP2DEL_P2DC1_POSITION                            0x1
#define _ECCP2DEL_P2DC1_SIZE                                0x1
#define _ECCP2DEL_P2DC1_LENGTH                              0x1
#define _ECCP2DEL_P2DC1_MASK                                0x2
#define _ECCP2DEL_P2DC2_POSN                                0x2
#define _ECCP2DEL_P2DC2_POSITION                            0x2
#define _ECCP2DEL_P2DC2_SIZE                                0x1
#define _ECCP2DEL_P2DC2_LENGTH                              0x1
#define _ECCP2DEL_P2DC2_MASK                                0x4
#define _ECCP2DEL_P2DC3_POSN                                0x3
#define _ECCP2DEL_P2DC3_POSITION                            0x3
#define _ECCP2DEL_P2DC3_SIZE                                0x1
#define _ECCP2DEL_P2DC3_LENGTH                              0x1
#define _ECCP2DEL_P2DC3_MASK                                0x8
#define _ECCP2DEL_P2DC4_POSN                                0x4
#define _ECCP2DEL_P2DC4_POSITION                            0x4
#define _ECCP2DEL_P2DC4_SIZE                                0x1
#define _ECCP2DEL_P2DC4_LENGTH                              0x1
#define _ECCP2DEL_P2DC4_MASK                                0x10
#define _ECCP2DEL_P2DC5_POSN                                0x5
#define _ECCP2DEL_P2DC5_POSITION                            0x5
#define _ECCP2DEL_P2DC5_SIZE                                0x1
#define _ECCP2DEL_P2DC5_LENGTH                              0x1
#define _ECCP2DEL_P2DC5_MASK                                0x20
#define _ECCP2DEL_P2DC6_POSN                                0x6
#define _ECCP2DEL_P2DC6_POSITION                            0x6
#define _ECCP2DEL_P2DC6_SIZE                                0x1
#define _ECCP2DEL_P2DC6_LENGTH                              0x1
#define _ECCP2DEL_P2DC6_MASK                                0x40
// alias bitfield definitions
typedef union {
    struct {
        unsigned P2DC                   :7;
        unsigned P2RSEN                 :1;
    };
    struct {
        unsigned P2DC0                  :1;
        unsigned P2DC1                  :1;
        unsigned P2DC2                  :1;
        unsigned P2DC3                  :1;
        unsigned P2DC4                  :1;
        unsigned P2DC5                  :1;
        unsigned P2DC6                  :1;
    };
} PWM2CONbits_t;
extern volatile PWM2CONbits_t PWM2CONbits __at(0xF51);
// bitfield macros
#define _PWM2CON_P2DC_POSN                                  0x0
#define _PWM2CON_P2DC_POSITION                              0x0
#define _PWM2CON_P2DC_SIZE                                  0x7
#define _PWM2CON_P2DC_LENGTH                                0x7
#define _PWM2CON_P2DC_MASK                                  0x7F
#define _PWM2CON_P2RSEN_POSN                                0x7
#define _PWM2CON_P2RSEN_POSITION                            0x7
#define _PWM2CON_P2RSEN_SIZE                                0x1
#define _PWM2CON_P2RSEN_LENGTH                              0x1
#define _PWM2CON_P2RSEN_MASK                                0x80
#define _PWM2CON_P2DC0_POSN                                 0x0
#define _PWM2CON_P2DC0_POSITION                             0x0
#define _PWM2CON_P2DC0_SIZE                                 0x1
#define _PWM2CON_P2DC0_LENGTH                               0x1
#define _PWM2CON_P2DC0_MASK                                 0x1
#define _PWM2CON_P2DC1_POSN                                 0x1
#define _PWM2CON_P2DC1_POSITION                             0x1
#define _PWM2CON_P2DC1_SIZE                                 0x1
#define _PWM2CON_P2DC1_LENGTH                               0x1
#define _PWM2CON_P2DC1_MASK                                 0x2
#define _PWM2CON_P2DC2_POSN                                 0x2
#define _PWM2CON_P2DC2_POSITION                             0x2
#define _PWM2CON_P2DC2_SIZE                                 0x1
#define _PWM2CON_P2DC2_LENGTH                               0x1
#define _PWM2CON_P2DC2_MASK                                 0x4
#define _PWM2CON_P2DC3_POSN                                 0x3
#define _PWM2CON_P2DC3_POSITION                             0x3
#define _PWM2CON_P2DC3_SIZE                                 0x1
#define _PWM2CON_P2DC3_LENGTH                               0x1
#define _PWM2CON_P2DC3_MASK                                 0x8
#define _PWM2CON_P2DC4_POSN                                 0x4
#define _PWM2CON_P2DC4_POSITION                             0x4
#define _PWM2CON_P2DC4_SIZE                                 0x1
#define _PWM2CON_P2DC4_LENGTH                               0x1
#define _PWM2CON_P2DC4_MASK                                 0x10
#define _PWM2CON_P2DC5_POSN                                 0x5
#define _PWM2CON_P2DC5_POSITION                             0x5
#define _PWM2CON_P2DC5_SIZE                                 0x1
#define _PWM2CON_P2DC5_LENGTH                               0x1
#define _PWM2CON_P2DC5_MASK                                 0x20
#define _PWM2CON_P2DC6_POSN                                 0x6
#define _PWM2CON_P2DC6_POSITION                             0x6
#define _PWM2CON_P2DC6_SIZE                                 0x1
#define _PWM2CON_P2DC6_LENGTH                               0x1
#define _PWM2CON_P2DC6_MASK                                 0x40

// Register: ECCP2AS
#define ECCP2AS ECCP2AS
extern volatile unsigned char           ECCP2AS             __at(0xF52);
#ifndef _LIB_BUILD
asm("ECCP2AS equ 0F52h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PSS2BD                 :2;
        unsigned PSS2AC                 :2;
        unsigned ECCP2AS                :3;
        unsigned ECCP2ASE               :1;
    };
    struct {
        unsigned PSS2BD0                :1;
        unsigned PSS2BD1                :1;
        unsigned PSS2AC0                :1;
        unsigned PSS2AC1                :1;
        unsigned ECCP2AS0               :1;
        unsigned ECCP2AS1               :1;
        unsigned ECCP2AS2               :1;
    };
} ECCP2ASbits_t;
extern volatile ECCP2ASbits_t ECCP2ASbits __at(0xF52);
// bitfield macros
#define _ECCP2AS_PSS2BD_POSN                                0x0
#define _ECCP2AS_PSS2BD_POSITION                            0x0
#define _ECCP2AS_PSS2BD_SIZE                                0x2
#define _ECCP2AS_PSS2BD_LENGTH                              0x2
#define _ECCP2AS_PSS2BD_MASK                                0x3
#define _ECCP2AS_PSS2AC_POSN                                0x2
#define _ECCP2AS_PSS2AC_POSITION                            0x2
#define _ECCP2AS_PSS2AC_SIZE                                0x2
#define _ECCP2AS_PSS2AC_LENGTH                              0x2
#define _ECCP2AS_PSS2AC_MASK                                0xC
#define _ECCP2AS_ECCP2AS_POSN                               0x4
#define _ECCP2AS_ECCP2AS_POSITION                           0x4
#define _ECCP2AS_ECCP2AS_SIZE                               0x3
#define _ECCP2AS_ECCP2AS_LENGTH                             0x3
#define _ECCP2AS_ECCP2AS_MASK                               0x70
#define _ECCP2AS_ECCP2ASE_POSN                              0x7
#define _ECCP2AS_ECCP2ASE_POSITION                          0x7
#define _ECCP2AS_ECCP2ASE_SIZE                              0x1
#define _ECCP2AS_ECCP2ASE_LENGTH                            0x1
#define _ECCP2AS_ECCP2ASE_MASK                              0x80
#define _ECCP2AS_PSS2BD0_POSN                               0x0
#define _ECCP2AS_PSS2BD0_POSITION                           0x0
#define _ECCP2AS_PSS2BD0_SIZE                               0x1
#define _ECCP2AS_PSS2BD0_LENGTH                             0x1
#define _ECCP2AS_PSS2BD0_MASK                               0x1
#define _ECCP2AS_PSS2BD1_POSN                               0x1
#define _ECCP2AS_PSS2BD1_POSITION                           0x1
#define _ECCP2AS_PSS2BD1_SIZE                               0x1
#define _ECCP2AS_PSS2BD1_LENGTH                             0x1
#define _ECCP2AS_PSS2BD1_MASK                               0x2
#define _ECCP2AS_PSS2AC0_POSN                               0x2
#define _ECCP2AS_PSS2AC0_POSITION                           0x2
#define _ECCP2AS_PSS2AC0_SIZE                               0x1
#define _ECCP2AS_PSS2AC0_LENGTH                             0x1
#define _ECCP2AS_PSS2AC0_MASK                               0x4
#define _ECCP2AS_PSS2AC1_POSN                               0x3
#define _ECCP2AS_PSS2AC1_POSITION                           0x3
#define _ECCP2AS_PSS2AC1_SIZE                               0x1
#define _ECCP2AS_PSS2AC1_LENGTH                             0x1
#define _ECCP2AS_PSS2AC1_MASK                               0x8
#define _ECCP2AS_ECCP2AS0_POSN                              0x4
#define _ECCP2AS_ECCP2AS0_POSITION                          0x4
#define _ECCP2AS_ECCP2AS0_SIZE                              0x1
#define _ECCP2AS_ECCP2AS0_LENGTH                            0x1
#define _ECCP2AS_ECCP2AS0_MASK                              0x10
#define _ECCP2AS_ECCP2AS1_POSN                              0x5
#define _ECCP2AS_ECCP2AS1_POSITION                          0x5
#define _ECCP2AS_ECCP2AS1_SIZE                              0x1
#define _ECCP2AS_ECCP2AS1_LENGTH                            0x1
#define _ECCP2AS_ECCP2AS1_MASK                              0x20
#define _ECCP2AS_ECCP2AS2_POSN                              0x6
#define _ECCP2AS_ECCP2AS2_POSITION                          0x6
#define _ECCP2AS_ECCP2AS2_SIZE                              0x1
#define _ECCP2AS_ECCP2AS2_LENGTH                            0x1
#define _ECCP2AS_ECCP2AS2_MASK                              0x40

// Register: PADCFG1
#define PADCFG1 PADCFG1
extern volatile unsigned char           PADCFG1             __at(0xF53);
#ifndef _LIB_BUILD
asm("PADCFG1 equ 0F53h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned RTSECSEL               :2;
        unsigned                        :2;
        unsigned RJPU                   :1;
        unsigned REPU                   :1;
        unsigned RDPU                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned RTSECSEL0              :1;
        unsigned RTSECSEL1              :1;
    };
} PADCFG1bits_t;
extern volatile PADCFG1bits_t PADCFG1bits __at(0xF53);
// bitfield macros
#define _PADCFG1_RTSECSEL_POSN                              0x1
#define _PADCFG1_RTSECSEL_POSITION                          0x1
#define _PADCFG1_RTSECSEL_SIZE                              0x2
#define _PADCFG1_RTSECSEL_LENGTH                            0x2
#define _PADCFG1_RTSECSEL_MASK                              0x6
#define _PADCFG1_RJPU_POSN                                  0x5
#define _PADCFG1_RJPU_POSITION                              0x5
#define _PADCFG1_RJPU_SIZE                                  0x1
#define _PADCFG1_RJPU_LENGTH                                0x1
#define _PADCFG1_RJPU_MASK                                  0x20
#define _PADCFG1_REPU_POSN                                  0x6
#define _PADCFG1_REPU_POSITION                              0x6
#define _PADCFG1_REPU_SIZE                                  0x1
#define _PADCFG1_REPU_LENGTH                                0x1
#define _PADCFG1_REPU_MASK                                  0x40
#define _PADCFG1_RDPU_POSN                                  0x7
#define _PADCFG1_RDPU_POSITION                              0x7
#define _PADCFG1_RDPU_SIZE                                  0x1
#define _PADCFG1_RDPU_LENGTH                                0x1
#define _PADCFG1_RDPU_MASK                                  0x80
#define _PADCFG1_RTSECSEL0_POSN                             0x1
#define _PADCFG1_RTSECSEL0_POSITION                         0x1
#define _PADCFG1_RTSECSEL0_SIZE                             0x1
#define _PADCFG1_RTSECSEL0_LENGTH                           0x1
#define _PADCFG1_RTSECSEL0_MASK                             0x2
#define _PADCFG1_RTSECSEL1_POSN                             0x2
#define _PADCFG1_RTSECSEL1_POSITION                         0x2
#define _PADCFG1_RTSECSEL1_SIZE                             0x1
#define _PADCFG1_RTSECSEL1_LENGTH                           0x1
#define _PADCFG1_RTSECSEL1_MASK                             0x4

// Register: CM1CON
#define CM1CON CM1CON
extern volatile unsigned char           CM1CON              __at(0xF54);
#ifndef _LIB_BUILD
asm("CM1CON equ 0F54h");
#endif
// aliases
extern volatile unsigned char           CM1CON1             __at(0xF54);
#ifndef _LIB_BUILD
asm("CM1CON1 equ 0F54h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCH                    :2;
        unsigned CREF                   :1;
        unsigned EVPOL                  :2;
        unsigned CPOL                   :1;
        unsigned COE                    :1;
        unsigned CON                    :1;
    };
    struct {
        unsigned CCH0                   :1;
        unsigned CCH1                   :1;
        unsigned                        :1;
        unsigned EVPOL0                 :1;
        unsigned EVPOL1                 :1;
    };
    struct {
        unsigned C1CH0                  :1;
        unsigned C1CH1                  :1;
        unsigned CREF1                  :1;
        unsigned EVPOL01                :1;
        unsigned EVPOL11                :1;
        unsigned CPOL1                  :1;
        unsigned COE1                   :1;
        unsigned CON1                   :1;
    };
    struct {
        unsigned CCH01                  :1;
        unsigned CCH11                  :1;
    };
} CM1CONbits_t;
extern volatile CM1CONbits_t CM1CONbits __at(0xF54);
// bitfield macros
#define _CM1CON_CCH_POSN                                    0x0
#define _CM1CON_CCH_POSITION                                0x0
#define _CM1CON_CCH_SIZE                                    0x2
#define _CM1CON_CCH_LENGTH                                  0x2
#define _CM1CON_CCH_MASK                                    0x3
#define _CM1CON_CREF_POSN                                   0x2
#define _CM1CON_CREF_POSITION                               0x2
#define _CM1CON_CREF_SIZE                                   0x1
#define _CM1CON_CREF_LENGTH                                 0x1
#define _CM1CON_CREF_MASK                                   0x4
#define _CM1CON_EVPOL_POSN                                  0x3
#define _CM1CON_EVPOL_POSITION                              0x3
#define _CM1CON_EVPOL_SIZE                                  0x2
#define _CM1CON_EVPOL_LENGTH                                0x2
#define _CM1CON_EVPOL_MASK                                  0x18
#define _CM1CON_CPOL_POSN                                   0x5
#define _CM1CON_CPOL_POSITION                               0x5
#define _CM1CON_CPOL_SIZE                                   0x1
#define _CM1CON_CPOL_LENGTH                                 0x1
#define _CM1CON_CPOL_MASK                                   0x20
#define _CM1CON_COE_POSN                                    0x6
#define _CM1CON_COE_POSITION                                0x6
#define _CM1CON_COE_SIZE                                    0x1
#define _CM1CON_COE_LENGTH                                  0x1
#define _CM1CON_COE_MASK                                    0x40
#define _CM1CON_CON_POSN                                    0x7
#define _CM1CON_CON_POSITION                                0x7
#define _CM1CON_CON_SIZE                                    0x1
#define _CM1CON_CON_LENGTH                                  0x1
#define _CM1CON_CON_MASK                                    0x80
#define _CM1CON_CCH0_POSN                                   0x0
#define _CM1CON_CCH0_POSITION                               0x0
#define _CM1CON_CCH0_SIZE                                   0x1
#define _CM1CON_CCH0_LENGTH                                 0x1
#define _CM1CON_CCH0_MASK                                   0x1
#define _CM1CON_CCH1_POSN                                   0x1
#define _CM1CON_CCH1_POSITION                               0x1
#define _CM1CON_CCH1_SIZE                                   0x1
#define _CM1CON_CCH1_LENGTH                                 0x1
#define _CM1CON_CCH1_MASK                                   0x2
#define _CM1CON_EVPOL0_POSN                                 0x3
#define _CM1CON_EVPOL0_POSITION                             0x3
#define _CM1CON_EVPOL0_SIZE                                 0x1
#define _CM1CON_EVPOL0_LENGTH                               0x1
#define _CM1CON_EVPOL0_MASK                                 0x8
#define _CM1CON_EVPOL1_POSN                                 0x4
#define _CM1CON_EVPOL1_POSITION                             0x4
#define _CM1CON_EVPOL1_SIZE                                 0x1
#define _CM1CON_EVPOL1_LENGTH                               0x1
#define _CM1CON_EVPOL1_MASK                                 0x10
#define _CM1CON_C1CH0_POSN                                  0x0
#define _CM1CON_C1CH0_POSITION                              0x0
#define _CM1CON_C1CH0_SIZE                                  0x1
#define _CM1CON_C1CH0_LENGTH                                0x1
#define _CM1CON_C1CH0_MASK                                  0x1
#define _CM1CON_C1CH1_POSN                                  0x1
#define _CM1CON_C1CH1_POSITION                              0x1
#define _CM1CON_C1CH1_SIZE                                  0x1
#define _CM1CON_C1CH1_LENGTH                                0x1
#define _CM1CON_C1CH1_MASK                                  0x2
#define _CM1CON_CREF1_POSN                                  0x2
#define _CM1CON_CREF1_POSITION                              0x2
#define _CM1CON_CREF1_SIZE                                  0x1
#define _CM1CON_CREF1_LENGTH                                0x1
#define _CM1CON_CREF1_MASK                                  0x4
#define _CM1CON_EVPOL01_POSN                                0x3
#define _CM1CON_EVPOL01_POSITION                            0x3
#define _CM1CON_EVPOL01_SIZE                                0x1
#define _CM1CON_EVPOL01_LENGTH                              0x1
#define _CM1CON_EVPOL01_MASK                                0x8
#define _CM1CON_EVPOL11_POSN                                0x4
#define _CM1CON_EVPOL11_POSITION                            0x4
#define _CM1CON_EVPOL11_SIZE                                0x1
#define _CM1CON_EVPOL11_LENGTH                              0x1
#define _CM1CON_EVPOL11_MASK                                0x10
#define _CM1CON_CPOL1_POSN                                  0x5
#define _CM1CON_CPOL1_POSITION                              0x5
#define _CM1CON_CPOL1_SIZE                                  0x1
#define _CM1CON_CPOL1_LENGTH                                0x1
#define _CM1CON_CPOL1_MASK                                  0x20
#define _CM1CON_COE1_POSN                                   0x6
#define _CM1CON_COE1_POSITION                               0x6
#define _CM1CON_COE1_SIZE                                   0x1
#define _CM1CON_COE1_LENGTH                                 0x1
#define _CM1CON_COE1_MASK                                   0x40
#define _CM1CON_CON1_POSN                                   0x7
#define _CM1CON_CON1_POSITION                               0x7
#define _CM1CON_CON1_SIZE                                   0x1
#define _CM1CON_CON1_LENGTH                                 0x1
#define _CM1CON_CON1_MASK                                   0x80
#define _CM1CON_CCH01_POSN                                  0x0
#define _CM1CON_CCH01_POSITION                              0x0
#define _CM1CON_CCH01_SIZE                                  0x1
#define _CM1CON_CCH01_LENGTH                                0x1
#define _CM1CON_CCH01_MASK                                  0x1
#define _CM1CON_CCH11_POSN                                  0x1
#define _CM1CON_CCH11_POSITION                              0x1
#define _CM1CON_CCH11_SIZE                                  0x1
#define _CM1CON_CCH11_LENGTH                                0x1
#define _CM1CON_CCH11_MASK                                  0x2
// alias bitfield definitions
typedef union {
    struct {
        unsigned CCH                    :2;
        unsigned CREF                   :1;
        unsigned EVPOL                  :2;
        unsigned CPOL                   :1;
        unsigned COE                    :1;
        unsigned CON                    :1;
    };
    struct {
        unsigned CCH0                   :1;
        unsigned CCH1                   :1;
        unsigned                        :1;
        unsigned EVPOL0                 :1;
        unsigned EVPOL1                 :1;
    };
    struct {
        unsigned C1CH0                  :1;
        unsigned C1CH1                  :1;
        unsigned CREF1                  :1;
        unsigned EVPOL01                :1;
        unsigned EVPOL11                :1;
        unsigned CPOL1                  :1;
        unsigned COE1                   :1;
        unsigned CON1                   :1;
    };
    struct {
        unsigned CCH01                  :1;
        unsigned CCH11                  :1;
    };
} CM1CON1bits_t;
extern volatile CM1CON1bits_t CM1CON1bits __at(0xF54);
// bitfield macros
#define _CM1CON1_CCH_POSN                                   0x0
#define _CM1CON1_CCH_POSITION                               0x0
#define _CM1CON1_CCH_SIZE                                   0x2
#define _CM1CON1_CCH_LENGTH                                 0x2
#define _CM1CON1_CCH_MASK                                   0x3
#define _CM1CON1_CREF_POSN                                  0x2
#define _CM1CON1_CREF_POSITION                              0x2
#define _CM1CON1_CREF_SIZE                                  0x1
#define _CM1CON1_CREF_LENGTH                                0x1
#define _CM1CON1_CREF_MASK                                  0x4
#define _CM1CON1_EVPOL_POSN                                 0x3
#define _CM1CON1_EVPOL_POSITION                             0x3
#define _CM1CON1_EVPOL_SIZE                                 0x2
#define _CM1CON1_EVPOL_LENGTH                               0x2
#define _CM1CON1_EVPOL_MASK                                 0x18
#define _CM1CON1_CPOL_POSN                                  0x5
#define _CM1CON1_CPOL_POSITION                              0x5
#define _CM1CON1_CPOL_SIZE                                  0x1
#define _CM1CON1_CPOL_LENGTH                                0x1
#define _CM1CON1_CPOL_MASK                                  0x20
#define _CM1CON1_COE_POSN                                   0x6
#define _CM1CON1_COE_POSITION                               0x6
#define _CM1CON1_COE_SIZE                                   0x1
#define _CM1CON1_COE_LENGTH                                 0x1
#define _CM1CON1_COE_MASK                                   0x40
#define _CM1CON1_CON_POSN                                   0x7
#define _CM1CON1_CON_POSITION                               0x7
#define _CM1CON1_CON_SIZE                                   0x1
#define _CM1CON1_CON_LENGTH                                 0x1
#define _CM1CON1_CON_MASK                                   0x80
#define _CM1CON1_CCH0_POSN                                  0x0
#define _CM1CON1_CCH0_POSITION                              0x0
#define _CM1CON1_CCH0_SIZE                                  0x1
#define _CM1CON1_CCH0_LENGTH                                0x1
#define _CM1CON1_CCH0_MASK                                  0x1
#define _CM1CON1_CCH1_POSN                                  0x1
#define _CM1CON1_CCH1_POSITION                              0x1
#define _CM1CON1_CCH1_SIZE                                  0x1
#define _CM1CON1_CCH1_LENGTH                                0x1
#define _CM1CON1_CCH1_MASK                                  0x2
#define _CM1CON1_EVPOL0_POSN                                0x3
#define _CM1CON1_EVPOL0_POSITION                            0x3
#define _CM1CON1_EVPOL0_SIZE                                0x1
#define _CM1CON1_EVPOL0_LENGTH                              0x1
#define _CM1CON1_EVPOL0_MASK                                0x8
#define _CM1CON1_EVPOL1_POSN                                0x4
#define _CM1CON1_EVPOL1_POSITION                            0x4
#define _CM1CON1_EVPOL1_SIZE                                0x1
#define _CM1CON1_EVPOL1_LENGTH                              0x1
#define _CM1CON1_EVPOL1_MASK                                0x10
#define _CM1CON1_C1CH0_POSN                                 0x0
#define _CM1CON1_C1CH0_POSITION                             0x0
#define _CM1CON1_C1CH0_SIZE                                 0x1
#define _CM1CON1_C1CH0_LENGTH                               0x1
#define _CM1CON1_C1CH0_MASK                                 0x1
#define _CM1CON1_C1CH1_POSN                                 0x1
#define _CM1CON1_C1CH1_POSITION                             0x1
#define _CM1CON1_C1CH1_SIZE                                 0x1
#define _CM1CON1_C1CH1_LENGTH                               0x1
#define _CM1CON1_C1CH1_MASK                                 0x2
#define _CM1CON1_CREF1_POSN                                 0x2
#define _CM1CON1_CREF1_POSITION                             0x2
#define _CM1CON1_CREF1_SIZE                                 0x1
#define _CM1CON1_CREF1_LENGTH                               0x1
#define _CM1CON1_CREF1_MASK                                 0x4
#define _CM1CON1_EVPOL01_POSN                               0x3
#define _CM1CON1_EVPOL01_POSITION                           0x3
#define _CM1CON1_EVPOL01_SIZE                               0x1
#define _CM1CON1_EVPOL01_LENGTH                             0x1
#define _CM1CON1_EVPOL01_MASK                               0x8
#define _CM1CON1_EVPOL11_POSN                               0x4
#define _CM1CON1_EVPOL11_POSITION                           0x4
#define _CM1CON1_EVPOL11_SIZE                               0x1
#define _CM1CON1_EVPOL11_LENGTH                             0x1
#define _CM1CON1_EVPOL11_MASK                               0x10
#define _CM1CON1_CPOL1_POSN                                 0x5
#define _CM1CON1_CPOL1_POSITION                             0x5
#define _CM1CON1_CPOL1_SIZE                                 0x1
#define _CM1CON1_CPOL1_LENGTH                               0x1
#define _CM1CON1_CPOL1_MASK                                 0x20
#define _CM1CON1_COE1_POSN                                  0x6
#define _CM1CON1_COE1_POSITION                              0x6
#define _CM1CON1_COE1_SIZE                                  0x1
#define _CM1CON1_COE1_LENGTH                                0x1
#define _CM1CON1_COE1_MASK                                  0x40
#define _CM1CON1_CON1_POSN                                  0x7
#define _CM1CON1_CON1_POSITION                              0x7
#define _CM1CON1_CON1_SIZE                                  0x1
#define _CM1CON1_CON1_LENGTH                                0x1
#define _CM1CON1_CON1_MASK                                  0x80
#define _CM1CON1_CCH01_POSN                                 0x0
#define _CM1CON1_CCH01_POSITION                             0x0
#define _CM1CON1_CCH01_SIZE                                 0x1
#define _CM1CON1_CCH01_LENGTH                               0x1
#define _CM1CON1_CCH01_MASK                                 0x1
#define _CM1CON1_CCH11_POSN                                 0x1
#define _CM1CON1_CCH11_POSITION                             0x1
#define _CM1CON1_CCH11_SIZE                                 0x1
#define _CM1CON1_CCH11_LENGTH                               0x1
#define _CM1CON1_CCH11_MASK                                 0x2

// Register: CTMUICON
#define CTMUICON CTMUICON
extern volatile unsigned char           CTMUICON            __at(0xF55);
#ifndef _LIB_BUILD
asm("CTMUICON equ 0F55h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IRNG                   :2;
        unsigned ITRIM                  :6;
    };
    struct {
        unsigned IRNG0                  :1;
        unsigned IRNG1                  :1;
        unsigned ITRIM0                 :1;
        unsigned ITRIM1                 :1;
        unsigned ITRIM2                 :1;
        unsigned ITRIM3                 :1;
        unsigned ITRIM4                 :1;
        unsigned ITRIM5                 :1;
    };
} CTMUICONbits_t;
extern volatile CTMUICONbits_t CTMUICONbits __at(0xF55);
// bitfield macros
#define _CTMUICON_IRNG_POSN                                 0x0
#define _CTMUICON_IRNG_POSITION                             0x0
#define _CTMUICON_IRNG_SIZE                                 0x2
#define _CTMUICON_IRNG_LENGTH                               0x2
#define _CTMUICON_IRNG_MASK                                 0x3
#define _CTMUICON_ITRIM_POSN                                0x2
#define _CTMUICON_ITRIM_POSITION                            0x2
#define _CTMUICON_ITRIM_SIZE                                0x6
#define _CTMUICON_ITRIM_LENGTH                              0x6
#define _CTMUICON_ITRIM_MASK                                0xFC
#define _CTMUICON_IRNG0_POSN                                0x0
#define _CTMUICON_IRNG0_POSITION                            0x0
#define _CTMUICON_IRNG0_SIZE                                0x1
#define _CTMUICON_IRNG0_LENGTH                              0x1
#define _CTMUICON_IRNG0_MASK                                0x1
#define _CTMUICON_IRNG1_POSN                                0x1
#define _CTMUICON_IRNG1_POSITION                            0x1
#define _CTMUICON_IRNG1_SIZE                                0x1
#define _CTMUICON_IRNG1_LENGTH                              0x1
#define _CTMUICON_IRNG1_MASK                                0x2
#define _CTMUICON_ITRIM0_POSN                               0x2
#define _CTMUICON_ITRIM0_POSITION                           0x2
#define _CTMUICON_ITRIM0_SIZE                               0x1
#define _CTMUICON_ITRIM0_LENGTH                             0x1
#define _CTMUICON_ITRIM0_MASK                               0x4
#define _CTMUICON_ITRIM1_POSN                               0x3
#define _CTMUICON_ITRIM1_POSITION                           0x3
#define _CTMUICON_ITRIM1_SIZE                               0x1
#define _CTMUICON_ITRIM1_LENGTH                             0x1
#define _CTMUICON_ITRIM1_MASK                               0x8
#define _CTMUICON_ITRIM2_POSN                               0x4
#define _CTMUICON_ITRIM2_POSITION                           0x4
#define _CTMUICON_ITRIM2_SIZE                               0x1
#define _CTMUICON_ITRIM2_LENGTH                             0x1
#define _CTMUICON_ITRIM2_MASK                               0x10
#define _CTMUICON_ITRIM3_POSN                               0x5
#define _CTMUICON_ITRIM3_POSITION                           0x5
#define _CTMUICON_ITRIM3_SIZE                               0x1
#define _CTMUICON_ITRIM3_LENGTH                             0x1
#define _CTMUICON_ITRIM3_MASK                               0x20
#define _CTMUICON_ITRIM4_POSN                               0x6
#define _CTMUICON_ITRIM4_POSITION                           0x6
#define _CTMUICON_ITRIM4_SIZE                               0x1
#define _CTMUICON_ITRIM4_LENGTH                             0x1
#define _CTMUICON_ITRIM4_MASK                               0x40
#define _CTMUICON_ITRIM5_POSN                               0x7
#define _CTMUICON_ITRIM5_POSITION                           0x7
#define _CTMUICON_ITRIM5_SIZE                               0x1
#define _CTMUICON_ITRIM5_LENGTH                             0x1
#define _CTMUICON_ITRIM5_MASK                               0x80

// Register: CTMUCONL
#define CTMUCONL CTMUCONL
extern volatile unsigned char           CTMUCONL            __at(0xF56);
#ifndef _LIB_BUILD
asm("CTMUCONL equ 0F56h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EDG1STAT               :1;
        unsigned EDG2STAT               :1;
        unsigned EDG1SEL                :2;
        unsigned EDG1POL                :1;
        unsigned EDG2SEL                :2;
        unsigned EDG2POL                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EDG1SEL0               :1;
        unsigned EDG1SEL1               :1;
        unsigned                        :1;
        unsigned EDG2SEL0               :1;
        unsigned EDG2SEL1               :1;
    };
} CTMUCONLbits_t;
extern volatile CTMUCONLbits_t CTMUCONLbits __at(0xF56);
// bitfield macros
#define _CTMUCONL_EDG1STAT_POSN                             0x0
#define _CTMUCONL_EDG1STAT_POSITION                         0x0
#define _CTMUCONL_EDG1STAT_SIZE                             0x1
#define _CTMUCONL_EDG1STAT_LENGTH                           0x1
#define _CTMUCONL_EDG1STAT_MASK                             0x1
#define _CTMUCONL_EDG2STAT_POSN                             0x1
#define _CTMUCONL_EDG2STAT_POSITION                         0x1
#define _CTMUCONL_EDG2STAT_SIZE                             0x1
#define _CTMUCONL_EDG2STAT_LENGTH                           0x1
#define _CTMUCONL_EDG2STAT_MASK                             0x2
#define _CTMUCONL_EDG1SEL_POSN                              0x2
#define _CTMUCONL_EDG1SEL_POSITION                          0x2
#define _CTMUCONL_EDG1SEL_SIZE                              0x2
#define _CTMUCONL_EDG1SEL_LENGTH                            0x2
#define _CTMUCONL_EDG1SEL_MASK                              0xC
#define _CTMUCONL_EDG1POL_POSN                              0x4
#define _CTMUCONL_EDG1POL_POSITION                          0x4
#define _CTMUCONL_EDG1POL_SIZE                              0x1
#define _CTMUCONL_EDG1POL_LENGTH                            0x1
#define _CTMUCONL_EDG1POL_MASK                              0x10
#define _CTMUCONL_EDG2SEL_POSN                              0x5
#define _CTMUCONL_EDG2SEL_POSITION                          0x5
#define _CTMUCONL_EDG2SEL_SIZE                              0x2
#define _CTMUCONL_EDG2SEL_LENGTH                            0x2
#define _CTMUCONL_EDG2SEL_MASK                              0x60
#define _CTMUCONL_EDG2POL_POSN                              0x7
#define _CTMUCONL_EDG2POL_POSITION                          0x7
#define _CTMUCONL_EDG2POL_SIZE                              0x1
#define _CTMUCONL_EDG2POL_LENGTH                            0x1
#define _CTMUCONL_EDG2POL_MASK                              0x80
#define _CTMUCONL_EDG1SEL0_POSN                             0x2
#define _CTMUCONL_EDG1SEL0_POSITION                         0x2
#define _CTMUCONL_EDG1SEL0_SIZE                             0x1
#define _CTMUCONL_EDG1SEL0_LENGTH                           0x1
#define _CTMUCONL_EDG1SEL0_MASK                             0x4
#define _CTMUCONL_EDG1SEL1_POSN                             0x3
#define _CTMUCONL_EDG1SEL1_POSITION                         0x3
#define _CTMUCONL_EDG1SEL1_SIZE                             0x1
#define _CTMUCONL_EDG1SEL1_LENGTH                           0x1
#define _CTMUCONL_EDG1SEL1_MASK                             0x8
#define _CTMUCONL_EDG2SEL0_POSN                             0x5
#define _CTMUCONL_EDG2SEL0_POSITION                         0x5
#define _CTMUCONL_EDG2SEL0_SIZE                             0x1
#define _CTMUCONL_EDG2SEL0_LENGTH                           0x1
#define _CTMUCONL_EDG2SEL0_MASK                             0x20
#define _CTMUCONL_EDG2SEL1_POSN                             0x6
#define _CTMUCONL_EDG2SEL1_POSITION                         0x6
#define _CTMUCONL_EDG2SEL1_SIZE                             0x1
#define _CTMUCONL_EDG2SEL1_LENGTH                           0x1
#define _CTMUCONL_EDG2SEL1_MASK                             0x40

// Register: CTMUCONH
#define CTMUCONH CTMUCONH
extern volatile unsigned char           CTMUCONH            __at(0xF57);
#ifndef _LIB_BUILD
asm("CTMUCONH equ 0F57h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CTTRIG                 :1;
        unsigned IDISSEN                :1;
        unsigned EDGSEQEN               :1;
        unsigned EDGEN                  :1;
        unsigned TGEN                   :1;
        unsigned CTMUSIDL               :1;
        unsigned                        :1;
        unsigned CTMUEN                 :1;
    };
} CTMUCONHbits_t;
extern volatile CTMUCONHbits_t CTMUCONHbits __at(0xF57);
// bitfield macros
#define _CTMUCONH_CTTRIG_POSN                               0x0
#define _CTMUCONH_CTTRIG_POSITION                           0x0
#define _CTMUCONH_CTTRIG_SIZE                               0x1
#define _CTMUCONH_CTTRIG_LENGTH                             0x1
#define _CTMUCONH_CTTRIG_MASK                               0x1
#define _CTMUCONH_IDISSEN_POSN                              0x1
#define _CTMUCONH_IDISSEN_POSITION                          0x1
#define _CTMUCONH_IDISSEN_SIZE                              0x1
#define _CTMUCONH_IDISSEN_LENGTH                            0x1
#define _CTMUCONH_IDISSEN_MASK                              0x2
#define _CTMUCONH_EDGSEQEN_POSN                             0x2
#define _CTMUCONH_EDGSEQEN_POSITION                         0x2
#define _CTMUCONH_EDGSEQEN_SIZE                             0x1
#define _CTMUCONH_EDGSEQEN_LENGTH                           0x1
#define _CTMUCONH_EDGSEQEN_MASK                             0x4
#define _CTMUCONH_EDGEN_POSN                                0x3
#define _CTMUCONH_EDGEN_POSITION                            0x3
#define _CTMUCONH_EDGEN_SIZE                                0x1
#define _CTMUCONH_EDGEN_LENGTH                              0x1
#define _CTMUCONH_EDGEN_MASK                                0x8
#define _CTMUCONH_TGEN_POSN                                 0x4
#define _CTMUCONH_TGEN_POSITION                             0x4
#define _CTMUCONH_TGEN_SIZE                                 0x1
#define _CTMUCONH_TGEN_LENGTH                               0x1
#define _CTMUCONH_TGEN_MASK                                 0x10
#define _CTMUCONH_CTMUSIDL_POSN                             0x5
#define _CTMUCONH_CTMUSIDL_POSITION                         0x5
#define _CTMUCONH_CTMUSIDL_SIZE                             0x1
#define _CTMUCONH_CTMUSIDL_LENGTH                           0x1
#define _CTMUCONH_CTMUSIDL_MASK                             0x20
#define _CTMUCONH_CTMUEN_POSN                               0x7
#define _CTMUCONH_CTMUEN_POSITION                           0x7
#define _CTMUCONH_CTMUEN_SIZE                               0x1
#define _CTMUCONH_CTMUEN_LENGTH                             0x1
#define _CTMUCONH_CTMUEN_MASK                               0x80

// Register: ALRMVAL
#define ALRMVAL ALRMVAL
extern volatile unsigned short          ALRMVAL             __at(0xF58);
#ifndef _LIB_BUILD
asm("ALRMVAL equ 0F58h");
#endif

// Register: ALRMVALL
#define ALRMVALL ALRMVALL
extern volatile unsigned char           ALRMVALL            __at(0xF58);
#ifndef _LIB_BUILD
asm("ALRMVALL equ 0F58h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ALRMVALL               :8;
    };
} ALRMVALLbits_t;
extern volatile ALRMVALLbits_t ALRMVALLbits __at(0xF58);
// bitfield macros
#define _ALRMVALL_ALRMVALL_POSN                             0x0
#define _ALRMVALL_ALRMVALL_POSITION                         0x0
#define _ALRMVALL_ALRMVALL_SIZE                             0x8
#define _ALRMVALL_ALRMVALL_LENGTH                           0x8
#define _ALRMVALL_ALRMVALL_MASK                             0xFF

// Register: ALRMVALH
#define ALRMVALH ALRMVALH
extern volatile unsigned char           ALRMVALH            __at(0xF59);
#ifndef _LIB_BUILD
asm("ALRMVALH equ 0F59h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ALRMVALH               :8;
    };
} ALRMVALHbits_t;
extern volatile ALRMVALHbits_t ALRMVALHbits __at(0xF59);
// bitfield macros
#define _ALRMVALH_ALRMVALH_POSN                             0x0
#define _ALRMVALH_ALRMVALH_POSITION                         0x0
#define _ALRMVALH_ALRMVALH_SIZE                             0x8
#define _ALRMVALH_ALRMVALH_LENGTH                           0x8
#define _ALRMVALH_ALRMVALH_MASK                             0xFF

// Register: ALRMRPT
#define ALRMRPT ALRMRPT
extern volatile unsigned char           ALRMRPT             __at(0xF5A);
#ifndef _LIB_BUILD
asm("ALRMRPT equ 0F5Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ARPT                   :8;
    };
    struct {
        unsigned ARPT0                  :1;
        unsigned ARPT1                  :1;
        unsigned ARPT2                  :1;
        unsigned ARPT3                  :1;
        unsigned ARPT4                  :1;
        unsigned ARPT5                  :1;
        unsigned ARPT6                  :1;
        unsigned ARPT7                  :1;
    };
} ALRMRPTbits_t;
extern volatile ALRMRPTbits_t ALRMRPTbits __at(0xF5A);
// bitfield macros
#define _ALRMRPT_ARPT_POSN                                  0x0
#define _ALRMRPT_ARPT_POSITION                              0x0
#define _ALRMRPT_ARPT_SIZE                                  0x8
#define _ALRMRPT_ARPT_LENGTH                                0x8
#define _ALRMRPT_ARPT_MASK                                  0xFF
#define _ALRMRPT_ARPT0_POSN                                 0x0
#define _ALRMRPT_ARPT0_POSITION                             0x0
#define _ALRMRPT_ARPT0_SIZE                                 0x1
#define _ALRMRPT_ARPT0_LENGTH                               0x1
#define _ALRMRPT_ARPT0_MASK                                 0x1
#define _ALRMRPT_ARPT1_POSN                                 0x1
#define _ALRMRPT_ARPT1_POSITION                             0x1
#define _ALRMRPT_ARPT1_SIZE                                 0x1
#define _ALRMRPT_ARPT1_LENGTH                               0x1
#define _ALRMRPT_ARPT1_MASK                                 0x2
#define _ALRMRPT_ARPT2_POSN                                 0x2
#define _ALRMRPT_ARPT2_POSITION                             0x2
#define _ALRMRPT_ARPT2_SIZE                                 0x1
#define _ALRMRPT_ARPT2_LENGTH                               0x1
#define _ALRMRPT_ARPT2_MASK                                 0x4
#define _ALRMRPT_ARPT3_POSN                                 0x3
#define _ALRMRPT_ARPT3_POSITION                             0x3
#define _ALRMRPT_ARPT3_SIZE                                 0x1
#define _ALRMRPT_ARPT3_LENGTH                               0x1
#define _ALRMRPT_ARPT3_MASK                                 0x8
#define _ALRMRPT_ARPT4_POSN                                 0x4
#define _ALRMRPT_ARPT4_POSITION                             0x4
#define _ALRMRPT_ARPT4_SIZE                                 0x1
#define _ALRMRPT_ARPT4_LENGTH                               0x1
#define _ALRMRPT_ARPT4_MASK                                 0x10
#define _ALRMRPT_ARPT5_POSN                                 0x5
#define _ALRMRPT_ARPT5_POSITION                             0x5
#define _ALRMRPT_ARPT5_SIZE                                 0x1
#define _ALRMRPT_ARPT5_LENGTH                               0x1
#define _ALRMRPT_ARPT5_MASK                                 0x20
#define _ALRMRPT_ARPT6_POSN                                 0x6
#define _ALRMRPT_ARPT6_POSITION                             0x6
#define _ALRMRPT_ARPT6_SIZE                                 0x1
#define _ALRMRPT_ARPT6_LENGTH                               0x1
#define _ALRMRPT_ARPT6_MASK                                 0x40
#define _ALRMRPT_ARPT7_POSN                                 0x7
#define _ALRMRPT_ARPT7_POSITION                             0x7
#define _ALRMRPT_ARPT7_SIZE                                 0x1
#define _ALRMRPT_ARPT7_LENGTH                               0x1
#define _ALRMRPT_ARPT7_MASK                                 0x80

// Register: ALRMCFG
#define ALRMCFG ALRMCFG
extern volatile unsigned char           ALRMCFG             __at(0xF5B);
#ifndef _LIB_BUILD
asm("ALRMCFG equ 0F5Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ALRMPTR                :2;
        unsigned AMASK                  :4;
        unsigned CHIME                  :1;
        unsigned ALRMEN                 :1;
    };
    struct {
        unsigned ALRMPTR0               :1;
        unsigned ALRMPTR1               :1;
        unsigned AMASK0                 :1;
        unsigned AMASK1                 :1;
        unsigned AMASK2                 :1;
        unsigned AMASK3                 :1;
    };
} ALRMCFGbits_t;
extern volatile ALRMCFGbits_t ALRMCFGbits __at(0xF5B);
// bitfield macros
#define _ALRMCFG_ALRMPTR_POSN                               0x0
#define _ALRMCFG_ALRMPTR_POSITION                           0x0
#define _ALRMCFG_ALRMPTR_SIZE                               0x2
#define _ALRMCFG_ALRMPTR_LENGTH                             0x2
#define _ALRMCFG_ALRMPTR_MASK                               0x3
#define _ALRMCFG_AMASK_POSN                                 0x2
#define _ALRMCFG_AMASK_POSITION                             0x2
#define _ALRMCFG_AMASK_SIZE                                 0x4
#define _ALRMCFG_AMASK_LENGTH                               0x4
#define _ALRMCFG_AMASK_MASK                                 0x3C
#define _ALRMCFG_CHIME_POSN                                 0x6
#define _ALRMCFG_CHIME_POSITION                             0x6
#define _ALRMCFG_CHIME_SIZE                                 0x1
#define _ALRMCFG_CHIME_LENGTH                               0x1
#define _ALRMCFG_CHIME_MASK                                 0x40
#define _ALRMCFG_ALRMEN_POSN                                0x7
#define _ALRMCFG_ALRMEN_POSITION                            0x7
#define _ALRMCFG_ALRMEN_SIZE                                0x1
#define _ALRMCFG_ALRMEN_LENGTH                              0x1
#define _ALRMCFG_ALRMEN_MASK                                0x80
#define _ALRMCFG_ALRMPTR0_POSN                              0x0
#define _ALRMCFG_ALRMPTR0_POSITION                          0x0
#define _ALRMCFG_ALRMPTR0_SIZE                              0x1
#define _ALRMCFG_ALRMPTR0_LENGTH                            0x1
#define _ALRMCFG_ALRMPTR0_MASK                              0x1
#define _ALRMCFG_ALRMPTR1_POSN                              0x1
#define _ALRMCFG_ALRMPTR1_POSITION                          0x1
#define _ALRMCFG_ALRMPTR1_SIZE                              0x1
#define _ALRMCFG_ALRMPTR1_LENGTH                            0x1
#define _ALRMCFG_ALRMPTR1_MASK                              0x2
#define _ALRMCFG_AMASK0_POSN                                0x2
#define _ALRMCFG_AMASK0_POSITION                            0x2
#define _ALRMCFG_AMASK0_SIZE                                0x1
#define _ALRMCFG_AMASK0_LENGTH                              0x1
#define _ALRMCFG_AMASK0_MASK                                0x4
#define _ALRMCFG_AMASK1_POSN                                0x3
#define _ALRMCFG_AMASK1_POSITION                            0x3
#define _ALRMCFG_AMASK1_SIZE                                0x1
#define _ALRMCFG_AMASK1_LENGTH                              0x1
#define _ALRMCFG_AMASK1_MASK                                0x8
#define _ALRMCFG_AMASK2_POSN                                0x4
#define _ALRMCFG_AMASK2_POSITION                            0x4
#define _ALRMCFG_AMASK2_SIZE                                0x1
#define _ALRMCFG_AMASK2_LENGTH                              0x1
#define _ALRMCFG_AMASK2_MASK                                0x10
#define _ALRMCFG_AMASK3_POSN                                0x5
#define _ALRMCFG_AMASK3_POSITION                            0x5
#define _ALRMCFG_AMASK3_SIZE                                0x1
#define _ALRMCFG_AMASK3_LENGTH                              0x1
#define _ALRMCFG_AMASK3_MASK                                0x20

// Register: RTCVAL
#define RTCVAL RTCVAL
extern volatile unsigned short          RTCVAL              __at(0xF5C);
#ifndef _LIB_BUILD
asm("RTCVAL equ 0F5Ch");
#endif

// Register: RTCVALL
#define RTCVALL RTCVALL
extern volatile unsigned char           RTCVALL             __at(0xF5C);
#ifndef _LIB_BUILD
asm("RTCVALL equ 0F5Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCVALL                :8;
    };
} RTCVALLbits_t;
extern volatile RTCVALLbits_t RTCVALLbits __at(0xF5C);
// bitfield macros
#define _RTCVALL_RTCVALL_POSN                               0x0
#define _RTCVALL_RTCVALL_POSITION                           0x0
#define _RTCVALL_RTCVALL_SIZE                               0x8
#define _RTCVALL_RTCVALL_LENGTH                             0x8
#define _RTCVALL_RTCVALL_MASK                               0xFF

// Register: RTCVALH
#define RTCVALH RTCVALH
extern volatile unsigned char           RTCVALH             __at(0xF5D);
#ifndef _LIB_BUILD
asm("RTCVALH equ 0F5Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCVALH                :8;
    };
    struct {
        unsigned WAITE0                 :1;
        unsigned WAITE1                 :1;
        unsigned WAITM0                 :1;
        unsigned WAITM1                 :1;
        unsigned WAITM2                 :1;
        unsigned WAITM3                 :1;
        unsigned WAITB0                 :1;
        unsigned WAITB1                 :1;
    };
} RTCVALHbits_t;
extern volatile RTCVALHbits_t RTCVALHbits __at(0xF5D);
// bitfield macros
#define _RTCVALH_RTCVALH_POSN                               0x0
#define _RTCVALH_RTCVALH_POSITION                           0x0
#define _RTCVALH_RTCVALH_SIZE                               0x8
#define _RTCVALH_RTCVALH_LENGTH                             0x8
#define _RTCVALH_RTCVALH_MASK                               0xFF
#define _RTCVALH_WAITE0_POSN                                0x0
#define _RTCVALH_WAITE0_POSITION                            0x0
#define _RTCVALH_WAITE0_SIZE                                0x1
#define _RTCVALH_WAITE0_LENGTH                              0x1
#define _RTCVALH_WAITE0_MASK                                0x1
#define _RTCVALH_WAITE1_POSN                                0x1
#define _RTCVALH_WAITE1_POSITION                            0x1
#define _RTCVALH_WAITE1_SIZE                                0x1
#define _RTCVALH_WAITE1_LENGTH                              0x1
#define _RTCVALH_WAITE1_MASK                                0x2
#define _RTCVALH_WAITM0_POSN                                0x2
#define _RTCVALH_WAITM0_POSITION                            0x2
#define _RTCVALH_WAITM0_SIZE                                0x1
#define _RTCVALH_WAITM0_LENGTH                              0x1
#define _RTCVALH_WAITM0_MASK                                0x4
#define _RTCVALH_WAITM1_POSN                                0x3
#define _RTCVALH_WAITM1_POSITION                            0x3
#define _RTCVALH_WAITM1_SIZE                                0x1
#define _RTCVALH_WAITM1_LENGTH                              0x1
#define _RTCVALH_WAITM1_MASK                                0x8
#define _RTCVALH_WAITM2_POSN                                0x4
#define _RTCVALH_WAITM2_POSITION                            0x4
#define _RTCVALH_WAITM2_SIZE                                0x1
#define _RTCVALH_WAITM2_LENGTH                              0x1
#define _RTCVALH_WAITM2_MASK                                0x10
#define _RTCVALH_WAITM3_POSN                                0x5
#define _RTCVALH_WAITM3_POSITION                            0x5
#define _RTCVALH_WAITM3_SIZE                                0x1
#define _RTCVALH_WAITM3_LENGTH                              0x1
#define _RTCVALH_WAITM3_MASK                                0x20
#define _RTCVALH_WAITB0_POSN                                0x6
#define _RTCVALH_WAITB0_POSITION                            0x6
#define _RTCVALH_WAITB0_SIZE                                0x1
#define _RTCVALH_WAITB0_LENGTH                              0x1
#define _RTCVALH_WAITB0_MASK                                0x40
#define _RTCVALH_WAITB1_POSN                                0x7
#define _RTCVALH_WAITB1_POSITION                            0x7
#define _RTCVALH_WAITB1_SIZE                                0x1
#define _RTCVALH_WAITB1_LENGTH                              0x1
#define _RTCVALH_WAITB1_MASK                                0x80

// Register: RTCCAL
#define RTCCAL RTCCAL
extern volatile unsigned char           RTCCAL              __at(0xF5E);
#ifndef _LIB_BUILD
asm("RTCCAL equ 0F5Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CAL                    :8;
    };
    struct {
        unsigned CAL0                   :1;
        unsigned CAL1                   :1;
        unsigned CAL2                   :1;
        unsigned CAL3                   :1;
        unsigned CAL4                   :1;
        unsigned CAL5                   :1;
        unsigned CAL6                   :1;
        unsigned CAL7                   :1;
    };
} RTCCALbits_t;
extern volatile RTCCALbits_t RTCCALbits __at(0xF5E);
// bitfield macros
#define _RTCCAL_CAL_POSN                                    0x0
#define _RTCCAL_CAL_POSITION                                0x0
#define _RTCCAL_CAL_SIZE                                    0x8
#define _RTCCAL_CAL_LENGTH                                  0x8
#define _RTCCAL_CAL_MASK                                    0xFF
#define _RTCCAL_CAL0_POSN                                   0x0
#define _RTCCAL_CAL0_POSITION                               0x0
#define _RTCCAL_CAL0_SIZE                                   0x1
#define _RTCCAL_CAL0_LENGTH                                 0x1
#define _RTCCAL_CAL0_MASK                                   0x1
#define _RTCCAL_CAL1_POSN                                   0x1
#define _RTCCAL_CAL1_POSITION                               0x1
#define _RTCCAL_CAL1_SIZE                                   0x1
#define _RTCCAL_CAL1_LENGTH                                 0x1
#define _RTCCAL_CAL1_MASK                                   0x2
#define _RTCCAL_CAL2_POSN                                   0x2
#define _RTCCAL_CAL2_POSITION                               0x2
#define _RTCCAL_CAL2_SIZE                                   0x1
#define _RTCCAL_CAL2_LENGTH                                 0x1
#define _RTCCAL_CAL2_MASK                                   0x4
#define _RTCCAL_CAL3_POSN                                   0x3
#define _RTCCAL_CAL3_POSITION                               0x3
#define _RTCCAL_CAL3_SIZE                                   0x1
#define _RTCCAL_CAL3_LENGTH                                 0x1
#define _RTCCAL_CAL3_MASK                                   0x8
#define _RTCCAL_CAL4_POSN                                   0x4
#define _RTCCAL_CAL4_POSITION                               0x4
#define _RTCCAL_CAL4_SIZE                                   0x1
#define _RTCCAL_CAL4_LENGTH                                 0x1
#define _RTCCAL_CAL4_MASK                                   0x10
#define _RTCCAL_CAL5_POSN                                   0x5
#define _RTCCAL_CAL5_POSITION                               0x5
#define _RTCCAL_CAL5_SIZE                                   0x1
#define _RTCCAL_CAL5_LENGTH                                 0x1
#define _RTCCAL_CAL5_MASK                                   0x20
#define _RTCCAL_CAL6_POSN                                   0x6
#define _RTCCAL_CAL6_POSITION                               0x6
#define _RTCCAL_CAL6_SIZE                                   0x1
#define _RTCCAL_CAL6_LENGTH                                 0x1
#define _RTCCAL_CAL6_MASK                                   0x40
#define _RTCCAL_CAL7_POSN                                   0x7
#define _RTCCAL_CAL7_POSITION                               0x7
#define _RTCCAL_CAL7_SIZE                                   0x1
#define _RTCCAL_CAL7_LENGTH                                 0x1
#define _RTCCAL_CAL7_MASK                                   0x80

// Register: RTCCFG
#define RTCCFG RTCCFG
extern volatile unsigned char           RTCCFG              __at(0xF5F);
#ifndef _LIB_BUILD
asm("RTCCFG equ 0F5Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCPTR                 :2;
        unsigned RTCOE                  :1;
        unsigned HALFSEC                :1;
        unsigned RTCSYNC                :1;
        unsigned RTCWREN                :1;
        unsigned                        :1;
        unsigned RTCEN                  :1;
    };
    struct {
        unsigned RTCPTR0                :1;
        unsigned RTCPTR1                :1;
    };
} RTCCFGbits_t;
extern volatile RTCCFGbits_t RTCCFGbits __at(0xF5F);
// bitfield macros
#define _RTCCFG_RTCPTR_POSN                                 0x0
#define _RTCCFG_RTCPTR_POSITION                             0x0
#define _RTCCFG_RTCPTR_SIZE                                 0x2
#define _RTCCFG_RTCPTR_LENGTH                               0x2
#define _RTCCFG_RTCPTR_MASK                                 0x3
#define _RTCCFG_RTCOE_POSN                                  0x2
#define _RTCCFG_RTCOE_POSITION                              0x2
#define _RTCCFG_RTCOE_SIZE                                  0x1
#define _RTCCFG_RTCOE_LENGTH                                0x1
#define _RTCCFG_RTCOE_MASK                                  0x4
#define _RTCCFG_HALFSEC_POSN                                0x3
#define _RTCCFG_HALFSEC_POSITION                            0x3
#define _RTCCFG_HALFSEC_SIZE                                0x1
#define _RTCCFG_HALFSEC_LENGTH                              0x1
#define _RTCCFG_HALFSEC_MASK                                0x8
#define _RTCCFG_RTCSYNC_POSN                                0x4
#define _RTCCFG_RTCSYNC_POSITION                            0x4
#define _RTCCFG_RTCSYNC_SIZE                                0x1
#define _RTCCFG_RTCSYNC_LENGTH                              0x1
#define _RTCCFG_RTCSYNC_MASK                                0x10
#define _RTCCFG_RTCWREN_POSN                                0x5
#define _RTCCFG_RTCWREN_POSITION                            0x5
#define _RTCCFG_RTCWREN_SIZE                                0x1
#define _RTCCFG_RTCWREN_LENGTH                              0x1
#define _RTCCFG_RTCWREN_MASK                                0x20
#define _RTCCFG_RTCEN_POSN                                  0x7
#define _RTCCFG_RTCEN_POSITION                              0x7
#define _RTCCFG_RTCEN_SIZE                                  0x1
#define _RTCCFG_RTCEN_LENGTH                                0x1
#define _RTCCFG_RTCEN_MASK                                  0x80
#define _RTCCFG_RTCPTR0_POSN                                0x0
#define _RTCCFG_RTCPTR0_POSITION                            0x0
#define _RTCCFG_RTCPTR0_SIZE                                0x1
#define _RTCCFG_RTCPTR0_LENGTH                              0x1
#define _RTCCFG_RTCPTR0_MASK                                0x1
#define _RTCCFG_RTCPTR1_POSN                                0x1
#define _RTCCFG_RTCPTR1_POSITION                            0x1
#define _RTCCFG_RTCPTR1_SIZE                                0x1
#define _RTCCFG_RTCPTR1_LENGTH                              0x1
#define _RTCCFG_RTCPTR1_MASK                                0x2

// Register: PIE6
#define PIE6 PIE6
extern volatile unsigned char           PIE6                __at(0xF60);
#ifndef _LIB_BUILD
asm("PIE6 equ 0F60h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CMP1IE                 :1;
        unsigned CMP2IE                 :1;
        unsigned CMP3IE                 :1;
        unsigned                        :1;
        unsigned EEIE                   :1;
    };
} PIE6bits_t;
extern volatile PIE6bits_t PIE6bits __at(0xF60);
// bitfield macros
#define _PIE6_CMP1IE_POSN                                   0x0
#define _PIE6_CMP1IE_POSITION                               0x0
#define _PIE6_CMP1IE_SIZE                                   0x1
#define _PIE6_CMP1IE_LENGTH                                 0x1
#define _PIE6_CMP1IE_MASK                                   0x1
#define _PIE6_CMP2IE_POSN                                   0x1
#define _PIE6_CMP2IE_POSITION                               0x1
#define _PIE6_CMP2IE_SIZE                                   0x1
#define _PIE6_CMP2IE_LENGTH                                 0x1
#define _PIE6_CMP2IE_MASK                                   0x2
#define _PIE6_CMP3IE_POSN                                   0x2
#define _PIE6_CMP3IE_POSITION                               0x2
#define _PIE6_CMP3IE_SIZE                                   0x1
#define _PIE6_CMP3IE_LENGTH                                 0x1
#define _PIE6_CMP3IE_MASK                                   0x4
#define _PIE6_EEIE_POSN                                     0x4
#define _PIE6_EEIE_POSITION                                 0x4
#define _PIE6_EEIE_SIZE                                     0x1
#define _PIE6_EEIE_LENGTH                                   0x1
#define _PIE6_EEIE_MASK                                     0x10

// Register: EEDATA
#define EEDATA EEDATA
extern volatile unsigned char           EEDATA              __at(0xF61);
#ifndef _LIB_BUILD
asm("EEDATA equ 0F61h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EEDATA                 :8;
    };
} EEDATAbits_t;
extern volatile EEDATAbits_t EEDATAbits __at(0xF61);
// bitfield macros
#define _EEDATA_EEDATA_POSN                                 0x0
#define _EEDATA_EEDATA_POSITION                             0x0
#define _EEDATA_EEDATA_SIZE                                 0x8
#define _EEDATA_EEDATA_LENGTH                               0x8
#define _EEDATA_EEDATA_MASK                                 0xFF

// Register: EEADR
#define EEADR EEADR
extern volatile unsigned char           EEADR               __at(0xF62);
#ifndef _LIB_BUILD
asm("EEADR equ 0F62h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EEADR                  :8;
    };
} EEADRbits_t;
extern volatile EEADRbits_t EEADRbits __at(0xF62);
// bitfield macros
#define _EEADR_EEADR_POSN                                   0x0
#define _EEADR_EEADR_POSITION                               0x0
#define _EEADR_EEADR_SIZE                                   0x8
#define _EEADR_EEADR_LENGTH                                 0x8
#define _EEADR_EEADR_MASK                                   0xFF

// Register: EEADRH
#define EEADRH EEADRH
extern volatile unsigned char           EEADRH              __at(0xF63);
#ifndef _LIB_BUILD
asm("EEADRH equ 0F63h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EEADRH                 :2;
    };
} EEADRHbits_t;
extern volatile EEADRHbits_t EEADRHbits __at(0xF63);
// bitfield macros
#define _EEADRH_EEADRH_POSN                                 0x0
#define _EEADRH_EEADRH_POSITION                             0x0
#define _EEADRH_EEADRH_SIZE                                 0x2
#define _EEADRH_EEADRH_LENGTH                               0x2
#define _EEADRH_EEADRH_MASK                                 0x3

// Register: OSCCON2
#define OSCCON2 OSCCON2
extern volatile unsigned char           OSCCON2             __at(0xF64);
#ifndef _LIB_BUILD
asm("OSCCON2 equ 0F64h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MFIOSEL                :1;
        unsigned MFIOFS                 :1;
        unsigned                        :1;
        unsigned SOSCGO                 :1;
        unsigned                        :2;
        unsigned SOSCRUN                :1;
    };
} OSCCON2bits_t;
extern volatile OSCCON2bits_t OSCCON2bits __at(0xF64);
// bitfield macros
#define _OSCCON2_MFIOSEL_POSN                               0x0
#define _OSCCON2_MFIOSEL_POSITION                           0x0
#define _OSCCON2_MFIOSEL_SIZE                               0x1
#define _OSCCON2_MFIOSEL_LENGTH                             0x1
#define _OSCCON2_MFIOSEL_MASK                               0x1
#define _OSCCON2_MFIOFS_POSN                                0x1
#define _OSCCON2_MFIOFS_POSITION                            0x1
#define _OSCCON2_MFIOFS_SIZE                                0x1
#define _OSCCON2_MFIOFS_LENGTH                              0x1
#define _OSCCON2_MFIOFS_MASK                                0x2
#define _OSCCON2_SOSCGO_POSN                                0x3
#define _OSCCON2_SOSCGO_POSITION                            0x3
#define _OSCCON2_SOSCGO_SIZE                                0x1
#define _OSCCON2_SOSCGO_LENGTH                              0x1
#define _OSCCON2_SOSCGO_MASK                                0x8
#define _OSCCON2_SOSCRUN_POSN                               0x6
#define _OSCCON2_SOSCRUN_POSITION                           0x6
#define _OSCCON2_SOSCRUN_SIZE                               0x1
#define _OSCCON2_SOSCRUN_LENGTH                             0x1
#define _OSCCON2_SOSCRUN_MASK                               0x40

// Register: BAUDCON1
#define BAUDCON1 BAUDCON1
extern volatile unsigned char           BAUDCON1            __at(0xF65);
#ifndef _LIB_BUILD
asm("BAUDCON1 equ 0F65h");
#endif
// aliases
extern volatile unsigned char           BAUDCTL             __at(0xF65);
#ifndef _LIB_BUILD
asm("BAUDCTL equ 0F65h");
#endif
extern volatile unsigned char           BAUDCON             __at(0xF65);
#ifndef _LIB_BUILD
asm("BAUDCON equ 0F65h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned TXCKP                  :1;
        unsigned RXDTP                  :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
    struct {
        unsigned ABDEN1                 :1;
        unsigned WUE1                   :1;
        unsigned                        :1;
        unsigned BRG161                 :1;
        unsigned CKTXP                  :1;
        unsigned DTRXP                  :1;
        unsigned RCIDL1                 :1;
        unsigned ABDOVF1                :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP                   :1;
        unsigned DTRXP1                 :1;
        unsigned RCMT                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP1                  :1;
        unsigned RXDTP1                 :1;
        unsigned RCMT1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXCKP1                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned W4E                    :1;
    };
    struct {
        unsigned                        :5;
        unsigned RXCKP                  :1;
    };
} BAUDCON1bits_t;
extern volatile BAUDCON1bits_t BAUDCON1bits __at(0xF65);
// bitfield macros
#define _BAUDCON1_ABDEN_POSN                                0x0
#define _BAUDCON1_ABDEN_POSITION                            0x0
#define _BAUDCON1_ABDEN_SIZE                                0x1
#define _BAUDCON1_ABDEN_LENGTH                              0x1
#define _BAUDCON1_ABDEN_MASK                                0x1
#define _BAUDCON1_WUE_POSN                                  0x1
#define _BAUDCON1_WUE_POSITION                              0x1
#define _BAUDCON1_WUE_SIZE                                  0x1
#define _BAUDCON1_WUE_LENGTH                                0x1
#define _BAUDCON1_WUE_MASK                                  0x2
#define _BAUDCON1_BRG16_POSN                                0x3
#define _BAUDCON1_BRG16_POSITION                            0x3
#define _BAUDCON1_BRG16_SIZE                                0x1
#define _BAUDCON1_BRG16_LENGTH                              0x1
#define _BAUDCON1_BRG16_MASK                                0x8
#define _BAUDCON1_TXCKP_POSN                                0x4
#define _BAUDCON1_TXCKP_POSITION                            0x4
#define _BAUDCON1_TXCKP_SIZE                                0x1
#define _BAUDCON1_TXCKP_LENGTH                              0x1
#define _BAUDCON1_TXCKP_MASK                                0x10
#define _BAUDCON1_RXDTP_POSN                                0x5
#define _BAUDCON1_RXDTP_POSITION                            0x5
#define _BAUDCON1_RXDTP_SIZE                                0x1
#define _BAUDCON1_RXDTP_LENGTH                              0x1
#define _BAUDCON1_RXDTP_MASK                                0x20
#define _BAUDCON1_RCIDL_POSN                                0x6
#define _BAUDCON1_RCIDL_POSITION                            0x6
#define _BAUDCON1_RCIDL_SIZE                                0x1
#define _BAUDCON1_RCIDL_LENGTH                              0x1
#define _BAUDCON1_RCIDL_MASK                                0x40
#define _BAUDCON1_ABDOVF_POSN                               0x7
#define _BAUDCON1_ABDOVF_POSITION                           0x7
#define _BAUDCON1_ABDOVF_SIZE                               0x1
#define _BAUDCON1_ABDOVF_LENGTH                             0x1
#define _BAUDCON1_ABDOVF_MASK                               0x80
#define _BAUDCON1_ABDEN1_POSN                               0x0
#define _BAUDCON1_ABDEN1_POSITION                           0x0
#define _BAUDCON1_ABDEN1_SIZE                               0x1
#define _BAUDCON1_ABDEN1_LENGTH                             0x1
#define _BAUDCON1_ABDEN1_MASK                               0x1
#define _BAUDCON1_WUE1_POSN                                 0x1
#define _BAUDCON1_WUE1_POSITION                             0x1
#define _BAUDCON1_WUE1_SIZE                                 0x1
#define _BAUDCON1_WUE1_LENGTH                               0x1
#define _BAUDCON1_WUE1_MASK                                 0x2
#define _BAUDCON1_BRG161_POSN                               0x3
#define _BAUDCON1_BRG161_POSITION                           0x3
#define _BAUDCON1_BRG161_SIZE                               0x1
#define _BAUDCON1_BRG161_LENGTH                             0x1
#define _BAUDCON1_BRG161_MASK                               0x8
#define _BAUDCON1_CKTXP_POSN                                0x4
#define _BAUDCON1_CKTXP_POSITION                            0x4
#define _BAUDCON1_CKTXP_SIZE                                0x1
#define _BAUDCON1_CKTXP_LENGTH                              0x1
#define _BAUDCON1_CKTXP_MASK                                0x10
#define _BAUDCON1_DTRXP_POSN                                0x5
#define _BAUDCON1_DTRXP_POSITION                            0x5
#define _BAUDCON1_DTRXP_SIZE                                0x1
#define _BAUDCON1_DTRXP_LENGTH                              0x1
#define _BAUDCON1_DTRXP_MASK                                0x20
#define _BAUDCON1_RCIDL1_POSN                               0x6
#define _BAUDCON1_RCIDL1_POSITION                           0x6
#define _BAUDCON1_RCIDL1_SIZE                               0x1
#define _BAUDCON1_RCIDL1_LENGTH                             0x1
#define _BAUDCON1_RCIDL1_MASK                               0x40
#define _BAUDCON1_ABDOVF1_POSN                              0x7
#define _BAUDCON1_ABDOVF1_POSITION                          0x7
#define _BAUDCON1_ABDOVF1_SIZE                              0x1
#define _BAUDCON1_ABDOVF1_LENGTH                            0x1
#define _BAUDCON1_ABDOVF1_MASK                              0x80
#define _BAUDCON1_SCKP_POSN                                 0x4
#define _BAUDCON1_SCKP_POSITION                             0x4
#define _BAUDCON1_SCKP_SIZE                                 0x1
#define _BAUDCON1_SCKP_LENGTH                               0x1
#define _BAUDCON1_SCKP_MASK                                 0x10
#define _BAUDCON1_DTRXP1_POSN                               0x5
#define _BAUDCON1_DTRXP1_POSITION                           0x5
#define _BAUDCON1_DTRXP1_SIZE                               0x1
#define _BAUDCON1_DTRXP1_LENGTH                             0x1
#define _BAUDCON1_DTRXP1_MASK                               0x20
#define _BAUDCON1_RCMT_POSN                                 0x6
#define _BAUDCON1_RCMT_POSITION                             0x6
#define _BAUDCON1_RCMT_SIZE                                 0x1
#define _BAUDCON1_RCMT_LENGTH                               0x1
#define _BAUDCON1_RCMT_MASK                                 0x40
#define _BAUDCON1_SCKP1_POSN                                0x4
#define _BAUDCON1_SCKP1_POSITION                            0x4
#define _BAUDCON1_SCKP1_SIZE                                0x1
#define _BAUDCON1_SCKP1_LENGTH                              0x1
#define _BAUDCON1_SCKP1_MASK                                0x10
#define _BAUDCON1_RXDTP1_POSN                               0x5
#define _BAUDCON1_RXDTP1_POSITION                           0x5
#define _BAUDCON1_RXDTP1_SIZE                               0x1
#define _BAUDCON1_RXDTP1_LENGTH                             0x1
#define _BAUDCON1_RXDTP1_MASK                               0x20
#define _BAUDCON1_RCMT1_POSN                                0x6
#define _BAUDCON1_RCMT1_POSITION                            0x6
#define _BAUDCON1_RCMT1_SIZE                                0x1
#define _BAUDCON1_RCMT1_LENGTH                              0x1
#define _BAUDCON1_RCMT1_MASK                                0x40
#define _BAUDCON1_TXCKP1_POSN                               0x4
#define _BAUDCON1_TXCKP1_POSITION                           0x4
#define _BAUDCON1_TXCKP1_SIZE                               0x1
#define _BAUDCON1_TXCKP1_LENGTH                             0x1
#define _BAUDCON1_TXCKP1_MASK                               0x10
#define _BAUDCON1_W4E_POSN                                  0x1
#define _BAUDCON1_W4E_POSITION                              0x1
#define _BAUDCON1_W4E_SIZE                                  0x1
#define _BAUDCON1_W4E_LENGTH                                0x1
#define _BAUDCON1_W4E_MASK                                  0x2
#define _BAUDCON1_RXCKP_POSN                                0x5
#define _BAUDCON1_RXCKP_POSITION                            0x5
#define _BAUDCON1_RXCKP_SIZE                                0x1
#define _BAUDCON1_RXCKP_LENGTH                              0x1
#define _BAUDCON1_RXCKP_MASK                                0x20
// alias bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned TXCKP                  :1;
        unsigned RXDTP                  :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
    struct {
        unsigned ABDEN1                 :1;
        unsigned WUE1                   :1;
        unsigned                        :1;
        unsigned BRG161                 :1;
        unsigned CKTXP                  :1;
        unsigned DTRXP                  :1;
        unsigned RCIDL1                 :1;
        unsigned ABDOVF1                :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP                   :1;
        unsigned DTRXP1                 :1;
        unsigned RCMT                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP1                  :1;
        unsigned RXDTP1                 :1;
        unsigned RCMT1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXCKP1                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned W4E                    :1;
    };
    struct {
        unsigned                        :5;
        unsigned RXCKP                  :1;
    };
} BAUDCTLbits_t;
extern volatile BAUDCTLbits_t BAUDCTLbits __at(0xF65);
// bitfield macros
#define _BAUDCTL_ABDEN_POSN                                 0x0
#define _BAUDCTL_ABDEN_POSITION                             0x0
#define _BAUDCTL_ABDEN_SIZE                                 0x1
#define _BAUDCTL_ABDEN_LENGTH                               0x1
#define _BAUDCTL_ABDEN_MASK                                 0x1
#define _BAUDCTL_WUE_POSN                                   0x1
#define _BAUDCTL_WUE_POSITION                               0x1
#define _BAUDCTL_WUE_SIZE                                   0x1
#define _BAUDCTL_WUE_LENGTH                                 0x1
#define _BAUDCTL_WUE_MASK                                   0x2
#define _BAUDCTL_BRG16_POSN                                 0x3
#define _BAUDCTL_BRG16_POSITION                             0x3
#define _BAUDCTL_BRG16_SIZE                                 0x1
#define _BAUDCTL_BRG16_LENGTH                               0x1
#define _BAUDCTL_BRG16_MASK                                 0x8
#define _BAUDCTL_TXCKP_POSN                                 0x4
#define _BAUDCTL_TXCKP_POSITION                             0x4
#define _BAUDCTL_TXCKP_SIZE                                 0x1
#define _BAUDCTL_TXCKP_LENGTH                               0x1
#define _BAUDCTL_TXCKP_MASK                                 0x10
#define _BAUDCTL_RXDTP_POSN                                 0x5
#define _BAUDCTL_RXDTP_POSITION                             0x5
#define _BAUDCTL_RXDTP_SIZE                                 0x1
#define _BAUDCTL_RXDTP_LENGTH                               0x1
#define _BAUDCTL_RXDTP_MASK                                 0x20
#define _BAUDCTL_RCIDL_POSN                                 0x6
#define _BAUDCTL_RCIDL_POSITION                             0x6
#define _BAUDCTL_RCIDL_SIZE                                 0x1
#define _BAUDCTL_RCIDL_LENGTH                               0x1
#define _BAUDCTL_RCIDL_MASK                                 0x40
#define _BAUDCTL_ABDOVF_POSN                                0x7
#define _BAUDCTL_ABDOVF_POSITION                            0x7
#define _BAUDCTL_ABDOVF_SIZE                                0x1
#define _BAUDCTL_ABDOVF_LENGTH                              0x1
#define _BAUDCTL_ABDOVF_MASK                                0x80
#define _BAUDCTL_ABDEN1_POSN                                0x0
#define _BAUDCTL_ABDEN1_POSITION                            0x0
#define _BAUDCTL_ABDEN1_SIZE                                0x1
#define _BAUDCTL_ABDEN1_LENGTH                              0x1
#define _BAUDCTL_ABDEN1_MASK                                0x1
#define _BAUDCTL_WUE1_POSN                                  0x1
#define _BAUDCTL_WUE1_POSITION                              0x1
#define _BAUDCTL_WUE1_SIZE                                  0x1
#define _BAUDCTL_WUE1_LENGTH                                0x1
#define _BAUDCTL_WUE1_MASK                                  0x2
#define _BAUDCTL_BRG161_POSN                                0x3
#define _BAUDCTL_BRG161_POSITION                            0x3
#define _BAUDCTL_BRG161_SIZE                                0x1
#define _BAUDCTL_BRG161_LENGTH                              0x1
#define _BAUDCTL_BRG161_MASK                                0x8
#define _BAUDCTL_CKTXP_POSN                                 0x4
#define _BAUDCTL_CKTXP_POSITION                             0x4
#define _BAUDCTL_CKTXP_SIZE                                 0x1
#define _BAUDCTL_CKTXP_LENGTH                               0x1
#define _BAUDCTL_CKTXP_MASK                                 0x10
#define _BAUDCTL_DTRXP_POSN                                 0x5
#define _BAUDCTL_DTRXP_POSITION                             0x5
#define _BAUDCTL_DTRXP_SIZE                                 0x1
#define _BAUDCTL_DTRXP_LENGTH                               0x1
#define _BAUDCTL_DTRXP_MASK                                 0x20
#define _BAUDCTL_RCIDL1_POSN                                0x6
#define _BAUDCTL_RCIDL1_POSITION                            0x6
#define _BAUDCTL_RCIDL1_SIZE                                0x1
#define _BAUDCTL_RCIDL1_LENGTH                              0x1
#define _BAUDCTL_RCIDL1_MASK                                0x40
#define _BAUDCTL_ABDOVF1_POSN                               0x7
#define _BAUDCTL_ABDOVF1_POSITION                           0x7
#define _BAUDCTL_ABDOVF1_SIZE                               0x1
#define _BAUDCTL_ABDOVF1_LENGTH                             0x1
#define _BAUDCTL_ABDOVF1_MASK                               0x80
#define _BAUDCTL_SCKP_POSN                                  0x4
#define _BAUDCTL_SCKP_POSITION                              0x4
#define _BAUDCTL_SCKP_SIZE                                  0x1
#define _BAUDCTL_SCKP_LENGTH                                0x1
#define _BAUDCTL_SCKP_MASK                                  0x10
#define _BAUDCTL_DTRXP1_POSN                                0x5
#define _BAUDCTL_DTRXP1_POSITION                            0x5
#define _BAUDCTL_DTRXP1_SIZE                                0x1
#define _BAUDCTL_DTRXP1_LENGTH                              0x1
#define _BAUDCTL_DTRXP1_MASK                                0x20
#define _BAUDCTL_RCMT_POSN                                  0x6
#define _BAUDCTL_RCMT_POSITION                              0x6
#define _BAUDCTL_RCMT_SIZE                                  0x1
#define _BAUDCTL_RCMT_LENGTH                                0x1
#define _BAUDCTL_RCMT_MASK                                  0x40
#define _BAUDCTL_SCKP1_POSN                                 0x4
#define _BAUDCTL_SCKP1_POSITION                             0x4
#define _BAUDCTL_SCKP1_SIZE                                 0x1
#define _BAUDCTL_SCKP1_LENGTH                               0x1
#define _BAUDCTL_SCKP1_MASK                                 0x10
#define _BAUDCTL_RXDTP1_POSN                                0x5
#define _BAUDCTL_RXDTP1_POSITION                            0x5
#define _BAUDCTL_RXDTP1_SIZE                                0x1
#define _BAUDCTL_RXDTP1_LENGTH                              0x1
#define _BAUDCTL_RXDTP1_MASK                                0x20
#define _BAUDCTL_RCMT1_POSN                                 0x6
#define _BAUDCTL_RCMT1_POSITION                             0x6
#define _BAUDCTL_RCMT1_SIZE                                 0x1
#define _BAUDCTL_RCMT1_LENGTH                               0x1
#define _BAUDCTL_RCMT1_MASK                                 0x40
#define _BAUDCTL_TXCKP1_POSN                                0x4
#define _BAUDCTL_TXCKP1_POSITION                            0x4
#define _BAUDCTL_TXCKP1_SIZE                                0x1
#define _BAUDCTL_TXCKP1_LENGTH                              0x1
#define _BAUDCTL_TXCKP1_MASK                                0x10
#define _BAUDCTL_W4E_POSN                                   0x1
#define _BAUDCTL_W4E_POSITION                               0x1
#define _BAUDCTL_W4E_SIZE                                   0x1
#define _BAUDCTL_W4E_LENGTH                                 0x1
#define _BAUDCTL_W4E_MASK                                   0x2
#define _BAUDCTL_RXCKP_POSN                                 0x5
#define _BAUDCTL_RXCKP_POSITION                             0x5
#define _BAUDCTL_RXCKP_SIZE                                 0x1
#define _BAUDCTL_RXCKP_LENGTH                               0x1
#define _BAUDCTL_RXCKP_MASK                                 0x20
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned TXCKP                  :1;
        unsigned RXDTP                  :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
    struct {
        unsigned ABDEN1                 :1;
        unsigned WUE1                   :1;
        unsigned                        :1;
        unsigned BRG161                 :1;
        unsigned CKTXP                  :1;
        unsigned DTRXP                  :1;
        unsigned RCIDL1                 :1;
        unsigned ABDOVF1                :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP                   :1;
        unsigned DTRXP1                 :1;
        unsigned RCMT                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP1                  :1;
        unsigned RXDTP1                 :1;
        unsigned RCMT1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXCKP1                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned W4E                    :1;
    };
    struct {
        unsigned                        :5;
        unsigned RXCKP                  :1;
    };
} BAUDCONbits_t;
extern volatile BAUDCONbits_t BAUDCONbits __at(0xF65);
// bitfield macros
#define _BAUDCON_ABDEN_POSN                                 0x0
#define _BAUDCON_ABDEN_POSITION                             0x0
#define _BAUDCON_ABDEN_SIZE                                 0x1
#define _BAUDCON_ABDEN_LENGTH                               0x1
#define _BAUDCON_ABDEN_MASK                                 0x1
#define _BAUDCON_WUE_POSN                                   0x1
#define _BAUDCON_WUE_POSITION                               0x1
#define _BAUDCON_WUE_SIZE                                   0x1
#define _BAUDCON_WUE_LENGTH                                 0x1
#define _BAUDCON_WUE_MASK                                   0x2
#define _BAUDCON_BRG16_POSN                                 0x3
#define _BAUDCON_BRG16_POSITION                             0x3
#define _BAUDCON_BRG16_SIZE                                 0x1
#define _BAUDCON_BRG16_LENGTH                               0x1
#define _BAUDCON_BRG16_MASK                                 0x8
#define _BAUDCON_TXCKP_POSN                                 0x4
#define _BAUDCON_TXCKP_POSITION                             0x4
#define _BAUDCON_TXCKP_SIZE                                 0x1
#define _BAUDCON_TXCKP_LENGTH                               0x1
#define _BAUDCON_TXCKP_MASK                                 0x10
#define _BAUDCON_RXDTP_POSN                                 0x5
#define _BAUDCON_RXDTP_POSITION                             0x5
#define _BAUDCON_RXDTP_SIZE                                 0x1
#define _BAUDCON_RXDTP_LENGTH                               0x1
#define _BAUDCON_RXDTP_MASK                                 0x20
#define _BAUDCON_RCIDL_POSN                                 0x6
#define _BAUDCON_RCIDL_POSITION                             0x6
#define _BAUDCON_RCIDL_SIZE                                 0x1
#define _BAUDCON_RCIDL_LENGTH                               0x1
#define _BAUDCON_RCIDL_MASK                                 0x40
#define _BAUDCON_ABDOVF_POSN                                0x7
#define _BAUDCON_ABDOVF_POSITION                            0x7
#define _BAUDCON_ABDOVF_SIZE                                0x1
#define _BAUDCON_ABDOVF_LENGTH                              0x1
#define _BAUDCON_ABDOVF_MASK                                0x80
#define _BAUDCON_ABDEN1_POSN                                0x0
#define _BAUDCON_ABDEN1_POSITION                            0x0
#define _BAUDCON_ABDEN1_SIZE                                0x1
#define _BAUDCON_ABDEN1_LENGTH                              0x1
#define _BAUDCON_ABDEN1_MASK                                0x1
#define _BAUDCON_WUE1_POSN                                  0x1
#define _BAUDCON_WUE1_POSITION                              0x1
#define _BAUDCON_WUE1_SIZE                                  0x1
#define _BAUDCON_WUE1_LENGTH                                0x1
#define _BAUDCON_WUE1_MASK                                  0x2
#define _BAUDCON_BRG161_POSN                                0x3
#define _BAUDCON_BRG161_POSITION                            0x3
#define _BAUDCON_BRG161_SIZE                                0x1
#define _BAUDCON_BRG161_LENGTH                              0x1
#define _BAUDCON_BRG161_MASK                                0x8
#define _BAUDCON_CKTXP_POSN                                 0x4
#define _BAUDCON_CKTXP_POSITION                             0x4
#define _BAUDCON_CKTXP_SIZE                                 0x1
#define _BAUDCON_CKTXP_LENGTH                               0x1
#define _BAUDCON_CKTXP_MASK                                 0x10
#define _BAUDCON_DTRXP_POSN                                 0x5
#define _BAUDCON_DTRXP_POSITION                             0x5
#define _BAUDCON_DTRXP_SIZE                                 0x1
#define _BAUDCON_DTRXP_LENGTH                               0x1
#define _BAUDCON_DTRXP_MASK                                 0x20
#define _BAUDCON_RCIDL1_POSN                                0x6
#define _BAUDCON_RCIDL1_POSITION                            0x6
#define _BAUDCON_RCIDL1_SIZE                                0x1
#define _BAUDCON_RCIDL1_LENGTH                              0x1
#define _BAUDCON_RCIDL1_MASK                                0x40
#define _BAUDCON_ABDOVF1_POSN                               0x7
#define _BAUDCON_ABDOVF1_POSITION                           0x7
#define _BAUDCON_ABDOVF1_SIZE                               0x1
#define _BAUDCON_ABDOVF1_LENGTH                             0x1
#define _BAUDCON_ABDOVF1_MASK                               0x80
#define _BAUDCON_SCKP_POSN                                  0x4
#define _BAUDCON_SCKP_POSITION                              0x4
#define _BAUDCON_SCKP_SIZE                                  0x1
#define _BAUDCON_SCKP_LENGTH                                0x1
#define _BAUDCON_SCKP_MASK                                  0x10
#define _BAUDCON_DTRXP1_POSN                                0x5
#define _BAUDCON_DTRXP1_POSITION                            0x5
#define _BAUDCON_DTRXP1_SIZE                                0x1
#define _BAUDCON_DTRXP1_LENGTH                              0x1
#define _BAUDCON_DTRXP1_MASK                                0x20
#define _BAUDCON_RCMT_POSN                                  0x6
#define _BAUDCON_RCMT_POSITION                              0x6
#define _BAUDCON_RCMT_SIZE                                  0x1
#define _BAUDCON_RCMT_LENGTH                                0x1
#define _BAUDCON_RCMT_MASK                                  0x40
#define _BAUDCON_SCKP1_POSN                                 0x4
#define _BAUDCON_SCKP1_POSITION                             0x4
#define _BAUDCON_SCKP1_SIZE                                 0x1
#define _BAUDCON_SCKP1_LENGTH                               0x1
#define _BAUDCON_SCKP1_MASK                                 0x10
#define _BAUDCON_RXDTP1_POSN                                0x5
#define _BAUDCON_RXDTP1_POSITION                            0x5
#define _BAUDCON_RXDTP1_SIZE                                0x1
#define _BAUDCON_RXDTP1_LENGTH                              0x1
#define _BAUDCON_RXDTP1_MASK                                0x20
#define _BAUDCON_RCMT1_POSN                                 0x6
#define _BAUDCON_RCMT1_POSITION                             0x6
#define _BAUDCON_RCMT1_SIZE                                 0x1
#define _BAUDCON_RCMT1_LENGTH                               0x1
#define _BAUDCON_RCMT1_MASK                                 0x40
#define _BAUDCON_TXCKP1_POSN                                0x4
#define _BAUDCON_TXCKP1_POSITION                            0x4
#define _BAUDCON_TXCKP1_SIZE                                0x1
#define _BAUDCON_TXCKP1_LENGTH                              0x1
#define _BAUDCON_TXCKP1_MASK                                0x10
#define _BAUDCON_W4E_POSN                                   0x1
#define _BAUDCON_W4E_POSITION                               0x1
#define _BAUDCON_W4E_SIZE                                   0x1
#define _BAUDCON_W4E_LENGTH                                 0x1
#define _BAUDCON_W4E_MASK                                   0x2
#define _BAUDCON_RXCKP_POSN                                 0x5
#define _BAUDCON_RXCKP_POSITION                             0x5
#define _BAUDCON_RXCKP_SIZE                                 0x1
#define _BAUDCON_RXCKP_LENGTH                               0x1
#define _BAUDCON_RXCKP_MASK                                 0x20

// Register: LCDDATA0
#define LCDDATA0 LCDDATA0
extern volatile unsigned char           LCDDATA0            __at(0xF66);
#ifndef _LIB_BUILD
asm("LCDDATA0 equ 0F66h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S00C0                  :1;
        unsigned S01C0                  :1;
        unsigned S02C0                  :1;
        unsigned S03C0                  :1;
        unsigned S04C0                  :1;
        unsigned S05C0                  :1;
        unsigned S06C0                  :1;
        unsigned S07C0                  :1;
    };
} LCDDATA0bits_t;
extern volatile LCDDATA0bits_t LCDDATA0bits __at(0xF66);
// bitfield macros
#define _LCDDATA0_S00C0_POSN                                0x0
#define _LCDDATA0_S00C0_POSITION                            0x0
#define _LCDDATA0_S00C0_SIZE                                0x1
#define _LCDDATA0_S00C0_LENGTH                              0x1
#define _LCDDATA0_S00C0_MASK                                0x1
#define _LCDDATA0_S01C0_POSN                                0x1
#define _LCDDATA0_S01C0_POSITION                            0x1
#define _LCDDATA0_S01C0_SIZE                                0x1
#define _LCDDATA0_S01C0_LENGTH                              0x1
#define _LCDDATA0_S01C0_MASK                                0x2
#define _LCDDATA0_S02C0_POSN                                0x2
#define _LCDDATA0_S02C0_POSITION                            0x2
#define _LCDDATA0_S02C0_SIZE                                0x1
#define _LCDDATA0_S02C0_LENGTH                              0x1
#define _LCDDATA0_S02C0_MASK                                0x4
#define _LCDDATA0_S03C0_POSN                                0x3
#define _LCDDATA0_S03C0_POSITION                            0x3
#define _LCDDATA0_S03C0_SIZE                                0x1
#define _LCDDATA0_S03C0_LENGTH                              0x1
#define _LCDDATA0_S03C0_MASK                                0x8
#define _LCDDATA0_S04C0_POSN                                0x4
#define _LCDDATA0_S04C0_POSITION                            0x4
#define _LCDDATA0_S04C0_SIZE                                0x1
#define _LCDDATA0_S04C0_LENGTH                              0x1
#define _LCDDATA0_S04C0_MASK                                0x10
#define _LCDDATA0_S05C0_POSN                                0x5
#define _LCDDATA0_S05C0_POSITION                            0x5
#define _LCDDATA0_S05C0_SIZE                                0x1
#define _LCDDATA0_S05C0_LENGTH                              0x1
#define _LCDDATA0_S05C0_MASK                                0x20
#define _LCDDATA0_S06C0_POSN                                0x6
#define _LCDDATA0_S06C0_POSITION                            0x6
#define _LCDDATA0_S06C0_SIZE                                0x1
#define _LCDDATA0_S06C0_LENGTH                              0x1
#define _LCDDATA0_S06C0_MASK                                0x40
#define _LCDDATA0_S07C0_POSN                                0x7
#define _LCDDATA0_S07C0_POSITION                            0x7
#define _LCDDATA0_S07C0_SIZE                                0x1
#define _LCDDATA0_S07C0_LENGTH                              0x1
#define _LCDDATA0_S07C0_MASK                                0x80

// Register: LCDDATA1
#define LCDDATA1 LCDDATA1
extern volatile unsigned char           LCDDATA1            __at(0xF67);
#ifndef _LIB_BUILD
asm("LCDDATA1 equ 0F67h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S08C0                  :1;
        unsigned S09C0                  :1;
        unsigned S10C0                  :1;
        unsigned S11C0                  :1;
        unsigned S12C0                  :1;
        unsigned S13C0                  :1;
        unsigned S14C0                  :1;
        unsigned S15C0                  :1;
    };
} LCDDATA1bits_t;
extern volatile LCDDATA1bits_t LCDDATA1bits __at(0xF67);
// bitfield macros
#define _LCDDATA1_S08C0_POSN                                0x0
#define _LCDDATA1_S08C0_POSITION                            0x0
#define _LCDDATA1_S08C0_SIZE                                0x1
#define _LCDDATA1_S08C0_LENGTH                              0x1
#define _LCDDATA1_S08C0_MASK                                0x1
#define _LCDDATA1_S09C0_POSN                                0x1
#define _LCDDATA1_S09C0_POSITION                            0x1
#define _LCDDATA1_S09C0_SIZE                                0x1
#define _LCDDATA1_S09C0_LENGTH                              0x1
#define _LCDDATA1_S09C0_MASK                                0x2
#define _LCDDATA1_S10C0_POSN                                0x2
#define _LCDDATA1_S10C0_POSITION                            0x2
#define _LCDDATA1_S10C0_SIZE                                0x1
#define _LCDDATA1_S10C0_LENGTH                              0x1
#define _LCDDATA1_S10C0_MASK                                0x4
#define _LCDDATA1_S11C0_POSN                                0x3
#define _LCDDATA1_S11C0_POSITION                            0x3
#define _LCDDATA1_S11C0_SIZE                                0x1
#define _LCDDATA1_S11C0_LENGTH                              0x1
#define _LCDDATA1_S11C0_MASK                                0x8
#define _LCDDATA1_S12C0_POSN                                0x4
#define _LCDDATA1_S12C0_POSITION                            0x4
#define _LCDDATA1_S12C0_SIZE                                0x1
#define _LCDDATA1_S12C0_LENGTH                              0x1
#define _LCDDATA1_S12C0_MASK                                0x10
#define _LCDDATA1_S13C0_POSN                                0x5
#define _LCDDATA1_S13C0_POSITION                            0x5
#define _LCDDATA1_S13C0_SIZE                                0x1
#define _LCDDATA1_S13C0_LENGTH                              0x1
#define _LCDDATA1_S13C0_MASK                                0x20
#define _LCDDATA1_S14C0_POSN                                0x6
#define _LCDDATA1_S14C0_POSITION                            0x6
#define _LCDDATA1_S14C0_SIZE                                0x1
#define _LCDDATA1_S14C0_LENGTH                              0x1
#define _LCDDATA1_S14C0_MASK                                0x40
#define _LCDDATA1_S15C0_POSN                                0x7
#define _LCDDATA1_S15C0_POSITION                            0x7
#define _LCDDATA1_S15C0_SIZE                                0x1
#define _LCDDATA1_S15C0_LENGTH                              0x1
#define _LCDDATA1_S15C0_MASK                                0x80

// Register: LCDDATA2
#define LCDDATA2 LCDDATA2
extern volatile unsigned char           LCDDATA2            __at(0xF68);
#ifndef _LIB_BUILD
asm("LCDDATA2 equ 0F68h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S16C0                  :1;
        unsigned S17C0                  :1;
        unsigned S18C0                  :1;
        unsigned S19C0                  :1;
        unsigned S20C0                  :1;
        unsigned S21C0                  :1;
        unsigned S22C0                  :1;
        unsigned S23C0                  :1;
    };
} LCDDATA2bits_t;
extern volatile LCDDATA2bits_t LCDDATA2bits __at(0xF68);
// bitfield macros
#define _LCDDATA2_S16C0_POSN                                0x0
#define _LCDDATA2_S16C0_POSITION                            0x0
#define _LCDDATA2_S16C0_SIZE                                0x1
#define _LCDDATA2_S16C0_LENGTH                              0x1
#define _LCDDATA2_S16C0_MASK                                0x1
#define _LCDDATA2_S17C0_POSN                                0x1
#define _LCDDATA2_S17C0_POSITION                            0x1
#define _LCDDATA2_S17C0_SIZE                                0x1
#define _LCDDATA2_S17C0_LENGTH                              0x1
#define _LCDDATA2_S17C0_MASK                                0x2
#define _LCDDATA2_S18C0_POSN                                0x2
#define _LCDDATA2_S18C0_POSITION                            0x2
#define _LCDDATA2_S18C0_SIZE                                0x1
#define _LCDDATA2_S18C0_LENGTH                              0x1
#define _LCDDATA2_S18C0_MASK                                0x4
#define _LCDDATA2_S19C0_POSN                                0x3
#define _LCDDATA2_S19C0_POSITION                            0x3
#define _LCDDATA2_S19C0_SIZE                                0x1
#define _LCDDATA2_S19C0_LENGTH                              0x1
#define _LCDDATA2_S19C0_MASK                                0x8
#define _LCDDATA2_S20C0_POSN                                0x4
#define _LCDDATA2_S20C0_POSITION                            0x4
#define _LCDDATA2_S20C0_SIZE                                0x1
#define _LCDDATA2_S20C0_LENGTH                              0x1
#define _LCDDATA2_S20C0_MASK                                0x10
#define _LCDDATA2_S21C0_POSN                                0x5
#define _LCDDATA2_S21C0_POSITION                            0x5
#define _LCDDATA2_S21C0_SIZE                                0x1
#define _LCDDATA2_S21C0_LENGTH                              0x1
#define _LCDDATA2_S21C0_MASK                                0x20
#define _LCDDATA2_S22C0_POSN                                0x6
#define _LCDDATA2_S22C0_POSITION                            0x6
#define _LCDDATA2_S22C0_SIZE                                0x1
#define _LCDDATA2_S22C0_LENGTH                              0x1
#define _LCDDATA2_S22C0_MASK                                0x40
#define _LCDDATA2_S23C0_POSN                                0x7
#define _LCDDATA2_S23C0_POSITION                            0x7
#define _LCDDATA2_S23C0_SIZE                                0x1
#define _LCDDATA2_S23C0_LENGTH                              0x1
#define _LCDDATA2_S23C0_MASK                                0x80

// Register: LCDDATA3
#define LCDDATA3 LCDDATA3
extern volatile unsigned char           LCDDATA3            __at(0xF69);
#ifndef _LIB_BUILD
asm("LCDDATA3 equ 0F69h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S24C0                  :1;
        unsigned S25C0                  :1;
        unsigned S26C0                  :1;
        unsigned S27C0                  :1;
        unsigned S28C0                  :1;
        unsigned S29C0                  :1;
        unsigned S30C0                  :1;
        unsigned S31C0                  :1;
    };
} LCDDATA3bits_t;
extern volatile LCDDATA3bits_t LCDDATA3bits __at(0xF69);
// bitfield macros
#define _LCDDATA3_S24C0_POSN                                0x0
#define _LCDDATA3_S24C0_POSITION                            0x0
#define _LCDDATA3_S24C0_SIZE                                0x1
#define _LCDDATA3_S24C0_LENGTH                              0x1
#define _LCDDATA3_S24C0_MASK                                0x1
#define _LCDDATA3_S25C0_POSN                                0x1
#define _LCDDATA3_S25C0_POSITION                            0x1
#define _LCDDATA3_S25C0_SIZE                                0x1
#define _LCDDATA3_S25C0_LENGTH                              0x1
#define _LCDDATA3_S25C0_MASK                                0x2
#define _LCDDATA3_S26C0_POSN                                0x2
#define _LCDDATA3_S26C0_POSITION                            0x2
#define _LCDDATA3_S26C0_SIZE                                0x1
#define _LCDDATA3_S26C0_LENGTH                              0x1
#define _LCDDATA3_S26C0_MASK                                0x4
#define _LCDDATA3_S27C0_POSN                                0x3
#define _LCDDATA3_S27C0_POSITION                            0x3
#define _LCDDATA3_S27C0_SIZE                                0x1
#define _LCDDATA3_S27C0_LENGTH                              0x1
#define _LCDDATA3_S27C0_MASK                                0x8
#define _LCDDATA3_S28C0_POSN                                0x4
#define _LCDDATA3_S28C0_POSITION                            0x4
#define _LCDDATA3_S28C0_SIZE                                0x1
#define _LCDDATA3_S28C0_LENGTH                              0x1
#define _LCDDATA3_S28C0_MASK                                0x10
#define _LCDDATA3_S29C0_POSN                                0x5
#define _LCDDATA3_S29C0_POSITION                            0x5
#define _LCDDATA3_S29C0_SIZE                                0x1
#define _LCDDATA3_S29C0_LENGTH                              0x1
#define _LCDDATA3_S29C0_MASK                                0x20
#define _LCDDATA3_S30C0_POSN                                0x6
#define _LCDDATA3_S30C0_POSITION                            0x6
#define _LCDDATA3_S30C0_SIZE                                0x1
#define _LCDDATA3_S30C0_LENGTH                              0x1
#define _LCDDATA3_S30C0_MASK                                0x40
#define _LCDDATA3_S31C0_POSN                                0x7
#define _LCDDATA3_S31C0_POSITION                            0x7
#define _LCDDATA3_S31C0_SIZE                                0x1
#define _LCDDATA3_S31C0_LENGTH                              0x1
#define _LCDDATA3_S31C0_MASK                                0x80

// Register: LCDDATA4
#define LCDDATA4 LCDDATA4
extern volatile unsigned char           LCDDATA4            __at(0xF6A);
#ifndef _LIB_BUILD
asm("LCDDATA4 equ 0F6Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S32C0                  :1;
        unsigned S33C0                  :1;
        unsigned S34C0                  :1;
        unsigned S35C0                  :1;
        unsigned S36C0                  :1;
        unsigned S37C0                  :1;
        unsigned S38C0                  :1;
        unsigned S39C0                  :1;
    };
} LCDDATA4bits_t;
extern volatile LCDDATA4bits_t LCDDATA4bits __at(0xF6A);
// bitfield macros
#define _LCDDATA4_S32C0_POSN                                0x0
#define _LCDDATA4_S32C0_POSITION                            0x0
#define _LCDDATA4_S32C0_SIZE                                0x1
#define _LCDDATA4_S32C0_LENGTH                              0x1
#define _LCDDATA4_S32C0_MASK                                0x1
#define _LCDDATA4_S33C0_POSN                                0x1
#define _LCDDATA4_S33C0_POSITION                            0x1
#define _LCDDATA4_S33C0_SIZE                                0x1
#define _LCDDATA4_S33C0_LENGTH                              0x1
#define _LCDDATA4_S33C0_MASK                                0x2
#define _LCDDATA4_S34C0_POSN                                0x2
#define _LCDDATA4_S34C0_POSITION                            0x2
#define _LCDDATA4_S34C0_SIZE                                0x1
#define _LCDDATA4_S34C0_LENGTH                              0x1
#define _LCDDATA4_S34C0_MASK                                0x4
#define _LCDDATA4_S35C0_POSN                                0x3
#define _LCDDATA4_S35C0_POSITION                            0x3
#define _LCDDATA4_S35C0_SIZE                                0x1
#define _LCDDATA4_S35C0_LENGTH                              0x1
#define _LCDDATA4_S35C0_MASK                                0x8
#define _LCDDATA4_S36C0_POSN                                0x4
#define _LCDDATA4_S36C0_POSITION                            0x4
#define _LCDDATA4_S36C0_SIZE                                0x1
#define _LCDDATA4_S36C0_LENGTH                              0x1
#define _LCDDATA4_S36C0_MASK                                0x10
#define _LCDDATA4_S37C0_POSN                                0x5
#define _LCDDATA4_S37C0_POSITION                            0x5
#define _LCDDATA4_S37C0_SIZE                                0x1
#define _LCDDATA4_S37C0_LENGTH                              0x1
#define _LCDDATA4_S37C0_MASK                                0x20
#define _LCDDATA4_S38C0_POSN                                0x6
#define _LCDDATA4_S38C0_POSITION                            0x6
#define _LCDDATA4_S38C0_SIZE                                0x1
#define _LCDDATA4_S38C0_LENGTH                              0x1
#define _LCDDATA4_S38C0_MASK                                0x40
#define _LCDDATA4_S39C0_POSN                                0x7
#define _LCDDATA4_S39C0_POSITION                            0x7
#define _LCDDATA4_S39C0_SIZE                                0x1
#define _LCDDATA4_S39C0_LENGTH                              0x1
#define _LCDDATA4_S39C0_MASK                                0x80

// Register: LCDDATA5
#define LCDDATA5 LCDDATA5
extern volatile unsigned char           LCDDATA5            __at(0xF6B);
#ifndef _LIB_BUILD
asm("LCDDATA5 equ 0F6Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S40C0                  :1;
        unsigned S41C0                  :1;
        unsigned S42C0                  :1;
        unsigned S43C0                  :1;
        unsigned S44C0                  :1;
        unsigned S45C0                  :1;
        unsigned S46C0                  :1;
        unsigned S47C0                  :1;
    };
    struct {
        unsigned S40C15                 :1;
    };
} LCDDATA5bits_t;
extern volatile LCDDATA5bits_t LCDDATA5bits __at(0xF6B);
// bitfield macros
#define _LCDDATA5_S40C0_POSN                                0x0
#define _LCDDATA5_S40C0_POSITION                            0x0
#define _LCDDATA5_S40C0_SIZE                                0x1
#define _LCDDATA5_S40C0_LENGTH                              0x1
#define _LCDDATA5_S40C0_MASK                                0x1
#define _LCDDATA5_S41C0_POSN                                0x1
#define _LCDDATA5_S41C0_POSITION                            0x1
#define _LCDDATA5_S41C0_SIZE                                0x1
#define _LCDDATA5_S41C0_LENGTH                              0x1
#define _LCDDATA5_S41C0_MASK                                0x2
#define _LCDDATA5_S42C0_POSN                                0x2
#define _LCDDATA5_S42C0_POSITION                            0x2
#define _LCDDATA5_S42C0_SIZE                                0x1
#define _LCDDATA5_S42C0_LENGTH                              0x1
#define _LCDDATA5_S42C0_MASK                                0x4
#define _LCDDATA5_S43C0_POSN                                0x3
#define _LCDDATA5_S43C0_POSITION                            0x3
#define _LCDDATA5_S43C0_SIZE                                0x1
#define _LCDDATA5_S43C0_LENGTH                              0x1
#define _LCDDATA5_S43C0_MASK                                0x8
#define _LCDDATA5_S44C0_POSN                                0x4
#define _LCDDATA5_S44C0_POSITION                            0x4
#define _LCDDATA5_S44C0_SIZE                                0x1
#define _LCDDATA5_S44C0_LENGTH                              0x1
#define _LCDDATA5_S44C0_MASK                                0x10
#define _LCDDATA5_S45C0_POSN                                0x5
#define _LCDDATA5_S45C0_POSITION                            0x5
#define _LCDDATA5_S45C0_SIZE                                0x1
#define _LCDDATA5_S45C0_LENGTH                              0x1
#define _LCDDATA5_S45C0_MASK                                0x20
#define _LCDDATA5_S46C0_POSN                                0x6
#define _LCDDATA5_S46C0_POSITION                            0x6
#define _LCDDATA5_S46C0_SIZE                                0x1
#define _LCDDATA5_S46C0_LENGTH                              0x1
#define _LCDDATA5_S46C0_MASK                                0x40
#define _LCDDATA5_S47C0_POSN                                0x7
#define _LCDDATA5_S47C0_POSITION                            0x7
#define _LCDDATA5_S47C0_SIZE                                0x1
#define _LCDDATA5_S47C0_LENGTH                              0x1
#define _LCDDATA5_S47C0_MASK                                0x80
#define _LCDDATA5_S40C15_POSN                               0x0
#define _LCDDATA5_S40C15_POSITION                           0x0
#define _LCDDATA5_S40C15_SIZE                               0x1
#define _LCDDATA5_S40C15_LENGTH                             0x1
#define _LCDDATA5_S40C15_MASK                               0x1

// Register: LCDDATA6
#define LCDDATA6 LCDDATA6
extern volatile unsigned char           LCDDATA6            __at(0xF6C);
#ifndef _LIB_BUILD
asm("LCDDATA6 equ 0F6Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S00C1                  :1;
        unsigned S01C1                  :1;
        unsigned S02C1                  :1;
        unsigned S03C1                  :1;
        unsigned S04C1                  :1;
        unsigned S05C1                  :1;
        unsigned S06C1                  :1;
        unsigned S07C1                  :1;
    };
} LCDDATA6bits_t;
extern volatile LCDDATA6bits_t LCDDATA6bits __at(0xF6C);
// bitfield macros
#define _LCDDATA6_S00C1_POSN                                0x0
#define _LCDDATA6_S00C1_POSITION                            0x0
#define _LCDDATA6_S00C1_SIZE                                0x1
#define _LCDDATA6_S00C1_LENGTH                              0x1
#define _LCDDATA6_S00C1_MASK                                0x1
#define _LCDDATA6_S01C1_POSN                                0x1
#define _LCDDATA6_S01C1_POSITION                            0x1
#define _LCDDATA6_S01C1_SIZE                                0x1
#define _LCDDATA6_S01C1_LENGTH                              0x1
#define _LCDDATA6_S01C1_MASK                                0x2
#define _LCDDATA6_S02C1_POSN                                0x2
#define _LCDDATA6_S02C1_POSITION                            0x2
#define _LCDDATA6_S02C1_SIZE                                0x1
#define _LCDDATA6_S02C1_LENGTH                              0x1
#define _LCDDATA6_S02C1_MASK                                0x4
#define _LCDDATA6_S03C1_POSN                                0x3
#define _LCDDATA6_S03C1_POSITION                            0x3
#define _LCDDATA6_S03C1_SIZE                                0x1
#define _LCDDATA6_S03C1_LENGTH                              0x1
#define _LCDDATA6_S03C1_MASK                                0x8
#define _LCDDATA6_S04C1_POSN                                0x4
#define _LCDDATA6_S04C1_POSITION                            0x4
#define _LCDDATA6_S04C1_SIZE                                0x1
#define _LCDDATA6_S04C1_LENGTH                              0x1
#define _LCDDATA6_S04C1_MASK                                0x10
#define _LCDDATA6_S05C1_POSN                                0x5
#define _LCDDATA6_S05C1_POSITION                            0x5
#define _LCDDATA6_S05C1_SIZE                                0x1
#define _LCDDATA6_S05C1_LENGTH                              0x1
#define _LCDDATA6_S05C1_MASK                                0x20
#define _LCDDATA6_S06C1_POSN                                0x6
#define _LCDDATA6_S06C1_POSITION                            0x6
#define _LCDDATA6_S06C1_SIZE                                0x1
#define _LCDDATA6_S06C1_LENGTH                              0x1
#define _LCDDATA6_S06C1_MASK                                0x40
#define _LCDDATA6_S07C1_POSN                                0x7
#define _LCDDATA6_S07C1_POSITION                            0x7
#define _LCDDATA6_S07C1_SIZE                                0x1
#define _LCDDATA6_S07C1_LENGTH                              0x1
#define _LCDDATA6_S07C1_MASK                                0x80

// Register: LCDDATA7
#define LCDDATA7 LCDDATA7
extern volatile unsigned char           LCDDATA7            __at(0xF6D);
#ifndef _LIB_BUILD
asm("LCDDATA7 equ 0F6Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S08C1                  :1;
        unsigned S09C1                  :1;
        unsigned S10C1                  :1;
        unsigned S11C1                  :1;
        unsigned S12C1                  :1;
        unsigned S13C1                  :1;
        unsigned S14C1                  :1;
        unsigned S15C1                  :1;
    };
} LCDDATA7bits_t;
extern volatile LCDDATA7bits_t LCDDATA7bits __at(0xF6D);
// bitfield macros
#define _LCDDATA7_S08C1_POSN                                0x0
#define _LCDDATA7_S08C1_POSITION                            0x0
#define _LCDDATA7_S08C1_SIZE                                0x1
#define _LCDDATA7_S08C1_LENGTH                              0x1
#define _LCDDATA7_S08C1_MASK                                0x1
#define _LCDDATA7_S09C1_POSN                                0x1
#define _LCDDATA7_S09C1_POSITION                            0x1
#define _LCDDATA7_S09C1_SIZE                                0x1
#define _LCDDATA7_S09C1_LENGTH                              0x1
#define _LCDDATA7_S09C1_MASK                                0x2
#define _LCDDATA7_S10C1_POSN                                0x2
#define _LCDDATA7_S10C1_POSITION                            0x2
#define _LCDDATA7_S10C1_SIZE                                0x1
#define _LCDDATA7_S10C1_LENGTH                              0x1
#define _LCDDATA7_S10C1_MASK                                0x4
#define _LCDDATA7_S11C1_POSN                                0x3
#define _LCDDATA7_S11C1_POSITION                            0x3
#define _LCDDATA7_S11C1_SIZE                                0x1
#define _LCDDATA7_S11C1_LENGTH                              0x1
#define _LCDDATA7_S11C1_MASK                                0x8
#define _LCDDATA7_S12C1_POSN                                0x4
#define _LCDDATA7_S12C1_POSITION                            0x4
#define _LCDDATA7_S12C1_SIZE                                0x1
#define _LCDDATA7_S12C1_LENGTH                              0x1
#define _LCDDATA7_S12C1_MASK                                0x10
#define _LCDDATA7_S13C1_POSN                                0x5
#define _LCDDATA7_S13C1_POSITION                            0x5
#define _LCDDATA7_S13C1_SIZE                                0x1
#define _LCDDATA7_S13C1_LENGTH                              0x1
#define _LCDDATA7_S13C1_MASK                                0x20
#define _LCDDATA7_S14C1_POSN                                0x6
#define _LCDDATA7_S14C1_POSITION                            0x6
#define _LCDDATA7_S14C1_SIZE                                0x1
#define _LCDDATA7_S14C1_LENGTH                              0x1
#define _LCDDATA7_S14C1_MASK                                0x40
#define _LCDDATA7_S15C1_POSN                                0x7
#define _LCDDATA7_S15C1_POSITION                            0x7
#define _LCDDATA7_S15C1_SIZE                                0x1
#define _LCDDATA7_S15C1_LENGTH                              0x1
#define _LCDDATA7_S15C1_MASK                                0x80

// Register: LCDDATA8
#define LCDDATA8 LCDDATA8
extern volatile unsigned char           LCDDATA8            __at(0xF6E);
#ifndef _LIB_BUILD
asm("LCDDATA8 equ 0F6Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S16C1                  :1;
        unsigned S17C1                  :1;
        unsigned S18C1                  :1;
        unsigned S19C1                  :1;
        unsigned S20C1                  :1;
        unsigned S21C1                  :1;
        unsigned S22C1                  :1;
        unsigned S23C1                  :1;
    };
} LCDDATA8bits_t;
extern volatile LCDDATA8bits_t LCDDATA8bits __at(0xF6E);
// bitfield macros
#define _LCDDATA8_S16C1_POSN                                0x0
#define _LCDDATA8_S16C1_POSITION                            0x0
#define _LCDDATA8_S16C1_SIZE                                0x1
#define _LCDDATA8_S16C1_LENGTH                              0x1
#define _LCDDATA8_S16C1_MASK                                0x1
#define _LCDDATA8_S17C1_POSN                                0x1
#define _LCDDATA8_S17C1_POSITION                            0x1
#define _LCDDATA8_S17C1_SIZE                                0x1
#define _LCDDATA8_S17C1_LENGTH                              0x1
#define _LCDDATA8_S17C1_MASK                                0x2
#define _LCDDATA8_S18C1_POSN                                0x2
#define _LCDDATA8_S18C1_POSITION                            0x2
#define _LCDDATA8_S18C1_SIZE                                0x1
#define _LCDDATA8_S18C1_LENGTH                              0x1
#define _LCDDATA8_S18C1_MASK                                0x4
#define _LCDDATA8_S19C1_POSN                                0x3
#define _LCDDATA8_S19C1_POSITION                            0x3
#define _LCDDATA8_S19C1_SIZE                                0x1
#define _LCDDATA8_S19C1_LENGTH                              0x1
#define _LCDDATA8_S19C1_MASK                                0x8
#define _LCDDATA8_S20C1_POSN                                0x4
#define _LCDDATA8_S20C1_POSITION                            0x4
#define _LCDDATA8_S20C1_SIZE                                0x1
#define _LCDDATA8_S20C1_LENGTH                              0x1
#define _LCDDATA8_S20C1_MASK                                0x10
#define _LCDDATA8_S21C1_POSN                                0x5
#define _LCDDATA8_S21C1_POSITION                            0x5
#define _LCDDATA8_S21C1_SIZE                                0x1
#define _LCDDATA8_S21C1_LENGTH                              0x1
#define _LCDDATA8_S21C1_MASK                                0x20
#define _LCDDATA8_S22C1_POSN                                0x6
#define _LCDDATA8_S22C1_POSITION                            0x6
#define _LCDDATA8_S22C1_SIZE                                0x1
#define _LCDDATA8_S22C1_LENGTH                              0x1
#define _LCDDATA8_S22C1_MASK                                0x40
#define _LCDDATA8_S23C1_POSN                                0x7
#define _LCDDATA8_S23C1_POSITION                            0x7
#define _LCDDATA8_S23C1_SIZE                                0x1
#define _LCDDATA8_S23C1_LENGTH                              0x1
#define _LCDDATA8_S23C1_MASK                                0x80

// Register: LCDDATA9
#define LCDDATA9 LCDDATA9
extern volatile unsigned char           LCDDATA9            __at(0xF6F);
#ifndef _LIB_BUILD
asm("LCDDATA9 equ 0F6Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S24C1                  :1;
        unsigned S25C1                  :1;
        unsigned S26C1                  :1;
        unsigned S27C1                  :1;
        unsigned S28C1                  :1;
        unsigned S29C1                  :1;
        unsigned S30C1                  :1;
        unsigned S31C1                  :1;
    };
} LCDDATA9bits_t;
extern volatile LCDDATA9bits_t LCDDATA9bits __at(0xF6F);
// bitfield macros
#define _LCDDATA9_S24C1_POSN                                0x0
#define _LCDDATA9_S24C1_POSITION                            0x0
#define _LCDDATA9_S24C1_SIZE                                0x1
#define _LCDDATA9_S24C1_LENGTH                              0x1
#define _LCDDATA9_S24C1_MASK                                0x1
#define _LCDDATA9_S25C1_POSN                                0x1
#define _LCDDATA9_S25C1_POSITION                            0x1
#define _LCDDATA9_S25C1_SIZE                                0x1
#define _LCDDATA9_S25C1_LENGTH                              0x1
#define _LCDDATA9_S25C1_MASK                                0x2
#define _LCDDATA9_S26C1_POSN                                0x2
#define _LCDDATA9_S26C1_POSITION                            0x2
#define _LCDDATA9_S26C1_SIZE                                0x1
#define _LCDDATA9_S26C1_LENGTH                              0x1
#define _LCDDATA9_S26C1_MASK                                0x4
#define _LCDDATA9_S27C1_POSN                                0x3
#define _LCDDATA9_S27C1_POSITION                            0x3
#define _LCDDATA9_S27C1_SIZE                                0x1
#define _LCDDATA9_S27C1_LENGTH                              0x1
#define _LCDDATA9_S27C1_MASK                                0x8
#define _LCDDATA9_S28C1_POSN                                0x4
#define _LCDDATA9_S28C1_POSITION                            0x4
#define _LCDDATA9_S28C1_SIZE                                0x1
#define _LCDDATA9_S28C1_LENGTH                              0x1
#define _LCDDATA9_S28C1_MASK                                0x10
#define _LCDDATA9_S29C1_POSN                                0x5
#define _LCDDATA9_S29C1_POSITION                            0x5
#define _LCDDATA9_S29C1_SIZE                                0x1
#define _LCDDATA9_S29C1_LENGTH                              0x1
#define _LCDDATA9_S29C1_MASK                                0x20
#define _LCDDATA9_S30C1_POSN                                0x6
#define _LCDDATA9_S30C1_POSITION                            0x6
#define _LCDDATA9_S30C1_SIZE                                0x1
#define _LCDDATA9_S30C1_LENGTH                              0x1
#define _LCDDATA9_S30C1_MASK                                0x40
#define _LCDDATA9_S31C1_POSN                                0x7
#define _LCDDATA9_S31C1_POSITION                            0x7
#define _LCDDATA9_S31C1_SIZE                                0x1
#define _LCDDATA9_S31C1_LENGTH                              0x1
#define _LCDDATA9_S31C1_MASK                                0x80

// Register: LCDDATA10
#define LCDDATA10 LCDDATA10
extern volatile unsigned char           LCDDATA10           __at(0xF70);
#ifndef _LIB_BUILD
asm("LCDDATA10 equ 0F70h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S32C1                  :1;
        unsigned S33C1                  :1;
        unsigned S34C1                  :1;
        unsigned S35C1                  :1;
        unsigned S36C1                  :1;
        unsigned S37C1                  :1;
        unsigned S38C1                  :1;
        unsigned S39C1                  :1;
    };
} LCDDATA10bits_t;
extern volatile LCDDATA10bits_t LCDDATA10bits __at(0xF70);
// bitfield macros
#define _LCDDATA10_S32C1_POSN                               0x0
#define _LCDDATA10_S32C1_POSITION                           0x0
#define _LCDDATA10_S32C1_SIZE                               0x1
#define _LCDDATA10_S32C1_LENGTH                             0x1
#define _LCDDATA10_S32C1_MASK                               0x1
#define _LCDDATA10_S33C1_POSN                               0x1
#define _LCDDATA10_S33C1_POSITION                           0x1
#define _LCDDATA10_S33C1_SIZE                               0x1
#define _LCDDATA10_S33C1_LENGTH                             0x1
#define _LCDDATA10_S33C1_MASK                               0x2
#define _LCDDATA10_S34C1_POSN                               0x2
#define _LCDDATA10_S34C1_POSITION                           0x2
#define _LCDDATA10_S34C1_SIZE                               0x1
#define _LCDDATA10_S34C1_LENGTH                             0x1
#define _LCDDATA10_S34C1_MASK                               0x4
#define _LCDDATA10_S35C1_POSN                               0x3
#define _LCDDATA10_S35C1_POSITION                           0x3
#define _LCDDATA10_S35C1_SIZE                               0x1
#define _LCDDATA10_S35C1_LENGTH                             0x1
#define _LCDDATA10_S35C1_MASK                               0x8
#define _LCDDATA10_S36C1_POSN                               0x4
#define _LCDDATA10_S36C1_POSITION                           0x4
#define _LCDDATA10_S36C1_SIZE                               0x1
#define _LCDDATA10_S36C1_LENGTH                             0x1
#define _LCDDATA10_S36C1_MASK                               0x10
#define _LCDDATA10_S37C1_POSN                               0x5
#define _LCDDATA10_S37C1_POSITION                           0x5
#define _LCDDATA10_S37C1_SIZE                               0x1
#define _LCDDATA10_S37C1_LENGTH                             0x1
#define _LCDDATA10_S37C1_MASK                               0x20
#define _LCDDATA10_S38C1_POSN                               0x6
#define _LCDDATA10_S38C1_POSITION                           0x6
#define _LCDDATA10_S38C1_SIZE                               0x1
#define _LCDDATA10_S38C1_LENGTH                             0x1
#define _LCDDATA10_S38C1_MASK                               0x40
#define _LCDDATA10_S39C1_POSN                               0x7
#define _LCDDATA10_S39C1_POSITION                           0x7
#define _LCDDATA10_S39C1_SIZE                               0x1
#define _LCDDATA10_S39C1_LENGTH                             0x1
#define _LCDDATA10_S39C1_MASK                               0x80

// Register: LCDDATA11
#define LCDDATA11 LCDDATA11
extern volatile unsigned char           LCDDATA11           __at(0xF71);
#ifndef _LIB_BUILD
asm("LCDDATA11 equ 0F71h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S40C1                  :1;
        unsigned S41C1                  :1;
        unsigned S42C1                  :1;
        unsigned S43C1                  :1;
        unsigned S44C1                  :1;
        unsigned S45C1                  :1;
        unsigned S46C1                  :1;
        unsigned S47C1                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned ADMSK1                 :1;
        unsigned ADMSK2                 :1;
        unsigned ADMSK3                 :1;
        unsigned ADMSK4                 :1;
        unsigned ADMSK5                 :1;
    };
} LCDDATA11bits_t;
extern volatile LCDDATA11bits_t LCDDATA11bits __at(0xF71);
// bitfield macros
#define _LCDDATA11_S40C1_POSN                               0x0
#define _LCDDATA11_S40C1_POSITION                           0x0
#define _LCDDATA11_S40C1_SIZE                               0x1
#define _LCDDATA11_S40C1_LENGTH                             0x1
#define _LCDDATA11_S40C1_MASK                               0x1
#define _LCDDATA11_S41C1_POSN                               0x1
#define _LCDDATA11_S41C1_POSITION                           0x1
#define _LCDDATA11_S41C1_SIZE                               0x1
#define _LCDDATA11_S41C1_LENGTH                             0x1
#define _LCDDATA11_S41C1_MASK                               0x2
#define _LCDDATA11_S42C1_POSN                               0x2
#define _LCDDATA11_S42C1_POSITION                           0x2
#define _LCDDATA11_S42C1_SIZE                               0x1
#define _LCDDATA11_S42C1_LENGTH                             0x1
#define _LCDDATA11_S42C1_MASK                               0x4
#define _LCDDATA11_S43C1_POSN                               0x3
#define _LCDDATA11_S43C1_POSITION                           0x3
#define _LCDDATA11_S43C1_SIZE                               0x1
#define _LCDDATA11_S43C1_LENGTH                             0x1
#define _LCDDATA11_S43C1_MASK                               0x8
#define _LCDDATA11_S44C1_POSN                               0x4
#define _LCDDATA11_S44C1_POSITION                           0x4
#define _LCDDATA11_S44C1_SIZE                               0x1
#define _LCDDATA11_S44C1_LENGTH                             0x1
#define _LCDDATA11_S44C1_MASK                               0x10
#define _LCDDATA11_S45C1_POSN                               0x5
#define _LCDDATA11_S45C1_POSITION                           0x5
#define _LCDDATA11_S45C1_SIZE                               0x1
#define _LCDDATA11_S45C1_LENGTH                             0x1
#define _LCDDATA11_S45C1_MASK                               0x20
#define _LCDDATA11_S46C1_POSN                               0x6
#define _LCDDATA11_S46C1_POSITION                           0x6
#define _LCDDATA11_S46C1_SIZE                               0x1
#define _LCDDATA11_S46C1_LENGTH                             0x1
#define _LCDDATA11_S46C1_MASK                               0x40
#define _LCDDATA11_S47C1_POSN                               0x7
#define _LCDDATA11_S47C1_POSITION                           0x7
#define _LCDDATA11_S47C1_SIZE                               0x1
#define _LCDDATA11_S47C1_LENGTH                             0x1
#define _LCDDATA11_S47C1_MASK                               0x80
#define _LCDDATA11_ADMSK1_POSN                              0x1
#define _LCDDATA11_ADMSK1_POSITION                          0x1
#define _LCDDATA11_ADMSK1_SIZE                              0x1
#define _LCDDATA11_ADMSK1_LENGTH                            0x1
#define _LCDDATA11_ADMSK1_MASK                              0x2
#define _LCDDATA11_ADMSK2_POSN                              0x2
#define _LCDDATA11_ADMSK2_POSITION                          0x2
#define _LCDDATA11_ADMSK2_SIZE                              0x1
#define _LCDDATA11_ADMSK2_LENGTH                            0x1
#define _LCDDATA11_ADMSK2_MASK                              0x4
#define _LCDDATA11_ADMSK3_POSN                              0x3
#define _LCDDATA11_ADMSK3_POSITION                          0x3
#define _LCDDATA11_ADMSK3_SIZE                              0x1
#define _LCDDATA11_ADMSK3_LENGTH                            0x1
#define _LCDDATA11_ADMSK3_MASK                              0x8
#define _LCDDATA11_ADMSK4_POSN                              0x4
#define _LCDDATA11_ADMSK4_POSITION                          0x4
#define _LCDDATA11_ADMSK4_SIZE                              0x1
#define _LCDDATA11_ADMSK4_LENGTH                            0x1
#define _LCDDATA11_ADMSK4_MASK                              0x10
#define _LCDDATA11_ADMSK5_POSN                              0x5
#define _LCDDATA11_ADMSK5_POSITION                          0x5
#define _LCDDATA11_ADMSK5_SIZE                              0x1
#define _LCDDATA11_ADMSK5_LENGTH                            0x1
#define _LCDDATA11_ADMSK5_MASK                              0x20

// Register: LCDDATA12
#define LCDDATA12 LCDDATA12
extern volatile unsigned char           LCDDATA12           __at(0xF72);
#ifndef _LIB_BUILD
asm("LCDDATA12 equ 0F72h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S00C2                  :1;
        unsigned S01C2                  :1;
        unsigned S02C2                  :1;
        unsigned S03C2                  :1;
        unsigned S04C2                  :1;
        unsigned S05C2                  :1;
        unsigned S06C2                  :1;
        unsigned S07C2                  :1;
    };
    struct {
        unsigned SSPM012                :1;
        unsigned SSPM112                :1;
        unsigned SSPM212                :1;
        unsigned SSPM312                :1;
    };
} LCDDATA12bits_t;
extern volatile LCDDATA12bits_t LCDDATA12bits __at(0xF72);
// bitfield macros
#define _LCDDATA12_S00C2_POSN                               0x0
#define _LCDDATA12_S00C2_POSITION                           0x0
#define _LCDDATA12_S00C2_SIZE                               0x1
#define _LCDDATA12_S00C2_LENGTH                             0x1
#define _LCDDATA12_S00C2_MASK                               0x1
#define _LCDDATA12_S01C2_POSN                               0x1
#define _LCDDATA12_S01C2_POSITION                           0x1
#define _LCDDATA12_S01C2_SIZE                               0x1
#define _LCDDATA12_S01C2_LENGTH                             0x1
#define _LCDDATA12_S01C2_MASK                               0x2
#define _LCDDATA12_S02C2_POSN                               0x2
#define _LCDDATA12_S02C2_POSITION                           0x2
#define _LCDDATA12_S02C2_SIZE                               0x1
#define _LCDDATA12_S02C2_LENGTH                             0x1
#define _LCDDATA12_S02C2_MASK                               0x4
#define _LCDDATA12_S03C2_POSN                               0x3
#define _LCDDATA12_S03C2_POSITION                           0x3
#define _LCDDATA12_S03C2_SIZE                               0x1
#define _LCDDATA12_S03C2_LENGTH                             0x1
#define _LCDDATA12_S03C2_MASK                               0x8
#define _LCDDATA12_S04C2_POSN                               0x4
#define _LCDDATA12_S04C2_POSITION                           0x4
#define _LCDDATA12_S04C2_SIZE                               0x1
#define _LCDDATA12_S04C2_LENGTH                             0x1
#define _LCDDATA12_S04C2_MASK                               0x10
#define _LCDDATA12_S05C2_POSN                               0x5
#define _LCDDATA12_S05C2_POSITION                           0x5
#define _LCDDATA12_S05C2_SIZE                               0x1
#define _LCDDATA12_S05C2_LENGTH                             0x1
#define _LCDDATA12_S05C2_MASK                               0x20
#define _LCDDATA12_S06C2_POSN                               0x6
#define _LCDDATA12_S06C2_POSITION                           0x6
#define _LCDDATA12_S06C2_SIZE                               0x1
#define _LCDDATA12_S06C2_LENGTH                             0x1
#define _LCDDATA12_S06C2_MASK                               0x40
#define _LCDDATA12_S07C2_POSN                               0x7
#define _LCDDATA12_S07C2_POSITION                           0x7
#define _LCDDATA12_S07C2_SIZE                               0x1
#define _LCDDATA12_S07C2_LENGTH                             0x1
#define _LCDDATA12_S07C2_MASK                               0x80
#define _LCDDATA12_SSPM012_POSN                             0x0
#define _LCDDATA12_SSPM012_POSITION                         0x0
#define _LCDDATA12_SSPM012_SIZE                             0x1
#define _LCDDATA12_SSPM012_LENGTH                           0x1
#define _LCDDATA12_SSPM012_MASK                             0x1
#define _LCDDATA12_SSPM112_POSN                             0x1
#define _LCDDATA12_SSPM112_POSITION                         0x1
#define _LCDDATA12_SSPM112_SIZE                             0x1
#define _LCDDATA12_SSPM112_LENGTH                           0x1
#define _LCDDATA12_SSPM112_MASK                             0x2
#define _LCDDATA12_SSPM212_POSN                             0x2
#define _LCDDATA12_SSPM212_POSITION                         0x2
#define _LCDDATA12_SSPM212_SIZE                             0x1
#define _LCDDATA12_SSPM212_LENGTH                           0x1
#define _LCDDATA12_SSPM212_MASK                             0x4
#define _LCDDATA12_SSPM312_POSN                             0x3
#define _LCDDATA12_SSPM312_POSITION                         0x3
#define _LCDDATA12_SSPM312_SIZE                             0x1
#define _LCDDATA12_SSPM312_LENGTH                           0x1
#define _LCDDATA12_SSPM312_MASK                             0x8

// Register: LCDDATA13
#define LCDDATA13 LCDDATA13
extern volatile unsigned char           LCDDATA13           __at(0xF73);
#ifndef _LIB_BUILD
asm("LCDDATA13 equ 0F73h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S08C2                  :1;
        unsigned S09C2                  :1;
        unsigned S10C2                  :1;
        unsigned S11C2                  :1;
        unsigned S12C2                  :1;
        unsigned S13C2                  :1;
        unsigned S14C2                  :1;
        unsigned S15C2                  :1;
    };
} LCDDATA13bits_t;
extern volatile LCDDATA13bits_t LCDDATA13bits __at(0xF73);
// bitfield macros
#define _LCDDATA13_S08C2_POSN                               0x0
#define _LCDDATA13_S08C2_POSITION                           0x0
#define _LCDDATA13_S08C2_SIZE                               0x1
#define _LCDDATA13_S08C2_LENGTH                             0x1
#define _LCDDATA13_S08C2_MASK                               0x1
#define _LCDDATA13_S09C2_POSN                               0x1
#define _LCDDATA13_S09C2_POSITION                           0x1
#define _LCDDATA13_S09C2_SIZE                               0x1
#define _LCDDATA13_S09C2_LENGTH                             0x1
#define _LCDDATA13_S09C2_MASK                               0x2
#define _LCDDATA13_S10C2_POSN                               0x2
#define _LCDDATA13_S10C2_POSITION                           0x2
#define _LCDDATA13_S10C2_SIZE                               0x1
#define _LCDDATA13_S10C2_LENGTH                             0x1
#define _LCDDATA13_S10C2_MASK                               0x4
#define _LCDDATA13_S11C2_POSN                               0x3
#define _LCDDATA13_S11C2_POSITION                           0x3
#define _LCDDATA13_S11C2_SIZE                               0x1
#define _LCDDATA13_S11C2_LENGTH                             0x1
#define _LCDDATA13_S11C2_MASK                               0x8
#define _LCDDATA13_S12C2_POSN                               0x4
#define _LCDDATA13_S12C2_POSITION                           0x4
#define _LCDDATA13_S12C2_SIZE                               0x1
#define _LCDDATA13_S12C2_LENGTH                             0x1
#define _LCDDATA13_S12C2_MASK                               0x10
#define _LCDDATA13_S13C2_POSN                               0x5
#define _LCDDATA13_S13C2_POSITION                           0x5
#define _LCDDATA13_S13C2_SIZE                               0x1
#define _LCDDATA13_S13C2_LENGTH                             0x1
#define _LCDDATA13_S13C2_MASK                               0x20
#define _LCDDATA13_S14C2_POSN                               0x6
#define _LCDDATA13_S14C2_POSITION                           0x6
#define _LCDDATA13_S14C2_SIZE                               0x1
#define _LCDDATA13_S14C2_LENGTH                             0x1
#define _LCDDATA13_S14C2_MASK                               0x40
#define _LCDDATA13_S15C2_POSN                               0x7
#define _LCDDATA13_S15C2_POSITION                           0x7
#define _LCDDATA13_S15C2_SIZE                               0x1
#define _LCDDATA13_S15C2_LENGTH                             0x1
#define _LCDDATA13_S15C2_MASK                               0x80

// Register: LCDDATA14
#define LCDDATA14 LCDDATA14
extern volatile unsigned char           LCDDATA14           __at(0xF74);
#ifndef _LIB_BUILD
asm("LCDDATA14 equ 0F74h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S16C2                  :1;
        unsigned S17C2                  :1;
        unsigned S18C2                  :1;
        unsigned S19C2                  :1;
        unsigned S20C2                  :1;
        unsigned S21C2                  :1;
        unsigned S22C2                  :1;
        unsigned S23C2                  :1;
    };
    struct {
        unsigned MSK0                   :1;
        unsigned MSK1                   :1;
        unsigned MSK2                   :1;
        unsigned MSK3                   :1;
        unsigned MSK4                   :1;
        unsigned MSK5                   :1;
        unsigned MSK6                   :1;
        unsigned MSK7                   :1;
    };
} LCDDATA14bits_t;
extern volatile LCDDATA14bits_t LCDDATA14bits __at(0xF74);
// bitfield macros
#define _LCDDATA14_S16C2_POSN                               0x0
#define _LCDDATA14_S16C2_POSITION                           0x0
#define _LCDDATA14_S16C2_SIZE                               0x1
#define _LCDDATA14_S16C2_LENGTH                             0x1
#define _LCDDATA14_S16C2_MASK                               0x1
#define _LCDDATA14_S17C2_POSN                               0x1
#define _LCDDATA14_S17C2_POSITION                           0x1
#define _LCDDATA14_S17C2_SIZE                               0x1
#define _LCDDATA14_S17C2_LENGTH                             0x1
#define _LCDDATA14_S17C2_MASK                               0x2
#define _LCDDATA14_S18C2_POSN                               0x2
#define _LCDDATA14_S18C2_POSITION                           0x2
#define _LCDDATA14_S18C2_SIZE                               0x1
#define _LCDDATA14_S18C2_LENGTH                             0x1
#define _LCDDATA14_S18C2_MASK                               0x4
#define _LCDDATA14_S19C2_POSN                               0x3
#define _LCDDATA14_S19C2_POSITION                           0x3
#define _LCDDATA14_S19C2_SIZE                               0x1
#define _LCDDATA14_S19C2_LENGTH                             0x1
#define _LCDDATA14_S19C2_MASK                               0x8
#define _LCDDATA14_S20C2_POSN                               0x4
#define _LCDDATA14_S20C2_POSITION                           0x4
#define _LCDDATA14_S20C2_SIZE                               0x1
#define _LCDDATA14_S20C2_LENGTH                             0x1
#define _LCDDATA14_S20C2_MASK                               0x10
#define _LCDDATA14_S21C2_POSN                               0x5
#define _LCDDATA14_S21C2_POSITION                           0x5
#define _LCDDATA14_S21C2_SIZE                               0x1
#define _LCDDATA14_S21C2_LENGTH                             0x1
#define _LCDDATA14_S21C2_MASK                               0x20
#define _LCDDATA14_S22C2_POSN                               0x6
#define _LCDDATA14_S22C2_POSITION                           0x6
#define _LCDDATA14_S22C2_SIZE                               0x1
#define _LCDDATA14_S22C2_LENGTH                             0x1
#define _LCDDATA14_S22C2_MASK                               0x40
#define _LCDDATA14_S23C2_POSN                               0x7
#define _LCDDATA14_S23C2_POSITION                           0x7
#define _LCDDATA14_S23C2_SIZE                               0x1
#define _LCDDATA14_S23C2_LENGTH                             0x1
#define _LCDDATA14_S23C2_MASK                               0x80
#define _LCDDATA14_MSK0_POSN                                0x0
#define _LCDDATA14_MSK0_POSITION                            0x0
#define _LCDDATA14_MSK0_SIZE                                0x1
#define _LCDDATA14_MSK0_LENGTH                              0x1
#define _LCDDATA14_MSK0_MASK                                0x1
#define _LCDDATA14_MSK1_POSN                                0x1
#define _LCDDATA14_MSK1_POSITION                            0x1
#define _LCDDATA14_MSK1_SIZE                                0x1
#define _LCDDATA14_MSK1_LENGTH                              0x1
#define _LCDDATA14_MSK1_MASK                                0x2
#define _LCDDATA14_MSK2_POSN                                0x2
#define _LCDDATA14_MSK2_POSITION                            0x2
#define _LCDDATA14_MSK2_SIZE                                0x1
#define _LCDDATA14_MSK2_LENGTH                              0x1
#define _LCDDATA14_MSK2_MASK                                0x4
#define _LCDDATA14_MSK3_POSN                                0x3
#define _LCDDATA14_MSK3_POSITION                            0x3
#define _LCDDATA14_MSK3_SIZE                                0x1
#define _LCDDATA14_MSK3_LENGTH                              0x1
#define _LCDDATA14_MSK3_MASK                                0x8
#define _LCDDATA14_MSK4_POSN                                0x4
#define _LCDDATA14_MSK4_POSITION                            0x4
#define _LCDDATA14_MSK4_SIZE                                0x1
#define _LCDDATA14_MSK4_LENGTH                              0x1
#define _LCDDATA14_MSK4_MASK                                0x10
#define _LCDDATA14_MSK5_POSN                                0x5
#define _LCDDATA14_MSK5_POSITION                            0x5
#define _LCDDATA14_MSK5_SIZE                                0x1
#define _LCDDATA14_MSK5_LENGTH                              0x1
#define _LCDDATA14_MSK5_MASK                                0x20
#define _LCDDATA14_MSK6_POSN                                0x6
#define _LCDDATA14_MSK6_POSITION                            0x6
#define _LCDDATA14_MSK6_SIZE                                0x1
#define _LCDDATA14_MSK6_LENGTH                              0x1
#define _LCDDATA14_MSK6_MASK                                0x40
#define _LCDDATA14_MSK7_POSN                                0x7
#define _LCDDATA14_MSK7_POSITION                            0x7
#define _LCDDATA14_MSK7_SIZE                                0x1
#define _LCDDATA14_MSK7_LENGTH                              0x1
#define _LCDDATA14_MSK7_MASK                                0x80

// Register: LCDDATA15
#define LCDDATA15 LCDDATA15
extern volatile unsigned char           LCDDATA15           __at(0xF75);
#ifndef _LIB_BUILD
asm("LCDDATA15 equ 0F75h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S24C2                  :1;
        unsigned S25C2                  :1;
        unsigned S26C2                  :1;
        unsigned S27C2                  :1;
        unsigned S28C2                  :1;
        unsigned S29C2                  :1;
        unsigned S30C2                  :1;
        unsigned S31C2                  :1;
    };
} LCDDATA15bits_t;
extern volatile LCDDATA15bits_t LCDDATA15bits __at(0xF75);
// bitfield macros
#define _LCDDATA15_S24C2_POSN                               0x0
#define _LCDDATA15_S24C2_POSITION                           0x0
#define _LCDDATA15_S24C2_SIZE                               0x1
#define _LCDDATA15_S24C2_LENGTH                             0x1
#define _LCDDATA15_S24C2_MASK                               0x1
#define _LCDDATA15_S25C2_POSN                               0x1
#define _LCDDATA15_S25C2_POSITION                           0x1
#define _LCDDATA15_S25C2_SIZE                               0x1
#define _LCDDATA15_S25C2_LENGTH                             0x1
#define _LCDDATA15_S25C2_MASK                               0x2
#define _LCDDATA15_S26C2_POSN                               0x2
#define _LCDDATA15_S26C2_POSITION                           0x2
#define _LCDDATA15_S26C2_SIZE                               0x1
#define _LCDDATA15_S26C2_LENGTH                             0x1
#define _LCDDATA15_S26C2_MASK                               0x4
#define _LCDDATA15_S27C2_POSN                               0x3
#define _LCDDATA15_S27C2_POSITION                           0x3
#define _LCDDATA15_S27C2_SIZE                               0x1
#define _LCDDATA15_S27C2_LENGTH                             0x1
#define _LCDDATA15_S27C2_MASK                               0x8
#define _LCDDATA15_S28C2_POSN                               0x4
#define _LCDDATA15_S28C2_POSITION                           0x4
#define _LCDDATA15_S28C2_SIZE                               0x1
#define _LCDDATA15_S28C2_LENGTH                             0x1
#define _LCDDATA15_S28C2_MASK                               0x10
#define _LCDDATA15_S29C2_POSN                               0x5
#define _LCDDATA15_S29C2_POSITION                           0x5
#define _LCDDATA15_S29C2_SIZE                               0x1
#define _LCDDATA15_S29C2_LENGTH                             0x1
#define _LCDDATA15_S29C2_MASK                               0x20
#define _LCDDATA15_S30C2_POSN                               0x6
#define _LCDDATA15_S30C2_POSITION                           0x6
#define _LCDDATA15_S30C2_SIZE                               0x1
#define _LCDDATA15_S30C2_LENGTH                             0x1
#define _LCDDATA15_S30C2_MASK                               0x40
#define _LCDDATA15_S31C2_POSN                               0x7
#define _LCDDATA15_S31C2_POSITION                           0x7
#define _LCDDATA15_S31C2_SIZE                               0x1
#define _LCDDATA15_S31C2_LENGTH                             0x1
#define _LCDDATA15_S31C2_MASK                               0x80

// Register: LCDDATA16
#define LCDDATA16 LCDDATA16
extern volatile unsigned char           LCDDATA16           __at(0xF76);
#ifndef _LIB_BUILD
asm("LCDDATA16 equ 0F76h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S32C2                  :1;
        unsigned S33C2                  :1;
        unsigned S34C2                  :1;
        unsigned S35C2                  :1;
        unsigned S36C2                  :1;
        unsigned S37C2                  :1;
        unsigned S38C2                  :1;
        unsigned S39C2                  :1;
    };
    struct {
        unsigned T4CKPS016              :1;
        unsigned T4CKPS116              :1;
        unsigned                        :1;
        unsigned T4OUTPS016             :1;
        unsigned T4OUTPS116             :1;
        unsigned T4OUTPS216             :1;
        unsigned T4OUTPS316             :1;
    };
} LCDDATA16bits_t;
extern volatile LCDDATA16bits_t LCDDATA16bits __at(0xF76);
// bitfield macros
#define _LCDDATA16_S32C2_POSN                               0x0
#define _LCDDATA16_S32C2_POSITION                           0x0
#define _LCDDATA16_S32C2_SIZE                               0x1
#define _LCDDATA16_S32C2_LENGTH                             0x1
#define _LCDDATA16_S32C2_MASK                               0x1
#define _LCDDATA16_S33C2_POSN                               0x1
#define _LCDDATA16_S33C2_POSITION                           0x1
#define _LCDDATA16_S33C2_SIZE                               0x1
#define _LCDDATA16_S33C2_LENGTH                             0x1
#define _LCDDATA16_S33C2_MASK                               0x2
#define _LCDDATA16_S34C2_POSN                               0x2
#define _LCDDATA16_S34C2_POSITION                           0x2
#define _LCDDATA16_S34C2_SIZE                               0x1
#define _LCDDATA16_S34C2_LENGTH                             0x1
#define _LCDDATA16_S34C2_MASK                               0x4
#define _LCDDATA16_S35C2_POSN                               0x3
#define _LCDDATA16_S35C2_POSITION                           0x3
#define _LCDDATA16_S35C2_SIZE                               0x1
#define _LCDDATA16_S35C2_LENGTH                             0x1
#define _LCDDATA16_S35C2_MASK                               0x8
#define _LCDDATA16_S36C2_POSN                               0x4
#define _LCDDATA16_S36C2_POSITION                           0x4
#define _LCDDATA16_S36C2_SIZE                               0x1
#define _LCDDATA16_S36C2_LENGTH                             0x1
#define _LCDDATA16_S36C2_MASK                               0x10
#define _LCDDATA16_S37C2_POSN                               0x5
#define _LCDDATA16_S37C2_POSITION                           0x5
#define _LCDDATA16_S37C2_SIZE                               0x1
#define _LCDDATA16_S37C2_LENGTH                             0x1
#define _LCDDATA16_S37C2_MASK                               0x20
#define _LCDDATA16_S38C2_POSN                               0x6
#define _LCDDATA16_S38C2_POSITION                           0x6
#define _LCDDATA16_S38C2_SIZE                               0x1
#define _LCDDATA16_S38C2_LENGTH                             0x1
#define _LCDDATA16_S38C2_MASK                               0x40
#define _LCDDATA16_S39C2_POSN                               0x7
#define _LCDDATA16_S39C2_POSITION                           0x7
#define _LCDDATA16_S39C2_SIZE                               0x1
#define _LCDDATA16_S39C2_LENGTH                             0x1
#define _LCDDATA16_S39C2_MASK                               0x80
#define _LCDDATA16_T4CKPS016_POSN                           0x0
#define _LCDDATA16_T4CKPS016_POSITION                       0x0
#define _LCDDATA16_T4CKPS016_SIZE                           0x1
#define _LCDDATA16_T4CKPS016_LENGTH                         0x1
#define _LCDDATA16_T4CKPS016_MASK                           0x1
#define _LCDDATA16_T4CKPS116_POSN                           0x1
#define _LCDDATA16_T4CKPS116_POSITION                       0x1
#define _LCDDATA16_T4CKPS116_SIZE                           0x1
#define _LCDDATA16_T4CKPS116_LENGTH                         0x1
#define _LCDDATA16_T4CKPS116_MASK                           0x2
#define _LCDDATA16_T4OUTPS016_POSN                          0x3
#define _LCDDATA16_T4OUTPS016_POSITION                      0x3
#define _LCDDATA16_T4OUTPS016_SIZE                          0x1
#define _LCDDATA16_T4OUTPS016_LENGTH                        0x1
#define _LCDDATA16_T4OUTPS016_MASK                          0x8
#define _LCDDATA16_T4OUTPS116_POSN                          0x4
#define _LCDDATA16_T4OUTPS116_POSITION                      0x4
#define _LCDDATA16_T4OUTPS116_SIZE                          0x1
#define _LCDDATA16_T4OUTPS116_LENGTH                        0x1
#define _LCDDATA16_T4OUTPS116_MASK                          0x10
#define _LCDDATA16_T4OUTPS216_POSN                          0x5
#define _LCDDATA16_T4OUTPS216_POSITION                      0x5
#define _LCDDATA16_T4OUTPS216_SIZE                          0x1
#define _LCDDATA16_T4OUTPS216_LENGTH                        0x1
#define _LCDDATA16_T4OUTPS216_MASK                          0x20
#define _LCDDATA16_T4OUTPS316_POSN                          0x6
#define _LCDDATA16_T4OUTPS316_POSITION                      0x6
#define _LCDDATA16_T4OUTPS316_SIZE                          0x1
#define _LCDDATA16_T4OUTPS316_LENGTH                        0x1
#define _LCDDATA16_T4OUTPS316_MASK                          0x40

// Register: LCDDATA17
#define LCDDATA17 LCDDATA17
extern volatile unsigned char           LCDDATA17           __at(0xF77);
#ifndef _LIB_BUILD
asm("LCDDATA17 equ 0F77h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S40C2                  :1;
        unsigned S41C2                  :1;
        unsigned S42C2                  :1;
        unsigned S43C2                  :1;
        unsigned S44C2                  :1;
        unsigned S45C2                  :1;
        unsigned S46C2                  :1;
        unsigned S47C2                  :1;
    };
} LCDDATA17bits_t;
extern volatile LCDDATA17bits_t LCDDATA17bits __at(0xF77);
// bitfield macros
#define _LCDDATA17_S40C2_POSN                               0x0
#define _LCDDATA17_S40C2_POSITION                           0x0
#define _LCDDATA17_S40C2_SIZE                               0x1
#define _LCDDATA17_S40C2_LENGTH                             0x1
#define _LCDDATA17_S40C2_MASK                               0x1
#define _LCDDATA17_S41C2_POSN                               0x1
#define _LCDDATA17_S41C2_POSITION                           0x1
#define _LCDDATA17_S41C2_SIZE                               0x1
#define _LCDDATA17_S41C2_LENGTH                             0x1
#define _LCDDATA17_S41C2_MASK                               0x2
#define _LCDDATA17_S42C2_POSN                               0x2
#define _LCDDATA17_S42C2_POSITION                           0x2
#define _LCDDATA17_S42C2_SIZE                               0x1
#define _LCDDATA17_S42C2_LENGTH                             0x1
#define _LCDDATA17_S42C2_MASK                               0x4
#define _LCDDATA17_S43C2_POSN                               0x3
#define _LCDDATA17_S43C2_POSITION                           0x3
#define _LCDDATA17_S43C2_SIZE                               0x1
#define _LCDDATA17_S43C2_LENGTH                             0x1
#define _LCDDATA17_S43C2_MASK                               0x8
#define _LCDDATA17_S44C2_POSN                               0x4
#define _LCDDATA17_S44C2_POSITION                           0x4
#define _LCDDATA17_S44C2_SIZE                               0x1
#define _LCDDATA17_S44C2_LENGTH                             0x1
#define _LCDDATA17_S44C2_MASK                               0x10
#define _LCDDATA17_S45C2_POSN                               0x5
#define _LCDDATA17_S45C2_POSITION                           0x5
#define _LCDDATA17_S45C2_SIZE                               0x1
#define _LCDDATA17_S45C2_LENGTH                             0x1
#define _LCDDATA17_S45C2_MASK                               0x20
#define _LCDDATA17_S46C2_POSN                               0x6
#define _LCDDATA17_S46C2_POSITION                           0x6
#define _LCDDATA17_S46C2_SIZE                               0x1
#define _LCDDATA17_S46C2_LENGTH                             0x1
#define _LCDDATA17_S46C2_MASK                               0x40
#define _LCDDATA17_S47C2_POSN                               0x7
#define _LCDDATA17_S47C2_POSITION                           0x7
#define _LCDDATA17_S47C2_SIZE                               0x1
#define _LCDDATA17_S47C2_LENGTH                             0x1
#define _LCDDATA17_S47C2_MASK                               0x80

// Register: LCDDATA18
#define LCDDATA18 LCDDATA18
extern volatile unsigned char           LCDDATA18           __at(0xF78);
#ifndef _LIB_BUILD
asm("LCDDATA18 equ 0F78h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S00C3                  :1;
        unsigned S01C3                  :1;
        unsigned S02C3                  :1;
        unsigned S03C3                  :1;
        unsigned S04C3                  :1;
        unsigned S05C3                  :1;
        unsigned S06C3                  :1;
        unsigned S07C3                  :1;
    };
} LCDDATA18bits_t;
extern volatile LCDDATA18bits_t LCDDATA18bits __at(0xF78);
// bitfield macros
#define _LCDDATA18_S00C3_POSN                               0x0
#define _LCDDATA18_S00C3_POSITION                           0x0
#define _LCDDATA18_S00C3_SIZE                               0x1
#define _LCDDATA18_S00C3_LENGTH                             0x1
#define _LCDDATA18_S00C3_MASK                               0x1
#define _LCDDATA18_S01C3_POSN                               0x1
#define _LCDDATA18_S01C3_POSITION                           0x1
#define _LCDDATA18_S01C3_SIZE                               0x1
#define _LCDDATA18_S01C3_LENGTH                             0x1
#define _LCDDATA18_S01C3_MASK                               0x2
#define _LCDDATA18_S02C3_POSN                               0x2
#define _LCDDATA18_S02C3_POSITION                           0x2
#define _LCDDATA18_S02C3_SIZE                               0x1
#define _LCDDATA18_S02C3_LENGTH                             0x1
#define _LCDDATA18_S02C3_MASK                               0x4
#define _LCDDATA18_S03C3_POSN                               0x3
#define _LCDDATA18_S03C3_POSITION                           0x3
#define _LCDDATA18_S03C3_SIZE                               0x1
#define _LCDDATA18_S03C3_LENGTH                             0x1
#define _LCDDATA18_S03C3_MASK                               0x8
#define _LCDDATA18_S04C3_POSN                               0x4
#define _LCDDATA18_S04C3_POSITION                           0x4
#define _LCDDATA18_S04C3_SIZE                               0x1
#define _LCDDATA18_S04C3_LENGTH                             0x1
#define _LCDDATA18_S04C3_MASK                               0x10
#define _LCDDATA18_S05C3_POSN                               0x5
#define _LCDDATA18_S05C3_POSITION                           0x5
#define _LCDDATA18_S05C3_SIZE                               0x1
#define _LCDDATA18_S05C3_LENGTH                             0x1
#define _LCDDATA18_S05C3_MASK                               0x20
#define _LCDDATA18_S06C3_POSN                               0x6
#define _LCDDATA18_S06C3_POSITION                           0x6
#define _LCDDATA18_S06C3_SIZE                               0x1
#define _LCDDATA18_S06C3_LENGTH                             0x1
#define _LCDDATA18_S06C3_MASK                               0x40
#define _LCDDATA18_S07C3_POSN                               0x7
#define _LCDDATA18_S07C3_POSITION                           0x7
#define _LCDDATA18_S07C3_SIZE                               0x1
#define _LCDDATA18_S07C3_LENGTH                             0x1
#define _LCDDATA18_S07C3_MASK                               0x80

// Register: LCDDATA19
#define LCDDATA19 LCDDATA19
extern volatile unsigned char           LCDDATA19           __at(0xF79);
#ifndef _LIB_BUILD
asm("LCDDATA19 equ 0F79h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S08C3                  :1;
        unsigned S09C3                  :1;
        unsigned S10C3                  :1;
        unsigned S11C3                  :1;
        unsigned S12C3                  :1;
        unsigned S13C3                  :1;
        unsigned S14C3                  :1;
        unsigned S15C3                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned T3CKPS019              :1;
        unsigned T3CKPS119              :1;
        unsigned TMR3CS019              :1;
        unsigned TMR3CS119              :1;
    };
} LCDDATA19bits_t;
extern volatile LCDDATA19bits_t LCDDATA19bits __at(0xF79);
// bitfield macros
#define _LCDDATA19_S08C3_POSN                               0x0
#define _LCDDATA19_S08C3_POSITION                           0x0
#define _LCDDATA19_S08C3_SIZE                               0x1
#define _LCDDATA19_S08C3_LENGTH                             0x1
#define _LCDDATA19_S08C3_MASK                               0x1
#define _LCDDATA19_S09C3_POSN                               0x1
#define _LCDDATA19_S09C3_POSITION                           0x1
#define _LCDDATA19_S09C3_SIZE                               0x1
#define _LCDDATA19_S09C3_LENGTH                             0x1
#define _LCDDATA19_S09C3_MASK                               0x2
#define _LCDDATA19_S10C3_POSN                               0x2
#define _LCDDATA19_S10C3_POSITION                           0x2
#define _LCDDATA19_S10C3_SIZE                               0x1
#define _LCDDATA19_S10C3_LENGTH                             0x1
#define _LCDDATA19_S10C3_MASK                               0x4
#define _LCDDATA19_S11C3_POSN                               0x3
#define _LCDDATA19_S11C3_POSITION                           0x3
#define _LCDDATA19_S11C3_SIZE                               0x1
#define _LCDDATA19_S11C3_LENGTH                             0x1
#define _LCDDATA19_S11C3_MASK                               0x8
#define _LCDDATA19_S12C3_POSN                               0x4
#define _LCDDATA19_S12C3_POSITION                           0x4
#define _LCDDATA19_S12C3_SIZE                               0x1
#define _LCDDATA19_S12C3_LENGTH                             0x1
#define _LCDDATA19_S12C3_MASK                               0x10
#define _LCDDATA19_S13C3_POSN                               0x5
#define _LCDDATA19_S13C3_POSITION                           0x5
#define _LCDDATA19_S13C3_SIZE                               0x1
#define _LCDDATA19_S13C3_LENGTH                             0x1
#define _LCDDATA19_S13C3_MASK                               0x20
#define _LCDDATA19_S14C3_POSN                               0x6
#define _LCDDATA19_S14C3_POSITION                           0x6
#define _LCDDATA19_S14C3_SIZE                               0x1
#define _LCDDATA19_S14C3_LENGTH                             0x1
#define _LCDDATA19_S14C3_MASK                               0x40
#define _LCDDATA19_S15C3_POSN                               0x7
#define _LCDDATA19_S15C3_POSITION                           0x7
#define _LCDDATA19_S15C3_SIZE                               0x1
#define _LCDDATA19_S15C3_LENGTH                             0x1
#define _LCDDATA19_S15C3_MASK                               0x80
#define _LCDDATA19_T3CKPS019_POSN                           0x4
#define _LCDDATA19_T3CKPS019_POSITION                       0x4
#define _LCDDATA19_T3CKPS019_SIZE                           0x1
#define _LCDDATA19_T3CKPS019_LENGTH                         0x1
#define _LCDDATA19_T3CKPS019_MASK                           0x10
#define _LCDDATA19_T3CKPS119_POSN                           0x5
#define _LCDDATA19_T3CKPS119_POSITION                       0x5
#define _LCDDATA19_T3CKPS119_SIZE                           0x1
#define _LCDDATA19_T3CKPS119_LENGTH                         0x1
#define _LCDDATA19_T3CKPS119_MASK                           0x20
#define _LCDDATA19_TMR3CS019_POSN                           0x6
#define _LCDDATA19_TMR3CS019_POSITION                       0x6
#define _LCDDATA19_TMR3CS019_SIZE                           0x1
#define _LCDDATA19_TMR3CS019_LENGTH                         0x1
#define _LCDDATA19_TMR3CS019_MASK                           0x40
#define _LCDDATA19_TMR3CS119_POSN                           0x7
#define _LCDDATA19_TMR3CS119_POSITION                       0x7
#define _LCDDATA19_TMR3CS119_SIZE                           0x1
#define _LCDDATA19_TMR3CS119_LENGTH                         0x1
#define _LCDDATA19_TMR3CS119_MASK                           0x80

// Register: LCDDATA20
#define LCDDATA20 LCDDATA20
extern volatile unsigned char           LCDDATA20           __at(0xF7A);
#ifndef _LIB_BUILD
asm("LCDDATA20 equ 0F7Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S16C3                  :1;
        unsigned S17C3                  :1;
        unsigned S18C3                  :1;
        unsigned S19C3                  :1;
        unsigned S20C3                  :1;
        unsigned S21C3                  :1;
        unsigned S22C3                  :1;
        unsigned S23C3                  :1;
    };
} LCDDATA20bits_t;
extern volatile LCDDATA20bits_t LCDDATA20bits __at(0xF7A);
// bitfield macros
#define _LCDDATA20_S16C3_POSN                               0x0
#define _LCDDATA20_S16C3_POSITION                           0x0
#define _LCDDATA20_S16C3_SIZE                               0x1
#define _LCDDATA20_S16C3_LENGTH                             0x1
#define _LCDDATA20_S16C3_MASK                               0x1
#define _LCDDATA20_S17C3_POSN                               0x1
#define _LCDDATA20_S17C3_POSITION                           0x1
#define _LCDDATA20_S17C3_SIZE                               0x1
#define _LCDDATA20_S17C3_LENGTH                             0x1
#define _LCDDATA20_S17C3_MASK                               0x2
#define _LCDDATA20_S18C3_POSN                               0x2
#define _LCDDATA20_S18C3_POSITION                           0x2
#define _LCDDATA20_S18C3_SIZE                               0x1
#define _LCDDATA20_S18C3_LENGTH                             0x1
#define _LCDDATA20_S18C3_MASK                               0x4
#define _LCDDATA20_S19C3_POSN                               0x3
#define _LCDDATA20_S19C3_POSITION                           0x3
#define _LCDDATA20_S19C3_SIZE                               0x1
#define _LCDDATA20_S19C3_LENGTH                             0x1
#define _LCDDATA20_S19C3_MASK                               0x8
#define _LCDDATA20_S20C3_POSN                               0x4
#define _LCDDATA20_S20C3_POSITION                           0x4
#define _LCDDATA20_S20C3_SIZE                               0x1
#define _LCDDATA20_S20C3_LENGTH                             0x1
#define _LCDDATA20_S20C3_MASK                               0x10
#define _LCDDATA20_S21C3_POSN                               0x5
#define _LCDDATA20_S21C3_POSITION                           0x5
#define _LCDDATA20_S21C3_SIZE                               0x1
#define _LCDDATA20_S21C3_LENGTH                             0x1
#define _LCDDATA20_S21C3_MASK                               0x20
#define _LCDDATA20_S22C3_POSN                               0x6
#define _LCDDATA20_S22C3_POSITION                           0x6
#define _LCDDATA20_S22C3_SIZE                               0x1
#define _LCDDATA20_S22C3_LENGTH                             0x1
#define _LCDDATA20_S22C3_MASK                               0x40
#define _LCDDATA20_S23C3_POSN                               0x7
#define _LCDDATA20_S23C3_POSITION                           0x7
#define _LCDDATA20_S23C3_SIZE                               0x1
#define _LCDDATA20_S23C3_LENGTH                             0x1
#define _LCDDATA20_S23C3_MASK                               0x80

// Register: LCDDATA21
#define LCDDATA21 LCDDATA21
extern volatile unsigned char           LCDDATA21           __at(0xF7B);
#ifndef _LIB_BUILD
asm("LCDDATA21 equ 0F7Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S24C3                  :1;
        unsigned S25C3                  :1;
        unsigned S26C3                  :1;
        unsigned S27C3                  :1;
        unsigned S28C3                  :1;
        unsigned S29C3                  :1;
        unsigned S30C3                  :1;
        unsigned S31C3                  :1;
    };
} LCDDATA21bits_t;
extern volatile LCDDATA21bits_t LCDDATA21bits __at(0xF7B);
// bitfield macros
#define _LCDDATA21_S24C3_POSN                               0x0
#define _LCDDATA21_S24C3_POSITION                           0x0
#define _LCDDATA21_S24C3_SIZE                               0x1
#define _LCDDATA21_S24C3_LENGTH                             0x1
#define _LCDDATA21_S24C3_MASK                               0x1
#define _LCDDATA21_S25C3_POSN                               0x1
#define _LCDDATA21_S25C3_POSITION                           0x1
#define _LCDDATA21_S25C3_SIZE                               0x1
#define _LCDDATA21_S25C3_LENGTH                             0x1
#define _LCDDATA21_S25C3_MASK                               0x2
#define _LCDDATA21_S26C3_POSN                               0x2
#define _LCDDATA21_S26C3_POSITION                           0x2
#define _LCDDATA21_S26C3_SIZE                               0x1
#define _LCDDATA21_S26C3_LENGTH                             0x1
#define _LCDDATA21_S26C3_MASK                               0x4
#define _LCDDATA21_S27C3_POSN                               0x3
#define _LCDDATA21_S27C3_POSITION                           0x3
#define _LCDDATA21_S27C3_SIZE                               0x1
#define _LCDDATA21_S27C3_LENGTH                             0x1
#define _LCDDATA21_S27C3_MASK                               0x8
#define _LCDDATA21_S28C3_POSN                               0x4
#define _LCDDATA21_S28C3_POSITION                           0x4
#define _LCDDATA21_S28C3_SIZE                               0x1
#define _LCDDATA21_S28C3_LENGTH                             0x1
#define _LCDDATA21_S28C3_MASK                               0x10
#define _LCDDATA21_S29C3_POSN                               0x5
#define _LCDDATA21_S29C3_POSITION                           0x5
#define _LCDDATA21_S29C3_SIZE                               0x1
#define _LCDDATA21_S29C3_LENGTH                             0x1
#define _LCDDATA21_S29C3_MASK                               0x20
#define _LCDDATA21_S30C3_POSN                               0x6
#define _LCDDATA21_S30C3_POSITION                           0x6
#define _LCDDATA21_S30C3_SIZE                               0x1
#define _LCDDATA21_S30C3_LENGTH                             0x1
#define _LCDDATA21_S30C3_MASK                               0x40
#define _LCDDATA21_S31C3_POSN                               0x7
#define _LCDDATA21_S31C3_POSITION                           0x7
#define _LCDDATA21_S31C3_SIZE                               0x1
#define _LCDDATA21_S31C3_LENGTH                             0x1
#define _LCDDATA21_S31C3_MASK                               0x80

// Register: LCDDATA22
#define LCDDATA22 LCDDATA22
extern volatile unsigned char           LCDDATA22           __at(0xF7C);
#ifndef _LIB_BUILD
asm("LCDDATA22 equ 0F7Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S32C3                  :1;
        unsigned S33C3                  :1;
        unsigned S34C3                  :1;
        unsigned S35C3                  :1;
        unsigned S36C3                  :1;
        unsigned S37C3                  :1;
        unsigned S38C3                  :1;
        unsigned S39C3                  :1;
    };
} LCDDATA22bits_t;
extern volatile LCDDATA22bits_t LCDDATA22bits __at(0xF7C);
// bitfield macros
#define _LCDDATA22_S32C3_POSN                               0x0
#define _LCDDATA22_S32C3_POSITION                           0x0
#define _LCDDATA22_S32C3_SIZE                               0x1
#define _LCDDATA22_S32C3_LENGTH                             0x1
#define _LCDDATA22_S32C3_MASK                               0x1
#define _LCDDATA22_S33C3_POSN                               0x1
#define _LCDDATA22_S33C3_POSITION                           0x1
#define _LCDDATA22_S33C3_SIZE                               0x1
#define _LCDDATA22_S33C3_LENGTH                             0x1
#define _LCDDATA22_S33C3_MASK                               0x2
#define _LCDDATA22_S34C3_POSN                               0x2
#define _LCDDATA22_S34C3_POSITION                           0x2
#define _LCDDATA22_S34C3_SIZE                               0x1
#define _LCDDATA22_S34C3_LENGTH                             0x1
#define _LCDDATA22_S34C3_MASK                               0x4
#define _LCDDATA22_S35C3_POSN                               0x3
#define _LCDDATA22_S35C3_POSITION                           0x3
#define _LCDDATA22_S35C3_SIZE                               0x1
#define _LCDDATA22_S35C3_LENGTH                             0x1
#define _LCDDATA22_S35C3_MASK                               0x8
#define _LCDDATA22_S36C3_POSN                               0x4
#define _LCDDATA22_S36C3_POSITION                           0x4
#define _LCDDATA22_S36C3_SIZE                               0x1
#define _LCDDATA22_S36C3_LENGTH                             0x1
#define _LCDDATA22_S36C3_MASK                               0x10
#define _LCDDATA22_S37C3_POSN                               0x5
#define _LCDDATA22_S37C3_POSITION                           0x5
#define _LCDDATA22_S37C3_SIZE                               0x1
#define _LCDDATA22_S37C3_LENGTH                             0x1
#define _LCDDATA22_S37C3_MASK                               0x20
#define _LCDDATA22_S38C3_POSN                               0x6
#define _LCDDATA22_S38C3_POSITION                           0x6
#define _LCDDATA22_S38C3_SIZE                               0x1
#define _LCDDATA22_S38C3_LENGTH                             0x1
#define _LCDDATA22_S38C3_MASK                               0x40
#define _LCDDATA22_S39C3_POSN                               0x7
#define _LCDDATA22_S39C3_POSITION                           0x7
#define _LCDDATA22_S39C3_SIZE                               0x1
#define _LCDDATA22_S39C3_LENGTH                             0x1
#define _LCDDATA22_S39C3_MASK                               0x80

// Register: LCDDATA23
#define LCDDATA23 LCDDATA23
extern volatile unsigned char           LCDDATA23           __at(0xF7D);
#ifndef _LIB_BUILD
asm("LCDDATA23 equ 0F7Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned S40C3                  :1;
        unsigned S41C3                  :1;
        unsigned S42C3                  :1;
        unsigned S43C3                  :1;
        unsigned S44C3                  :1;
        unsigned S45C3                  :1;
        unsigned S46C3                  :1;
        unsigned S47C3                  :1;
    };
} LCDDATA23bits_t;
extern volatile LCDDATA23bits_t LCDDATA23bits __at(0xF7D);
// bitfield macros
#define _LCDDATA23_S40C3_POSN                               0x0
#define _LCDDATA23_S40C3_POSITION                           0x0
#define _LCDDATA23_S40C3_SIZE                               0x1
#define _LCDDATA23_S40C3_LENGTH                             0x1
#define _LCDDATA23_S40C3_MASK                               0x1
#define _LCDDATA23_S41C3_POSN                               0x1
#define _LCDDATA23_S41C3_POSITION                           0x1
#define _LCDDATA23_S41C3_SIZE                               0x1
#define _LCDDATA23_S41C3_LENGTH                             0x1
#define _LCDDATA23_S41C3_MASK                               0x2
#define _LCDDATA23_S42C3_POSN                               0x2
#define _LCDDATA23_S42C3_POSITION                           0x2
#define _LCDDATA23_S42C3_SIZE                               0x1
#define _LCDDATA23_S42C3_LENGTH                             0x1
#define _LCDDATA23_S42C3_MASK                               0x4
#define _LCDDATA23_S43C3_POSN                               0x3
#define _LCDDATA23_S43C3_POSITION                           0x3
#define _LCDDATA23_S43C3_SIZE                               0x1
#define _LCDDATA23_S43C3_LENGTH                             0x1
#define _LCDDATA23_S43C3_MASK                               0x8
#define _LCDDATA23_S44C3_POSN                               0x4
#define _LCDDATA23_S44C3_POSITION                           0x4
#define _LCDDATA23_S44C3_SIZE                               0x1
#define _LCDDATA23_S44C3_LENGTH                             0x1
#define _LCDDATA23_S44C3_MASK                               0x10
#define _LCDDATA23_S45C3_POSN                               0x5
#define _LCDDATA23_S45C3_POSITION                           0x5
#define _LCDDATA23_S45C3_SIZE                               0x1
#define _LCDDATA23_S45C3_LENGTH                             0x1
#define _LCDDATA23_S45C3_MASK                               0x20
#define _LCDDATA23_S46C3_POSN                               0x6
#define _LCDDATA23_S46C3_POSITION                           0x6
#define _LCDDATA23_S46C3_SIZE                               0x1
#define _LCDDATA23_S46C3_LENGTH                             0x1
#define _LCDDATA23_S46C3_MASK                               0x40
#define _LCDDATA23_S47C3_POSN                               0x7
#define _LCDDATA23_S47C3_POSITION                           0x7
#define _LCDDATA23_S47C3_SIZE                               0x1
#define _LCDDATA23_S47C3_LENGTH                             0x1
#define _LCDDATA23_S47C3_MASK                               0x80

// Register: EECON2
#define EECON2 EECON2
extern volatile unsigned char           EECON2              __at(0xF7E);
#ifndef _LIB_BUILD
asm("EECON2 equ 0F7Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EECON2                 :8;
    };
} EECON2bits_t;
extern volatile EECON2bits_t EECON2bits __at(0xF7E);
// bitfield macros
#define _EECON2_EECON2_POSN                                 0x0
#define _EECON2_EECON2_POSITION                             0x0
#define _EECON2_EECON2_SIZE                                 0x8
#define _EECON2_EECON2_LENGTH                               0x8
#define _EECON2_EECON2_MASK                                 0xFF

// Register: EECON1
#define EECON1 EECON1
extern volatile unsigned char           EECON1              __at(0xF7F);
#ifndef _LIB_BUILD
asm("EECON1 equ 0F7Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD                     :1;
        unsigned WR                     :1;
        unsigned WREN                   :1;
        unsigned WRERR                  :1;
        unsigned FREE                   :1;
        unsigned                        :1;
        unsigned CFGS                   :1;
        unsigned EEPGD                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned EEFS                   :1;
    };
} EECON1bits_t;
extern volatile EECON1bits_t EECON1bits __at(0xF7F);
// bitfield macros
#define _EECON1_RD_POSN                                     0x0
#define _EECON1_RD_POSITION                                 0x0
#define _EECON1_RD_SIZE                                     0x1
#define _EECON1_RD_LENGTH                                   0x1
#define _EECON1_RD_MASK                                     0x1
#define _EECON1_WR_POSN                                     0x1
#define _EECON1_WR_POSITION                                 0x1
#define _EECON1_WR_SIZE                                     0x1
#define _EECON1_WR_LENGTH                                   0x1
#define _EECON1_WR_MASK                                     0x2
#define _EECON1_WREN_POSN                                   0x2
#define _EECON1_WREN_POSITION                               0x2
#define _EECON1_WREN_SIZE                                   0x1
#define _EECON1_WREN_LENGTH                                 0x1
#define _EECON1_WREN_MASK                                   0x4
#define _EECON1_WRERR_POSN                                  0x3
#define _EECON1_WRERR_POSITION                              0x3
#define _EECON1_WRERR_SIZE                                  0x1
#define _EECON1_WRERR_LENGTH                                0x1
#define _EECON1_WRERR_MASK                                  0x8
#define _EECON1_FREE_POSN                                   0x4
#define _EECON1_FREE_POSITION                               0x4
#define _EECON1_FREE_SIZE                                   0x1
#define _EECON1_FREE_LENGTH                                 0x1
#define _EECON1_FREE_MASK                                   0x10
#define _EECON1_CFGS_POSN                                   0x6
#define _EECON1_CFGS_POSITION                               0x6
#define _EECON1_CFGS_SIZE                                   0x1
#define _EECON1_CFGS_LENGTH                                 0x1
#define _EECON1_CFGS_MASK                                   0x40
#define _EECON1_EEPGD_POSN                                  0x7
#define _EECON1_EEPGD_POSITION                              0x7
#define _EECON1_EEPGD_SIZE                                  0x1
#define _EECON1_EEPGD_LENGTH                                0x1
#define _EECON1_EEPGD_MASK                                  0x80
#define _EECON1_EEFS_POSN                                   0x6
#define _EECON1_EEFS_POSITION                               0x6
#define _EECON1_EEFS_SIZE                                   0x1
#define _EECON1_EEFS_LENGTH                                 0x1
#define _EECON1_EEFS_MASK                                   0x40

// Register: PORTA
#define PORTA PORTA
extern volatile unsigned char           PORTA               __at(0xF80);
#ifndef _LIB_BUILD
asm("PORTA equ 0F80h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA0                    :1;
        unsigned RA1                    :1;
        unsigned RA2                    :1;
        unsigned RA3                    :1;
        unsigned RA4                    :1;
        unsigned RA5                    :1;
        unsigned RA6                    :1;
        unsigned RA7                    :1;
    };
    struct {
        unsigned AN0                    :1;
        unsigned AN1                    :1;
        unsigned AN2                    :1;
        unsigned AN3                    :1;
        unsigned                        :1;
        unsigned AN4                    :1;
        unsigned OSC2                   :1;
        unsigned OSC1                   :1;
    };
    struct {
        unsigned ULPWUIN                :1;
        unsigned SEG18                  :1;
        unsigned VREF_MINUS             :1;
        unsigned VREF_PLUS              :1;
        unsigned SEG14                  :1;
        unsigned SEG15                  :1;
        unsigned CLKO                   :1;
        unsigned CLKI                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned T0CKI                  :1;
        unsigned T1CKI                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned T3G                    :1;
    };
    struct {
        unsigned                        :5;
        unsigned LVDIN                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned RJPU                   :1;
    };
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits __at(0xF80);
// bitfield macros
#define _PORTA_RA0_POSN                                     0x0
#define _PORTA_RA0_POSITION                                 0x0
#define _PORTA_RA0_SIZE                                     0x1
#define _PORTA_RA0_LENGTH                                   0x1
#define _PORTA_RA0_MASK                                     0x1
#define _PORTA_RA1_POSN                                     0x1
#define _PORTA_RA1_POSITION                                 0x1
#define _PORTA_RA1_SIZE                                     0x1
#define _PORTA_RA1_LENGTH                                   0x1
#define _PORTA_RA1_MASK                                     0x2
#define _PORTA_RA2_POSN                                     0x2
#define _PORTA_RA2_POSITION                                 0x2
#define _PORTA_RA2_SIZE                                     0x1
#define _PORTA_RA2_LENGTH                                   0x1
#define _PORTA_RA2_MASK                                     0x4
#define _PORTA_RA3_POSN                                     0x3
#define _PORTA_RA3_POSITION                                 0x3
#define _PORTA_RA3_SIZE                                     0x1
#define _PORTA_RA3_LENGTH                                   0x1
#define _PORTA_RA3_MASK                                     0x8
#define _PORTA_RA4_POSN                                     0x4
#define _PORTA_RA4_POSITION                                 0x4
#define _PORTA_RA4_SIZE                                     0x1
#define _PORTA_RA4_LENGTH                                   0x1
#define _PORTA_RA4_MASK                                     0x10
#define _PORTA_RA5_POSN                                     0x5
#define _PORTA_RA5_POSITION                                 0x5
#define _PORTA_RA5_SIZE                                     0x1
#define _PORTA_RA5_LENGTH                                   0x1
#define _PORTA_RA5_MASK                                     0x20
#define _PORTA_RA6_POSN                                     0x6
#define _PORTA_RA6_POSITION                                 0x6
#define _PORTA_RA6_SIZE                                     0x1
#define _PORTA_RA6_LENGTH                                   0x1
#define _PORTA_RA6_MASK                                     0x40
#define _PORTA_RA7_POSN                                     0x7
#define _PORTA_RA7_POSITION                                 0x7
#define _PORTA_RA7_SIZE                                     0x1
#define _PORTA_RA7_LENGTH                                   0x1
#define _PORTA_RA7_MASK                                     0x80
#define _PORTA_AN0_POSN                                     0x0
#define _PORTA_AN0_POSITION                                 0x0
#define _PORTA_AN0_SIZE                                     0x1
#define _PORTA_AN0_LENGTH                                   0x1
#define _PORTA_AN0_MASK                                     0x1
#define _PORTA_AN1_POSN                                     0x1
#define _PORTA_AN1_POSITION                                 0x1
#define _PORTA_AN1_SIZE                                     0x1
#define _PORTA_AN1_LENGTH                                   0x1
#define _PORTA_AN1_MASK                                     0x2
#define _PORTA_AN2_POSN                                     0x2
#define _PORTA_AN2_POSITION                                 0x2
#define _PORTA_AN2_SIZE                                     0x1
#define _PORTA_AN2_LENGTH                                   0x1
#define _PORTA_AN2_MASK                                     0x4
#define _PORTA_AN3_POSN                                     0x3
#define _PORTA_AN3_POSITION                                 0x3
#define _PORTA_AN3_SIZE                                     0x1
#define _PORTA_AN3_LENGTH                                   0x1
#define _PORTA_AN3_MASK                                     0x8
#define _PORTA_AN4_POSN                                     0x5
#define _PORTA_AN4_POSITION                                 0x5
#define _PORTA_AN4_SIZE                                     0x1
#define _PORTA_AN4_LENGTH                                   0x1
#define _PORTA_AN4_MASK                                     0x20
#define _PORTA_OSC2_POSN                                    0x6
#define _PORTA_OSC2_POSITION                                0x6
#define _PORTA_OSC2_SIZE                                    0x1
#define _PORTA_OSC2_LENGTH                                  0x1
#define _PORTA_OSC2_MASK                                    0x40
#define _PORTA_OSC1_POSN                                    0x7
#define _PORTA_OSC1_POSITION                                0x7
#define _PORTA_OSC1_SIZE                                    0x1
#define _PORTA_OSC1_LENGTH                                  0x1
#define _PORTA_OSC1_MASK                                    0x80
#define _PORTA_ULPWUIN_POSN                                 0x0
#define _PORTA_ULPWUIN_POSITION                             0x0
#define _PORTA_ULPWUIN_SIZE                                 0x1
#define _PORTA_ULPWUIN_LENGTH                               0x1
#define _PORTA_ULPWUIN_MASK                                 0x1
#define _PORTA_SEG18_POSN                                   0x1
#define _PORTA_SEG18_POSITION                               0x1
#define _PORTA_SEG18_SIZE                                   0x1
#define _PORTA_SEG18_LENGTH                                 0x1
#define _PORTA_SEG18_MASK                                   0x2
#define _PORTA_VREF_MINUS_POSN                              0x2
#define _PORTA_VREF_MINUS_POSITION                          0x2
#define _PORTA_VREF_MINUS_SIZE                              0x1
#define _PORTA_VREF_MINUS_LENGTH                            0x1
#define _PORTA_VREF_MINUS_MASK                              0x4
#define _PORTA_VREF_PLUS_POSN                               0x3
#define _PORTA_VREF_PLUS_POSITION                           0x3
#define _PORTA_VREF_PLUS_SIZE                               0x1
#define _PORTA_VREF_PLUS_LENGTH                             0x1
#define _PORTA_VREF_PLUS_MASK                               0x8
#define _PORTA_SEG14_POSN                                   0x4
#define _PORTA_SEG14_POSITION                               0x4
#define _PORTA_SEG14_SIZE                                   0x1
#define _PORTA_SEG14_LENGTH                                 0x1
#define _PORTA_SEG14_MASK                                   0x10
#define _PORTA_SEG15_POSN                                   0x5
#define _PORTA_SEG15_POSITION                               0x5
#define _PORTA_SEG15_SIZE                                   0x1
#define _PORTA_SEG15_LENGTH                                 0x1
#define _PORTA_SEG15_MASK                                   0x20
#define _PORTA_CLKO_POSN                                    0x6
#define _PORTA_CLKO_POSITION                                0x6
#define _PORTA_CLKO_SIZE                                    0x1
#define _PORTA_CLKO_LENGTH                                  0x1
#define _PORTA_CLKO_MASK                                    0x40
#define _PORTA_CLKI_POSN                                    0x7
#define _PORTA_CLKI_POSITION                                0x7
#define _PORTA_CLKI_SIZE                                    0x1
#define _PORTA_CLKI_LENGTH                                  0x1
#define _PORTA_CLKI_MASK                                    0x80
#define _PORTA_T0CKI_POSN                                   0x4
#define _PORTA_T0CKI_POSITION                               0x4
#define _PORTA_T0CKI_SIZE                                   0x1
#define _PORTA_T0CKI_LENGTH                                 0x1
#define _PORTA_T0CKI_MASK                                   0x10
#define _PORTA_T1CKI_POSN                                   0x5
#define _PORTA_T1CKI_POSITION                               0x5
#define _PORTA_T1CKI_SIZE                                   0x1
#define _PORTA_T1CKI_LENGTH                                 0x1
#define _PORTA_T1CKI_MASK                                   0x20
#define _PORTA_T3G_POSN                                     0x5
#define _PORTA_T3G_POSITION                                 0x5
#define _PORTA_T3G_SIZE                                     0x1
#define _PORTA_T3G_LENGTH                                   0x1
#define _PORTA_T3G_MASK                                     0x20
#define _PORTA_LVDIN_POSN                                   0x5
#define _PORTA_LVDIN_POSITION                               0x5
#define _PORTA_LVDIN_SIZE                                   0x1
#define _PORTA_LVDIN_LENGTH                                 0x1
#define _PORTA_LVDIN_MASK                                   0x20
#define _PORTA_RJPU_POSN                                    0x7
#define _PORTA_RJPU_POSITION                                0x7
#define _PORTA_RJPU_SIZE                                    0x1
#define _PORTA_RJPU_LENGTH                                  0x1
#define _PORTA_RJPU_MASK                                    0x80

// Register: PORTB
#define PORTB PORTB
extern volatile unsigned char           PORTB               __at(0xF81);
#ifndef _LIB_BUILD
asm("PORTB equ 0F81h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RB2                    :1;
        unsigned RB3                    :1;
        unsigned RB4                    :1;
        unsigned RB5                    :1;
        unsigned RB6                    :1;
        unsigned RB7                    :1;
    };
    struct {
        unsigned INT0                   :1;
        unsigned INT1                   :1;
        unsigned INT2                   :1;
        unsigned INT3                   :1;
        unsigned KBI0                   :1;
        unsigned KBI1                   :1;
        unsigned KBI2                   :1;
        unsigned KBI3                   :1;
    };
    struct {
        unsigned SEG30                  :1;
        unsigned SEG8                   :1;
        unsigned SEG9                   :1;
        unsigned SEG10                  :1;
        unsigned SEG11                  :1;
        unsigned SEG29                  :1;
    };
    struct {
        unsigned FLT0                   :1;
        unsigned                        :1;
        unsigned CTED1                  :1;
        unsigned CTED2                  :1;
        unsigned                        :1;
        unsigned T3CKI                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned CCP2_PA2               :1;
        unsigned                        :1;
        unsigned T1G                    :1;
    };
    struct {
        unsigned                        :5;
        unsigned PGM                    :1;
        unsigned PGC                    :1;
        unsigned PGD                    :1;
    };
} PORTBbits_t;
extern volatile PORTBbits_t PORTBbits __at(0xF81);
// bitfield macros
#define _PORTB_RB0_POSN                                     0x0
#define _PORTB_RB0_POSITION                                 0x0
#define _PORTB_RB0_SIZE                                     0x1
#define _PORTB_RB0_LENGTH                                   0x1
#define _PORTB_RB0_MASK                                     0x1
#define _PORTB_RB1_POSN                                     0x1
#define _PORTB_RB1_POSITION                                 0x1
#define _PORTB_RB1_SIZE                                     0x1
#define _PORTB_RB1_LENGTH                                   0x1
#define _PORTB_RB1_MASK                                     0x2
#define _PORTB_RB2_POSN                                     0x2
#define _PORTB_RB2_POSITION                                 0x2
#define _PORTB_RB2_SIZE                                     0x1
#define _PORTB_RB2_LENGTH                                   0x1
#define _PORTB_RB2_MASK                                     0x4
#define _PORTB_RB3_POSN                                     0x3
#define _PORTB_RB3_POSITION                                 0x3
#define _PORTB_RB3_SIZE                                     0x1
#define _PORTB_RB3_LENGTH                                   0x1
#define _PORTB_RB3_MASK                                     0x8
#define _PORTB_RB4_POSN                                     0x4
#define _PORTB_RB4_POSITION                                 0x4
#define _PORTB_RB4_SIZE                                     0x1
#define _PORTB_RB4_LENGTH                                   0x1
#define _PORTB_RB4_MASK                                     0x10
#define _PORTB_RB5_POSN                                     0x5
#define _PORTB_RB5_POSITION                                 0x5
#define _PORTB_RB5_SIZE                                     0x1
#define _PORTB_RB5_LENGTH                                   0x1
#define _PORTB_RB5_MASK                                     0x20
#define _PORTB_RB6_POSN                                     0x6
#define _PORTB_RB6_POSITION                                 0x6
#define _PORTB_RB6_SIZE                                     0x1
#define _PORTB_RB6_LENGTH                                   0x1
#define _PORTB_RB6_MASK                                     0x40
#define _PORTB_RB7_POSN                                     0x7
#define _PORTB_RB7_POSITION                                 0x7
#define _PORTB_RB7_SIZE                                     0x1
#define _PORTB_RB7_LENGTH                                   0x1
#define _PORTB_RB7_MASK                                     0x80
#define _PORTB_INT0_POSN                                    0x0
#define _PORTB_INT0_POSITION                                0x0
#define _PORTB_INT0_SIZE                                    0x1
#define _PORTB_INT0_LENGTH                                  0x1
#define _PORTB_INT0_MASK                                    0x1
#define _PORTB_INT1_POSN                                    0x1
#define _PORTB_INT1_POSITION                                0x1
#define _PORTB_INT1_SIZE                                    0x1
#define _PORTB_INT1_LENGTH                                  0x1
#define _PORTB_INT1_MASK                                    0x2
#define _PORTB_INT2_POSN                                    0x2
#define _PORTB_INT2_POSITION                                0x2
#define _PORTB_INT2_SIZE                                    0x1
#define _PORTB_INT2_LENGTH                                  0x1
#define _PORTB_INT2_MASK                                    0x4
#define _PORTB_INT3_POSN                                    0x3
#define _PORTB_INT3_POSITION                                0x3
#define _PORTB_INT3_SIZE                                    0x1
#define _PORTB_INT3_LENGTH                                  0x1
#define _PORTB_INT3_MASK                                    0x8
#define _PORTB_KBI0_POSN                                    0x4
#define _PORTB_KBI0_POSITION                                0x4
#define _PORTB_KBI0_SIZE                                    0x1
#define _PORTB_KBI0_LENGTH                                  0x1
#define _PORTB_KBI0_MASK                                    0x10
#define _PORTB_KBI1_POSN                                    0x5
#define _PORTB_KBI1_POSITION                                0x5
#define _PORTB_KBI1_SIZE                                    0x1
#define _PORTB_KBI1_LENGTH                                  0x1
#define _PORTB_KBI1_MASK                                    0x20
#define _PORTB_KBI2_POSN                                    0x6
#define _PORTB_KBI2_POSITION                                0x6
#define _PORTB_KBI2_SIZE                                    0x1
#define _PORTB_KBI2_LENGTH                                  0x1
#define _PORTB_KBI2_MASK                                    0x40
#define _PORTB_KBI3_POSN                                    0x7
#define _PORTB_KBI3_POSITION                                0x7
#define _PORTB_KBI3_SIZE                                    0x1
#define _PORTB_KBI3_LENGTH                                  0x1
#define _PORTB_KBI3_MASK                                    0x80
#define _PORTB_SEG30_POSN                                   0x0
#define _PORTB_SEG30_POSITION                               0x0
#define _PORTB_SEG30_SIZE                                   0x1
#define _PORTB_SEG30_LENGTH                                 0x1
#define _PORTB_SEG30_MASK                                   0x1
#define _PORTB_SEG8_POSN                                    0x1
#define _PORTB_SEG8_POSITION                                0x1
#define _PORTB_SEG8_SIZE                                    0x1
#define _PORTB_SEG8_LENGTH                                  0x1
#define _PORTB_SEG8_MASK                                    0x2
#define _PORTB_SEG9_POSN                                    0x2
#define _PORTB_SEG9_POSITION                                0x2
#define _PORTB_SEG9_SIZE                                    0x1
#define _PORTB_SEG9_LENGTH                                  0x1
#define _PORTB_SEG9_MASK                                    0x4
#define _PORTB_SEG10_POSN                                   0x3
#define _PORTB_SEG10_POSITION                               0x3
#define _PORTB_SEG10_SIZE                                   0x1
#define _PORTB_SEG10_LENGTH                                 0x1
#define _PORTB_SEG10_MASK                                   0x8
#define _PORTB_SEG11_POSN                                   0x4
#define _PORTB_SEG11_POSITION                               0x4
#define _PORTB_SEG11_SIZE                                   0x1
#define _PORTB_SEG11_LENGTH                                 0x1
#define _PORTB_SEG11_MASK                                   0x10
#define _PORTB_SEG29_POSN                                   0x5
#define _PORTB_SEG29_POSITION                               0x5
#define _PORTB_SEG29_SIZE                                   0x1
#define _PORTB_SEG29_LENGTH                                 0x1
#define _PORTB_SEG29_MASK                                   0x20
#define _PORTB_FLT0_POSN                                    0x0
#define _PORTB_FLT0_POSITION                                0x0
#define _PORTB_FLT0_SIZE                                    0x1
#define _PORTB_FLT0_LENGTH                                  0x1
#define _PORTB_FLT0_MASK                                    0x1
#define _PORTB_CTED1_POSN                                   0x2
#define _PORTB_CTED1_POSITION                               0x2
#define _PORTB_CTED1_SIZE                                   0x1
#define _PORTB_CTED1_LENGTH                                 0x1
#define _PORTB_CTED1_MASK                                   0x4
#define _PORTB_CTED2_POSN                                   0x3
#define _PORTB_CTED2_POSITION                               0x3
#define _PORTB_CTED2_SIZE                                   0x1
#define _PORTB_CTED2_LENGTH                                 0x1
#define _PORTB_CTED2_MASK                                   0x8
#define _PORTB_T3CKI_POSN                                   0x5
#define _PORTB_T3CKI_POSITION                               0x5
#define _PORTB_T3CKI_SIZE                                   0x1
#define _PORTB_T3CKI_LENGTH                                 0x1
#define _PORTB_T3CKI_MASK                                   0x20
#define _PORTB_CCP2_PA2_POSN                                0x3
#define _PORTB_CCP2_PA2_POSITION                            0x3
#define _PORTB_CCP2_PA2_SIZE                                0x1
#define _PORTB_CCP2_PA2_LENGTH                              0x1
#define _PORTB_CCP2_PA2_MASK                                0x8
#define _PORTB_T1G_POSN                                     0x5
#define _PORTB_T1G_POSITION                                 0x5
#define _PORTB_T1G_SIZE                                     0x1
#define _PORTB_T1G_LENGTH                                   0x1
#define _PORTB_T1G_MASK                                     0x20
#define _PORTB_PGM_POSN                                     0x5
#define _PORTB_PGM_POSITION                                 0x5
#define _PORTB_PGM_SIZE                                     0x1
#define _PORTB_PGM_LENGTH                                   0x1
#define _PORTB_PGM_MASK                                     0x20
#define _PORTB_PGC_POSN                                     0x6
#define _PORTB_PGC_POSITION                                 0x6
#define _PORTB_PGC_SIZE                                     0x1
#define _PORTB_PGC_LENGTH                                   0x1
#define _PORTB_PGC_MASK                                     0x40
#define _PORTB_PGD_POSN                                     0x7
#define _PORTB_PGD_POSITION                                 0x7
#define _PORTB_PGD_SIZE                                     0x1
#define _PORTB_PGD_LENGTH                                   0x1
#define _PORTB_PGD_MASK                                     0x80

// Register: PORTC
#define PORTC PORTC
extern volatile unsigned char           PORTC               __at(0xF82);
#ifndef _LIB_BUILD
asm("PORTC equ 0F82h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC0                    :1;
        unsigned RC1                    :1;
        unsigned RC2                    :1;
        unsigned RC3                    :1;
        unsigned RC4                    :1;
        unsigned RC5                    :1;
        unsigned RC6                    :1;
        unsigned RC7                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned SEG32                  :1;
        unsigned SEG13                  :1;
        unsigned SEG17                  :1;
        unsigned SEG16                  :1;
        unsigned SEG12                  :1;
        unsigned SEG27                  :1;
        unsigned SEG28                  :1;
    };
    struct {
        unsigned SOSCO                  :1;
        unsigned SOSCI                  :1;
        unsigned                        :1;
        unsigned SCK1                   :1;
        unsigned SDI1                   :1;
        unsigned SDO1                   :1;
        unsigned TX1                    :1;
        unsigned RX1                    :1;
    };
    struct {
        unsigned SCKLI                  :1;
        unsigned CCP2                   :1;
        unsigned CCP1                   :1;
        unsigned SCL1                   :1;
        unsigned SDA1                   :1;
        unsigned                        :1;
        unsigned CK1                    :1;
        unsigned DT1                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned PA2                    :1;
        unsigned PA1                    :1;
    };
} PORTCbits_t;
extern volatile PORTCbits_t PORTCbits __at(0xF82);
// bitfield macros
#define _PORTC_RC0_POSN                                     0x0
#define _PORTC_RC0_POSITION                                 0x0
#define _PORTC_RC0_SIZE                                     0x1
#define _PORTC_RC0_LENGTH                                   0x1
#define _PORTC_RC0_MASK                                     0x1
#define _PORTC_RC1_POSN                                     0x1
#define _PORTC_RC1_POSITION                                 0x1
#define _PORTC_RC1_SIZE                                     0x1
#define _PORTC_RC1_LENGTH                                   0x1
#define _PORTC_RC1_MASK                                     0x2
#define _PORTC_RC2_POSN                                     0x2
#define _PORTC_RC2_POSITION                                 0x2
#define _PORTC_RC2_SIZE                                     0x1
#define _PORTC_RC2_LENGTH                                   0x1
#define _PORTC_RC2_MASK                                     0x4
#define _PORTC_RC3_POSN                                     0x3
#define _PORTC_RC3_POSITION                                 0x3
#define _PORTC_RC3_SIZE                                     0x1
#define _PORTC_RC3_LENGTH                                   0x1
#define _PORTC_RC3_MASK                                     0x8
#define _PORTC_RC4_POSN                                     0x4
#define _PORTC_RC4_POSITION                                 0x4
#define _PORTC_RC4_SIZE                                     0x1
#define _PORTC_RC4_LENGTH                                   0x1
#define _PORTC_RC4_MASK                                     0x10
#define _PORTC_RC5_POSN                                     0x5
#define _PORTC_RC5_POSITION                                 0x5
#define _PORTC_RC5_SIZE                                     0x1
#define _PORTC_RC5_LENGTH                                   0x1
#define _PORTC_RC5_MASK                                     0x20
#define _PORTC_RC6_POSN                                     0x6
#define _PORTC_RC6_POSITION                                 0x6
#define _PORTC_RC6_SIZE                                     0x1
#define _PORTC_RC6_LENGTH                                   0x1
#define _PORTC_RC6_MASK                                     0x40
#define _PORTC_RC7_POSN                                     0x7
#define _PORTC_RC7_POSITION                                 0x7
#define _PORTC_RC7_SIZE                                     0x1
#define _PORTC_RC7_LENGTH                                   0x1
#define _PORTC_RC7_MASK                                     0x80
#define _PORTC_SEG32_POSN                                   0x1
#define _PORTC_SEG32_POSITION                               0x1
#define _PORTC_SEG32_SIZE                                   0x1
#define _PORTC_SEG32_LENGTH                                 0x1
#define _PORTC_SEG32_MASK                                   0x2
#define _PORTC_SEG13_POSN                                   0x2
#define _PORTC_SEG13_POSITION                               0x2
#define _PORTC_SEG13_SIZE                                   0x1
#define _PORTC_SEG13_LENGTH                                 0x1
#define _PORTC_SEG13_MASK                                   0x4
#define _PORTC_SEG17_POSN                                   0x3
#define _PORTC_SEG17_POSITION                               0x3
#define _PORTC_SEG17_SIZE                                   0x1
#define _PORTC_SEG17_LENGTH                                 0x1
#define _PORTC_SEG17_MASK                                   0x8
#define _PORTC_SEG16_POSN                                   0x4
#define _PORTC_SEG16_POSITION                               0x4
#define _PORTC_SEG16_SIZE                                   0x1
#define _PORTC_SEG16_LENGTH                                 0x1
#define _PORTC_SEG16_MASK                                   0x10
#define _PORTC_SEG12_POSN                                   0x5
#define _PORTC_SEG12_POSITION                               0x5
#define _PORTC_SEG12_SIZE                                   0x1
#define _PORTC_SEG12_LENGTH                                 0x1
#define _PORTC_SEG12_MASK                                   0x20
#define _PORTC_SEG27_POSN                                   0x6
#define _PORTC_SEG27_POSITION                               0x6
#define _PORTC_SEG27_SIZE                                   0x1
#define _PORTC_SEG27_LENGTH                                 0x1
#define _PORTC_SEG27_MASK                                   0x40
#define _PORTC_SEG28_POSN                                   0x7
#define _PORTC_SEG28_POSITION                               0x7
#define _PORTC_SEG28_SIZE                                   0x1
#define _PORTC_SEG28_LENGTH                                 0x1
#define _PORTC_SEG28_MASK                                   0x80
#define _PORTC_SOSCO_POSN                                   0x0
#define _PORTC_SOSCO_POSITION                               0x0
#define _PORTC_SOSCO_SIZE                                   0x1
#define _PORTC_SOSCO_LENGTH                                 0x1
#define _PORTC_SOSCO_MASK                                   0x1
#define _PORTC_SOSCI_POSN                                   0x1
#define _PORTC_SOSCI_POSITION                               0x1
#define _PORTC_SOSCI_SIZE                                   0x1
#define _PORTC_SOSCI_LENGTH                                 0x1
#define _PORTC_SOSCI_MASK                                   0x2
#define _PORTC_SCK1_POSN                                    0x3
#define _PORTC_SCK1_POSITION                                0x3
#define _PORTC_SCK1_SIZE                                    0x1
#define _PORTC_SCK1_LENGTH                                  0x1
#define _PORTC_SCK1_MASK                                    0x8
#define _PORTC_SDI1_POSN                                    0x4
#define _PORTC_SDI1_POSITION                                0x4
#define _PORTC_SDI1_SIZE                                    0x1
#define _PORTC_SDI1_LENGTH                                  0x1
#define _PORTC_SDI1_MASK                                    0x10
#define _PORTC_SDO1_POSN                                    0x5
#define _PORTC_SDO1_POSITION                                0x5
#define _PORTC_SDO1_SIZE                                    0x1
#define _PORTC_SDO1_LENGTH                                  0x1
#define _PORTC_SDO1_MASK                                    0x20
#define _PORTC_TX1_POSN                                     0x6
#define _PORTC_TX1_POSITION                                 0x6
#define _PORTC_TX1_SIZE                                     0x1
#define _PORTC_TX1_LENGTH                                   0x1
#define _PORTC_TX1_MASK                                     0x40
#define _PORTC_RX1_POSN                                     0x7
#define _PORTC_RX1_POSITION                                 0x7
#define _PORTC_RX1_SIZE                                     0x1
#define _PORTC_RX1_LENGTH                                   0x1
#define _PORTC_RX1_MASK                                     0x80
#define _PORTC_SCKLI_POSN                                   0x0
#define _PORTC_SCKLI_POSITION                               0x0
#define _PORTC_SCKLI_SIZE                                   0x1
#define _PORTC_SCKLI_LENGTH                                 0x1
#define _PORTC_SCKLI_MASK                                   0x1
#define _PORTC_CCP2_POSN                                    0x1
#define _PORTC_CCP2_POSITION                                0x1
#define _PORTC_CCP2_SIZE                                    0x1
#define _PORTC_CCP2_LENGTH                                  0x1
#define _PORTC_CCP2_MASK                                    0x2
#define _PORTC_CCP1_POSN                                    0x2
#define _PORTC_CCP1_POSITION                                0x2
#define _PORTC_CCP1_SIZE                                    0x1
#define _PORTC_CCP1_LENGTH                                  0x1
#define _PORTC_CCP1_MASK                                    0x4
#define _PORTC_SCL1_POSN                                    0x3
#define _PORTC_SCL1_POSITION                                0x3
#define _PORTC_SCL1_SIZE                                    0x1
#define _PORTC_SCL1_LENGTH                                  0x1
#define _PORTC_SCL1_MASK                                    0x8
#define _PORTC_SDA1_POSN                                    0x4
#define _PORTC_SDA1_POSITION                                0x4
#define _PORTC_SDA1_SIZE                                    0x1
#define _PORTC_SDA1_LENGTH                                  0x1
#define _PORTC_SDA1_MASK                                    0x10
#define _PORTC_CK1_POSN                                     0x6
#define _PORTC_CK1_POSITION                                 0x6
#define _PORTC_CK1_SIZE                                     0x1
#define _PORTC_CK1_LENGTH                                   0x1
#define _PORTC_CK1_MASK                                     0x40
#define _PORTC_DT1_POSN                                     0x7
#define _PORTC_DT1_POSITION                                 0x7
#define _PORTC_DT1_SIZE                                     0x1
#define _PORTC_DT1_LENGTH                                   0x1
#define _PORTC_DT1_MASK                                     0x80
#define _PORTC_PA2_POSN                                     0x1
#define _PORTC_PA2_POSITION                                 0x1
#define _PORTC_PA2_SIZE                                     0x1
#define _PORTC_PA2_LENGTH                                   0x1
#define _PORTC_PA2_MASK                                     0x2
#define _PORTC_PA1_POSN                                     0x2
#define _PORTC_PA1_POSITION                                 0x2
#define _PORTC_PA1_SIZE                                     0x1
#define _PORTC_PA1_LENGTH                                   0x1
#define _PORTC_PA1_MASK                                     0x4

// Register: PORTD
#define PORTD PORTD
extern volatile unsigned char           PORTD               __at(0xF83);
#ifndef _LIB_BUILD
asm("PORTD equ 0F83h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD0                    :1;
        unsigned RD1                    :1;
        unsigned RD2                    :1;
        unsigned RD3                    :1;
        unsigned RD4                    :1;
        unsigned RD5                    :1;
        unsigned RD6                    :1;
        unsigned RD7                    :1;
    };
    struct {
        unsigned AD0                    :1;
        unsigned AD1                    :1;
        unsigned AD2                    :1;
        unsigned AD3                    :1;
        unsigned AD4                    :1;
        unsigned AD5                    :1;
        unsigned AD6                    :1;
        unsigned AD7                    :1;
    };
    struct {
        unsigned PSP0                   :1;
        unsigned PSP1                   :1;
        unsigned PSP2                   :1;
        unsigned PSP3                   :1;
        unsigned PSP4                   :1;
        unsigned PSP5                   :1;
        unsigned PSP6                   :1;
        unsigned PSP7                   :1;
    };
    struct {
        unsigned SEG0                   :1;
        unsigned SEG1                   :1;
        unsigned SEG2                   :1;
        unsigned SEG3                   :1;
        unsigned SEG4                   :1;
        unsigned SEG5                   :1;
        unsigned SEG6                   :1;
        unsigned SEG7                   :1;
    };
    struct {
        unsigned CTPLS                  :1;
        unsigned T5CKI                  :1;
        unsigned                        :2;
        unsigned SDO2                   :1;
        unsigned SDI2                   :1;
        unsigned SCK2                   :1;
        unsigned SS2                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned T7G                    :1;
        unsigned                        :3;
        unsigned SDA2                   :1;
        unsigned SCL2                   :1;
    };
} PORTDbits_t;
extern volatile PORTDbits_t PORTDbits __at(0xF83);
// bitfield macros
#define _PORTD_RD0_POSN                                     0x0
#define _PORTD_RD0_POSITION                                 0x0
#define _PORTD_RD0_SIZE                                     0x1
#define _PORTD_RD0_LENGTH                                   0x1
#define _PORTD_RD0_MASK                                     0x1
#define _PORTD_RD1_POSN                                     0x1
#define _PORTD_RD1_POSITION                                 0x1
#define _PORTD_RD1_SIZE                                     0x1
#define _PORTD_RD1_LENGTH                                   0x1
#define _PORTD_RD1_MASK                                     0x2
#define _PORTD_RD2_POSN                                     0x2
#define _PORTD_RD2_POSITION                                 0x2
#define _PORTD_RD2_SIZE                                     0x1
#define _PORTD_RD2_LENGTH                                   0x1
#define _PORTD_RD2_MASK                                     0x4
#define _PORTD_RD3_POSN                                     0x3
#define _PORTD_RD3_POSITION                                 0x3
#define _PORTD_RD3_SIZE                                     0x1
#define _PORTD_RD3_LENGTH                                   0x1
#define _PORTD_RD3_MASK                                     0x8
#define _PORTD_RD4_POSN                                     0x4
#define _PORTD_RD4_POSITION                                 0x4
#define _PORTD_RD4_SIZE                                     0x1
#define _PORTD_RD4_LENGTH                                   0x1
#define _PORTD_RD4_MASK                                     0x10
#define _PORTD_RD5_POSN                                     0x5
#define _PORTD_RD5_POSITION                                 0x5
#define _PORTD_RD5_SIZE                                     0x1
#define _PORTD_RD5_LENGTH                                   0x1
#define _PORTD_RD5_MASK                                     0x20
#define _PORTD_RD6_POSN                                     0x6
#define _PORTD_RD6_POSITION                                 0x6
#define _PORTD_RD6_SIZE                                     0x1
#define _PORTD_RD6_LENGTH                                   0x1
#define _PORTD_RD6_MASK                                     0x40
#define _PORTD_RD7_POSN                                     0x7
#define _PORTD_RD7_POSITION                                 0x7
#define _PORTD_RD7_SIZE                                     0x1
#define _PORTD_RD7_LENGTH                                   0x1
#define _PORTD_RD7_MASK                                     0x80
#define _PORTD_AD0_POSN                                     0x0
#define _PORTD_AD0_POSITION                                 0x0
#define _PORTD_AD0_SIZE                                     0x1
#define _PORTD_AD0_LENGTH                                   0x1
#define _PORTD_AD0_MASK                                     0x1
#define _PORTD_AD1_POSN                                     0x1
#define _PORTD_AD1_POSITION                                 0x1
#define _PORTD_AD1_SIZE                                     0x1
#define _PORTD_AD1_LENGTH                                   0x1
#define _PORTD_AD1_MASK                                     0x2
#define _PORTD_AD2_POSN                                     0x2
#define _PORTD_AD2_POSITION                                 0x2
#define _PORTD_AD2_SIZE                                     0x1
#define _PORTD_AD2_LENGTH                                   0x1
#define _PORTD_AD2_MASK                                     0x4
#define _PORTD_AD3_POSN                                     0x3
#define _PORTD_AD3_POSITION                                 0x3
#define _PORTD_AD3_SIZE                                     0x1
#define _PORTD_AD3_LENGTH                                   0x1
#define _PORTD_AD3_MASK                                     0x8
#define _PORTD_AD4_POSN                                     0x4
#define _PORTD_AD4_POSITION                                 0x4
#define _PORTD_AD4_SIZE                                     0x1
#define _PORTD_AD4_LENGTH                                   0x1
#define _PORTD_AD4_MASK                                     0x10
#define _PORTD_AD5_POSN                                     0x5
#define _PORTD_AD5_POSITION                                 0x5
#define _PORTD_AD5_SIZE                                     0x1
#define _PORTD_AD5_LENGTH                                   0x1
#define _PORTD_AD5_MASK                                     0x20
#define _PORTD_AD6_POSN                                     0x6
#define _PORTD_AD6_POSITION                                 0x6
#define _PORTD_AD6_SIZE                                     0x1
#define _PORTD_AD6_LENGTH                                   0x1
#define _PORTD_AD6_MASK                                     0x40
#define _PORTD_AD7_POSN                                     0x7
#define _PORTD_AD7_POSITION                                 0x7
#define _PORTD_AD7_SIZE                                     0x1
#define _PORTD_AD7_LENGTH                                   0x1
#define _PORTD_AD7_MASK                                     0x80
#define _PORTD_PSP0_POSN                                    0x0
#define _PORTD_PSP0_POSITION                                0x0
#define _PORTD_PSP0_SIZE                                    0x1
#define _PORTD_PSP0_LENGTH                                  0x1
#define _PORTD_PSP0_MASK                                    0x1
#define _PORTD_PSP1_POSN                                    0x1
#define _PORTD_PSP1_POSITION                                0x1
#define _PORTD_PSP1_SIZE                                    0x1
#define _PORTD_PSP1_LENGTH                                  0x1
#define _PORTD_PSP1_MASK                                    0x2
#define _PORTD_PSP2_POSN                                    0x2
#define _PORTD_PSP2_POSITION                                0x2
#define _PORTD_PSP2_SIZE                                    0x1
#define _PORTD_PSP2_LENGTH                                  0x1
#define _PORTD_PSP2_MASK                                    0x4
#define _PORTD_PSP3_POSN                                    0x3
#define _PORTD_PSP3_POSITION                                0x3
#define _PORTD_PSP3_SIZE                                    0x1
#define _PORTD_PSP3_LENGTH                                  0x1
#define _PORTD_PSP3_MASK                                    0x8
#define _PORTD_PSP4_POSN                                    0x4
#define _PORTD_PSP4_POSITION                                0x4
#define _PORTD_PSP4_SIZE                                    0x1
#define _PORTD_PSP4_LENGTH                                  0x1
#define _PORTD_PSP4_MASK                                    0x10
#define _PORTD_PSP5_POSN                                    0x5
#define _PORTD_PSP5_POSITION                                0x5
#define _PORTD_PSP5_SIZE                                    0x1
#define _PORTD_PSP5_LENGTH                                  0x1
#define _PORTD_PSP5_MASK                                    0x20
#define _PORTD_PSP6_POSN                                    0x6
#define _PORTD_PSP6_POSITION                                0x6
#define _PORTD_PSP6_SIZE                                    0x1
#define _PORTD_PSP6_LENGTH                                  0x1
#define _PORTD_PSP6_MASK                                    0x40
#define _PORTD_PSP7_POSN                                    0x7
#define _PORTD_PSP7_POSITION                                0x7
#define _PORTD_PSP7_SIZE                                    0x1
#define _PORTD_PSP7_LENGTH                                  0x1
#define _PORTD_PSP7_MASK                                    0x80
#define _PORTD_SEG0_POSN                                    0x0
#define _PORTD_SEG0_POSITION                                0x0
#define _PORTD_SEG0_SIZE                                    0x1
#define _PORTD_SEG0_LENGTH                                  0x1
#define _PORTD_SEG0_MASK                                    0x1
#define _PORTD_SEG1_POSN                                    0x1
#define _PORTD_SEG1_POSITION                                0x1
#define _PORTD_SEG1_SIZE                                    0x1
#define _PORTD_SEG1_LENGTH                                  0x1
#define _PORTD_SEG1_MASK                                    0x2
#define _PORTD_SEG2_POSN                                    0x2
#define _PORTD_SEG2_POSITION                                0x2
#define _PORTD_SEG2_SIZE                                    0x1
#define _PORTD_SEG2_LENGTH                                  0x1
#define _PORTD_SEG2_MASK                                    0x4
#define _PORTD_SEG3_POSN                                    0x3
#define _PORTD_SEG3_POSITION                                0x3
#define _PORTD_SEG3_SIZE                                    0x1
#define _PORTD_SEG3_LENGTH                                  0x1
#define _PORTD_SEG3_MASK                                    0x8
#define _PORTD_SEG4_POSN                                    0x4
#define _PORTD_SEG4_POSITION                                0x4
#define _PORTD_SEG4_SIZE                                    0x1
#define _PORTD_SEG4_LENGTH                                  0x1
#define _PORTD_SEG4_MASK                                    0x10
#define _PORTD_SEG5_POSN                                    0x5
#define _PORTD_SEG5_POSITION                                0x5
#define _PORTD_SEG5_SIZE                                    0x1
#define _PORTD_SEG5_LENGTH                                  0x1
#define _PORTD_SEG5_MASK                                    0x20
#define _PORTD_SEG6_POSN                                    0x6
#define _PORTD_SEG6_POSITION                                0x6
#define _PORTD_SEG6_SIZE                                    0x1
#define _PORTD_SEG6_LENGTH                                  0x1
#define _PORTD_SEG6_MASK                                    0x40
#define _PORTD_SEG7_POSN                                    0x7
#define _PORTD_SEG7_POSITION                                0x7
#define _PORTD_SEG7_SIZE                                    0x1
#define _PORTD_SEG7_LENGTH                                  0x1
#define _PORTD_SEG7_MASK                                    0x80
#define _PORTD_CTPLS_POSN                                   0x0
#define _PORTD_CTPLS_POSITION                               0x0
#define _PORTD_CTPLS_SIZE                                   0x1
#define _PORTD_CTPLS_LENGTH                                 0x1
#define _PORTD_CTPLS_MASK                                   0x1
#define _PORTD_T5CKI_POSN                                   0x1
#define _PORTD_T5CKI_POSITION                               0x1
#define _PORTD_T5CKI_SIZE                                   0x1
#define _PORTD_T5CKI_LENGTH                                 0x1
#define _PORTD_T5CKI_MASK                                   0x2
#define _PORTD_SDO2_POSN                                    0x4
#define _PORTD_SDO2_POSITION                                0x4
#define _PORTD_SDO2_SIZE                                    0x1
#define _PORTD_SDO2_LENGTH                                  0x1
#define _PORTD_SDO2_MASK                                    0x10
#define _PORTD_SDI2_POSN                                    0x5
#define _PORTD_SDI2_POSITION                                0x5
#define _PORTD_SDI2_SIZE                                    0x1
#define _PORTD_SDI2_LENGTH                                  0x1
#define _PORTD_SDI2_MASK                                    0x20
#define _PORTD_SCK2_POSN                                    0x6
#define _PORTD_SCK2_POSITION                                0x6
#define _PORTD_SCK2_SIZE                                    0x1
#define _PORTD_SCK2_LENGTH                                  0x1
#define _PORTD_SCK2_MASK                                    0x40
#define _PORTD_SS2_POSN                                     0x7
#define _PORTD_SS2_POSITION                                 0x7
#define _PORTD_SS2_SIZE                                     0x1
#define _PORTD_SS2_LENGTH                                   0x1
#define _PORTD_SS2_MASK                                     0x80
#define _PORTD_T7G_POSN                                     0x1
#define _PORTD_T7G_POSITION                                 0x1
#define _PORTD_T7G_SIZE                                     0x1
#define _PORTD_T7G_LENGTH                                   0x1
#define _PORTD_T7G_MASK                                     0x2
#define _PORTD_SDA2_POSN                                    0x5
#define _PORTD_SDA2_POSITION                                0x5
#define _PORTD_SDA2_SIZE                                    0x1
#define _PORTD_SDA2_LENGTH                                  0x1
#define _PORTD_SDA2_MASK                                    0x20
#define _PORTD_SCL2_POSN                                    0x6
#define _PORTD_SCL2_POSITION                                0x6
#define _PORTD_SCL2_SIZE                                    0x1
#define _PORTD_SCL2_LENGTH                                  0x1
#define _PORTD_SCL2_MASK                                    0x40

// Register: PORTE
#define PORTE PORTE
extern volatile unsigned char           PORTE               __at(0xF84);
#ifndef _LIB_BUILD
asm("PORTE equ 0F84h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RE0                    :1;
        unsigned RE1                    :1;
        unsigned RE2                    :1;
        unsigned RE3                    :1;
        unsigned RE4                    :1;
        unsigned RE5                    :1;
        unsigned RE6                    :1;
        unsigned RE7                    :1;
    };
    struct {
        unsigned AD8                    :1;
        unsigned AD9                    :1;
        unsigned AD10                   :1;
        unsigned AD11                   :1;
        unsigned AD12                   :1;
        unsigned AD13                   :1;
        unsigned AD14                   :1;
        unsigned AD15                   :1;
    };
    struct {
        unsigned PD2                    :1;
        unsigned PC2                    :1;
        unsigned PB2                    :1;
        unsigned PC3                    :1;
        unsigned PB3                    :1;
        unsigned PC1                    :1;
        unsigned PB1                    :1;
        unsigned PA2                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned CCP10                  :1;
        unsigned CCP9                   :1;
        unsigned CCP8                   :1;
        unsigned CCP7                   :1;
        unsigned CCP6                   :1;
        unsigned CCP2                   :1;
    };
    struct {
        unsigned RD                     :1;
        unsigned WR                     :1;
        unsigned CS                     :1;
        unsigned COM0                   :1;
        unsigned COM1                   :1;
        unsigned COM2                   :1;
        unsigned COM3                   :1;
        unsigned SEG31                  :1;
    };
    struct {
        unsigned LCDBIAS1               :1;
        unsigned LCDBIAS2               :1;
        unsigned LCDBIAS3               :1;
        unsigned                        :1;
        unsigned REFO                   :1;
    };
    struct {
        unsigned RDE                    :1;
        unsigned WRE                    :1;
        unsigned                        :1;
        unsigned CCP9E                  :1;
        unsigned CCP8E                  :1;
        unsigned CCP7E                  :1;
        unsigned CCP6E                  :1;
        unsigned CCP2E                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned PC3E                   :1;
        unsigned PB3E                   :1;
        unsigned PC1E                   :1;
        unsigned PB1E                   :1;
        unsigned PA2E                   :1;
    };
} PORTEbits_t;
extern volatile PORTEbits_t PORTEbits __at(0xF84);
// bitfield macros
#define _PORTE_RE0_POSN                                     0x0
#define _PORTE_RE0_POSITION                                 0x0
#define _PORTE_RE0_SIZE                                     0x1
#define _PORTE_RE0_LENGTH                                   0x1
#define _PORTE_RE0_MASK                                     0x1
#define _PORTE_RE1_POSN                                     0x1
#define _PORTE_RE1_POSITION                                 0x1
#define _PORTE_RE1_SIZE                                     0x1
#define _PORTE_RE1_LENGTH                                   0x1
#define _PORTE_RE1_MASK                                     0x2
#define _PORTE_RE2_POSN                                     0x2
#define _PORTE_RE2_POSITION                                 0x2
#define _PORTE_RE2_SIZE                                     0x1
#define _PORTE_RE2_LENGTH                                   0x1
#define _PORTE_RE2_MASK                                     0x4
#define _PORTE_RE3_POSN                                     0x3
#define _PORTE_RE3_POSITION                                 0x3
#define _PORTE_RE3_SIZE                                     0x1
#define _PORTE_RE3_LENGTH                                   0x1
#define _PORTE_RE3_MASK                                     0x8
#define _PORTE_RE4_POSN                                     0x4
#define _PORTE_RE4_POSITION                                 0x4
#define _PORTE_RE4_SIZE                                     0x1
#define _PORTE_RE4_LENGTH                                   0x1
#define _PORTE_RE4_MASK                                     0x10
#define _PORTE_RE5_POSN                                     0x5
#define _PORTE_RE5_POSITION                                 0x5
#define _PORTE_RE5_SIZE                                     0x1
#define _PORTE_RE5_LENGTH                                   0x1
#define _PORTE_RE5_MASK                                     0x20
#define _PORTE_RE6_POSN                                     0x6
#define _PORTE_RE6_POSITION                                 0x6
#define _PORTE_RE6_SIZE                                     0x1
#define _PORTE_RE6_LENGTH                                   0x1
#define _PORTE_RE6_MASK                                     0x40
#define _PORTE_RE7_POSN                                     0x7
#define _PORTE_RE7_POSITION                                 0x7
#define _PORTE_RE7_SIZE                                     0x1
#define _PORTE_RE7_LENGTH                                   0x1
#define _PORTE_RE7_MASK                                     0x80
#define _PORTE_AD8_POSN                                     0x0
#define _PORTE_AD8_POSITION                                 0x0
#define _PORTE_AD8_SIZE                                     0x1
#define _PORTE_AD8_LENGTH                                   0x1
#define _PORTE_AD8_MASK                                     0x1
#define _PORTE_AD9_POSN                                     0x1
#define _PORTE_AD9_POSITION                                 0x1
#define _PORTE_AD9_SIZE                                     0x1
#define _PORTE_AD9_LENGTH                                   0x1
#define _PORTE_AD9_MASK                                     0x2
#define _PORTE_AD10_POSN                                    0x2
#define _PORTE_AD10_POSITION                                0x2
#define _PORTE_AD10_SIZE                                    0x1
#define _PORTE_AD10_LENGTH                                  0x1
#define _PORTE_AD10_MASK                                    0x4
#define _PORTE_AD11_POSN                                    0x3
#define _PORTE_AD11_POSITION                                0x3
#define _PORTE_AD11_SIZE                                    0x1
#define _PORTE_AD11_LENGTH                                  0x1
#define _PORTE_AD11_MASK                                    0x8
#define _PORTE_AD12_POSN                                    0x4
#define _PORTE_AD12_POSITION                                0x4
#define _PORTE_AD12_SIZE                                    0x1
#define _PORTE_AD12_LENGTH                                  0x1
#define _PORTE_AD12_MASK                                    0x10
#define _PORTE_AD13_POSN                                    0x5
#define _PORTE_AD13_POSITION                                0x5
#define _PORTE_AD13_SIZE                                    0x1
#define _PORTE_AD13_LENGTH                                  0x1
#define _PORTE_AD13_MASK                                    0x20
#define _PORTE_AD14_POSN                                    0x6
#define _PORTE_AD14_POSITION                                0x6
#define _PORTE_AD14_SIZE                                    0x1
#define _PORTE_AD14_LENGTH                                  0x1
#define _PORTE_AD14_MASK                                    0x40
#define _PORTE_AD15_POSN                                    0x7
#define _PORTE_AD15_POSITION                                0x7
#define _PORTE_AD15_SIZE                                    0x1
#define _PORTE_AD15_LENGTH                                  0x1
#define _PORTE_AD15_MASK                                    0x80
#define _PORTE_PD2_POSN                                     0x0
#define _PORTE_PD2_POSITION                                 0x0
#define _PORTE_PD2_SIZE                                     0x1
#define _PORTE_PD2_LENGTH                                   0x1
#define _PORTE_PD2_MASK                                     0x1
#define _PORTE_PC2_POSN                                     0x1
#define _PORTE_PC2_POSITION                                 0x1
#define _PORTE_PC2_SIZE                                     0x1
#define _PORTE_PC2_LENGTH                                   0x1
#define _PORTE_PC2_MASK                                     0x2
#define _PORTE_PB2_POSN                                     0x2
#define _PORTE_PB2_POSITION                                 0x2
#define _PORTE_PB2_SIZE                                     0x1
#define _PORTE_PB2_LENGTH                                   0x1
#define _PORTE_PB2_MASK                                     0x4
#define _PORTE_PC3_POSN                                     0x3
#define _PORTE_PC3_POSITION                                 0x3
#define _PORTE_PC3_SIZE                                     0x1
#define _PORTE_PC3_LENGTH                                   0x1
#define _PORTE_PC3_MASK                                     0x8
#define _PORTE_PB3_POSN                                     0x4
#define _PORTE_PB3_POSITION                                 0x4
#define _PORTE_PB3_SIZE                                     0x1
#define _PORTE_PB3_LENGTH                                   0x1
#define _PORTE_PB3_MASK                                     0x10
#define _PORTE_PC1_POSN                                     0x5
#define _PORTE_PC1_POSITION                                 0x5
#define _PORTE_PC1_SIZE                                     0x1
#define _PORTE_PC1_LENGTH                                   0x1
#define _PORTE_PC1_MASK                                     0x20
#define _PORTE_PB1_POSN                                     0x6
#define _PORTE_PB1_POSITION                                 0x6
#define _PORTE_PB1_SIZE                                     0x1
#define _PORTE_PB1_LENGTH                                   0x1
#define _PORTE_PB1_MASK                                     0x40
#define _PORTE_PA2_POSN                                     0x7
#define _PORTE_PA2_POSITION                                 0x7
#define _PORTE_PA2_SIZE                                     0x1
#define _PORTE_PA2_LENGTH                                   0x1
#define _PORTE_PA2_MASK                                     0x80
#define _PORTE_CCP10_POSN                                   0x2
#define _PORTE_CCP10_POSITION                               0x2
#define _PORTE_CCP10_SIZE                                   0x1
#define _PORTE_CCP10_LENGTH                                 0x1
#define _PORTE_CCP10_MASK                                   0x4
#define _PORTE_CCP9_POSN                                    0x3
#define _PORTE_CCP9_POSITION                                0x3
#define _PORTE_CCP9_SIZE                                    0x1
#define _PORTE_CCP9_LENGTH                                  0x1
#define _PORTE_CCP9_MASK                                    0x8
#define _PORTE_CCP8_POSN                                    0x4
#define _PORTE_CCP8_POSITION                                0x4
#define _PORTE_CCP8_SIZE                                    0x1
#define _PORTE_CCP8_LENGTH                                  0x1
#define _PORTE_CCP8_MASK                                    0x10
#define _PORTE_CCP7_POSN                                    0x5
#define _PORTE_CCP7_POSITION                                0x5
#define _PORTE_CCP7_SIZE                                    0x1
#define _PORTE_CCP7_LENGTH                                  0x1
#define _PORTE_CCP7_MASK                                    0x20
#define _PORTE_CCP6_POSN                                    0x6
#define _PORTE_CCP6_POSITION                                0x6
#define _PORTE_CCP6_SIZE                                    0x1
#define _PORTE_CCP6_LENGTH                                  0x1
#define _PORTE_CCP6_MASK                                    0x40
#define _PORTE_CCP2_POSN                                    0x7
#define _PORTE_CCP2_POSITION                                0x7
#define _PORTE_CCP2_SIZE                                    0x1
#define _PORTE_CCP2_LENGTH                                  0x1
#define _PORTE_CCP2_MASK                                    0x80
#define _PORTE_RD_POSN                                      0x0
#define _PORTE_RD_POSITION                                  0x0
#define _PORTE_RD_SIZE                                      0x1
#define _PORTE_RD_LENGTH                                    0x1
#define _PORTE_RD_MASK                                      0x1
#define _PORTE_WR_POSN                                      0x1
#define _PORTE_WR_POSITION                                  0x1
#define _PORTE_WR_SIZE                                      0x1
#define _PORTE_WR_LENGTH                                    0x1
#define _PORTE_WR_MASK                                      0x2
#define _PORTE_CS_POSN                                      0x2
#define _PORTE_CS_POSITION                                  0x2
#define _PORTE_CS_SIZE                                      0x1
#define _PORTE_CS_LENGTH                                    0x1
#define _PORTE_CS_MASK                                      0x4
#define _PORTE_COM0_POSN                                    0x3
#define _PORTE_COM0_POSITION                                0x3
#define _PORTE_COM0_SIZE                                    0x1
#define _PORTE_COM0_LENGTH                                  0x1
#define _PORTE_COM0_MASK                                    0x8
#define _PORTE_COM1_POSN                                    0x4
#define _PORTE_COM1_POSITION                                0x4
#define _PORTE_COM1_SIZE                                    0x1
#define _PORTE_COM1_LENGTH                                  0x1
#define _PORTE_COM1_MASK                                    0x10
#define _PORTE_COM2_POSN                                    0x5
#define _PORTE_COM2_POSITION                                0x5
#define _PORTE_COM2_SIZE                                    0x1
#define _PORTE_COM2_LENGTH                                  0x1
#define _PORTE_COM2_MASK                                    0x20
#define _PORTE_COM3_POSN                                    0x6
#define _PORTE_COM3_POSITION                                0x6
#define _PORTE_COM3_SIZE                                    0x1
#define _PORTE_COM3_LENGTH                                  0x1
#define _PORTE_COM3_MASK                                    0x40
#define _PORTE_SEG31_POSN                                   0x7
#define _PORTE_SEG31_POSITION                               0x7
#define _PORTE_SEG31_SIZE                                   0x1
#define _PORTE_SEG31_LENGTH                                 0x1
#define _PORTE_SEG31_MASK                                   0x80
#define _PORTE_LCDBIAS1_POSN                                0x0
#define _PORTE_LCDBIAS1_POSITION                            0x0
#define _PORTE_LCDBIAS1_SIZE                                0x1
#define _PORTE_LCDBIAS1_LENGTH                              0x1
#define _PORTE_LCDBIAS1_MASK                                0x1
#define _PORTE_LCDBIAS2_POSN                                0x1
#define _PORTE_LCDBIAS2_POSITION                            0x1
#define _PORTE_LCDBIAS2_SIZE                                0x1
#define _PORTE_LCDBIAS2_LENGTH                              0x1
#define _PORTE_LCDBIAS2_MASK                                0x2
#define _PORTE_LCDBIAS3_POSN                                0x2
#define _PORTE_LCDBIAS3_POSITION                            0x2
#define _PORTE_LCDBIAS3_SIZE                                0x1
#define _PORTE_LCDBIAS3_LENGTH                              0x1
#define _PORTE_LCDBIAS3_MASK                                0x4
#define _PORTE_REFO_POSN                                    0x4
#define _PORTE_REFO_POSITION                                0x4
#define _PORTE_REFO_SIZE                                    0x1
#define _PORTE_REFO_LENGTH                                  0x1
#define _PORTE_REFO_MASK                                    0x10
#define _PORTE_RDE_POSN                                     0x0
#define _PORTE_RDE_POSITION                                 0x0
#define _PORTE_RDE_SIZE                                     0x1
#define _PORTE_RDE_LENGTH                                   0x1
#define _PORTE_RDE_MASK                                     0x1
#define _PORTE_WRE_POSN                                     0x1
#define _PORTE_WRE_POSITION                                 0x1
#define _PORTE_WRE_SIZE                                     0x1
#define _PORTE_WRE_LENGTH                                   0x1
#define _PORTE_WRE_MASK                                     0x2
#define _PORTE_CCP9E_POSN                                   0x3
#define _PORTE_CCP9E_POSITION                               0x3
#define _PORTE_CCP9E_SIZE                                   0x1
#define _PORTE_CCP9E_LENGTH                                 0x1
#define _PORTE_CCP9E_MASK                                   0x8
#define _PORTE_CCP8E_POSN                                   0x4
#define _PORTE_CCP8E_POSITION                               0x4
#define _PORTE_CCP8E_SIZE                                   0x1
#define _PORTE_CCP8E_LENGTH                                 0x1
#define _PORTE_CCP8E_MASK                                   0x10
#define _PORTE_CCP7E_POSN                                   0x5
#define _PORTE_CCP7E_POSITION                               0x5
#define _PORTE_CCP7E_SIZE                                   0x1
#define _PORTE_CCP7E_LENGTH                                 0x1
#define _PORTE_CCP7E_MASK                                   0x20
#define _PORTE_CCP6E_POSN                                   0x6
#define _PORTE_CCP6E_POSITION                               0x6
#define _PORTE_CCP6E_SIZE                                   0x1
#define _PORTE_CCP6E_LENGTH                                 0x1
#define _PORTE_CCP6E_MASK                                   0x40
#define _PORTE_CCP2E_POSN                                   0x7
#define _PORTE_CCP2E_POSITION                               0x7
#define _PORTE_CCP2E_SIZE                                   0x1
#define _PORTE_CCP2E_LENGTH                                 0x1
#define _PORTE_CCP2E_MASK                                   0x80
#define _PORTE_PC3E_POSN                                    0x3
#define _PORTE_PC3E_POSITION                                0x3
#define _PORTE_PC3E_SIZE                                    0x1
#define _PORTE_PC3E_LENGTH                                  0x1
#define _PORTE_PC3E_MASK                                    0x8
#define _PORTE_PB3E_POSN                                    0x4
#define _PORTE_PB3E_POSITION                                0x4
#define _PORTE_PB3E_SIZE                                    0x1
#define _PORTE_PB3E_LENGTH                                  0x1
#define _PORTE_PB3E_MASK                                    0x10
#define _PORTE_PC1E_POSN                                    0x5
#define _PORTE_PC1E_POSITION                                0x5
#define _PORTE_PC1E_SIZE                                    0x1
#define _PORTE_PC1E_LENGTH                                  0x1
#define _PORTE_PC1E_MASK                                    0x20
#define _PORTE_PB1E_POSN                                    0x6
#define _PORTE_PB1E_POSITION                                0x6
#define _PORTE_PB1E_SIZE                                    0x1
#define _PORTE_PB1E_LENGTH                                  0x1
#define _PORTE_PB1E_MASK                                    0x40
#define _PORTE_PA2E_POSN                                    0x7
#define _PORTE_PA2E_POSITION                                0x7
#define _PORTE_PA2E_SIZE                                    0x1
#define _PORTE_PA2E_LENGTH                                  0x1
#define _PORTE_PA2E_MASK                                    0x80

// Register: PORTF
#define PORTF PORTF
extern volatile unsigned char           PORTF               __at(0xF85);
#ifndef _LIB_BUILD
asm("PORTF equ 0F85h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned RF1                    :1;
        unsigned RF2                    :1;
        unsigned RF3                    :1;
        unsigned RF4                    :1;
        unsigned RF5                    :1;
        unsigned RF6                    :1;
        unsigned RF7                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned AN6                    :1;
        unsigned AN7                    :1;
        unsigned AN8                    :1;
        unsigned AN9                    :1;
        unsigned AN10                   :1;
        unsigned AN11                   :1;
        unsigned AN5                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned SEG19                  :1;
        unsigned SEG20                  :1;
        unsigned SEG21                  :1;
        unsigned SEG22                  :1;
        unsigned SEG23                  :1;
        unsigned SEG24                  :1;
        unsigned SEG25                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned C2OUT                  :1;
        unsigned C1OUT                  :1;
        unsigned C2INB                  :1;
        unsigned C2INA                  :1;
        unsigned C1INB                  :1;
        unsigned C1INA                  :1;
        unsigned SS1                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned CTDIN                  :1;
        unsigned                        :1;
        unsigned CTMUI                  :1;
        unsigned                        :1;
        unsigned CVREF                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned C2OUTF                 :1;
        unsigned C1OUTF                 :1;
    };
} PORTFbits_t;
extern volatile PORTFbits_t PORTFbits __at(0xF85);
// bitfield macros
#define _PORTF_RF1_POSN                                     0x1
#define _PORTF_RF1_POSITION                                 0x1
#define _PORTF_RF1_SIZE                                     0x1
#define _PORTF_RF1_LENGTH                                   0x1
#define _PORTF_RF1_MASK                                     0x2
#define _PORTF_RF2_POSN                                     0x2
#define _PORTF_RF2_POSITION                                 0x2
#define _PORTF_RF2_SIZE                                     0x1
#define _PORTF_RF2_LENGTH                                   0x1
#define _PORTF_RF2_MASK                                     0x4
#define _PORTF_RF3_POSN                                     0x3
#define _PORTF_RF3_POSITION                                 0x3
#define _PORTF_RF3_SIZE                                     0x1
#define _PORTF_RF3_LENGTH                                   0x1
#define _PORTF_RF3_MASK                                     0x8
#define _PORTF_RF4_POSN                                     0x4
#define _PORTF_RF4_POSITION                                 0x4
#define _PORTF_RF4_SIZE                                     0x1
#define _PORTF_RF4_LENGTH                                   0x1
#define _PORTF_RF4_MASK                                     0x10
#define _PORTF_RF5_POSN                                     0x5
#define _PORTF_RF5_POSITION                                 0x5
#define _PORTF_RF5_SIZE                                     0x1
#define _PORTF_RF5_LENGTH                                   0x1
#define _PORTF_RF5_MASK                                     0x20
#define _PORTF_RF6_POSN                                     0x6
#define _PORTF_RF6_POSITION                                 0x6
#define _PORTF_RF6_SIZE                                     0x1
#define _PORTF_RF6_LENGTH                                   0x1
#define _PORTF_RF6_MASK                                     0x40
#define _PORTF_RF7_POSN                                     0x7
#define _PORTF_RF7_POSITION                                 0x7
#define _PORTF_RF7_SIZE                                     0x1
#define _PORTF_RF7_LENGTH                                   0x1
#define _PORTF_RF7_MASK                                     0x80
#define _PORTF_AN6_POSN                                     0x1
#define _PORTF_AN6_POSITION                                 0x1
#define _PORTF_AN6_SIZE                                     0x1
#define _PORTF_AN6_LENGTH                                   0x1
#define _PORTF_AN6_MASK                                     0x2
#define _PORTF_AN7_POSN                                     0x2
#define _PORTF_AN7_POSITION                                 0x2
#define _PORTF_AN7_SIZE                                     0x1
#define _PORTF_AN7_LENGTH                                   0x1
#define _PORTF_AN7_MASK                                     0x4
#define _PORTF_AN8_POSN                                     0x3
#define _PORTF_AN8_POSITION                                 0x3
#define _PORTF_AN8_SIZE                                     0x1
#define _PORTF_AN8_LENGTH                                   0x1
#define _PORTF_AN8_MASK                                     0x8
#define _PORTF_AN9_POSN                                     0x4
#define _PORTF_AN9_POSITION                                 0x4
#define _PORTF_AN9_SIZE                                     0x1
#define _PORTF_AN9_LENGTH                                   0x1
#define _PORTF_AN9_MASK                                     0x10
#define _PORTF_AN10_POSN                                    0x5
#define _PORTF_AN10_POSITION                                0x5
#define _PORTF_AN10_SIZE                                    0x1
#define _PORTF_AN10_LENGTH                                  0x1
#define _PORTF_AN10_MASK                                    0x20
#define _PORTF_AN11_POSN                                    0x6
#define _PORTF_AN11_POSITION                                0x6
#define _PORTF_AN11_SIZE                                    0x1
#define _PORTF_AN11_LENGTH                                  0x1
#define _PORTF_AN11_MASK                                    0x40
#define _PORTF_AN5_POSN                                     0x7
#define _PORTF_AN5_POSITION                                 0x7
#define _PORTF_AN5_SIZE                                     0x1
#define _PORTF_AN5_LENGTH                                   0x1
#define _PORTF_AN5_MASK                                     0x80
#define _PORTF_SEG19_POSN                                   0x1
#define _PORTF_SEG19_POSITION                               0x1
#define _PORTF_SEG19_SIZE                                   0x1
#define _PORTF_SEG19_LENGTH                                 0x1
#define _PORTF_SEG19_MASK                                   0x2
#define _PORTF_SEG20_POSN                                   0x2
#define _PORTF_SEG20_POSITION                               0x2
#define _PORTF_SEG20_SIZE                                   0x1
#define _PORTF_SEG20_LENGTH                                 0x1
#define _PORTF_SEG20_MASK                                   0x4
#define _PORTF_SEG21_POSN                                   0x3
#define _PORTF_SEG21_POSITION                               0x3
#define _PORTF_SEG21_SIZE                                   0x1
#define _PORTF_SEG21_LENGTH                                 0x1
#define _PORTF_SEG21_MASK                                   0x8
#define _PORTF_SEG22_POSN                                   0x4
#define _PORTF_SEG22_POSITION                               0x4
#define _PORTF_SEG22_SIZE                                   0x1
#define _PORTF_SEG22_LENGTH                                 0x1
#define _PORTF_SEG22_MASK                                   0x10
#define _PORTF_SEG23_POSN                                   0x5
#define _PORTF_SEG23_POSITION                               0x5
#define _PORTF_SEG23_SIZE                                   0x1
#define _PORTF_SEG23_LENGTH                                 0x1
#define _PORTF_SEG23_MASK                                   0x20
#define _PORTF_SEG24_POSN                                   0x6
#define _PORTF_SEG24_POSITION                               0x6
#define _PORTF_SEG24_SIZE                                   0x1
#define _PORTF_SEG24_LENGTH                                 0x1
#define _PORTF_SEG24_MASK                                   0x40
#define _PORTF_SEG25_POSN                                   0x7
#define _PORTF_SEG25_POSITION                               0x7
#define _PORTF_SEG25_SIZE                                   0x1
#define _PORTF_SEG25_LENGTH                                 0x1
#define _PORTF_SEG25_MASK                                   0x80
#define _PORTF_C2OUT_POSN                                   0x1
#define _PORTF_C2OUT_POSITION                               0x1
#define _PORTF_C2OUT_SIZE                                   0x1
#define _PORTF_C2OUT_LENGTH                                 0x1
#define _PORTF_C2OUT_MASK                                   0x2
#define _PORTF_C1OUT_POSN                                   0x2
#define _PORTF_C1OUT_POSITION                               0x2
#define _PORTF_C1OUT_SIZE                                   0x1
#define _PORTF_C1OUT_LENGTH                                 0x1
#define _PORTF_C1OUT_MASK                                   0x4
#define _PORTF_C2INB_POSN                                   0x3
#define _PORTF_C2INB_POSITION                               0x3
#define _PORTF_C2INB_SIZE                                   0x1
#define _PORTF_C2INB_LENGTH                                 0x1
#define _PORTF_C2INB_MASK                                   0x8
#define _PORTF_C2INA_POSN                                   0x4
#define _PORTF_C2INA_POSITION                               0x4
#define _PORTF_C2INA_SIZE                                   0x1
#define _PORTF_C2INA_LENGTH                                 0x1
#define _PORTF_C2INA_MASK                                   0x10
#define _PORTF_C1INB_POSN                                   0x5
#define _PORTF_C1INB_POSITION                               0x5
#define _PORTF_C1INB_SIZE                                   0x1
#define _PORTF_C1INB_LENGTH                                 0x1
#define _PORTF_C1INB_MASK                                   0x20
#define _PORTF_C1INA_POSN                                   0x6
#define _PORTF_C1INA_POSITION                               0x6
#define _PORTF_C1INA_SIZE                                   0x1
#define _PORTF_C1INA_LENGTH                                 0x1
#define _PORTF_C1INA_MASK                                   0x40
#define _PORTF_SS1_POSN                                     0x7
#define _PORTF_SS1_POSITION                                 0x7
#define _PORTF_SS1_SIZE                                     0x1
#define _PORTF_SS1_LENGTH                                   0x1
#define _PORTF_SS1_MASK                                     0x80
#define _PORTF_CTDIN_POSN                                   0x1
#define _PORTF_CTDIN_POSITION                               0x1
#define _PORTF_CTDIN_SIZE                                   0x1
#define _PORTF_CTDIN_LENGTH                                 0x1
#define _PORTF_CTDIN_MASK                                   0x2
#define _PORTF_CTMUI_POSN                                   0x3
#define _PORTF_CTMUI_POSITION                               0x3
#define _PORTF_CTMUI_SIZE                                   0x1
#define _PORTF_CTMUI_LENGTH                                 0x1
#define _PORTF_CTMUI_MASK                                   0x8
#define _PORTF_CVREF_POSN                                   0x5
#define _PORTF_CVREF_POSITION                               0x5
#define _PORTF_CVREF_SIZE                                   0x1
#define _PORTF_CVREF_LENGTH                                 0x1
#define _PORTF_CVREF_MASK                                   0x20
#define _PORTF_C2OUTF_POSN                                  0x1
#define _PORTF_C2OUTF_POSITION                              0x1
#define _PORTF_C2OUTF_SIZE                                  0x1
#define _PORTF_C2OUTF_LENGTH                                0x1
#define _PORTF_C2OUTF_MASK                                  0x2
#define _PORTF_C1OUTF_POSN                                  0x2
#define _PORTF_C1OUTF_POSITION                              0x2
#define _PORTF_C1OUTF_SIZE                                  0x1
#define _PORTF_C1OUTF_LENGTH                                0x1
#define _PORTF_C1OUTF_MASK                                  0x4

// Register: PORTG
#define PORTG PORTG
extern volatile unsigned char           PORTG               __at(0xF86);
#ifndef _LIB_BUILD
asm("PORTG equ 0F86h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RG0                    :1;
        unsigned RG1                    :1;
        unsigned RG2                    :1;
        unsigned RG3                    :1;
        unsigned RG4                    :1;
        unsigned RG5                    :1;
    };
    struct {
        unsigned CCP3                   :1;
        unsigned C3OUT                  :1;
        unsigned C3INA                  :1;
        unsigned C3INB                  :1;
        unsigned C3INC                  :1;
    };
    struct {
        unsigned PA3                    :1;
        unsigned TX2                    :1;
        unsigned RX2                    :1;
        unsigned PD3                    :1;
        unsigned PD1                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned AN19                   :1;
        unsigned AN18                   :1;
        unsigned AN17                   :1;
        unsigned AN16                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned CK2                    :1;
        unsigned DT2                    :1;
        unsigned CCP4                   :1;
        unsigned CCP5                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned SEG26                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned T7CKI                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned T5G                    :1;
    };
    struct {
        unsigned                        :4;
        unsigned RTCC                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned C3OUTG                 :1;
        unsigned                        :3;
        unsigned RJPU                   :1;
    };
} PORTGbits_t;
extern volatile PORTGbits_t PORTGbits __at(0xF86);
// bitfield macros
#define _PORTG_RG0_POSN                                     0x0
#define _PORTG_RG0_POSITION                                 0x0
#define _PORTG_RG0_SIZE                                     0x1
#define _PORTG_RG0_LENGTH                                   0x1
#define _PORTG_RG0_MASK                                     0x1
#define _PORTG_RG1_POSN                                     0x1
#define _PORTG_RG1_POSITION                                 0x1
#define _PORTG_RG1_SIZE                                     0x1
#define _PORTG_RG1_LENGTH                                   0x1
#define _PORTG_RG1_MASK                                     0x2
#define _PORTG_RG2_POSN                                     0x2
#define _PORTG_RG2_POSITION                                 0x2
#define _PORTG_RG2_SIZE                                     0x1
#define _PORTG_RG2_LENGTH                                   0x1
#define _PORTG_RG2_MASK                                     0x4
#define _PORTG_RG3_POSN                                     0x3
#define _PORTG_RG3_POSITION                                 0x3
#define _PORTG_RG3_SIZE                                     0x1
#define _PORTG_RG3_LENGTH                                   0x1
#define _PORTG_RG3_MASK                                     0x8
#define _PORTG_RG4_POSN                                     0x4
#define _PORTG_RG4_POSITION                                 0x4
#define _PORTG_RG4_SIZE                                     0x1
#define _PORTG_RG4_LENGTH                                   0x1
#define _PORTG_RG4_MASK                                     0x10
#define _PORTG_RG5_POSN                                     0x5
#define _PORTG_RG5_POSITION                                 0x5
#define _PORTG_RG5_SIZE                                     0x1
#define _PORTG_RG5_LENGTH                                   0x1
#define _PORTG_RG5_MASK                                     0x20
#define _PORTG_CCP3_POSN                                    0x0
#define _PORTG_CCP3_POSITION                                0x0
#define _PORTG_CCP3_SIZE                                    0x1
#define _PORTG_CCP3_LENGTH                                  0x1
#define _PORTG_CCP3_MASK                                    0x1
#define _PORTG_C3OUT_POSN                                   0x1
#define _PORTG_C3OUT_POSITION                               0x1
#define _PORTG_C3OUT_SIZE                                   0x1
#define _PORTG_C3OUT_LENGTH                                 0x1
#define _PORTG_C3OUT_MASK                                   0x2
#define _PORTG_C3INA_POSN                                   0x2
#define _PORTG_C3INA_POSITION                               0x2
#define _PORTG_C3INA_SIZE                                   0x1
#define _PORTG_C3INA_LENGTH                                 0x1
#define _PORTG_C3INA_MASK                                   0x4
#define _PORTG_C3INB_POSN                                   0x3
#define _PORTG_C3INB_POSITION                               0x3
#define _PORTG_C3INB_SIZE                                   0x1
#define _PORTG_C3INB_LENGTH                                 0x1
#define _PORTG_C3INB_MASK                                   0x8
#define _PORTG_C3INC_POSN                                   0x4
#define _PORTG_C3INC_POSITION                               0x4
#define _PORTG_C3INC_SIZE                                   0x1
#define _PORTG_C3INC_LENGTH                                 0x1
#define _PORTG_C3INC_MASK                                   0x10
#define _PORTG_PA3_POSN                                     0x0
#define _PORTG_PA3_POSITION                                 0x0
#define _PORTG_PA3_SIZE                                     0x1
#define _PORTG_PA3_LENGTH                                   0x1
#define _PORTG_PA3_MASK                                     0x1
#define _PORTG_TX2_POSN                                     0x1
#define _PORTG_TX2_POSITION                                 0x1
#define _PORTG_TX2_SIZE                                     0x1
#define _PORTG_TX2_LENGTH                                   0x1
#define _PORTG_TX2_MASK                                     0x2
#define _PORTG_RX2_POSN                                     0x2
#define _PORTG_RX2_POSITION                                 0x2
#define _PORTG_RX2_SIZE                                     0x1
#define _PORTG_RX2_LENGTH                                   0x1
#define _PORTG_RX2_MASK                                     0x4
#define _PORTG_PD3_POSN                                     0x3
#define _PORTG_PD3_POSITION                                 0x3
#define _PORTG_PD3_SIZE                                     0x1
#define _PORTG_PD3_LENGTH                                   0x1
#define _PORTG_PD3_MASK                                     0x8
#define _PORTG_PD1_POSN                                     0x4
#define _PORTG_PD1_POSITION                                 0x4
#define _PORTG_PD1_SIZE                                     0x1
#define _PORTG_PD1_LENGTH                                   0x1
#define _PORTG_PD1_MASK                                     0x10
#define _PORTG_AN19_POSN                                    0x1
#define _PORTG_AN19_POSITION                                0x1
#define _PORTG_AN19_SIZE                                    0x1
#define _PORTG_AN19_LENGTH                                  0x1
#define _PORTG_AN19_MASK                                    0x2
#define _PORTG_AN18_POSN                                    0x2
#define _PORTG_AN18_POSITION                                0x2
#define _PORTG_AN18_SIZE                                    0x1
#define _PORTG_AN18_LENGTH                                  0x1
#define _PORTG_AN18_MASK                                    0x4
#define _PORTG_AN17_POSN                                    0x3
#define _PORTG_AN17_POSITION                                0x3
#define _PORTG_AN17_SIZE                                    0x1
#define _PORTG_AN17_LENGTH                                  0x1
#define _PORTG_AN17_MASK                                    0x8
#define _PORTG_AN16_POSN                                    0x4
#define _PORTG_AN16_POSITION                                0x4
#define _PORTG_AN16_SIZE                                    0x1
#define _PORTG_AN16_LENGTH                                  0x1
#define _PORTG_AN16_MASK                                    0x10
#define _PORTG_CK2_POSN                                     0x1
#define _PORTG_CK2_POSITION                                 0x1
#define _PORTG_CK2_SIZE                                     0x1
#define _PORTG_CK2_LENGTH                                   0x1
#define _PORTG_CK2_MASK                                     0x2
#define _PORTG_DT2_POSN                                     0x2
#define _PORTG_DT2_POSITION                                 0x2
#define _PORTG_DT2_SIZE                                     0x1
#define _PORTG_DT2_LENGTH                                   0x1
#define _PORTG_DT2_MASK                                     0x4
#define _PORTG_CCP4_POSN                                    0x3
#define _PORTG_CCP4_POSITION                                0x3
#define _PORTG_CCP4_SIZE                                    0x1
#define _PORTG_CCP4_LENGTH                                  0x1
#define _PORTG_CCP4_MASK                                    0x8
#define _PORTG_CCP5_POSN                                    0x4
#define _PORTG_CCP5_POSITION                                0x4
#define _PORTG_CCP5_SIZE                                    0x1
#define _PORTG_CCP5_LENGTH                                  0x1
#define _PORTG_CCP5_MASK                                    0x10
#define _PORTG_SEG26_POSN                                   0x4
#define _PORTG_SEG26_POSITION                               0x4
#define _PORTG_SEG26_SIZE                                   0x1
#define _PORTG_SEG26_LENGTH                                 0x1
#define _PORTG_SEG26_MASK                                   0x10
#define _PORTG_T7CKI_POSN                                   0x4
#define _PORTG_T7CKI_POSITION                               0x4
#define _PORTG_T7CKI_SIZE                                   0x1
#define _PORTG_T7CKI_LENGTH                                 0x1
#define _PORTG_T7CKI_MASK                                   0x10
#define _PORTG_T5G_POSN                                     0x4
#define _PORTG_T5G_POSITION                                 0x4
#define _PORTG_T5G_SIZE                                     0x1
#define _PORTG_T5G_LENGTH                                   0x1
#define _PORTG_T5G_MASK                                     0x10
#define _PORTG_RTCC_POSN                                    0x4
#define _PORTG_RTCC_POSITION                                0x4
#define _PORTG_RTCC_SIZE                                    0x1
#define _PORTG_RTCC_LENGTH                                  0x1
#define _PORTG_RTCC_MASK                                    0x10
#define _PORTG_C3OUTG_POSN                                  0x1
#define _PORTG_C3OUTG_POSITION                              0x1
#define _PORTG_C3OUTG_SIZE                                  0x1
#define _PORTG_C3OUTG_LENGTH                                0x1
#define _PORTG_C3OUTG_MASK                                  0x2
#define _PORTG_RJPU_POSN                                    0x5
#define _PORTG_RJPU_POSITION                                0x5
#define _PORTG_RJPU_SIZE                                    0x1
#define _PORTG_RJPU_LENGTH                                  0x1
#define _PORTG_RJPU_MASK                                    0x20

// Register: PORTH
#define PORTH PORTH
extern volatile unsigned char           PORTH               __at(0xF87);
#ifndef _LIB_BUILD
asm("PORTH equ 0F87h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RH0                    :1;
        unsigned RH1                    :1;
        unsigned RH2                    :1;
        unsigned RH3                    :1;
        unsigned RH4                    :1;
        unsigned RH5                    :1;
        unsigned RH6                    :1;
        unsigned RH7                    :1;
    };
    struct {
        unsigned SEG47                  :1;
        unsigned SEG46                  :1;
        unsigned SEG45                  :1;
        unsigned SEG44                  :1;
        unsigned SEG40                  :1;
        unsigned SEG41                  :1;
        unsigned SEG42                  :1;
        unsigned SEG43                  :1;
    };
    struct {
        unsigned AN23                   :1;
        unsigned AN22                   :1;
        unsigned AN21                   :1;
        unsigned AN20                   :1;
        unsigned AN12                   :1;
        unsigned AN13                   :1;
        unsigned AN14                   :1;
        unsigned AN15                   :1;
    };
    struct {
        unsigned A16                    :1;
        unsigned A17                    :1;
        unsigned A18                    :1;
        unsigned A19                    :1;
        unsigned CCP9                   :1;
        unsigned CCP8                   :1;
        unsigned CCP7                   :1;
        unsigned CCP6                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned PC3                    :1;
        unsigned PB3                    :1;
        unsigned PC1                    :1;
        unsigned PB1                    :1;
    };
    struct {
        unsigned                        :4;
        unsigned C2INC                  :1;
        unsigned C2IND                  :1;
        unsigned C1INC                  :1;
    };
} PORTHbits_t;
extern volatile PORTHbits_t PORTHbits __at(0xF87);
// bitfield macros
#define _PORTH_RH0_POSN                                     0x0
#define _PORTH_RH0_POSITION                                 0x0
#define _PORTH_RH0_SIZE                                     0x1
#define _PORTH_RH0_LENGTH                                   0x1
#define _PORTH_RH0_MASK                                     0x1
#define _PORTH_RH1_POSN                                     0x1
#define _PORTH_RH1_POSITION                                 0x1
#define _PORTH_RH1_SIZE                                     0x1
#define _PORTH_RH1_LENGTH                                   0x1
#define _PORTH_RH1_MASK                                     0x2
#define _PORTH_RH2_POSN                                     0x2
#define _PORTH_RH2_POSITION                                 0x2
#define _PORTH_RH2_SIZE                                     0x1
#define _PORTH_RH2_LENGTH                                   0x1
#define _PORTH_RH2_MASK                                     0x4
#define _PORTH_RH3_POSN                                     0x3
#define _PORTH_RH3_POSITION                                 0x3
#define _PORTH_RH3_SIZE                                     0x1
#define _PORTH_RH3_LENGTH                                   0x1
#define _PORTH_RH3_MASK                                     0x8
#define _PORTH_RH4_POSN                                     0x4
#define _PORTH_RH4_POSITION                                 0x4
#define _PORTH_RH4_SIZE                                     0x1
#define _PORTH_RH4_LENGTH                                   0x1
#define _PORTH_RH4_MASK                                     0x10
#define _PORTH_RH5_POSN                                     0x5
#define _PORTH_RH5_POSITION                                 0x5
#define _PORTH_RH5_SIZE                                     0x1
#define _PORTH_RH5_LENGTH                                   0x1
#define _PORTH_RH5_MASK                                     0x20
#define _PORTH_RH6_POSN                                     0x6
#define _PORTH_RH6_POSITION                                 0x6
#define _PORTH_RH6_SIZE                                     0x1
#define _PORTH_RH6_LENGTH                                   0x1
#define _PORTH_RH6_MASK                                     0x40
#define _PORTH_RH7_POSN                                     0x7
#define _PORTH_RH7_POSITION                                 0x7
#define _PORTH_RH7_SIZE                                     0x1
#define _PORTH_RH7_LENGTH                                   0x1
#define _PORTH_RH7_MASK                                     0x80
#define _PORTH_SEG47_POSN                                   0x0
#define _PORTH_SEG47_POSITION                               0x0
#define _PORTH_SEG47_SIZE                                   0x1
#define _PORTH_SEG47_LENGTH                                 0x1
#define _PORTH_SEG47_MASK                                   0x1
#define _PORTH_SEG46_POSN                                   0x1
#define _PORTH_SEG46_POSITION                               0x1
#define _PORTH_SEG46_SIZE                                   0x1
#define _PORTH_SEG46_LENGTH                                 0x1
#define _PORTH_SEG46_MASK                                   0x2
#define _PORTH_SEG45_POSN                                   0x2
#define _PORTH_SEG45_POSITION                               0x2
#define _PORTH_SEG45_SIZE                                   0x1
#define _PORTH_SEG45_LENGTH                                 0x1
#define _PORTH_SEG45_MASK                                   0x4
#define _PORTH_SEG44_POSN                                   0x3
#define _PORTH_SEG44_POSITION                               0x3
#define _PORTH_SEG44_SIZE                                   0x1
#define _PORTH_SEG44_LENGTH                                 0x1
#define _PORTH_SEG44_MASK                                   0x8
#define _PORTH_SEG40_POSN                                   0x4
#define _PORTH_SEG40_POSITION                               0x4
#define _PORTH_SEG40_SIZE                                   0x1
#define _PORTH_SEG40_LENGTH                                 0x1
#define _PORTH_SEG40_MASK                                   0x10
#define _PORTH_SEG41_POSN                                   0x5
#define _PORTH_SEG41_POSITION                               0x5
#define _PORTH_SEG41_SIZE                                   0x1
#define _PORTH_SEG41_LENGTH                                 0x1
#define _PORTH_SEG41_MASK                                   0x20
#define _PORTH_SEG42_POSN                                   0x6
#define _PORTH_SEG42_POSITION                               0x6
#define _PORTH_SEG42_SIZE                                   0x1
#define _PORTH_SEG42_LENGTH                                 0x1
#define _PORTH_SEG42_MASK                                   0x40
#define _PORTH_SEG43_POSN                                   0x7
#define _PORTH_SEG43_POSITION                               0x7
#define _PORTH_SEG43_SIZE                                   0x1
#define _PORTH_SEG43_LENGTH                                 0x1
#define _PORTH_SEG43_MASK                                   0x80
#define _PORTH_AN23_POSN                                    0x0
#define _PORTH_AN23_POSITION                                0x0
#define _PORTH_AN23_SIZE                                    0x1
#define _PORTH_AN23_LENGTH                                  0x1
#define _PORTH_AN23_MASK                                    0x1
#define _PORTH_AN22_POSN                                    0x1
#define _PORTH_AN22_POSITION                                0x1
#define _PORTH_AN22_SIZE                                    0x1
#define _PORTH_AN22_LENGTH                                  0x1
#define _PORTH_AN22_MASK                                    0x2
#define _PORTH_AN21_POSN                                    0x2
#define _PORTH_AN21_POSITION                                0x2
#define _PORTH_AN21_SIZE                                    0x1
#define _PORTH_AN21_LENGTH                                  0x1
#define _PORTH_AN21_MASK                                    0x4
#define _PORTH_AN20_POSN                                    0x3
#define _PORTH_AN20_POSITION                                0x3
#define _PORTH_AN20_SIZE                                    0x1
#define _PORTH_AN20_LENGTH                                  0x1
#define _PORTH_AN20_MASK                                    0x8
#define _PORTH_AN12_POSN                                    0x4
#define _PORTH_AN12_POSITION                                0x4
#define _PORTH_AN12_SIZE                                    0x1
#define _PORTH_AN12_LENGTH                                  0x1
#define _PORTH_AN12_MASK                                    0x10
#define _PORTH_AN13_POSN                                    0x5
#define _PORTH_AN13_POSITION                                0x5
#define _PORTH_AN13_SIZE                                    0x1
#define _PORTH_AN13_LENGTH                                  0x1
#define _PORTH_AN13_MASK                                    0x20
#define _PORTH_AN14_POSN                                    0x6
#define _PORTH_AN14_POSITION                                0x6
#define _PORTH_AN14_SIZE                                    0x1
#define _PORTH_AN14_LENGTH                                  0x1
#define _PORTH_AN14_MASK                                    0x40
#define _PORTH_AN15_POSN                                    0x7
#define _PORTH_AN15_POSITION                                0x7
#define _PORTH_AN15_SIZE                                    0x1
#define _PORTH_AN15_LENGTH                                  0x1
#define _PORTH_AN15_MASK                                    0x80
#define _PORTH_A16_POSN                                     0x0
#define _PORTH_A16_POSITION                                 0x0
#define _PORTH_A16_SIZE                                     0x1
#define _PORTH_A16_LENGTH                                   0x1
#define _PORTH_A16_MASK                                     0x1
#define _PORTH_A17_POSN                                     0x1
#define _PORTH_A17_POSITION                                 0x1
#define _PORTH_A17_SIZE                                     0x1
#define _PORTH_A17_LENGTH                                   0x1
#define _PORTH_A17_MASK                                     0x2
#define _PORTH_A18_POSN                                     0x2
#define _PORTH_A18_POSITION                                 0x2
#define _PORTH_A18_SIZE                                     0x1
#define _PORTH_A18_LENGTH                                   0x1
#define _PORTH_A18_MASK                                     0x4
#define _PORTH_A19_POSN                                     0x3
#define _PORTH_A19_POSITION                                 0x3
#define _PORTH_A19_SIZE                                     0x1
#define _PORTH_A19_LENGTH                                   0x1
#define _PORTH_A19_MASK                                     0x8
#define _PORTH_CCP9_POSN                                    0x4
#define _PORTH_CCP9_POSITION                                0x4
#define _PORTH_CCP9_SIZE                                    0x1
#define _PORTH_CCP9_LENGTH                                  0x1
#define _PORTH_CCP9_MASK                                    0x10
#define _PORTH_CCP8_POSN                                    0x5
#define _PORTH_CCP8_POSITION                                0x5
#define _PORTH_CCP8_SIZE                                    0x1
#define _PORTH_CCP8_LENGTH                                  0x1
#define _PORTH_CCP8_MASK                                    0x20
#define _PORTH_CCP7_POSN                                    0x6
#define _PORTH_CCP7_POSITION                                0x6
#define _PORTH_CCP7_SIZE                                    0x1
#define _PORTH_CCP7_LENGTH                                  0x1
#define _PORTH_CCP7_MASK                                    0x40
#define _PORTH_CCP6_POSN                                    0x7
#define _PORTH_CCP6_POSITION                                0x7
#define _PORTH_CCP6_SIZE                                    0x1
#define _PORTH_CCP6_LENGTH                                  0x1
#define _PORTH_CCP6_MASK                                    0x80
#define _PORTH_PC3_POSN                                     0x4
#define _PORTH_PC3_POSITION                                 0x4
#define _PORTH_PC3_SIZE                                     0x1
#define _PORTH_PC3_LENGTH                                   0x1
#define _PORTH_PC3_MASK                                     0x10
#define _PORTH_PB3_POSN                                     0x5
#define _PORTH_PB3_POSITION                                 0x5
#define _PORTH_PB3_SIZE                                     0x1
#define _PORTH_PB3_LENGTH                                   0x1
#define _PORTH_PB3_MASK                                     0x20
#define _PORTH_PC1_POSN                                     0x6
#define _PORTH_PC1_POSITION                                 0x6
#define _PORTH_PC1_SIZE                                     0x1
#define _PORTH_PC1_LENGTH                                   0x1
#define _PORTH_PC1_MASK                                     0x40
#define _PORTH_PB1_POSN                                     0x7
#define _PORTH_PB1_POSITION                                 0x7
#define _PORTH_PB1_SIZE                                     0x1
#define _PORTH_PB1_LENGTH                                   0x1
#define _PORTH_PB1_MASK                                     0x80
#define _PORTH_C2INC_POSN                                   0x4
#define _PORTH_C2INC_POSITION                               0x4
#define _PORTH_C2INC_SIZE                                   0x1
#define _PORTH_C2INC_LENGTH                                 0x1
#define _PORTH_C2INC_MASK                                   0x10
#define _PORTH_C2IND_POSN                                   0x5
#define _PORTH_C2IND_POSITION                               0x5
#define _PORTH_C2IND_SIZE                                   0x1
#define _PORTH_C2IND_LENGTH                                 0x1
#define _PORTH_C2IND_MASK                                   0x20
#define _PORTH_C1INC_POSN                                   0x6
#define _PORTH_C1INC_POSITION                               0x6
#define _PORTH_C1INC_SIZE                                   0x1
#define _PORTH_C1INC_LENGTH                                 0x1
#define _PORTH_C1INC_MASK                                   0x40

// Register: PORTJ
#define PORTJ PORTJ
extern volatile unsigned char           PORTJ               __at(0xF88);
#ifndef _LIB_BUILD
asm("PORTJ equ 0F88h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RJ0                    :1;
        unsigned RJ1                    :1;
        unsigned RJ2                    :1;
        unsigned RJ3                    :1;
        unsigned RJ4                    :1;
        unsigned RJ5                    :1;
        unsigned RJ6                    :1;
        unsigned RJ7                    :1;
    };
    struct {
        unsigned ALE                    :1;
        unsigned OE                     :1;
        unsigned WRL                    :1;
        unsigned WRH                    :1;
        unsigned BA0                    :1;
        unsigned CE                     :1;
        unsigned LB                     :1;
        unsigned UB                     :1;
    };
    struct {
        unsigned                        :1;
        unsigned SEG33                  :1;
        unsigned SEG34                  :1;
        unsigned SEG35                  :1;
        unsigned SEG39                  :1;
        unsigned SEG38                  :1;
        unsigned SEG37                  :1;
        unsigned SEG36                  :1;
    };
} PORTJbits_t;
extern volatile PORTJbits_t PORTJbits __at(0xF88);
// bitfield macros
#define _PORTJ_RJ0_POSN                                     0x0
#define _PORTJ_RJ0_POSITION                                 0x0
#define _PORTJ_RJ0_SIZE                                     0x1
#define _PORTJ_RJ0_LENGTH                                   0x1
#define _PORTJ_RJ0_MASK                                     0x1
#define _PORTJ_RJ1_POSN                                     0x1
#define _PORTJ_RJ1_POSITION                                 0x1
#define _PORTJ_RJ1_SIZE                                     0x1
#define _PORTJ_RJ1_LENGTH                                   0x1
#define _PORTJ_RJ1_MASK                                     0x2
#define _PORTJ_RJ2_POSN                                     0x2
#define _PORTJ_RJ2_POSITION                                 0x2
#define _PORTJ_RJ2_SIZE                                     0x1
#define _PORTJ_RJ2_LENGTH                                   0x1
#define _PORTJ_RJ2_MASK                                     0x4
#define _PORTJ_RJ3_POSN                                     0x3
#define _PORTJ_RJ3_POSITION                                 0x3
#define _PORTJ_RJ3_SIZE                                     0x1
#define _PORTJ_RJ3_LENGTH                                   0x1
#define _PORTJ_RJ3_MASK                                     0x8
#define _PORTJ_RJ4_POSN                                     0x4
#define _PORTJ_RJ4_POSITION                                 0x4
#define _PORTJ_RJ4_SIZE                                     0x1
#define _PORTJ_RJ4_LENGTH                                   0x1
#define _PORTJ_RJ4_MASK                                     0x10
#define _PORTJ_RJ5_POSN                                     0x5
#define _PORTJ_RJ5_POSITION                                 0x5
#define _PORTJ_RJ5_SIZE                                     0x1
#define _PORTJ_RJ5_LENGTH                                   0x1
#define _PORTJ_RJ5_MASK                                     0x20
#define _PORTJ_RJ6_POSN                                     0x6
#define _PORTJ_RJ6_POSITION                                 0x6
#define _PORTJ_RJ6_SIZE                                     0x1
#define _PORTJ_RJ6_LENGTH                                   0x1
#define _PORTJ_RJ6_MASK                                     0x40
#define _PORTJ_RJ7_POSN                                     0x7
#define _PORTJ_RJ7_POSITION                                 0x7
#define _PORTJ_RJ7_SIZE                                     0x1
#define _PORTJ_RJ7_LENGTH                                   0x1
#define _PORTJ_RJ7_MASK                                     0x80
#define _PORTJ_ALE_POSN                                     0x0
#define _PORTJ_ALE_POSITION                                 0x0
#define _PORTJ_ALE_SIZE                                     0x1
#define _PORTJ_ALE_LENGTH                                   0x1
#define _PORTJ_ALE_MASK                                     0x1
#define _PORTJ_OE_POSN                                      0x1
#define _PORTJ_OE_POSITION                                  0x1
#define _PORTJ_OE_SIZE                                      0x1
#define _PORTJ_OE_LENGTH                                    0x1
#define _PORTJ_OE_MASK                                      0x2
#define _PORTJ_WRL_POSN                                     0x2
#define _PORTJ_WRL_POSITION                                 0x2
#define _PORTJ_WRL_SIZE                                     0x1
#define _PORTJ_WRL_LENGTH                                   0x1
#define _PORTJ_WRL_MASK                                     0x4
#define _PORTJ_WRH_POSN                                     0x3
#define _PORTJ_WRH_POSITION                                 0x3
#define _PORTJ_WRH_SIZE                                     0x1
#define _PORTJ_WRH_LENGTH                                   0x1
#define _PORTJ_WRH_MASK                                     0x8
#define _PORTJ_BA0_POSN                                     0x4
#define _PORTJ_BA0_POSITION                                 0x4
#define _PORTJ_BA0_SIZE                                     0x1
#define _PORTJ_BA0_LENGTH                                   0x1
#define _PORTJ_BA0_MASK                                     0x10
#define _PORTJ_CE_POSN                                      0x5
#define _PORTJ_CE_POSITION                                  0x5
#define _PORTJ_CE_SIZE                                      0x1
#define _PORTJ_CE_LENGTH                                    0x1
#define _PORTJ_CE_MASK                                      0x20
#define _PORTJ_LB_POSN                                      0x6
#define _PORTJ_LB_POSITION                                  0x6
#define _PORTJ_LB_SIZE                                      0x1
#define _PORTJ_LB_LENGTH                                    0x1
#define _PORTJ_LB_MASK                                      0x40
#define _PORTJ_UB_POSN                                      0x7
#define _PORTJ_UB_POSITION                                  0x7
#define _PORTJ_UB_SIZE                                      0x1
#define _PORTJ_UB_LENGTH                                    0x1
#define _PORTJ_UB_MASK                                      0x80
#define _PORTJ_SEG33_POSN                                   0x1
#define _PORTJ_SEG33_POSITION                               0x1
#define _PORTJ_SEG33_SIZE                                   0x1
#define _PORTJ_SEG33_LENGTH                                 0x1
#define _PORTJ_SEG33_MASK                                   0x2
#define _PORTJ_SEG34_POSN                                   0x2
#define _PORTJ_SEG34_POSITION                               0x2
#define _PORTJ_SEG34_SIZE                                   0x1
#define _PORTJ_SEG34_LENGTH                                 0x1
#define _PORTJ_SEG34_MASK                                   0x4
#define _PORTJ_SEG35_POSN                                   0x3
#define _PORTJ_SEG35_POSITION                               0x3
#define _PORTJ_SEG35_SIZE                                   0x1
#define _PORTJ_SEG35_LENGTH                                 0x1
#define _PORTJ_SEG35_MASK                                   0x8
#define _PORTJ_SEG39_POSN                                   0x4
#define _PORTJ_SEG39_POSITION                               0x4
#define _PORTJ_SEG39_SIZE                                   0x1
#define _PORTJ_SEG39_LENGTH                                 0x1
#define _PORTJ_SEG39_MASK                                   0x10
#define _PORTJ_SEG38_POSN                                   0x5
#define _PORTJ_SEG38_POSITION                               0x5
#define _PORTJ_SEG38_SIZE                                   0x1
#define _PORTJ_SEG38_LENGTH                                 0x1
#define _PORTJ_SEG38_MASK                                   0x20
#define _PORTJ_SEG37_POSN                                   0x6
#define _PORTJ_SEG37_POSITION                               0x6
#define _PORTJ_SEG37_SIZE                                   0x1
#define _PORTJ_SEG37_LENGTH                                 0x1
#define _PORTJ_SEG37_MASK                                   0x40
#define _PORTJ_SEG36_POSN                                   0x7
#define _PORTJ_SEG36_POSITION                               0x7
#define _PORTJ_SEG36_SIZE                                   0x1
#define _PORTJ_SEG36_LENGTH                                 0x1
#define _PORTJ_SEG36_MASK                                   0x80

// Register: LATA
#define LATA LATA
extern volatile unsigned char           LATA                __at(0xF89);
#ifndef _LIB_BUILD
asm("LATA equ 0F89h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATA0                  :1;
        unsigned LATA1                  :1;
        unsigned LATA2                  :1;
        unsigned LATA3                  :1;
        unsigned LATA4                  :1;
        unsigned LATA5                  :1;
        unsigned LATA6                  :1;
        unsigned LATA7                  :1;
    };
    struct {
        unsigned LA0                    :1;
        unsigned LA1                    :1;
        unsigned LA2                    :1;
        unsigned LA3                    :1;
        unsigned LA4                    :1;
        unsigned LA5                    :1;
        unsigned LA6                    :1;
        unsigned LA7                    :1;
    };
} LATAbits_t;
extern volatile LATAbits_t LATAbits __at(0xF89);
// bitfield macros
#define _LATA_LATA0_POSN                                    0x0
#define _LATA_LATA0_POSITION                                0x0
#define _LATA_LATA0_SIZE                                    0x1
#define _LATA_LATA0_LENGTH                                  0x1
#define _LATA_LATA0_MASK                                    0x1
#define _LATA_LATA1_POSN                                    0x1
#define _LATA_LATA1_POSITION                                0x1
#define _LATA_LATA1_SIZE                                    0x1
#define _LATA_LATA1_LENGTH                                  0x1
#define _LATA_LATA1_MASK                                    0x2
#define _LATA_LATA2_POSN                                    0x2
#define _LATA_LATA2_POSITION                                0x2
#define _LATA_LATA2_SIZE                                    0x1
#define _LATA_LATA2_LENGTH                                  0x1
#define _LATA_LATA2_MASK                                    0x4
#define _LATA_LATA3_POSN                                    0x3
#define _LATA_LATA3_POSITION                                0x3
#define _LATA_LATA3_SIZE                                    0x1
#define _LATA_LATA3_LENGTH                                  0x1
#define _LATA_LATA3_MASK                                    0x8
#define _LATA_LATA4_POSN                                    0x4
#define _LATA_LATA4_POSITION                                0x4
#define _LATA_LATA4_SIZE                                    0x1
#define _LATA_LATA4_LENGTH                                  0x1
#define _LATA_LATA4_MASK                                    0x10
#define _LATA_LATA5_POSN                                    0x5
#define _LATA_LATA5_POSITION                                0x5
#define _LATA_LATA5_SIZE                                    0x1
#define _LATA_LATA5_LENGTH                                  0x1
#define _LATA_LATA5_MASK                                    0x20
#define _LATA_LATA6_POSN                                    0x6
#define _LATA_LATA6_POSITION                                0x6
#define _LATA_LATA6_SIZE                                    0x1
#define _LATA_LATA6_LENGTH                                  0x1
#define _LATA_LATA6_MASK                                    0x40
#define _LATA_LATA7_POSN                                    0x7
#define _LATA_LATA7_POSITION                                0x7
#define _LATA_LATA7_SIZE                                    0x1
#define _LATA_LATA7_LENGTH                                  0x1
#define _LATA_LATA7_MASK                                    0x80
#define _LATA_LA0_POSN                                      0x0
#define _LATA_LA0_POSITION                                  0x0
#define _LATA_LA0_SIZE                                      0x1
#define _LATA_LA0_LENGTH                                    0x1
#define _LATA_LA0_MASK                                      0x1
#define _LATA_LA1_POSN                                      0x1
#define _LATA_LA1_POSITION                                  0x1
#define _LATA_LA1_SIZE                                      0x1
#define _LATA_LA1_LENGTH                                    0x1
#define _LATA_LA1_MASK                                      0x2
#define _LATA_LA2_POSN                                      0x2
#define _LATA_LA2_POSITION                                  0x2
#define _LATA_LA2_SIZE                                      0x1
#define _LATA_LA2_LENGTH                                    0x1
#define _LATA_LA2_MASK                                      0x4
#define _LATA_LA3_POSN                                      0x3
#define _LATA_LA3_POSITION                                  0x3
#define _LATA_LA3_SIZE                                      0x1
#define _LATA_LA3_LENGTH                                    0x1
#define _LATA_LA3_MASK                                      0x8
#define _LATA_LA4_POSN                                      0x4
#define _LATA_LA4_POSITION                                  0x4
#define _LATA_LA4_SIZE                                      0x1
#define _LATA_LA4_LENGTH                                    0x1
#define _LATA_LA4_MASK                                      0x10
#define _LATA_LA5_POSN                                      0x5
#define _LATA_LA5_POSITION                                  0x5
#define _LATA_LA5_SIZE                                      0x1
#define _LATA_LA5_LENGTH                                    0x1
#define _LATA_LA5_MASK                                      0x20
#define _LATA_LA6_POSN                                      0x6
#define _LATA_LA6_POSITION                                  0x6
#define _LATA_LA6_SIZE                                      0x1
#define _LATA_LA6_LENGTH                                    0x1
#define _LATA_LA6_MASK                                      0x40
#define _LATA_LA7_POSN                                      0x7
#define _LATA_LA7_POSITION                                  0x7
#define _LATA_LA7_SIZE                                      0x1
#define _LATA_LA7_LENGTH                                    0x1
#define _LATA_LA7_MASK                                      0x80

// Register: LATB
#define LATB LATB
extern volatile unsigned char           LATB                __at(0xF8A);
#ifndef _LIB_BUILD
asm("LATB equ 0F8Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATB0                  :1;
        unsigned LATB1                  :1;
        unsigned LATB2                  :1;
        unsigned LATB3                  :1;
        unsigned LATB4                  :1;
        unsigned LATB5                  :1;
        unsigned LATB6                  :1;
        unsigned LATB7                  :1;
    };
    struct {
        unsigned LB0                    :1;
        unsigned LB1                    :1;
        unsigned LB2                    :1;
        unsigned LB3                    :1;
        unsigned LB4                    :1;
        unsigned LB5                    :1;
        unsigned LB6                    :1;
        unsigned LB7                    :1;
    };
} LATBbits_t;
extern volatile LATBbits_t LATBbits __at(0xF8A);
// bitfield macros
#define _LATB_LATB0_POSN                                    0x0
#define _LATB_LATB0_POSITION                                0x0
#define _LATB_LATB0_SIZE                                    0x1
#define _LATB_LATB0_LENGTH                                  0x1
#define _LATB_LATB0_MASK                                    0x1
#define _LATB_LATB1_POSN                                    0x1
#define _LATB_LATB1_POSITION                                0x1
#define _LATB_LATB1_SIZE                                    0x1
#define _LATB_LATB1_LENGTH                                  0x1
#define _LATB_LATB1_MASK                                    0x2
#define _LATB_LATB2_POSN                                    0x2
#define _LATB_LATB2_POSITION                                0x2
#define _LATB_LATB2_SIZE                                    0x1
#define _LATB_LATB2_LENGTH                                  0x1
#define _LATB_LATB2_MASK                                    0x4
#define _LATB_LATB3_POSN                                    0x3
#define _LATB_LATB3_POSITION                                0x3
#define _LATB_LATB3_SIZE                                    0x1
#define _LATB_LATB3_LENGTH                                  0x1
#define _LATB_LATB3_MASK                                    0x8
#define _LATB_LATB4_POSN                                    0x4
#define _LATB_LATB4_POSITION                                0x4
#define _LATB_LATB4_SIZE                                    0x1
#define _LATB_LATB4_LENGTH                                  0x1
#define _LATB_LATB4_MASK                                    0x10
#define _LATB_LATB5_POSN                                    0x5
#define _LATB_LATB5_POSITION                                0x5
#define _LATB_LATB5_SIZE                                    0x1
#define _LATB_LATB5_LENGTH                                  0x1
#define _LATB_LATB5_MASK                                    0x20
#define _LATB_LATB6_POSN                                    0x6
#define _LATB_LATB6_POSITION                                0x6
#define _LATB_LATB6_SIZE                                    0x1
#define _LATB_LATB6_LENGTH                                  0x1
#define _LATB_LATB6_MASK                                    0x40
#define _LATB_LATB7_POSN                                    0x7
#define _LATB_LATB7_POSITION                                0x7
#define _LATB_LATB7_SIZE                                    0x1
#define _LATB_LATB7_LENGTH                                  0x1
#define _LATB_LATB7_MASK                                    0x80
#define _LATB_LB0_POSN                                      0x0
#define _LATB_LB0_POSITION                                  0x0
#define _LATB_LB0_SIZE                                      0x1
#define _LATB_LB0_LENGTH                                    0x1
#define _LATB_LB0_MASK                                      0x1
#define _LATB_LB1_POSN                                      0x1
#define _LATB_LB1_POSITION                                  0x1
#define _LATB_LB1_SIZE                                      0x1
#define _LATB_LB1_LENGTH                                    0x1
#define _LATB_LB1_MASK                                      0x2
#define _LATB_LB2_POSN                                      0x2
#define _LATB_LB2_POSITION                                  0x2
#define _LATB_LB2_SIZE                                      0x1
#define _LATB_LB2_LENGTH                                    0x1
#define _LATB_LB2_MASK                                      0x4
#define _LATB_LB3_POSN                                      0x3
#define _LATB_LB3_POSITION                                  0x3
#define _LATB_LB3_SIZE                                      0x1
#define _LATB_LB3_LENGTH                                    0x1
#define _LATB_LB3_MASK                                      0x8
#define _LATB_LB4_POSN                                      0x4
#define _LATB_LB4_POSITION                                  0x4
#define _LATB_LB4_SIZE                                      0x1
#define _LATB_LB4_LENGTH                                    0x1
#define _LATB_LB4_MASK                                      0x10
#define _LATB_LB5_POSN                                      0x5
#define _LATB_LB5_POSITION                                  0x5
#define _LATB_LB5_SIZE                                      0x1
#define _LATB_LB5_LENGTH                                    0x1
#define _LATB_LB5_MASK                                      0x20
#define _LATB_LB6_POSN                                      0x6
#define _LATB_LB6_POSITION                                  0x6
#define _LATB_LB6_SIZE                                      0x1
#define _LATB_LB6_LENGTH                                    0x1
#define _LATB_LB6_MASK                                      0x40
#define _LATB_LB7_POSN                                      0x7
#define _LATB_LB7_POSITION                                  0x7
#define _LATB_LB7_SIZE                                      0x1
#define _LATB_LB7_LENGTH                                    0x1
#define _LATB_LB7_MASK                                      0x80

// Register: LATC
#define LATC LATC
extern volatile unsigned char           LATC                __at(0xF8B);
#ifndef _LIB_BUILD
asm("LATC equ 0F8Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATC0                  :1;
        unsigned LATC1                  :1;
        unsigned LATC2                  :1;
        unsigned LATC3                  :1;
        unsigned LATC4                  :1;
        unsigned LATC5                  :1;
        unsigned LATC6                  :1;
        unsigned LATC7                  :1;
    };
    struct {
        unsigned LC0                    :1;
        unsigned LC1                    :1;
        unsigned LC2                    :1;
        unsigned LC3                    :1;
        unsigned LC4                    :1;
        unsigned LC5                    :1;
        unsigned LC6                    :1;
        unsigned LC7                    :1;
    };
} LATCbits_t;
extern volatile LATCbits_t LATCbits __at(0xF8B);
// bitfield macros
#define _LATC_LATC0_POSN                                    0x0
#define _LATC_LATC0_POSITION                                0x0
#define _LATC_LATC0_SIZE                                    0x1
#define _LATC_LATC0_LENGTH                                  0x1
#define _LATC_LATC0_MASK                                    0x1
#define _LATC_LATC1_POSN                                    0x1
#define _LATC_LATC1_POSITION                                0x1
#define _LATC_LATC1_SIZE                                    0x1
#define _LATC_LATC1_LENGTH                                  0x1
#define _LATC_LATC1_MASK                                    0x2
#define _LATC_LATC2_POSN                                    0x2
#define _LATC_LATC2_POSITION                                0x2
#define _LATC_LATC2_SIZE                                    0x1
#define _LATC_LATC2_LENGTH                                  0x1
#define _LATC_LATC2_MASK                                    0x4
#define _LATC_LATC3_POSN                                    0x3
#define _LATC_LATC3_POSITION                                0x3
#define _LATC_LATC3_SIZE                                    0x1
#define _LATC_LATC3_LENGTH                                  0x1
#define _LATC_LATC3_MASK                                    0x8
#define _LATC_LATC4_POSN                                    0x4
#define _LATC_LATC4_POSITION                                0x4
#define _LATC_LATC4_SIZE                                    0x1
#define _LATC_LATC4_LENGTH                                  0x1
#define _LATC_LATC4_MASK                                    0x10
#define _LATC_LATC5_POSN                                    0x5
#define _LATC_LATC5_POSITION                                0x5
#define _LATC_LATC5_SIZE                                    0x1
#define _LATC_LATC5_LENGTH                                  0x1
#define _LATC_LATC5_MASK                                    0x20
#define _LATC_LATC6_POSN                                    0x6
#define _LATC_LATC6_POSITION                                0x6
#define _LATC_LATC6_SIZE                                    0x1
#define _LATC_LATC6_LENGTH                                  0x1
#define _LATC_LATC6_MASK                                    0x40
#define _LATC_LATC7_POSN                                    0x7
#define _LATC_LATC7_POSITION                                0x7
#define _LATC_LATC7_SIZE                                    0x1
#define _LATC_LATC7_LENGTH                                  0x1
#define _LATC_LATC7_MASK                                    0x80
#define _LATC_LC0_POSN                                      0x0
#define _LATC_LC0_POSITION                                  0x0
#define _LATC_LC0_SIZE                                      0x1
#define _LATC_LC0_LENGTH                                    0x1
#define _LATC_LC0_MASK                                      0x1
#define _LATC_LC1_POSN                                      0x1
#define _LATC_LC1_POSITION                                  0x1
#define _LATC_LC1_SIZE                                      0x1
#define _LATC_LC1_LENGTH                                    0x1
#define _LATC_LC1_MASK                                      0x2
#define _LATC_LC2_POSN                                      0x2
#define _LATC_LC2_POSITION                                  0x2
#define _LATC_LC2_SIZE                                      0x1
#define _LATC_LC2_LENGTH                                    0x1
#define _LATC_LC2_MASK                                      0x4
#define _LATC_LC3_POSN                                      0x3
#define _LATC_LC3_POSITION                                  0x3
#define _LATC_LC3_SIZE                                      0x1
#define _LATC_LC3_LENGTH                                    0x1
#define _LATC_LC3_MASK                                      0x8
#define _LATC_LC4_POSN                                      0x4
#define _LATC_LC4_POSITION                                  0x4
#define _LATC_LC4_SIZE                                      0x1
#define _LATC_LC4_LENGTH                                    0x1
#define _LATC_LC4_MASK                                      0x10
#define _LATC_LC5_POSN                                      0x5
#define _LATC_LC5_POSITION                                  0x5
#define _LATC_LC5_SIZE                                      0x1
#define _LATC_LC5_LENGTH                                    0x1
#define _LATC_LC5_MASK                                      0x20
#define _LATC_LC6_POSN                                      0x6
#define _LATC_LC6_POSITION                                  0x6
#define _LATC_LC6_SIZE                                      0x1
#define _LATC_LC6_LENGTH                                    0x1
#define _LATC_LC6_MASK                                      0x40
#define _LATC_LC7_POSN                                      0x7
#define _LATC_LC7_POSITION                                  0x7
#define _LATC_LC7_SIZE                                      0x1
#define _LATC_LC7_LENGTH                                    0x1
#define _LATC_LC7_MASK                                      0x80

// Register: LATD
#define LATD LATD
extern volatile unsigned char           LATD                __at(0xF8C);
#ifndef _LIB_BUILD
asm("LATD equ 0F8Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATD0                  :1;
        unsigned LATD1                  :1;
        unsigned LATD2                  :1;
        unsigned LATD3                  :1;
        unsigned LATD4                  :1;
        unsigned LATD5                  :1;
        unsigned LATD6                  :1;
        unsigned LATD7                  :1;
    };
    struct {
        unsigned LD0                    :1;
        unsigned LD1                    :1;
        unsigned LD2                    :1;
        unsigned LD3                    :1;
        unsigned LD4                    :1;
        unsigned LD5                    :1;
        unsigned LD6                    :1;
        unsigned LD7                    :1;
    };
} LATDbits_t;
extern volatile LATDbits_t LATDbits __at(0xF8C);
// bitfield macros
#define _LATD_LATD0_POSN                                    0x0
#define _LATD_LATD0_POSITION                                0x0
#define _LATD_LATD0_SIZE                                    0x1
#define _LATD_LATD0_LENGTH                                  0x1
#define _LATD_LATD0_MASK                                    0x1
#define _LATD_LATD1_POSN                                    0x1
#define _LATD_LATD1_POSITION                                0x1
#define _LATD_LATD1_SIZE                                    0x1
#define _LATD_LATD1_LENGTH                                  0x1
#define _LATD_LATD1_MASK                                    0x2
#define _LATD_LATD2_POSN                                    0x2
#define _LATD_LATD2_POSITION                                0x2
#define _LATD_LATD2_SIZE                                    0x1
#define _LATD_LATD2_LENGTH                                  0x1
#define _LATD_LATD2_MASK                                    0x4
#define _LATD_LATD3_POSN                                    0x3
#define _LATD_LATD3_POSITION                                0x3
#define _LATD_LATD3_SIZE                                    0x1
#define _LATD_LATD3_LENGTH                                  0x1
#define _LATD_LATD3_MASK                                    0x8
#define _LATD_LATD4_POSN                                    0x4
#define _LATD_LATD4_POSITION                                0x4
#define _LATD_LATD4_SIZE                                    0x1
#define _LATD_LATD4_LENGTH                                  0x1
#define _LATD_LATD4_MASK                                    0x10
#define _LATD_LATD5_POSN                                    0x5
#define _LATD_LATD5_POSITION                                0x5
#define _LATD_LATD5_SIZE                                    0x1
#define _LATD_LATD5_LENGTH                                  0x1
#define _LATD_LATD5_MASK                                    0x20
#define _LATD_LATD6_POSN                                    0x6
#define _LATD_LATD6_POSITION                                0x6
#define _LATD_LATD6_SIZE                                    0x1
#define _LATD_LATD6_LENGTH                                  0x1
#define _LATD_LATD6_MASK                                    0x40
#define _LATD_LATD7_POSN                                    0x7
#define _LATD_LATD7_POSITION                                0x7
#define _LATD_LATD7_SIZE                                    0x1
#define _LATD_LATD7_LENGTH                                  0x1
#define _LATD_LATD7_MASK                                    0x80
#define _LATD_LD0_POSN                                      0x0
#define _LATD_LD0_POSITION                                  0x0
#define _LATD_LD0_SIZE                                      0x1
#define _LATD_LD0_LENGTH                                    0x1
#define _LATD_LD0_MASK                                      0x1
#define _LATD_LD1_POSN                                      0x1
#define _LATD_LD1_POSITION                                  0x1
#define _LATD_LD1_SIZE                                      0x1
#define _LATD_LD1_LENGTH                                    0x1
#define _LATD_LD1_MASK                                      0x2
#define _LATD_LD2_POSN                                      0x2
#define _LATD_LD2_POSITION                                  0x2
#define _LATD_LD2_SIZE                                      0x1
#define _LATD_LD2_LENGTH                                    0x1
#define _LATD_LD2_MASK                                      0x4
#define _LATD_LD3_POSN                                      0x3
#define _LATD_LD3_POSITION                                  0x3
#define _LATD_LD3_SIZE                                      0x1
#define _LATD_LD3_LENGTH                                    0x1
#define _LATD_LD3_MASK                                      0x8
#define _LATD_LD4_POSN                                      0x4
#define _LATD_LD4_POSITION                                  0x4
#define _LATD_LD4_SIZE                                      0x1
#define _LATD_LD4_LENGTH                                    0x1
#define _LATD_LD4_MASK                                      0x10
#define _LATD_LD5_POSN                                      0x5
#define _LATD_LD5_POSITION                                  0x5
#define _LATD_LD5_SIZE                                      0x1
#define _LATD_LD5_LENGTH                                    0x1
#define _LATD_LD5_MASK                                      0x20
#define _LATD_LD6_POSN                                      0x6
#define _LATD_LD6_POSITION                                  0x6
#define _LATD_LD6_SIZE                                      0x1
#define _LATD_LD6_LENGTH                                    0x1
#define _LATD_LD6_MASK                                      0x40
#define _LATD_LD7_POSN                                      0x7
#define _LATD_LD7_POSITION                                  0x7
#define _LATD_LD7_SIZE                                      0x1
#define _LATD_LD7_LENGTH                                    0x1
#define _LATD_LD7_MASK                                      0x80

// Register: LATE
#define LATE LATE
extern volatile unsigned char           LATE                __at(0xF8D);
#ifndef _LIB_BUILD
asm("LATE equ 0F8Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATE0                  :1;
        unsigned LATE1                  :1;
        unsigned LATE2                  :1;
        unsigned LATE3                  :1;
        unsigned LATE4                  :1;
        unsigned LATE5                  :1;
        unsigned LATE6                  :1;
        unsigned LATE7                  :1;
    };
    struct {
        unsigned LE0                    :1;
        unsigned LE1                    :1;
        unsigned LE2                    :1;
        unsigned LE3                    :1;
        unsigned LE4                    :1;
        unsigned LE5                    :1;
        unsigned LE6                    :1;
        unsigned LE7                    :1;
    };
} LATEbits_t;
extern volatile LATEbits_t LATEbits __at(0xF8D);
// bitfield macros
#define _LATE_LATE0_POSN                                    0x0
#define _LATE_LATE0_POSITION                                0x0
#define _LATE_LATE0_SIZE                                    0x1
#define _LATE_LATE0_LENGTH                                  0x1
#define _LATE_LATE0_MASK                                    0x1
#define _LATE_LATE1_POSN                                    0x1
#define _LATE_LATE1_POSITION                                0x1
#define _LATE_LATE1_SIZE                                    0x1
#define _LATE_LATE1_LENGTH                                  0x1
#define _LATE_LATE1_MASK                                    0x2
#define _LATE_LATE2_POSN                                    0x2
#define _LATE_LATE2_POSITION                                0x2
#define _LATE_LATE2_SIZE                                    0x1
#define _LATE_LATE2_LENGTH                                  0x1
#define _LATE_LATE2_MASK                                    0x4
#define _LATE_LATE3_POSN                                    0x3
#define _LATE_LATE3_POSITION                                0x3
#define _LATE_LATE3_SIZE                                    0x1
#define _LATE_LATE3_LENGTH                                  0x1
#define _LATE_LATE3_MASK                                    0x8
#define _LATE_LATE4_POSN                                    0x4
#define _LATE_LATE4_POSITION                                0x4
#define _LATE_LATE4_SIZE                                    0x1
#define _LATE_LATE4_LENGTH                                  0x1
#define _LATE_LATE4_MASK                                    0x10
#define _LATE_LATE5_POSN                                    0x5
#define _LATE_LATE5_POSITION                                0x5
#define _LATE_LATE5_SIZE                                    0x1
#define _LATE_LATE5_LENGTH                                  0x1
#define _LATE_LATE5_MASK                                    0x20
#define _LATE_LATE6_POSN                                    0x6
#define _LATE_LATE6_POSITION                                0x6
#define _LATE_LATE6_SIZE                                    0x1
#define _LATE_LATE6_LENGTH                                  0x1
#define _LATE_LATE6_MASK                                    0x40
#define _LATE_LATE7_POSN                                    0x7
#define _LATE_LATE7_POSITION                                0x7
#define _LATE_LATE7_SIZE                                    0x1
#define _LATE_LATE7_LENGTH                                  0x1
#define _LATE_LATE7_MASK                                    0x80
#define _LATE_LE0_POSN                                      0x0
#define _LATE_LE0_POSITION                                  0x0
#define _LATE_LE0_SIZE                                      0x1
#define _LATE_LE0_LENGTH                                    0x1
#define _LATE_LE0_MASK                                      0x1
#define _LATE_LE1_POSN                                      0x1
#define _LATE_LE1_POSITION                                  0x1
#define _LATE_LE1_SIZE                                      0x1
#define _LATE_LE1_LENGTH                                    0x1
#define _LATE_LE1_MASK                                      0x2
#define _LATE_LE2_POSN                                      0x2
#define _LATE_LE2_POSITION                                  0x2
#define _LATE_LE2_SIZE                                      0x1
#define _LATE_LE2_LENGTH                                    0x1
#define _LATE_LE2_MASK                                      0x4
#define _LATE_LE3_POSN                                      0x3
#define _LATE_LE3_POSITION                                  0x3
#define _LATE_LE3_SIZE                                      0x1
#define _LATE_LE3_LENGTH                                    0x1
#define _LATE_LE3_MASK                                      0x8
#define _LATE_LE4_POSN                                      0x4
#define _LATE_LE4_POSITION                                  0x4
#define _LATE_LE4_SIZE                                      0x1
#define _LATE_LE4_LENGTH                                    0x1
#define _LATE_LE4_MASK                                      0x10
#define _LATE_LE5_POSN                                      0x5
#define _LATE_LE5_POSITION                                  0x5
#define _LATE_LE5_SIZE                                      0x1
#define _LATE_LE5_LENGTH                                    0x1
#define _LATE_LE5_MASK                                      0x20
#define _LATE_LE6_POSN                                      0x6
#define _LATE_LE6_POSITION                                  0x6
#define _LATE_LE6_SIZE                                      0x1
#define _LATE_LE6_LENGTH                                    0x1
#define _LATE_LE6_MASK                                      0x40
#define _LATE_LE7_POSN                                      0x7
#define _LATE_LE7_POSITION                                  0x7
#define _LATE_LE7_SIZE                                      0x1
#define _LATE_LE7_LENGTH                                    0x1
#define _LATE_LE7_MASK                                      0x80

// Register: LATF
#define LATF LATF
extern volatile unsigned char           LATF                __at(0xF8E);
#ifndef _LIB_BUILD
asm("LATF equ 0F8Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned LATF1                  :1;
        unsigned LATF2                  :1;
        unsigned LATF3                  :1;
        unsigned LATF4                  :1;
        unsigned LATF5                  :1;
        unsigned LATF6                  :1;
        unsigned LATF7                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned LF1                    :1;
        unsigned LF2                    :1;
        unsigned LF3                    :1;
        unsigned LF4                    :1;
        unsigned LF5                    :1;
        unsigned LF6                    :1;
        unsigned LF7                    :1;
    };
} LATFbits_t;
extern volatile LATFbits_t LATFbits __at(0xF8E);
// bitfield macros
#define _LATF_LATF1_POSN                                    0x1
#define _LATF_LATF1_POSITION                                0x1
#define _LATF_LATF1_SIZE                                    0x1
#define _LATF_LATF1_LENGTH                                  0x1
#define _LATF_LATF1_MASK                                    0x2
#define _LATF_LATF2_POSN                                    0x2
#define _LATF_LATF2_POSITION                                0x2
#define _LATF_LATF2_SIZE                                    0x1
#define _LATF_LATF2_LENGTH                                  0x1
#define _LATF_LATF2_MASK                                    0x4
#define _LATF_LATF3_POSN                                    0x3
#define _LATF_LATF3_POSITION                                0x3
#define _LATF_LATF3_SIZE                                    0x1
#define _LATF_LATF3_LENGTH                                  0x1
#define _LATF_LATF3_MASK                                    0x8
#define _LATF_LATF4_POSN                                    0x4
#define _LATF_LATF4_POSITION                                0x4
#define _LATF_LATF4_SIZE                                    0x1
#define _LATF_LATF4_LENGTH                                  0x1
#define _LATF_LATF4_MASK                                    0x10
#define _LATF_LATF5_POSN                                    0x5
#define _LATF_LATF5_POSITION                                0x5
#define _LATF_LATF5_SIZE                                    0x1
#define _LATF_LATF5_LENGTH                                  0x1
#define _LATF_LATF5_MASK                                    0x20
#define _LATF_LATF6_POSN                                    0x6
#define _LATF_LATF6_POSITION                                0x6
#define _LATF_LATF6_SIZE                                    0x1
#define _LATF_LATF6_LENGTH                                  0x1
#define _LATF_LATF6_MASK                                    0x40
#define _LATF_LATF7_POSN                                    0x7
#define _LATF_LATF7_POSITION                                0x7
#define _LATF_LATF7_SIZE                                    0x1
#define _LATF_LATF7_LENGTH                                  0x1
#define _LATF_LATF7_MASK                                    0x80
#define _LATF_LF1_POSN                                      0x1
#define _LATF_LF1_POSITION                                  0x1
#define _LATF_LF1_SIZE                                      0x1
#define _LATF_LF1_LENGTH                                    0x1
#define _LATF_LF1_MASK                                      0x2
#define _LATF_LF2_POSN                                      0x2
#define _LATF_LF2_POSITION                                  0x2
#define _LATF_LF2_SIZE                                      0x1
#define _LATF_LF2_LENGTH                                    0x1
#define _LATF_LF2_MASK                                      0x4
#define _LATF_LF3_POSN                                      0x3
#define _LATF_LF3_POSITION                                  0x3
#define _LATF_LF3_SIZE                                      0x1
#define _LATF_LF3_LENGTH                                    0x1
#define _LATF_LF3_MASK                                      0x8
#define _LATF_LF4_POSN                                      0x4
#define _LATF_LF4_POSITION                                  0x4
#define _LATF_LF4_SIZE                                      0x1
#define _LATF_LF4_LENGTH                                    0x1
#define _LATF_LF4_MASK                                      0x10
#define _LATF_LF5_POSN                                      0x5
#define _LATF_LF5_POSITION                                  0x5
#define _LATF_LF5_SIZE                                      0x1
#define _LATF_LF5_LENGTH                                    0x1
#define _LATF_LF5_MASK                                      0x20
#define _LATF_LF6_POSN                                      0x6
#define _LATF_LF6_POSITION                                  0x6
#define _LATF_LF6_SIZE                                      0x1
#define _LATF_LF6_LENGTH                                    0x1
#define _LATF_LF6_MASK                                      0x40
#define _LATF_LF7_POSN                                      0x7
#define _LATF_LF7_POSITION                                  0x7
#define _LATF_LF7_SIZE                                      0x1
#define _LATF_LF7_LENGTH                                    0x1
#define _LATF_LF7_MASK                                      0x80

// Register: LATG
#define LATG LATG
extern volatile unsigned char           LATG                __at(0xF8F);
#ifndef _LIB_BUILD
asm("LATG equ 0F8Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATG0                  :1;
        unsigned LATG1                  :1;
        unsigned LATG2                  :1;
        unsigned LATG3                  :1;
        unsigned LATG4                  :1;
    };
    struct {
        unsigned LG0                    :1;
        unsigned LG1                    :1;
        unsigned LG2                    :1;
        unsigned LG3                    :1;
        unsigned LG4                    :1;
    };
} LATGbits_t;
extern volatile LATGbits_t LATGbits __at(0xF8F);
// bitfield macros
#define _LATG_LATG0_POSN                                    0x0
#define _LATG_LATG0_POSITION                                0x0
#define _LATG_LATG0_SIZE                                    0x1
#define _LATG_LATG0_LENGTH                                  0x1
#define _LATG_LATG0_MASK                                    0x1
#define _LATG_LATG1_POSN                                    0x1
#define _LATG_LATG1_POSITION                                0x1
#define _LATG_LATG1_SIZE                                    0x1
#define _LATG_LATG1_LENGTH                                  0x1
#define _LATG_LATG1_MASK                                    0x2
#define _LATG_LATG2_POSN                                    0x2
#define _LATG_LATG2_POSITION                                0x2
#define _LATG_LATG2_SIZE                                    0x1
#define _LATG_LATG2_LENGTH                                  0x1
#define _LATG_LATG2_MASK                                    0x4
#define _LATG_LATG3_POSN                                    0x3
#define _LATG_LATG3_POSITION                                0x3
#define _LATG_LATG3_SIZE                                    0x1
#define _LATG_LATG3_LENGTH                                  0x1
#define _LATG_LATG3_MASK                                    0x8
#define _LATG_LATG4_POSN                                    0x4
#define _LATG_LATG4_POSITION                                0x4
#define _LATG_LATG4_SIZE                                    0x1
#define _LATG_LATG4_LENGTH                                  0x1
#define _LATG_LATG4_MASK                                    0x10
#define _LATG_LG0_POSN                                      0x0
#define _LATG_LG0_POSITION                                  0x0
#define _LATG_LG0_SIZE                                      0x1
#define _LATG_LG0_LENGTH                                    0x1
#define _LATG_LG0_MASK                                      0x1
#define _LATG_LG1_POSN                                      0x1
#define _LATG_LG1_POSITION                                  0x1
#define _LATG_LG1_SIZE                                      0x1
#define _LATG_LG1_LENGTH                                    0x1
#define _LATG_LG1_MASK                                      0x2
#define _LATG_LG2_POSN                                      0x2
#define _LATG_LG2_POSITION                                  0x2
#define _LATG_LG2_SIZE                                      0x1
#define _LATG_LG2_LENGTH                                    0x1
#define _LATG_LG2_MASK                                      0x4
#define _LATG_LG3_POSN                                      0x3
#define _LATG_LG3_POSITION                                  0x3
#define _LATG_LG3_SIZE                                      0x1
#define _LATG_LG3_LENGTH                                    0x1
#define _LATG_LG3_MASK                                      0x8
#define _LATG_LG4_POSN                                      0x4
#define _LATG_LG4_POSITION                                  0x4
#define _LATG_LG4_SIZE                                      0x1
#define _LATG_LG4_LENGTH                                    0x1
#define _LATG_LG4_MASK                                      0x10

// Register: LATH
#define LATH LATH
extern volatile unsigned char           LATH                __at(0xF90);
#ifndef _LIB_BUILD
asm("LATH equ 0F90h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATH0                  :1;
        unsigned LATH1                  :1;
        unsigned LATH2                  :1;
        unsigned LATH3                  :1;
        unsigned LATH4                  :1;
        unsigned LATH5                  :1;
        unsigned LATH6                  :1;
        unsigned LATH7                  :1;
    };
    struct {
        unsigned LH0                    :1;
        unsigned LH1                    :1;
        unsigned LH2                    :1;
        unsigned LH3                    :1;
        unsigned LH4                    :1;
        unsigned LH5                    :1;
        unsigned LH6                    :1;
        unsigned LH7                    :1;
    };
} LATHbits_t;
extern volatile LATHbits_t LATHbits __at(0xF90);
// bitfield macros
#define _LATH_LATH0_POSN                                    0x0
#define _LATH_LATH0_POSITION                                0x0
#define _LATH_LATH0_SIZE                                    0x1
#define _LATH_LATH0_LENGTH                                  0x1
#define _LATH_LATH0_MASK                                    0x1
#define _LATH_LATH1_POSN                                    0x1
#define _LATH_LATH1_POSITION                                0x1
#define _LATH_LATH1_SIZE                                    0x1
#define _LATH_LATH1_LENGTH                                  0x1
#define _LATH_LATH1_MASK                                    0x2
#define _LATH_LATH2_POSN                                    0x2
#define _LATH_LATH2_POSITION                                0x2
#define _LATH_LATH2_SIZE                                    0x1
#define _LATH_LATH2_LENGTH                                  0x1
#define _LATH_LATH2_MASK                                    0x4
#define _LATH_LATH3_POSN                                    0x3
#define _LATH_LATH3_POSITION                                0x3
#define _LATH_LATH3_SIZE                                    0x1
#define _LATH_LATH3_LENGTH                                  0x1
#define _LATH_LATH3_MASK                                    0x8
#define _LATH_LATH4_POSN                                    0x4
#define _LATH_LATH4_POSITION                                0x4
#define _LATH_LATH4_SIZE                                    0x1
#define _LATH_LATH4_LENGTH                                  0x1
#define _LATH_LATH4_MASK                                    0x10
#define _LATH_LATH5_POSN                                    0x5
#define _LATH_LATH5_POSITION                                0x5
#define _LATH_LATH5_SIZE                                    0x1
#define _LATH_LATH5_LENGTH                                  0x1
#define _LATH_LATH5_MASK                                    0x20
#define _LATH_LATH6_POSN                                    0x6
#define _LATH_LATH6_POSITION                                0x6
#define _LATH_LATH6_SIZE                                    0x1
#define _LATH_LATH6_LENGTH                                  0x1
#define _LATH_LATH6_MASK                                    0x40
#define _LATH_LATH7_POSN                                    0x7
#define _LATH_LATH7_POSITION                                0x7
#define _LATH_LATH7_SIZE                                    0x1
#define _LATH_LATH7_LENGTH                                  0x1
#define _LATH_LATH7_MASK                                    0x80
#define _LATH_LH0_POSN                                      0x0
#define _LATH_LH0_POSITION                                  0x0
#define _LATH_LH0_SIZE                                      0x1
#define _LATH_LH0_LENGTH                                    0x1
#define _LATH_LH0_MASK                                      0x1
#define _LATH_LH1_POSN                                      0x1
#define _LATH_LH1_POSITION                                  0x1
#define _LATH_LH1_SIZE                                      0x1
#define _LATH_LH1_LENGTH                                    0x1
#define _LATH_LH1_MASK                                      0x2
#define _LATH_LH2_POSN                                      0x2
#define _LATH_LH2_POSITION                                  0x2
#define _LATH_LH2_SIZE                                      0x1
#define _LATH_LH2_LENGTH                                    0x1
#define _LATH_LH2_MASK                                      0x4
#define _LATH_LH3_POSN                                      0x3
#define _LATH_LH3_POSITION                                  0x3
#define _LATH_LH3_SIZE                                      0x1
#define _LATH_LH3_LENGTH                                    0x1
#define _LATH_LH3_MASK                                      0x8
#define _LATH_LH4_POSN                                      0x4
#define _LATH_LH4_POSITION                                  0x4
#define _LATH_LH4_SIZE                                      0x1
#define _LATH_LH4_LENGTH                                    0x1
#define _LATH_LH4_MASK                                      0x10
#define _LATH_LH5_POSN                                      0x5
#define _LATH_LH5_POSITION                                  0x5
#define _LATH_LH5_SIZE                                      0x1
#define _LATH_LH5_LENGTH                                    0x1
#define _LATH_LH5_MASK                                      0x20
#define _LATH_LH6_POSN                                      0x6
#define _LATH_LH6_POSITION                                  0x6
#define _LATH_LH6_SIZE                                      0x1
#define _LATH_LH6_LENGTH                                    0x1
#define _LATH_LH6_MASK                                      0x40
#define _LATH_LH7_POSN                                      0x7
#define _LATH_LH7_POSITION                                  0x7
#define _LATH_LH7_SIZE                                      0x1
#define _LATH_LH7_LENGTH                                    0x1
#define _LATH_LH7_MASK                                      0x80

// Register: LATJ
#define LATJ LATJ
extern volatile unsigned char           LATJ                __at(0xF91);
#ifndef _LIB_BUILD
asm("LATJ equ 0F91h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATJ0                  :1;
        unsigned LATJ1                  :1;
        unsigned LATJ2                  :1;
        unsigned LATJ3                  :1;
        unsigned LATJ4                  :1;
        unsigned LATJ5                  :1;
        unsigned LATJ6                  :1;
        unsigned LATJ7                  :1;
    };
    struct {
        unsigned LJ0                    :1;
        unsigned LJ1                    :1;
        unsigned LJ2                    :1;
        unsigned LJ3                    :1;
        unsigned LJ4                    :1;
        unsigned LJ5                    :1;
        unsigned LJ6                    :1;
        unsigned LJ7                    :1;
    };
} LATJbits_t;
extern volatile LATJbits_t LATJbits __at(0xF91);
// bitfield macros
#define _LATJ_LATJ0_POSN                                    0x0
#define _LATJ_LATJ0_POSITION                                0x0
#define _LATJ_LATJ0_SIZE                                    0x1
#define _LATJ_LATJ0_LENGTH                                  0x1
#define _LATJ_LATJ0_MASK                                    0x1
#define _LATJ_LATJ1_POSN                                    0x1
#define _LATJ_LATJ1_POSITION                                0x1
#define _LATJ_LATJ1_SIZE                                    0x1
#define _LATJ_LATJ1_LENGTH                                  0x1
#define _LATJ_LATJ1_MASK                                    0x2
#define _LATJ_LATJ2_POSN                                    0x2
#define _LATJ_LATJ2_POSITION                                0x2
#define _LATJ_LATJ2_SIZE                                    0x1
#define _LATJ_LATJ2_LENGTH                                  0x1
#define _LATJ_LATJ2_MASK                                    0x4
#define _LATJ_LATJ3_POSN                                    0x3
#define _LATJ_LATJ3_POSITION                                0x3
#define _LATJ_LATJ3_SIZE                                    0x1
#define _LATJ_LATJ3_LENGTH                                  0x1
#define _LATJ_LATJ3_MASK                                    0x8
#define _LATJ_LATJ4_POSN                                    0x4
#define _LATJ_LATJ4_POSITION                                0x4
#define _LATJ_LATJ4_SIZE                                    0x1
#define _LATJ_LATJ4_LENGTH                                  0x1
#define _LATJ_LATJ4_MASK                                    0x10
#define _LATJ_LATJ5_POSN                                    0x5
#define _LATJ_LATJ5_POSITION                                0x5
#define _LATJ_LATJ5_SIZE                                    0x1
#define _LATJ_LATJ5_LENGTH                                  0x1
#define _LATJ_LATJ5_MASK                                    0x20
#define _LATJ_LATJ6_POSN                                    0x6
#define _LATJ_LATJ6_POSITION                                0x6
#define _LATJ_LATJ6_SIZE                                    0x1
#define _LATJ_LATJ6_LENGTH                                  0x1
#define _LATJ_LATJ6_MASK                                    0x40
#define _LATJ_LATJ7_POSN                                    0x7
#define _LATJ_LATJ7_POSITION                                0x7
#define _LATJ_LATJ7_SIZE                                    0x1
#define _LATJ_LATJ7_LENGTH                                  0x1
#define _LATJ_LATJ7_MASK                                    0x80
#define _LATJ_LJ0_POSN                                      0x0
#define _LATJ_LJ0_POSITION                                  0x0
#define _LATJ_LJ0_SIZE                                      0x1
#define _LATJ_LJ0_LENGTH                                    0x1
#define _LATJ_LJ0_MASK                                      0x1
#define _LATJ_LJ1_POSN                                      0x1
#define _LATJ_LJ1_POSITION                                  0x1
#define _LATJ_LJ1_SIZE                                      0x1
#define _LATJ_LJ1_LENGTH                                    0x1
#define _LATJ_LJ1_MASK                                      0x2
#define _LATJ_LJ2_POSN                                      0x2
#define _LATJ_LJ2_POSITION                                  0x2
#define _LATJ_LJ2_SIZE                                      0x1
#define _LATJ_LJ2_LENGTH                                    0x1
#define _LATJ_LJ2_MASK                                      0x4
#define _LATJ_LJ3_POSN                                      0x3
#define _LATJ_LJ3_POSITION                                  0x3
#define _LATJ_LJ3_SIZE                                      0x1
#define _LATJ_LJ3_LENGTH                                    0x1
#define _LATJ_LJ3_MASK                                      0x8
#define _LATJ_LJ4_POSN                                      0x4
#define _LATJ_LJ4_POSITION                                  0x4
#define _LATJ_LJ4_SIZE                                      0x1
#define _LATJ_LJ4_LENGTH                                    0x1
#define _LATJ_LJ4_MASK                                      0x10
#define _LATJ_LJ5_POSN                                      0x5
#define _LATJ_LJ5_POSITION                                  0x5
#define _LATJ_LJ5_SIZE                                      0x1
#define _LATJ_LJ5_LENGTH                                    0x1
#define _LATJ_LJ5_MASK                                      0x20
#define _LATJ_LJ6_POSN                                      0x6
#define _LATJ_LJ6_POSITION                                  0x6
#define _LATJ_LJ6_SIZE                                      0x1
#define _LATJ_LJ6_LENGTH                                    0x1
#define _LATJ_LJ6_MASK                                      0x40
#define _LATJ_LJ7_POSN                                      0x7
#define _LATJ_LJ7_POSITION                                  0x7
#define _LATJ_LJ7_SIZE                                      0x1
#define _LATJ_LJ7_LENGTH                                    0x1
#define _LATJ_LJ7_MASK                                      0x80

// Register: TRISA
#define TRISA TRISA
extern volatile unsigned char           TRISA               __at(0xF92);
#ifndef _LIB_BUILD
asm("TRISA equ 0F92h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISA0                 :1;
        unsigned TRISA1                 :1;
        unsigned TRISA2                 :1;
        unsigned TRISA3                 :1;
        unsigned TRISA4                 :1;
        unsigned TRISA5                 :1;
        unsigned TRISA6                 :1;
        unsigned TRISA7                 :1;
    };
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits __at(0xF92);
// bitfield macros
#define _TRISA_TRISA0_POSN                                  0x0
#define _TRISA_TRISA0_POSITION                              0x0
#define _TRISA_TRISA0_SIZE                                  0x1
#define _TRISA_TRISA0_LENGTH                                0x1
#define _TRISA_TRISA0_MASK                                  0x1
#define _TRISA_TRISA1_POSN                                  0x1
#define _TRISA_TRISA1_POSITION                              0x1
#define _TRISA_TRISA1_SIZE                                  0x1
#define _TRISA_TRISA1_LENGTH                                0x1
#define _TRISA_TRISA1_MASK                                  0x2
#define _TRISA_TRISA2_POSN                                  0x2
#define _TRISA_TRISA2_POSITION                              0x2
#define _TRISA_TRISA2_SIZE                                  0x1
#define _TRISA_TRISA2_LENGTH                                0x1
#define _TRISA_TRISA2_MASK                                  0x4
#define _TRISA_TRISA3_POSN                                  0x3
#define _TRISA_TRISA3_POSITION                              0x3
#define _TRISA_TRISA3_SIZE                                  0x1
#define _TRISA_TRISA3_LENGTH                                0x1
#define _TRISA_TRISA3_MASK                                  0x8
#define _TRISA_TRISA4_POSN                                  0x4
#define _TRISA_TRISA4_POSITION                              0x4
#define _TRISA_TRISA4_SIZE                                  0x1
#define _TRISA_TRISA4_LENGTH                                0x1
#define _TRISA_TRISA4_MASK                                  0x10
#define _TRISA_TRISA5_POSN                                  0x5
#define _TRISA_TRISA5_POSITION                              0x5
#define _TRISA_TRISA5_SIZE                                  0x1
#define _TRISA_TRISA5_LENGTH                                0x1
#define _TRISA_TRISA5_MASK                                  0x20
#define _TRISA_TRISA6_POSN                                  0x6
#define _TRISA_TRISA6_POSITION                              0x6
#define _TRISA_TRISA6_SIZE                                  0x1
#define _TRISA_TRISA6_LENGTH                                0x1
#define _TRISA_TRISA6_MASK                                  0x40
#define _TRISA_TRISA7_POSN                                  0x7
#define _TRISA_TRISA7_POSITION                              0x7
#define _TRISA_TRISA7_SIZE                                  0x1
#define _TRISA_TRISA7_LENGTH                                0x1
#define _TRISA_TRISA7_MASK                                  0x80

// Register: TRISB
#define TRISB TRISB
extern volatile unsigned char           TRISB               __at(0xF93);
#ifndef _LIB_BUILD
asm("TRISB equ 0F93h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISB0                 :1;
        unsigned TRISB1                 :1;
        unsigned TRISB2                 :1;
        unsigned TRISB3                 :1;
        unsigned TRISB4                 :1;
        unsigned TRISB5                 :1;
        unsigned TRISB6                 :1;
        unsigned TRISB7                 :1;
    };
} TRISBbits_t;
extern volatile TRISBbits_t TRISBbits __at(0xF93);
// bitfield macros
#define _TRISB_TRISB0_POSN                                  0x0
#define _TRISB_TRISB0_POSITION                              0x0
#define _TRISB_TRISB0_SIZE                                  0x1
#define _TRISB_TRISB0_LENGTH                                0x1
#define _TRISB_TRISB0_MASK                                  0x1
#define _TRISB_TRISB1_POSN                                  0x1
#define _TRISB_TRISB1_POSITION                              0x1
#define _TRISB_TRISB1_SIZE                                  0x1
#define _TRISB_TRISB1_LENGTH                                0x1
#define _TRISB_TRISB1_MASK                                  0x2
#define _TRISB_TRISB2_POSN                                  0x2
#define _TRISB_TRISB2_POSITION                              0x2
#define _TRISB_TRISB2_SIZE                                  0x1
#define _TRISB_TRISB2_LENGTH                                0x1
#define _TRISB_TRISB2_MASK                                  0x4
#define _TRISB_TRISB3_POSN                                  0x3
#define _TRISB_TRISB3_POSITION                              0x3
#define _TRISB_TRISB3_SIZE                                  0x1
#define _TRISB_TRISB3_LENGTH                                0x1
#define _TRISB_TRISB3_MASK                                  0x8
#define _TRISB_TRISB4_POSN                                  0x4
#define _TRISB_TRISB4_POSITION                              0x4
#define _TRISB_TRISB4_SIZE                                  0x1
#define _TRISB_TRISB4_LENGTH                                0x1
#define _TRISB_TRISB4_MASK                                  0x10
#define _TRISB_TRISB5_POSN                                  0x5
#define _TRISB_TRISB5_POSITION                              0x5
#define _TRISB_TRISB5_SIZE                                  0x1
#define _TRISB_TRISB5_LENGTH                                0x1
#define _TRISB_TRISB5_MASK                                  0x20
#define _TRISB_TRISB6_POSN                                  0x6
#define _TRISB_TRISB6_POSITION                              0x6
#define _TRISB_TRISB6_SIZE                                  0x1
#define _TRISB_TRISB6_LENGTH                                0x1
#define _TRISB_TRISB6_MASK                                  0x40
#define _TRISB_TRISB7_POSN                                  0x7
#define _TRISB_TRISB7_POSITION                              0x7
#define _TRISB_TRISB7_SIZE                                  0x1
#define _TRISB_TRISB7_LENGTH                                0x1
#define _TRISB_TRISB7_MASK                                  0x80

// Register: TRISC
#define TRISC TRISC
extern volatile unsigned char           TRISC               __at(0xF94);
#ifndef _LIB_BUILD
asm("TRISC equ 0F94h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISC0                 :1;
        unsigned TRISC1                 :1;
        unsigned TRISC2                 :1;
        unsigned TRISC3                 :1;
        unsigned TRISC4                 :1;
        unsigned TRISC5                 :1;
        unsigned TRISC6                 :1;
        unsigned TRISC7                 :1;
    };
} TRISCbits_t;
extern volatile TRISCbits_t TRISCbits __at(0xF94);
// bitfield macros
#define _TRISC_TRISC0_POSN                                  0x0
#define _TRISC_TRISC0_POSITION                              0x0
#define _TRISC_TRISC0_SIZE                                  0x1
#define _TRISC_TRISC0_LENGTH                                0x1
#define _TRISC_TRISC0_MASK                                  0x1
#define _TRISC_TRISC1_POSN                                  0x1
#define _TRISC_TRISC1_POSITION                              0x1
#define _TRISC_TRISC1_SIZE                                  0x1
#define _TRISC_TRISC1_LENGTH                                0x1
#define _TRISC_TRISC1_MASK                                  0x2
#define _TRISC_TRISC2_POSN                                  0x2
#define _TRISC_TRISC2_POSITION                              0x2
#define _TRISC_TRISC2_SIZE                                  0x1
#define _TRISC_TRISC2_LENGTH                                0x1
#define _TRISC_TRISC2_MASK                                  0x4
#define _TRISC_TRISC3_POSN                                  0x3
#define _TRISC_TRISC3_POSITION                              0x3
#define _TRISC_TRISC3_SIZE                                  0x1
#define _TRISC_TRISC3_LENGTH                                0x1
#define _TRISC_TRISC3_MASK                                  0x8
#define _TRISC_TRISC4_POSN                                  0x4
#define _TRISC_TRISC4_POSITION                              0x4
#define _TRISC_TRISC4_SIZE                                  0x1
#define _TRISC_TRISC4_LENGTH                                0x1
#define _TRISC_TRISC4_MASK                                  0x10
#define _TRISC_TRISC5_POSN                                  0x5
#define _TRISC_TRISC5_POSITION                              0x5
#define _TRISC_TRISC5_SIZE                                  0x1
#define _TRISC_TRISC5_LENGTH                                0x1
#define _TRISC_TRISC5_MASK                                  0x20
#define _TRISC_TRISC6_POSN                                  0x6
#define _TRISC_TRISC6_POSITION                              0x6
#define _TRISC_TRISC6_SIZE                                  0x1
#define _TRISC_TRISC6_LENGTH                                0x1
#define _TRISC_TRISC6_MASK                                  0x40
#define _TRISC_TRISC7_POSN                                  0x7
#define _TRISC_TRISC7_POSITION                              0x7
#define _TRISC_TRISC7_SIZE                                  0x1
#define _TRISC_TRISC7_LENGTH                                0x1
#define _TRISC_TRISC7_MASK                                  0x80

// Register: TRISD
#define TRISD TRISD
extern volatile unsigned char           TRISD               __at(0xF95);
#ifndef _LIB_BUILD
asm("TRISD equ 0F95h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISD0                 :1;
        unsigned TRISD1                 :1;
        unsigned TRISD2                 :1;
        unsigned TRISD3                 :1;
        unsigned TRISD4                 :1;
        unsigned TRISD5                 :1;
        unsigned TRISD6                 :1;
        unsigned TRISD7                 :1;
    };
} TRISDbits_t;
extern volatile TRISDbits_t TRISDbits __at(0xF95);
// bitfield macros
#define _TRISD_TRISD0_POSN                                  0x0
#define _TRISD_TRISD0_POSITION                              0x0
#define _TRISD_TRISD0_SIZE                                  0x1
#define _TRISD_TRISD0_LENGTH                                0x1
#define _TRISD_TRISD0_MASK                                  0x1
#define _TRISD_TRISD1_POSN                                  0x1
#define _TRISD_TRISD1_POSITION                              0x1
#define _TRISD_TRISD1_SIZE                                  0x1
#define _TRISD_TRISD1_LENGTH                                0x1
#define _TRISD_TRISD1_MASK                                  0x2
#define _TRISD_TRISD2_POSN                                  0x2
#define _TRISD_TRISD2_POSITION                              0x2
#define _TRISD_TRISD2_SIZE                                  0x1
#define _TRISD_TRISD2_LENGTH                                0x1
#define _TRISD_TRISD2_MASK                                  0x4
#define _TRISD_TRISD3_POSN                                  0x3
#define _TRISD_TRISD3_POSITION                              0x3
#define _TRISD_TRISD3_SIZE                                  0x1
#define _TRISD_TRISD3_LENGTH                                0x1
#define _TRISD_TRISD3_MASK                                  0x8
#define _TRISD_TRISD4_POSN                                  0x4
#define _TRISD_TRISD4_POSITION                              0x4
#define _TRISD_TRISD4_SIZE                                  0x1
#define _TRISD_TRISD4_LENGTH                                0x1
#define _TRISD_TRISD4_MASK                                  0x10
#define _TRISD_TRISD5_POSN                                  0x5
#define _TRISD_TRISD5_POSITION                              0x5
#define _TRISD_TRISD5_SIZE                                  0x1
#define _TRISD_TRISD5_LENGTH                                0x1
#define _TRISD_TRISD5_MASK                                  0x20
#define _TRISD_TRISD6_POSN                                  0x6
#define _TRISD_TRISD6_POSITION                              0x6
#define _TRISD_TRISD6_SIZE                                  0x1
#define _TRISD_TRISD6_LENGTH                                0x1
#define _TRISD_TRISD6_MASK                                  0x40
#define _TRISD_TRISD7_POSN                                  0x7
#define _TRISD_TRISD7_POSITION                              0x7
#define _TRISD_TRISD7_SIZE                                  0x1
#define _TRISD_TRISD7_LENGTH                                0x1
#define _TRISD_TRISD7_MASK                                  0x80

// Register: TRISE
#define TRISE TRISE
extern volatile unsigned char           TRISE               __at(0xF96);
#ifndef _LIB_BUILD
asm("TRISE equ 0F96h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISE0                 :1;
        unsigned TRISE1                 :1;
        unsigned TRISE2                 :1;
        unsigned TRISE3                 :1;
        unsigned TRISE4                 :1;
        unsigned TRISE5                 :1;
        unsigned TRISE6                 :1;
        unsigned TRISE7                 :1;
    };
} TRISEbits_t;
extern volatile TRISEbits_t TRISEbits __at(0xF96);
// bitfield macros
#define _TRISE_TRISE0_POSN                                  0x0
#define _TRISE_TRISE0_POSITION                              0x0
#define _TRISE_TRISE0_SIZE                                  0x1
#define _TRISE_TRISE0_LENGTH                                0x1
#define _TRISE_TRISE0_MASK                                  0x1
#define _TRISE_TRISE1_POSN                                  0x1
#define _TRISE_TRISE1_POSITION                              0x1
#define _TRISE_TRISE1_SIZE                                  0x1
#define _TRISE_TRISE1_LENGTH                                0x1
#define _TRISE_TRISE1_MASK                                  0x2
#define _TRISE_TRISE2_POSN                                  0x2
#define _TRISE_TRISE2_POSITION                              0x2
#define _TRISE_TRISE2_SIZE                                  0x1
#define _TRISE_TRISE2_LENGTH                                0x1
#define _TRISE_TRISE2_MASK                                  0x4
#define _TRISE_TRISE3_POSN                                  0x3
#define _TRISE_TRISE3_POSITION                              0x3
#define _TRISE_TRISE3_SIZE                                  0x1
#define _TRISE_TRISE3_LENGTH                                0x1
#define _TRISE_TRISE3_MASK                                  0x8
#define _TRISE_TRISE4_POSN                                  0x4
#define _TRISE_TRISE4_POSITION                              0x4
#define _TRISE_TRISE4_SIZE                                  0x1
#define _TRISE_TRISE4_LENGTH                                0x1
#define _TRISE_TRISE4_MASK                                  0x10
#define _TRISE_TRISE5_POSN                                  0x5
#define _TRISE_TRISE5_POSITION                              0x5
#define _TRISE_TRISE5_SIZE                                  0x1
#define _TRISE_TRISE5_LENGTH                                0x1
#define _TRISE_TRISE5_MASK                                  0x20
#define _TRISE_TRISE6_POSN                                  0x6
#define _TRISE_TRISE6_POSITION                              0x6
#define _TRISE_TRISE6_SIZE                                  0x1
#define _TRISE_TRISE6_LENGTH                                0x1
#define _TRISE_TRISE6_MASK                                  0x40
#define _TRISE_TRISE7_POSN                                  0x7
#define _TRISE_TRISE7_POSITION                              0x7
#define _TRISE_TRISE7_SIZE                                  0x1
#define _TRISE_TRISE7_LENGTH                                0x1
#define _TRISE_TRISE7_MASK                                  0x80

// Register: TRISF
#define TRISF TRISF
extern volatile unsigned char           TRISF               __at(0xF97);
#ifndef _LIB_BUILD
asm("TRISF equ 0F97h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned TRISF1                 :1;
        unsigned TRISF2                 :1;
        unsigned TRISF3                 :1;
        unsigned TRISF4                 :1;
        unsigned TRISF5                 :1;
        unsigned TRISF6                 :1;
        unsigned TRISF7                 :1;
    };
} TRISFbits_t;
extern volatile TRISFbits_t TRISFbits __at(0xF97);
// bitfield macros
#define _TRISF_TRISF1_POSN                                  0x1
#define _TRISF_TRISF1_POSITION                              0x1
#define _TRISF_TRISF1_SIZE                                  0x1
#define _TRISF_TRISF1_LENGTH                                0x1
#define _TRISF_TRISF1_MASK                                  0x2
#define _TRISF_TRISF2_POSN                                  0x2
#define _TRISF_TRISF2_POSITION                              0x2
#define _TRISF_TRISF2_SIZE                                  0x1
#define _TRISF_TRISF2_LENGTH                                0x1
#define _TRISF_TRISF2_MASK                                  0x4
#define _TRISF_TRISF3_POSN                                  0x3
#define _TRISF_TRISF3_POSITION                              0x3
#define _TRISF_TRISF3_SIZE                                  0x1
#define _TRISF_TRISF3_LENGTH                                0x1
#define _TRISF_TRISF3_MASK                                  0x8
#define _TRISF_TRISF4_POSN                                  0x4
#define _TRISF_TRISF4_POSITION                              0x4
#define _TRISF_TRISF4_SIZE                                  0x1
#define _TRISF_TRISF4_LENGTH                                0x1
#define _TRISF_TRISF4_MASK                                  0x10
#define _TRISF_TRISF5_POSN                                  0x5
#define _TRISF_TRISF5_POSITION                              0x5
#define _TRISF_TRISF5_SIZE                                  0x1
#define _TRISF_TRISF5_LENGTH                                0x1
#define _TRISF_TRISF5_MASK                                  0x20
#define _TRISF_TRISF6_POSN                                  0x6
#define _TRISF_TRISF6_POSITION                              0x6
#define _TRISF_TRISF6_SIZE                                  0x1
#define _TRISF_TRISF6_LENGTH                                0x1
#define _TRISF_TRISF6_MASK                                  0x40
#define _TRISF_TRISF7_POSN                                  0x7
#define _TRISF_TRISF7_POSITION                              0x7
#define _TRISF_TRISF7_SIZE                                  0x1
#define _TRISF_TRISF7_LENGTH                                0x1
#define _TRISF_TRISF7_MASK                                  0x80

// Register: TRISG
#define TRISG TRISG
extern volatile unsigned char           TRISG               __at(0xF98);
#ifndef _LIB_BUILD
asm("TRISG equ 0F98h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISG0                 :1;
        unsigned TRISG1                 :1;
        unsigned TRISG2                 :1;
        unsigned TRISG3                 :1;
        unsigned TRISG4                 :1;
    };
} TRISGbits_t;
extern volatile TRISGbits_t TRISGbits __at(0xF98);
// bitfield macros
#define _TRISG_TRISG0_POSN                                  0x0
#define _TRISG_TRISG0_POSITION                              0x0
#define _TRISG_TRISG0_SIZE                                  0x1
#define _TRISG_TRISG0_LENGTH                                0x1
#define _TRISG_TRISG0_MASK                                  0x1
#define _TRISG_TRISG1_POSN                                  0x1
#define _TRISG_TRISG1_POSITION                              0x1
#define _TRISG_TRISG1_SIZE                                  0x1
#define _TRISG_TRISG1_LENGTH                                0x1
#define _TRISG_TRISG1_MASK                                  0x2
#define _TRISG_TRISG2_POSN                                  0x2
#define _TRISG_TRISG2_POSITION                              0x2
#define _TRISG_TRISG2_SIZE                                  0x1
#define _TRISG_TRISG2_LENGTH                                0x1
#define _TRISG_TRISG2_MASK                                  0x4
#define _TRISG_TRISG3_POSN                                  0x3
#define _TRISG_TRISG3_POSITION                              0x3
#define _TRISG_TRISG3_SIZE                                  0x1
#define _TRISG_TRISG3_LENGTH                                0x1
#define _TRISG_TRISG3_MASK                                  0x8
#define _TRISG_TRISG4_POSN                                  0x4
#define _TRISG_TRISG4_POSITION                              0x4
#define _TRISG_TRISG4_SIZE                                  0x1
#define _TRISG_TRISG4_LENGTH                                0x1
#define _TRISG_TRISG4_MASK                                  0x10

// Register: TRISH
#define TRISH TRISH
extern volatile unsigned char           TRISH               __at(0xF99);
#ifndef _LIB_BUILD
asm("TRISH equ 0F99h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISH0                 :1;
        unsigned TRISH1                 :1;
        unsigned TRISH2                 :1;
        unsigned TRISH3                 :1;
        unsigned TRISH4                 :1;
        unsigned TRISH5                 :1;
        unsigned TRISH6                 :1;
        unsigned TRISH7                 :1;
    };
} TRISHbits_t;
extern volatile TRISHbits_t TRISHbits __at(0xF99);
// bitfield macros
#define _TRISH_TRISH0_POSN                                  0x0
#define _TRISH_TRISH0_POSITION                              0x0
#define _TRISH_TRISH0_SIZE                                  0x1
#define _TRISH_TRISH0_LENGTH                                0x1
#define _TRISH_TRISH0_MASK                                  0x1
#define _TRISH_TRISH1_POSN                                  0x1
#define _TRISH_TRISH1_POSITION                              0x1
#define _TRISH_TRISH1_SIZE                                  0x1
#define _TRISH_TRISH1_LENGTH                                0x1
#define _TRISH_TRISH1_MASK                                  0x2
#define _TRISH_TRISH2_POSN                                  0x2
#define _TRISH_TRISH2_POSITION                              0x2
#define _TRISH_TRISH2_SIZE                                  0x1
#define _TRISH_TRISH2_LENGTH                                0x1
#define _TRISH_TRISH2_MASK                                  0x4
#define _TRISH_TRISH3_POSN                                  0x3
#define _TRISH_TRISH3_POSITION                              0x3
#define _TRISH_TRISH3_SIZE                                  0x1
#define _TRISH_TRISH3_LENGTH                                0x1
#define _TRISH_TRISH3_MASK                                  0x8
#define _TRISH_TRISH4_POSN                                  0x4
#define _TRISH_TRISH4_POSITION                              0x4
#define _TRISH_TRISH4_SIZE                                  0x1
#define _TRISH_TRISH4_LENGTH                                0x1
#define _TRISH_TRISH4_MASK                                  0x10
#define _TRISH_TRISH5_POSN                                  0x5
#define _TRISH_TRISH5_POSITION                              0x5
#define _TRISH_TRISH5_SIZE                                  0x1
#define _TRISH_TRISH5_LENGTH                                0x1
#define _TRISH_TRISH5_MASK                                  0x20
#define _TRISH_TRISH6_POSN                                  0x6
#define _TRISH_TRISH6_POSITION                              0x6
#define _TRISH_TRISH6_SIZE                                  0x1
#define _TRISH_TRISH6_LENGTH                                0x1
#define _TRISH_TRISH6_MASK                                  0x40
#define _TRISH_TRISH7_POSN                                  0x7
#define _TRISH_TRISH7_POSITION                              0x7
#define _TRISH_TRISH7_SIZE                                  0x1
#define _TRISH_TRISH7_LENGTH                                0x1
#define _TRISH_TRISH7_MASK                                  0x80

// Register: TRISJ
#define TRISJ TRISJ
extern volatile unsigned char           TRISJ               __at(0xF9A);
#ifndef _LIB_BUILD
asm("TRISJ equ 0F9Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISJ0                 :1;
        unsigned TRISJ1                 :1;
        unsigned TRISJ2                 :1;
        unsigned TRISJ3                 :1;
        unsigned TRISJ4                 :1;
        unsigned TRISJ5                 :1;
        unsigned TRISJ6                 :1;
        unsigned TRISJ7                 :1;
    };
} TRISJbits_t;
extern volatile TRISJbits_t TRISJbits __at(0xF9A);
// bitfield macros
#define _TRISJ_TRISJ0_POSN                                  0x0
#define _TRISJ_TRISJ0_POSITION                              0x0
#define _TRISJ_TRISJ0_SIZE                                  0x1
#define _TRISJ_TRISJ0_LENGTH                                0x1
#define _TRISJ_TRISJ0_MASK                                  0x1
#define _TRISJ_TRISJ1_POSN                                  0x1
#define _TRISJ_TRISJ1_POSITION                              0x1
#define _TRISJ_TRISJ1_SIZE                                  0x1
#define _TRISJ_TRISJ1_LENGTH                                0x1
#define _TRISJ_TRISJ1_MASK                                  0x2
#define _TRISJ_TRISJ2_POSN                                  0x2
#define _TRISJ_TRISJ2_POSITION                              0x2
#define _TRISJ_TRISJ2_SIZE                                  0x1
#define _TRISJ_TRISJ2_LENGTH                                0x1
#define _TRISJ_TRISJ2_MASK                                  0x4
#define _TRISJ_TRISJ3_POSN                                  0x3
#define _TRISJ_TRISJ3_POSITION                              0x3
#define _TRISJ_TRISJ3_SIZE                                  0x1
#define _TRISJ_TRISJ3_LENGTH                                0x1
#define _TRISJ_TRISJ3_MASK                                  0x8
#define _TRISJ_TRISJ4_POSN                                  0x4
#define _TRISJ_TRISJ4_POSITION                              0x4
#define _TRISJ_TRISJ4_SIZE                                  0x1
#define _TRISJ_TRISJ4_LENGTH                                0x1
#define _TRISJ_TRISJ4_MASK                                  0x10
#define _TRISJ_TRISJ5_POSN                                  0x5
#define _TRISJ_TRISJ5_POSITION                              0x5
#define _TRISJ_TRISJ5_SIZE                                  0x1
#define _TRISJ_TRISJ5_LENGTH                                0x1
#define _TRISJ_TRISJ5_MASK                                  0x20
#define _TRISJ_TRISJ6_POSN                                  0x6
#define _TRISJ_TRISJ6_POSITION                              0x6
#define _TRISJ_TRISJ6_SIZE                                  0x1
#define _TRISJ_TRISJ6_LENGTH                                0x1
#define _TRISJ_TRISJ6_MASK                                  0x40
#define _TRISJ_TRISJ7_POSN                                  0x7
#define _TRISJ_TRISJ7_POSITION                              0x7
#define _TRISJ_TRISJ7_SIZE                                  0x1
#define _TRISJ_TRISJ7_LENGTH                                0x1
#define _TRISJ_TRISJ7_MASK                                  0x80

// Register: OSCTUNE
#define OSCTUNE OSCTUNE
extern volatile unsigned char           OSCTUNE             __at(0xF9B);
#ifndef _LIB_BUILD
asm("OSCTUNE equ 0F9Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TUN                    :6;
        unsigned PLLEN                  :1;
        unsigned INTSRC                 :1;
    };
    struct {
        unsigned TUN0                   :1;
        unsigned TUN1                   :1;
        unsigned TUN2                   :1;
        unsigned TUN3                   :1;
        unsigned TUN4                   :1;
        unsigned TUN5                   :1;
    };
} OSCTUNEbits_t;
extern volatile OSCTUNEbits_t OSCTUNEbits __at(0xF9B);
// bitfield macros
#define _OSCTUNE_TUN_POSN                                   0x0
#define _OSCTUNE_TUN_POSITION                               0x0
#define _OSCTUNE_TUN_SIZE                                   0x6
#define _OSCTUNE_TUN_LENGTH                                 0x6
#define _OSCTUNE_TUN_MASK                                   0x3F
#define _OSCTUNE_PLLEN_POSN                                 0x6
#define _OSCTUNE_PLLEN_POSITION                             0x6
#define _OSCTUNE_PLLEN_SIZE                                 0x1
#define _OSCTUNE_PLLEN_LENGTH                               0x1
#define _OSCTUNE_PLLEN_MASK                                 0x40
#define _OSCTUNE_INTSRC_POSN                                0x7
#define _OSCTUNE_INTSRC_POSITION                            0x7
#define _OSCTUNE_INTSRC_SIZE                                0x1
#define _OSCTUNE_INTSRC_LENGTH                              0x1
#define _OSCTUNE_INTSRC_MASK                                0x80
#define _OSCTUNE_TUN0_POSN                                  0x0
#define _OSCTUNE_TUN0_POSITION                              0x0
#define _OSCTUNE_TUN0_SIZE                                  0x1
#define _OSCTUNE_TUN0_LENGTH                                0x1
#define _OSCTUNE_TUN0_MASK                                  0x1
#define _OSCTUNE_TUN1_POSN                                  0x1
#define _OSCTUNE_TUN1_POSITION                              0x1
#define _OSCTUNE_TUN1_SIZE                                  0x1
#define _OSCTUNE_TUN1_LENGTH                                0x1
#define _OSCTUNE_TUN1_MASK                                  0x2
#define _OSCTUNE_TUN2_POSN                                  0x2
#define _OSCTUNE_TUN2_POSITION                              0x2
#define _OSCTUNE_TUN2_SIZE                                  0x1
#define _OSCTUNE_TUN2_LENGTH                                0x1
#define _OSCTUNE_TUN2_MASK                                  0x4
#define _OSCTUNE_TUN3_POSN                                  0x3
#define _OSCTUNE_TUN3_POSITION                              0x3
#define _OSCTUNE_TUN3_SIZE                                  0x1
#define _OSCTUNE_TUN3_LENGTH                                0x1
#define _OSCTUNE_TUN3_MASK                                  0x8
#define _OSCTUNE_TUN4_POSN                                  0x4
#define _OSCTUNE_TUN4_POSITION                              0x4
#define _OSCTUNE_TUN4_SIZE                                  0x1
#define _OSCTUNE_TUN4_LENGTH                                0x1
#define _OSCTUNE_TUN4_MASK                                  0x10
#define _OSCTUNE_TUN5_POSN                                  0x5
#define _OSCTUNE_TUN5_POSITION                              0x5
#define _OSCTUNE_TUN5_SIZE                                  0x1
#define _OSCTUNE_TUN5_LENGTH                                0x1
#define _OSCTUNE_TUN5_MASK                                  0x20

// Register: PSTR1CON
#define PSTR1CON PSTR1CON
extern volatile unsigned char           PSTR1CON            __at(0xF9C);
#ifndef _LIB_BUILD
asm("PSTR1CON equ 0F9Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned STRSYNC                :1;
        unsigned                        :1;
        unsigned CMPL                   :2;
    };
    struct {
        unsigned                        :6;
        unsigned CMPL0                  :1;
        unsigned CMPL1                  :1;
    };
} PSTR1CONbits_t;
extern volatile PSTR1CONbits_t PSTR1CONbits __at(0xF9C);
// bitfield macros
#define _PSTR1CON_STRA_POSN                                 0x0
#define _PSTR1CON_STRA_POSITION                             0x0
#define _PSTR1CON_STRA_SIZE                                 0x1
#define _PSTR1CON_STRA_LENGTH                               0x1
#define _PSTR1CON_STRA_MASK                                 0x1
#define _PSTR1CON_STRB_POSN                                 0x1
#define _PSTR1CON_STRB_POSITION                             0x1
#define _PSTR1CON_STRB_SIZE                                 0x1
#define _PSTR1CON_STRB_LENGTH                               0x1
#define _PSTR1CON_STRB_MASK                                 0x2
#define _PSTR1CON_STRC_POSN                                 0x2
#define _PSTR1CON_STRC_POSITION                             0x2
#define _PSTR1CON_STRC_SIZE                                 0x1
#define _PSTR1CON_STRC_LENGTH                               0x1
#define _PSTR1CON_STRC_MASK                                 0x4
#define _PSTR1CON_STRD_POSN                                 0x3
#define _PSTR1CON_STRD_POSITION                             0x3
#define _PSTR1CON_STRD_SIZE                                 0x1
#define _PSTR1CON_STRD_LENGTH                               0x1
#define _PSTR1CON_STRD_MASK                                 0x8
#define _PSTR1CON_STRSYNC_POSN                              0x4
#define _PSTR1CON_STRSYNC_POSITION                          0x4
#define _PSTR1CON_STRSYNC_SIZE                              0x1
#define _PSTR1CON_STRSYNC_LENGTH                            0x1
#define _PSTR1CON_STRSYNC_MASK                              0x10
#define _PSTR1CON_CMPL_POSN                                 0x6
#define _PSTR1CON_CMPL_POSITION                             0x6
#define _PSTR1CON_CMPL_SIZE                                 0x2
#define _PSTR1CON_CMPL_LENGTH                               0x2
#define _PSTR1CON_CMPL_MASK                                 0xC0
#define _PSTR1CON_CMPL0_POSN                                0x6
#define _PSTR1CON_CMPL0_POSITION                            0x6
#define _PSTR1CON_CMPL0_SIZE                                0x1
#define _PSTR1CON_CMPL0_LENGTH                              0x1
#define _PSTR1CON_CMPL0_MASK                                0x40
#define _PSTR1CON_CMPL1_POSN                                0x7
#define _PSTR1CON_CMPL1_POSITION                            0x7
#define _PSTR1CON_CMPL1_SIZE                                0x1
#define _PSTR1CON_CMPL1_LENGTH                              0x1
#define _PSTR1CON_CMPL1_MASK                                0x80

// Register: PIE1
#define PIE1 PIE1
extern volatile unsigned char           PIE1                __at(0xF9D);
#ifndef _LIB_BUILD
asm("PIE1 equ 0F9Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IE                 :1;
        unsigned TMR2IE                 :1;
        unsigned TMR1GIE                :1;
        unsigned SSP1IE                 :1;
        unsigned TX1IE                  :1;
        unsigned RC1IE                  :1;
        unsigned ADIE                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned SSPIE                  :1;
        unsigned TXIE                   :1;
        unsigned RCIE                   :1;
    };
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits __at(0xF9D);
// bitfield macros
#define _PIE1_TMR1IE_POSN                                   0x0
#define _PIE1_TMR1IE_POSITION                               0x0
#define _PIE1_TMR1IE_SIZE                                   0x1
#define _PIE1_TMR1IE_LENGTH                                 0x1
#define _PIE1_TMR1IE_MASK                                   0x1
#define _PIE1_TMR2IE_POSN                                   0x1
#define _PIE1_TMR2IE_POSITION                               0x1
#define _PIE1_TMR2IE_SIZE                                   0x1
#define _PIE1_TMR2IE_LENGTH                                 0x1
#define _PIE1_TMR2IE_MASK                                   0x2
#define _PIE1_TMR1GIE_POSN                                  0x2
#define _PIE1_TMR1GIE_POSITION                              0x2
#define _PIE1_TMR1GIE_SIZE                                  0x1
#define _PIE1_TMR1GIE_LENGTH                                0x1
#define _PIE1_TMR1GIE_MASK                                  0x4
#define _PIE1_SSP1IE_POSN                                   0x3
#define _PIE1_SSP1IE_POSITION                               0x3
#define _PIE1_SSP1IE_SIZE                                   0x1
#define _PIE1_SSP1IE_LENGTH                                 0x1
#define _PIE1_SSP1IE_MASK                                   0x8
#define _PIE1_TX1IE_POSN                                    0x4
#define _PIE1_TX1IE_POSITION                                0x4
#define _PIE1_TX1IE_SIZE                                    0x1
#define _PIE1_TX1IE_LENGTH                                  0x1
#define _PIE1_TX1IE_MASK                                    0x10
#define _PIE1_RC1IE_POSN                                    0x5
#define _PIE1_RC1IE_POSITION                                0x5
#define _PIE1_RC1IE_SIZE                                    0x1
#define _PIE1_RC1IE_LENGTH                                  0x1
#define _PIE1_RC1IE_MASK                                    0x20
#define _PIE1_ADIE_POSN                                     0x6
#define _PIE1_ADIE_POSITION                                 0x6
#define _PIE1_ADIE_SIZE                                     0x1
#define _PIE1_ADIE_LENGTH                                   0x1
#define _PIE1_ADIE_MASK                                     0x40
#define _PIE1_SSPIE_POSN                                    0x3
#define _PIE1_SSPIE_POSITION                                0x3
#define _PIE1_SSPIE_SIZE                                    0x1
#define _PIE1_SSPIE_LENGTH                                  0x1
#define _PIE1_SSPIE_MASK                                    0x8
#define _PIE1_TXIE_POSN                                     0x4
#define _PIE1_TXIE_POSITION                                 0x4
#define _PIE1_TXIE_SIZE                                     0x1
#define _PIE1_TXIE_LENGTH                                   0x1
#define _PIE1_TXIE_MASK                                     0x10
#define _PIE1_RCIE_POSN                                     0x5
#define _PIE1_RCIE_POSITION                                 0x5
#define _PIE1_RCIE_SIZE                                     0x1
#define _PIE1_RCIE_LENGTH                                   0x1
#define _PIE1_RCIE_MASK                                     0x20

// Register: PIR1
#define PIR1 PIR1
extern volatile unsigned char           PIR1                __at(0xF9E);
#ifndef _LIB_BUILD
asm("PIR1 equ 0F9Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IF                 :1;
        unsigned TMR2IF                 :1;
        unsigned TMR1GIF                :1;
        unsigned SSP1IF                 :1;
        unsigned TX1IF                  :1;
        unsigned RC1IF                  :1;
        unsigned ADIF                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned SSPIF                  :1;
        unsigned TXIF                   :1;
        unsigned RCIF                   :1;
    };
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits __at(0xF9E);
// bitfield macros
#define _PIR1_TMR1IF_POSN                                   0x0
#define _PIR1_TMR1IF_POSITION                               0x0
#define _PIR1_TMR1IF_SIZE                                   0x1
#define _PIR1_TMR1IF_LENGTH                                 0x1
#define _PIR1_TMR1IF_MASK                                   0x1
#define _PIR1_TMR2IF_POSN                                   0x1
#define _PIR1_TMR2IF_POSITION                               0x1
#define _PIR1_TMR2IF_SIZE                                   0x1
#define _PIR1_TMR2IF_LENGTH                                 0x1
#define _PIR1_TMR2IF_MASK                                   0x2
#define _PIR1_TMR1GIF_POSN                                  0x2
#define _PIR1_TMR1GIF_POSITION                              0x2
#define _PIR1_TMR1GIF_SIZE                                  0x1
#define _PIR1_TMR1GIF_LENGTH                                0x1
#define _PIR1_TMR1GIF_MASK                                  0x4
#define _PIR1_SSP1IF_POSN                                   0x3
#define _PIR1_SSP1IF_POSITION                               0x3
#define _PIR1_SSP1IF_SIZE                                   0x1
#define _PIR1_SSP1IF_LENGTH                                 0x1
#define _PIR1_SSP1IF_MASK                                   0x8
#define _PIR1_TX1IF_POSN                                    0x4
#define _PIR1_TX1IF_POSITION                                0x4
#define _PIR1_TX1IF_SIZE                                    0x1
#define _PIR1_TX1IF_LENGTH                                  0x1
#define _PIR1_TX1IF_MASK                                    0x10
#define _PIR1_RC1IF_POSN                                    0x5
#define _PIR1_RC1IF_POSITION                                0x5
#define _PIR1_RC1IF_SIZE                                    0x1
#define _PIR1_RC1IF_LENGTH                                  0x1
#define _PIR1_RC1IF_MASK                                    0x20
#define _PIR1_ADIF_POSN                                     0x6
#define _PIR1_ADIF_POSITION                                 0x6
#define _PIR1_ADIF_SIZE                                     0x1
#define _PIR1_ADIF_LENGTH                                   0x1
#define _PIR1_ADIF_MASK                                     0x40
#define _PIR1_SSPIF_POSN                                    0x3
#define _PIR1_SSPIF_POSITION                                0x3
#define _PIR1_SSPIF_SIZE                                    0x1
#define _PIR1_SSPIF_LENGTH                                  0x1
#define _PIR1_SSPIF_MASK                                    0x8
#define _PIR1_TXIF_POSN                                     0x4
#define _PIR1_TXIF_POSITION                                 0x4
#define _PIR1_TXIF_SIZE                                     0x1
#define _PIR1_TXIF_LENGTH                                   0x1
#define _PIR1_TXIF_MASK                                     0x10
#define _PIR1_RCIF_POSN                                     0x5
#define _PIR1_RCIF_POSITION                                 0x5
#define _PIR1_RCIF_SIZE                                     0x1
#define _PIR1_RCIF_LENGTH                                   0x1
#define _PIR1_RCIF_MASK                                     0x20

// Register: IPR1
#define IPR1 IPR1
extern volatile unsigned char           IPR1                __at(0xF9F);
#ifndef _LIB_BUILD
asm("IPR1 equ 0F9Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IP                 :1;
        unsigned TMR2IP                 :1;
        unsigned TMR1GIP                :1;
        unsigned SSP1IP                 :1;
        unsigned TX1IP                  :1;
        unsigned RC1IP                  :1;
        unsigned ADIP                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned SSPIP                  :1;
        unsigned TXIP                   :1;
        unsigned RCIP                   :1;
    };
} IPR1bits_t;
extern volatile IPR1bits_t IPR1bits __at(0xF9F);
// bitfield macros
#define _IPR1_TMR1IP_POSN                                   0x0
#define _IPR1_TMR1IP_POSITION                               0x0
#define _IPR1_TMR1IP_SIZE                                   0x1
#define _IPR1_TMR1IP_LENGTH                                 0x1
#define _IPR1_TMR1IP_MASK                                   0x1
#define _IPR1_TMR2IP_POSN                                   0x1
#define _IPR1_TMR2IP_POSITION                               0x1
#define _IPR1_TMR2IP_SIZE                                   0x1
#define _IPR1_TMR2IP_LENGTH                                 0x1
#define _IPR1_TMR2IP_MASK                                   0x2
#define _IPR1_TMR1GIP_POSN                                  0x2
#define _IPR1_TMR1GIP_POSITION                              0x2
#define _IPR1_TMR1GIP_SIZE                                  0x1
#define _IPR1_TMR1GIP_LENGTH                                0x1
#define _IPR1_TMR1GIP_MASK                                  0x4
#define _IPR1_SSP1IP_POSN                                   0x3
#define _IPR1_SSP1IP_POSITION                               0x3
#define _IPR1_SSP1IP_SIZE                                   0x1
#define _IPR1_SSP1IP_LENGTH                                 0x1
#define _IPR1_SSP1IP_MASK                                   0x8
#define _IPR1_TX1IP_POSN                                    0x4
#define _IPR1_TX1IP_POSITION                                0x4
#define _IPR1_TX1IP_SIZE                                    0x1
#define _IPR1_TX1IP_LENGTH                                  0x1
#define _IPR1_TX1IP_MASK                                    0x10
#define _IPR1_RC1IP_POSN                                    0x5
#define _IPR1_RC1IP_POSITION                                0x5
#define _IPR1_RC1IP_SIZE                                    0x1
#define _IPR1_RC1IP_LENGTH                                  0x1
#define _IPR1_RC1IP_MASK                                    0x20
#define _IPR1_ADIP_POSN                                     0x6
#define _IPR1_ADIP_POSITION                                 0x6
#define _IPR1_ADIP_SIZE                                     0x1
#define _IPR1_ADIP_LENGTH                                   0x1
#define _IPR1_ADIP_MASK                                     0x40
#define _IPR1_SSPIP_POSN                                    0x3
#define _IPR1_SSPIP_POSITION                                0x3
#define _IPR1_SSPIP_SIZE                                    0x1
#define _IPR1_SSPIP_LENGTH                                  0x1
#define _IPR1_SSPIP_MASK                                    0x8
#define _IPR1_TXIP_POSN                                     0x4
#define _IPR1_TXIP_POSITION                                 0x4
#define _IPR1_TXIP_SIZE                                     0x1
#define _IPR1_TXIP_LENGTH                                   0x1
#define _IPR1_TXIP_MASK                                     0x10
#define _IPR1_RCIP_POSN                                     0x5
#define _IPR1_RCIP_POSITION                                 0x5
#define _IPR1_RCIP_SIZE                                     0x1
#define _IPR1_RCIP_LENGTH                                   0x1
#define _IPR1_RCIP_MASK                                     0x20

// Register: PIE2
#define PIE2 PIE2
extern volatile unsigned char           PIE2                __at(0xFA0);
#ifndef _LIB_BUILD
asm("PIE2 equ 0FA0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR3GIE                :1;
        unsigned TMR3IE                 :1;
        unsigned HLVDIE                 :1;
        unsigned BCL1IE                 :1;
        unsigned BCL2IE                 :1;
        unsigned SSP2IE                 :1;
        unsigned                        :1;
        unsigned OSCFIE                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned LVDIE                  :1;
        unsigned BCLIE                  :1;
    };
} PIE2bits_t;
extern volatile PIE2bits_t PIE2bits __at(0xFA0);
// bitfield macros
#define _PIE2_TMR3GIE_POSN                                  0x0
#define _PIE2_TMR3GIE_POSITION                              0x0
#define _PIE2_TMR3GIE_SIZE                                  0x1
#define _PIE2_TMR3GIE_LENGTH                                0x1
#define _PIE2_TMR3GIE_MASK                                  0x1
#define _PIE2_TMR3IE_POSN                                   0x1
#define _PIE2_TMR3IE_POSITION                               0x1
#define _PIE2_TMR3IE_SIZE                                   0x1
#define _PIE2_TMR3IE_LENGTH                                 0x1
#define _PIE2_TMR3IE_MASK                                   0x2
#define _PIE2_HLVDIE_POSN                                   0x2
#define _PIE2_HLVDIE_POSITION                               0x2
#define _PIE2_HLVDIE_SIZE                                   0x1
#define _PIE2_HLVDIE_LENGTH                                 0x1
#define _PIE2_HLVDIE_MASK                                   0x4
#define _PIE2_BCL1IE_POSN                                   0x3
#define _PIE2_BCL1IE_POSITION                               0x3
#define _PIE2_BCL1IE_SIZE                                   0x1
#define _PIE2_BCL1IE_LENGTH                                 0x1
#define _PIE2_BCL1IE_MASK                                   0x8
#define _PIE2_BCL2IE_POSN                                   0x4
#define _PIE2_BCL2IE_POSITION                               0x4
#define _PIE2_BCL2IE_SIZE                                   0x1
#define _PIE2_BCL2IE_LENGTH                                 0x1
#define _PIE2_BCL2IE_MASK                                   0x10
#define _PIE2_SSP2IE_POSN                                   0x5
#define _PIE2_SSP2IE_POSITION                               0x5
#define _PIE2_SSP2IE_SIZE                                   0x1
#define _PIE2_SSP2IE_LENGTH                                 0x1
#define _PIE2_SSP2IE_MASK                                   0x20
#define _PIE2_OSCFIE_POSN                                   0x7
#define _PIE2_OSCFIE_POSITION                               0x7
#define _PIE2_OSCFIE_SIZE                                   0x1
#define _PIE2_OSCFIE_LENGTH                                 0x1
#define _PIE2_OSCFIE_MASK                                   0x80
#define _PIE2_LVDIE_POSN                                    0x2
#define _PIE2_LVDIE_POSITION                                0x2
#define _PIE2_LVDIE_SIZE                                    0x1
#define _PIE2_LVDIE_LENGTH                                  0x1
#define _PIE2_LVDIE_MASK                                    0x4
#define _PIE2_BCLIE_POSN                                    0x3
#define _PIE2_BCLIE_POSITION                                0x3
#define _PIE2_BCLIE_SIZE                                    0x1
#define _PIE2_BCLIE_LENGTH                                  0x1
#define _PIE2_BCLIE_MASK                                    0x8

// Register: PIR2
#define PIR2 PIR2
extern volatile unsigned char           PIR2                __at(0xFA1);
#ifndef _LIB_BUILD
asm("PIR2 equ 0FA1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR3GIF                :1;
        unsigned TMR3IF                 :1;
        unsigned HLVDIF                 :1;
        unsigned BCL1IF                 :1;
        unsigned BCL2IF                 :1;
        unsigned SSP2IF                 :1;
        unsigned                        :1;
        unsigned OSCFIF                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned LVDIF                  :1;
        unsigned BCLIF                  :1;
    };
} PIR2bits_t;
extern volatile PIR2bits_t PIR2bits __at(0xFA1);
// bitfield macros
#define _PIR2_TMR3GIF_POSN                                  0x0
#define _PIR2_TMR3GIF_POSITION                              0x0
#define _PIR2_TMR3GIF_SIZE                                  0x1
#define _PIR2_TMR3GIF_LENGTH                                0x1
#define _PIR2_TMR3GIF_MASK                                  0x1
#define _PIR2_TMR3IF_POSN                                   0x1
#define _PIR2_TMR3IF_POSITION                               0x1
#define _PIR2_TMR3IF_SIZE                                   0x1
#define _PIR2_TMR3IF_LENGTH                                 0x1
#define _PIR2_TMR3IF_MASK                                   0x2
#define _PIR2_HLVDIF_POSN                                   0x2
#define _PIR2_HLVDIF_POSITION                               0x2
#define _PIR2_HLVDIF_SIZE                                   0x1
#define _PIR2_HLVDIF_LENGTH                                 0x1
#define _PIR2_HLVDIF_MASK                                   0x4
#define _PIR2_BCL1IF_POSN                                   0x3
#define _PIR2_BCL1IF_POSITION                               0x3
#define _PIR2_BCL1IF_SIZE                                   0x1
#define _PIR2_BCL1IF_LENGTH                                 0x1
#define _PIR2_BCL1IF_MASK                                   0x8
#define _PIR2_BCL2IF_POSN                                   0x4
#define _PIR2_BCL2IF_POSITION                               0x4
#define _PIR2_BCL2IF_SIZE                                   0x1
#define _PIR2_BCL2IF_LENGTH                                 0x1
#define _PIR2_BCL2IF_MASK                                   0x10
#define _PIR2_SSP2IF_POSN                                   0x5
#define _PIR2_SSP2IF_POSITION                               0x5
#define _PIR2_SSP2IF_SIZE                                   0x1
#define _PIR2_SSP2IF_LENGTH                                 0x1
#define _PIR2_SSP2IF_MASK                                   0x20
#define _PIR2_OSCFIF_POSN                                   0x7
#define _PIR2_OSCFIF_POSITION                               0x7
#define _PIR2_OSCFIF_SIZE                                   0x1
#define _PIR2_OSCFIF_LENGTH                                 0x1
#define _PIR2_OSCFIF_MASK                                   0x80
#define _PIR2_LVDIF_POSN                                    0x2
#define _PIR2_LVDIF_POSITION                                0x2
#define _PIR2_LVDIF_SIZE                                    0x1
#define _PIR2_LVDIF_LENGTH                                  0x1
#define _PIR2_LVDIF_MASK                                    0x4
#define _PIR2_BCLIF_POSN                                    0x3
#define _PIR2_BCLIF_POSITION                                0x3
#define _PIR2_BCLIF_SIZE                                    0x1
#define _PIR2_BCLIF_LENGTH                                  0x1
#define _PIR2_BCLIF_MASK                                    0x8

// Register: IPR2
#define IPR2 IPR2
extern volatile unsigned char           IPR2                __at(0xFA2);
#ifndef _LIB_BUILD
asm("IPR2 equ 0FA2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR3GIP                :1;
        unsigned TMR3IP                 :1;
        unsigned HLVDIP                 :1;
        unsigned BCL1IP                 :1;
        unsigned BCL2IP                 :1;
        unsigned SSP2IP                 :1;
        unsigned                        :1;
        unsigned OSCFIP                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned LVDIP                  :1;
        unsigned BCLIP                  :1;
    };
} IPR2bits_t;
extern volatile IPR2bits_t IPR2bits __at(0xFA2);
// bitfield macros
#define _IPR2_TMR3GIP_POSN                                  0x0
#define _IPR2_TMR3GIP_POSITION                              0x0
#define _IPR2_TMR3GIP_SIZE                                  0x1
#define _IPR2_TMR3GIP_LENGTH                                0x1
#define _IPR2_TMR3GIP_MASK                                  0x1
#define _IPR2_TMR3IP_POSN                                   0x1
#define _IPR2_TMR3IP_POSITION                               0x1
#define _IPR2_TMR3IP_SIZE                                   0x1
#define _IPR2_TMR3IP_LENGTH                                 0x1
#define _IPR2_TMR3IP_MASK                                   0x2
#define _IPR2_HLVDIP_POSN                                   0x2
#define _IPR2_HLVDIP_POSITION                               0x2
#define _IPR2_HLVDIP_SIZE                                   0x1
#define _IPR2_HLVDIP_LENGTH                                 0x1
#define _IPR2_HLVDIP_MASK                                   0x4
#define _IPR2_BCL1IP_POSN                                   0x3
#define _IPR2_BCL1IP_POSITION                               0x3
#define _IPR2_BCL1IP_SIZE                                   0x1
#define _IPR2_BCL1IP_LENGTH                                 0x1
#define _IPR2_BCL1IP_MASK                                   0x8
#define _IPR2_BCL2IP_POSN                                   0x4
#define _IPR2_BCL2IP_POSITION                               0x4
#define _IPR2_BCL2IP_SIZE                                   0x1
#define _IPR2_BCL2IP_LENGTH                                 0x1
#define _IPR2_BCL2IP_MASK                                   0x10
#define _IPR2_SSP2IP_POSN                                   0x5
#define _IPR2_SSP2IP_POSITION                               0x5
#define _IPR2_SSP2IP_SIZE                                   0x1
#define _IPR2_SSP2IP_LENGTH                                 0x1
#define _IPR2_SSP2IP_MASK                                   0x20
#define _IPR2_OSCFIP_POSN                                   0x7
#define _IPR2_OSCFIP_POSITION                               0x7
#define _IPR2_OSCFIP_SIZE                                   0x1
#define _IPR2_OSCFIP_LENGTH                                 0x1
#define _IPR2_OSCFIP_MASK                                   0x80
#define _IPR2_LVDIP_POSN                                    0x2
#define _IPR2_LVDIP_POSITION                                0x2
#define _IPR2_LVDIP_SIZE                                    0x1
#define _IPR2_LVDIP_LENGTH                                  0x1
#define _IPR2_LVDIP_MASK                                    0x4
#define _IPR2_BCLIP_POSN                                    0x3
#define _IPR2_BCLIP_POSITION                                0x3
#define _IPR2_BCLIP_SIZE                                    0x1
#define _IPR2_BCLIP_LENGTH                                  0x1
#define _IPR2_BCLIP_MASK                                    0x8

// Register: PIE3
#define PIE3 PIE3
extern volatile unsigned char           PIE3                __at(0xFA3);
#ifndef _LIB_BUILD
asm("PIE3 equ 0FA3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCCIE                 :1;
        unsigned CCP1IE                 :1;
        unsigned CCP2IE                 :1;
        unsigned CTMUIE                 :1;
        unsigned TX2IE                  :1;
        unsigned RC2IE                  :1;
        unsigned LCDIE                  :1;
        unsigned TMR5GIE                :1;
    };
    struct {
        unsigned RXB0IE                 :1;
        unsigned RXB1IE                 :1;
        unsigned TXB0IE                 :1;
        unsigned TXB1IE                 :1;
        unsigned TXB2IE                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIE                 :1;
        unsigned                        :2;
        unsigned TXBNIE                 :1;
    };
} PIE3bits_t;
extern volatile PIE3bits_t PIE3bits __at(0xFA3);
// bitfield macros
#define _PIE3_RTCCIE_POSN                                   0x0
#define _PIE3_RTCCIE_POSITION                               0x0
#define _PIE3_RTCCIE_SIZE                                   0x1
#define _PIE3_RTCCIE_LENGTH                                 0x1
#define _PIE3_RTCCIE_MASK                                   0x1
#define _PIE3_CCP1IE_POSN                                   0x1
#define _PIE3_CCP1IE_POSITION                               0x1
#define _PIE3_CCP1IE_SIZE                                   0x1
#define _PIE3_CCP1IE_LENGTH                                 0x1
#define _PIE3_CCP1IE_MASK                                   0x2
#define _PIE3_CCP2IE_POSN                                   0x2
#define _PIE3_CCP2IE_POSITION                               0x2
#define _PIE3_CCP2IE_SIZE                                   0x1
#define _PIE3_CCP2IE_LENGTH                                 0x1
#define _PIE3_CCP2IE_MASK                                   0x4
#define _PIE3_CTMUIE_POSN                                   0x3
#define _PIE3_CTMUIE_POSITION                               0x3
#define _PIE3_CTMUIE_SIZE                                   0x1
#define _PIE3_CTMUIE_LENGTH                                 0x1
#define _PIE3_CTMUIE_MASK                                   0x8
#define _PIE3_TX2IE_POSN                                    0x4
#define _PIE3_TX2IE_POSITION                                0x4
#define _PIE3_TX2IE_SIZE                                    0x1
#define _PIE3_TX2IE_LENGTH                                  0x1
#define _PIE3_TX2IE_MASK                                    0x10
#define _PIE3_RC2IE_POSN                                    0x5
#define _PIE3_RC2IE_POSITION                                0x5
#define _PIE3_RC2IE_SIZE                                    0x1
#define _PIE3_RC2IE_LENGTH                                  0x1
#define _PIE3_RC2IE_MASK                                    0x20
#define _PIE3_LCDIE_POSN                                    0x6
#define _PIE3_LCDIE_POSITION                                0x6
#define _PIE3_LCDIE_SIZE                                    0x1
#define _PIE3_LCDIE_LENGTH                                  0x1
#define _PIE3_LCDIE_MASK                                    0x40
#define _PIE3_TMR5GIE_POSN                                  0x7
#define _PIE3_TMR5GIE_POSITION                              0x7
#define _PIE3_TMR5GIE_SIZE                                  0x1
#define _PIE3_TMR5GIE_LENGTH                                0x1
#define _PIE3_TMR5GIE_MASK                                  0x80
#define _PIE3_RXB0IE_POSN                                   0x0
#define _PIE3_RXB0IE_POSITION                               0x0
#define _PIE3_RXB0IE_SIZE                                   0x1
#define _PIE3_RXB0IE_LENGTH                                 0x1
#define _PIE3_RXB0IE_MASK                                   0x1
#define _PIE3_RXB1IE_POSN                                   0x1
#define _PIE3_RXB1IE_POSITION                               0x1
#define _PIE3_RXB1IE_SIZE                                   0x1
#define _PIE3_RXB1IE_LENGTH                                 0x1
#define _PIE3_RXB1IE_MASK                                   0x2
#define _PIE3_TXB0IE_POSN                                   0x2
#define _PIE3_TXB0IE_POSITION                               0x2
#define _PIE3_TXB0IE_SIZE                                   0x1
#define _PIE3_TXB0IE_LENGTH                                 0x1
#define _PIE3_TXB0IE_MASK                                   0x4
#define _PIE3_TXB1IE_POSN                                   0x3
#define _PIE3_TXB1IE_POSITION                               0x3
#define _PIE3_TXB1IE_SIZE                                   0x1
#define _PIE3_TXB1IE_LENGTH                                 0x1
#define _PIE3_TXB1IE_MASK                                   0x8
#define _PIE3_TXB2IE_POSN                                   0x4
#define _PIE3_TXB2IE_POSITION                               0x4
#define _PIE3_TXB2IE_SIZE                                   0x1
#define _PIE3_TXB2IE_LENGTH                                 0x1
#define _PIE3_TXB2IE_MASK                                   0x10
#define _PIE3_RXBNIE_POSN                                   0x1
#define _PIE3_RXBNIE_POSITION                               0x1
#define _PIE3_RXBNIE_SIZE                                   0x1
#define _PIE3_RXBNIE_LENGTH                                 0x1
#define _PIE3_RXBNIE_MASK                                   0x2
#define _PIE3_TXBNIE_POSN                                   0x4
#define _PIE3_TXBNIE_POSITION                               0x4
#define _PIE3_TXBNIE_SIZE                                   0x1
#define _PIE3_TXBNIE_LENGTH                                 0x1
#define _PIE3_TXBNIE_MASK                                   0x10

// Register: PIR3
#define PIR3 PIR3
extern volatile unsigned char           PIR3                __at(0xFA4);
#ifndef _LIB_BUILD
asm("PIR3 equ 0FA4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCCIF                 :1;
        unsigned CCP1IF                 :1;
        unsigned CCP2IF                 :1;
        unsigned CTMUIF                 :1;
        unsigned TX2IF                  :1;
        unsigned RC2IF                  :1;
        unsigned LCDIF                  :1;
        unsigned TMR5GIF                :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIF                 :1;
        unsigned                        :2;
        unsigned TXBNIF                 :1;
    };
} PIR3bits_t;
extern volatile PIR3bits_t PIR3bits __at(0xFA4);
// bitfield macros
#define _PIR3_RTCCIF_POSN                                   0x0
#define _PIR3_RTCCIF_POSITION                               0x0
#define _PIR3_RTCCIF_SIZE                                   0x1
#define _PIR3_RTCCIF_LENGTH                                 0x1
#define _PIR3_RTCCIF_MASK                                   0x1
#define _PIR3_CCP1IF_POSN                                   0x1
#define _PIR3_CCP1IF_POSITION                               0x1
#define _PIR3_CCP1IF_SIZE                                   0x1
#define _PIR3_CCP1IF_LENGTH                                 0x1
#define _PIR3_CCP1IF_MASK                                   0x2
#define _PIR3_CCP2IF_POSN                                   0x2
#define _PIR3_CCP2IF_POSITION                               0x2
#define _PIR3_CCP2IF_SIZE                                   0x1
#define _PIR3_CCP2IF_LENGTH                                 0x1
#define _PIR3_CCP2IF_MASK                                   0x4
#define _PIR3_CTMUIF_POSN                                   0x3
#define _PIR3_CTMUIF_POSITION                               0x3
#define _PIR3_CTMUIF_SIZE                                   0x1
#define _PIR3_CTMUIF_LENGTH                                 0x1
#define _PIR3_CTMUIF_MASK                                   0x8
#define _PIR3_TX2IF_POSN                                    0x4
#define _PIR3_TX2IF_POSITION                                0x4
#define _PIR3_TX2IF_SIZE                                    0x1
#define _PIR3_TX2IF_LENGTH                                  0x1
#define _PIR3_TX2IF_MASK                                    0x10
#define _PIR3_RC2IF_POSN                                    0x5
#define _PIR3_RC2IF_POSITION                                0x5
#define _PIR3_RC2IF_SIZE                                    0x1
#define _PIR3_RC2IF_LENGTH                                  0x1
#define _PIR3_RC2IF_MASK                                    0x20
#define _PIR3_LCDIF_POSN                                    0x6
#define _PIR3_LCDIF_POSITION                                0x6
#define _PIR3_LCDIF_SIZE                                    0x1
#define _PIR3_LCDIF_LENGTH                                  0x1
#define _PIR3_LCDIF_MASK                                    0x40
#define _PIR3_TMR5GIF_POSN                                  0x7
#define _PIR3_TMR5GIF_POSITION                              0x7
#define _PIR3_TMR5GIF_SIZE                                  0x1
#define _PIR3_TMR5GIF_LENGTH                                0x1
#define _PIR3_TMR5GIF_MASK                                  0x80
#define _PIR3_RXBNIF_POSN                                   0x1
#define _PIR3_RXBNIF_POSITION                               0x1
#define _PIR3_RXBNIF_SIZE                                   0x1
#define _PIR3_RXBNIF_LENGTH                                 0x1
#define _PIR3_RXBNIF_MASK                                   0x2
#define _PIR3_TXBNIF_POSN                                   0x4
#define _PIR3_TXBNIF_POSITION                               0x4
#define _PIR3_TXBNIF_SIZE                                   0x1
#define _PIR3_TXBNIF_LENGTH                                 0x1
#define _PIR3_TXBNIF_MASK                                   0x10

// Register: IPR3
#define IPR3 IPR3
extern volatile unsigned char           IPR3                __at(0xFA5);
#ifndef _LIB_BUILD
asm("IPR3 equ 0FA5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCCIP                 :1;
        unsigned CCP1IP                 :1;
        unsigned CCP2IP                 :1;
        unsigned CTMUIP                 :1;
        unsigned TX2IP                  :1;
        unsigned RC2IP                  :1;
        unsigned LCDIP                  :1;
        unsigned TMR5GIP                :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIP                 :1;
        unsigned                        :2;
        unsigned TXBNIP                 :1;
    };
} IPR3bits_t;
extern volatile IPR3bits_t IPR3bits __at(0xFA5);
// bitfield macros
#define _IPR3_RTCCIP_POSN                                   0x0
#define _IPR3_RTCCIP_POSITION                               0x0
#define _IPR3_RTCCIP_SIZE                                   0x1
#define _IPR3_RTCCIP_LENGTH                                 0x1
#define _IPR3_RTCCIP_MASK                                   0x1
#define _IPR3_CCP1IP_POSN                                   0x1
#define _IPR3_CCP1IP_POSITION                               0x1
#define _IPR3_CCP1IP_SIZE                                   0x1
#define _IPR3_CCP1IP_LENGTH                                 0x1
#define _IPR3_CCP1IP_MASK                                   0x2
#define _IPR3_CCP2IP_POSN                                   0x2
#define _IPR3_CCP2IP_POSITION                               0x2
#define _IPR3_CCP2IP_SIZE                                   0x1
#define _IPR3_CCP2IP_LENGTH                                 0x1
#define _IPR3_CCP2IP_MASK                                   0x4
#define _IPR3_CTMUIP_POSN                                   0x3
#define _IPR3_CTMUIP_POSITION                               0x3
#define _IPR3_CTMUIP_SIZE                                   0x1
#define _IPR3_CTMUIP_LENGTH                                 0x1
#define _IPR3_CTMUIP_MASK                                   0x8
#define _IPR3_TX2IP_POSN                                    0x4
#define _IPR3_TX2IP_POSITION                                0x4
#define _IPR3_TX2IP_SIZE                                    0x1
#define _IPR3_TX2IP_LENGTH                                  0x1
#define _IPR3_TX2IP_MASK                                    0x10
#define _IPR3_RC2IP_POSN                                    0x5
#define _IPR3_RC2IP_POSITION                                0x5
#define _IPR3_RC2IP_SIZE                                    0x1
#define _IPR3_RC2IP_LENGTH                                  0x1
#define _IPR3_RC2IP_MASK                                    0x20
#define _IPR3_LCDIP_POSN                                    0x6
#define _IPR3_LCDIP_POSITION                                0x6
#define _IPR3_LCDIP_SIZE                                    0x1
#define _IPR3_LCDIP_LENGTH                                  0x1
#define _IPR3_LCDIP_MASK                                    0x40
#define _IPR3_TMR5GIP_POSN                                  0x7
#define _IPR3_TMR5GIP_POSITION                              0x7
#define _IPR3_TMR5GIP_SIZE                                  0x1
#define _IPR3_TMR5GIP_LENGTH                                0x1
#define _IPR3_TMR5GIP_MASK                                  0x80
#define _IPR3_RXBNIP_POSN                                   0x1
#define _IPR3_RXBNIP_POSITION                               0x1
#define _IPR3_RXBNIP_SIZE                                   0x1
#define _IPR3_RXBNIP_LENGTH                                 0x1
#define _IPR3_RXBNIP_MASK                                   0x2
#define _IPR3_TXBNIP_POSN                                   0x4
#define _IPR3_TXBNIP_POSITION                               0x4
#define _IPR3_TXBNIP_SIZE                                   0x1
#define _IPR3_TXBNIP_LENGTH                                 0x1
#define _IPR3_TXBNIP_MASK                                   0x10

// Register: PIR6
#define PIR6 PIR6
extern volatile unsigned char           PIR6                __at(0xFA6);
#ifndef _LIB_BUILD
asm("PIR6 equ 0FA6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CMP1IF                 :1;
        unsigned CMP2IF                 :1;
        unsigned CMP3IF                 :1;
        unsigned                        :1;
        unsigned EEIF                   :1;
    };
} PIR6bits_t;
extern volatile PIR6bits_t PIR6bits __at(0xFA6);
// bitfield macros
#define _PIR6_CMP1IF_POSN                                   0x0
#define _PIR6_CMP1IF_POSITION                               0x0
#define _PIR6_CMP1IF_SIZE                                   0x1
#define _PIR6_CMP1IF_LENGTH                                 0x1
#define _PIR6_CMP1IF_MASK                                   0x1
#define _PIR6_CMP2IF_POSN                                   0x1
#define _PIR6_CMP2IF_POSITION                               0x1
#define _PIR6_CMP2IF_SIZE                                   0x1
#define _PIR6_CMP2IF_LENGTH                                 0x1
#define _PIR6_CMP2IF_MASK                                   0x2
#define _PIR6_CMP3IF_POSN                                   0x2
#define _PIR6_CMP3IF_POSITION                               0x2
#define _PIR6_CMP3IF_SIZE                                   0x1
#define _PIR6_CMP3IF_LENGTH                                 0x1
#define _PIR6_CMP3IF_MASK                                   0x4
#define _PIR6_EEIF_POSN                                     0x4
#define _PIR6_EEIF_POSITION                                 0x4
#define _PIR6_EEIF_SIZE                                     0x1
#define _PIR6_EEIF_LENGTH                                   0x1
#define _PIR6_EEIF_MASK                                     0x10

// Register: HLVDCON
#define HLVDCON HLVDCON
extern volatile unsigned char           HLVDCON             __at(0xFA8);
#ifndef _LIB_BUILD
asm("HLVDCON equ 0FA8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned HLVDL                  :4;
        unsigned HLVDEN                 :1;
        unsigned IRVST                  :1;
        unsigned BGVST                  :1;
        unsigned VDIRMAG                :1;
    };
    struct {
        unsigned HLVDL0                 :1;
        unsigned HLVDL1                 :1;
        unsigned HLVDL2                 :1;
        unsigned HLVDL3                 :1;
    };
} HLVDCONbits_t;
extern volatile HLVDCONbits_t HLVDCONbits __at(0xFA8);
// bitfield macros
#define _HLVDCON_HLVDL_POSN                                 0x0
#define _HLVDCON_HLVDL_POSITION                             0x0
#define _HLVDCON_HLVDL_SIZE                                 0x4
#define _HLVDCON_HLVDL_LENGTH                               0x4
#define _HLVDCON_HLVDL_MASK                                 0xF
#define _HLVDCON_HLVDEN_POSN                                0x4
#define _HLVDCON_HLVDEN_POSITION                            0x4
#define _HLVDCON_HLVDEN_SIZE                                0x1
#define _HLVDCON_HLVDEN_LENGTH                              0x1
#define _HLVDCON_HLVDEN_MASK                                0x10
#define _HLVDCON_IRVST_POSN                                 0x5
#define _HLVDCON_IRVST_POSITION                             0x5
#define _HLVDCON_IRVST_SIZE                                 0x1
#define _HLVDCON_IRVST_LENGTH                               0x1
#define _HLVDCON_IRVST_MASK                                 0x20
#define _HLVDCON_BGVST_POSN                                 0x6
#define _HLVDCON_BGVST_POSITION                             0x6
#define _HLVDCON_BGVST_SIZE                                 0x1
#define _HLVDCON_BGVST_LENGTH                               0x1
#define _HLVDCON_BGVST_MASK                                 0x40
#define _HLVDCON_VDIRMAG_POSN                               0x7
#define _HLVDCON_VDIRMAG_POSITION                           0x7
#define _HLVDCON_VDIRMAG_SIZE                               0x1
#define _HLVDCON_VDIRMAG_LENGTH                             0x1
#define _HLVDCON_VDIRMAG_MASK                               0x80
#define _HLVDCON_HLVDL0_POSN                                0x0
#define _HLVDCON_HLVDL0_POSITION                            0x0
#define _HLVDCON_HLVDL0_SIZE                                0x1
#define _HLVDCON_HLVDL0_LENGTH                              0x1
#define _HLVDCON_HLVDL0_MASK                                0x1
#define _HLVDCON_HLVDL1_POSN                                0x1
#define _HLVDCON_HLVDL1_POSITION                            0x1
#define _HLVDCON_HLVDL1_SIZE                                0x1
#define _HLVDCON_HLVDL1_LENGTH                              0x1
#define _HLVDCON_HLVDL1_MASK                                0x2
#define _HLVDCON_HLVDL2_POSN                                0x2
#define _HLVDCON_HLVDL2_POSITION                            0x2
#define _HLVDCON_HLVDL2_SIZE                                0x1
#define _HLVDCON_HLVDL2_LENGTH                              0x1
#define _HLVDCON_HLVDL2_MASK                                0x4
#define _HLVDCON_HLVDL3_POSN                                0x3
#define _HLVDCON_HLVDL3_POSITION                            0x3
#define _HLVDCON_HLVDL3_SIZE                                0x1
#define _HLVDCON_HLVDL3_LENGTH                              0x1
#define _HLVDCON_HLVDL3_MASK                                0x8

// Register: IPR6
#define IPR6 IPR6
extern volatile unsigned char           IPR6                __at(0xFA9);
#ifndef _LIB_BUILD
asm("IPR6 equ 0FA9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CMP1IP                 :1;
        unsigned CMP2IP                 :1;
        unsigned CMP3IP                 :1;
        unsigned                        :1;
        unsigned EEIP                   :1;
    };
} IPR6bits_t;
extern volatile IPR6bits_t IPR6bits __at(0xFA9);
// bitfield macros
#define _IPR6_CMP1IP_POSN                                   0x0
#define _IPR6_CMP1IP_POSITION                               0x0
#define _IPR6_CMP1IP_SIZE                                   0x1
#define _IPR6_CMP1IP_LENGTH                                 0x1
#define _IPR6_CMP1IP_MASK                                   0x1
#define _IPR6_CMP2IP_POSN                                   0x1
#define _IPR6_CMP2IP_POSITION                               0x1
#define _IPR6_CMP2IP_SIZE                                   0x1
#define _IPR6_CMP2IP_LENGTH                                 0x1
#define _IPR6_CMP2IP_MASK                                   0x2
#define _IPR6_CMP3IP_POSN                                   0x2
#define _IPR6_CMP3IP_POSITION                               0x2
#define _IPR6_CMP3IP_SIZE                                   0x1
#define _IPR6_CMP3IP_LENGTH                                 0x1
#define _IPR6_CMP3IP_MASK                                   0x4
#define _IPR6_EEIP_POSN                                     0x4
#define _IPR6_EEIP_POSITION                                 0x4
#define _IPR6_EEIP_SIZE                                     0x1
#define _IPR6_EEIP_LENGTH                                   0x1
#define _IPR6_EEIP_MASK                                     0x10

// Register: T1GCON
#define T1GCON T1GCON
extern volatile unsigned char           T1GCON              __at(0xFAA);
#ifndef _LIB_BUILD
asm("T1GCON equ 0FAAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :3;
        unsigned T1GGO_NOT_T1DONE       :1;
    };
    struct {
        unsigned T1GSS                  :2;
        unsigned T1GVAL                 :1;
        unsigned T1GGO_nT1DONE          :1;
        unsigned T1GSPM                 :1;
        unsigned T1GTM                  :1;
        unsigned T1GPOL                 :1;
        unsigned TMR1GE                 :1;
    };
    struct {
        unsigned T1GSS0                 :1;
        unsigned T1GSS1                 :1;
        unsigned                        :1;
        unsigned T1GGO                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned NOT_T1DONE             :1;
    };
    struct {
        unsigned                        :3;
        unsigned nT1DONE                :1;
    };
} T1GCONbits_t;
extern volatile T1GCONbits_t T1GCONbits __at(0xFAA);
// bitfield macros
#define _T1GCON_T1GGO_NOT_T1DONE_POSN                       0x3
#define _T1GCON_T1GGO_NOT_T1DONE_POSITION                   0x3
#define _T1GCON_T1GGO_NOT_T1DONE_SIZE                       0x1
#define _T1GCON_T1GGO_NOT_T1DONE_LENGTH                     0x1
#define _T1GCON_T1GGO_NOT_T1DONE_MASK                       0x8
#define _T1GCON_T1GSS_POSN                                  0x0
#define _T1GCON_T1GSS_POSITION                              0x0
#define _T1GCON_T1GSS_SIZE                                  0x2
#define _T1GCON_T1GSS_LENGTH                                0x2
#define _T1GCON_T1GSS_MASK                                  0x3
#define _T1GCON_T1GVAL_POSN                                 0x2
#define _T1GCON_T1GVAL_POSITION                             0x2
#define _T1GCON_T1GVAL_SIZE                                 0x1
#define _T1GCON_T1GVAL_LENGTH                               0x1
#define _T1GCON_T1GVAL_MASK                                 0x4
#define _T1GCON_T1GGO_nT1DONE_POSN                          0x3
#define _T1GCON_T1GGO_nT1DONE_POSITION                      0x3
#define _T1GCON_T1GGO_nT1DONE_SIZE                          0x1
#define _T1GCON_T1GGO_nT1DONE_LENGTH                        0x1
#define _T1GCON_T1GGO_nT1DONE_MASK                          0x8
#define _T1GCON_T1GSPM_POSN                                 0x4
#define _T1GCON_T1GSPM_POSITION                             0x4
#define _T1GCON_T1GSPM_SIZE                                 0x1
#define _T1GCON_T1GSPM_LENGTH                               0x1
#define _T1GCON_T1GSPM_MASK                                 0x10
#define _T1GCON_T1GTM_POSN                                  0x5
#define _T1GCON_T1GTM_POSITION                              0x5
#define _T1GCON_T1GTM_SIZE                                  0x1
#define _T1GCON_T1GTM_LENGTH                                0x1
#define _T1GCON_T1GTM_MASK                                  0x20
#define _T1GCON_T1GPOL_POSN                                 0x6
#define _T1GCON_T1GPOL_POSITION                             0x6
#define _T1GCON_T1GPOL_SIZE                                 0x1
#define _T1GCON_T1GPOL_LENGTH                               0x1
#define _T1GCON_T1GPOL_MASK                                 0x40
#define _T1GCON_TMR1GE_POSN                                 0x7
#define _T1GCON_TMR1GE_POSITION                             0x7
#define _T1GCON_TMR1GE_SIZE                                 0x1
#define _T1GCON_TMR1GE_LENGTH                               0x1
#define _T1GCON_TMR1GE_MASK                                 0x80
#define _T1GCON_T1GSS0_POSN                                 0x0
#define _T1GCON_T1GSS0_POSITION                             0x0
#define _T1GCON_T1GSS0_SIZE                                 0x1
#define _T1GCON_T1GSS0_LENGTH                               0x1
#define _T1GCON_T1GSS0_MASK                                 0x1
#define _T1GCON_T1GSS1_POSN                                 0x1
#define _T1GCON_T1GSS1_POSITION                             0x1
#define _T1GCON_T1GSS1_SIZE                                 0x1
#define _T1GCON_T1GSS1_LENGTH                               0x1
#define _T1GCON_T1GSS1_MASK                                 0x2
#define _T1GCON_T1GGO_POSN                                  0x3
#define _T1GCON_T1GGO_POSITION                              0x3
#define _T1GCON_T1GGO_SIZE                                  0x1
#define _T1GCON_T1GGO_LENGTH                                0x1
#define _T1GCON_T1GGO_MASK                                  0x8
#define _T1GCON_NOT_T1DONE_POSN                             0x3
#define _T1GCON_NOT_T1DONE_POSITION                         0x3
#define _T1GCON_NOT_T1DONE_SIZE                             0x1
#define _T1GCON_NOT_T1DONE_LENGTH                           0x1
#define _T1GCON_NOT_T1DONE_MASK                             0x8
#define _T1GCON_nT1DONE_POSN                                0x3
#define _T1GCON_nT1DONE_POSITION                            0x3
#define _T1GCON_nT1DONE_SIZE                                0x1
#define _T1GCON_nT1DONE_LENGTH                              0x1
#define _T1GCON_nT1DONE_MASK                                0x8

// Register: RCSTA1
#define RCSTA1 RCSTA1
extern volatile unsigned char           RCSTA1              __at(0xFAB);
#ifndef _LIB_BUILD
asm("RCSTA1 equ 0FABh");
#endif
// aliases
extern volatile unsigned char           RCSTA               __at(0xFAB);
#ifndef _LIB_BUILD
asm("RCSTA equ 0FABh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
    struct {
        unsigned RCD8                   :1;
        unsigned                        :2;
        unsigned ADEN                   :1;
        unsigned                        :2;
        unsigned RC9                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_RC8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nRC8                   :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC8_9                  :1;
    };
    struct {
        unsigned RX9D1                  :1;
        unsigned OERR1                  :1;
        unsigned FERR1                  :1;
        unsigned ADDEN1                 :1;
        unsigned CREN1                  :1;
        unsigned SREN1                  :1;
        unsigned RX91                   :1;
        unsigned SPEN1                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned SRENA                  :1;
    };
} RCSTA1bits_t;
extern volatile RCSTA1bits_t RCSTA1bits __at(0xFAB);
// bitfield macros
#define _RCSTA1_RX9D_POSN                                   0x0
#define _RCSTA1_RX9D_POSITION                               0x0
#define _RCSTA1_RX9D_SIZE                                   0x1
#define _RCSTA1_RX9D_LENGTH                                 0x1
#define _RCSTA1_RX9D_MASK                                   0x1
#define _RCSTA1_OERR_POSN                                   0x1
#define _RCSTA1_OERR_POSITION                               0x1
#define _RCSTA1_OERR_SIZE                                   0x1
#define _RCSTA1_OERR_LENGTH                                 0x1
#define _RCSTA1_OERR_MASK                                   0x2
#define _RCSTA1_FERR_POSN                                   0x2
#define _RCSTA1_FERR_POSITION                               0x2
#define _RCSTA1_FERR_SIZE                                   0x1
#define _RCSTA1_FERR_LENGTH                                 0x1
#define _RCSTA1_FERR_MASK                                   0x4
#define _RCSTA1_ADDEN_POSN                                  0x3
#define _RCSTA1_ADDEN_POSITION                              0x3
#define _RCSTA1_ADDEN_SIZE                                  0x1
#define _RCSTA1_ADDEN_LENGTH                                0x1
#define _RCSTA1_ADDEN_MASK                                  0x8
#define _RCSTA1_CREN_POSN                                   0x4
#define _RCSTA1_CREN_POSITION                               0x4
#define _RCSTA1_CREN_SIZE                                   0x1
#define _RCSTA1_CREN_LENGTH                                 0x1
#define _RCSTA1_CREN_MASK                                   0x10
#define _RCSTA1_SREN_POSN                                   0x5
#define _RCSTA1_SREN_POSITION                               0x5
#define _RCSTA1_SREN_SIZE                                   0x1
#define _RCSTA1_SREN_LENGTH                                 0x1
#define _RCSTA1_SREN_MASK                                   0x20
#define _RCSTA1_RX9_POSN                                    0x6
#define _RCSTA1_RX9_POSITION                                0x6
#define _RCSTA1_RX9_SIZE                                    0x1
#define _RCSTA1_RX9_LENGTH                                  0x1
#define _RCSTA1_RX9_MASK                                    0x40
#define _RCSTA1_SPEN_POSN                                   0x7
#define _RCSTA1_SPEN_POSITION                               0x7
#define _RCSTA1_SPEN_SIZE                                   0x1
#define _RCSTA1_SPEN_LENGTH                                 0x1
#define _RCSTA1_SPEN_MASK                                   0x80
#define _RCSTA1_RCD8_POSN                                   0x0
#define _RCSTA1_RCD8_POSITION                               0x0
#define _RCSTA1_RCD8_SIZE                                   0x1
#define _RCSTA1_RCD8_LENGTH                                 0x1
#define _RCSTA1_RCD8_MASK                                   0x1
#define _RCSTA1_ADEN_POSN                                   0x3
#define _RCSTA1_ADEN_POSITION                               0x3
#define _RCSTA1_ADEN_SIZE                                   0x1
#define _RCSTA1_ADEN_LENGTH                                 0x1
#define _RCSTA1_ADEN_MASK                                   0x8
#define _RCSTA1_RC9_POSN                                    0x6
#define _RCSTA1_RC9_POSITION                                0x6
#define _RCSTA1_RC9_SIZE                                    0x1
#define _RCSTA1_RC9_LENGTH                                  0x1
#define _RCSTA1_RC9_MASK                                    0x40
#define _RCSTA1_NOT_RC8_POSN                                0x6
#define _RCSTA1_NOT_RC8_POSITION                            0x6
#define _RCSTA1_NOT_RC8_SIZE                                0x1
#define _RCSTA1_NOT_RC8_LENGTH                              0x1
#define _RCSTA1_NOT_RC8_MASK                                0x40
#define _RCSTA1_nRC8_POSN                                   0x6
#define _RCSTA1_nRC8_POSITION                               0x6
#define _RCSTA1_nRC8_SIZE                                   0x1
#define _RCSTA1_nRC8_LENGTH                                 0x1
#define _RCSTA1_nRC8_MASK                                   0x40
#define _RCSTA1_RC8_9_POSN                                  0x6
#define _RCSTA1_RC8_9_POSITION                              0x6
#define _RCSTA1_RC8_9_SIZE                                  0x1
#define _RCSTA1_RC8_9_LENGTH                                0x1
#define _RCSTA1_RC8_9_MASK                                  0x40
#define _RCSTA1_RX9D1_POSN                                  0x0
#define _RCSTA1_RX9D1_POSITION                              0x0
#define _RCSTA1_RX9D1_SIZE                                  0x1
#define _RCSTA1_RX9D1_LENGTH                                0x1
#define _RCSTA1_RX9D1_MASK                                  0x1
#define _RCSTA1_OERR1_POSN                                  0x1
#define _RCSTA1_OERR1_POSITION                              0x1
#define _RCSTA1_OERR1_SIZE                                  0x1
#define _RCSTA1_OERR1_LENGTH                                0x1
#define _RCSTA1_OERR1_MASK                                  0x2
#define _RCSTA1_FERR1_POSN                                  0x2
#define _RCSTA1_FERR1_POSITION                              0x2
#define _RCSTA1_FERR1_SIZE                                  0x1
#define _RCSTA1_FERR1_LENGTH                                0x1
#define _RCSTA1_FERR1_MASK                                  0x4
#define _RCSTA1_ADDEN1_POSN                                 0x3
#define _RCSTA1_ADDEN1_POSITION                             0x3
#define _RCSTA1_ADDEN1_SIZE                                 0x1
#define _RCSTA1_ADDEN1_LENGTH                               0x1
#define _RCSTA1_ADDEN1_MASK                                 0x8
#define _RCSTA1_CREN1_POSN                                  0x4
#define _RCSTA1_CREN1_POSITION                              0x4
#define _RCSTA1_CREN1_SIZE                                  0x1
#define _RCSTA1_CREN1_LENGTH                                0x1
#define _RCSTA1_CREN1_MASK                                  0x10
#define _RCSTA1_SREN1_POSN                                  0x5
#define _RCSTA1_SREN1_POSITION                              0x5
#define _RCSTA1_SREN1_SIZE                                  0x1
#define _RCSTA1_SREN1_LENGTH                                0x1
#define _RCSTA1_SREN1_MASK                                  0x20
#define _RCSTA1_RX91_POSN                                   0x6
#define _RCSTA1_RX91_POSITION                               0x6
#define _RCSTA1_RX91_SIZE                                   0x1
#define _RCSTA1_RX91_LENGTH                                 0x1
#define _RCSTA1_RX91_MASK                                   0x40
#define _RCSTA1_SPEN1_POSN                                  0x7
#define _RCSTA1_SPEN1_POSITION                              0x7
#define _RCSTA1_SPEN1_SIZE                                  0x1
#define _RCSTA1_SPEN1_LENGTH                                0x1
#define _RCSTA1_SPEN1_MASK                                  0x80
#define _RCSTA1_SRENA_POSN                                  0x5
#define _RCSTA1_SRENA_POSITION                              0x5
#define _RCSTA1_SRENA_SIZE                                  0x1
#define _RCSTA1_SRENA_LENGTH                                0x1
#define _RCSTA1_SRENA_MASK                                  0x20
// alias bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
    struct {
        unsigned RCD8                   :1;
        unsigned                        :2;
        unsigned ADEN                   :1;
        unsigned                        :2;
        unsigned RC9                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_RC8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nRC8                   :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC8_9                  :1;
    };
    struct {
        unsigned RX9D1                  :1;
        unsigned OERR1                  :1;
        unsigned FERR1                  :1;
        unsigned ADDEN1                 :1;
        unsigned CREN1                  :1;
        unsigned SREN1                  :1;
        unsigned RX91                   :1;
        unsigned SPEN1                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned SRENA                  :1;
    };
} RCSTAbits_t;
extern volatile RCSTAbits_t RCSTAbits __at(0xFAB);
// bitfield macros
#define _RCSTA_RX9D_POSN                                    0x0
#define _RCSTA_RX9D_POSITION                                0x0
#define _RCSTA_RX9D_SIZE                                    0x1
#define _RCSTA_RX9D_LENGTH                                  0x1
#define _RCSTA_RX9D_MASK                                    0x1
#define _RCSTA_OERR_POSN                                    0x1
#define _RCSTA_OERR_POSITION                                0x1
#define _RCSTA_OERR_SIZE                                    0x1
#define _RCSTA_OERR_LENGTH                                  0x1
#define _RCSTA_OERR_MASK                                    0x2
#define _RCSTA_FERR_POSN                                    0x2
#define _RCSTA_FERR_POSITION                                0x2
#define _RCSTA_FERR_SIZE                                    0x1
#define _RCSTA_FERR_LENGTH                                  0x1
#define _RCSTA_FERR_MASK                                    0x4
#define _RCSTA_ADDEN_POSN                                   0x3
#define _RCSTA_ADDEN_POSITION                               0x3
#define _RCSTA_ADDEN_SIZE                                   0x1
#define _RCSTA_ADDEN_LENGTH                                 0x1
#define _RCSTA_ADDEN_MASK                                   0x8
#define _RCSTA_CREN_POSN                                    0x4
#define _RCSTA_CREN_POSITION                                0x4
#define _RCSTA_CREN_SIZE                                    0x1
#define _RCSTA_CREN_LENGTH                                  0x1
#define _RCSTA_CREN_MASK                                    0x10
#define _RCSTA_SREN_POSN                                    0x5
#define _RCSTA_SREN_POSITION                                0x5
#define _RCSTA_SREN_SIZE                                    0x1
#define _RCSTA_SREN_LENGTH                                  0x1
#define _RCSTA_SREN_MASK                                    0x20
#define _RCSTA_RX9_POSN                                     0x6
#define _RCSTA_RX9_POSITION                                 0x6
#define _RCSTA_RX9_SIZE                                     0x1
#define _RCSTA_RX9_LENGTH                                   0x1
#define _RCSTA_RX9_MASK                                     0x40
#define _RCSTA_SPEN_POSN                                    0x7
#define _RCSTA_SPEN_POSITION                                0x7
#define _RCSTA_SPEN_SIZE                                    0x1
#define _RCSTA_SPEN_LENGTH                                  0x1
#define _RCSTA_SPEN_MASK                                    0x80
#define _RCSTA_RCD8_POSN                                    0x0
#define _RCSTA_RCD8_POSITION                                0x0
#define _RCSTA_RCD8_SIZE                                    0x1
#define _RCSTA_RCD8_LENGTH                                  0x1
#define _RCSTA_RCD8_MASK                                    0x1
#define _RCSTA_ADEN_POSN                                    0x3
#define _RCSTA_ADEN_POSITION                                0x3
#define _RCSTA_ADEN_SIZE                                    0x1
#define _RCSTA_ADEN_LENGTH                                  0x1
#define _RCSTA_ADEN_MASK                                    0x8
#define _RCSTA_RC9_POSN                                     0x6
#define _RCSTA_RC9_POSITION                                 0x6
#define _RCSTA_RC9_SIZE                                     0x1
#define _RCSTA_RC9_LENGTH                                   0x1
#define _RCSTA_RC9_MASK                                     0x40
#define _RCSTA_NOT_RC8_POSN                                 0x6
#define _RCSTA_NOT_RC8_POSITION                             0x6
#define _RCSTA_NOT_RC8_SIZE                                 0x1
#define _RCSTA_NOT_RC8_LENGTH                               0x1
#define _RCSTA_NOT_RC8_MASK                                 0x40
#define _RCSTA_nRC8_POSN                                    0x6
#define _RCSTA_nRC8_POSITION                                0x6
#define _RCSTA_nRC8_SIZE                                    0x1
#define _RCSTA_nRC8_LENGTH                                  0x1
#define _RCSTA_nRC8_MASK                                    0x40
#define _RCSTA_RC8_9_POSN                                   0x6
#define _RCSTA_RC8_9_POSITION                               0x6
#define _RCSTA_RC8_9_SIZE                                   0x1
#define _RCSTA_RC8_9_LENGTH                                 0x1
#define _RCSTA_RC8_9_MASK                                   0x40
#define _RCSTA_RX9D1_POSN                                   0x0
#define _RCSTA_RX9D1_POSITION                               0x0
#define _RCSTA_RX9D1_SIZE                                   0x1
#define _RCSTA_RX9D1_LENGTH                                 0x1
#define _RCSTA_RX9D1_MASK                                   0x1
#define _RCSTA_OERR1_POSN                                   0x1
#define _RCSTA_OERR1_POSITION                               0x1
#define _RCSTA_OERR1_SIZE                                   0x1
#define _RCSTA_OERR1_LENGTH                                 0x1
#define _RCSTA_OERR1_MASK                                   0x2
#define _RCSTA_FERR1_POSN                                   0x2
#define _RCSTA_FERR1_POSITION                               0x2
#define _RCSTA_FERR1_SIZE                                   0x1
#define _RCSTA_FERR1_LENGTH                                 0x1
#define _RCSTA_FERR1_MASK                                   0x4
#define _RCSTA_ADDEN1_POSN                                  0x3
#define _RCSTA_ADDEN1_POSITION                              0x3
#define _RCSTA_ADDEN1_SIZE                                  0x1
#define _RCSTA_ADDEN1_LENGTH                                0x1
#define _RCSTA_ADDEN1_MASK                                  0x8
#define _RCSTA_CREN1_POSN                                   0x4
#define _RCSTA_CREN1_POSITION                               0x4
#define _RCSTA_CREN1_SIZE                                   0x1
#define _RCSTA_CREN1_LENGTH                                 0x1
#define _RCSTA_CREN1_MASK                                   0x10
#define _RCSTA_SREN1_POSN                                   0x5
#define _RCSTA_SREN1_POSITION                               0x5
#define _RCSTA_SREN1_SIZE                                   0x1
#define _RCSTA_SREN1_LENGTH                                 0x1
#define _RCSTA_SREN1_MASK                                   0x20
#define _RCSTA_RX91_POSN                                    0x6
#define _RCSTA_RX91_POSITION                                0x6
#define _RCSTA_RX91_SIZE                                    0x1
#define _RCSTA_RX91_LENGTH                                  0x1
#define _RCSTA_RX91_MASK                                    0x40
#define _RCSTA_SPEN1_POSN                                   0x7
#define _RCSTA_SPEN1_POSITION                               0x7
#define _RCSTA_SPEN1_SIZE                                   0x1
#define _RCSTA_SPEN1_LENGTH                                 0x1
#define _RCSTA_SPEN1_MASK                                   0x80
#define _RCSTA_SRENA_POSN                                   0x5
#define _RCSTA_SRENA_POSITION                               0x5
#define _RCSTA_SRENA_SIZE                                   0x1
#define _RCSTA_SRENA_LENGTH                                 0x1
#define _RCSTA_SRENA_MASK                                   0x20

// Register: TXSTA1
#define TXSTA1 TXSTA1
extern volatile unsigned char           TXSTA1              __at(0xFAC);
#ifndef _LIB_BUILD
asm("TXSTA1 equ 0FACh");
#endif
// aliases
extern volatile unsigned char           TXSTA               __at(0xFAC);
#ifndef _LIB_BUILD
asm("TXSTA equ 0FACh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
    struct {
        unsigned TXD8                   :1;
        unsigned                        :5;
        unsigned TX8_9                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_TX8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nTX8                   :1;
    };
    struct {
        unsigned TX9D1                  :1;
        unsigned TRMT1                  :1;
        unsigned BRGH1                  :1;
        unsigned SENDB1                 :1;
        unsigned SYNC1                  :1;
        unsigned TXEN1                  :1;
        unsigned TX91                   :1;
        unsigned CSRC1                  :1;
    };
} TXSTA1bits_t;
extern volatile TXSTA1bits_t TXSTA1bits __at(0xFAC);
// bitfield macros
#define _TXSTA1_TX9D_POSN                                   0x0
#define _TXSTA1_TX9D_POSITION                               0x0
#define _TXSTA1_TX9D_SIZE                                   0x1
#define _TXSTA1_TX9D_LENGTH                                 0x1
#define _TXSTA1_TX9D_MASK                                   0x1
#define _TXSTA1_TRMT_POSN                                   0x1
#define _TXSTA1_TRMT_POSITION                               0x1
#define _TXSTA1_TRMT_SIZE                                   0x1
#define _TXSTA1_TRMT_LENGTH                                 0x1
#define _TXSTA1_TRMT_MASK                                   0x2
#define _TXSTA1_BRGH_POSN                                   0x2
#define _TXSTA1_BRGH_POSITION                               0x2
#define _TXSTA1_BRGH_SIZE                                   0x1
#define _TXSTA1_BRGH_LENGTH                                 0x1
#define _TXSTA1_BRGH_MASK                                   0x4
#define _TXSTA1_SENDB_POSN                                  0x3
#define _TXSTA1_SENDB_POSITION                              0x3
#define _TXSTA1_SENDB_SIZE                                  0x1
#define _TXSTA1_SENDB_LENGTH                                0x1
#define _TXSTA1_SENDB_MASK                                  0x8
#define _TXSTA1_SYNC_POSN                                   0x4
#define _TXSTA1_SYNC_POSITION                               0x4
#define _TXSTA1_SYNC_SIZE                                   0x1
#define _TXSTA1_SYNC_LENGTH                                 0x1
#define _TXSTA1_SYNC_MASK                                   0x10
#define _TXSTA1_TXEN_POSN                                   0x5
#define _TXSTA1_TXEN_POSITION                               0x5
#define _TXSTA1_TXEN_SIZE                                   0x1
#define _TXSTA1_TXEN_LENGTH                                 0x1
#define _TXSTA1_TXEN_MASK                                   0x20
#define _TXSTA1_TX9_POSN                                    0x6
#define _TXSTA1_TX9_POSITION                                0x6
#define _TXSTA1_TX9_SIZE                                    0x1
#define _TXSTA1_TX9_LENGTH                                  0x1
#define _TXSTA1_TX9_MASK                                    0x40
#define _TXSTA1_CSRC_POSN                                   0x7
#define _TXSTA1_CSRC_POSITION                               0x7
#define _TXSTA1_CSRC_SIZE                                   0x1
#define _TXSTA1_CSRC_LENGTH                                 0x1
#define _TXSTA1_CSRC_MASK                                   0x80
#define _TXSTA1_TXD8_POSN                                   0x0
#define _TXSTA1_TXD8_POSITION                               0x0
#define _TXSTA1_TXD8_SIZE                                   0x1
#define _TXSTA1_TXD8_LENGTH                                 0x1
#define _TXSTA1_TXD8_MASK                                   0x1
#define _TXSTA1_TX8_9_POSN                                  0x6
#define _TXSTA1_TX8_9_POSITION                              0x6
#define _TXSTA1_TX8_9_SIZE                                  0x1
#define _TXSTA1_TX8_9_LENGTH                                0x1
#define _TXSTA1_TX8_9_MASK                                  0x40
#define _TXSTA1_NOT_TX8_POSN                                0x6
#define _TXSTA1_NOT_TX8_POSITION                            0x6
#define _TXSTA1_NOT_TX8_SIZE                                0x1
#define _TXSTA1_NOT_TX8_LENGTH                              0x1
#define _TXSTA1_NOT_TX8_MASK                                0x40
#define _TXSTA1_nTX8_POSN                                   0x6
#define _TXSTA1_nTX8_POSITION                               0x6
#define _TXSTA1_nTX8_SIZE                                   0x1
#define _TXSTA1_nTX8_LENGTH                                 0x1
#define _TXSTA1_nTX8_MASK                                   0x40
#define _TXSTA1_TX9D1_POSN                                  0x0
#define _TXSTA1_TX9D1_POSITION                              0x0
#define _TXSTA1_TX9D1_SIZE                                  0x1
#define _TXSTA1_TX9D1_LENGTH                                0x1
#define _TXSTA1_TX9D1_MASK                                  0x1
#define _TXSTA1_TRMT1_POSN                                  0x1
#define _TXSTA1_TRMT1_POSITION                              0x1
#define _TXSTA1_TRMT1_SIZE                                  0x1
#define _TXSTA1_TRMT1_LENGTH                                0x1
#define _TXSTA1_TRMT1_MASK                                  0x2
#define _TXSTA1_BRGH1_POSN                                  0x2
#define _TXSTA1_BRGH1_POSITION                              0x2
#define _TXSTA1_BRGH1_SIZE                                  0x1
#define _TXSTA1_BRGH1_LENGTH                                0x1
#define _TXSTA1_BRGH1_MASK                                  0x4
#define _TXSTA1_SENDB1_POSN                                 0x3
#define _TXSTA1_SENDB1_POSITION                             0x3
#define _TXSTA1_SENDB1_SIZE                                 0x1
#define _TXSTA1_SENDB1_LENGTH                               0x1
#define _TXSTA1_SENDB1_MASK                                 0x8
#define _TXSTA1_SYNC1_POSN                                  0x4
#define _TXSTA1_SYNC1_POSITION                              0x4
#define _TXSTA1_SYNC1_SIZE                                  0x1
#define _TXSTA1_SYNC1_LENGTH                                0x1
#define _TXSTA1_SYNC1_MASK                                  0x10
#define _TXSTA1_TXEN1_POSN                                  0x5
#define _TXSTA1_TXEN1_POSITION                              0x5
#define _TXSTA1_TXEN1_SIZE                                  0x1
#define _TXSTA1_TXEN1_LENGTH                                0x1
#define _TXSTA1_TXEN1_MASK                                  0x20
#define _TXSTA1_TX91_POSN                                   0x6
#define _TXSTA1_TX91_POSITION                               0x6
#define _TXSTA1_TX91_SIZE                                   0x1
#define _TXSTA1_TX91_LENGTH                                 0x1
#define _TXSTA1_TX91_MASK                                   0x40
#define _TXSTA1_CSRC1_POSN                                  0x7
#define _TXSTA1_CSRC1_POSITION                              0x7
#define _TXSTA1_CSRC1_SIZE                                  0x1
#define _TXSTA1_CSRC1_LENGTH                                0x1
#define _TXSTA1_CSRC1_MASK                                  0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
    struct {
        unsigned TXD8                   :1;
        unsigned                        :5;
        unsigned TX8_9                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_TX8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nTX8                   :1;
    };
    struct {
        unsigned TX9D1                  :1;
        unsigned TRMT1                  :1;
        unsigned BRGH1                  :1;
        unsigned SENDB1                 :1;
        unsigned SYNC1                  :1;
        unsigned TXEN1                  :1;
        unsigned TX91                   :1;
        unsigned CSRC1                  :1;
    };
} TXSTAbits_t;
extern volatile TXSTAbits_t TXSTAbits __at(0xFAC);
// bitfield macros
#define _TXSTA_TX9D_POSN                                    0x0
#define _TXSTA_TX9D_POSITION                                0x0
#define _TXSTA_TX9D_SIZE                                    0x1
#define _TXSTA_TX9D_LENGTH                                  0x1
#define _TXSTA_TX9D_MASK                                    0x1
#define _TXSTA_TRMT_POSN                                    0x1
#define _TXSTA_TRMT_POSITION                                0x1
#define _TXSTA_TRMT_SIZE                                    0x1
#define _TXSTA_TRMT_LENGTH                                  0x1
#define _TXSTA_TRMT_MASK                                    0x2
#define _TXSTA_BRGH_POSN                                    0x2
#define _TXSTA_BRGH_POSITION                                0x2
#define _TXSTA_BRGH_SIZE                                    0x1
#define _TXSTA_BRGH_LENGTH                                  0x1
#define _TXSTA_BRGH_MASK                                    0x4
#define _TXSTA_SENDB_POSN                                   0x3
#define _TXSTA_SENDB_POSITION                               0x3
#define _TXSTA_SENDB_SIZE                                   0x1
#define _TXSTA_SENDB_LENGTH                                 0x1
#define _TXSTA_SENDB_MASK                                   0x8
#define _TXSTA_SYNC_POSN                                    0x4
#define _TXSTA_SYNC_POSITION                                0x4
#define _TXSTA_SYNC_SIZE                                    0x1
#define _TXSTA_SYNC_LENGTH                                  0x1
#define _TXSTA_SYNC_MASK                                    0x10
#define _TXSTA_TXEN_POSN                                    0x5
#define _TXSTA_TXEN_POSITION                                0x5
#define _TXSTA_TXEN_SIZE                                    0x1
#define _TXSTA_TXEN_LENGTH                                  0x1
#define _TXSTA_TXEN_MASK                                    0x20
#define _TXSTA_TX9_POSN                                     0x6
#define _TXSTA_TX9_POSITION                                 0x6
#define _TXSTA_TX9_SIZE                                     0x1
#define _TXSTA_TX9_LENGTH                                   0x1
#define _TXSTA_TX9_MASK                                     0x40
#define _TXSTA_CSRC_POSN                                    0x7
#define _TXSTA_CSRC_POSITION                                0x7
#define _TXSTA_CSRC_SIZE                                    0x1
#define _TXSTA_CSRC_LENGTH                                  0x1
#define _TXSTA_CSRC_MASK                                    0x80
#define _TXSTA_TXD8_POSN                                    0x0
#define _TXSTA_TXD8_POSITION                                0x0
#define _TXSTA_TXD8_SIZE                                    0x1
#define _TXSTA_TXD8_LENGTH                                  0x1
#define _TXSTA_TXD8_MASK                                    0x1
#define _TXSTA_TX8_9_POSN                                   0x6
#define _TXSTA_TX8_9_POSITION                               0x6
#define _TXSTA_TX8_9_SIZE                                   0x1
#define _TXSTA_TX8_9_LENGTH                                 0x1
#define _TXSTA_TX8_9_MASK                                   0x40
#define _TXSTA_NOT_TX8_POSN                                 0x6
#define _TXSTA_NOT_TX8_POSITION                             0x6
#define _TXSTA_NOT_TX8_SIZE                                 0x1
#define _TXSTA_NOT_TX8_LENGTH                               0x1
#define _TXSTA_NOT_TX8_MASK                                 0x40
#define _TXSTA_nTX8_POSN                                    0x6
#define _TXSTA_nTX8_POSITION                                0x6
#define _TXSTA_nTX8_SIZE                                    0x1
#define _TXSTA_nTX8_LENGTH                                  0x1
#define _TXSTA_nTX8_MASK                                    0x40
#define _TXSTA_TX9D1_POSN                                   0x0
#define _TXSTA_TX9D1_POSITION                               0x0
#define _TXSTA_TX9D1_SIZE                                   0x1
#define _TXSTA_TX9D1_LENGTH                                 0x1
#define _TXSTA_TX9D1_MASK                                   0x1
#define _TXSTA_TRMT1_POSN                                   0x1
#define _TXSTA_TRMT1_POSITION                               0x1
#define _TXSTA_TRMT1_SIZE                                   0x1
#define _TXSTA_TRMT1_LENGTH                                 0x1
#define _TXSTA_TRMT1_MASK                                   0x2
#define _TXSTA_BRGH1_POSN                                   0x2
#define _TXSTA_BRGH1_POSITION                               0x2
#define _TXSTA_BRGH1_SIZE                                   0x1
#define _TXSTA_BRGH1_LENGTH                                 0x1
#define _TXSTA_BRGH1_MASK                                   0x4
#define _TXSTA_SENDB1_POSN                                  0x3
#define _TXSTA_SENDB1_POSITION                              0x3
#define _TXSTA_SENDB1_SIZE                                  0x1
#define _TXSTA_SENDB1_LENGTH                                0x1
#define _TXSTA_SENDB1_MASK                                  0x8
#define _TXSTA_SYNC1_POSN                                   0x4
#define _TXSTA_SYNC1_POSITION                               0x4
#define _TXSTA_SYNC1_SIZE                                   0x1
#define _TXSTA_SYNC1_LENGTH                                 0x1
#define _TXSTA_SYNC1_MASK                                   0x10
#define _TXSTA_TXEN1_POSN                                   0x5
#define _TXSTA_TXEN1_POSITION                               0x5
#define _TXSTA_TXEN1_SIZE                                   0x1
#define _TXSTA_TXEN1_LENGTH                                 0x1
#define _TXSTA_TXEN1_MASK                                   0x20
#define _TXSTA_TX91_POSN                                    0x6
#define _TXSTA_TX91_POSITION                                0x6
#define _TXSTA_TX91_SIZE                                    0x1
#define _TXSTA_TX91_LENGTH                                  0x1
#define _TXSTA_TX91_MASK                                    0x40
#define _TXSTA_CSRC1_POSN                                   0x7
#define _TXSTA_CSRC1_POSITION                               0x7
#define _TXSTA_CSRC1_SIZE                                   0x1
#define _TXSTA_CSRC1_LENGTH                                 0x1
#define _TXSTA_CSRC1_MASK                                   0x80

// Register: TXREG1
#define TXREG1 TXREG1
extern volatile unsigned char           TXREG1              __at(0xFAD);
#ifndef _LIB_BUILD
asm("TXREG1 equ 0FADh");
#endif
// aliases
extern volatile unsigned char           TXREG               __at(0xFAD);
#ifndef _LIB_BUILD
asm("TXREG equ 0FADh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXREG1                 :8;
    };
} TXREG1bits_t;
extern volatile TXREG1bits_t TXREG1bits __at(0xFAD);
// bitfield macros
#define _TXREG1_TXREG1_POSN                                 0x0
#define _TXREG1_TXREG1_POSITION                             0x0
#define _TXREG1_TXREG1_SIZE                                 0x8
#define _TXREG1_TXREG1_LENGTH                               0x8
#define _TXREG1_TXREG1_MASK                                 0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned TXREG1                 :8;
    };
} TXREGbits_t;
extern volatile TXREGbits_t TXREGbits __at(0xFAD);
// bitfield macros
#define _TXREG_TXREG1_POSN                                  0x0
#define _TXREG_TXREG1_POSITION                              0x0
#define _TXREG_TXREG1_SIZE                                  0x8
#define _TXREG_TXREG1_LENGTH                                0x8
#define _TXREG_TXREG1_MASK                                  0xFF

// Register: RCREG1
#define RCREG1 RCREG1
extern volatile unsigned char           RCREG1              __at(0xFAE);
#ifndef _LIB_BUILD
asm("RCREG1 equ 0FAEh");
#endif
// aliases
extern volatile unsigned char           RCREG               __at(0xFAE);
#ifndef _LIB_BUILD
asm("RCREG equ 0FAEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RCREG1                 :8;
    };
} RCREG1bits_t;
extern volatile RCREG1bits_t RCREG1bits __at(0xFAE);
// bitfield macros
#define _RCREG1_RCREG1_POSN                                 0x0
#define _RCREG1_RCREG1_POSITION                             0x0
#define _RCREG1_RCREG1_SIZE                                 0x8
#define _RCREG1_RCREG1_LENGTH                               0x8
#define _RCREG1_RCREG1_MASK                                 0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned RCREG1                 :8;
    };
} RCREGbits_t;
extern volatile RCREGbits_t RCREGbits __at(0xFAE);
// bitfield macros
#define _RCREG_RCREG1_POSN                                  0x0
#define _RCREG_RCREG1_POSITION                              0x0
#define _RCREG_RCREG1_SIZE                                  0x8
#define _RCREG_RCREG1_LENGTH                                0x8
#define _RCREG_RCREG1_MASK                                  0xFF

// Register: SPBRG1
#define SPBRG1 SPBRG1
extern volatile unsigned char           SPBRG1              __at(0xFAF);
#ifndef _LIB_BUILD
asm("SPBRG1 equ 0FAFh");
#endif
// aliases
extern volatile unsigned char           SPBRG               __at(0xFAF);
#ifndef _LIB_BUILD
asm("SPBRG equ 0FAFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SPBRG1                 :8;
    };
} SPBRG1bits_t;
extern volatile SPBRG1bits_t SPBRG1bits __at(0xFAF);
// bitfield macros
#define _SPBRG1_SPBRG1_POSN                                 0x0
#define _SPBRG1_SPBRG1_POSITION                             0x0
#define _SPBRG1_SPBRG1_SIZE                                 0x8
#define _SPBRG1_SPBRG1_LENGTH                               0x8
#define _SPBRG1_SPBRG1_MASK                                 0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SPBRG1                 :8;
    };
} SPBRGbits_t;
extern volatile SPBRGbits_t SPBRGbits __at(0xFAF);
// bitfield macros
#define _SPBRG_SPBRG1_POSN                                  0x0
#define _SPBRG_SPBRG1_POSITION                              0x0
#define _SPBRG_SPBRG1_SIZE                                  0x8
#define _SPBRG_SPBRG1_LENGTH                                0x8
#define _SPBRG_SPBRG1_MASK                                  0xFF

// Register: T3GCON
#define T3GCON T3GCON
extern volatile unsigned char           T3GCON              __at(0xFB0);
#ifndef _LIB_BUILD
asm("T3GCON equ 0FB0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :3;
        unsigned T3GGO_NOT_T3DONE       :1;
    };
    struct {
        unsigned T3GSS                  :2;
        unsigned T3GVAL                 :1;
        unsigned T3GGO_nT3DONE          :1;
        unsigned T3GSPM                 :1;
        unsigned T3GTM                  :1;
        unsigned T3GPOL                 :1;
        unsigned TMR3GE                 :1;
    };
    struct {
        unsigned T3GSS0                 :1;
        unsigned T3GSS1                 :1;
        unsigned                        :1;
        unsigned T3GGO                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned NOT_T3DONE             :1;
    };
    struct {
        unsigned                        :3;
        unsigned nT3DONE                :1;
    };
} T3GCONbits_t;
extern volatile T3GCONbits_t T3GCONbits __at(0xFB0);
// bitfield macros
#define _T3GCON_T3GGO_NOT_T3DONE_POSN                       0x3
#define _T3GCON_T3GGO_NOT_T3DONE_POSITION                   0x3
#define _T3GCON_T3GGO_NOT_T3DONE_SIZE                       0x1
#define _T3GCON_T3GGO_NOT_T3DONE_LENGTH                     0x1
#define _T3GCON_T3GGO_NOT_T3DONE_MASK                       0x8
#define _T3GCON_T3GSS_POSN                                  0x0
#define _T3GCON_T3GSS_POSITION                              0x0
#define _T3GCON_T3GSS_SIZE                                  0x2
#define _T3GCON_T3GSS_LENGTH                                0x2
#define _T3GCON_T3GSS_MASK                                  0x3
#define _T3GCON_T3GVAL_POSN                                 0x2
#define _T3GCON_T3GVAL_POSITION                             0x2
#define _T3GCON_T3GVAL_SIZE                                 0x1
#define _T3GCON_T3GVAL_LENGTH                               0x1
#define _T3GCON_T3GVAL_MASK                                 0x4
#define _T3GCON_T3GGO_nT3DONE_POSN                          0x3
#define _T3GCON_T3GGO_nT3DONE_POSITION                      0x3
#define _T3GCON_T3GGO_nT3DONE_SIZE                          0x1
#define _T3GCON_T3GGO_nT3DONE_LENGTH                        0x1
#define _T3GCON_T3GGO_nT3DONE_MASK                          0x8
#define _T3GCON_T3GSPM_POSN                                 0x4
#define _T3GCON_T3GSPM_POSITION                             0x4
#define _T3GCON_T3GSPM_SIZE                                 0x1
#define _T3GCON_T3GSPM_LENGTH                               0x1
#define _T3GCON_T3GSPM_MASK                                 0x10
#define _T3GCON_T3GTM_POSN                                  0x5
#define _T3GCON_T3GTM_POSITION                              0x5
#define _T3GCON_T3GTM_SIZE                                  0x1
#define _T3GCON_T3GTM_LENGTH                                0x1
#define _T3GCON_T3GTM_MASK                                  0x20
#define _T3GCON_T3GPOL_POSN                                 0x6
#define _T3GCON_T3GPOL_POSITION                             0x6
#define _T3GCON_T3GPOL_SIZE                                 0x1
#define _T3GCON_T3GPOL_LENGTH                               0x1
#define _T3GCON_T3GPOL_MASK                                 0x40
#define _T3GCON_TMR3GE_POSN                                 0x7
#define _T3GCON_TMR3GE_POSITION                             0x7
#define _T3GCON_TMR3GE_SIZE                                 0x1
#define _T3GCON_TMR3GE_LENGTH                               0x1
#define _T3GCON_TMR3GE_MASK                                 0x80
#define _T3GCON_T3GSS0_POSN                                 0x0
#define _T3GCON_T3GSS0_POSITION                             0x0
#define _T3GCON_T3GSS0_SIZE                                 0x1
#define _T3GCON_T3GSS0_LENGTH                               0x1
#define _T3GCON_T3GSS0_MASK                                 0x1
#define _T3GCON_T3GSS1_POSN                                 0x1
#define _T3GCON_T3GSS1_POSITION                             0x1
#define _T3GCON_T3GSS1_SIZE                                 0x1
#define _T3GCON_T3GSS1_LENGTH                               0x1
#define _T3GCON_T3GSS1_MASK                                 0x2
#define _T3GCON_T3GGO_POSN                                  0x3
#define _T3GCON_T3GGO_POSITION                              0x3
#define _T3GCON_T3GGO_SIZE                                  0x1
#define _T3GCON_T3GGO_LENGTH                                0x1
#define _T3GCON_T3GGO_MASK                                  0x8
#define _T3GCON_NOT_T3DONE_POSN                             0x3
#define _T3GCON_NOT_T3DONE_POSITION                         0x3
#define _T3GCON_NOT_T3DONE_SIZE                             0x1
#define _T3GCON_NOT_T3DONE_LENGTH                           0x1
#define _T3GCON_NOT_T3DONE_MASK                             0x8
#define _T3GCON_nT3DONE_POSN                                0x3
#define _T3GCON_nT3DONE_POSITION                            0x3
#define _T3GCON_nT3DONE_SIZE                                0x1
#define _T3GCON_nT3DONE_LENGTH                              0x1
#define _T3GCON_nT3DONE_MASK                                0x8

// Register: T3CON
#define T3CON T3CON
extern volatile unsigned char           T3CON               __at(0xFB1);
#ifndef _LIB_BUILD
asm("T3CON equ 0FB1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned NOT_T3SYNC             :1;
    };
    struct {
        unsigned TMR3ON                 :1;
        unsigned RD16                   :1;
        unsigned nT3SYNC                :1;
        unsigned SOSCEN                 :1;
        unsigned T3CKPS0                :1;
        unsigned T3CKPS1                :1;
        unsigned TMR3CS0                :1;
        unsigned TMR3CS1                :1;
    };
    struct {
        unsigned                        :4;
        unsigned T3CKPS                 :2;
        unsigned TMR3CS                 :2;
    };
    struct {
        unsigned                        :3;
        unsigned SOSCEN3                :1;
        unsigned                        :3;
        unsigned RD163                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned T3RD16                 :1;
    };
} T3CONbits_t;
extern volatile T3CONbits_t T3CONbits __at(0xFB1);
// bitfield macros
#define _T3CON_NOT_T3SYNC_POSN                              0x2
#define _T3CON_NOT_T3SYNC_POSITION                          0x2
#define _T3CON_NOT_T3SYNC_SIZE                              0x1
#define _T3CON_NOT_T3SYNC_LENGTH                            0x1
#define _T3CON_NOT_T3SYNC_MASK                              0x4
#define _T3CON_TMR3ON_POSN                                  0x0
#define _T3CON_TMR3ON_POSITION                              0x0
#define _T3CON_TMR3ON_SIZE                                  0x1
#define _T3CON_TMR3ON_LENGTH                                0x1
#define _T3CON_TMR3ON_MASK                                  0x1
#define _T3CON_RD16_POSN                                    0x1
#define _T3CON_RD16_POSITION                                0x1
#define _T3CON_RD16_SIZE                                    0x1
#define _T3CON_RD16_LENGTH                                  0x1
#define _T3CON_RD16_MASK                                    0x2
#define _T3CON_nT3SYNC_POSN                                 0x2
#define _T3CON_nT3SYNC_POSITION                             0x2
#define _T3CON_nT3SYNC_SIZE                                 0x1
#define _T3CON_nT3SYNC_LENGTH                               0x1
#define _T3CON_nT3SYNC_MASK                                 0x4
#define _T3CON_SOSCEN_POSN                                  0x3
#define _T3CON_SOSCEN_POSITION                              0x3
#define _T3CON_SOSCEN_SIZE                                  0x1
#define _T3CON_SOSCEN_LENGTH                                0x1
#define _T3CON_SOSCEN_MASK                                  0x8
#define _T3CON_T3CKPS0_POSN                                 0x4
#define _T3CON_T3CKPS0_POSITION                             0x4
#define _T3CON_T3CKPS0_SIZE                                 0x1
#define _T3CON_T3CKPS0_LENGTH                               0x1
#define _T3CON_T3CKPS0_MASK                                 0x10
#define _T3CON_T3CKPS1_POSN                                 0x5
#define _T3CON_T3CKPS1_POSITION                             0x5
#define _T3CON_T3CKPS1_SIZE                                 0x1
#define _T3CON_T3CKPS1_LENGTH                               0x1
#define _T3CON_T3CKPS1_MASK                                 0x20
#define _T3CON_TMR3CS0_POSN                                 0x6
#define _T3CON_TMR3CS0_POSITION                             0x6
#define _T3CON_TMR3CS0_SIZE                                 0x1
#define _T3CON_TMR3CS0_LENGTH                               0x1
#define _T3CON_TMR3CS0_MASK                                 0x40
#define _T3CON_TMR3CS1_POSN                                 0x7
#define _T3CON_TMR3CS1_POSITION                             0x7
#define _T3CON_TMR3CS1_SIZE                                 0x1
#define _T3CON_TMR3CS1_LENGTH                               0x1
#define _T3CON_TMR3CS1_MASK                                 0x80
#define _T3CON_T3CKPS_POSN                                  0x4
#define _T3CON_T3CKPS_POSITION                              0x4
#define _T3CON_T3CKPS_SIZE                                  0x2
#define _T3CON_T3CKPS_LENGTH                                0x2
#define _T3CON_T3CKPS_MASK                                  0x30
#define _T3CON_TMR3CS_POSN                                  0x6
#define _T3CON_TMR3CS_POSITION                              0x6
#define _T3CON_TMR3CS_SIZE                                  0x2
#define _T3CON_TMR3CS_LENGTH                                0x2
#define _T3CON_TMR3CS_MASK                                  0xC0
#define _T3CON_SOSCEN3_POSN                                 0x3
#define _T3CON_SOSCEN3_POSITION                             0x3
#define _T3CON_SOSCEN3_SIZE                                 0x1
#define _T3CON_SOSCEN3_LENGTH                               0x1
#define _T3CON_SOSCEN3_MASK                                 0x8
#define _T3CON_RD163_POSN                                   0x7
#define _T3CON_RD163_POSITION                               0x7
#define _T3CON_RD163_SIZE                                   0x1
#define _T3CON_RD163_LENGTH                                 0x1
#define _T3CON_RD163_MASK                                   0x80
#define _T3CON_T3RD16_POSN                                  0x7
#define _T3CON_T3RD16_POSITION                              0x7
#define _T3CON_T3RD16_SIZE                                  0x1
#define _T3CON_T3RD16_LENGTH                                0x1
#define _T3CON_T3RD16_MASK                                  0x80

// Register: TMR3
#define TMR3 TMR3
extern volatile unsigned short          TMR3                __at(0xFB2);
#ifndef _LIB_BUILD
asm("TMR3 equ 0FB2h");
#endif

// Register: TMR3L
#define TMR3L TMR3L
extern volatile unsigned char           TMR3L               __at(0xFB2);
#ifndef _LIB_BUILD
asm("TMR3L equ 0FB2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR3L                  :8;
    };
} TMR3Lbits_t;
extern volatile TMR3Lbits_t TMR3Lbits __at(0xFB2);
// bitfield macros
#define _TMR3L_TMR3L_POSN                                   0x0
#define _TMR3L_TMR3L_POSITION                               0x0
#define _TMR3L_TMR3L_SIZE                                   0x8
#define _TMR3L_TMR3L_LENGTH                                 0x8
#define _TMR3L_TMR3L_MASK                                   0xFF

// Register: TMR3H
#define TMR3H TMR3H
extern volatile unsigned char           TMR3H               __at(0xFB3);
#ifndef _LIB_BUILD
asm("TMR3H equ 0FB3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR3H                  :8;
    };
} TMR3Hbits_t;
extern volatile TMR3Hbits_t TMR3Hbits __at(0xFB3);
// bitfield macros
#define _TMR3H_TMR3H_POSN                                   0x0
#define _TMR3H_TMR3H_POSITION                               0x0
#define _TMR3H_TMR3H_SIZE                                   0x8
#define _TMR3H_TMR3H_LENGTH                                 0x8
#define _TMR3H_TMR3H_MASK                                   0xFF

// Register: CMSTAT
#define CMSTAT CMSTAT
extern volatile unsigned char           CMSTAT              __at(0xFB4);
#ifndef _LIB_BUILD
asm("CMSTAT equ 0FB4h");
#endif
// aliases
extern volatile unsigned char           CMSTATUS            __at(0xFB4);
#ifndef _LIB_BUILD
asm("CMSTATUS equ 0FB4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :5;
        unsigned CMP1OUT                :1;
        unsigned CMP2OUT                :1;
        unsigned CMP3OUT                :1;
    };
    struct {
        unsigned                        :5;
        unsigned C1OUT                  :1;
        unsigned C2OUT                  :1;
        unsigned C3OUT                  :1;
    };
} CMSTATbits_t;
extern volatile CMSTATbits_t CMSTATbits __at(0xFB4);
// bitfield macros
#define _CMSTAT_CMP1OUT_POSN                                0x5
#define _CMSTAT_CMP1OUT_POSITION                            0x5
#define _CMSTAT_CMP1OUT_SIZE                                0x1
#define _CMSTAT_CMP1OUT_LENGTH                              0x1
#define _CMSTAT_CMP1OUT_MASK                                0x20
#define _CMSTAT_CMP2OUT_POSN                                0x6
#define _CMSTAT_CMP2OUT_POSITION                            0x6
#define _CMSTAT_CMP2OUT_SIZE                                0x1
#define _CMSTAT_CMP2OUT_LENGTH                              0x1
#define _CMSTAT_CMP2OUT_MASK                                0x40
#define _CMSTAT_CMP3OUT_POSN                                0x7
#define _CMSTAT_CMP3OUT_POSITION                            0x7
#define _CMSTAT_CMP3OUT_SIZE                                0x1
#define _CMSTAT_CMP3OUT_LENGTH                              0x1
#define _CMSTAT_CMP3OUT_MASK                                0x80
#define _CMSTAT_C1OUT_POSN                                  0x5
#define _CMSTAT_C1OUT_POSITION                              0x5
#define _CMSTAT_C1OUT_SIZE                                  0x1
#define _CMSTAT_C1OUT_LENGTH                                0x1
#define _CMSTAT_C1OUT_MASK                                  0x20
#define _CMSTAT_C2OUT_POSN                                  0x6
#define _CMSTAT_C2OUT_POSITION                              0x6
#define _CMSTAT_C2OUT_SIZE                                  0x1
#define _CMSTAT_C2OUT_LENGTH                                0x1
#define _CMSTAT_C2OUT_MASK                                  0x40
#define _CMSTAT_C3OUT_POSN                                  0x7
#define _CMSTAT_C3OUT_POSITION                              0x7
#define _CMSTAT_C3OUT_SIZE                                  0x1
#define _CMSTAT_C3OUT_LENGTH                                0x1
#define _CMSTAT_C3OUT_MASK                                  0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned                        :5;
        unsigned CMP1OUT                :1;
        unsigned CMP2OUT                :1;
        unsigned CMP3OUT                :1;
    };
    struct {
        unsigned                        :5;
        unsigned C1OUT                  :1;
        unsigned C2OUT                  :1;
        unsigned C3OUT                  :1;
    };
} CMSTATUSbits_t;
extern volatile CMSTATUSbits_t CMSTATUSbits __at(0xFB4);
// bitfield macros
#define _CMSTATUS_CMP1OUT_POSN                              0x5
#define _CMSTATUS_CMP1OUT_POSITION                          0x5
#define _CMSTATUS_CMP1OUT_SIZE                              0x1
#define _CMSTATUS_CMP1OUT_LENGTH                            0x1
#define _CMSTATUS_CMP1OUT_MASK                              0x20
#define _CMSTATUS_CMP2OUT_POSN                              0x6
#define _CMSTATUS_CMP2OUT_POSITION                          0x6
#define _CMSTATUS_CMP2OUT_SIZE                              0x1
#define _CMSTATUS_CMP2OUT_LENGTH                            0x1
#define _CMSTATUS_CMP2OUT_MASK                              0x40
#define _CMSTATUS_CMP3OUT_POSN                              0x7
#define _CMSTATUS_CMP3OUT_POSITION                          0x7
#define _CMSTATUS_CMP3OUT_SIZE                              0x1
#define _CMSTATUS_CMP3OUT_LENGTH                            0x1
#define _CMSTATUS_CMP3OUT_MASK                              0x80
#define _CMSTATUS_C1OUT_POSN                                0x5
#define _CMSTATUS_C1OUT_POSITION                            0x5
#define _CMSTATUS_C1OUT_SIZE                                0x1
#define _CMSTATUS_C1OUT_LENGTH                              0x1
#define _CMSTATUS_C1OUT_MASK                                0x20
#define _CMSTATUS_C2OUT_POSN                                0x6
#define _CMSTATUS_C2OUT_POSITION                            0x6
#define _CMSTATUS_C2OUT_SIZE                                0x1
#define _CMSTATUS_C2OUT_LENGTH                              0x1
#define _CMSTATUS_C2OUT_MASK                                0x40
#define _CMSTATUS_C3OUT_POSN                                0x7
#define _CMSTATUS_C3OUT_POSITION                            0x7
#define _CMSTATUS_C3OUT_SIZE                                0x1
#define _CMSTATUS_C3OUT_LENGTH                              0x1
#define _CMSTATUS_C3OUT_MASK                                0x80

// Register: CVRCON
#define CVRCON CVRCON
extern volatile unsigned char           CVRCON              __at(0xFB5);
#ifndef _LIB_BUILD
asm("CVRCON equ 0FB5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CVR                    :5;
        unsigned CVRSS                  :1;
        unsigned CVROE                  :1;
        unsigned CVREN                  :1;
    };
    struct {
        unsigned CVR0                   :1;
        unsigned CVR1                   :1;
        unsigned CVR2                   :1;
        unsigned CVR3                   :1;
        unsigned CVR4                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned CVRR                   :1;
        unsigned CVROEN                 :1;
    };
} CVRCONbits_t;
extern volatile CVRCONbits_t CVRCONbits __at(0xFB5);
// bitfield macros
#define _CVRCON_CVR_POSN                                    0x0
#define _CVRCON_CVR_POSITION                                0x0
#define _CVRCON_CVR_SIZE                                    0x5
#define _CVRCON_CVR_LENGTH                                  0x5
#define _CVRCON_CVR_MASK                                    0x1F
#define _CVRCON_CVRSS_POSN                                  0x5
#define _CVRCON_CVRSS_POSITION                              0x5
#define _CVRCON_CVRSS_SIZE                                  0x1
#define _CVRCON_CVRSS_LENGTH                                0x1
#define _CVRCON_CVRSS_MASK                                  0x20
#define _CVRCON_CVROE_POSN                                  0x6
#define _CVRCON_CVROE_POSITION                              0x6
#define _CVRCON_CVROE_SIZE                                  0x1
#define _CVRCON_CVROE_LENGTH                                0x1
#define _CVRCON_CVROE_MASK                                  0x40
#define _CVRCON_CVREN_POSN                                  0x7
#define _CVRCON_CVREN_POSITION                              0x7
#define _CVRCON_CVREN_SIZE                                  0x1
#define _CVRCON_CVREN_LENGTH                                0x1
#define _CVRCON_CVREN_MASK                                  0x80
#define _CVRCON_CVR0_POSN                                   0x0
#define _CVRCON_CVR0_POSITION                               0x0
#define _CVRCON_CVR0_SIZE                                   0x1
#define _CVRCON_CVR0_LENGTH                                 0x1
#define _CVRCON_CVR0_MASK                                   0x1
#define _CVRCON_CVR1_POSN                                   0x1
#define _CVRCON_CVR1_POSITION                               0x1
#define _CVRCON_CVR1_SIZE                                   0x1
#define _CVRCON_CVR1_LENGTH                                 0x1
#define _CVRCON_CVR1_MASK                                   0x2
#define _CVRCON_CVR2_POSN                                   0x2
#define _CVRCON_CVR2_POSITION                               0x2
#define _CVRCON_CVR2_SIZE                                   0x1
#define _CVRCON_CVR2_LENGTH                                 0x1
#define _CVRCON_CVR2_MASK                                   0x4
#define _CVRCON_CVR3_POSN                                   0x3
#define _CVRCON_CVR3_POSITION                               0x3
#define _CVRCON_CVR3_SIZE                                   0x1
#define _CVRCON_CVR3_LENGTH                                 0x1
#define _CVRCON_CVR3_MASK                                   0x8
#define _CVRCON_CVR4_POSN                                   0x4
#define _CVRCON_CVR4_POSITION                               0x4
#define _CVRCON_CVR4_SIZE                                   0x1
#define _CVRCON_CVR4_LENGTH                                 0x1
#define _CVRCON_CVR4_MASK                                   0x10
#define _CVRCON_CVRR_POSN                                   0x5
#define _CVRCON_CVRR_POSITION                               0x5
#define _CVRCON_CVRR_SIZE                                   0x1
#define _CVRCON_CVRR_LENGTH                                 0x1
#define _CVRCON_CVRR_MASK                                   0x20
#define _CVRCON_CVROEN_POSN                                 0x6
#define _CVRCON_CVROEN_POSITION                             0x6
#define _CVRCON_CVROEN_SIZE                                 0x1
#define _CVRCON_CVROEN_LENGTH                               0x1
#define _CVRCON_CVROEN_MASK                                 0x40

// Register: PIE4
#define PIE4 PIE4
extern volatile unsigned char           PIE4                __at(0xFB6);
#ifndef _LIB_BUILD
asm("PIE4 equ 0FB6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3IE                 :1;
        unsigned CCP4IE                 :1;
        unsigned CCP5IE                 :1;
        unsigned CCP6IE                 :1;
        unsigned CCP7IE                 :1;
        unsigned CCP8IE                 :1;
    };
} PIE4bits_t;
extern volatile PIE4bits_t PIE4bits __at(0xFB6);
// bitfield macros
#define _PIE4_CCP3IE_POSN                                   0x0
#define _PIE4_CCP3IE_POSITION                               0x0
#define _PIE4_CCP3IE_SIZE                                   0x1
#define _PIE4_CCP3IE_LENGTH                                 0x1
#define _PIE4_CCP3IE_MASK                                   0x1
#define _PIE4_CCP4IE_POSN                                   0x1
#define _PIE4_CCP4IE_POSITION                               0x1
#define _PIE4_CCP4IE_SIZE                                   0x1
#define _PIE4_CCP4IE_LENGTH                                 0x1
#define _PIE4_CCP4IE_MASK                                   0x2
#define _PIE4_CCP5IE_POSN                                   0x2
#define _PIE4_CCP5IE_POSITION                               0x2
#define _PIE4_CCP5IE_SIZE                                   0x1
#define _PIE4_CCP5IE_LENGTH                                 0x1
#define _PIE4_CCP5IE_MASK                                   0x4
#define _PIE4_CCP6IE_POSN                                   0x3
#define _PIE4_CCP6IE_POSITION                               0x3
#define _PIE4_CCP6IE_SIZE                                   0x1
#define _PIE4_CCP6IE_LENGTH                                 0x1
#define _PIE4_CCP6IE_MASK                                   0x8
#define _PIE4_CCP7IE_POSN                                   0x4
#define _PIE4_CCP7IE_POSITION                               0x4
#define _PIE4_CCP7IE_SIZE                                   0x1
#define _PIE4_CCP7IE_LENGTH                                 0x1
#define _PIE4_CCP7IE_MASK                                   0x10
#define _PIE4_CCP8IE_POSN                                   0x5
#define _PIE4_CCP8IE_POSITION                               0x5
#define _PIE4_CCP8IE_SIZE                                   0x1
#define _PIE4_CCP8IE_LENGTH                                 0x1
#define _PIE4_CCP8IE_MASK                                   0x20

// Register: PIR4
#define PIR4 PIR4
extern volatile unsigned char           PIR4                __at(0xFB7);
#ifndef _LIB_BUILD
asm("PIR4 equ 0FB7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3IF                 :1;
        unsigned CCP4IF                 :1;
        unsigned CCP5IF                 :1;
        unsigned CCP6IF                 :1;
        unsigned CCP7IF                 :1;
        unsigned CCP8IF                 :1;
    };
} PIR4bits_t;
extern volatile PIR4bits_t PIR4bits __at(0xFB7);
// bitfield macros
#define _PIR4_CCP3IF_POSN                                   0x0
#define _PIR4_CCP3IF_POSITION                               0x0
#define _PIR4_CCP3IF_SIZE                                   0x1
#define _PIR4_CCP3IF_LENGTH                                 0x1
#define _PIR4_CCP3IF_MASK                                   0x1
#define _PIR4_CCP4IF_POSN                                   0x1
#define _PIR4_CCP4IF_POSITION                               0x1
#define _PIR4_CCP4IF_SIZE                                   0x1
#define _PIR4_CCP4IF_LENGTH                                 0x1
#define _PIR4_CCP4IF_MASK                                   0x2
#define _PIR4_CCP5IF_POSN                                   0x2
#define _PIR4_CCP5IF_POSITION                               0x2
#define _PIR4_CCP5IF_SIZE                                   0x1
#define _PIR4_CCP5IF_LENGTH                                 0x1
#define _PIR4_CCP5IF_MASK                                   0x4
#define _PIR4_CCP6IF_POSN                                   0x3
#define _PIR4_CCP6IF_POSITION                               0x3
#define _PIR4_CCP6IF_SIZE                                   0x1
#define _PIR4_CCP6IF_LENGTH                                 0x1
#define _PIR4_CCP6IF_MASK                                   0x8
#define _PIR4_CCP7IF_POSN                                   0x4
#define _PIR4_CCP7IF_POSITION                               0x4
#define _PIR4_CCP7IF_SIZE                                   0x1
#define _PIR4_CCP7IF_LENGTH                                 0x1
#define _PIR4_CCP7IF_MASK                                   0x10
#define _PIR4_CCP8IF_POSN                                   0x5
#define _PIR4_CCP8IF_POSITION                               0x5
#define _PIR4_CCP8IF_SIZE                                   0x1
#define _PIR4_CCP8IF_LENGTH                                 0x1
#define _PIR4_CCP8IF_MASK                                   0x20

// Register: IPR4
#define IPR4 IPR4
extern volatile unsigned char           IPR4                __at(0xFB8);
#ifndef _LIB_BUILD
asm("IPR4 equ 0FB8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3IP                 :1;
        unsigned CCP4IP                 :1;
        unsigned CCP5IP                 :1;
        unsigned CCP6IP                 :1;
        unsigned CCP7IP                 :1;
        unsigned CCP8IP                 :1;
    };
    struct {
        unsigned CCIP3IP                :1;
    };
} IPR4bits_t;
extern volatile IPR4bits_t IPR4bits __at(0xFB8);
// bitfield macros
#define _IPR4_CCP3IP_POSN                                   0x0
#define _IPR4_CCP3IP_POSITION                               0x0
#define _IPR4_CCP3IP_SIZE                                   0x1
#define _IPR4_CCP3IP_LENGTH                                 0x1
#define _IPR4_CCP3IP_MASK                                   0x1
#define _IPR4_CCP4IP_POSN                                   0x1
#define _IPR4_CCP4IP_POSITION                               0x1
#define _IPR4_CCP4IP_SIZE                                   0x1
#define _IPR4_CCP4IP_LENGTH                                 0x1
#define _IPR4_CCP4IP_MASK                                   0x2
#define _IPR4_CCP5IP_POSN                                   0x2
#define _IPR4_CCP5IP_POSITION                               0x2
#define _IPR4_CCP5IP_SIZE                                   0x1
#define _IPR4_CCP5IP_LENGTH                                 0x1
#define _IPR4_CCP5IP_MASK                                   0x4
#define _IPR4_CCP6IP_POSN                                   0x3
#define _IPR4_CCP6IP_POSITION                               0x3
#define _IPR4_CCP6IP_SIZE                                   0x1
#define _IPR4_CCP6IP_LENGTH                                 0x1
#define _IPR4_CCP6IP_MASK                                   0x8
#define _IPR4_CCP7IP_POSN                                   0x4
#define _IPR4_CCP7IP_POSITION                               0x4
#define _IPR4_CCP7IP_SIZE                                   0x1
#define _IPR4_CCP7IP_LENGTH                                 0x1
#define _IPR4_CCP7IP_MASK                                   0x10
#define _IPR4_CCP8IP_POSN                                   0x5
#define _IPR4_CCP8IP_POSITION                               0x5
#define _IPR4_CCP8IP_SIZE                                   0x1
#define _IPR4_CCP8IP_LENGTH                                 0x1
#define _IPR4_CCP8IP_MASK                                   0x20
#define _IPR4_CCIP3IP_POSN                                  0x0
#define _IPR4_CCIP3IP_POSITION                              0x0
#define _IPR4_CCIP3IP_SIZE                                  0x1
#define _IPR4_CCIP3IP_LENGTH                                0x1
#define _IPR4_CCIP3IP_MASK                                  0x1

// Register: PIE5
#define PIE5 PIE5
extern volatile unsigned char           PIE5                __at(0xFB9);
#ifndef _LIB_BUILD
asm("PIE5 equ 0FB9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR4IE                 :1;
        unsigned TMR5IE                 :1;
        unsigned TMR6IE                 :1;
        unsigned                        :1;
        unsigned TMR8IE                 :1;
    };
} PIE5bits_t;
extern volatile PIE5bits_t PIE5bits __at(0xFB9);
// bitfield macros
#define _PIE5_TMR4IE_POSN                                   0x0
#define _PIE5_TMR4IE_POSITION                               0x0
#define _PIE5_TMR4IE_SIZE                                   0x1
#define _PIE5_TMR4IE_LENGTH                                 0x1
#define _PIE5_TMR4IE_MASK                                   0x1
#define _PIE5_TMR5IE_POSN                                   0x1
#define _PIE5_TMR5IE_POSITION                               0x1
#define _PIE5_TMR5IE_SIZE                                   0x1
#define _PIE5_TMR5IE_LENGTH                                 0x1
#define _PIE5_TMR5IE_MASK                                   0x2
#define _PIE5_TMR6IE_POSN                                   0x2
#define _PIE5_TMR6IE_POSITION                               0x2
#define _PIE5_TMR6IE_SIZE                                   0x1
#define _PIE5_TMR6IE_LENGTH                                 0x1
#define _PIE5_TMR6IE_MASK                                   0x4
#define _PIE5_TMR8IE_POSN                                   0x4
#define _PIE5_TMR8IE_POSITION                               0x4
#define _PIE5_TMR8IE_SIZE                                   0x1
#define _PIE5_TMR8IE_LENGTH                                 0x1
#define _PIE5_TMR8IE_MASK                                   0x10

// Register: PIR5
#define PIR5 PIR5
extern volatile unsigned char           PIR5                __at(0xFBA);
#ifndef _LIB_BUILD
asm("PIR5 equ 0FBAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR4IF                 :1;
        unsigned TMR5IF                 :1;
        unsigned TMR6IF                 :1;
        unsigned                        :1;
        unsigned TMR8IF                 :1;
    };
} PIR5bits_t;
extern volatile PIR5bits_t PIR5bits __at(0xFBA);
// bitfield macros
#define _PIR5_TMR4IF_POSN                                   0x0
#define _PIR5_TMR4IF_POSITION                               0x0
#define _PIR5_TMR4IF_SIZE                                   0x1
#define _PIR5_TMR4IF_LENGTH                                 0x1
#define _PIR5_TMR4IF_MASK                                   0x1
#define _PIR5_TMR5IF_POSN                                   0x1
#define _PIR5_TMR5IF_POSITION                               0x1
#define _PIR5_TMR5IF_SIZE                                   0x1
#define _PIR5_TMR5IF_LENGTH                                 0x1
#define _PIR5_TMR5IF_MASK                                   0x2
#define _PIR5_TMR6IF_POSN                                   0x2
#define _PIR5_TMR6IF_POSITION                               0x2
#define _PIR5_TMR6IF_SIZE                                   0x1
#define _PIR5_TMR6IF_LENGTH                                 0x1
#define _PIR5_TMR6IF_MASK                                   0x4
#define _PIR5_TMR8IF_POSN                                   0x4
#define _PIR5_TMR8IF_POSITION                               0x4
#define _PIR5_TMR8IF_SIZE                                   0x1
#define _PIR5_TMR8IF_LENGTH                                 0x1
#define _PIR5_TMR8IF_MASK                                   0x10

// Register: CCP1CON
#define CCP1CON CCP1CON
extern volatile unsigned char           CCP1CON             __at(0xFBB);
#ifndef _LIB_BUILD
asm("CCP1CON equ 0FBBh");
#endif
// aliases
extern volatile unsigned char           ECCP1CON            __at(0xFBB);
#ifndef _LIB_BUILD
asm("ECCP1CON equ 0FBBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP1M                  :4;
        unsigned DC1B                   :2;
        unsigned P1M                    :2;
    };
    struct {
        unsigned CCP1M0                 :1;
        unsigned CCP1M1                 :1;
        unsigned CCP1M2                 :1;
        unsigned CCP1M3                 :1;
        unsigned DC1B0                  :1;
        unsigned DC1B1                  :1;
        unsigned P1M0                   :1;
        unsigned P1M1                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP1Y                  :1;
        unsigned CCP1X                  :1;
    };
} CCP1CONbits_t;
extern volatile CCP1CONbits_t CCP1CONbits __at(0xFBB);
// bitfield macros
#define _CCP1CON_CCP1M_POSN                                 0x0
#define _CCP1CON_CCP1M_POSITION                             0x0
#define _CCP1CON_CCP1M_SIZE                                 0x4
#define _CCP1CON_CCP1M_LENGTH                               0x4
#define _CCP1CON_CCP1M_MASK                                 0xF
#define _CCP1CON_DC1B_POSN                                  0x4
#define _CCP1CON_DC1B_POSITION                              0x4
#define _CCP1CON_DC1B_SIZE                                  0x2
#define _CCP1CON_DC1B_LENGTH                                0x2
#define _CCP1CON_DC1B_MASK                                  0x30
#define _CCP1CON_P1M_POSN                                   0x6
#define _CCP1CON_P1M_POSITION                               0x6
#define _CCP1CON_P1M_SIZE                                   0x2
#define _CCP1CON_P1M_LENGTH                                 0x2
#define _CCP1CON_P1M_MASK                                   0xC0
#define _CCP1CON_CCP1M0_POSN                                0x0
#define _CCP1CON_CCP1M0_POSITION                            0x0
#define _CCP1CON_CCP1M0_SIZE                                0x1
#define _CCP1CON_CCP1M0_LENGTH                              0x1
#define _CCP1CON_CCP1M0_MASK                                0x1
#define _CCP1CON_CCP1M1_POSN                                0x1
#define _CCP1CON_CCP1M1_POSITION                            0x1
#define _CCP1CON_CCP1M1_SIZE                                0x1
#define _CCP1CON_CCP1M1_LENGTH                              0x1
#define _CCP1CON_CCP1M1_MASK                                0x2
#define _CCP1CON_CCP1M2_POSN                                0x2
#define _CCP1CON_CCP1M2_POSITION                            0x2
#define _CCP1CON_CCP1M2_SIZE                                0x1
#define _CCP1CON_CCP1M2_LENGTH                              0x1
#define _CCP1CON_CCP1M2_MASK                                0x4
#define _CCP1CON_CCP1M3_POSN                                0x3
#define _CCP1CON_CCP1M3_POSITION                            0x3
#define _CCP1CON_CCP1M3_SIZE                                0x1
#define _CCP1CON_CCP1M3_LENGTH                              0x1
#define _CCP1CON_CCP1M3_MASK                                0x8
#define _CCP1CON_DC1B0_POSN                                 0x4
#define _CCP1CON_DC1B0_POSITION                             0x4
#define _CCP1CON_DC1B0_SIZE                                 0x1
#define _CCP1CON_DC1B0_LENGTH                               0x1
#define _CCP1CON_DC1B0_MASK                                 0x10
#define _CCP1CON_DC1B1_POSN                                 0x5
#define _CCP1CON_DC1B1_POSITION                             0x5
#define _CCP1CON_DC1B1_SIZE                                 0x1
#define _CCP1CON_DC1B1_LENGTH                               0x1
#define _CCP1CON_DC1B1_MASK                                 0x20
#define _CCP1CON_P1M0_POSN                                  0x6
#define _CCP1CON_P1M0_POSITION                              0x6
#define _CCP1CON_P1M0_SIZE                                  0x1
#define _CCP1CON_P1M0_LENGTH                                0x1
#define _CCP1CON_P1M0_MASK                                  0x40
#define _CCP1CON_P1M1_POSN                                  0x7
#define _CCP1CON_P1M1_POSITION                              0x7
#define _CCP1CON_P1M1_SIZE                                  0x1
#define _CCP1CON_P1M1_LENGTH                                0x1
#define _CCP1CON_P1M1_MASK                                  0x80
#define _CCP1CON_CCP1Y_POSN                                 0x4
#define _CCP1CON_CCP1Y_POSITION                             0x4
#define _CCP1CON_CCP1Y_SIZE                                 0x1
#define _CCP1CON_CCP1Y_LENGTH                               0x1
#define _CCP1CON_CCP1Y_MASK                                 0x10
#define _CCP1CON_CCP1X_POSN                                 0x5
#define _CCP1CON_CCP1X_POSITION                             0x5
#define _CCP1CON_CCP1X_SIZE                                 0x1
#define _CCP1CON_CCP1X_LENGTH                               0x1
#define _CCP1CON_CCP1X_MASK                                 0x20
// alias bitfield definitions
typedef union {
    struct {
        unsigned CCP1M                  :4;
        unsigned DC1B                   :2;
        unsigned P1M                    :2;
    };
    struct {
        unsigned CCP1M0                 :1;
        unsigned CCP1M1                 :1;
        unsigned CCP1M2                 :1;
        unsigned CCP1M3                 :1;
        unsigned DC1B0                  :1;
        unsigned DC1B1                  :1;
        unsigned P1M0                   :1;
        unsigned P1M1                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP1Y                  :1;
        unsigned CCP1X                  :1;
    };
} ECCP1CONbits_t;
extern volatile ECCP1CONbits_t ECCP1CONbits __at(0xFBB);
// bitfield macros
#define _ECCP1CON_CCP1M_POSN                                0x0
#define _ECCP1CON_CCP1M_POSITION                            0x0
#define _ECCP1CON_CCP1M_SIZE                                0x4
#define _ECCP1CON_CCP1M_LENGTH                              0x4
#define _ECCP1CON_CCP1M_MASK                                0xF
#define _ECCP1CON_DC1B_POSN                                 0x4
#define _ECCP1CON_DC1B_POSITION                             0x4
#define _ECCP1CON_DC1B_SIZE                                 0x2
#define _ECCP1CON_DC1B_LENGTH                               0x2
#define _ECCP1CON_DC1B_MASK                                 0x30
#define _ECCP1CON_P1M_POSN                                  0x6
#define _ECCP1CON_P1M_POSITION                              0x6
#define _ECCP1CON_P1M_SIZE                                  0x2
#define _ECCP1CON_P1M_LENGTH                                0x2
#define _ECCP1CON_P1M_MASK                                  0xC0
#define _ECCP1CON_CCP1M0_POSN                               0x0
#define _ECCP1CON_CCP1M0_POSITION                           0x0
#define _ECCP1CON_CCP1M0_SIZE                               0x1
#define _ECCP1CON_CCP1M0_LENGTH                             0x1
#define _ECCP1CON_CCP1M0_MASK                               0x1
#define _ECCP1CON_CCP1M1_POSN                               0x1
#define _ECCP1CON_CCP1M1_POSITION                           0x1
#define _ECCP1CON_CCP1M1_SIZE                               0x1
#define _ECCP1CON_CCP1M1_LENGTH                             0x1
#define _ECCP1CON_CCP1M1_MASK                               0x2
#define _ECCP1CON_CCP1M2_POSN                               0x2
#define _ECCP1CON_CCP1M2_POSITION                           0x2
#define _ECCP1CON_CCP1M2_SIZE                               0x1
#define _ECCP1CON_CCP1M2_LENGTH                             0x1
#define _ECCP1CON_CCP1M2_MASK                               0x4
#define _ECCP1CON_CCP1M3_POSN                               0x3
#define _ECCP1CON_CCP1M3_POSITION                           0x3
#define _ECCP1CON_CCP1M3_SIZE                               0x1
#define _ECCP1CON_CCP1M3_LENGTH                             0x1
#define _ECCP1CON_CCP1M3_MASK                               0x8
#define _ECCP1CON_DC1B0_POSN                                0x4
#define _ECCP1CON_DC1B0_POSITION                            0x4
#define _ECCP1CON_DC1B0_SIZE                                0x1
#define _ECCP1CON_DC1B0_LENGTH                              0x1
#define _ECCP1CON_DC1B0_MASK                                0x10
#define _ECCP1CON_DC1B1_POSN                                0x5
#define _ECCP1CON_DC1B1_POSITION                            0x5
#define _ECCP1CON_DC1B1_SIZE                                0x1
#define _ECCP1CON_DC1B1_LENGTH                              0x1
#define _ECCP1CON_DC1B1_MASK                                0x20
#define _ECCP1CON_P1M0_POSN                                 0x6
#define _ECCP1CON_P1M0_POSITION                             0x6
#define _ECCP1CON_P1M0_SIZE                                 0x1
#define _ECCP1CON_P1M0_LENGTH                               0x1
#define _ECCP1CON_P1M0_MASK                                 0x40
#define _ECCP1CON_P1M1_POSN                                 0x7
#define _ECCP1CON_P1M1_POSITION                             0x7
#define _ECCP1CON_P1M1_SIZE                                 0x1
#define _ECCP1CON_P1M1_LENGTH                               0x1
#define _ECCP1CON_P1M1_MASK                                 0x80
#define _ECCP1CON_CCP1Y_POSN                                0x4
#define _ECCP1CON_CCP1Y_POSITION                            0x4
#define _ECCP1CON_CCP1Y_SIZE                                0x1
#define _ECCP1CON_CCP1Y_LENGTH                              0x1
#define _ECCP1CON_CCP1Y_MASK                                0x10
#define _ECCP1CON_CCP1X_POSN                                0x5
#define _ECCP1CON_CCP1X_POSITION                            0x5
#define _ECCP1CON_CCP1X_SIZE                                0x1
#define _ECCP1CON_CCP1X_LENGTH                              0x1
#define _ECCP1CON_CCP1X_MASK                                0x20

// Register: CCPR1
#define CCPR1 CCPR1
extern volatile unsigned short          CCPR1               __at(0xFBC);
#ifndef _LIB_BUILD
asm("CCPR1 equ 0FBCh");
#endif

// Register: CCPR1L
#define CCPR1L CCPR1L
extern volatile unsigned char           CCPR1L              __at(0xFBC);
#ifndef _LIB_BUILD
asm("CCPR1L equ 0FBCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR1L                 :8;
    };
} CCPR1Lbits_t;
extern volatile CCPR1Lbits_t CCPR1Lbits __at(0xFBC);
// bitfield macros
#define _CCPR1L_CCPR1L_POSN                                 0x0
#define _CCPR1L_CCPR1L_POSITION                             0x0
#define _CCPR1L_CCPR1L_SIZE                                 0x8
#define _CCPR1L_CCPR1L_LENGTH                               0x8
#define _CCPR1L_CCPR1L_MASK                                 0xFF

// Register: CCPR1H
#define CCPR1H CCPR1H
extern volatile unsigned char           CCPR1H              __at(0xFBD);
#ifndef _LIB_BUILD
asm("CCPR1H equ 0FBDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR1H                 :8;
    };
} CCPR1Hbits_t;
extern volatile CCPR1Hbits_t CCPR1Hbits __at(0xFBD);
// bitfield macros
#define _CCPR1H_CCPR1H_POSN                                 0x0
#define _CCPR1H_CCPR1H_POSITION                             0x0
#define _CCPR1H_CCPR1H_SIZE                                 0x8
#define _CCPR1H_CCPR1H_LENGTH                               0x8
#define _CCPR1H_CCPR1H_MASK                                 0xFF

// Register: ECCP1DEL
#define ECCP1DEL ECCP1DEL
extern volatile unsigned char           ECCP1DEL            __at(0xFBE);
#ifndef _LIB_BUILD
asm("ECCP1DEL equ 0FBEh");
#endif
// aliases
extern volatile unsigned char           PWM1CON             __at(0xFBE);
#ifndef _LIB_BUILD
asm("PWM1CON equ 0FBEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned P1DC                   :7;
        unsigned P1RSEN                 :1;
    };
    struct {
        unsigned P1DC0                  :1;
        unsigned P1DC1                  :1;
        unsigned P1DC2                  :1;
        unsigned P1DC3                  :1;
        unsigned P1DC4                  :1;
        unsigned P1DC5                  :1;
        unsigned P1DC6                  :1;
    };
} ECCP1DELbits_t;
extern volatile ECCP1DELbits_t ECCP1DELbits __at(0xFBE);
// bitfield macros
#define _ECCP1DEL_P1DC_POSN                                 0x0
#define _ECCP1DEL_P1DC_POSITION                             0x0
#define _ECCP1DEL_P1DC_SIZE                                 0x7
#define _ECCP1DEL_P1DC_LENGTH                               0x7
#define _ECCP1DEL_P1DC_MASK                                 0x7F
#define _ECCP1DEL_P1RSEN_POSN                               0x7
#define _ECCP1DEL_P1RSEN_POSITION                           0x7
#define _ECCP1DEL_P1RSEN_SIZE                               0x1
#define _ECCP1DEL_P1RSEN_LENGTH                             0x1
#define _ECCP1DEL_P1RSEN_MASK                               0x80
#define _ECCP1DEL_P1DC0_POSN                                0x0
#define _ECCP1DEL_P1DC0_POSITION                            0x0
#define _ECCP1DEL_P1DC0_SIZE                                0x1
#define _ECCP1DEL_P1DC0_LENGTH                              0x1
#define _ECCP1DEL_P1DC0_MASK                                0x1
#define _ECCP1DEL_P1DC1_POSN                                0x1
#define _ECCP1DEL_P1DC1_POSITION                            0x1
#define _ECCP1DEL_P1DC1_SIZE                                0x1
#define _ECCP1DEL_P1DC1_LENGTH                              0x1
#define _ECCP1DEL_P1DC1_MASK                                0x2
#define _ECCP1DEL_P1DC2_POSN                                0x2
#define _ECCP1DEL_P1DC2_POSITION                            0x2
#define _ECCP1DEL_P1DC2_SIZE                                0x1
#define _ECCP1DEL_P1DC2_LENGTH                              0x1
#define _ECCP1DEL_P1DC2_MASK                                0x4
#define _ECCP1DEL_P1DC3_POSN                                0x3
#define _ECCP1DEL_P1DC3_POSITION                            0x3
#define _ECCP1DEL_P1DC3_SIZE                                0x1
#define _ECCP1DEL_P1DC3_LENGTH                              0x1
#define _ECCP1DEL_P1DC3_MASK                                0x8
#define _ECCP1DEL_P1DC4_POSN                                0x4
#define _ECCP1DEL_P1DC4_POSITION                            0x4
#define _ECCP1DEL_P1DC4_SIZE                                0x1
#define _ECCP1DEL_P1DC4_LENGTH                              0x1
#define _ECCP1DEL_P1DC4_MASK                                0x10
#define _ECCP1DEL_P1DC5_POSN                                0x5
#define _ECCP1DEL_P1DC5_POSITION                            0x5
#define _ECCP1DEL_P1DC5_SIZE                                0x1
#define _ECCP1DEL_P1DC5_LENGTH                              0x1
#define _ECCP1DEL_P1DC5_MASK                                0x20
#define _ECCP1DEL_P1DC6_POSN                                0x6
#define _ECCP1DEL_P1DC6_POSITION                            0x6
#define _ECCP1DEL_P1DC6_SIZE                                0x1
#define _ECCP1DEL_P1DC6_LENGTH                              0x1
#define _ECCP1DEL_P1DC6_MASK                                0x40
// alias bitfield definitions
typedef union {
    struct {
        unsigned P1DC                   :7;
        unsigned P1RSEN                 :1;
    };
    struct {
        unsigned P1DC0                  :1;
        unsigned P1DC1                  :1;
        unsigned P1DC2                  :1;
        unsigned P1DC3                  :1;
        unsigned P1DC4                  :1;
        unsigned P1DC5                  :1;
        unsigned P1DC6                  :1;
    };
} PWM1CONbits_t;
extern volatile PWM1CONbits_t PWM1CONbits __at(0xFBE);
// bitfield macros
#define _PWM1CON_P1DC_POSN                                  0x0
#define _PWM1CON_P1DC_POSITION                              0x0
#define _PWM1CON_P1DC_SIZE                                  0x7
#define _PWM1CON_P1DC_LENGTH                                0x7
#define _PWM1CON_P1DC_MASK                                  0x7F
#define _PWM1CON_P1RSEN_POSN                                0x7
#define _PWM1CON_P1RSEN_POSITION                            0x7
#define _PWM1CON_P1RSEN_SIZE                                0x1
#define _PWM1CON_P1RSEN_LENGTH                              0x1
#define _PWM1CON_P1RSEN_MASK                                0x80
#define _PWM1CON_P1DC0_POSN                                 0x0
#define _PWM1CON_P1DC0_POSITION                             0x0
#define _PWM1CON_P1DC0_SIZE                                 0x1
#define _PWM1CON_P1DC0_LENGTH                               0x1
#define _PWM1CON_P1DC0_MASK                                 0x1
#define _PWM1CON_P1DC1_POSN                                 0x1
#define _PWM1CON_P1DC1_POSITION                             0x1
#define _PWM1CON_P1DC1_SIZE                                 0x1
#define _PWM1CON_P1DC1_LENGTH                               0x1
#define _PWM1CON_P1DC1_MASK                                 0x2
#define _PWM1CON_P1DC2_POSN                                 0x2
#define _PWM1CON_P1DC2_POSITION                             0x2
#define _PWM1CON_P1DC2_SIZE                                 0x1
#define _PWM1CON_P1DC2_LENGTH                               0x1
#define _PWM1CON_P1DC2_MASK                                 0x4
#define _PWM1CON_P1DC3_POSN                                 0x3
#define _PWM1CON_P1DC3_POSITION                             0x3
#define _PWM1CON_P1DC3_SIZE                                 0x1
#define _PWM1CON_P1DC3_LENGTH                               0x1
#define _PWM1CON_P1DC3_MASK                                 0x8
#define _PWM1CON_P1DC4_POSN                                 0x4
#define _PWM1CON_P1DC4_POSITION                             0x4
#define _PWM1CON_P1DC4_SIZE                                 0x1
#define _PWM1CON_P1DC4_LENGTH                               0x1
#define _PWM1CON_P1DC4_MASK                                 0x10
#define _PWM1CON_P1DC5_POSN                                 0x5
#define _PWM1CON_P1DC5_POSITION                             0x5
#define _PWM1CON_P1DC5_SIZE                                 0x1
#define _PWM1CON_P1DC5_LENGTH                               0x1
#define _PWM1CON_P1DC5_MASK                                 0x20
#define _PWM1CON_P1DC6_POSN                                 0x6
#define _PWM1CON_P1DC6_POSITION                             0x6
#define _PWM1CON_P1DC6_SIZE                                 0x1
#define _PWM1CON_P1DC6_LENGTH                               0x1
#define _PWM1CON_P1DC6_MASK                                 0x40

// Register: ECCP1AS
#define ECCP1AS ECCP1AS
extern volatile unsigned char           ECCP1AS             __at(0xFBF);
#ifndef _LIB_BUILD
asm("ECCP1AS equ 0FBFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PSS1BD                 :2;
        unsigned PSS1AC                 :2;
        unsigned ECCP1AS                :3;
        unsigned ECCP1ASE               :1;
    };
    struct {
        unsigned PSS1BD0                :1;
        unsigned PSS1BD1                :1;
        unsigned PSS1AC0                :1;
        unsigned PSS1AC1                :1;
        unsigned ECCP1AS0               :1;
        unsigned ECCP1AS1               :1;
        unsigned ECCP1AS2               :1;
    };
} ECCP1ASbits_t;
extern volatile ECCP1ASbits_t ECCP1ASbits __at(0xFBF);
// bitfield macros
#define _ECCP1AS_PSS1BD_POSN                                0x0
#define _ECCP1AS_PSS1BD_POSITION                            0x0
#define _ECCP1AS_PSS1BD_SIZE                                0x2
#define _ECCP1AS_PSS1BD_LENGTH                              0x2
#define _ECCP1AS_PSS1BD_MASK                                0x3
#define _ECCP1AS_PSS1AC_POSN                                0x2
#define _ECCP1AS_PSS1AC_POSITION                            0x2
#define _ECCP1AS_PSS1AC_SIZE                                0x2
#define _ECCP1AS_PSS1AC_LENGTH                              0x2
#define _ECCP1AS_PSS1AC_MASK                                0xC
#define _ECCP1AS_ECCP1AS_POSN                               0x4
#define _ECCP1AS_ECCP1AS_POSITION                           0x4
#define _ECCP1AS_ECCP1AS_SIZE                               0x3
#define _ECCP1AS_ECCP1AS_LENGTH                             0x3
#define _ECCP1AS_ECCP1AS_MASK                               0x70
#define _ECCP1AS_ECCP1ASE_POSN                              0x7
#define _ECCP1AS_ECCP1ASE_POSITION                          0x7
#define _ECCP1AS_ECCP1ASE_SIZE                              0x1
#define _ECCP1AS_ECCP1ASE_LENGTH                            0x1
#define _ECCP1AS_ECCP1ASE_MASK                              0x80
#define _ECCP1AS_PSS1BD0_POSN                               0x0
#define _ECCP1AS_PSS1BD0_POSITION                           0x0
#define _ECCP1AS_PSS1BD0_SIZE                               0x1
#define _ECCP1AS_PSS1BD0_LENGTH                             0x1
#define _ECCP1AS_PSS1BD0_MASK                               0x1
#define _ECCP1AS_PSS1BD1_POSN                               0x1
#define _ECCP1AS_PSS1BD1_POSITION                           0x1
#define _ECCP1AS_PSS1BD1_SIZE                               0x1
#define _ECCP1AS_PSS1BD1_LENGTH                             0x1
#define _ECCP1AS_PSS1BD1_MASK                               0x2
#define _ECCP1AS_PSS1AC0_POSN                               0x2
#define _ECCP1AS_PSS1AC0_POSITION                           0x2
#define _ECCP1AS_PSS1AC0_SIZE                               0x1
#define _ECCP1AS_PSS1AC0_LENGTH                             0x1
#define _ECCP1AS_PSS1AC0_MASK                               0x4
#define _ECCP1AS_PSS1AC1_POSN                               0x3
#define _ECCP1AS_PSS1AC1_POSITION                           0x3
#define _ECCP1AS_PSS1AC1_SIZE                               0x1
#define _ECCP1AS_PSS1AC1_LENGTH                             0x1
#define _ECCP1AS_PSS1AC1_MASK                               0x8
#define _ECCP1AS_ECCP1AS0_POSN                              0x4
#define _ECCP1AS_ECCP1AS0_POSITION                          0x4
#define _ECCP1AS_ECCP1AS0_SIZE                              0x1
#define _ECCP1AS_ECCP1AS0_LENGTH                            0x1
#define _ECCP1AS_ECCP1AS0_MASK                              0x10
#define _ECCP1AS_ECCP1AS1_POSN                              0x5
#define _ECCP1AS_ECCP1AS1_POSITION                          0x5
#define _ECCP1AS_ECCP1AS1_SIZE                              0x1
#define _ECCP1AS_ECCP1AS1_LENGTH                            0x1
#define _ECCP1AS_ECCP1AS1_MASK                              0x20
#define _ECCP1AS_ECCP1AS2_POSN                              0x6
#define _ECCP1AS_ECCP1AS2_POSITION                          0x6
#define _ECCP1AS_ECCP1AS2_SIZE                              0x1
#define _ECCP1AS_ECCP1AS2_LENGTH                            0x1
#define _ECCP1AS_ECCP1AS2_MASK                              0x40

// Register: ADCON2
#define ADCON2 ADCON2
extern volatile unsigned char           ADCON2              __at(0xFC0);
#ifndef _LIB_BUILD
asm("ADCON2 equ 0FC0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADCS                   :3;
        unsigned ACQT                   :3;
        unsigned                        :1;
        unsigned ADFM                   :1;
    };
    struct {
        unsigned ADCS0                  :1;
        unsigned ADCS1                  :1;
        unsigned ADCS2                  :1;
        unsigned ACQT0                  :1;
        unsigned ACQT1                  :1;
        unsigned ACQT2                  :1;
    };
} ADCON2bits_t;
extern volatile ADCON2bits_t ADCON2bits __at(0xFC0);
// bitfield macros
#define _ADCON2_ADCS_POSN                                   0x0
#define _ADCON2_ADCS_POSITION                               0x0
#define _ADCON2_ADCS_SIZE                                   0x3
#define _ADCON2_ADCS_LENGTH                                 0x3
#define _ADCON2_ADCS_MASK                                   0x7
#define _ADCON2_ACQT_POSN                                   0x3
#define _ADCON2_ACQT_POSITION                               0x3
#define _ADCON2_ACQT_SIZE                                   0x3
#define _ADCON2_ACQT_LENGTH                                 0x3
#define _ADCON2_ACQT_MASK                                   0x38
#define _ADCON2_ADFM_POSN                                   0x7
#define _ADCON2_ADFM_POSITION                               0x7
#define _ADCON2_ADFM_SIZE                                   0x1
#define _ADCON2_ADFM_LENGTH                                 0x1
#define _ADCON2_ADFM_MASK                                   0x80
#define _ADCON2_ADCS0_POSN                                  0x0
#define _ADCON2_ADCS0_POSITION                              0x0
#define _ADCON2_ADCS0_SIZE                                  0x1
#define _ADCON2_ADCS0_LENGTH                                0x1
#define _ADCON2_ADCS0_MASK                                  0x1
#define _ADCON2_ADCS1_POSN                                  0x1
#define _ADCON2_ADCS1_POSITION                              0x1
#define _ADCON2_ADCS1_SIZE                                  0x1
#define _ADCON2_ADCS1_LENGTH                                0x1
#define _ADCON2_ADCS1_MASK                                  0x2
#define _ADCON2_ADCS2_POSN                                  0x2
#define _ADCON2_ADCS2_POSITION                              0x2
#define _ADCON2_ADCS2_SIZE                                  0x1
#define _ADCON2_ADCS2_LENGTH                                0x1
#define _ADCON2_ADCS2_MASK                                  0x4
#define _ADCON2_ACQT0_POSN                                  0x3
#define _ADCON2_ACQT0_POSITION                              0x3
#define _ADCON2_ACQT0_SIZE                                  0x1
#define _ADCON2_ACQT0_LENGTH                                0x1
#define _ADCON2_ACQT0_MASK                                  0x8
#define _ADCON2_ACQT1_POSN                                  0x4
#define _ADCON2_ACQT1_POSITION                              0x4
#define _ADCON2_ACQT1_SIZE                                  0x1
#define _ADCON2_ACQT1_LENGTH                                0x1
#define _ADCON2_ACQT1_MASK                                  0x10
#define _ADCON2_ACQT2_POSN                                  0x5
#define _ADCON2_ACQT2_POSITION                              0x5
#define _ADCON2_ACQT2_SIZE                                  0x1
#define _ADCON2_ACQT2_LENGTH                                0x1
#define _ADCON2_ACQT2_MASK                                  0x20

// Register: ADCON1
#define ADCON1 ADCON1
extern volatile unsigned char           ADCON1              __at(0xFC1);
#ifndef _LIB_BUILD
asm("ADCON1 equ 0FC1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CHSN                   :3;
        unsigned VNCFG                  :1;
        unsigned VCFG                   :2;
        unsigned TRIGSEL                :2;
    };
    struct {
        unsigned CHSN0                  :1;
        unsigned CHSN1                  :1;
        unsigned CHSN2                  :1;
        unsigned                        :1;
        unsigned VCFG0                  :1;
        unsigned VCFG1                  :1;
        unsigned TRIGSEL0               :1;
        unsigned TRIGSEL1               :1;
    };
    struct {
        unsigned                        :3;
        unsigned CHSN3                  :1;
        unsigned VCFG01                 :1;
        unsigned VCFG11                 :1;
    };
} ADCON1bits_t;
extern volatile ADCON1bits_t ADCON1bits __at(0xFC1);
// bitfield macros
#define _ADCON1_CHSN_POSN                                   0x0
#define _ADCON1_CHSN_POSITION                               0x0
#define _ADCON1_CHSN_SIZE                                   0x3
#define _ADCON1_CHSN_LENGTH                                 0x3
#define _ADCON1_CHSN_MASK                                   0x7
#define _ADCON1_VNCFG_POSN                                  0x3
#define _ADCON1_VNCFG_POSITION                              0x3
#define _ADCON1_VNCFG_SIZE                                  0x1
#define _ADCON1_VNCFG_LENGTH                                0x1
#define _ADCON1_VNCFG_MASK                                  0x8
#define _ADCON1_VCFG_POSN                                   0x4
#define _ADCON1_VCFG_POSITION                               0x4
#define _ADCON1_VCFG_SIZE                                   0x2
#define _ADCON1_VCFG_LENGTH                                 0x2
#define _ADCON1_VCFG_MASK                                   0x30
#define _ADCON1_TRIGSEL_POSN                                0x6
#define _ADCON1_TRIGSEL_POSITION                            0x6
#define _ADCON1_TRIGSEL_SIZE                                0x2
#define _ADCON1_TRIGSEL_LENGTH                              0x2
#define _ADCON1_TRIGSEL_MASK                                0xC0
#define _ADCON1_CHSN0_POSN                                  0x0
#define _ADCON1_CHSN0_POSITION                              0x0
#define _ADCON1_CHSN0_SIZE                                  0x1
#define _ADCON1_CHSN0_LENGTH                                0x1
#define _ADCON1_CHSN0_MASK                                  0x1
#define _ADCON1_CHSN1_POSN                                  0x1
#define _ADCON1_CHSN1_POSITION                              0x1
#define _ADCON1_CHSN1_SIZE                                  0x1
#define _ADCON1_CHSN1_LENGTH                                0x1
#define _ADCON1_CHSN1_MASK                                  0x2
#define _ADCON1_CHSN2_POSN                                  0x2
#define _ADCON1_CHSN2_POSITION                              0x2
#define _ADCON1_CHSN2_SIZE                                  0x1
#define _ADCON1_CHSN2_LENGTH                                0x1
#define _ADCON1_CHSN2_MASK                                  0x4
#define _ADCON1_VCFG0_POSN                                  0x4
#define _ADCON1_VCFG0_POSITION                              0x4
#define _ADCON1_VCFG0_SIZE                                  0x1
#define _ADCON1_VCFG0_LENGTH                                0x1
#define _ADCON1_VCFG0_MASK                                  0x10
#define _ADCON1_VCFG1_POSN                                  0x5
#define _ADCON1_VCFG1_POSITION                              0x5
#define _ADCON1_VCFG1_SIZE                                  0x1
#define _ADCON1_VCFG1_LENGTH                                0x1
#define _ADCON1_VCFG1_MASK                                  0x20
#define _ADCON1_TRIGSEL0_POSN                               0x6
#define _ADCON1_TRIGSEL0_POSITION                           0x6
#define _ADCON1_TRIGSEL0_SIZE                               0x1
#define _ADCON1_TRIGSEL0_LENGTH                             0x1
#define _ADCON1_TRIGSEL0_MASK                               0x40
#define _ADCON1_TRIGSEL1_POSN                               0x7
#define _ADCON1_TRIGSEL1_POSITION                           0x7
#define _ADCON1_TRIGSEL1_SIZE                               0x1
#define _ADCON1_TRIGSEL1_LENGTH                             0x1
#define _ADCON1_TRIGSEL1_MASK                               0x80
#define _ADCON1_CHSN3_POSN                                  0x3
#define _ADCON1_CHSN3_POSITION                              0x3
#define _ADCON1_CHSN3_SIZE                                  0x1
#define _ADCON1_CHSN3_LENGTH                                0x1
#define _ADCON1_CHSN3_MASK                                  0x8
#define _ADCON1_VCFG01_POSN                                 0x4
#define _ADCON1_VCFG01_POSITION                             0x4
#define _ADCON1_VCFG01_SIZE                                 0x1
#define _ADCON1_VCFG01_LENGTH                               0x1
#define _ADCON1_VCFG01_MASK                                 0x10
#define _ADCON1_VCFG11_POSN                                 0x5
#define _ADCON1_VCFG11_POSITION                             0x5
#define _ADCON1_VCFG11_SIZE                                 0x1
#define _ADCON1_VCFG11_LENGTH                               0x1
#define _ADCON1_VCFG11_MASK                                 0x20

// Register: ADCON0
#define ADCON0 ADCON0
extern volatile unsigned char           ADCON0              __at(0xFC2);
#ifndef _LIB_BUILD
asm("ADCON0 equ 0FC2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned GO_NOT_DONE            :1;
    };
    struct {
        unsigned ADON                   :1;
        unsigned GO_nDONE               :1;
        unsigned CHS                    :5;
    };
    struct {
        unsigned                        :1;
        unsigned DONE                   :1;
        unsigned CHS0                   :1;
        unsigned CHS1                   :1;
        unsigned CHS2                   :1;
        unsigned CHS3                   :1;
        unsigned CHS4                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned GO                     :1;
    };
    struct {
        unsigned                        :1;
        unsigned NOT_DONE               :1;
    };
    struct {
        unsigned                        :1;
        unsigned nDONE                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned GODONE                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned GO_DONE                :1;
    };
} ADCON0bits_t;
extern volatile ADCON0bits_t ADCON0bits __at(0xFC2);
// bitfield macros
#define _ADCON0_GO_NOT_DONE_POSN                            0x1
#define _ADCON0_GO_NOT_DONE_POSITION                        0x1
#define _ADCON0_GO_NOT_DONE_SIZE                            0x1
#define _ADCON0_GO_NOT_DONE_LENGTH                          0x1
#define _ADCON0_GO_NOT_DONE_MASK                            0x2
#define _ADCON0_ADON_POSN                                   0x0
#define _ADCON0_ADON_POSITION                               0x0
#define _ADCON0_ADON_SIZE                                   0x1
#define _ADCON0_ADON_LENGTH                                 0x1
#define _ADCON0_ADON_MASK                                   0x1
#define _ADCON0_GO_nDONE_POSN                               0x1
#define _ADCON0_GO_nDONE_POSITION                           0x1
#define _ADCON0_GO_nDONE_SIZE                               0x1
#define _ADCON0_GO_nDONE_LENGTH                             0x1
#define _ADCON0_GO_nDONE_MASK                               0x2
#define _ADCON0_CHS_POSN                                    0x2
#define _ADCON0_CHS_POSITION                                0x2
#define _ADCON0_CHS_SIZE                                    0x5
#define _ADCON0_CHS_LENGTH                                  0x5
#define _ADCON0_CHS_MASK                                    0x7C
#define _ADCON0_DONE_POSN                                   0x1
#define _ADCON0_DONE_POSITION                               0x1
#define _ADCON0_DONE_SIZE                                   0x1
#define _ADCON0_DONE_LENGTH                                 0x1
#define _ADCON0_DONE_MASK                                   0x2
#define _ADCON0_CHS0_POSN                                   0x2
#define _ADCON0_CHS0_POSITION                               0x2
#define _ADCON0_CHS0_SIZE                                   0x1
#define _ADCON0_CHS0_LENGTH                                 0x1
#define _ADCON0_CHS0_MASK                                   0x4
#define _ADCON0_CHS1_POSN                                   0x3
#define _ADCON0_CHS1_POSITION                               0x3
#define _ADCON0_CHS1_SIZE                                   0x1
#define _ADCON0_CHS1_LENGTH                                 0x1
#define _ADCON0_CHS1_MASK                                   0x8
#define _ADCON0_CHS2_POSN                                   0x4
#define _ADCON0_CHS2_POSITION                               0x4
#define _ADCON0_CHS2_SIZE                                   0x1
#define _ADCON0_CHS2_LENGTH                                 0x1
#define _ADCON0_CHS2_MASK                                   0x10
#define _ADCON0_CHS3_POSN                                   0x5
#define _ADCON0_CHS3_POSITION                               0x5
#define _ADCON0_CHS3_SIZE                                   0x1
#define _ADCON0_CHS3_LENGTH                                 0x1
#define _ADCON0_CHS3_MASK                                   0x20
#define _ADCON0_CHS4_POSN                                   0x6
#define _ADCON0_CHS4_POSITION                               0x6
#define _ADCON0_CHS4_SIZE                                   0x1
#define _ADCON0_CHS4_LENGTH                                 0x1
#define _ADCON0_CHS4_MASK                                   0x40
#define _ADCON0_GO_POSN                                     0x1
#define _ADCON0_GO_POSITION                                 0x1
#define _ADCON0_GO_SIZE                                     0x1
#define _ADCON0_GO_LENGTH                                   0x1
#define _ADCON0_GO_MASK                                     0x2
#define _ADCON0_NOT_DONE_POSN                               0x1
#define _ADCON0_NOT_DONE_POSITION                           0x1
#define _ADCON0_NOT_DONE_SIZE                               0x1
#define _ADCON0_NOT_DONE_LENGTH                             0x1
#define _ADCON0_NOT_DONE_MASK                               0x2
#define _ADCON0_nDONE_POSN                                  0x1
#define _ADCON0_nDONE_POSITION                              0x1
#define _ADCON0_nDONE_SIZE                                  0x1
#define _ADCON0_nDONE_LENGTH                                0x1
#define _ADCON0_nDONE_MASK                                  0x2
#define _ADCON0_GODONE_POSN                                 0x1
#define _ADCON0_GODONE_POSITION                             0x1
#define _ADCON0_GODONE_SIZE                                 0x1
#define _ADCON0_GODONE_LENGTH                               0x1
#define _ADCON0_GODONE_MASK                                 0x2
#define _ADCON0_GO_DONE_POSN                                0x1
#define _ADCON0_GO_DONE_POSITION                            0x1
#define _ADCON0_GO_DONE_SIZE                                0x1
#define _ADCON0_GO_DONE_LENGTH                              0x1
#define _ADCON0_GO_DONE_MASK                                0x2

// Register: ADRES
#define ADRES ADRES
extern volatile unsigned short          ADRES               __at(0xFC3);
#ifndef _LIB_BUILD
asm("ADRES equ 0FC3h");
#endif

// Register: ADRESL
#define ADRESL ADRESL
extern volatile unsigned char           ADRESL              __at(0xFC3);
#ifndef _LIB_BUILD
asm("ADRESL equ 0FC3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADRESL                 :8;
    };
} ADRESLbits_t;
extern volatile ADRESLbits_t ADRESLbits __at(0xFC3);
// bitfield macros
#define _ADRESL_ADRESL_POSN                                 0x0
#define _ADRESL_ADRESL_POSITION                             0x0
#define _ADRESL_ADRESL_SIZE                                 0x8
#define _ADRESL_ADRESL_LENGTH                               0x8
#define _ADRESL_ADRESL_MASK                                 0xFF

// Register: ADRESH
#define ADRESH ADRESH
extern volatile unsigned char           ADRESH              __at(0xFC4);
#ifndef _LIB_BUILD
asm("ADRESH equ 0FC4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADRESH                 :8;
    };
} ADRESHbits_t;
extern volatile ADRESHbits_t ADRESHbits __at(0xFC4);
// bitfield macros
#define _ADRESH_ADRESH_POSN                                 0x0
#define _ADRESH_ADRESH_POSITION                             0x0
#define _ADRESH_ADRESH_SIZE                                 0x8
#define _ADRESH_ADRESH_LENGTH                               0x8
#define _ADRESH_ADRESH_MASK                                 0xFF

// Register: SSP1CON2
#define SSP1CON2 SSP1CON2
extern volatile unsigned char           SSP1CON2            __at(0xFC5);
#ifndef _LIB_BUILD
asm("SSP1CON2 equ 0FC5h");
#endif
// aliases
extern volatile unsigned char           SSPCON2             __at(0xFC5);
#ifndef _LIB_BUILD
asm("SSPCON2 equ 0FC5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned ADMSK1                 :1;
        unsigned ADMSK2                 :1;
        unsigned ADMSK3                 :1;
        unsigned ADMSK4                 :1;
        unsigned ADMSK5                 :1;
    };
    struct {
        unsigned SEN1                   :1;
        unsigned ADMSK11                :1;
        unsigned ADMSK21                :1;
        unsigned ADMSK31                :1;
        unsigned ACKEN1                 :1;
        unsigned ACKDT1                 :1;
        unsigned ACKSTAT1               :1;
        unsigned GCEN1                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned RSEN1                  :1;
        unsigned PEN1                   :1;
        unsigned RCEN1                  :1;
        unsigned ADMSK41                :1;
        unsigned ADMSK51                :1;
    };
} SSP1CON2bits_t;
extern volatile SSP1CON2bits_t SSP1CON2bits __at(0xFC5);
// bitfield macros
#define _SSP1CON2_SEN_POSN                                  0x0
#define _SSP1CON2_SEN_POSITION                              0x0
#define _SSP1CON2_SEN_SIZE                                  0x1
#define _SSP1CON2_SEN_LENGTH                                0x1
#define _SSP1CON2_SEN_MASK                                  0x1
#define _SSP1CON2_RSEN_POSN                                 0x1
#define _SSP1CON2_RSEN_POSITION                             0x1
#define _SSP1CON2_RSEN_SIZE                                 0x1
#define _SSP1CON2_RSEN_LENGTH                               0x1
#define _SSP1CON2_RSEN_MASK                                 0x2
#define _SSP1CON2_PEN_POSN                                  0x2
#define _SSP1CON2_PEN_POSITION                              0x2
#define _SSP1CON2_PEN_SIZE                                  0x1
#define _SSP1CON2_PEN_LENGTH                                0x1
#define _SSP1CON2_PEN_MASK                                  0x4
#define _SSP1CON2_RCEN_POSN                                 0x3
#define _SSP1CON2_RCEN_POSITION                             0x3
#define _SSP1CON2_RCEN_SIZE                                 0x1
#define _SSP1CON2_RCEN_LENGTH                               0x1
#define _SSP1CON2_RCEN_MASK                                 0x8
#define _SSP1CON2_ACKEN_POSN                                0x4
#define _SSP1CON2_ACKEN_POSITION                            0x4
#define _SSP1CON2_ACKEN_SIZE                                0x1
#define _SSP1CON2_ACKEN_LENGTH                              0x1
#define _SSP1CON2_ACKEN_MASK                                0x10
#define _SSP1CON2_ACKDT_POSN                                0x5
#define _SSP1CON2_ACKDT_POSITION                            0x5
#define _SSP1CON2_ACKDT_SIZE                                0x1
#define _SSP1CON2_ACKDT_LENGTH                              0x1
#define _SSP1CON2_ACKDT_MASK                                0x20
#define _SSP1CON2_ACKSTAT_POSN                              0x6
#define _SSP1CON2_ACKSTAT_POSITION                          0x6
#define _SSP1CON2_ACKSTAT_SIZE                              0x1
#define _SSP1CON2_ACKSTAT_LENGTH                            0x1
#define _SSP1CON2_ACKSTAT_MASK                              0x40
#define _SSP1CON2_GCEN_POSN                                 0x7
#define _SSP1CON2_GCEN_POSITION                             0x7
#define _SSP1CON2_GCEN_SIZE                                 0x1
#define _SSP1CON2_GCEN_LENGTH                               0x1
#define _SSP1CON2_GCEN_MASK                                 0x80
#define _SSP1CON2_ADMSK1_POSN                               0x1
#define _SSP1CON2_ADMSK1_POSITION                           0x1
#define _SSP1CON2_ADMSK1_SIZE                               0x1
#define _SSP1CON2_ADMSK1_LENGTH                             0x1
#define _SSP1CON2_ADMSK1_MASK                               0x2
#define _SSP1CON2_ADMSK2_POSN                               0x2
#define _SSP1CON2_ADMSK2_POSITION                           0x2
#define _SSP1CON2_ADMSK2_SIZE                               0x1
#define _SSP1CON2_ADMSK2_LENGTH                             0x1
#define _SSP1CON2_ADMSK2_MASK                               0x4
#define _SSP1CON2_ADMSK3_POSN                               0x3
#define _SSP1CON2_ADMSK3_POSITION                           0x3
#define _SSP1CON2_ADMSK3_SIZE                               0x1
#define _SSP1CON2_ADMSK3_LENGTH                             0x1
#define _SSP1CON2_ADMSK3_MASK                               0x8
#define _SSP1CON2_ADMSK4_POSN                               0x4
#define _SSP1CON2_ADMSK4_POSITION                           0x4
#define _SSP1CON2_ADMSK4_SIZE                               0x1
#define _SSP1CON2_ADMSK4_LENGTH                             0x1
#define _SSP1CON2_ADMSK4_MASK                               0x10
#define _SSP1CON2_ADMSK5_POSN                               0x5
#define _SSP1CON2_ADMSK5_POSITION                           0x5
#define _SSP1CON2_ADMSK5_SIZE                               0x1
#define _SSP1CON2_ADMSK5_LENGTH                             0x1
#define _SSP1CON2_ADMSK5_MASK                               0x20
#define _SSP1CON2_SEN1_POSN                                 0x0
#define _SSP1CON2_SEN1_POSITION                             0x0
#define _SSP1CON2_SEN1_SIZE                                 0x1
#define _SSP1CON2_SEN1_LENGTH                               0x1
#define _SSP1CON2_SEN1_MASK                                 0x1
#define _SSP1CON2_ADMSK11_POSN                              0x1
#define _SSP1CON2_ADMSK11_POSITION                          0x1
#define _SSP1CON2_ADMSK11_SIZE                              0x1
#define _SSP1CON2_ADMSK11_LENGTH                            0x1
#define _SSP1CON2_ADMSK11_MASK                              0x2
#define _SSP1CON2_ADMSK21_POSN                              0x2
#define _SSP1CON2_ADMSK21_POSITION                          0x2
#define _SSP1CON2_ADMSK21_SIZE                              0x1
#define _SSP1CON2_ADMSK21_LENGTH                            0x1
#define _SSP1CON2_ADMSK21_MASK                              0x4
#define _SSP1CON2_ADMSK31_POSN                              0x3
#define _SSP1CON2_ADMSK31_POSITION                          0x3
#define _SSP1CON2_ADMSK31_SIZE                              0x1
#define _SSP1CON2_ADMSK31_LENGTH                            0x1
#define _SSP1CON2_ADMSK31_MASK                              0x8
#define _SSP1CON2_ACKEN1_POSN                               0x4
#define _SSP1CON2_ACKEN1_POSITION                           0x4
#define _SSP1CON2_ACKEN1_SIZE                               0x1
#define _SSP1CON2_ACKEN1_LENGTH                             0x1
#define _SSP1CON2_ACKEN1_MASK                               0x10
#define _SSP1CON2_ACKDT1_POSN                               0x5
#define _SSP1CON2_ACKDT1_POSITION                           0x5
#define _SSP1CON2_ACKDT1_SIZE                               0x1
#define _SSP1CON2_ACKDT1_LENGTH                             0x1
#define _SSP1CON2_ACKDT1_MASK                               0x20
#define _SSP1CON2_ACKSTAT1_POSN                             0x6
#define _SSP1CON2_ACKSTAT1_POSITION                         0x6
#define _SSP1CON2_ACKSTAT1_SIZE                             0x1
#define _SSP1CON2_ACKSTAT1_LENGTH                           0x1
#define _SSP1CON2_ACKSTAT1_MASK                             0x40
#define _SSP1CON2_GCEN1_POSN                                0x7
#define _SSP1CON2_GCEN1_POSITION                            0x7
#define _SSP1CON2_GCEN1_SIZE                                0x1
#define _SSP1CON2_GCEN1_LENGTH                              0x1
#define _SSP1CON2_GCEN1_MASK                                0x80
#define _SSP1CON2_RSEN1_POSN                                0x1
#define _SSP1CON2_RSEN1_POSITION                            0x1
#define _SSP1CON2_RSEN1_SIZE                                0x1
#define _SSP1CON2_RSEN1_LENGTH                              0x1
#define _SSP1CON2_RSEN1_MASK                                0x2
#define _SSP1CON2_PEN1_POSN                                 0x2
#define _SSP1CON2_PEN1_POSITION                             0x2
#define _SSP1CON2_PEN1_SIZE                                 0x1
#define _SSP1CON2_PEN1_LENGTH                               0x1
#define _SSP1CON2_PEN1_MASK                                 0x4
#define _SSP1CON2_RCEN1_POSN                                0x3
#define _SSP1CON2_RCEN1_POSITION                            0x3
#define _SSP1CON2_RCEN1_SIZE                                0x1
#define _SSP1CON2_RCEN1_LENGTH                              0x1
#define _SSP1CON2_RCEN1_MASK                                0x8
#define _SSP1CON2_ADMSK41_POSN                              0x4
#define _SSP1CON2_ADMSK41_POSITION                          0x4
#define _SSP1CON2_ADMSK41_SIZE                              0x1
#define _SSP1CON2_ADMSK41_LENGTH                            0x1
#define _SSP1CON2_ADMSK41_MASK                              0x10
#define _SSP1CON2_ADMSK51_POSN                              0x5
#define _SSP1CON2_ADMSK51_POSITION                          0x5
#define _SSP1CON2_ADMSK51_SIZE                              0x1
#define _SSP1CON2_ADMSK51_LENGTH                            0x1
#define _SSP1CON2_ADMSK51_MASK                              0x20
// alias bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned ADMSK1                 :1;
        unsigned ADMSK2                 :1;
        unsigned ADMSK3                 :1;
        unsigned ADMSK4                 :1;
        unsigned ADMSK5                 :1;
    };
    struct {
        unsigned SEN1                   :1;
        unsigned ADMSK11                :1;
        unsigned ADMSK21                :1;
        unsigned ADMSK31                :1;
        unsigned ACKEN1                 :1;
        unsigned ACKDT1                 :1;
        unsigned ACKSTAT1               :1;
        unsigned GCEN1                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned RSEN1                  :1;
        unsigned PEN1                   :1;
        unsigned RCEN1                  :1;
        unsigned ADMSK41                :1;
        unsigned ADMSK51                :1;
    };
} SSPCON2bits_t;
extern volatile SSPCON2bits_t SSPCON2bits __at(0xFC5);
// bitfield macros
#define _SSPCON2_SEN_POSN                                   0x0
#define _SSPCON2_SEN_POSITION                               0x0
#define _SSPCON2_SEN_SIZE                                   0x1
#define _SSPCON2_SEN_LENGTH                                 0x1
#define _SSPCON2_SEN_MASK                                   0x1
#define _SSPCON2_RSEN_POSN                                  0x1
#define _SSPCON2_RSEN_POSITION                              0x1
#define _SSPCON2_RSEN_SIZE                                  0x1
#define _SSPCON2_RSEN_LENGTH                                0x1
#define _SSPCON2_RSEN_MASK                                  0x2
#define _SSPCON2_PEN_POSN                                   0x2
#define _SSPCON2_PEN_POSITION                               0x2
#define _SSPCON2_PEN_SIZE                                   0x1
#define _SSPCON2_PEN_LENGTH                                 0x1
#define _SSPCON2_PEN_MASK                                   0x4
#define _SSPCON2_RCEN_POSN                                  0x3
#define _SSPCON2_RCEN_POSITION                              0x3
#define _SSPCON2_RCEN_SIZE                                  0x1
#define _SSPCON2_RCEN_LENGTH                                0x1
#define _SSPCON2_RCEN_MASK                                  0x8
#define _SSPCON2_ACKEN_POSN                                 0x4
#define _SSPCON2_ACKEN_POSITION                             0x4
#define _SSPCON2_ACKEN_SIZE                                 0x1
#define _SSPCON2_ACKEN_LENGTH                               0x1
#define _SSPCON2_ACKEN_MASK                                 0x10
#define _SSPCON2_ACKDT_POSN                                 0x5
#define _SSPCON2_ACKDT_POSITION                             0x5
#define _SSPCON2_ACKDT_SIZE                                 0x1
#define _SSPCON2_ACKDT_LENGTH                               0x1
#define _SSPCON2_ACKDT_MASK                                 0x20
#define _SSPCON2_ACKSTAT_POSN                               0x6
#define _SSPCON2_ACKSTAT_POSITION                           0x6
#define _SSPCON2_ACKSTAT_SIZE                               0x1
#define _SSPCON2_ACKSTAT_LENGTH                             0x1
#define _SSPCON2_ACKSTAT_MASK                               0x40
#define _SSPCON2_GCEN_POSN                                  0x7
#define _SSPCON2_GCEN_POSITION                              0x7
#define _SSPCON2_GCEN_SIZE                                  0x1
#define _SSPCON2_GCEN_LENGTH                                0x1
#define _SSPCON2_GCEN_MASK                                  0x80
#define _SSPCON2_ADMSK1_POSN                                0x1
#define _SSPCON2_ADMSK1_POSITION                            0x1
#define _SSPCON2_ADMSK1_SIZE                                0x1
#define _SSPCON2_ADMSK1_LENGTH                              0x1
#define _SSPCON2_ADMSK1_MASK                                0x2
#define _SSPCON2_ADMSK2_POSN                                0x2
#define _SSPCON2_ADMSK2_POSITION                            0x2
#define _SSPCON2_ADMSK2_SIZE                                0x1
#define _SSPCON2_ADMSK2_LENGTH                              0x1
#define _SSPCON2_ADMSK2_MASK                                0x4
#define _SSPCON2_ADMSK3_POSN                                0x3
#define _SSPCON2_ADMSK3_POSITION                            0x3
#define _SSPCON2_ADMSK3_SIZE                                0x1
#define _SSPCON2_ADMSK3_LENGTH                              0x1
#define _SSPCON2_ADMSK3_MASK                                0x8
#define _SSPCON2_ADMSK4_POSN                                0x4
#define _SSPCON2_ADMSK4_POSITION                            0x4
#define _SSPCON2_ADMSK4_SIZE                                0x1
#define _SSPCON2_ADMSK4_LENGTH                              0x1
#define _SSPCON2_ADMSK4_MASK                                0x10
#define _SSPCON2_ADMSK5_POSN                                0x5
#define _SSPCON2_ADMSK5_POSITION                            0x5
#define _SSPCON2_ADMSK5_SIZE                                0x1
#define _SSPCON2_ADMSK5_LENGTH                              0x1
#define _SSPCON2_ADMSK5_MASK                                0x20
#define _SSPCON2_SEN1_POSN                                  0x0
#define _SSPCON2_SEN1_POSITION                              0x0
#define _SSPCON2_SEN1_SIZE                                  0x1
#define _SSPCON2_SEN1_LENGTH                                0x1
#define _SSPCON2_SEN1_MASK                                  0x1
#define _SSPCON2_ADMSK11_POSN                               0x1
#define _SSPCON2_ADMSK11_POSITION                           0x1
#define _SSPCON2_ADMSK11_SIZE                               0x1
#define _SSPCON2_ADMSK11_LENGTH                             0x1
#define _SSPCON2_ADMSK11_MASK                               0x2
#define _SSPCON2_ADMSK21_POSN                               0x2
#define _SSPCON2_ADMSK21_POSITION                           0x2
#define _SSPCON2_ADMSK21_SIZE                               0x1
#define _SSPCON2_ADMSK21_LENGTH                             0x1
#define _SSPCON2_ADMSK21_MASK                               0x4
#define _SSPCON2_ADMSK31_POSN                               0x3
#define _SSPCON2_ADMSK31_POSITION                           0x3
#define _SSPCON2_ADMSK31_SIZE                               0x1
#define _SSPCON2_ADMSK31_LENGTH                             0x1
#define _SSPCON2_ADMSK31_MASK                               0x8
#define _SSPCON2_ACKEN1_POSN                                0x4
#define _SSPCON2_ACKEN1_POSITION                            0x4
#define _SSPCON2_ACKEN1_SIZE                                0x1
#define _SSPCON2_ACKEN1_LENGTH                              0x1
#define _SSPCON2_ACKEN1_MASK                                0x10
#define _SSPCON2_ACKDT1_POSN                                0x5
#define _SSPCON2_ACKDT1_POSITION                            0x5
#define _SSPCON2_ACKDT1_SIZE                                0x1
#define _SSPCON2_ACKDT1_LENGTH                              0x1
#define _SSPCON2_ACKDT1_MASK                                0x20
#define _SSPCON2_ACKSTAT1_POSN                              0x6
#define _SSPCON2_ACKSTAT1_POSITION                          0x6
#define _SSPCON2_ACKSTAT1_SIZE                              0x1
#define _SSPCON2_ACKSTAT1_LENGTH                            0x1
#define _SSPCON2_ACKSTAT1_MASK                              0x40
#define _SSPCON2_GCEN1_POSN                                 0x7
#define _SSPCON2_GCEN1_POSITION                             0x7
#define _SSPCON2_GCEN1_SIZE                                 0x1
#define _SSPCON2_GCEN1_LENGTH                               0x1
#define _SSPCON2_GCEN1_MASK                                 0x80
#define _SSPCON2_RSEN1_POSN                                 0x1
#define _SSPCON2_RSEN1_POSITION                             0x1
#define _SSPCON2_RSEN1_SIZE                                 0x1
#define _SSPCON2_RSEN1_LENGTH                               0x1
#define _SSPCON2_RSEN1_MASK                                 0x2
#define _SSPCON2_PEN1_POSN                                  0x2
#define _SSPCON2_PEN1_POSITION                              0x2
#define _SSPCON2_PEN1_SIZE                                  0x1
#define _SSPCON2_PEN1_LENGTH                                0x1
#define _SSPCON2_PEN1_MASK                                  0x4
#define _SSPCON2_RCEN1_POSN                                 0x3
#define _SSPCON2_RCEN1_POSITION                             0x3
#define _SSPCON2_RCEN1_SIZE                                 0x1
#define _SSPCON2_RCEN1_LENGTH                               0x1
#define _SSPCON2_RCEN1_MASK                                 0x8
#define _SSPCON2_ADMSK41_POSN                               0x4
#define _SSPCON2_ADMSK41_POSITION                           0x4
#define _SSPCON2_ADMSK41_SIZE                               0x1
#define _SSPCON2_ADMSK41_LENGTH                             0x1
#define _SSPCON2_ADMSK41_MASK                               0x10
#define _SSPCON2_ADMSK51_POSN                               0x5
#define _SSPCON2_ADMSK51_POSITION                           0x5
#define _SSPCON2_ADMSK51_SIZE                               0x1
#define _SSPCON2_ADMSK51_LENGTH                             0x1
#define _SSPCON2_ADMSK51_MASK                               0x20

// Register: SSP1CON1
#define SSP1CON1 SSP1CON1
extern volatile unsigned char           SSP1CON1            __at(0xFC6);
#ifndef _LIB_BUILD
asm("SSP1CON1 equ 0FC6h");
#endif
// aliases
extern volatile unsigned char           SSPCON1             __at(0xFC6);
#ifndef _LIB_BUILD
asm("SSPCON1 equ 0FC6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM                   :4;
    };
    struct {
        unsigned SSPM01                 :1;
        unsigned SSPM11                 :1;
        unsigned SSPM21                 :1;
        unsigned SSPM31                 :1;
        unsigned CKP1                   :1;
        unsigned SSPEN1                 :1;
        unsigned SSPOV1                 :1;
        unsigned WCOL1                  :1;
    };
} SSP1CON1bits_t;
extern volatile SSP1CON1bits_t SSP1CON1bits __at(0xFC6);
// bitfield macros
#define _SSP1CON1_SSPM0_POSN                                0x0
#define _SSP1CON1_SSPM0_POSITION                            0x0
#define _SSP1CON1_SSPM0_SIZE                                0x1
#define _SSP1CON1_SSPM0_LENGTH                              0x1
#define _SSP1CON1_SSPM0_MASK                                0x1
#define _SSP1CON1_SSPM1_POSN                                0x1
#define _SSP1CON1_SSPM1_POSITION                            0x1
#define _SSP1CON1_SSPM1_SIZE                                0x1
#define _SSP1CON1_SSPM1_LENGTH                              0x1
#define _SSP1CON1_SSPM1_MASK                                0x2
#define _SSP1CON1_SSPM2_POSN                                0x2
#define _SSP1CON1_SSPM2_POSITION                            0x2
#define _SSP1CON1_SSPM2_SIZE                                0x1
#define _SSP1CON1_SSPM2_LENGTH                              0x1
#define _SSP1CON1_SSPM2_MASK                                0x4
#define _SSP1CON1_SSPM3_POSN                                0x3
#define _SSP1CON1_SSPM3_POSITION                            0x3
#define _SSP1CON1_SSPM3_SIZE                                0x1
#define _SSP1CON1_SSPM3_LENGTH                              0x1
#define _SSP1CON1_SSPM3_MASK                                0x8
#define _SSP1CON1_CKP_POSN                                  0x4
#define _SSP1CON1_CKP_POSITION                              0x4
#define _SSP1CON1_CKP_SIZE                                  0x1
#define _SSP1CON1_CKP_LENGTH                                0x1
#define _SSP1CON1_CKP_MASK                                  0x10
#define _SSP1CON1_SSPEN_POSN                                0x5
#define _SSP1CON1_SSPEN_POSITION                            0x5
#define _SSP1CON1_SSPEN_SIZE                                0x1
#define _SSP1CON1_SSPEN_LENGTH                              0x1
#define _SSP1CON1_SSPEN_MASK                                0x20
#define _SSP1CON1_SSPOV_POSN                                0x6
#define _SSP1CON1_SSPOV_POSITION                            0x6
#define _SSP1CON1_SSPOV_SIZE                                0x1
#define _SSP1CON1_SSPOV_LENGTH                              0x1
#define _SSP1CON1_SSPOV_MASK                                0x40
#define _SSP1CON1_WCOL_POSN                                 0x7
#define _SSP1CON1_WCOL_POSITION                             0x7
#define _SSP1CON1_WCOL_SIZE                                 0x1
#define _SSP1CON1_WCOL_LENGTH                               0x1
#define _SSP1CON1_WCOL_MASK                                 0x80
#define _SSP1CON1_SSPM_POSN                                 0x0
#define _SSP1CON1_SSPM_POSITION                             0x0
#define _SSP1CON1_SSPM_SIZE                                 0x4
#define _SSP1CON1_SSPM_LENGTH                               0x4
#define _SSP1CON1_SSPM_MASK                                 0xF
#define _SSP1CON1_SSPM01_POSN                               0x0
#define _SSP1CON1_SSPM01_POSITION                           0x0
#define _SSP1CON1_SSPM01_SIZE                               0x1
#define _SSP1CON1_SSPM01_LENGTH                             0x1
#define _SSP1CON1_SSPM01_MASK                               0x1
#define _SSP1CON1_SSPM11_POSN                               0x1
#define _SSP1CON1_SSPM11_POSITION                           0x1
#define _SSP1CON1_SSPM11_SIZE                               0x1
#define _SSP1CON1_SSPM11_LENGTH                             0x1
#define _SSP1CON1_SSPM11_MASK                               0x2
#define _SSP1CON1_SSPM21_POSN                               0x2
#define _SSP1CON1_SSPM21_POSITION                           0x2
#define _SSP1CON1_SSPM21_SIZE                               0x1
#define _SSP1CON1_SSPM21_LENGTH                             0x1
#define _SSP1CON1_SSPM21_MASK                               0x4
#define _SSP1CON1_SSPM31_POSN                               0x3
#define _SSP1CON1_SSPM31_POSITION                           0x3
#define _SSP1CON1_SSPM31_SIZE                               0x1
#define _SSP1CON1_SSPM31_LENGTH                             0x1
#define _SSP1CON1_SSPM31_MASK                               0x8
#define _SSP1CON1_CKP1_POSN                                 0x4
#define _SSP1CON1_CKP1_POSITION                             0x4
#define _SSP1CON1_CKP1_SIZE                                 0x1
#define _SSP1CON1_CKP1_LENGTH                               0x1
#define _SSP1CON1_CKP1_MASK                                 0x10
#define _SSP1CON1_SSPEN1_POSN                               0x5
#define _SSP1CON1_SSPEN1_POSITION                           0x5
#define _SSP1CON1_SSPEN1_SIZE                               0x1
#define _SSP1CON1_SSPEN1_LENGTH                             0x1
#define _SSP1CON1_SSPEN1_MASK                               0x20
#define _SSP1CON1_SSPOV1_POSN                               0x6
#define _SSP1CON1_SSPOV1_POSITION                           0x6
#define _SSP1CON1_SSPOV1_SIZE                               0x1
#define _SSP1CON1_SSPOV1_LENGTH                             0x1
#define _SSP1CON1_SSPOV1_MASK                               0x40
#define _SSP1CON1_WCOL1_POSN                                0x7
#define _SSP1CON1_WCOL1_POSITION                            0x7
#define _SSP1CON1_WCOL1_SIZE                                0x1
#define _SSP1CON1_WCOL1_LENGTH                              0x1
#define _SSP1CON1_WCOL1_MASK                                0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM                   :4;
    };
    struct {
        unsigned SSPM01                 :1;
        unsigned SSPM11                 :1;
        unsigned SSPM21                 :1;
        unsigned SSPM31                 :1;
        unsigned CKP1                   :1;
        unsigned SSPEN1                 :1;
        unsigned SSPOV1                 :1;
        unsigned WCOL1                  :1;
    };
} SSPCON1bits_t;
extern volatile SSPCON1bits_t SSPCON1bits __at(0xFC6);
// bitfield macros
#define _SSPCON1_SSPM0_POSN                                 0x0
#define _SSPCON1_SSPM0_POSITION                             0x0
#define _SSPCON1_SSPM0_SIZE                                 0x1
#define _SSPCON1_SSPM0_LENGTH                               0x1
#define _SSPCON1_SSPM0_MASK                                 0x1
#define _SSPCON1_SSPM1_POSN                                 0x1
#define _SSPCON1_SSPM1_POSITION                             0x1
#define _SSPCON1_SSPM1_SIZE                                 0x1
#define _SSPCON1_SSPM1_LENGTH                               0x1
#define _SSPCON1_SSPM1_MASK                                 0x2
#define _SSPCON1_SSPM2_POSN                                 0x2
#define _SSPCON1_SSPM2_POSITION                             0x2
#define _SSPCON1_SSPM2_SIZE                                 0x1
#define _SSPCON1_SSPM2_LENGTH                               0x1
#define _SSPCON1_SSPM2_MASK                                 0x4
#define _SSPCON1_SSPM3_POSN                                 0x3
#define _SSPCON1_SSPM3_POSITION                             0x3
#define _SSPCON1_SSPM3_SIZE                                 0x1
#define _SSPCON1_SSPM3_LENGTH                               0x1
#define _SSPCON1_SSPM3_MASK                                 0x8
#define _SSPCON1_CKP_POSN                                   0x4
#define _SSPCON1_CKP_POSITION                               0x4
#define _SSPCON1_CKP_SIZE                                   0x1
#define _SSPCON1_CKP_LENGTH                                 0x1
#define _SSPCON1_CKP_MASK                                   0x10
#define _SSPCON1_SSPEN_POSN                                 0x5
#define _SSPCON1_SSPEN_POSITION                             0x5
#define _SSPCON1_SSPEN_SIZE                                 0x1
#define _SSPCON1_SSPEN_LENGTH                               0x1
#define _SSPCON1_SSPEN_MASK                                 0x20
#define _SSPCON1_SSPOV_POSN                                 0x6
#define _SSPCON1_SSPOV_POSITION                             0x6
#define _SSPCON1_SSPOV_SIZE                                 0x1
#define _SSPCON1_SSPOV_LENGTH                               0x1
#define _SSPCON1_SSPOV_MASK                                 0x40
#define _SSPCON1_WCOL_POSN                                  0x7
#define _SSPCON1_WCOL_POSITION                              0x7
#define _SSPCON1_WCOL_SIZE                                  0x1
#define _SSPCON1_WCOL_LENGTH                                0x1
#define _SSPCON1_WCOL_MASK                                  0x80
#define _SSPCON1_SSPM_POSN                                  0x0
#define _SSPCON1_SSPM_POSITION                              0x0
#define _SSPCON1_SSPM_SIZE                                  0x4
#define _SSPCON1_SSPM_LENGTH                                0x4
#define _SSPCON1_SSPM_MASK                                  0xF
#define _SSPCON1_SSPM01_POSN                                0x0
#define _SSPCON1_SSPM01_POSITION                            0x0
#define _SSPCON1_SSPM01_SIZE                                0x1
#define _SSPCON1_SSPM01_LENGTH                              0x1
#define _SSPCON1_SSPM01_MASK                                0x1
#define _SSPCON1_SSPM11_POSN                                0x1
#define _SSPCON1_SSPM11_POSITION                            0x1
#define _SSPCON1_SSPM11_SIZE                                0x1
#define _SSPCON1_SSPM11_LENGTH                              0x1
#define _SSPCON1_SSPM11_MASK                                0x2
#define _SSPCON1_SSPM21_POSN                                0x2
#define _SSPCON1_SSPM21_POSITION                            0x2
#define _SSPCON1_SSPM21_SIZE                                0x1
#define _SSPCON1_SSPM21_LENGTH                              0x1
#define _SSPCON1_SSPM21_MASK                                0x4
#define _SSPCON1_SSPM31_POSN                                0x3
#define _SSPCON1_SSPM31_POSITION                            0x3
#define _SSPCON1_SSPM31_SIZE                                0x1
#define _SSPCON1_SSPM31_LENGTH                              0x1
#define _SSPCON1_SSPM31_MASK                                0x8
#define _SSPCON1_CKP1_POSN                                  0x4
#define _SSPCON1_CKP1_POSITION                              0x4
#define _SSPCON1_CKP1_SIZE                                  0x1
#define _SSPCON1_CKP1_LENGTH                                0x1
#define _SSPCON1_CKP1_MASK                                  0x10
#define _SSPCON1_SSPEN1_POSN                                0x5
#define _SSPCON1_SSPEN1_POSITION                            0x5
#define _SSPCON1_SSPEN1_SIZE                                0x1
#define _SSPCON1_SSPEN1_LENGTH                              0x1
#define _SSPCON1_SSPEN1_MASK                                0x20
#define _SSPCON1_SSPOV1_POSN                                0x6
#define _SSPCON1_SSPOV1_POSITION                            0x6
#define _SSPCON1_SSPOV1_SIZE                                0x1
#define _SSPCON1_SSPOV1_LENGTH                              0x1
#define _SSPCON1_SSPOV1_MASK                                0x40
#define _SSPCON1_WCOL1_POSN                                 0x7
#define _SSPCON1_WCOL1_POSITION                             0x7
#define _SSPCON1_WCOL1_SIZE                                 0x1
#define _SSPCON1_WCOL1_LENGTH                               0x1
#define _SSPCON1_WCOL1_MASK                                 0x80

// Register: SSP1STAT
#define SSP1STAT SSP1STAT
extern volatile unsigned char           SSP1STAT            __at(0xFC7);
#ifndef _LIB_BUILD
asm("SSP1STAT equ 0FC7h");
#endif
// aliases
extern volatile unsigned char           SSPSTAT             __at(0xFC7);
#ifndef _LIB_BUILD
asm("SSPSTAT equ 0FC7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned R_NOT_W                :1;
    };
    struct {
        unsigned                        :5;
        unsigned D_NOT_A                :1;
    };
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned R                      :1;
        unsigned                        :2;
        unsigned D                      :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_W                    :1;
        unsigned                        :2;
        unsigned D_A                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned nW                     :1;
        unsigned                        :2;
        unsigned nA                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_WRITE              :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_ADDRESS            :1;
    };
    struct {
        unsigned                        :2;
        unsigned nWRITE                 :1;
        unsigned                        :2;
        unsigned nADDRESS               :1;
    };
    struct {
        unsigned                        :2;
        unsigned READ_WRITE             :1;
        unsigned                        :2;
        unsigned DATA_ADDRESS           :1;
    };
    struct {
        unsigned                        :2;
        unsigned I2C_READ               :1;
        unsigned I2C_START              :1;
        unsigned I2C_STOP               :1;
        unsigned I2C_DAT                :1;
    };
    struct {
        unsigned BF1                    :1;
        unsigned UA1                    :1;
        unsigned RW                     :1;
        unsigned START                  :1;
        unsigned STOP                   :1;
        unsigned DA                     :1;
        unsigned CKE1                   :1;
        unsigned SMP1                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned RW1                    :1;
        unsigned START1                 :1;
        unsigned STOP1                  :1;
        unsigned DA1                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_W                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_A                  :1;
    };
} SSP1STATbits_t;
extern volatile SSP1STATbits_t SSP1STATbits __at(0xFC7);
// bitfield macros
#define _SSP1STAT_R_NOT_W_POSN                              0x2
#define _SSP1STAT_R_NOT_W_POSITION                          0x2
#define _SSP1STAT_R_NOT_W_SIZE                              0x1
#define _SSP1STAT_R_NOT_W_LENGTH                            0x1
#define _SSP1STAT_R_NOT_W_MASK                              0x4
#define _SSP1STAT_D_NOT_A_POSN                              0x5
#define _SSP1STAT_D_NOT_A_POSITION                          0x5
#define _SSP1STAT_D_NOT_A_SIZE                              0x1
#define _SSP1STAT_D_NOT_A_LENGTH                            0x1
#define _SSP1STAT_D_NOT_A_MASK                              0x20
#define _SSP1STAT_BF_POSN                                   0x0
#define _SSP1STAT_BF_POSITION                               0x0
#define _SSP1STAT_BF_SIZE                                   0x1
#define _SSP1STAT_BF_LENGTH                                 0x1
#define _SSP1STAT_BF_MASK                                   0x1
#define _SSP1STAT_UA_POSN                                   0x1
#define _SSP1STAT_UA_POSITION                               0x1
#define _SSP1STAT_UA_SIZE                                   0x1
#define _SSP1STAT_UA_LENGTH                                 0x1
#define _SSP1STAT_UA_MASK                                   0x2
#define _SSP1STAT_R_nW_POSN                                 0x2
#define _SSP1STAT_R_nW_POSITION                             0x2
#define _SSP1STAT_R_nW_SIZE                                 0x1
#define _SSP1STAT_R_nW_LENGTH                               0x1
#define _SSP1STAT_R_nW_MASK                                 0x4
#define _SSP1STAT_S_POSN                                    0x3
#define _SSP1STAT_S_POSITION                                0x3
#define _SSP1STAT_S_SIZE                                    0x1
#define _SSP1STAT_S_LENGTH                                  0x1
#define _SSP1STAT_S_MASK                                    0x8
#define _SSP1STAT_P_POSN                                    0x4
#define _SSP1STAT_P_POSITION                                0x4
#define _SSP1STAT_P_SIZE                                    0x1
#define _SSP1STAT_P_LENGTH                                  0x1
#define _SSP1STAT_P_MASK                                    0x10
#define _SSP1STAT_D_nA_POSN                                 0x5
#define _SSP1STAT_D_nA_POSITION                             0x5
#define _SSP1STAT_D_nA_SIZE                                 0x1
#define _SSP1STAT_D_nA_LENGTH                               0x1
#define _SSP1STAT_D_nA_MASK                                 0x20
#define _SSP1STAT_CKE_POSN                                  0x6
#define _SSP1STAT_CKE_POSITION                              0x6
#define _SSP1STAT_CKE_SIZE                                  0x1
#define _SSP1STAT_CKE_LENGTH                                0x1
#define _SSP1STAT_CKE_MASK                                  0x40
#define _SSP1STAT_SMP_POSN                                  0x7
#define _SSP1STAT_SMP_POSITION                              0x7
#define _SSP1STAT_SMP_SIZE                                  0x1
#define _SSP1STAT_SMP_LENGTH                                0x1
#define _SSP1STAT_SMP_MASK                                  0x80
#define _SSP1STAT_R_POSN                                    0x2
#define _SSP1STAT_R_POSITION                                0x2
#define _SSP1STAT_R_SIZE                                    0x1
#define _SSP1STAT_R_LENGTH                                  0x1
#define _SSP1STAT_R_MASK                                    0x4
#define _SSP1STAT_D_POSN                                    0x5
#define _SSP1STAT_D_POSITION                                0x5
#define _SSP1STAT_D_SIZE                                    0x1
#define _SSP1STAT_D_LENGTH                                  0x1
#define _SSP1STAT_D_MASK                                    0x20
#define _SSP1STAT_R_W_POSN                                  0x2
#define _SSP1STAT_R_W_POSITION                              0x2
#define _SSP1STAT_R_W_SIZE                                  0x1
#define _SSP1STAT_R_W_LENGTH                                0x1
#define _SSP1STAT_R_W_MASK                                  0x4
#define _SSP1STAT_D_A_POSN                                  0x5
#define _SSP1STAT_D_A_POSITION                              0x5
#define _SSP1STAT_D_A_SIZE                                  0x1
#define _SSP1STAT_D_A_LENGTH                                0x1
#define _SSP1STAT_D_A_MASK                                  0x20
#define _SSP1STAT_nW_POSN                                   0x2
#define _SSP1STAT_nW_POSITION                               0x2
#define _SSP1STAT_nW_SIZE                                   0x1
#define _SSP1STAT_nW_LENGTH                                 0x1
#define _SSP1STAT_nW_MASK                                   0x4
#define _SSP1STAT_nA_POSN                                   0x5
#define _SSP1STAT_nA_POSITION                               0x5
#define _SSP1STAT_nA_SIZE                                   0x1
#define _SSP1STAT_nA_LENGTH                                 0x1
#define _SSP1STAT_nA_MASK                                   0x20
#define _SSP1STAT_NOT_WRITE_POSN                            0x2
#define _SSP1STAT_NOT_WRITE_POSITION                        0x2
#define _SSP1STAT_NOT_WRITE_SIZE                            0x1
#define _SSP1STAT_NOT_WRITE_LENGTH                          0x1
#define _SSP1STAT_NOT_WRITE_MASK                            0x4
#define _SSP1STAT_NOT_ADDRESS_POSN                          0x5
#define _SSP1STAT_NOT_ADDRESS_POSITION                      0x5
#define _SSP1STAT_NOT_ADDRESS_SIZE                          0x1
#define _SSP1STAT_NOT_ADDRESS_LENGTH                        0x1
#define _SSP1STAT_NOT_ADDRESS_MASK                          0x20
#define _SSP1STAT_nWRITE_POSN                               0x2
#define _SSP1STAT_nWRITE_POSITION                           0x2
#define _SSP1STAT_nWRITE_SIZE                               0x1
#define _SSP1STAT_nWRITE_LENGTH                             0x1
#define _SSP1STAT_nWRITE_MASK                               0x4
#define _SSP1STAT_nADDRESS_POSN                             0x5
#define _SSP1STAT_nADDRESS_POSITION                         0x5
#define _SSP1STAT_nADDRESS_SIZE                             0x1
#define _SSP1STAT_nADDRESS_LENGTH                           0x1
#define _SSP1STAT_nADDRESS_MASK                             0x20
#define _SSP1STAT_READ_WRITE_POSN                           0x2
#define _SSP1STAT_READ_WRITE_POSITION                       0x2
#define _SSP1STAT_READ_WRITE_SIZE                           0x1
#define _SSP1STAT_READ_WRITE_LENGTH                         0x1
#define _SSP1STAT_READ_WRITE_MASK                           0x4
#define _SSP1STAT_DATA_ADDRESS_POSN                         0x5
#define _SSP1STAT_DATA_ADDRESS_POSITION                     0x5
#define _SSP1STAT_DATA_ADDRESS_SIZE                         0x1
#define _SSP1STAT_DATA_ADDRESS_LENGTH                       0x1
#define _SSP1STAT_DATA_ADDRESS_MASK                         0x20
#define _SSP1STAT_I2C_READ_POSN                             0x2
#define _SSP1STAT_I2C_READ_POSITION                         0x2
#define _SSP1STAT_I2C_READ_SIZE                             0x1
#define _SSP1STAT_I2C_READ_LENGTH                           0x1
#define _SSP1STAT_I2C_READ_MASK                             0x4
#define _SSP1STAT_I2C_START_POSN                            0x3
#define _SSP1STAT_I2C_START_POSITION                        0x3
#define _SSP1STAT_I2C_START_SIZE                            0x1
#define _SSP1STAT_I2C_START_LENGTH                          0x1
#define _SSP1STAT_I2C_START_MASK                            0x8
#define _SSP1STAT_I2C_STOP_POSN                             0x4
#define _SSP1STAT_I2C_STOP_POSITION                         0x4
#define _SSP1STAT_I2C_STOP_SIZE                             0x1
#define _SSP1STAT_I2C_STOP_LENGTH                           0x1
#define _SSP1STAT_I2C_STOP_MASK                             0x10
#define _SSP1STAT_I2C_DAT_POSN                              0x5
#define _SSP1STAT_I2C_DAT_POSITION                          0x5
#define _SSP1STAT_I2C_DAT_SIZE                              0x1
#define _SSP1STAT_I2C_DAT_LENGTH                            0x1
#define _SSP1STAT_I2C_DAT_MASK                              0x20
#define _SSP1STAT_BF1_POSN                                  0x0
#define _SSP1STAT_BF1_POSITION                              0x0
#define _SSP1STAT_BF1_SIZE                                  0x1
#define _SSP1STAT_BF1_LENGTH                                0x1
#define _SSP1STAT_BF1_MASK                                  0x1
#define _SSP1STAT_UA1_POSN                                  0x1
#define _SSP1STAT_UA1_POSITION                              0x1
#define _SSP1STAT_UA1_SIZE                                  0x1
#define _SSP1STAT_UA1_LENGTH                                0x1
#define _SSP1STAT_UA1_MASK                                  0x2
#define _SSP1STAT_RW_POSN                                   0x2
#define _SSP1STAT_RW_POSITION                               0x2
#define _SSP1STAT_RW_SIZE                                   0x1
#define _SSP1STAT_RW_LENGTH                                 0x1
#define _SSP1STAT_RW_MASK                                   0x4
#define _SSP1STAT_START_POSN                                0x3
#define _SSP1STAT_START_POSITION                            0x3
#define _SSP1STAT_START_SIZE                                0x1
#define _SSP1STAT_START_LENGTH                              0x1
#define _SSP1STAT_START_MASK                                0x8
#define _SSP1STAT_STOP_POSN                                 0x4
#define _SSP1STAT_STOP_POSITION                             0x4
#define _SSP1STAT_STOP_SIZE                                 0x1
#define _SSP1STAT_STOP_LENGTH                               0x1
#define _SSP1STAT_STOP_MASK                                 0x10
#define _SSP1STAT_DA_POSN                                   0x5
#define _SSP1STAT_DA_POSITION                               0x5
#define _SSP1STAT_DA_SIZE                                   0x1
#define _SSP1STAT_DA_LENGTH                                 0x1
#define _SSP1STAT_DA_MASK                                   0x20
#define _SSP1STAT_CKE1_POSN                                 0x6
#define _SSP1STAT_CKE1_POSITION                             0x6
#define _SSP1STAT_CKE1_SIZE                                 0x1
#define _SSP1STAT_CKE1_LENGTH                               0x1
#define _SSP1STAT_CKE1_MASK                                 0x40
#define _SSP1STAT_SMP1_POSN                                 0x7
#define _SSP1STAT_SMP1_POSITION                             0x7
#define _SSP1STAT_SMP1_SIZE                                 0x1
#define _SSP1STAT_SMP1_LENGTH                               0x1
#define _SSP1STAT_SMP1_MASK                                 0x80
#define _SSP1STAT_RW1_POSN                                  0x2
#define _SSP1STAT_RW1_POSITION                              0x2
#define _SSP1STAT_RW1_SIZE                                  0x1
#define _SSP1STAT_RW1_LENGTH                                0x1
#define _SSP1STAT_RW1_MASK                                  0x4
#define _SSP1STAT_START1_POSN                               0x3
#define _SSP1STAT_START1_POSITION                           0x3
#define _SSP1STAT_START1_SIZE                               0x1
#define _SSP1STAT_START1_LENGTH                             0x1
#define _SSP1STAT_START1_MASK                               0x8
#define _SSP1STAT_STOP1_POSN                                0x4
#define _SSP1STAT_STOP1_POSITION                            0x4
#define _SSP1STAT_STOP1_SIZE                                0x1
#define _SSP1STAT_STOP1_LENGTH                              0x1
#define _SSP1STAT_STOP1_MASK                                0x10
#define _SSP1STAT_DA1_POSN                                  0x5
#define _SSP1STAT_DA1_POSITION                              0x5
#define _SSP1STAT_DA1_SIZE                                  0x1
#define _SSP1STAT_DA1_LENGTH                                0x1
#define _SSP1STAT_DA1_MASK                                  0x20
#define _SSP1STAT_NOT_W_POSN                                0x2
#define _SSP1STAT_NOT_W_POSITION                            0x2
#define _SSP1STAT_NOT_W_SIZE                                0x1
#define _SSP1STAT_NOT_W_LENGTH                              0x1
#define _SSP1STAT_NOT_W_MASK                                0x4
#define _SSP1STAT_NOT_A_POSN                                0x5
#define _SSP1STAT_NOT_A_POSITION                            0x5
#define _SSP1STAT_NOT_A_SIZE                                0x1
#define _SSP1STAT_NOT_A_LENGTH                              0x1
#define _SSP1STAT_NOT_A_MASK                                0x20
// alias bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned R_NOT_W                :1;
    };
    struct {
        unsigned                        :5;
        unsigned D_NOT_A                :1;
    };
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned R                      :1;
        unsigned                        :2;
        unsigned D                      :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_W                    :1;
        unsigned                        :2;
        unsigned D_A                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned nW                     :1;
        unsigned                        :2;
        unsigned nA                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_WRITE              :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_ADDRESS            :1;
    };
    struct {
        unsigned                        :2;
        unsigned nWRITE                 :1;
        unsigned                        :2;
        unsigned nADDRESS               :1;
    };
    struct {
        unsigned                        :2;
        unsigned READ_WRITE             :1;
        unsigned                        :2;
        unsigned DATA_ADDRESS           :1;
    };
    struct {
        unsigned                        :2;
        unsigned I2C_READ               :1;
        unsigned I2C_START              :1;
        unsigned I2C_STOP               :1;
        unsigned I2C_DAT                :1;
    };
    struct {
        unsigned BF1                    :1;
        unsigned UA1                    :1;
        unsigned RW                     :1;
        unsigned START                  :1;
        unsigned STOP                   :1;
        unsigned DA                     :1;
        unsigned CKE1                   :1;
        unsigned SMP1                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned RW1                    :1;
        unsigned START1                 :1;
        unsigned STOP1                  :1;
        unsigned DA1                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_W                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_A                  :1;
    };
} SSPSTATbits_t;
extern volatile SSPSTATbits_t SSPSTATbits __at(0xFC7);
// bitfield macros
#define _SSPSTAT_R_NOT_W_POSN                               0x2
#define _SSPSTAT_R_NOT_W_POSITION                           0x2
#define _SSPSTAT_R_NOT_W_SIZE                               0x1
#define _SSPSTAT_R_NOT_W_LENGTH                             0x1
#define _SSPSTAT_R_NOT_W_MASK                               0x4
#define _SSPSTAT_D_NOT_A_POSN                               0x5
#define _SSPSTAT_D_NOT_A_POSITION                           0x5
#define _SSPSTAT_D_NOT_A_SIZE                               0x1
#define _SSPSTAT_D_NOT_A_LENGTH                             0x1
#define _SSPSTAT_D_NOT_A_MASK                               0x20
#define _SSPSTAT_BF_POSN                                    0x0
#define _SSPSTAT_BF_POSITION                                0x0
#define _SSPSTAT_BF_SIZE                                    0x1
#define _SSPSTAT_BF_LENGTH                                  0x1
#define _SSPSTAT_BF_MASK                                    0x1
#define _SSPSTAT_UA_POSN                                    0x1
#define _SSPSTAT_UA_POSITION                                0x1
#define _SSPSTAT_UA_SIZE                                    0x1
#define _SSPSTAT_UA_LENGTH                                  0x1
#define _SSPSTAT_UA_MASK                                    0x2
#define _SSPSTAT_R_nW_POSN                                  0x2
#define _SSPSTAT_R_nW_POSITION                              0x2
#define _SSPSTAT_R_nW_SIZE                                  0x1
#define _SSPSTAT_R_nW_LENGTH                                0x1
#define _SSPSTAT_R_nW_MASK                                  0x4
#define _SSPSTAT_S_POSN                                     0x3
#define _SSPSTAT_S_POSITION                                 0x3
#define _SSPSTAT_S_SIZE                                     0x1
#define _SSPSTAT_S_LENGTH                                   0x1
#define _SSPSTAT_S_MASK                                     0x8
#define _SSPSTAT_P_POSN                                     0x4
#define _SSPSTAT_P_POSITION                                 0x4
#define _SSPSTAT_P_SIZE                                     0x1
#define _SSPSTAT_P_LENGTH                                   0x1
#define _SSPSTAT_P_MASK                                     0x10
#define _SSPSTAT_D_nA_POSN                                  0x5
#define _SSPSTAT_D_nA_POSITION                              0x5
#define _SSPSTAT_D_nA_SIZE                                  0x1
#define _SSPSTAT_D_nA_LENGTH                                0x1
#define _SSPSTAT_D_nA_MASK                                  0x20
#define _SSPSTAT_CKE_POSN                                   0x6
#define _SSPSTAT_CKE_POSITION                               0x6
#define _SSPSTAT_CKE_SIZE                                   0x1
#define _SSPSTAT_CKE_LENGTH                                 0x1
#define _SSPSTAT_CKE_MASK                                   0x40
#define _SSPSTAT_SMP_POSN                                   0x7
#define _SSPSTAT_SMP_POSITION                               0x7
#define _SSPSTAT_SMP_SIZE                                   0x1
#define _SSPSTAT_SMP_LENGTH                                 0x1
#define _SSPSTAT_SMP_MASK                                   0x80
#define _SSPSTAT_R_POSN                                     0x2
#define _SSPSTAT_R_POSITION                                 0x2
#define _SSPSTAT_R_SIZE                                     0x1
#define _SSPSTAT_R_LENGTH                                   0x1
#define _SSPSTAT_R_MASK                                     0x4
#define _SSPSTAT_D_POSN                                     0x5
#define _SSPSTAT_D_POSITION                                 0x5
#define _SSPSTAT_D_SIZE                                     0x1
#define _SSPSTAT_D_LENGTH                                   0x1
#define _SSPSTAT_D_MASK                                     0x20
#define _SSPSTAT_R_W_POSN                                   0x2
#define _SSPSTAT_R_W_POSITION                               0x2
#define _SSPSTAT_R_W_SIZE                                   0x1
#define _SSPSTAT_R_W_LENGTH                                 0x1
#define _SSPSTAT_R_W_MASK                                   0x4
#define _SSPSTAT_D_A_POSN                                   0x5
#define _SSPSTAT_D_A_POSITION                               0x5
#define _SSPSTAT_D_A_SIZE                                   0x1
#define _SSPSTAT_D_A_LENGTH                                 0x1
#define _SSPSTAT_D_A_MASK                                   0x20
#define _SSPSTAT_nW_POSN                                    0x2
#define _SSPSTAT_nW_POSITION                                0x2
#define _SSPSTAT_nW_SIZE                                    0x1
#define _SSPSTAT_nW_LENGTH                                  0x1
#define _SSPSTAT_nW_MASK                                    0x4
#define _SSPSTAT_nA_POSN                                    0x5
#define _SSPSTAT_nA_POSITION                                0x5
#define _SSPSTAT_nA_SIZE                                    0x1
#define _SSPSTAT_nA_LENGTH                                  0x1
#define _SSPSTAT_nA_MASK                                    0x20
#define _SSPSTAT_NOT_WRITE_POSN                             0x2
#define _SSPSTAT_NOT_WRITE_POSITION                         0x2
#define _SSPSTAT_NOT_WRITE_SIZE                             0x1
#define _SSPSTAT_NOT_WRITE_LENGTH                           0x1
#define _SSPSTAT_NOT_WRITE_MASK                             0x4
#define _SSPSTAT_NOT_ADDRESS_POSN                           0x5
#define _SSPSTAT_NOT_ADDRESS_POSITION                       0x5
#define _SSPSTAT_NOT_ADDRESS_SIZE                           0x1
#define _SSPSTAT_NOT_ADDRESS_LENGTH                         0x1
#define _SSPSTAT_NOT_ADDRESS_MASK                           0x20
#define _SSPSTAT_nWRITE_POSN                                0x2
#define _SSPSTAT_nWRITE_POSITION                            0x2
#define _SSPSTAT_nWRITE_SIZE                                0x1
#define _SSPSTAT_nWRITE_LENGTH                              0x1
#define _SSPSTAT_nWRITE_MASK                                0x4
#define _SSPSTAT_nADDRESS_POSN                              0x5
#define _SSPSTAT_nADDRESS_POSITION                          0x5
#define _SSPSTAT_nADDRESS_SIZE                              0x1
#define _SSPSTAT_nADDRESS_LENGTH                            0x1
#define _SSPSTAT_nADDRESS_MASK                              0x20
#define _SSPSTAT_READ_WRITE_POSN                            0x2
#define _SSPSTAT_READ_WRITE_POSITION                        0x2
#define _SSPSTAT_READ_WRITE_SIZE                            0x1
#define _SSPSTAT_READ_WRITE_LENGTH                          0x1
#define _SSPSTAT_READ_WRITE_MASK                            0x4
#define _SSPSTAT_DATA_ADDRESS_POSN                          0x5
#define _SSPSTAT_DATA_ADDRESS_POSITION                      0x5
#define _SSPSTAT_DATA_ADDRESS_SIZE                          0x1
#define _SSPSTAT_DATA_ADDRESS_LENGTH                        0x1
#define _SSPSTAT_DATA_ADDRESS_MASK                          0x20
#define _SSPSTAT_I2C_READ_POSN                              0x2
#define _SSPSTAT_I2C_READ_POSITION                          0x2
#define _SSPSTAT_I2C_READ_SIZE                              0x1
#define _SSPSTAT_I2C_READ_LENGTH                            0x1
#define _SSPSTAT_I2C_READ_MASK                              0x4
#define _SSPSTAT_I2C_START_POSN                             0x3
#define _SSPSTAT_I2C_START_POSITION                         0x3
#define _SSPSTAT_I2C_START_SIZE                             0x1
#define _SSPSTAT_I2C_START_LENGTH                           0x1
#define _SSPSTAT_I2C_START_MASK                             0x8
#define _SSPSTAT_I2C_STOP_POSN                              0x4
#define _SSPSTAT_I2C_STOP_POSITION                          0x4
#define _SSPSTAT_I2C_STOP_SIZE                              0x1
#define _SSPSTAT_I2C_STOP_LENGTH                            0x1
#define _SSPSTAT_I2C_STOP_MASK                              0x10
#define _SSPSTAT_I2C_DAT_POSN                               0x5
#define _SSPSTAT_I2C_DAT_POSITION                           0x5
#define _SSPSTAT_I2C_DAT_SIZE                               0x1
#define _SSPSTAT_I2C_DAT_LENGTH                             0x1
#define _SSPSTAT_I2C_DAT_MASK                               0x20
#define _SSPSTAT_BF1_POSN                                   0x0
#define _SSPSTAT_BF1_POSITION                               0x0
#define _SSPSTAT_BF1_SIZE                                   0x1
#define _SSPSTAT_BF1_LENGTH                                 0x1
#define _SSPSTAT_BF1_MASK                                   0x1
#define _SSPSTAT_UA1_POSN                                   0x1
#define _SSPSTAT_UA1_POSITION                               0x1
#define _SSPSTAT_UA1_SIZE                                   0x1
#define _SSPSTAT_UA1_LENGTH                                 0x1
#define _SSPSTAT_UA1_MASK                                   0x2
#define _SSPSTAT_RW_POSN                                    0x2
#define _SSPSTAT_RW_POSITION                                0x2
#define _SSPSTAT_RW_SIZE                                    0x1
#define _SSPSTAT_RW_LENGTH                                  0x1
#define _SSPSTAT_RW_MASK                                    0x4
#define _SSPSTAT_START_POSN                                 0x3
#define _SSPSTAT_START_POSITION                             0x3
#define _SSPSTAT_START_SIZE                                 0x1
#define _SSPSTAT_START_LENGTH                               0x1
#define _SSPSTAT_START_MASK                                 0x8
#define _SSPSTAT_STOP_POSN                                  0x4
#define _SSPSTAT_STOP_POSITION                              0x4
#define _SSPSTAT_STOP_SIZE                                  0x1
#define _SSPSTAT_STOP_LENGTH                                0x1
#define _SSPSTAT_STOP_MASK                                  0x10
#define _SSPSTAT_DA_POSN                                    0x5
#define _SSPSTAT_DA_POSITION                                0x5
#define _SSPSTAT_DA_SIZE                                    0x1
#define _SSPSTAT_DA_LENGTH                                  0x1
#define _SSPSTAT_DA_MASK                                    0x20
#define _SSPSTAT_CKE1_POSN                                  0x6
#define _SSPSTAT_CKE1_POSITION                              0x6
#define _SSPSTAT_CKE1_SIZE                                  0x1
#define _SSPSTAT_CKE1_LENGTH                                0x1
#define _SSPSTAT_CKE1_MASK                                  0x40
#define _SSPSTAT_SMP1_POSN                                  0x7
#define _SSPSTAT_SMP1_POSITION                              0x7
#define _SSPSTAT_SMP1_SIZE                                  0x1
#define _SSPSTAT_SMP1_LENGTH                                0x1
#define _SSPSTAT_SMP1_MASK                                  0x80
#define _SSPSTAT_RW1_POSN                                   0x2
#define _SSPSTAT_RW1_POSITION                               0x2
#define _SSPSTAT_RW1_SIZE                                   0x1
#define _SSPSTAT_RW1_LENGTH                                 0x1
#define _SSPSTAT_RW1_MASK                                   0x4
#define _SSPSTAT_START1_POSN                                0x3
#define _SSPSTAT_START1_POSITION                            0x3
#define _SSPSTAT_START1_SIZE                                0x1
#define _SSPSTAT_START1_LENGTH                              0x1
#define _SSPSTAT_START1_MASK                                0x8
#define _SSPSTAT_STOP1_POSN                                 0x4
#define _SSPSTAT_STOP1_POSITION                             0x4
#define _SSPSTAT_STOP1_SIZE                                 0x1
#define _SSPSTAT_STOP1_LENGTH                               0x1
#define _SSPSTAT_STOP1_MASK                                 0x10
#define _SSPSTAT_DA1_POSN                                   0x5
#define _SSPSTAT_DA1_POSITION                               0x5
#define _SSPSTAT_DA1_SIZE                                   0x1
#define _SSPSTAT_DA1_LENGTH                                 0x1
#define _SSPSTAT_DA1_MASK                                   0x20
#define _SSPSTAT_NOT_W_POSN                                 0x2
#define _SSPSTAT_NOT_W_POSITION                             0x2
#define _SSPSTAT_NOT_W_SIZE                                 0x1
#define _SSPSTAT_NOT_W_LENGTH                               0x1
#define _SSPSTAT_NOT_W_MASK                                 0x4
#define _SSPSTAT_NOT_A_POSN                                 0x5
#define _SSPSTAT_NOT_A_POSITION                             0x5
#define _SSPSTAT_NOT_A_SIZE                                 0x1
#define _SSPSTAT_NOT_A_LENGTH                               0x1
#define _SSPSTAT_NOT_A_MASK                                 0x20

// Register: SSP1ADD
#define SSP1ADD SSP1ADD
extern volatile unsigned char           SSP1ADD             __at(0xFC8);
#ifndef _LIB_BUILD
asm("SSP1ADD equ 0FC8h");
#endif
// aliases
extern volatile unsigned char           SSPADD              __at(0xFC8);
#ifndef _LIB_BUILD
asm("SSPADD equ 0FC8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MSK0                   :1;
        unsigned MSK1                   :1;
        unsigned MSK2                   :1;
        unsigned MSK3                   :1;
        unsigned MSK4                   :1;
        unsigned MSK5                   :1;
        unsigned MSK6                   :1;
        unsigned MSK7                   :1;
    };
    struct {
        unsigned SSPADD                 :8;
    };
    struct {
        unsigned MSK01                  :1;
        unsigned MSK11                  :1;
        unsigned MSK21                  :1;
        unsigned MSK31                  :1;
        unsigned MSK41                  :1;
        unsigned MSK51                  :1;
        unsigned MSK61                  :1;
        unsigned MSK71                  :1;
    };
} SSP1ADDbits_t;
extern volatile SSP1ADDbits_t SSP1ADDbits __at(0xFC8);
// bitfield macros
#define _SSP1ADD_MSK0_POSN                                  0x0
#define _SSP1ADD_MSK0_POSITION                              0x0
#define _SSP1ADD_MSK0_SIZE                                  0x1
#define _SSP1ADD_MSK0_LENGTH                                0x1
#define _SSP1ADD_MSK0_MASK                                  0x1
#define _SSP1ADD_MSK1_POSN                                  0x1
#define _SSP1ADD_MSK1_POSITION                              0x1
#define _SSP1ADD_MSK1_SIZE                                  0x1
#define _SSP1ADD_MSK1_LENGTH                                0x1
#define _SSP1ADD_MSK1_MASK                                  0x2
#define _SSP1ADD_MSK2_POSN                                  0x2
#define _SSP1ADD_MSK2_POSITION                              0x2
#define _SSP1ADD_MSK2_SIZE                                  0x1
#define _SSP1ADD_MSK2_LENGTH                                0x1
#define _SSP1ADD_MSK2_MASK                                  0x4
#define _SSP1ADD_MSK3_POSN                                  0x3
#define _SSP1ADD_MSK3_POSITION                              0x3
#define _SSP1ADD_MSK3_SIZE                                  0x1
#define _SSP1ADD_MSK3_LENGTH                                0x1
#define _SSP1ADD_MSK3_MASK                                  0x8
#define _SSP1ADD_MSK4_POSN                                  0x4
#define _SSP1ADD_MSK4_POSITION                              0x4
#define _SSP1ADD_MSK4_SIZE                                  0x1
#define _SSP1ADD_MSK4_LENGTH                                0x1
#define _SSP1ADD_MSK4_MASK                                  0x10
#define _SSP1ADD_MSK5_POSN                                  0x5
#define _SSP1ADD_MSK5_POSITION                              0x5
#define _SSP1ADD_MSK5_SIZE                                  0x1
#define _SSP1ADD_MSK5_LENGTH                                0x1
#define _SSP1ADD_MSK5_MASK                                  0x20
#define _SSP1ADD_MSK6_POSN                                  0x6
#define _SSP1ADD_MSK6_POSITION                              0x6
#define _SSP1ADD_MSK6_SIZE                                  0x1
#define _SSP1ADD_MSK6_LENGTH                                0x1
#define _SSP1ADD_MSK6_MASK                                  0x40
#define _SSP1ADD_MSK7_POSN                                  0x7
#define _SSP1ADD_MSK7_POSITION                              0x7
#define _SSP1ADD_MSK7_SIZE                                  0x1
#define _SSP1ADD_MSK7_LENGTH                                0x1
#define _SSP1ADD_MSK7_MASK                                  0x80
#define _SSP1ADD_SSPADD_POSN                                0x0
#define _SSP1ADD_SSPADD_POSITION                            0x0
#define _SSP1ADD_SSPADD_SIZE                                0x8
#define _SSP1ADD_SSPADD_LENGTH                              0x8
#define _SSP1ADD_SSPADD_MASK                                0xFF
#define _SSP1ADD_MSK01_POSN                                 0x0
#define _SSP1ADD_MSK01_POSITION                             0x0
#define _SSP1ADD_MSK01_SIZE                                 0x1
#define _SSP1ADD_MSK01_LENGTH                               0x1
#define _SSP1ADD_MSK01_MASK                                 0x1
#define _SSP1ADD_MSK11_POSN                                 0x1
#define _SSP1ADD_MSK11_POSITION                             0x1
#define _SSP1ADD_MSK11_SIZE                                 0x1
#define _SSP1ADD_MSK11_LENGTH                               0x1
#define _SSP1ADD_MSK11_MASK                                 0x2
#define _SSP1ADD_MSK21_POSN                                 0x2
#define _SSP1ADD_MSK21_POSITION                             0x2
#define _SSP1ADD_MSK21_SIZE                                 0x1
#define _SSP1ADD_MSK21_LENGTH                               0x1
#define _SSP1ADD_MSK21_MASK                                 0x4
#define _SSP1ADD_MSK31_POSN                                 0x3
#define _SSP1ADD_MSK31_POSITION                             0x3
#define _SSP1ADD_MSK31_SIZE                                 0x1
#define _SSP1ADD_MSK31_LENGTH                               0x1
#define _SSP1ADD_MSK31_MASK                                 0x8
#define _SSP1ADD_MSK41_POSN                                 0x4
#define _SSP1ADD_MSK41_POSITION                             0x4
#define _SSP1ADD_MSK41_SIZE                                 0x1
#define _SSP1ADD_MSK41_LENGTH                               0x1
#define _SSP1ADD_MSK41_MASK                                 0x10
#define _SSP1ADD_MSK51_POSN                                 0x5
#define _SSP1ADD_MSK51_POSITION                             0x5
#define _SSP1ADD_MSK51_SIZE                                 0x1
#define _SSP1ADD_MSK51_LENGTH                               0x1
#define _SSP1ADD_MSK51_MASK                                 0x20
#define _SSP1ADD_MSK61_POSN                                 0x6
#define _SSP1ADD_MSK61_POSITION                             0x6
#define _SSP1ADD_MSK61_SIZE                                 0x1
#define _SSP1ADD_MSK61_LENGTH                               0x1
#define _SSP1ADD_MSK61_MASK                                 0x40
#define _SSP1ADD_MSK71_POSN                                 0x7
#define _SSP1ADD_MSK71_POSITION                             0x7
#define _SSP1ADD_MSK71_SIZE                                 0x1
#define _SSP1ADD_MSK71_LENGTH                               0x1
#define _SSP1ADD_MSK71_MASK                                 0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned MSK0                   :1;
        unsigned MSK1                   :1;
        unsigned MSK2                   :1;
        unsigned MSK3                   :1;
        unsigned MSK4                   :1;
        unsigned MSK5                   :1;
        unsigned MSK6                   :1;
        unsigned MSK7                   :1;
    };
    struct {
        unsigned SSPADD                 :8;
    };
    struct {
        unsigned MSK01                  :1;
        unsigned MSK11                  :1;
        unsigned MSK21                  :1;
        unsigned MSK31                  :1;
        unsigned MSK41                  :1;
        unsigned MSK51                  :1;
        unsigned MSK61                  :1;
        unsigned MSK71                  :1;
    };
} SSPADDbits_t;
extern volatile SSPADDbits_t SSPADDbits __at(0xFC8);
// bitfield macros
#define _SSPADD_MSK0_POSN                                   0x0
#define _SSPADD_MSK0_POSITION                               0x0
#define _SSPADD_MSK0_SIZE                                   0x1
#define _SSPADD_MSK0_LENGTH                                 0x1
#define _SSPADD_MSK0_MASK                                   0x1
#define _SSPADD_MSK1_POSN                                   0x1
#define _SSPADD_MSK1_POSITION                               0x1
#define _SSPADD_MSK1_SIZE                                   0x1
#define _SSPADD_MSK1_LENGTH                                 0x1
#define _SSPADD_MSK1_MASK                                   0x2
#define _SSPADD_MSK2_POSN                                   0x2
#define _SSPADD_MSK2_POSITION                               0x2
#define _SSPADD_MSK2_SIZE                                   0x1
#define _SSPADD_MSK2_LENGTH                                 0x1
#define _SSPADD_MSK2_MASK                                   0x4
#define _SSPADD_MSK3_POSN                                   0x3
#define _SSPADD_MSK3_POSITION                               0x3
#define _SSPADD_MSK3_SIZE                                   0x1
#define _SSPADD_MSK3_LENGTH                                 0x1
#define _SSPADD_MSK3_MASK                                   0x8
#define _SSPADD_MSK4_POSN                                   0x4
#define _SSPADD_MSK4_POSITION                               0x4
#define _SSPADD_MSK4_SIZE                                   0x1
#define _SSPADD_MSK4_LENGTH                                 0x1
#define _SSPADD_MSK4_MASK                                   0x10
#define _SSPADD_MSK5_POSN                                   0x5
#define _SSPADD_MSK5_POSITION                               0x5
#define _SSPADD_MSK5_SIZE                                   0x1
#define _SSPADD_MSK5_LENGTH                                 0x1
#define _SSPADD_MSK5_MASK                                   0x20
#define _SSPADD_MSK6_POSN                                   0x6
#define _SSPADD_MSK6_POSITION                               0x6
#define _SSPADD_MSK6_SIZE                                   0x1
#define _SSPADD_MSK6_LENGTH                                 0x1
#define _SSPADD_MSK6_MASK                                   0x40
#define _SSPADD_MSK7_POSN                                   0x7
#define _SSPADD_MSK7_POSITION                               0x7
#define _SSPADD_MSK7_SIZE                                   0x1
#define _SSPADD_MSK7_LENGTH                                 0x1
#define _SSPADD_MSK7_MASK                                   0x80
#define _SSPADD_SSPADD_POSN                                 0x0
#define _SSPADD_SSPADD_POSITION                             0x0
#define _SSPADD_SSPADD_SIZE                                 0x8
#define _SSPADD_SSPADD_LENGTH                               0x8
#define _SSPADD_SSPADD_MASK                                 0xFF
#define _SSPADD_MSK01_POSN                                  0x0
#define _SSPADD_MSK01_POSITION                              0x0
#define _SSPADD_MSK01_SIZE                                  0x1
#define _SSPADD_MSK01_LENGTH                                0x1
#define _SSPADD_MSK01_MASK                                  0x1
#define _SSPADD_MSK11_POSN                                  0x1
#define _SSPADD_MSK11_POSITION                              0x1
#define _SSPADD_MSK11_SIZE                                  0x1
#define _SSPADD_MSK11_LENGTH                                0x1
#define _SSPADD_MSK11_MASK                                  0x2
#define _SSPADD_MSK21_POSN                                  0x2
#define _SSPADD_MSK21_POSITION                              0x2
#define _SSPADD_MSK21_SIZE                                  0x1
#define _SSPADD_MSK21_LENGTH                                0x1
#define _SSPADD_MSK21_MASK                                  0x4
#define _SSPADD_MSK31_POSN                                  0x3
#define _SSPADD_MSK31_POSITION                              0x3
#define _SSPADD_MSK31_SIZE                                  0x1
#define _SSPADD_MSK31_LENGTH                                0x1
#define _SSPADD_MSK31_MASK                                  0x8
#define _SSPADD_MSK41_POSN                                  0x4
#define _SSPADD_MSK41_POSITION                              0x4
#define _SSPADD_MSK41_SIZE                                  0x1
#define _SSPADD_MSK41_LENGTH                                0x1
#define _SSPADD_MSK41_MASK                                  0x10
#define _SSPADD_MSK51_POSN                                  0x5
#define _SSPADD_MSK51_POSITION                              0x5
#define _SSPADD_MSK51_SIZE                                  0x1
#define _SSPADD_MSK51_LENGTH                                0x1
#define _SSPADD_MSK51_MASK                                  0x20
#define _SSPADD_MSK61_POSN                                  0x6
#define _SSPADD_MSK61_POSITION                              0x6
#define _SSPADD_MSK61_SIZE                                  0x1
#define _SSPADD_MSK61_LENGTH                                0x1
#define _SSPADD_MSK61_MASK                                  0x40
#define _SSPADD_MSK71_POSN                                  0x7
#define _SSPADD_MSK71_POSITION                              0x7
#define _SSPADD_MSK71_SIZE                                  0x1
#define _SSPADD_MSK71_LENGTH                                0x1
#define _SSPADD_MSK71_MASK                                  0x80

// Register: SSP1BUF
#define SSP1BUF SSP1BUF
extern volatile unsigned char           SSP1BUF             __at(0xFC9);
#ifndef _LIB_BUILD
asm("SSP1BUF equ 0FC9h");
#endif
// aliases
extern volatile unsigned char           SSPBUF              __at(0xFC9);
#ifndef _LIB_BUILD
asm("SSPBUF equ 0FC9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPBUF                 :8;
    };
} SSP1BUFbits_t;
extern volatile SSP1BUFbits_t SSP1BUFbits __at(0xFC9);
// bitfield macros
#define _SSP1BUF_SSPBUF_POSN                                0x0
#define _SSP1BUF_SSPBUF_POSITION                            0x0
#define _SSP1BUF_SSPBUF_SIZE                                0x8
#define _SSP1BUF_SSPBUF_LENGTH                              0x8
#define _SSP1BUF_SSPBUF_MASK                                0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSPBUF                 :8;
    };
} SSPBUFbits_t;
extern volatile SSPBUFbits_t SSPBUFbits __at(0xFC9);
// bitfield macros
#define _SSPBUF_SSPBUF_POSN                                 0x0
#define _SSPBUF_SSPBUF_POSITION                             0x0
#define _SSPBUF_SSPBUF_SIZE                                 0x8
#define _SSPBUF_SSPBUF_LENGTH                               0x8
#define _SSPBUF_SSPBUF_MASK                                 0xFF

// Register: T2CON
#define T2CON T2CON
extern volatile unsigned char           T2CON               __at(0xFCA);
#ifndef _LIB_BUILD
asm("T2CON equ 0FCAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T2CKPS                 :2;
        unsigned TMR2ON                 :1;
        unsigned T2OUTPS                :4;
    };
    struct {
        unsigned T2CKPS0                :1;
        unsigned T2CKPS1                :1;
        unsigned                        :1;
        unsigned T2OUTPS0               :1;
        unsigned T2OUTPS1               :1;
        unsigned T2OUTPS2               :1;
        unsigned T2OUTPS3               :1;
    };
} T2CONbits_t;
extern volatile T2CONbits_t T2CONbits __at(0xFCA);
// bitfield macros
#define _T2CON_T2CKPS_POSN                                  0x0
#define _T2CON_T2CKPS_POSITION                              0x0
#define _T2CON_T2CKPS_SIZE                                  0x2
#define _T2CON_T2CKPS_LENGTH                                0x2
#define _T2CON_T2CKPS_MASK                                  0x3
#define _T2CON_TMR2ON_POSN                                  0x2
#define _T2CON_TMR2ON_POSITION                              0x2
#define _T2CON_TMR2ON_SIZE                                  0x1
#define _T2CON_TMR2ON_LENGTH                                0x1
#define _T2CON_TMR2ON_MASK                                  0x4
#define _T2CON_T2OUTPS_POSN                                 0x3
#define _T2CON_T2OUTPS_POSITION                             0x3
#define _T2CON_T2OUTPS_SIZE                                 0x4
#define _T2CON_T2OUTPS_LENGTH                               0x4
#define _T2CON_T2OUTPS_MASK                                 0x78
#define _T2CON_T2CKPS0_POSN                                 0x0
#define _T2CON_T2CKPS0_POSITION                             0x0
#define _T2CON_T2CKPS0_SIZE                                 0x1
#define _T2CON_T2CKPS0_LENGTH                               0x1
#define _T2CON_T2CKPS0_MASK                                 0x1
#define _T2CON_T2CKPS1_POSN                                 0x1
#define _T2CON_T2CKPS1_POSITION                             0x1
#define _T2CON_T2CKPS1_SIZE                                 0x1
#define _T2CON_T2CKPS1_LENGTH                               0x1
#define _T2CON_T2CKPS1_MASK                                 0x2
#define _T2CON_T2OUTPS0_POSN                                0x3
#define _T2CON_T2OUTPS0_POSITION                            0x3
#define _T2CON_T2OUTPS0_SIZE                                0x1
#define _T2CON_T2OUTPS0_LENGTH                              0x1
#define _T2CON_T2OUTPS0_MASK                                0x8
#define _T2CON_T2OUTPS1_POSN                                0x4
#define _T2CON_T2OUTPS1_POSITION                            0x4
#define _T2CON_T2OUTPS1_SIZE                                0x1
#define _T2CON_T2OUTPS1_LENGTH                              0x1
#define _T2CON_T2OUTPS1_MASK                                0x10
#define _T2CON_T2OUTPS2_POSN                                0x5
#define _T2CON_T2OUTPS2_POSITION                            0x5
#define _T2CON_T2OUTPS2_SIZE                                0x1
#define _T2CON_T2OUTPS2_LENGTH                              0x1
#define _T2CON_T2OUTPS2_MASK                                0x20
#define _T2CON_T2OUTPS3_POSN                                0x6
#define _T2CON_T2OUTPS3_POSITION                            0x6
#define _T2CON_T2OUTPS3_SIZE                                0x1
#define _T2CON_T2OUTPS3_LENGTH                              0x1
#define _T2CON_T2OUTPS3_MASK                                0x40

// Register: PR2
#define PR2 PR2
extern volatile unsigned char           PR2                 __at(0xFCB);
#ifndef _LIB_BUILD
asm("PR2 equ 0FCBh");
#endif
// aliases
extern volatile unsigned char           MEMCON              __at(0xFCB);
#ifndef _LIB_BUILD
asm("MEMCON equ 0FCBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR2                    :8;
    };
    struct {
        unsigned                        :7;
        unsigned EBDIS                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned WAIT0                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned WAIT1                  :1;
    };
    struct {
        unsigned WM0                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned WM1                    :1;
    };
} PR2bits_t;
extern volatile PR2bits_t PR2bits __at(0xFCB);
// bitfield macros
#define _PR2_PR2_POSN                                       0x0
#define _PR2_PR2_POSITION                                   0x0
#define _PR2_PR2_SIZE                                       0x8
#define _PR2_PR2_LENGTH                                     0x8
#define _PR2_PR2_MASK                                       0xFF
#define _PR2_EBDIS_POSN                                     0x7
#define _PR2_EBDIS_POSITION                                 0x7
#define _PR2_EBDIS_SIZE                                     0x1
#define _PR2_EBDIS_LENGTH                                   0x1
#define _PR2_EBDIS_MASK                                     0x80
#define _PR2_WAIT0_POSN                                     0x4
#define _PR2_WAIT0_POSITION                                 0x4
#define _PR2_WAIT0_SIZE                                     0x1
#define _PR2_WAIT0_LENGTH                                   0x1
#define _PR2_WAIT0_MASK                                     0x10
#define _PR2_WAIT1_POSN                                     0x5
#define _PR2_WAIT1_POSITION                                 0x5
#define _PR2_WAIT1_SIZE                                     0x1
#define _PR2_WAIT1_LENGTH                                   0x1
#define _PR2_WAIT1_MASK                                     0x20
#define _PR2_WM0_POSN                                       0x0
#define _PR2_WM0_POSITION                                   0x0
#define _PR2_WM0_SIZE                                       0x1
#define _PR2_WM0_LENGTH                                     0x1
#define _PR2_WM0_MASK                                       0x1
#define _PR2_WM1_POSN                                       0x1
#define _PR2_WM1_POSITION                                   0x1
#define _PR2_WM1_SIZE                                       0x1
#define _PR2_WM1_LENGTH                                     0x1
#define _PR2_WM1_MASK                                       0x2
// alias bitfield definitions
typedef union {
    struct {
        unsigned PR2                    :8;
    };
    struct {
        unsigned                        :7;
        unsigned EBDIS                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned WAIT0                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned WAIT1                  :1;
    };
    struct {
        unsigned WM0                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned WM1                    :1;
    };
} MEMCONbits_t;
extern volatile MEMCONbits_t MEMCONbits __at(0xFCB);
// bitfield macros
#define _MEMCON_PR2_POSN                                    0x0
#define _MEMCON_PR2_POSITION                                0x0
#define _MEMCON_PR2_SIZE                                    0x8
#define _MEMCON_PR2_LENGTH                                  0x8
#define _MEMCON_PR2_MASK                                    0xFF
#define _MEMCON_EBDIS_POSN                                  0x7
#define _MEMCON_EBDIS_POSITION                              0x7
#define _MEMCON_EBDIS_SIZE                                  0x1
#define _MEMCON_EBDIS_LENGTH                                0x1
#define _MEMCON_EBDIS_MASK                                  0x80
#define _MEMCON_WAIT0_POSN                                  0x4
#define _MEMCON_WAIT0_POSITION                              0x4
#define _MEMCON_WAIT0_SIZE                                  0x1
#define _MEMCON_WAIT0_LENGTH                                0x1
#define _MEMCON_WAIT0_MASK                                  0x10
#define _MEMCON_WAIT1_POSN                                  0x5
#define _MEMCON_WAIT1_POSITION                              0x5
#define _MEMCON_WAIT1_SIZE                                  0x1
#define _MEMCON_WAIT1_LENGTH                                0x1
#define _MEMCON_WAIT1_MASK                                  0x20
#define _MEMCON_WM0_POSN                                    0x0
#define _MEMCON_WM0_POSITION                                0x0
#define _MEMCON_WM0_SIZE                                    0x1
#define _MEMCON_WM0_LENGTH                                  0x1
#define _MEMCON_WM0_MASK                                    0x1
#define _MEMCON_WM1_POSN                                    0x1
#define _MEMCON_WM1_POSITION                                0x1
#define _MEMCON_WM1_SIZE                                    0x1
#define _MEMCON_WM1_LENGTH                                  0x1
#define _MEMCON_WM1_MASK                                    0x2

// Register: TMR2
#define TMR2 TMR2
extern volatile unsigned char           TMR2                __at(0xFCC);
#ifndef _LIB_BUILD
asm("TMR2 equ 0FCCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR2                   :8;
    };
} TMR2bits_t;
extern volatile TMR2bits_t TMR2bits __at(0xFCC);
// bitfield macros
#define _TMR2_TMR2_POSN                                     0x0
#define _TMR2_TMR2_POSITION                                 0x0
#define _TMR2_TMR2_SIZE                                     0x8
#define _TMR2_TMR2_LENGTH                                   0x8
#define _TMR2_TMR2_MASK                                     0xFF

// Register: T1CON
#define T1CON T1CON
extern volatile unsigned char           T1CON               __at(0xFCD);
#ifndef _LIB_BUILD
asm("T1CON equ 0FCDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned NOT_T1SYNC             :1;
    };
    struct {
        unsigned TMR1ON                 :1;
        unsigned RD16                   :1;
        unsigned nT1SYNC                :1;
        unsigned SOSCEN                 :1;
        unsigned T1CKPS                 :2;
        unsigned TMR1CS                 :2;
    };
    struct {
        unsigned                        :4;
        unsigned T1CKPS0                :1;
        unsigned T1CKPS1                :1;
        unsigned TMR1CS0                :1;
        unsigned TMR1CS1                :1;
    };
    struct {
        unsigned                        :3;
        unsigned T1OSCEN                :1;
        unsigned                        :3;
        unsigned T1RD16                 :1;
    };
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits __at(0xFCD);
// bitfield macros
#define _T1CON_NOT_T1SYNC_POSN                              0x2
#define _T1CON_NOT_T1SYNC_POSITION                          0x2
#define _T1CON_NOT_T1SYNC_SIZE                              0x1
#define _T1CON_NOT_T1SYNC_LENGTH                            0x1
#define _T1CON_NOT_T1SYNC_MASK                              0x4
#define _T1CON_TMR1ON_POSN                                  0x0
#define _T1CON_TMR1ON_POSITION                              0x0
#define _T1CON_TMR1ON_SIZE                                  0x1
#define _T1CON_TMR1ON_LENGTH                                0x1
#define _T1CON_TMR1ON_MASK                                  0x1
#define _T1CON_RD16_POSN                                    0x1
#define _T1CON_RD16_POSITION                                0x1
#define _T1CON_RD16_SIZE                                    0x1
#define _T1CON_RD16_LENGTH                                  0x1
#define _T1CON_RD16_MASK                                    0x2
#define _T1CON_nT1SYNC_POSN                                 0x2
#define _T1CON_nT1SYNC_POSITION                             0x2
#define _T1CON_nT1SYNC_SIZE                                 0x1
#define _T1CON_nT1SYNC_LENGTH                               0x1
#define _T1CON_nT1SYNC_MASK                                 0x4
#define _T1CON_SOSCEN_POSN                                  0x3
#define _T1CON_SOSCEN_POSITION                              0x3
#define _T1CON_SOSCEN_SIZE                                  0x1
#define _T1CON_SOSCEN_LENGTH                                0x1
#define _T1CON_SOSCEN_MASK                                  0x8
#define _T1CON_T1CKPS_POSN                                  0x4
#define _T1CON_T1CKPS_POSITION                              0x4
#define _T1CON_T1CKPS_SIZE                                  0x2
#define _T1CON_T1CKPS_LENGTH                                0x2
#define _T1CON_T1CKPS_MASK                                  0x30
#define _T1CON_TMR1CS_POSN                                  0x6
#define _T1CON_TMR1CS_POSITION                              0x6
#define _T1CON_TMR1CS_SIZE                                  0x2
#define _T1CON_TMR1CS_LENGTH                                0x2
#define _T1CON_TMR1CS_MASK                                  0xC0
#define _T1CON_T1CKPS0_POSN                                 0x4
#define _T1CON_T1CKPS0_POSITION                             0x4
#define _T1CON_T1CKPS0_SIZE                                 0x1
#define _T1CON_T1CKPS0_LENGTH                               0x1
#define _T1CON_T1CKPS0_MASK                                 0x10
#define _T1CON_T1CKPS1_POSN                                 0x5
#define _T1CON_T1CKPS1_POSITION                             0x5
#define _T1CON_T1CKPS1_SIZE                                 0x1
#define _T1CON_T1CKPS1_LENGTH                               0x1
#define _T1CON_T1CKPS1_MASK                                 0x20
#define _T1CON_TMR1CS0_POSN                                 0x6
#define _T1CON_TMR1CS0_POSITION                             0x6
#define _T1CON_TMR1CS0_SIZE                                 0x1
#define _T1CON_TMR1CS0_LENGTH                               0x1
#define _T1CON_TMR1CS0_MASK                                 0x40
#define _T1CON_TMR1CS1_POSN                                 0x7
#define _T1CON_TMR1CS1_POSITION                             0x7
#define _T1CON_TMR1CS1_SIZE                                 0x1
#define _T1CON_TMR1CS1_LENGTH                               0x1
#define _T1CON_TMR1CS1_MASK                                 0x80
#define _T1CON_T1OSCEN_POSN                                 0x3
#define _T1CON_T1OSCEN_POSITION                             0x3
#define _T1CON_T1OSCEN_SIZE                                 0x1
#define _T1CON_T1OSCEN_LENGTH                               0x1
#define _T1CON_T1OSCEN_MASK                                 0x8
#define _T1CON_T1RD16_POSN                                  0x7
#define _T1CON_T1RD16_POSITION                              0x7
#define _T1CON_T1RD16_SIZE                                  0x1
#define _T1CON_T1RD16_LENGTH                                0x1
#define _T1CON_T1RD16_MASK                                  0x80

// Register: TMR1
#define TMR1 TMR1
extern volatile unsigned short          TMR1                __at(0xFCE);
#ifndef _LIB_BUILD
asm("TMR1 equ 0FCEh");
#endif

// Register: TMR1L
#define TMR1L TMR1L
extern volatile unsigned char           TMR1L               __at(0xFCE);
#ifndef _LIB_BUILD
asm("TMR1L equ 0FCEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1L                  :8;
    };
} TMR1Lbits_t;
extern volatile TMR1Lbits_t TMR1Lbits __at(0xFCE);
// bitfield macros
#define _TMR1L_TMR1L_POSN                                   0x0
#define _TMR1L_TMR1L_POSITION                               0x0
#define _TMR1L_TMR1L_SIZE                                   0x8
#define _TMR1L_TMR1L_LENGTH                                 0x8
#define _TMR1L_TMR1L_MASK                                   0xFF

// Register: TMR1H
#define TMR1H TMR1H
extern volatile unsigned char           TMR1H               __at(0xFCF);
#ifndef _LIB_BUILD
asm("TMR1H equ 0FCFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1H                  :8;
    };
} TMR1Hbits_t;
extern volatile TMR1Hbits_t TMR1Hbits __at(0xFCF);
// bitfield macros
#define _TMR1H_TMR1H_POSN                                   0x0
#define _TMR1H_TMR1H_POSITION                               0x0
#define _TMR1H_TMR1H_SIZE                                   0x8
#define _TMR1H_TMR1H_LENGTH                                 0x8
#define _TMR1H_TMR1H_MASK                                   0xFF

// Register: RCON
#define RCON RCON
extern volatile unsigned char           RCON                __at(0xFD0);
#ifndef _LIB_BUILD
asm("RCON equ 0FD0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NOT_BOR                :1;
    };
    struct {
        unsigned                        :1;
        unsigned NOT_POR                :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_PD                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned NOT_TO                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned NOT_RI                 :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_CM                 :1;
    };
    struct {
        unsigned nBOR                   :1;
        unsigned nPOR                   :1;
        unsigned nPD                    :1;
        unsigned nTO                    :1;
        unsigned nRI                    :1;
        unsigned nCM                    :1;
        unsigned SBOREN                 :1;
        unsigned IPEN                   :1;
    };
    struct {
        unsigned BOR                    :1;
        unsigned POR                    :1;
        unsigned PD                     :1;
        unsigned TO                     :1;
        unsigned RI                     :1;
        unsigned CM                     :1;
    };
} RCONbits_t;
extern volatile RCONbits_t RCONbits __at(0xFD0);
// bitfield macros
#define _RCON_NOT_BOR_POSN                                  0x0
#define _RCON_NOT_BOR_POSITION                              0x0
#define _RCON_NOT_BOR_SIZE                                  0x1
#define _RCON_NOT_BOR_LENGTH                                0x1
#define _RCON_NOT_BOR_MASK                                  0x1
#define _RCON_NOT_POR_POSN                                  0x1
#define _RCON_NOT_POR_POSITION                              0x1
#define _RCON_NOT_POR_SIZE                                  0x1
#define _RCON_NOT_POR_LENGTH                                0x1
#define _RCON_NOT_POR_MASK                                  0x2
#define _RCON_NOT_PD_POSN                                   0x2
#define _RCON_NOT_PD_POSITION                               0x2
#define _RCON_NOT_PD_SIZE                                   0x1
#define _RCON_NOT_PD_LENGTH                                 0x1
#define _RCON_NOT_PD_MASK                                   0x4
#define _RCON_NOT_TO_POSN                                   0x3
#define _RCON_NOT_TO_POSITION                               0x3
#define _RCON_NOT_TO_SIZE                                   0x1
#define _RCON_NOT_TO_LENGTH                                 0x1
#define _RCON_NOT_TO_MASK                                   0x8
#define _RCON_NOT_RI_POSN                                   0x4
#define _RCON_NOT_RI_POSITION                               0x4
#define _RCON_NOT_RI_SIZE                                   0x1
#define _RCON_NOT_RI_LENGTH                                 0x1
#define _RCON_NOT_RI_MASK                                   0x10
#define _RCON_NOT_CM_POSN                                   0x5
#define _RCON_NOT_CM_POSITION                               0x5
#define _RCON_NOT_CM_SIZE                                   0x1
#define _RCON_NOT_CM_LENGTH                                 0x1
#define _RCON_NOT_CM_MASK                                   0x20
#define _RCON_nBOR_POSN                                     0x0
#define _RCON_nBOR_POSITION                                 0x0
#define _RCON_nBOR_SIZE                                     0x1
#define _RCON_nBOR_LENGTH                                   0x1
#define _RCON_nBOR_MASK                                     0x1
#define _RCON_nPOR_POSN                                     0x1
#define _RCON_nPOR_POSITION                                 0x1
#define _RCON_nPOR_SIZE                                     0x1
#define _RCON_nPOR_LENGTH                                   0x1
#define _RCON_nPOR_MASK                                     0x2
#define _RCON_nPD_POSN                                      0x2
#define _RCON_nPD_POSITION                                  0x2
#define _RCON_nPD_SIZE                                      0x1
#define _RCON_nPD_LENGTH                                    0x1
#define _RCON_nPD_MASK                                      0x4
#define _RCON_nTO_POSN                                      0x3
#define _RCON_nTO_POSITION                                  0x3
#define _RCON_nTO_SIZE                                      0x1
#define _RCON_nTO_LENGTH                                    0x1
#define _RCON_nTO_MASK                                      0x8
#define _RCON_nRI_POSN                                      0x4
#define _RCON_nRI_POSITION                                  0x4
#define _RCON_nRI_SIZE                                      0x1
#define _RCON_nRI_LENGTH                                    0x1
#define _RCON_nRI_MASK                                      0x10
#define _RCON_nCM_POSN                                      0x5
#define _RCON_nCM_POSITION                                  0x5
#define _RCON_nCM_SIZE                                      0x1
#define _RCON_nCM_LENGTH                                    0x1
#define _RCON_nCM_MASK                                      0x20
#define _RCON_SBOREN_POSN                                   0x6
#define _RCON_SBOREN_POSITION                               0x6
#define _RCON_SBOREN_SIZE                                   0x1
#define _RCON_SBOREN_LENGTH                                 0x1
#define _RCON_SBOREN_MASK                                   0x40
#define _RCON_IPEN_POSN                                     0x7
#define _RCON_IPEN_POSITION                                 0x7
#define _RCON_IPEN_SIZE                                     0x1
#define _RCON_IPEN_LENGTH                                   0x1
#define _RCON_IPEN_MASK                                     0x80
#define _RCON_BOR_POSN                                      0x0
#define _RCON_BOR_POSITION                                  0x0
#define _RCON_BOR_SIZE                                      0x1
#define _RCON_BOR_LENGTH                                    0x1
#define _RCON_BOR_MASK                                      0x1
#define _RCON_POR_POSN                                      0x1
#define _RCON_POR_POSITION                                  0x1
#define _RCON_POR_SIZE                                      0x1
#define _RCON_POR_LENGTH                                    0x1
#define _RCON_POR_MASK                                      0x2
#define _RCON_PD_POSN                                       0x2
#define _RCON_PD_POSITION                                   0x2
#define _RCON_PD_SIZE                                       0x1
#define _RCON_PD_LENGTH                                     0x1
#define _RCON_PD_MASK                                       0x4
#define _RCON_TO_POSN                                       0x3
#define _RCON_TO_POSITION                                   0x3
#define _RCON_TO_SIZE                                       0x1
#define _RCON_TO_LENGTH                                     0x1
#define _RCON_TO_MASK                                       0x8
#define _RCON_RI_POSN                                       0x4
#define _RCON_RI_POSITION                                   0x4
#define _RCON_RI_SIZE                                       0x1
#define _RCON_RI_LENGTH                                     0x1
#define _RCON_RI_MASK                                       0x10
#define _RCON_CM_POSN                                       0x5
#define _RCON_CM_POSITION                                   0x5
#define _RCON_CM_SIZE                                       0x1
#define _RCON_CM_LENGTH                                     0x1
#define _RCON_CM_MASK                                       0x20

// Register: WDTCON
#define WDTCON WDTCON
extern volatile unsigned char           WDTCON              __at(0xFD1);
#ifndef _LIB_BUILD
asm("WDTCON equ 0FD1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SWDTEN                 :1;
        unsigned ULPSINK                :1;
        unsigned ULPEN                  :1;
        unsigned                        :1;
        unsigned SRETEN                 :1;
        unsigned ULPLVL                 :1;
        unsigned                        :1;
        unsigned REGSLP                 :1;
    };
    struct {
        unsigned SWDTE                  :1;
    };
} WDTCONbits_t;
extern volatile WDTCONbits_t WDTCONbits __at(0xFD1);
// bitfield macros
#define _WDTCON_SWDTEN_POSN                                 0x0
#define _WDTCON_SWDTEN_POSITION                             0x0
#define _WDTCON_SWDTEN_SIZE                                 0x1
#define _WDTCON_SWDTEN_LENGTH                               0x1
#define _WDTCON_SWDTEN_MASK                                 0x1
#define _WDTCON_ULPSINK_POSN                                0x1
#define _WDTCON_ULPSINK_POSITION                            0x1
#define _WDTCON_ULPSINK_SIZE                                0x1
#define _WDTCON_ULPSINK_LENGTH                              0x1
#define _WDTCON_ULPSINK_MASK                                0x2
#define _WDTCON_ULPEN_POSN                                  0x2
#define _WDTCON_ULPEN_POSITION                              0x2
#define _WDTCON_ULPEN_SIZE                                  0x1
#define _WDTCON_ULPEN_LENGTH                                0x1
#define _WDTCON_ULPEN_MASK                                  0x4
#define _WDTCON_SRETEN_POSN                                 0x4
#define _WDTCON_SRETEN_POSITION                             0x4
#define _WDTCON_SRETEN_SIZE                                 0x1
#define _WDTCON_SRETEN_LENGTH                               0x1
#define _WDTCON_SRETEN_MASK                                 0x10
#define _WDTCON_ULPLVL_POSN                                 0x5
#define _WDTCON_ULPLVL_POSITION                             0x5
#define _WDTCON_ULPLVL_SIZE                                 0x1
#define _WDTCON_ULPLVL_LENGTH                               0x1
#define _WDTCON_ULPLVL_MASK                                 0x20
#define _WDTCON_REGSLP_POSN                                 0x7
#define _WDTCON_REGSLP_POSITION                             0x7
#define _WDTCON_REGSLP_SIZE                                 0x1
#define _WDTCON_REGSLP_LENGTH                               0x1
#define _WDTCON_REGSLP_MASK                                 0x80
#define _WDTCON_SWDTE_POSN                                  0x0
#define _WDTCON_SWDTE_POSITION                              0x0
#define _WDTCON_SWDTE_SIZE                                  0x1
#define _WDTCON_SWDTE_LENGTH                                0x1
#define _WDTCON_SWDTE_MASK                                  0x1

// Register: IPR5
#define IPR5 IPR5
extern volatile unsigned char           IPR5                __at(0xFD2);
#ifndef _LIB_BUILD
asm("IPR5 equ 0FD2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR4IP                 :1;
        unsigned TMR5IP                 :1;
        unsigned TMR6IP                 :1;
        unsigned                        :1;
        unsigned TMR8IP                 :1;
    };
    struct {
        unsigned CCH05                  :1;
        unsigned CCH15                  :1;
        unsigned                        :2;
        unsigned EVPOL15                :1;
    };
} IPR5bits_t;
extern volatile IPR5bits_t IPR5bits __at(0xFD2);
// bitfield macros
#define _IPR5_TMR4IP_POSN                                   0x0
#define _IPR5_TMR4IP_POSITION                               0x0
#define _IPR5_TMR4IP_SIZE                                   0x1
#define _IPR5_TMR4IP_LENGTH                                 0x1
#define _IPR5_TMR4IP_MASK                                   0x1
#define _IPR5_TMR5IP_POSN                                   0x1
#define _IPR5_TMR5IP_POSITION                               0x1
#define _IPR5_TMR5IP_SIZE                                   0x1
#define _IPR5_TMR5IP_LENGTH                                 0x1
#define _IPR5_TMR5IP_MASK                                   0x2
#define _IPR5_TMR6IP_POSN                                   0x2
#define _IPR5_TMR6IP_POSITION                               0x2
#define _IPR5_TMR6IP_SIZE                                   0x1
#define _IPR5_TMR6IP_LENGTH                                 0x1
#define _IPR5_TMR6IP_MASK                                   0x4
#define _IPR5_TMR8IP_POSN                                   0x4
#define _IPR5_TMR8IP_POSITION                               0x4
#define _IPR5_TMR8IP_SIZE                                   0x1
#define _IPR5_TMR8IP_LENGTH                                 0x1
#define _IPR5_TMR8IP_MASK                                   0x10
#define _IPR5_CCH05_POSN                                    0x0
#define _IPR5_CCH05_POSITION                                0x0
#define _IPR5_CCH05_SIZE                                    0x1
#define _IPR5_CCH05_LENGTH                                  0x1
#define _IPR5_CCH05_MASK                                    0x1
#define _IPR5_CCH15_POSN                                    0x1
#define _IPR5_CCH15_POSITION                                0x1
#define _IPR5_CCH15_SIZE                                    0x1
#define _IPR5_CCH15_LENGTH                                  0x1
#define _IPR5_CCH15_MASK                                    0x2
#define _IPR5_EVPOL15_POSN                                  0x4
#define _IPR5_EVPOL15_POSITION                              0x4
#define _IPR5_EVPOL15_SIZE                                  0x1
#define _IPR5_EVPOL15_LENGTH                                0x1
#define _IPR5_EVPOL15_MASK                                  0x10

// Register: OSCCON
#define OSCCON OSCCON
extern volatile unsigned char           OSCCON              __at(0xFD3);
#ifndef _LIB_BUILD
asm("OSCCON equ 0FD3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SCS                    :2;
        unsigned HFIOFS                 :1;
        unsigned OSTS                   :1;
        unsigned IRCF                   :3;
        unsigned IDLEN                  :1;
    };
    struct {
        unsigned SCS0                   :1;
        unsigned SCS1                   :1;
        unsigned                        :2;
        unsigned IRCF0                  :1;
        unsigned IRCF1                  :1;
        unsigned IRCF2                  :1;
    };
} OSCCONbits_t;
extern volatile OSCCONbits_t OSCCONbits __at(0xFD3);
// bitfield macros
#define _OSCCON_SCS_POSN                                    0x0
#define _OSCCON_SCS_POSITION                                0x0
#define _OSCCON_SCS_SIZE                                    0x2
#define _OSCCON_SCS_LENGTH                                  0x2
#define _OSCCON_SCS_MASK                                    0x3
#define _OSCCON_HFIOFS_POSN                                 0x2
#define _OSCCON_HFIOFS_POSITION                             0x2
#define _OSCCON_HFIOFS_SIZE                                 0x1
#define _OSCCON_HFIOFS_LENGTH                               0x1
#define _OSCCON_HFIOFS_MASK                                 0x4
#define _OSCCON_OSTS_POSN                                   0x3
#define _OSCCON_OSTS_POSITION                               0x3
#define _OSCCON_OSTS_SIZE                                   0x1
#define _OSCCON_OSTS_LENGTH                                 0x1
#define _OSCCON_OSTS_MASK                                   0x8
#define _OSCCON_IRCF_POSN                                   0x4
#define _OSCCON_IRCF_POSITION                               0x4
#define _OSCCON_IRCF_SIZE                                   0x3
#define _OSCCON_IRCF_LENGTH                                 0x3
#define _OSCCON_IRCF_MASK                                   0x70
#define _OSCCON_IDLEN_POSN                                  0x7
#define _OSCCON_IDLEN_POSITION                              0x7
#define _OSCCON_IDLEN_SIZE                                  0x1
#define _OSCCON_IDLEN_LENGTH                                0x1
#define _OSCCON_IDLEN_MASK                                  0x80
#define _OSCCON_SCS0_POSN                                   0x0
#define _OSCCON_SCS0_POSITION                               0x0
#define _OSCCON_SCS0_SIZE                                   0x1
#define _OSCCON_SCS0_LENGTH                                 0x1
#define _OSCCON_SCS0_MASK                                   0x1
#define _OSCCON_SCS1_POSN                                   0x1
#define _OSCCON_SCS1_POSITION                               0x1
#define _OSCCON_SCS1_SIZE                                   0x1
#define _OSCCON_SCS1_LENGTH                                 0x1
#define _OSCCON_SCS1_MASK                                   0x2
#define _OSCCON_IRCF0_POSN                                  0x4
#define _OSCCON_IRCF0_POSITION                              0x4
#define _OSCCON_IRCF0_SIZE                                  0x1
#define _OSCCON_IRCF0_LENGTH                                0x1
#define _OSCCON_IRCF0_MASK                                  0x10
#define _OSCCON_IRCF1_POSN                                  0x5
#define _OSCCON_IRCF1_POSITION                              0x5
#define _OSCCON_IRCF1_SIZE                                  0x1
#define _OSCCON_IRCF1_LENGTH                                0x1
#define _OSCCON_IRCF1_MASK                                  0x20
#define _OSCCON_IRCF2_POSN                                  0x6
#define _OSCCON_IRCF2_POSITION                              0x6
#define _OSCCON_IRCF2_SIZE                                  0x1
#define _OSCCON_IRCF2_LENGTH                                0x1
#define _OSCCON_IRCF2_MASK                                  0x40

// Register: SPBRGH1
#define SPBRGH1 SPBRGH1
extern volatile unsigned char           SPBRGH1             __at(0xFD4);
#ifndef _LIB_BUILD
asm("SPBRGH1 equ 0FD4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SPBRGH1                :8;
    };
} SPBRGH1bits_t;
extern volatile SPBRGH1bits_t SPBRGH1bits __at(0xFD4);
// bitfield macros
#define _SPBRGH1_SPBRGH1_POSN                               0x0
#define _SPBRGH1_SPBRGH1_POSITION                           0x0
#define _SPBRGH1_SPBRGH1_SIZE                               0x8
#define _SPBRGH1_SPBRGH1_LENGTH                             0x8
#define _SPBRGH1_SPBRGH1_MASK                               0xFF

// Register: T0CON
#define T0CON T0CON
extern volatile unsigned char           T0CON               __at(0xFD5);
#ifndef _LIB_BUILD
asm("T0CON equ 0FD5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T0PS                   :3;
        unsigned PSA                    :1;
        unsigned T0SE                   :1;
        unsigned T0CS                   :1;
        unsigned T08BIT                 :1;
        unsigned TMR0ON                 :1;
    };
    struct {
        unsigned T0PS0                  :1;
        unsigned T0PS1                  :1;
        unsigned T0PS2                  :1;
    };
} T0CONbits_t;
extern volatile T0CONbits_t T0CONbits __at(0xFD5);
// bitfield macros
#define _T0CON_T0PS_POSN                                    0x0
#define _T0CON_T0PS_POSITION                                0x0
#define _T0CON_T0PS_SIZE                                    0x3
#define _T0CON_T0PS_LENGTH                                  0x3
#define _T0CON_T0PS_MASK                                    0x7
#define _T0CON_PSA_POSN                                     0x3
#define _T0CON_PSA_POSITION                                 0x3
#define _T0CON_PSA_SIZE                                     0x1
#define _T0CON_PSA_LENGTH                                   0x1
#define _T0CON_PSA_MASK                                     0x8
#define _T0CON_T0SE_POSN                                    0x4
#define _T0CON_T0SE_POSITION                                0x4
#define _T0CON_T0SE_SIZE                                    0x1
#define _T0CON_T0SE_LENGTH                                  0x1
#define _T0CON_T0SE_MASK                                    0x10
#define _T0CON_T0CS_POSN                                    0x5
#define _T0CON_T0CS_POSITION                                0x5
#define _T0CON_T0CS_SIZE                                    0x1
#define _T0CON_T0CS_LENGTH                                  0x1
#define _T0CON_T0CS_MASK                                    0x20
#define _T0CON_T08BIT_POSN                                  0x6
#define _T0CON_T08BIT_POSITION                              0x6
#define _T0CON_T08BIT_SIZE                                  0x1
#define _T0CON_T08BIT_LENGTH                                0x1
#define _T0CON_T08BIT_MASK                                  0x40
#define _T0CON_TMR0ON_POSN                                  0x7
#define _T0CON_TMR0ON_POSITION                              0x7
#define _T0CON_TMR0ON_SIZE                                  0x1
#define _T0CON_TMR0ON_LENGTH                                0x1
#define _T0CON_TMR0ON_MASK                                  0x80
#define _T0CON_T0PS0_POSN                                   0x0
#define _T0CON_T0PS0_POSITION                               0x0
#define _T0CON_T0PS0_SIZE                                   0x1
#define _T0CON_T0PS0_LENGTH                                 0x1
#define _T0CON_T0PS0_MASK                                   0x1
#define _T0CON_T0PS1_POSN                                   0x1
#define _T0CON_T0PS1_POSITION                               0x1
#define _T0CON_T0PS1_SIZE                                   0x1
#define _T0CON_T0PS1_LENGTH                                 0x1
#define _T0CON_T0PS1_MASK                                   0x2
#define _T0CON_T0PS2_POSN                                   0x2
#define _T0CON_T0PS2_POSITION                               0x2
#define _T0CON_T0PS2_SIZE                                   0x1
#define _T0CON_T0PS2_LENGTH                                 0x1
#define _T0CON_T0PS2_MASK                                   0x4

// Register: TMR0
#define TMR0 TMR0
extern volatile unsigned short          TMR0                __at(0xFD6);
#ifndef _LIB_BUILD
asm("TMR0 equ 0FD6h");
#endif

// Register: TMR0L
#define TMR0L TMR0L
extern volatile unsigned char           TMR0L               __at(0xFD6);
#ifndef _LIB_BUILD
asm("TMR0L equ 0FD6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR0L                  :8;
    };
} TMR0Lbits_t;
extern volatile TMR0Lbits_t TMR0Lbits __at(0xFD6);
// bitfield macros
#define _TMR0L_TMR0L_POSN                                   0x0
#define _TMR0L_TMR0L_POSITION                               0x0
#define _TMR0L_TMR0L_SIZE                                   0x8
#define _TMR0L_TMR0L_LENGTH                                 0x8
#define _TMR0L_TMR0L_MASK                                   0xFF

// Register: TMR0H
#define TMR0H TMR0H
extern volatile unsigned char           TMR0H               __at(0xFD7);
#ifndef _LIB_BUILD
asm("TMR0H equ 0FD7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR0H                  :8;
    };
} TMR0Hbits_t;
extern volatile TMR0Hbits_t TMR0Hbits __at(0xFD7);
// bitfield macros
#define _TMR0H_TMR0H_POSN                                   0x0
#define _TMR0H_TMR0H_POSITION                               0x0
#define _TMR0H_TMR0H_SIZE                                   0x8
#define _TMR0H_TMR0H_LENGTH                                 0x8
#define _TMR0H_TMR0H_MASK                                   0xFF

// Register: STATUS
#define STATUS STATUS
extern volatile unsigned char           STATUS              __at(0xFD8);
#ifndef _LIB_BUILD
asm("STATUS equ 0FD8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C                      :1;
        unsigned DC                     :1;
        unsigned Z                      :1;
        unsigned OV                     :1;
        unsigned N                      :1;
    };
    struct {
        unsigned CARRY                  :1;
        unsigned                        :1;
        unsigned ZERO                   :1;
        unsigned OVERFLOW               :1;
        unsigned NEGATIVE               :1;
    };
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits __at(0xFD8);
// bitfield macros
#define _STATUS_C_POSN                                      0x0
#define _STATUS_C_POSITION                                  0x0
#define _STATUS_C_SIZE                                      0x1
#define _STATUS_C_LENGTH                                    0x1
#define _STATUS_C_MASK                                      0x1
#define _STATUS_DC_POSN                                     0x1
#define _STATUS_DC_POSITION                                 0x1
#define _STATUS_DC_SIZE                                     0x1
#define _STATUS_DC_LENGTH                                   0x1
#define _STATUS_DC_MASK                                     0x2
#define _STATUS_Z_POSN                                      0x2
#define _STATUS_Z_POSITION                                  0x2
#define _STATUS_Z_SIZE                                      0x1
#define _STATUS_Z_LENGTH                                    0x1
#define _STATUS_Z_MASK                                      0x4
#define _STATUS_OV_POSN                                     0x3
#define _STATUS_OV_POSITION                                 0x3
#define _STATUS_OV_SIZE                                     0x1
#define _STATUS_OV_LENGTH                                   0x1
#define _STATUS_OV_MASK                                     0x8
#define _STATUS_N_POSN                                      0x4
#define _STATUS_N_POSITION                                  0x4
#define _STATUS_N_SIZE                                      0x1
#define _STATUS_N_LENGTH                                    0x1
#define _STATUS_N_MASK                                      0x10
#define _STATUS_CARRY_POSN                                  0x0
#define _STATUS_CARRY_POSITION                              0x0
#define _STATUS_CARRY_SIZE                                  0x1
#define _STATUS_CARRY_LENGTH                                0x1
#define _STATUS_CARRY_MASK                                  0x1
#define _STATUS_ZERO_POSN                                   0x2
#define _STATUS_ZERO_POSITION                               0x2
#define _STATUS_ZERO_SIZE                                   0x1
#define _STATUS_ZERO_LENGTH                                 0x1
#define _STATUS_ZERO_MASK                                   0x4
#define _STATUS_OVERFLOW_POSN                               0x3
#define _STATUS_OVERFLOW_POSITION                           0x3
#define _STATUS_OVERFLOW_SIZE                               0x1
#define _STATUS_OVERFLOW_LENGTH                             0x1
#define _STATUS_OVERFLOW_MASK                               0x8
#define _STATUS_NEGATIVE_POSN                               0x4
#define _STATUS_NEGATIVE_POSITION                           0x4
#define _STATUS_NEGATIVE_SIZE                               0x1
#define _STATUS_NEGATIVE_LENGTH                             0x1
#define _STATUS_NEGATIVE_MASK                               0x10

// Register: FSR2
#define FSR2 FSR2
extern volatile unsigned short          FSR2                __at(0xFD9);
#ifndef _LIB_BUILD
asm("FSR2 equ 0FD9h");
#endif

// Register: FSR2L
#define FSR2L FSR2L
extern volatile unsigned char           FSR2L               __at(0xFD9);
#ifndef _LIB_BUILD
asm("FSR2L equ 0FD9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR2L                  :8;
    };
} FSR2Lbits_t;
extern volatile FSR2Lbits_t FSR2Lbits __at(0xFD9);
// bitfield macros
#define _FSR2L_FSR2L_POSN                                   0x0
#define _FSR2L_FSR2L_POSITION                               0x0
#define _FSR2L_FSR2L_SIZE                                   0x8
#define _FSR2L_FSR2L_LENGTH                                 0x8
#define _FSR2L_FSR2L_MASK                                   0xFF

// Register: FSR2H
#define FSR2H FSR2H
extern volatile unsigned char           FSR2H               __at(0xFDA);
#ifndef _LIB_BUILD
asm("FSR2H equ 0FDAh");
#endif

// Register: PLUSW2
#define PLUSW2 PLUSW2
extern volatile unsigned char           PLUSW2              __at(0xFDB);
#ifndef _LIB_BUILD
asm("PLUSW2 equ 0FDBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PLUSW2                 :8;
    };
} PLUSW2bits_t;
extern volatile PLUSW2bits_t PLUSW2bits __at(0xFDB);
// bitfield macros
#define _PLUSW2_PLUSW2_POSN                                 0x0
#define _PLUSW2_PLUSW2_POSITION                             0x0
#define _PLUSW2_PLUSW2_SIZE                                 0x8
#define _PLUSW2_PLUSW2_LENGTH                               0x8
#define _PLUSW2_PLUSW2_MASK                                 0xFF

// Register: PREINC2
#define PREINC2 PREINC2
extern volatile unsigned char           PREINC2             __at(0xFDC);
#ifndef _LIB_BUILD
asm("PREINC2 equ 0FDCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PREINC2                :8;
    };
} PREINC2bits_t;
extern volatile PREINC2bits_t PREINC2bits __at(0xFDC);
// bitfield macros
#define _PREINC2_PREINC2_POSN                               0x0
#define _PREINC2_PREINC2_POSITION                           0x0
#define _PREINC2_PREINC2_SIZE                               0x8
#define _PREINC2_PREINC2_LENGTH                             0x8
#define _PREINC2_PREINC2_MASK                               0xFF

// Register: POSTDEC2
#define POSTDEC2 POSTDEC2
extern volatile unsigned char           POSTDEC2            __at(0xFDD);
#ifndef _LIB_BUILD
asm("POSTDEC2 equ 0FDDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTDEC2               :8;
    };
} POSTDEC2bits_t;
extern volatile POSTDEC2bits_t POSTDEC2bits __at(0xFDD);
// bitfield macros
#define _POSTDEC2_POSTDEC2_POSN                             0x0
#define _POSTDEC2_POSTDEC2_POSITION                         0x0
#define _POSTDEC2_POSTDEC2_SIZE                             0x8
#define _POSTDEC2_POSTDEC2_LENGTH                           0x8
#define _POSTDEC2_POSTDEC2_MASK                             0xFF

// Register: POSTINC2
#define POSTINC2 POSTINC2
extern volatile unsigned char           POSTINC2            __at(0xFDE);
#ifndef _LIB_BUILD
asm("POSTINC2 equ 0FDEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTINC2               :8;
    };
} POSTINC2bits_t;
extern volatile POSTINC2bits_t POSTINC2bits __at(0xFDE);
// bitfield macros
#define _POSTINC2_POSTINC2_POSN                             0x0
#define _POSTINC2_POSTINC2_POSITION                         0x0
#define _POSTINC2_POSTINC2_SIZE                             0x8
#define _POSTINC2_POSTINC2_LENGTH                           0x8
#define _POSTINC2_POSTINC2_MASK                             0xFF

// Register: INDF2
#define INDF2 INDF2
extern volatile unsigned char           INDF2               __at(0xFDF);
#ifndef _LIB_BUILD
asm("INDF2 equ 0FDFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INDF2                  :8;
    };
} INDF2bits_t;
extern volatile INDF2bits_t INDF2bits __at(0xFDF);
// bitfield macros
#define _INDF2_INDF2_POSN                                   0x0
#define _INDF2_INDF2_POSITION                               0x0
#define _INDF2_INDF2_SIZE                                   0x8
#define _INDF2_INDF2_LENGTH                                 0x8
#define _INDF2_INDF2_MASK                                   0xFF

// Register: BSR
#define BSR BSR
extern volatile unsigned char           BSR                 __at(0xFE0);
#ifndef _LIB_BUILD
asm("BSR equ 0FE0h");
#endif

// Register: FSR1
#define FSR1 FSR1
extern volatile unsigned short          FSR1                __at(0xFE1);
#ifndef _LIB_BUILD
asm("FSR1 equ 0FE1h");
#endif

// Register: FSR1L
#define FSR1L FSR1L
extern volatile unsigned char           FSR1L               __at(0xFE1);
#ifndef _LIB_BUILD
asm("FSR1L equ 0FE1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR1L                  :8;
    };
} FSR1Lbits_t;
extern volatile FSR1Lbits_t FSR1Lbits __at(0xFE1);
// bitfield macros
#define _FSR1L_FSR1L_POSN                                   0x0
#define _FSR1L_FSR1L_POSITION                               0x0
#define _FSR1L_FSR1L_SIZE                                   0x8
#define _FSR1L_FSR1L_LENGTH                                 0x8
#define _FSR1L_FSR1L_MASK                                   0xFF

// Register: FSR1H
#define FSR1H FSR1H
extern volatile unsigned char           FSR1H               __at(0xFE2);
#ifndef _LIB_BUILD
asm("FSR1H equ 0FE2h");
#endif

// Register: PLUSW1
#define PLUSW1 PLUSW1
extern volatile unsigned char           PLUSW1              __at(0xFE3);
#ifndef _LIB_BUILD
asm("PLUSW1 equ 0FE3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PLUSW1                 :8;
    };
} PLUSW1bits_t;
extern volatile PLUSW1bits_t PLUSW1bits __at(0xFE3);
// bitfield macros
#define _PLUSW1_PLUSW1_POSN                                 0x0
#define _PLUSW1_PLUSW1_POSITION                             0x0
#define _PLUSW1_PLUSW1_SIZE                                 0x8
#define _PLUSW1_PLUSW1_LENGTH                               0x8
#define _PLUSW1_PLUSW1_MASK                                 0xFF

// Register: PREINC1
#define PREINC1 PREINC1
extern volatile unsigned char           PREINC1             __at(0xFE4);
#ifndef _LIB_BUILD
asm("PREINC1 equ 0FE4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PREINC1                :8;
    };
} PREINC1bits_t;
extern volatile PREINC1bits_t PREINC1bits __at(0xFE4);
// bitfield macros
#define _PREINC1_PREINC1_POSN                               0x0
#define _PREINC1_PREINC1_POSITION                           0x0
#define _PREINC1_PREINC1_SIZE                               0x8
#define _PREINC1_PREINC1_LENGTH                             0x8
#define _PREINC1_PREINC1_MASK                               0xFF

// Register: POSTDEC1
#define POSTDEC1 POSTDEC1
extern volatile unsigned char           POSTDEC1            __at(0xFE5);
#ifndef _LIB_BUILD
asm("POSTDEC1 equ 0FE5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTDEC1               :8;
    };
} POSTDEC1bits_t;
extern volatile POSTDEC1bits_t POSTDEC1bits __at(0xFE5);
// bitfield macros
#define _POSTDEC1_POSTDEC1_POSN                             0x0
#define _POSTDEC1_POSTDEC1_POSITION                         0x0
#define _POSTDEC1_POSTDEC1_SIZE                             0x8
#define _POSTDEC1_POSTDEC1_LENGTH                           0x8
#define _POSTDEC1_POSTDEC1_MASK                             0xFF

// Register: POSTINC1
#define POSTINC1 POSTINC1
extern volatile unsigned char           POSTINC1            __at(0xFE6);
#ifndef _LIB_BUILD
asm("POSTINC1 equ 0FE6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTINC1               :8;
    };
} POSTINC1bits_t;
extern volatile POSTINC1bits_t POSTINC1bits __at(0xFE6);
// bitfield macros
#define _POSTINC1_POSTINC1_POSN                             0x0
#define _POSTINC1_POSTINC1_POSITION                         0x0
#define _POSTINC1_POSTINC1_SIZE                             0x8
#define _POSTINC1_POSTINC1_LENGTH                           0x8
#define _POSTINC1_POSTINC1_MASK                             0xFF

// Register: INDF1
#define INDF1 INDF1
extern volatile unsigned char           INDF1               __at(0xFE7);
#ifndef _LIB_BUILD
asm("INDF1 equ 0FE7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INDF1                  :8;
    };
} INDF1bits_t;
extern volatile INDF1bits_t INDF1bits __at(0xFE7);
// bitfield macros
#define _INDF1_INDF1_POSN                                   0x0
#define _INDF1_INDF1_POSITION                               0x0
#define _INDF1_INDF1_SIZE                                   0x8
#define _INDF1_INDF1_LENGTH                                 0x8
#define _INDF1_INDF1_MASK                                   0xFF

// Register: WREG
#define WREG WREG
extern volatile unsigned char           WREG                __at(0xFE8);
#ifndef _LIB_BUILD
asm("WREG equ 0FE8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WREG                   :8;
    };
} WREGbits_t;
extern volatile WREGbits_t WREGbits __at(0xFE8);
// bitfield macros
#define _WREG_WREG_POSN                                     0x0
#define _WREG_WREG_POSITION                                 0x0
#define _WREG_WREG_SIZE                                     0x8
#define _WREG_WREG_LENGTH                                   0x8
#define _WREG_WREG_MASK                                     0xFF

// Register: FSR0
#define FSR0 FSR0
extern volatile unsigned short          FSR0                __at(0xFE9);
#ifndef _LIB_BUILD
asm("FSR0 equ 0FE9h");
#endif

// Register: FSR0L
#define FSR0L FSR0L
extern volatile unsigned char           FSR0L               __at(0xFE9);
#ifndef _LIB_BUILD
asm("FSR0L equ 0FE9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR0L                  :8;
    };
} FSR0Lbits_t;
extern volatile FSR0Lbits_t FSR0Lbits __at(0xFE9);
// bitfield macros
#define _FSR0L_FSR0L_POSN                                   0x0
#define _FSR0L_FSR0L_POSITION                               0x0
#define _FSR0L_FSR0L_SIZE                                   0x8
#define _FSR0L_FSR0L_LENGTH                                 0x8
#define _FSR0L_FSR0L_MASK                                   0xFF

// Register: FSR0H
#define FSR0H FSR0H
extern volatile unsigned char           FSR0H               __at(0xFEA);
#ifndef _LIB_BUILD
asm("FSR0H equ 0FEAh");
#endif

// Register: PLUSW0
#define PLUSW0 PLUSW0
extern volatile unsigned char           PLUSW0              __at(0xFEB);
#ifndef _LIB_BUILD
asm("PLUSW0 equ 0FEBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PLUSW0                 :8;
    };
} PLUSW0bits_t;
extern volatile PLUSW0bits_t PLUSW0bits __at(0xFEB);
// bitfield macros
#define _PLUSW0_PLUSW0_POSN                                 0x0
#define _PLUSW0_PLUSW0_POSITION                             0x0
#define _PLUSW0_PLUSW0_SIZE                                 0x8
#define _PLUSW0_PLUSW0_LENGTH                               0x8
#define _PLUSW0_PLUSW0_MASK                                 0xFF

// Register: PREINC0
#define PREINC0 PREINC0
extern volatile unsigned char           PREINC0             __at(0xFEC);
#ifndef _LIB_BUILD
asm("PREINC0 equ 0FECh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PREINC0                :8;
    };
} PREINC0bits_t;
extern volatile PREINC0bits_t PREINC0bits __at(0xFEC);
// bitfield macros
#define _PREINC0_PREINC0_POSN                               0x0
#define _PREINC0_PREINC0_POSITION                           0x0
#define _PREINC0_PREINC0_SIZE                               0x8
#define _PREINC0_PREINC0_LENGTH                             0x8
#define _PREINC0_PREINC0_MASK                               0xFF

// Register: POSTDEC0
#define POSTDEC0 POSTDEC0
extern volatile unsigned char           POSTDEC0            __at(0xFED);
#ifndef _LIB_BUILD
asm("POSTDEC0 equ 0FEDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTDEC0               :8;
    };
} POSTDEC0bits_t;
extern volatile POSTDEC0bits_t POSTDEC0bits __at(0xFED);
// bitfield macros
#define _POSTDEC0_POSTDEC0_POSN                             0x0
#define _POSTDEC0_POSTDEC0_POSITION                         0x0
#define _POSTDEC0_POSTDEC0_SIZE                             0x8
#define _POSTDEC0_POSTDEC0_LENGTH                           0x8
#define _POSTDEC0_POSTDEC0_MASK                             0xFF

// Register: POSTINC0
#define POSTINC0 POSTINC0
extern volatile unsigned char           POSTINC0            __at(0xFEE);
#ifndef _LIB_BUILD
asm("POSTINC0 equ 0FEEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTINC0               :8;
    };
} POSTINC0bits_t;
extern volatile POSTINC0bits_t POSTINC0bits __at(0xFEE);
// bitfield macros
#define _POSTINC0_POSTINC0_POSN                             0x0
#define _POSTINC0_POSTINC0_POSITION                         0x0
#define _POSTINC0_POSTINC0_SIZE                             0x8
#define _POSTINC0_POSTINC0_LENGTH                           0x8
#define _POSTINC0_POSTINC0_MASK                             0xFF

// Register: INDF0
#define INDF0 INDF0
extern volatile unsigned char           INDF0               __at(0xFEF);
#ifndef _LIB_BUILD
asm("INDF0 equ 0FEFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INDF0                  :8;
    };
} INDF0bits_t;
extern volatile INDF0bits_t INDF0bits __at(0xFEF);
// bitfield macros
#define _INDF0_INDF0_POSN                                   0x0
#define _INDF0_INDF0_POSITION                               0x0
#define _INDF0_INDF0_SIZE                                   0x8
#define _INDF0_INDF0_LENGTH                                 0x8
#define _INDF0_INDF0_MASK                                   0xFF

// Register: INTCON3
#define INTCON3 INTCON3
extern volatile unsigned char           INTCON3             __at(0xFF0);
#ifndef _LIB_BUILD
asm("INTCON3 equ 0FF0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INT1IF                 :1;
        unsigned INT2IF                 :1;
        unsigned INT3IF                 :1;
        unsigned INT1IE                 :1;
        unsigned INT2IE                 :1;
        unsigned INT3IE                 :1;
        unsigned INT1IP                 :1;
        unsigned INT2IP                 :1;
    };
    struct {
        unsigned INT1F                  :1;
        unsigned INT2F                  :1;
        unsigned INT3F                  :1;
        unsigned INT1E                  :1;
        unsigned INT2E                  :1;
        unsigned INT3E                  :1;
        unsigned INT1P                  :1;
        unsigned INT2P                  :1;
    };
} INTCON3bits_t;
extern volatile INTCON3bits_t INTCON3bits __at(0xFF0);
// bitfield macros
#define _INTCON3_INT1IF_POSN                                0x0
#define _INTCON3_INT1IF_POSITION                            0x0
#define _INTCON3_INT1IF_SIZE                                0x1
#define _INTCON3_INT1IF_LENGTH                              0x1
#define _INTCON3_INT1IF_MASK                                0x1
#define _INTCON3_INT2IF_POSN                                0x1
#define _INTCON3_INT2IF_POSITION                            0x1
#define _INTCON3_INT2IF_SIZE                                0x1
#define _INTCON3_INT2IF_LENGTH                              0x1
#define _INTCON3_INT2IF_MASK                                0x2
#define _INTCON3_INT3IF_POSN                                0x2
#define _INTCON3_INT3IF_POSITION                            0x2
#define _INTCON3_INT3IF_SIZE                                0x1
#define _INTCON3_INT3IF_LENGTH                              0x1
#define _INTCON3_INT3IF_MASK                                0x4
#define _INTCON3_INT1IE_POSN                                0x3
#define _INTCON3_INT1IE_POSITION                            0x3
#define _INTCON3_INT1IE_SIZE                                0x1
#define _INTCON3_INT1IE_LENGTH                              0x1
#define _INTCON3_INT1IE_MASK                                0x8
#define _INTCON3_INT2IE_POSN                                0x4
#define _INTCON3_INT2IE_POSITION                            0x4
#define _INTCON3_INT2IE_SIZE                                0x1
#define _INTCON3_INT2IE_LENGTH                              0x1
#define _INTCON3_INT2IE_MASK                                0x10
#define _INTCON3_INT3IE_POSN                                0x5
#define _INTCON3_INT3IE_POSITION                            0x5
#define _INTCON3_INT3IE_SIZE                                0x1
#define _INTCON3_INT3IE_LENGTH                              0x1
#define _INTCON3_INT3IE_MASK                                0x20
#define _INTCON3_INT1IP_POSN                                0x6
#define _INTCON3_INT1IP_POSITION                            0x6
#define _INTCON3_INT1IP_SIZE                                0x1
#define _INTCON3_INT1IP_LENGTH                              0x1
#define _INTCON3_INT1IP_MASK                                0x40
#define _INTCON3_INT2IP_POSN                                0x7
#define _INTCON3_INT2IP_POSITION                            0x7
#define _INTCON3_INT2IP_SIZE                                0x1
#define _INTCON3_INT2IP_LENGTH                              0x1
#define _INTCON3_INT2IP_MASK                                0x80
#define _INTCON3_INT1F_POSN                                 0x0
#define _INTCON3_INT1F_POSITION                             0x0
#define _INTCON3_INT1F_SIZE                                 0x1
#define _INTCON3_INT1F_LENGTH                               0x1
#define _INTCON3_INT1F_MASK                                 0x1
#define _INTCON3_INT2F_POSN                                 0x1
#define _INTCON3_INT2F_POSITION                             0x1
#define _INTCON3_INT2F_SIZE                                 0x1
#define _INTCON3_INT2F_LENGTH                               0x1
#define _INTCON3_INT2F_MASK                                 0x2
#define _INTCON3_INT3F_POSN                                 0x2
#define _INTCON3_INT3F_POSITION                             0x2
#define _INTCON3_INT3F_SIZE                                 0x1
#define _INTCON3_INT3F_LENGTH                               0x1
#define _INTCON3_INT3F_MASK                                 0x4
#define _INTCON3_INT1E_POSN                                 0x3
#define _INTCON3_INT1E_POSITION                             0x3
#define _INTCON3_INT1E_SIZE                                 0x1
#define _INTCON3_INT1E_LENGTH                               0x1
#define _INTCON3_INT1E_MASK                                 0x8
#define _INTCON3_INT2E_POSN                                 0x4
#define _INTCON3_INT2E_POSITION                             0x4
#define _INTCON3_INT2E_SIZE                                 0x1
#define _INTCON3_INT2E_LENGTH                               0x1
#define _INTCON3_INT2E_MASK                                 0x10
#define _INTCON3_INT3E_POSN                                 0x5
#define _INTCON3_INT3E_POSITION                             0x5
#define _INTCON3_INT3E_SIZE                                 0x1
#define _INTCON3_INT3E_LENGTH                               0x1
#define _INTCON3_INT3E_MASK                                 0x20
#define _INTCON3_INT1P_POSN                                 0x6
#define _INTCON3_INT1P_POSITION                             0x6
#define _INTCON3_INT1P_SIZE                                 0x1
#define _INTCON3_INT1P_LENGTH                               0x1
#define _INTCON3_INT1P_MASK                                 0x40
#define _INTCON3_INT2P_POSN                                 0x7
#define _INTCON3_INT2P_POSITION                             0x7
#define _INTCON3_INT2P_SIZE                                 0x1
#define _INTCON3_INT2P_LENGTH                               0x1
#define _INTCON3_INT2P_MASK                                 0x80

// Register: INTCON2
#define INTCON2 INTCON2
extern volatile unsigned char           INTCON2             __at(0xFF1);
#ifndef _LIB_BUILD
asm("INTCON2 equ 0FF1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :7;
        unsigned NOT_RBPU               :1;
    };
    struct {
        unsigned RBIP                   :1;
        unsigned INT3IP                 :1;
        unsigned TMR0IP                 :1;
        unsigned INTEDG3                :1;
        unsigned INTEDG2                :1;
        unsigned INTEDG1                :1;
        unsigned INTEDG0                :1;
        unsigned nRBPU                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned INT3P                  :1;
        unsigned T0IP                   :1;
        unsigned                        :4;
        unsigned RBPU                   :1;
    };
} INTCON2bits_t;
extern volatile INTCON2bits_t INTCON2bits __at(0xFF1);
// bitfield macros
#define _INTCON2_NOT_RBPU_POSN                              0x7
#define _INTCON2_NOT_RBPU_POSITION                          0x7
#define _INTCON2_NOT_RBPU_SIZE                              0x1
#define _INTCON2_NOT_RBPU_LENGTH                            0x1
#define _INTCON2_NOT_RBPU_MASK                              0x80
#define _INTCON2_RBIP_POSN                                  0x0
#define _INTCON2_RBIP_POSITION                              0x0
#define _INTCON2_RBIP_SIZE                                  0x1
#define _INTCON2_RBIP_LENGTH                                0x1
#define _INTCON2_RBIP_MASK                                  0x1
#define _INTCON2_INT3IP_POSN                                0x1
#define _INTCON2_INT3IP_POSITION                            0x1
#define _INTCON2_INT3IP_SIZE                                0x1
#define _INTCON2_INT3IP_LENGTH                              0x1
#define _INTCON2_INT3IP_MASK                                0x2
#define _INTCON2_TMR0IP_POSN                                0x2
#define _INTCON2_TMR0IP_POSITION                            0x2
#define _INTCON2_TMR0IP_SIZE                                0x1
#define _INTCON2_TMR0IP_LENGTH                              0x1
#define _INTCON2_TMR0IP_MASK                                0x4
#define _INTCON2_INTEDG3_POSN                               0x3
#define _INTCON2_INTEDG3_POSITION                           0x3
#define _INTCON2_INTEDG3_SIZE                               0x1
#define _INTCON2_INTEDG3_LENGTH                             0x1
#define _INTCON2_INTEDG3_MASK                               0x8
#define _INTCON2_INTEDG2_POSN                               0x4
#define _INTCON2_INTEDG2_POSITION                           0x4
#define _INTCON2_INTEDG2_SIZE                               0x1
#define _INTCON2_INTEDG2_LENGTH                             0x1
#define _INTCON2_INTEDG2_MASK                               0x10
#define _INTCON2_INTEDG1_POSN                               0x5
#define _INTCON2_INTEDG1_POSITION                           0x5
#define _INTCON2_INTEDG1_SIZE                               0x1
#define _INTCON2_INTEDG1_LENGTH                             0x1
#define _INTCON2_INTEDG1_MASK                               0x20
#define _INTCON2_INTEDG0_POSN                               0x6
#define _INTCON2_INTEDG0_POSITION                           0x6
#define _INTCON2_INTEDG0_SIZE                               0x1
#define _INTCON2_INTEDG0_LENGTH                             0x1
#define _INTCON2_INTEDG0_MASK                               0x40
#define _INTCON2_nRBPU_POSN                                 0x7
#define _INTCON2_nRBPU_POSITION                             0x7
#define _INTCON2_nRBPU_SIZE                                 0x1
#define _INTCON2_nRBPU_LENGTH                               0x1
#define _INTCON2_nRBPU_MASK                                 0x80
#define _INTCON2_INT3P_POSN                                 0x1
#define _INTCON2_INT3P_POSITION                             0x1
#define _INTCON2_INT3P_SIZE                                 0x1
#define _INTCON2_INT3P_LENGTH                               0x1
#define _INTCON2_INT3P_MASK                                 0x2
#define _INTCON2_T0IP_POSN                                  0x2
#define _INTCON2_T0IP_POSITION                              0x2
#define _INTCON2_T0IP_SIZE                                  0x1
#define _INTCON2_T0IP_LENGTH                                0x1
#define _INTCON2_T0IP_MASK                                  0x4
#define _INTCON2_RBPU_POSN                                  0x7
#define _INTCON2_RBPU_POSITION                              0x7
#define _INTCON2_RBPU_SIZE                                  0x1
#define _INTCON2_RBPU_LENGTH                                0x1
#define _INTCON2_RBPU_MASK                                  0x80

// Register: INTCON
#define INTCON INTCON
extern volatile unsigned char           INTCON              __at(0xFF2);
#ifndef _LIB_BUILD
asm("INTCON equ 0FF2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RBIF                   :1;
        unsigned INT0IF                 :1;
        unsigned TMR0IF                 :1;
        unsigned RBIE                   :1;
        unsigned INT0IE                 :1;
        unsigned TMR0IE                 :1;
        unsigned PEIE_GIEL              :1;
        unsigned GIE_GIEH               :1;
    };
    struct {
        unsigned                        :1;
        unsigned INT0F                  :1;
        unsigned T0IF                   :1;
        unsigned                        :1;
        unsigned INT0E                  :1;
        unsigned T0IE                   :1;
        unsigned PEIE                   :1;
        unsigned GIE                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned GIEL                   :1;
        unsigned GIEH                   :1;
    };
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits __at(0xFF2);
// bitfield macros
#define _INTCON_RBIF_POSN                                   0x0
#define _INTCON_RBIF_POSITION                               0x0
#define _INTCON_RBIF_SIZE                                   0x1
#define _INTCON_RBIF_LENGTH                                 0x1
#define _INTCON_RBIF_MASK                                   0x1
#define _INTCON_INT0IF_POSN                                 0x1
#define _INTCON_INT0IF_POSITION                             0x1
#define _INTCON_INT0IF_SIZE                                 0x1
#define _INTCON_INT0IF_LENGTH                               0x1
#define _INTCON_INT0IF_MASK                                 0x2
#define _INTCON_TMR0IF_POSN                                 0x2
#define _INTCON_TMR0IF_POSITION                             0x2
#define _INTCON_TMR0IF_SIZE                                 0x1
#define _INTCON_TMR0IF_LENGTH                               0x1
#define _INTCON_TMR0IF_MASK                                 0x4
#define _INTCON_RBIE_POSN                                   0x3
#define _INTCON_RBIE_POSITION                               0x3
#define _INTCON_RBIE_SIZE                                   0x1
#define _INTCON_RBIE_LENGTH                                 0x1
#define _INTCON_RBIE_MASK                                   0x8
#define _INTCON_INT0IE_POSN                                 0x4
#define _INTCON_INT0IE_POSITION                             0x4
#define _INTCON_INT0IE_SIZE                                 0x1
#define _INTCON_INT0IE_LENGTH                               0x1
#define _INTCON_INT0IE_MASK                                 0x10
#define _INTCON_TMR0IE_POSN                                 0x5
#define _INTCON_TMR0IE_POSITION                             0x5
#define _INTCON_TMR0IE_SIZE                                 0x1
#define _INTCON_TMR0IE_LENGTH                               0x1
#define _INTCON_TMR0IE_MASK                                 0x20
#define _INTCON_PEIE_GIEL_POSN                              0x6
#define _INTCON_PEIE_GIEL_POSITION                          0x6
#define _INTCON_PEIE_GIEL_SIZE                              0x1
#define _INTCON_PEIE_GIEL_LENGTH                            0x1
#define _INTCON_PEIE_GIEL_MASK                              0x40
#define _INTCON_GIE_GIEH_POSN                               0x7
#define _INTCON_GIE_GIEH_POSITION                           0x7
#define _INTCON_GIE_GIEH_SIZE                               0x1
#define _INTCON_GIE_GIEH_LENGTH                             0x1
#define _INTCON_GIE_GIEH_MASK                               0x80
#define _INTCON_INT0F_POSN                                  0x1
#define _INTCON_INT0F_POSITION                              0x1
#define _INTCON_INT0F_SIZE                                  0x1
#define _INTCON_INT0F_LENGTH                                0x1
#define _INTCON_INT0F_MASK                                  0x2
#define _INTCON_T0IF_POSN                                   0x2
#define _INTCON_T0IF_POSITION                               0x2
#define _INTCON_T0IF_SIZE                                   0x1
#define _INTCON_T0IF_LENGTH                                 0x1
#define _INTCON_T0IF_MASK                                   0x4
#define _INTCON_INT0E_POSN                                  0x4
#define _INTCON_INT0E_POSITION                              0x4
#define _INTCON_INT0E_SIZE                                  0x1
#define _INTCON_INT0E_LENGTH                                0x1
#define _INTCON_INT0E_MASK                                  0x10
#define _INTCON_T0IE_POSN                                   0x5
#define _INTCON_T0IE_POSITION                               0x5
#define _INTCON_T0IE_SIZE                                   0x1
#define _INTCON_T0IE_LENGTH                                 0x1
#define _INTCON_T0IE_MASK                                   0x20
#define _INTCON_PEIE_POSN                                   0x6
#define _INTCON_PEIE_POSITION                               0x6
#define _INTCON_PEIE_SIZE                                   0x1
#define _INTCON_PEIE_LENGTH                                 0x1
#define _INTCON_PEIE_MASK                                   0x40
#define _INTCON_GIE_POSN                                    0x7
#define _INTCON_GIE_POSITION                                0x7
#define _INTCON_GIE_SIZE                                    0x1
#define _INTCON_GIE_LENGTH                                  0x1
#define _INTCON_GIE_MASK                                    0x80
#define _INTCON_GIEL_POSN                                   0x6
#define _INTCON_GIEL_POSITION                               0x6
#define _INTCON_GIEL_SIZE                                   0x1
#define _INTCON_GIEL_LENGTH                                 0x1
#define _INTCON_GIEL_MASK                                   0x40
#define _INTCON_GIEH_POSN                                   0x7
#define _INTCON_GIEH_POSITION                               0x7
#define _INTCON_GIEH_SIZE                                   0x1
#define _INTCON_GIEH_LENGTH                                 0x1
#define _INTCON_GIEH_MASK                                   0x80

// Register: PROD
#define PROD PROD
extern volatile unsigned short          PROD                __at(0xFF3);
#ifndef _LIB_BUILD
asm("PROD equ 0FF3h");
#endif

// Register: PRODL
#define PRODL PRODL
extern volatile unsigned char           PRODL               __at(0xFF3);
#ifndef _LIB_BUILD
asm("PRODL equ 0FF3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRODL                  :8;
    };
} PRODLbits_t;
extern volatile PRODLbits_t PRODLbits __at(0xFF3);
// bitfield macros
#define _PRODL_PRODL_POSN                                   0x0
#define _PRODL_PRODL_POSITION                               0x0
#define _PRODL_PRODL_SIZE                                   0x8
#define _PRODL_PRODL_LENGTH                                 0x8
#define _PRODL_PRODL_MASK                                   0xFF

// Register: PRODH
#define PRODH PRODH
extern volatile unsigned char           PRODH               __at(0xFF4);
#ifndef _LIB_BUILD
asm("PRODH equ 0FF4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRODH                  :8;
    };
} PRODHbits_t;
extern volatile PRODHbits_t PRODHbits __at(0xFF4);
// bitfield macros
#define _PRODH_PRODH_POSN                                   0x0
#define _PRODH_PRODH_POSITION                               0x0
#define _PRODH_PRODH_SIZE                                   0x8
#define _PRODH_PRODH_LENGTH                                 0x8
#define _PRODH_PRODH_MASK                                   0xFF

// Register: TABLAT
#define TABLAT TABLAT
extern volatile unsigned char           TABLAT              __at(0xFF5);
#ifndef _LIB_BUILD
asm("TABLAT equ 0FF5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TABLAT                 :8;
    };
} TABLATbits_t;
extern volatile TABLATbits_t TABLATbits __at(0xFF5);
// bitfield macros
#define _TABLAT_TABLAT_POSN                                 0x0
#define _TABLAT_TABLAT_POSITION                             0x0
#define _TABLAT_TABLAT_SIZE                                 0x8
#define _TABLAT_TABLAT_LENGTH                               0x8
#define _TABLAT_TABLAT_MASK                                 0xFF

// Register: TBLPTR
#define TBLPTR TBLPTR
#ifndef __CCI__
extern volatile __uint24                TBLPTR              __at(0xFF6);
#endif
#ifndef _LIB_BUILD
asm("TBLPTR equ 0FF6h");
#endif

// Register: TBLPTRL
#define TBLPTRL TBLPTRL
extern volatile unsigned char           TBLPTRL             __at(0xFF6);
#ifndef _LIB_BUILD
asm("TBLPTRL equ 0FF6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TBLPTRL                :8;
    };
} TBLPTRLbits_t;
extern volatile TBLPTRLbits_t TBLPTRLbits __at(0xFF6);
// bitfield macros
#define _TBLPTRL_TBLPTRL_POSN                               0x0
#define _TBLPTRL_TBLPTRL_POSITION                           0x0
#define _TBLPTRL_TBLPTRL_SIZE                               0x8
#define _TBLPTRL_TBLPTRL_LENGTH                             0x8
#define _TBLPTRL_TBLPTRL_MASK                               0xFF

// Register: TBLPTRH
#define TBLPTRH TBLPTRH
extern volatile unsigned char           TBLPTRH             __at(0xFF7);
#ifndef _LIB_BUILD
asm("TBLPTRH equ 0FF7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TBLPTRH                :8;
    };
} TBLPTRHbits_t;
extern volatile TBLPTRHbits_t TBLPTRHbits __at(0xFF7);
// bitfield macros
#define _TBLPTRH_TBLPTRH_POSN                               0x0
#define _TBLPTRH_TBLPTRH_POSITION                           0x0
#define _TBLPTRH_TBLPTRH_SIZE                               0x8
#define _TBLPTRH_TBLPTRH_LENGTH                             0x8
#define _TBLPTRH_TBLPTRH_MASK                               0xFF

// Register: TBLPTRU
#define TBLPTRU TBLPTRU
extern volatile unsigned char           TBLPTRU             __at(0xFF8);
#ifndef _LIB_BUILD
asm("TBLPTRU equ 0FF8h");
#endif

// Register: PCLAT
#define PCLAT PCLAT
#ifndef __CCI__
extern volatile __uint24                PCLAT               __at(0xFF9);
#endif
#ifndef _LIB_BUILD
asm("PCLAT equ 0FF9h");
#endif
// aliases
#ifndef __CCI__
extern volatile __uint24                PC                  __at(0xFF9);
#endif
#ifndef _LIB_BUILD
asm("PC equ 0FF9h");
#endif

// Register: PCL
#define PCL PCL
extern volatile unsigned char           PCL                 __at(0xFF9);
#ifndef _LIB_BUILD
asm("PCL equ 0FF9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCL                    :8;
    };
} PCLbits_t;
extern volatile PCLbits_t PCLbits __at(0xFF9);
// bitfield macros
#define _PCL_PCL_POSN                                       0x0
#define _PCL_PCL_POSITION                                   0x0
#define _PCL_PCL_SIZE                                       0x8
#define _PCL_PCL_LENGTH                                     0x8
#define _PCL_PCL_MASK                                       0xFF

// Register: PCLATH
#define PCLATH PCLATH
extern volatile unsigned char           PCLATH              __at(0xFFA);
#ifndef _LIB_BUILD
asm("PCLATH equ 0FFAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :8;
    };
} PCLATHbits_t;
extern volatile PCLATHbits_t PCLATHbits __at(0xFFA);
// bitfield macros
#define _PCLATH_PCH_POSN                                    0x0
#define _PCLATH_PCH_POSITION                                0x0
#define _PCLATH_PCH_SIZE                                    0x8
#define _PCLATH_PCH_LENGTH                                  0x8
#define _PCLATH_PCH_MASK                                    0xFF

// Register: PCLATU
#define PCLATU PCLATU
extern volatile unsigned char           PCLATU              __at(0xFFB);
#ifndef _LIB_BUILD
asm("PCLATU equ 0FFBh");
#endif

// Register: STKPTR
#define STKPTR STKPTR
extern volatile unsigned char           STKPTR              __at(0xFFC);
#ifndef _LIB_BUILD
asm("STKPTR equ 0FFCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STKPTR                 :5;
        unsigned                        :1;
        unsigned STKUNF                 :1;
        unsigned STKFUL                 :1;
    };
    struct {
        unsigned SP0                    :1;
        unsigned SP1                    :1;
        unsigned SP2                    :1;
        unsigned SP3                    :1;
        unsigned SP4                    :1;
        unsigned                        :2;
        unsigned STKOVF                 :1;
    };
} STKPTRbits_t;
extern volatile STKPTRbits_t STKPTRbits __at(0xFFC);
// bitfield macros
#define _STKPTR_STKPTR_POSN                                 0x0
#define _STKPTR_STKPTR_POSITION                             0x0
#define _STKPTR_STKPTR_SIZE                                 0x5
#define _STKPTR_STKPTR_LENGTH                               0x5
#define _STKPTR_STKPTR_MASK                                 0x1F
#define _STKPTR_STKUNF_POSN                                 0x6
#define _STKPTR_STKUNF_POSITION                             0x6
#define _STKPTR_STKUNF_SIZE                                 0x1
#define _STKPTR_STKUNF_LENGTH                               0x1
#define _STKPTR_STKUNF_MASK                                 0x40
#define _STKPTR_STKFUL_POSN                                 0x7
#define _STKPTR_STKFUL_POSITION                             0x7
#define _STKPTR_STKFUL_SIZE                                 0x1
#define _STKPTR_STKFUL_LENGTH                               0x1
#define _STKPTR_STKFUL_MASK                                 0x80
#define _STKPTR_SP0_POSN                                    0x0
#define _STKPTR_SP0_POSITION                                0x0
#define _STKPTR_SP0_SIZE                                    0x1
#define _STKPTR_SP0_LENGTH                                  0x1
#define _STKPTR_SP0_MASK                                    0x1
#define _STKPTR_SP1_POSN                                    0x1
#define _STKPTR_SP1_POSITION                                0x1
#define _STKPTR_SP1_SIZE                                    0x1
#define _STKPTR_SP1_LENGTH                                  0x1
#define _STKPTR_SP1_MASK                                    0x2
#define _STKPTR_SP2_POSN                                    0x2
#define _STKPTR_SP2_POSITION                                0x2
#define _STKPTR_SP2_SIZE                                    0x1
#define _STKPTR_SP2_LENGTH                                  0x1
#define _STKPTR_SP2_MASK                                    0x4
#define _STKPTR_SP3_POSN                                    0x3
#define _STKPTR_SP3_POSITION                                0x3
#define _STKPTR_SP3_SIZE                                    0x1
#define _STKPTR_SP3_LENGTH                                  0x1
#define _STKPTR_SP3_MASK                                    0x8
#define _STKPTR_SP4_POSN                                    0x4
#define _STKPTR_SP4_POSITION                                0x4
#define _STKPTR_SP4_SIZE                                    0x1
#define _STKPTR_SP4_LENGTH                                  0x1
#define _STKPTR_SP4_MASK                                    0x10
#define _STKPTR_STKOVF_POSN                                 0x7
#define _STKPTR_STKOVF_POSITION                             0x7
#define _STKPTR_STKOVF_SIZE                                 0x1
#define _STKPTR_STKOVF_LENGTH                               0x1
#define _STKPTR_STKOVF_MASK                                 0x80

// Register: TOS
#define TOS TOS
#ifndef __CCI__
extern volatile __uint24                TOS                 __at(0xFFD);
#endif
#ifndef _LIB_BUILD
asm("TOS equ 0FFDh");
#endif

// Register: TOSL
#define TOSL TOSL
extern volatile unsigned char           TOSL                __at(0xFFD);
#ifndef _LIB_BUILD
asm("TOSL equ 0FFDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TOSL                   :8;
    };
} TOSLbits_t;
extern volatile TOSLbits_t TOSLbits __at(0xFFD);
// bitfield macros
#define _TOSL_TOSL_POSN                                     0x0
#define _TOSL_TOSL_POSITION                                 0x0
#define _TOSL_TOSL_SIZE                                     0x8
#define _TOSL_TOSL_LENGTH                                   0x8
#define _TOSL_TOSL_MASK                                     0xFF

// Register: TOSH
#define TOSH TOSH
extern volatile unsigned char           TOSH                __at(0xFFE);
#ifndef _LIB_BUILD
asm("TOSH equ 0FFEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TOSH                   :8;
    };
} TOSHbits_t;
extern volatile TOSHbits_t TOSHbits __at(0xFFE);
// bitfield macros
#define _TOSH_TOSH_POSN                                     0x0
#define _TOSH_TOSH_POSITION                                 0x0
#define _TOSH_TOSH_SIZE                                     0x8
#define _TOSH_TOSH_LENGTH                                   0x8
#define _TOSH_TOSH_MASK                                     0xFF

// Register: TOSU
#define TOSU TOSU
extern volatile unsigned char           TOSU                __at(0xFFF);
#ifndef _LIB_BUILD
asm("TOSU equ 0FFFh");
#endif

/*
 * Bit Definitions
 */
#define _DEPRECATED __attribute__((__deprecated__))
#ifndef BANKMASK
#define BANKMASK(addr) ((addr)&0FFh)
#endif
#define _BIT_ACCESS(r,b) ___mkstr(BANKMASK(r)) "," ___mkstr(b)
#ifndef PAGEMASK
#define PAGEMASK(addr) ((addr)&0FFFFFh)
#endif
// PORTH<A16>
extern volatile __bit                   A16                 __at(0x7C38);	// @ (0xF87 * 8 + 0)
#define                                 A16_bit             _BIT_ACCESS(PORTH,0)
// PORTH<A17>
extern volatile __bit                   A17                 __at(0x7C39);	// @ (0xF87 * 8 + 1)
#define                                 A17_bit             _BIT_ACCESS(PORTH,1)
// PORTH<A18>
extern volatile __bit                   A18                 __at(0x7C3A);	// @ (0xF87 * 8 + 2)
#define                                 A18_bit             _BIT_ACCESS(PORTH,2)
// PORTH<A19>
extern volatile __bit                   A19                 __at(0x7C3B);	// @ (0xF87 * 8 + 3)
#define                                 A19_bit             _BIT_ACCESS(PORTH,3)
// BAUDCON1<ABDEN1>
extern volatile __bit                   ABDEN1              __at(0x7B28);	// @ (0xF65 * 8 + 0)
#define                                 ABDEN1_bit          _BIT_ACCESS(BAUDCON1,0)
// BAUDCON2<ABDEN2>
extern volatile __bit                   ABDEN2              __at(0x7900);	// @ (0xF20 * 8 + 0)
#define                                 ABDEN2_bit          _BIT_ACCESS(BAUDCON2,0)
// BAUDCON1<ABDOVF1>
extern volatile __bit                   ABDOVF1             __at(0x7B2F);	// @ (0xF65 * 8 + 7)
#define                                 ABDOVF1_bit         _BIT_ACCESS(BAUDCON1,7)
// BAUDCON2<ABDOVF2>
extern volatile __bit                   ABDOVF2             __at(0x7907);	// @ (0xF20 * 8 + 7)
#define                                 ABDOVF2_bit         _BIT_ACCESS(BAUDCON2,7)
// SSP1CON2<ACKDT1>
extern volatile __bit                   ACKDT1              __at(0x7E2D);	// @ (0xFC5 * 8 + 5)
#define                                 ACKDT1_bit          _BIT_ACCESS(SSP1CON2,5)
// SSP2CON2<ACKDT2>
extern volatile __bit                   ACKDT2              __at(0x77F5);	// @ (0xEFE * 8 + 5)
#define                                 ACKDT2_bit          _BIT_ACCESS(SSP2CON2,5)
// SSP1CON2<ACKEN1>
extern volatile __bit                   ACKEN1              __at(0x7E2C);	// @ (0xFC5 * 8 + 4)
#define                                 ACKEN1_bit          _BIT_ACCESS(SSP1CON2,4)
// SSP2CON2<ACKEN2>
extern volatile __bit                   ACKEN2              __at(0x77F4);	// @ (0xEFE * 8 + 4)
#define                                 ACKEN2_bit          _BIT_ACCESS(SSP2CON2,4)
// SSP1CON2<ACKSTAT1>
extern volatile __bit                   ACKSTAT1            __at(0x7E2E);	// @ (0xFC5 * 8 + 6)
#define                                 ACKSTAT1_bit        _BIT_ACCESS(SSP1CON2,6)
// SSP2CON2<ACKSTAT2>
extern volatile __bit                   ACKSTAT2            __at(0x77F6);	// @ (0xEFE * 8 + 6)
#define                                 ACKSTAT2_bit        _BIT_ACCESS(SSP2CON2,6)
// ADCON2<ACQT0>
extern volatile __bit                   ACQT0               __at(0x7E03);	// @ (0xFC0 * 8 + 3)
#define                                 ACQT0_bit           _BIT_ACCESS(ADCON2,3)
// ADCON2<ACQT1>
extern volatile __bit                   ACQT1               __at(0x7E04);	// @ (0xFC0 * 8 + 4)
#define                                 ACQT1_bit           _BIT_ACCESS(ADCON2,4)
// ADCON2<ACQT2>
extern volatile __bit                   ACQT2               __at(0x7E05);	// @ (0xFC0 * 8 + 5)
#define                                 ACQT2_bit           _BIT_ACCESS(ADCON2,5)
// PORTD<AD0>
extern volatile __bit                   AD0                 __at(0x7C18);	// @ (0xF83 * 8 + 0)
#define                                 AD0_bit             _BIT_ACCESS(PORTD,0)
// PORTD<AD1>
extern volatile __bit                   AD1                 __at(0x7C19);	// @ (0xF83 * 8 + 1)
#define                                 AD1_bit             _BIT_ACCESS(PORTD,1)
// PORTE<AD10>
extern volatile __bit                   AD10                __at(0x7C22);	// @ (0xF84 * 8 + 2)
#define                                 AD10_bit            _BIT_ACCESS(PORTE,2)
// PORTE<AD11>
extern volatile __bit                   AD11                __at(0x7C23);	// @ (0xF84 * 8 + 3)
#define                                 AD11_bit            _BIT_ACCESS(PORTE,3)
// PORTE<AD12>
extern volatile __bit                   AD12                __at(0x7C24);	// @ (0xF84 * 8 + 4)
#define                                 AD12_bit            _BIT_ACCESS(PORTE,4)
// PORTE<AD13>
extern volatile __bit                   AD13                __at(0x7C25);	// @ (0xF84 * 8 + 5)
#define                                 AD13_bit            _BIT_ACCESS(PORTE,5)
// PORTE<AD14>
extern volatile __bit                   AD14                __at(0x7C26);	// @ (0xF84 * 8 + 6)
#define                                 AD14_bit            _BIT_ACCESS(PORTE,6)
// PORTE<AD15>
extern volatile __bit                   AD15                __at(0x7C27);	// @ (0xF84 * 8 + 7)
#define                                 AD15_bit            _BIT_ACCESS(PORTE,7)
// PORTD<AD2>
extern volatile __bit                   AD2                 __at(0x7C1A);	// @ (0xF83 * 8 + 2)
#define                                 AD2_bit             _BIT_ACCESS(PORTD,2)
// PORTD<AD3>
extern volatile __bit                   AD3                 __at(0x7C1B);	// @ (0xF83 * 8 + 3)
#define                                 AD3_bit             _BIT_ACCESS(PORTD,3)
// PORTD<AD4>
extern volatile __bit                   AD4                 __at(0x7C1C);	// @ (0xF83 * 8 + 4)
#define                                 AD4_bit             _BIT_ACCESS(PORTD,4)
// PORTD<AD5>
extern volatile __bit                   AD5                 __at(0x7C1D);	// @ (0xF83 * 8 + 5)
#define                                 AD5_bit             _BIT_ACCESS(PORTD,5)
// PORTD<AD6>
extern volatile __bit                   AD6                 __at(0x7C1E);	// @ (0xF83 * 8 + 6)
#define                                 AD6_bit             _BIT_ACCESS(PORTD,6)
// PORTD<AD7>
extern volatile __bit                   AD7                 __at(0x7C1F);	// @ (0xF83 * 8 + 7)
#define                                 AD7_bit             _BIT_ACCESS(PORTD,7)
// PORTE<AD8>
extern volatile __bit                   AD8                 __at(0x7C20);	// @ (0xF84 * 8 + 0)
#define                                 AD8_bit             _BIT_ACCESS(PORTE,0)
// PORTE<AD9>
extern volatile __bit                   AD9                 __at(0x7C21);	// @ (0xF84 * 8 + 1)
#define                                 AD9_bit             _BIT_ACCESS(PORTE,1)
// PMD0<ADCMD>
extern volatile __bit                   ADCMD               __at(0x78C8);	// @ (0xF19 * 8 + 0)
#define                                 ADCMD_bit           _BIT_ACCESS(PMD0,0)
// ADCON2<ADCS0>
extern volatile __bit                   ADCS0               __at(0x7E00);	// @ (0xFC0 * 8 + 0)
#define                                 ADCS0_bit           _BIT_ACCESS(ADCON2,0)
// ADCON2<ADCS1>
extern volatile __bit                   ADCS1               __at(0x7E01);	// @ (0xFC0 * 8 + 1)
#define                                 ADCS1_bit           _BIT_ACCESS(ADCON2,1)
// ADCON2<ADCS2>
extern volatile __bit                   ADCS2               __at(0x7E02);	// @ (0xFC0 * 8 + 2)
#define                                 ADCS2_bit           _BIT_ACCESS(ADCON2,2)
// RCSTA1<ADDEN1>
extern volatile __bit                   ADDEN1              __at(0x7D5B);	// @ (0xFAB * 8 + 3)
#define                                 ADDEN1_bit          _BIT_ACCESS(RCSTA1,3)
// RCSTA2<ADDEN2>
extern volatile __bit                   ADDEN2              __at(0x7913);	// @ (0xF22 * 8 + 3)
#define                                 ADDEN2_bit          _BIT_ACCESS(RCSTA2,3)
// RCSTA1<ADEN>
extern volatile __bit                   ADEN                __at(0x7D5B);	// @ (0xFAB * 8 + 3)
#define                                 ADEN_bit            _BIT_ACCESS(RCSTA1,3)
// ADCON2<ADFM>
extern volatile __bit                   ADFM                __at(0x7E07);	// @ (0xFC0 * 8 + 7)
#define                                 ADFM_bit            _BIT_ACCESS(ADCON2,7)
// PIE1<ADIE>
extern volatile __bit                   ADIE                __at(0x7CEE);	// @ (0xF9D * 8 + 6)
#define                                 ADIE_bit            _BIT_ACCESS(PIE1,6)
// PIR1<ADIF>
extern volatile __bit                   ADIF                __at(0x7CF6);	// @ (0xF9E * 8 + 6)
#define                                 ADIF_bit            _BIT_ACCESS(PIR1,6)
// IPR1<ADIP>
extern volatile __bit                   ADIP                __at(0x7CFE);	// @ (0xF9F * 8 + 6)
#define                                 ADIP_bit            _BIT_ACCESS(IPR1,6)
// SSP1CON2<ADMSK11>
extern volatile __bit                   ADMSK11             __at(0x7E29);	// @ (0xFC5 * 8 + 1)
#define                                 ADMSK11_bit         _BIT_ACCESS(SSP1CON2,1)
// SSP2CON2<ADMSK12>
extern volatile __bit                   ADMSK12             __at(0x77F1);	// @ (0xEFE * 8 + 1)
#define                                 ADMSK12_bit         _BIT_ACCESS(SSP2CON2,1)
// SSP1CON2<ADMSK21>
extern volatile __bit                   ADMSK21             __at(0x7E2A);	// @ (0xFC5 * 8 + 2)
#define                                 ADMSK21_bit         _BIT_ACCESS(SSP1CON2,2)
// SSP2CON2<ADMSK22>
extern volatile __bit                   ADMSK22             __at(0x77F2);	// @ (0xEFE * 8 + 2)
#define                                 ADMSK22_bit         _BIT_ACCESS(SSP2CON2,2)
// SSP1CON2<ADMSK31>
extern volatile __bit                   ADMSK31             __at(0x7E2B);	// @ (0xFC5 * 8 + 3)
#define                                 ADMSK31_bit         _BIT_ACCESS(SSP1CON2,3)
// SSP2CON2<ADMSK32>
extern volatile __bit                   ADMSK32             __at(0x77F3);	// @ (0xEFE * 8 + 3)
#define                                 ADMSK32_bit         _BIT_ACCESS(SSP2CON2,3)
// SSP1CON2<ADMSK41>
extern volatile __bit                   ADMSK41             __at(0x7E2C);	// @ (0xFC5 * 8 + 4)
#define                                 ADMSK41_bit         _BIT_ACCESS(SSP1CON2,4)
// SSP2CON2<ADMSK42>
extern volatile __bit                   ADMSK42             __at(0x77F4);	// @ (0xEFE * 8 + 4)
#define                                 ADMSK42_bit         _BIT_ACCESS(SSP2CON2,4)
// SSP1CON2<ADMSK51>
extern volatile __bit                   ADMSK51             __at(0x7E2D);	// @ (0xFC5 * 8 + 5)
#define                                 ADMSK51_bit         _BIT_ACCESS(SSP1CON2,5)
// SSP2CON2<ADMSK52>
extern volatile __bit                   ADMSK52             __at(0x77F5);	// @ (0xEFE * 8 + 5)
#define                                 ADMSK52_bit         _BIT_ACCESS(SSP2CON2,5)
// ADCON0<ADON>
extern volatile __bit                   ADON                __at(0x7E10);	// @ (0xFC2 * 8 + 0)
#define                                 ADON_bit            _BIT_ACCESS(ADCON0,0)
// PORTJ<ALE>
extern volatile __bit                   ALE                 __at(0x7C40);	// @ (0xF88 * 8 + 0)
#define                                 ALE_bit             _BIT_ACCESS(PORTJ,0)
// ALRMCFG<ALRMEN>
extern volatile __bit                   ALRMEN              __at(0x7ADF);	// @ (0xF5B * 8 + 7)
#define                                 ALRMEN_bit          _BIT_ACCESS(ALRMCFG,7)
// ALRMCFG<ALRMPTR0>
extern volatile __bit                   ALRMPTR0            __at(0x7AD8);	// @ (0xF5B * 8 + 0)
#define                                 ALRMPTR0_bit        _BIT_ACCESS(ALRMCFG,0)
// ALRMCFG<ALRMPTR1>
extern volatile __bit                   ALRMPTR1            __at(0x7AD9);	// @ (0xF5B * 8 + 1)
#define                                 ALRMPTR1_bit        _BIT_ACCESS(ALRMCFG,1)
// ALRMCFG<AMASK0>
extern volatile __bit                   AMASK0              __at(0x7ADA);	// @ (0xF5B * 8 + 2)
#define                                 AMASK0_bit          _BIT_ACCESS(ALRMCFG,2)
// ALRMCFG<AMASK1>
extern volatile __bit                   AMASK1              __at(0x7ADB);	// @ (0xF5B * 8 + 3)
#define                                 AMASK1_bit          _BIT_ACCESS(ALRMCFG,3)
// ALRMCFG<AMASK2>
extern volatile __bit                   AMASK2              __at(0x7ADC);	// @ (0xF5B * 8 + 4)
#define                                 AMASK2_bit          _BIT_ACCESS(ALRMCFG,4)
// ALRMCFG<AMASK3>
extern volatile __bit                   AMASK3              __at(0x7ADD);	// @ (0xF5B * 8 + 5)
#define                                 AMASK3_bit          _BIT_ACCESS(ALRMCFG,5)
// PORTA<AN0>
extern volatile __bit                   AN0                 __at(0x7C00);	// @ (0xF80 * 8 + 0)
#define                                 AN0_bit             _BIT_ACCESS(PORTA,0)
// PORTA<AN1>
extern volatile __bit                   AN1                 __at(0x7C01);	// @ (0xF80 * 8 + 1)
#define                                 AN1_bit             _BIT_ACCESS(PORTA,1)
// PORTF<AN10>
extern volatile __bit                   AN10                __at(0x7C2D);	// @ (0xF85 * 8 + 5)
#define                                 AN10_bit            _BIT_ACCESS(PORTF,5)
// PORTF<AN11>
extern volatile __bit                   AN11                __at(0x7C2E);	// @ (0xF85 * 8 + 6)
#define                                 AN11_bit            _BIT_ACCESS(PORTF,6)
// PORTH<AN12>
extern volatile __bit                   AN12                __at(0x7C3C);	// @ (0xF87 * 8 + 4)
#define                                 AN12_bit            _BIT_ACCESS(PORTH,4)
// PORTH<AN13>
extern volatile __bit                   AN13                __at(0x7C3D);	// @ (0xF87 * 8 + 5)
#define                                 AN13_bit            _BIT_ACCESS(PORTH,5)
// PORTH<AN14>
extern volatile __bit                   AN14                __at(0x7C3E);	// @ (0xF87 * 8 + 6)
#define                                 AN14_bit            _BIT_ACCESS(PORTH,6)
// PORTH<AN15>
extern volatile __bit                   AN15                __at(0x7C3F);	// @ (0xF87 * 8 + 7)
#define                                 AN15_bit            _BIT_ACCESS(PORTH,7)
// PORTG<AN16>
extern volatile __bit                   AN16                __at(0x7C34);	// @ (0xF86 * 8 + 4)
#define                                 AN16_bit            _BIT_ACCESS(PORTG,4)
// PORTG<AN17>
extern volatile __bit                   AN17                __at(0x7C33);	// @ (0xF86 * 8 + 3)
#define                                 AN17_bit            _BIT_ACCESS(PORTG,3)
// PORTG<AN18>
extern volatile __bit                   AN18                __at(0x7C32);	// @ (0xF86 * 8 + 2)
#define                                 AN18_bit            _BIT_ACCESS(PORTG,2)
// PORTG<AN19>
extern volatile __bit                   AN19                __at(0x7C31);	// @ (0xF86 * 8 + 1)
#define                                 AN19_bit            _BIT_ACCESS(PORTG,1)
// PORTA<AN2>
extern volatile __bit                   AN2                 __at(0x7C02);	// @ (0xF80 * 8 + 2)
#define                                 AN2_bit             _BIT_ACCESS(PORTA,2)
// PORTH<AN20>
extern volatile __bit                   AN20                __at(0x7C3B);	// @ (0xF87 * 8 + 3)
#define                                 AN20_bit            _BIT_ACCESS(PORTH,3)
// PORTH<AN21>
extern volatile __bit                   AN21                __at(0x7C3A);	// @ (0xF87 * 8 + 2)
#define                                 AN21_bit            _BIT_ACCESS(PORTH,2)
// PORTH<AN22>
extern volatile __bit                   AN22                __at(0x7C39);	// @ (0xF87 * 8 + 1)
#define                                 AN22_bit            _BIT_ACCESS(PORTH,1)
// PORTH<AN23>
extern volatile __bit                   AN23                __at(0x7C38);	// @ (0xF87 * 8 + 0)
#define                                 AN23_bit            _BIT_ACCESS(PORTH,0)
// PORTA<AN3>
extern volatile __bit                   AN3                 __at(0x7C03);	// @ (0xF80 * 8 + 3)
#define                                 AN3_bit             _BIT_ACCESS(PORTA,3)
// PORTA<AN4>
extern volatile __bit                   AN4                 __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 AN4_bit             _BIT_ACCESS(PORTA,5)
// PORTF<AN5>
extern volatile __bit                   AN5                 __at(0x7C2F);	// @ (0xF85 * 8 + 7)
#define                                 AN5_bit             _BIT_ACCESS(PORTF,7)
// PORTF<AN6>
extern volatile __bit                   AN6                 __at(0x7C29);	// @ (0xF85 * 8 + 1)
#define                                 AN6_bit             _BIT_ACCESS(PORTF,1)
// PORTF<AN7>
extern volatile __bit                   AN7                 __at(0x7C2A);	// @ (0xF85 * 8 + 2)
#define                                 AN7_bit             _BIT_ACCESS(PORTF,2)
// PORTF<AN8>
extern volatile __bit                   AN8                 __at(0x7C2B);	// @ (0xF85 * 8 + 3)
#define                                 AN8_bit             _BIT_ACCESS(PORTF,3)
// PORTF<AN9>
extern volatile __bit                   AN9                 __at(0x7C2C);	// @ (0xF85 * 8 + 4)
#define                                 AN9_bit             _BIT_ACCESS(PORTF,4)
// ANCON0<ANSEL0>
extern volatile __bit                   ANSEL0              __at(0x7928);	// @ (0xF25 * 8 + 0)
#define                                 ANSEL0_bit          _BIT_ACCESS(ANCON0,0)
// ANCON0<ANSEL1>
extern volatile __bit                   ANSEL1              __at(0x7929);	// @ (0xF25 * 8 + 1)
#define                                 ANSEL1_bit          _BIT_ACCESS(ANCON0,1)
// ANCON1<ANSEL10>
extern volatile __bit                   ANSEL10             __at(0x7922);	// @ (0xF24 * 8 + 2)
#define                                 ANSEL10_bit         _BIT_ACCESS(ANCON1,2)
// ANCON1<ANSEL11>
extern volatile __bit                   ANSEL11             __at(0x7923);	// @ (0xF24 * 8 + 3)
#define                                 ANSEL11_bit         _BIT_ACCESS(ANCON1,3)
// ANCON1<ANSEL12>
extern volatile __bit                   ANSEL12             __at(0x7924);	// @ (0xF24 * 8 + 4)
#define                                 ANSEL12_bit         _BIT_ACCESS(ANCON1,4)
// ANCON1<ANSEL13>
extern volatile __bit                   ANSEL13             __at(0x7925);	// @ (0xF24 * 8 + 5)
#define                                 ANSEL13_bit         _BIT_ACCESS(ANCON1,5)
// ANCON1<ANSEL14>
extern volatile __bit                   ANSEL14             __at(0x7926);	// @ (0xF24 * 8 + 6)
#define                                 ANSEL14_bit         _BIT_ACCESS(ANCON1,6)
// ANCON1<ANSEL15>
extern volatile __bit                   ANSEL15             __at(0x7927);	// @ (0xF24 * 8 + 7)
#define                                 ANSEL15_bit         _BIT_ACCESS(ANCON1,7)
// ANCON2<ANSEL16>
extern volatile __bit                   ANSEL16             __at(0x7918);	// @ (0xF23 * 8 + 0)
#define                                 ANSEL16_bit         _BIT_ACCESS(ANCON2,0)
// ANCON2<ANSEL17>
extern volatile __bit                   ANSEL17             __at(0x7919);	// @ (0xF23 * 8 + 1)
#define                                 ANSEL17_bit         _BIT_ACCESS(ANCON2,1)
// ANCON2<ANSEL18>
extern volatile __bit                   ANSEL18             __at(0x791A);	// @ (0xF23 * 8 + 2)
#define                                 ANSEL18_bit         _BIT_ACCESS(ANCON2,2)
// ANCON2<ANSEL19>
extern volatile __bit                   ANSEL19             __at(0x791B);	// @ (0xF23 * 8 + 3)
#define                                 ANSEL19_bit         _BIT_ACCESS(ANCON2,3)
// ANCON0<ANSEL2>
extern volatile __bit                   ANSEL2              __at(0x792A);	// @ (0xF25 * 8 + 2)
#define                                 ANSEL2_bit          _BIT_ACCESS(ANCON0,2)
// ANCON2<ANSEL20>
extern volatile __bit                   ANSEL20             __at(0x791C);	// @ (0xF23 * 8 + 4)
#define                                 ANSEL20_bit         _BIT_ACCESS(ANCON2,4)
// ANCON2<ANSEL21>
extern volatile __bit                   ANSEL21             __at(0x791D);	// @ (0xF23 * 8 + 5)
#define                                 ANSEL21_bit         _BIT_ACCESS(ANCON2,5)
// ANCON2<ANSEL22>
extern volatile __bit                   ANSEL22             __at(0x791E);	// @ (0xF23 * 8 + 6)
#define                                 ANSEL22_bit         _BIT_ACCESS(ANCON2,6)
// ANCON2<ANSEL23>
extern volatile __bit                   ANSEL23             __at(0x791F);	// @ (0xF23 * 8 + 7)
#define                                 ANSEL23_bit         _BIT_ACCESS(ANCON2,7)
// ANCON0<ANSEL3>
extern volatile __bit                   ANSEL3              __at(0x792B);	// @ (0xF25 * 8 + 3)
#define                                 ANSEL3_bit          _BIT_ACCESS(ANCON0,3)
// ANCON0<ANSEL4>
extern volatile __bit                   ANSEL4              __at(0x792C);	// @ (0xF25 * 8 + 4)
#define                                 ANSEL4_bit          _BIT_ACCESS(ANCON0,4)
// ANCON0<ANSEL5>
extern volatile __bit                   ANSEL5              __at(0x792D);	// @ (0xF25 * 8 + 5)
#define                                 ANSEL5_bit          _BIT_ACCESS(ANCON0,5)
// ANCON0<ANSEL6>
extern volatile __bit                   ANSEL6              __at(0x792E);	// @ (0xF25 * 8 + 6)
#define                                 ANSEL6_bit          _BIT_ACCESS(ANCON0,6)
// ANCON0<ANSEL7>
extern volatile __bit                   ANSEL7              __at(0x792F);	// @ (0xF25 * 8 + 7)
#define                                 ANSEL7_bit          _BIT_ACCESS(ANCON0,7)
// ANCON1<ANSEL8>
extern volatile __bit                   ANSEL8              __at(0x7920);	// @ (0xF24 * 8 + 0)
#define                                 ANSEL8_bit          _BIT_ACCESS(ANCON1,0)
// ANCON1<ANSEL9>
extern volatile __bit                   ANSEL9              __at(0x7921);	// @ (0xF24 * 8 + 1)
#define                                 ANSEL9_bit          _BIT_ACCESS(ANCON1,1)
// ALRMRPT<ARPT0>
extern volatile __bit                   ARPT0               __at(0x7AD0);	// @ (0xF5A * 8 + 0)
#define                                 ARPT0_bit           _BIT_ACCESS(ALRMRPT,0)
// ALRMRPT<ARPT1>
extern volatile __bit                   ARPT1               __at(0x7AD1);	// @ (0xF5A * 8 + 1)
#define                                 ARPT1_bit           _BIT_ACCESS(ALRMRPT,1)
// ALRMRPT<ARPT2>
extern volatile __bit                   ARPT2               __at(0x7AD2);	// @ (0xF5A * 8 + 2)
#define                                 ARPT2_bit           _BIT_ACCESS(ALRMRPT,2)
// ALRMRPT<ARPT3>
extern volatile __bit                   ARPT3               __at(0x7AD3);	// @ (0xF5A * 8 + 3)
#define                                 ARPT3_bit           _BIT_ACCESS(ALRMRPT,3)
// ALRMRPT<ARPT4>
extern volatile __bit                   ARPT4               __at(0x7AD4);	// @ (0xF5A * 8 + 4)
#define                                 ARPT4_bit           _BIT_ACCESS(ALRMRPT,4)
// ALRMRPT<ARPT5>
extern volatile __bit                   ARPT5               __at(0x7AD5);	// @ (0xF5A * 8 + 5)
#define                                 ARPT5_bit           _BIT_ACCESS(ALRMRPT,5)
// ALRMRPT<ARPT6>
extern volatile __bit                   ARPT6               __at(0x7AD6);	// @ (0xF5A * 8 + 6)
#define                                 ARPT6_bit           _BIT_ACCESS(ALRMRPT,6)
// ALRMRPT<ARPT7>
extern volatile __bit                   ARPT7               __at(0x7AD7);	// @ (0xF5A * 8 + 7)
#define                                 ARPT7_bit           _BIT_ACCESS(ALRMRPT,7)
// PORTJ<BA0>
extern volatile __bit                   BA0                 __at(0x7C44);	// @ (0xF88 * 8 + 4)
#define                                 BA0_bit             _BIT_ACCESS(PORTJ,4)
// PIE2<BCL1IE>
extern volatile __bit                   BCL1IE              __at(0x7D03);	// @ (0xFA0 * 8 + 3)
#define                                 BCL1IE_bit          _BIT_ACCESS(PIE2,3)
// PIR2<BCL1IF>
extern volatile __bit                   BCL1IF              __at(0x7D0B);	// @ (0xFA1 * 8 + 3)
#define                                 BCL1IF_bit          _BIT_ACCESS(PIR2,3)
// IPR2<BCL1IP>
extern volatile __bit                   BCL1IP              __at(0x7D13);	// @ (0xFA2 * 8 + 3)
#define                                 BCL1IP_bit          _BIT_ACCESS(IPR2,3)
// PIE2<BCL2IE>
extern volatile __bit                   BCL2IE              __at(0x7D04);	// @ (0xFA0 * 8 + 4)
#define                                 BCL2IE_bit          _BIT_ACCESS(PIE2,4)
// PIR2<BCL2IF>
extern volatile __bit                   BCL2IF              __at(0x7D0C);	// @ (0xFA1 * 8 + 4)
#define                                 BCL2IF_bit          _BIT_ACCESS(PIR2,4)
// IPR2<BCL2IP>
extern volatile __bit                   BCL2IP              __at(0x7D14);	// @ (0xFA2 * 8 + 4)
#define                                 BCL2IP_bit          _BIT_ACCESS(IPR2,4)
// PIE2<BCLIE>
extern volatile __bit                   BCLIE               __at(0x7D03);	// @ (0xFA0 * 8 + 3)
#define                                 BCLIE_bit           _BIT_ACCESS(PIE2,3)
// PIR2<BCLIF>
extern volatile __bit                   BCLIF               __at(0x7D0B);	// @ (0xFA1 * 8 + 3)
#define                                 BCLIF_bit           _BIT_ACCESS(PIR2,3)
// IPR2<BCLIP>
extern volatile __bit                   BCLIP               __at(0x7D13);	// @ (0xFA2 * 8 + 3)
#define                                 BCLIP_bit           _BIT_ACCESS(IPR2,3)
// SSP1STAT<BF1>
extern volatile __bit                   BF1                 __at(0x7E38);	// @ (0xFC7 * 8 + 0)
#define                                 BF1_bit             _BIT_ACCESS(SSP1STAT,0)
// SSP2STAT<BF2>
extern volatile __bit                   BF2                 __at(0x7800);	// @ (0xF00 * 8 + 0)
#define                                 BF2_bit             _BIT_ACCESS(SSP2STAT,0)
// HLVDCON<BGVST>
extern volatile __bit                   BGVST               __at(0x7D46);	// @ (0xFA8 * 8 + 6)
#define                                 BGVST_bit           _BIT_ACCESS(HLVDCON,6)
// LCDPS<BIASMD>
extern volatile __bit                   BIASMD              __at(0x77AE);	// @ (0xEF5 * 8 + 6)
#define                                 BIASMD_bit          _BIT_ACCESS(LCDPS,6)
// RCON<BOR>
extern volatile __bit                   BOR                 __at(0x7E80);	// @ (0xFD0 * 8 + 0)
#define                                 BOR_bit             _BIT_ACCESS(RCON,0)
// BAUDCON1<BRG161>
extern volatile __bit                   BRG161              __at(0x7B2B);	// @ (0xF65 * 8 + 3)
#define                                 BRG161_bit          _BIT_ACCESS(BAUDCON1,3)
// BAUDCON2<BRG162>
extern volatile __bit                   BRG162              __at(0x7903);	// @ (0xF20 * 8 + 3)
#define                                 BRG162_bit          _BIT_ACCESS(BAUDCON2,3)
// TXSTA1<BRGH1>
extern volatile __bit                   BRGH1               __at(0x7D62);	// @ (0xFAC * 8 + 2)
#define                                 BRGH1_bit           _BIT_ACCESS(TXSTA1,2)
// TXSTA2<BRGH2>
extern volatile __bit                   BRGH2               __at(0x790A);	// @ (0xF21 * 8 + 2)
#define                                 BRGH2_bit           _BIT_ACCESS(TXSTA2,2)
// CM1CON<C1CH0>
extern volatile __bit                   C1CH0               __at(0x7AA0);	// @ (0xF54 * 8 + 0)
#define                                 C1CH0_bit           _BIT_ACCESS(CM1CON,0)
// CM1CON<C1CH1>
extern volatile __bit                   C1CH1               __at(0x7AA1);	// @ (0xF54 * 8 + 1)
#define                                 C1CH1_bit           _BIT_ACCESS(CM1CON,1)
// PORTF<C1INA>
extern volatile __bit                   C1INA               __at(0x7C2E);	// @ (0xF85 * 8 + 6)
#define                                 C1INA_bit           _BIT_ACCESS(PORTF,6)
// PORTF<C1INB>
extern volatile __bit                   C1INB               __at(0x7C2D);	// @ (0xF85 * 8 + 5)
#define                                 C1INB_bit           _BIT_ACCESS(PORTF,5)
// PORTH<C1INC>
extern volatile __bit                   C1INC               __at(0x7C3E);	// @ (0xF87 * 8 + 6)
#define                                 C1INC_bit           _BIT_ACCESS(PORTH,6)
// PORTF<C1OUTF>
extern volatile __bit                   C1OUTF              __at(0x7C2A);	// @ (0xF85 * 8 + 2)
#define                                 C1OUTF_bit          _BIT_ACCESS(PORTF,2)
// CCPTMRS0<C1TSEL0>
extern volatile __bit                   C1TSEL0             __at(0x7968);	// @ (0xF2D * 8 + 0)
#define                                 C1TSEL0_bit         _BIT_ACCESS(CCPTMRS0,0)
// CCPTMRS0<C1TSEL1>
extern volatile __bit                   C1TSEL1             __at(0x7969);	// @ (0xF2D * 8 + 1)
#define                                 C1TSEL1_bit         _BIT_ACCESS(CCPTMRS0,1)
// CCPTMRS0<C1TSEL2>
extern volatile __bit                   C1TSEL2             __at(0x796A);	// @ (0xF2D * 8 + 2)
#define                                 C1TSEL2_bit         _BIT_ACCESS(CCPTMRS0,2)
// PORTF<C2INA>
extern volatile __bit                   C2INA               __at(0x7C2C);	// @ (0xF85 * 8 + 4)
#define                                 C2INA_bit           _BIT_ACCESS(PORTF,4)
// PORTF<C2INB>
extern volatile __bit                   C2INB               __at(0x7C2B);	// @ (0xF85 * 8 + 3)
#define                                 C2INB_bit           _BIT_ACCESS(PORTF,3)
// PORTH<C2INC>
extern volatile __bit                   C2INC               __at(0x7C3C);	// @ (0xF87 * 8 + 4)
#define                                 C2INC_bit           _BIT_ACCESS(PORTH,4)
// PORTH<C2IND>
extern volatile __bit                   C2IND               __at(0x7C3D);	// @ (0xF87 * 8 + 5)
#define                                 C2IND_bit           _BIT_ACCESS(PORTH,5)
// PORTF<C2OUTF>
extern volatile __bit                   C2OUTF              __at(0x7C29);	// @ (0xF85 * 8 + 1)
#define                                 C2OUTF_bit          _BIT_ACCESS(PORTF,1)
// CCPTMRS0<C2TSEL0>
extern volatile __bit                   C2TSEL0             __at(0x796B);	// @ (0xF2D * 8 + 3)
#define                                 C2TSEL0_bit         _BIT_ACCESS(CCPTMRS0,3)
// CCPTMRS0<C2TSEL1>
extern volatile __bit                   C2TSEL1             __at(0x796C);	// @ (0xF2D * 8 + 4)
#define                                 C2TSEL1_bit         _BIT_ACCESS(CCPTMRS0,4)
// CCPTMRS0<C2TSEL2>
extern volatile __bit                   C2TSEL2             __at(0x796D);	// @ (0xF2D * 8 + 5)
#define                                 C2TSEL2_bit         _BIT_ACCESS(CCPTMRS0,5)
// PORTG<C3INA>
extern volatile __bit                   C3INA               __at(0x7C32);	// @ (0xF86 * 8 + 2)
#define                                 C3INA_bit           _BIT_ACCESS(PORTG,2)
// PORTG<C3INB>
extern volatile __bit                   C3INB               __at(0x7C33);	// @ (0xF86 * 8 + 3)
#define                                 C3INB_bit           _BIT_ACCESS(PORTG,3)
// PORTG<C3INC>
extern volatile __bit                   C3INC               __at(0x7C34);	// @ (0xF86 * 8 + 4)
#define                                 C3INC_bit           _BIT_ACCESS(PORTG,4)
// PORTG<C3OUTG>
extern volatile __bit                   C3OUTG              __at(0x7C31);	// @ (0xF86 * 8 + 1)
#define                                 C3OUTG_bit          _BIT_ACCESS(PORTG,1)
// CCPTMRS0<C3TSEL0>
extern volatile __bit                   C3TSEL0             __at(0x796E);	// @ (0xF2D * 8 + 6)
#define                                 C3TSEL0_bit         _BIT_ACCESS(CCPTMRS0,6)
// CCPTMRS0<C3TSEL1>
extern volatile __bit                   C3TSEL1             __at(0x796F);	// @ (0xF2D * 8 + 7)
#define                                 C3TSEL1_bit         _BIT_ACCESS(CCPTMRS0,7)
// CCPTMRS1<C4TSEL0>
extern volatile __bit                   C4TSEL0             __at(0x7960);	// @ (0xF2C * 8 + 0)
#define                                 C4TSEL0_bit         _BIT_ACCESS(CCPTMRS1,0)
// CCPTMRS1<C4TSEL1>
extern volatile __bit                   C4TSEL1             __at(0x7961);	// @ (0xF2C * 8 + 1)
#define                                 C4TSEL1_bit         _BIT_ACCESS(CCPTMRS1,1)
// CCPTMRS1<C5TSEL0>
extern volatile __bit                   C5TSEL0             __at(0x7962);	// @ (0xF2C * 8 + 2)
#define                                 C5TSEL0_bit         _BIT_ACCESS(CCPTMRS1,2)
// CCPTMRS1<C6TSEL0>
extern volatile __bit                   C6TSEL0             __at(0x7964);	// @ (0xF2C * 8 + 4)
#define                                 C6TSEL0_bit         _BIT_ACCESS(CCPTMRS1,4)
// CCPTMRS1<C7TSEL0>
extern volatile __bit                   C7TSEL0             __at(0x7966);	// @ (0xF2C * 8 + 6)
#define                                 C7TSEL0_bit         _BIT_ACCESS(CCPTMRS1,6)
// CCPTMRS1<C7TSEL1>
extern volatile __bit                   C7TSEL1             __at(0x7967);	// @ (0xF2C * 8 + 7)
#define                                 C7TSEL1_bit         _BIT_ACCESS(CCPTMRS1,7)
// CCPTMRS2<C8TSEL0>
extern volatile __bit                   C8TSEL0             __at(0x7958);	// @ (0xF2B * 8 + 0)
#define                                 C8TSEL0_bit         _BIT_ACCESS(CCPTMRS2,0)
// CCPTMRS2<C8TSEL1>
extern volatile __bit                   C8TSEL1             __at(0x7959);	// @ (0xF2B * 8 + 1)
#define                                 C8TSEL1_bit         _BIT_ACCESS(CCPTMRS2,1)
// RTCCAL<CAL0>
extern volatile __bit                   CAL0                __at(0x7AF0);	// @ (0xF5E * 8 + 0)
#define                                 CAL0_bit            _BIT_ACCESS(RTCCAL,0)
// RTCCAL<CAL1>
extern volatile __bit                   CAL1                __at(0x7AF1);	// @ (0xF5E * 8 + 1)
#define                                 CAL1_bit            _BIT_ACCESS(RTCCAL,1)
// RTCCAL<CAL2>
extern volatile __bit                   CAL2                __at(0x7AF2);	// @ (0xF5E * 8 + 2)
#define                                 CAL2_bit            _BIT_ACCESS(RTCCAL,2)
// RTCCAL<CAL3>
extern volatile __bit                   CAL3                __at(0x7AF3);	// @ (0xF5E * 8 + 3)
#define                                 CAL3_bit            _BIT_ACCESS(RTCCAL,3)
// RTCCAL<CAL4>
extern volatile __bit                   CAL4                __at(0x7AF4);	// @ (0xF5E * 8 + 4)
#define                                 CAL4_bit            _BIT_ACCESS(RTCCAL,4)
// RTCCAL<CAL5>
extern volatile __bit                   CAL5                __at(0x7AF5);	// @ (0xF5E * 8 + 5)
#define                                 CAL5_bit            _BIT_ACCESS(RTCCAL,5)
// RTCCAL<CAL6>
extern volatile __bit                   CAL6                __at(0x7AF6);	// @ (0xF5E * 8 + 6)
#define                                 CAL6_bit            _BIT_ACCESS(RTCCAL,6)
// RTCCAL<CAL7>
extern volatile __bit                   CAL7                __at(0x7AF7);	// @ (0xF5E * 8 + 7)
#define                                 CAL7_bit            _BIT_ACCESS(RTCCAL,7)
// STATUS<CARRY>
extern volatile __bit                   CARRY               __at(0x7EC0);	// @ (0xFD8 * 8 + 0)
#define                                 CARRY_bit           _BIT_ACCESS(STATUS,0)
// CM1CON<CCH01>
extern volatile __bit                   CCH01               __at(0x7AA0);	// @ (0xF54 * 8 + 0)
#define                                 CCH01_bit           _BIT_ACCESS(CM1CON,0)
// CM2CON<CCH02>
extern volatile __bit                   CCH02               __at(0x7978);	// @ (0xF2F * 8 + 0)
#define                                 CCH02_bit           _BIT_ACCESS(CM2CON,0)
// CM3CON<CCH03>
extern volatile __bit                   CCH03               __at(0x7970);	// @ (0xF2E * 8 + 0)
#define                                 CCH03_bit           _BIT_ACCESS(CM3CON,0)
// IPR5<CCH05>
extern volatile __bit                   CCH05               __at(0x7E90);	// @ (0xFD2 * 8 + 0)
#define                                 CCH05_bit           _BIT_ACCESS(IPR5,0)
// CM1CON<CCH11>
extern volatile __bit                   CCH11               __at(0x7AA1);	// @ (0xF54 * 8 + 1)
#define                                 CCH11_bit           _BIT_ACCESS(CM1CON,1)
// CM2CON<CCH12>
extern volatile __bit                   CCH12               __at(0x7979);	// @ (0xF2F * 8 + 1)
#define                                 CCH12_bit           _BIT_ACCESS(CM2CON,1)
// CM3CON<CCH13>
extern volatile __bit                   CCH13               __at(0x7971);	// @ (0xF2E * 8 + 1)
#define                                 CCH13_bit           _BIT_ACCESS(CM3CON,1)
// IPR5<CCH15>
extern volatile __bit                   CCH15               __at(0x7E91);	// @ (0xFD2 * 8 + 1)
#define                                 CCH15_bit           _BIT_ACCESS(IPR5,1)
// IPR4<CCIP3IP>
extern volatile __bit                   CCIP3IP             __at(0x7DC0);	// @ (0xFB8 * 8 + 0)
#define                                 CCIP3IP_bit         _BIT_ACCESS(IPR4,0)
// PORTC<CCP1>
extern volatile __bit                   CCP1                __at(0x7C12);	// @ (0xF82 * 8 + 2)
#define                                 CCP1_bit            _BIT_ACCESS(PORTC,2)
// PORTE<CCP10>
extern volatile __bit                   CCP10               __at(0x7C22);	// @ (0xF84 * 8 + 2)
#define                                 CCP10_bit           _BIT_ACCESS(PORTE,2)
// PIE3<CCP1IE>
extern volatile __bit                   CCP1IE              __at(0x7D19);	// @ (0xFA3 * 8 + 1)
#define                                 CCP1IE_bit          _BIT_ACCESS(PIE3,1)
// PIR3<CCP1IF>
extern volatile __bit                   CCP1IF              __at(0x7D21);	// @ (0xFA4 * 8 + 1)
#define                                 CCP1IF_bit          _BIT_ACCESS(PIR3,1)
// IPR3<CCP1IP>
extern volatile __bit                   CCP1IP              __at(0x7D29);	// @ (0xFA5 * 8 + 1)
#define                                 CCP1IP_bit          _BIT_ACCESS(IPR3,1)
// CCP1CON<CCP1M0>
extern volatile __bit                   CCP1M0              __at(0x7DD8);	// @ (0xFBB * 8 + 0)
#define                                 CCP1M0_bit          _BIT_ACCESS(CCP1CON,0)
// CCP1CON<CCP1M1>
extern volatile __bit                   CCP1M1              __at(0x7DD9);	// @ (0xFBB * 8 + 1)
#define                                 CCP1M1_bit          _BIT_ACCESS(CCP1CON,1)
// CCP1CON<CCP1M2>
extern volatile __bit                   CCP1M2              __at(0x7DDA);	// @ (0xFBB * 8 + 2)
#define                                 CCP1M2_bit          _BIT_ACCESS(CCP1CON,2)
// CCP1CON<CCP1M3>
extern volatile __bit                   CCP1M3              __at(0x7DDB);	// @ (0xFBB * 8 + 3)
#define                                 CCP1M3_bit          _BIT_ACCESS(CCP1CON,3)
// PMD0<CCP1MD>
extern volatile __bit                   CCP1MD              __at(0x78CD);	// @ (0xF19 * 8 + 5)
#define                                 CCP1MD_bit          _BIT_ACCESS(PMD0,5)
// ODCON1<CCP1OD>
extern volatile __bit                   CCP1OD              __at(0x794D);	// @ (0xF29 * 8 + 5)
#define                                 CCP1OD_bit          _BIT_ACCESS(ODCON1,5)
// CCP1CON<CCP1X>
extern volatile __bit                   CCP1X               __at(0x7DDD);	// @ (0xFBB * 8 + 5)
#define                                 CCP1X_bit           _BIT_ACCESS(CCP1CON,5)
// CCP1CON<CCP1Y>
extern volatile __bit                   CCP1Y               __at(0x7DDC);	// @ (0xFBB * 8 + 4)
#define                                 CCP1Y_bit           _BIT_ACCESS(CCP1CON,4)
// PORTE<CCP2E>
extern volatile __bit                   CCP2E               __at(0x7C27);	// @ (0xF84 * 8 + 7)
#define                                 CCP2E_bit           _BIT_ACCESS(PORTE,7)
// PIE3<CCP2IE>
extern volatile __bit                   CCP2IE              __at(0x7D1A);	// @ (0xFA3 * 8 + 2)
#define                                 CCP2IE_bit          _BIT_ACCESS(PIE3,2)
// PIR3<CCP2IF>
extern volatile __bit                   CCP2IF              __at(0x7D22);	// @ (0xFA4 * 8 + 2)
#define                                 CCP2IF_bit          _BIT_ACCESS(PIR3,2)
// IPR3<CCP2IP>
extern volatile __bit                   CCP2IP              __at(0x7D2A);	// @ (0xFA5 * 8 + 2)
#define                                 CCP2IP_bit          _BIT_ACCESS(IPR3,2)
// CCP2CON<CCP2M0>
extern volatile __bit                   CCP2M0              __at(0x7A70);	// @ (0xF4E * 8 + 0)
#define                                 CCP2M0_bit          _BIT_ACCESS(CCP2CON,0)
// CCP2CON<CCP2M1>
extern volatile __bit                   CCP2M1              __at(0x7A71);	// @ (0xF4E * 8 + 1)
#define                                 CCP2M1_bit          _BIT_ACCESS(CCP2CON,1)
// CCP2CON<CCP2M2>
extern volatile __bit                   CCP2M2              __at(0x7A72);	// @ (0xF4E * 8 + 2)
#define                                 CCP2M2_bit          _BIT_ACCESS(CCP2CON,2)
// CCP2CON<CCP2M3>
extern volatile __bit                   CCP2M3              __at(0x7A73);	// @ (0xF4E * 8 + 3)
#define                                 CCP2M3_bit          _BIT_ACCESS(CCP2CON,3)
// PMD0<CCP2MD>
extern volatile __bit                   CCP2MD              __at(0x78CE);	// @ (0xF19 * 8 + 6)
#define                                 CCP2MD_bit          _BIT_ACCESS(PMD0,6)
// ODCON1<CCP2OD>
extern volatile __bit                   CCP2OD              __at(0x794E);	// @ (0xF29 * 8 + 6)
#define                                 CCP2OD_bit          _BIT_ACCESS(ODCON1,6)
// CCP2CON<CCP2X>
extern volatile __bit                   CCP2X               __at(0x7A75);	// @ (0xF4E * 8 + 5)
#define                                 CCP2X_bit           _BIT_ACCESS(CCP2CON,5)
// CCP2CON<CCP2Y>
extern volatile __bit                   CCP2Y               __at(0x7A74);	// @ (0xF4E * 8 + 4)
#define                                 CCP2Y_bit           _BIT_ACCESS(CCP2CON,4)
// PORTB<CCP2_PA2>
extern volatile __bit                   CCP2_PA2            __at(0x7C0B);	// @ (0xF81 * 8 + 3)
#define                                 CCP2_PA2_bit        _BIT_ACCESS(PORTB,3)
// PORTG<CCP3>
extern volatile __bit                   CCP3                __at(0x7C30);	// @ (0xF86 * 8 + 0)
#define                                 CCP3_bit            _BIT_ACCESS(PORTG,0)
// PIE4<CCP3IE>
extern volatile __bit                   CCP3IE              __at(0x7DB0);	// @ (0xFB6 * 8 + 0)
#define                                 CCP3IE_bit          _BIT_ACCESS(PIE4,0)
// PIR4<CCP3IF>
extern volatile __bit                   CCP3IF              __at(0x7DB8);	// @ (0xFB7 * 8 + 0)
#define                                 CCP3IF_bit          _BIT_ACCESS(PIR4,0)
// IPR4<CCP3IP>
extern volatile __bit                   CCP3IP              __at(0x7DC0);	// @ (0xFB8 * 8 + 0)
#define                                 CCP3IP_bit          _BIT_ACCESS(IPR4,0)
// CCP3CON<CCP3M0>
extern volatile __bit                   CCP3M0              __at(0x7A48);	// @ (0xF49 * 8 + 0)
#define                                 CCP3M0_bit          _BIT_ACCESS(CCP3CON,0)
// CCP3CON<CCP3M1>
extern volatile __bit                   CCP3M1              __at(0x7A49);	// @ (0xF49 * 8 + 1)
#define                                 CCP3M1_bit          _BIT_ACCESS(CCP3CON,1)
// CCP3CON<CCP3M2>
extern volatile __bit                   CCP3M2              __at(0x7A4A);	// @ (0xF49 * 8 + 2)
#define                                 CCP3M2_bit          _BIT_ACCESS(CCP3CON,2)
// CCP3CON<CCP3M3>
extern volatile __bit                   CCP3M3              __at(0x7A4B);	// @ (0xF49 * 8 + 3)
#define                                 CCP3M3_bit          _BIT_ACCESS(CCP3CON,3)
// PMD0<CCP3MD>
extern volatile __bit                   CCP3MD              __at(0x78CF);	// @ (0xF19 * 8 + 7)
#define                                 CCP3MD_bit          _BIT_ACCESS(PMD0,7)
// ODCON2<CCP3OD>
extern volatile __bit                   CCP3OD              __at(0x7940);	// @ (0xF28 * 8 + 0)
#define                                 CCP3OD_bit          _BIT_ACCESS(ODCON2,0)
// CCP3CON<CCP3X>
extern volatile __bit                   CCP3X               __at(0x7A4D);	// @ (0xF49 * 8 + 5)
#define                                 CCP3X_bit           _BIT_ACCESS(CCP3CON,5)
// CCP3CON<CCP3Y>
extern volatile __bit                   CCP3Y               __at(0x7A4C);	// @ (0xF49 * 8 + 4)
#define                                 CCP3Y_bit           _BIT_ACCESS(CCP3CON,4)
// PORTG<CCP4>
extern volatile __bit                   CCP4                __at(0x7C33);	// @ (0xF86 * 8 + 3)
#define                                 CCP4_bit            _BIT_ACCESS(PORTG,3)
// PIE4<CCP4IE>
extern volatile __bit                   CCP4IE              __at(0x7DB1);	// @ (0xFB6 * 8 + 1)
#define                                 CCP4IE_bit          _BIT_ACCESS(PIE4,1)
// PIR4<CCP4IF>
extern volatile __bit                   CCP4IF              __at(0x7DB9);	// @ (0xFB7 * 8 + 1)
#define                                 CCP4IF_bit          _BIT_ACCESS(PIR4,1)
// IPR4<CCP4IP>
extern volatile __bit                   CCP4IP              __at(0x7DC1);	// @ (0xFB8 * 8 + 1)
#define                                 CCP4IP_bit          _BIT_ACCESS(IPR4,1)
// CCP4CON<CCP4M0>
extern volatile __bit                   CCP4M0              __at(0x7878);	// @ (0xF0F * 8 + 0)
#define                                 CCP4M0_bit          _BIT_ACCESS(CCP4CON,0)
// CCP4CON<CCP4M1>
extern volatile __bit                   CCP4M1              __at(0x7879);	// @ (0xF0F * 8 + 1)
#define                                 CCP4M1_bit          _BIT_ACCESS(CCP4CON,1)
// CCP4CON<CCP4M2>
extern volatile __bit                   CCP4M2              __at(0x787A);	// @ (0xF0F * 8 + 2)
#define                                 CCP4M2_bit          _BIT_ACCESS(CCP4CON,2)
// CCP4CON<CCP4M3>
extern volatile __bit                   CCP4M3              __at(0x787B);	// @ (0xF0F * 8 + 3)
#define                                 CCP4M3_bit          _BIT_ACCESS(CCP4CON,3)
// PMD3<CCP4MD>
extern volatile __bit                   CCP4MD              __at(0x78B1);	// @ (0xF16 * 8 + 1)
#define                                 CCP4MD_bit          _BIT_ACCESS(PMD3,1)
// ODCON2<CCP4OD>
extern volatile __bit                   CCP4OD              __at(0x7941);	// @ (0xF28 * 8 + 1)
#define                                 CCP4OD_bit          _BIT_ACCESS(ODCON2,1)
// CCP4CON<CCP4X>
extern volatile __bit                   CCP4X               __at(0x787D);	// @ (0xF0F * 8 + 5)
#define                                 CCP4X_bit           _BIT_ACCESS(CCP4CON,5)
// CCP4CON<CCP4Y>
extern volatile __bit                   CCP4Y               __at(0x787C);	// @ (0xF0F * 8 + 4)
#define                                 CCP4Y_bit           _BIT_ACCESS(CCP4CON,4)
// PORTG<CCP5>
extern volatile __bit                   CCP5                __at(0x7C34);	// @ (0xF86 * 8 + 4)
#define                                 CCP5_bit            _BIT_ACCESS(PORTG,4)
// PIE4<CCP5IE>
extern volatile __bit                   CCP5IE              __at(0x7DB2);	// @ (0xFB6 * 8 + 2)
#define                                 CCP5IE_bit          _BIT_ACCESS(PIE4,2)
// PIR4<CCP5IF>
extern volatile __bit                   CCP5IF              __at(0x7DBA);	// @ (0xFB7 * 8 + 2)
#define                                 CCP5IF_bit          _BIT_ACCESS(PIR4,2)
// IPR4<CCP5IP>
extern volatile __bit                   CCP5IP              __at(0x7DC2);	// @ (0xFB8 * 8 + 2)
#define                                 CCP5IP_bit          _BIT_ACCESS(IPR4,2)
// CCP5CON<CCP5M0>
extern volatile __bit                   CCP5M0              __at(0x7860);	// @ (0xF0C * 8 + 0)
#define                                 CCP5M0_bit          _BIT_ACCESS(CCP5CON,0)
// CCP5CON<CCP5M1>
extern volatile __bit                   CCP5M1              __at(0x7861);	// @ (0xF0C * 8 + 1)
#define                                 CCP5M1_bit          _BIT_ACCESS(CCP5CON,1)
// CCP5CON<CCP5M2>
extern volatile __bit                   CCP5M2              __at(0x7862);	// @ (0xF0C * 8 + 2)
#define                                 CCP5M2_bit          _BIT_ACCESS(CCP5CON,2)
// CCP5CON<CCP5M3>
extern volatile __bit                   CCP5M3              __at(0x7863);	// @ (0xF0C * 8 + 3)
#define                                 CCP5M3_bit          _BIT_ACCESS(CCP5CON,3)
// PMD3<CCP5MD>
extern volatile __bit                   CCP5MD              __at(0x78B2);	// @ (0xF16 * 8 + 2)
#define                                 CCP5MD_bit          _BIT_ACCESS(PMD3,2)
// ODCON2<CCP5OD>
extern volatile __bit                   CCP5OD              __at(0x7942);	// @ (0xF28 * 8 + 2)
#define                                 CCP5OD_bit          _BIT_ACCESS(ODCON2,2)
// CCP5CON<CCP5X>
extern volatile __bit                   CCP5X               __at(0x7865);	// @ (0xF0C * 8 + 5)
#define                                 CCP5X_bit           _BIT_ACCESS(CCP5CON,5)
// CCP5CON<CCP5Y>
extern volatile __bit                   CCP5Y               __at(0x7864);	// @ (0xF0C * 8 + 4)
#define                                 CCP5Y_bit           _BIT_ACCESS(CCP5CON,4)
// PORTE<CCP6E>
extern volatile __bit                   CCP6E               __at(0x7C26);	// @ (0xF84 * 8 + 6)
#define                                 CCP6E_bit           _BIT_ACCESS(PORTE,6)
// PIE4<CCP6IE>
extern volatile __bit                   CCP6IE              __at(0x7DB3);	// @ (0xFB6 * 8 + 3)
#define                                 CCP6IE_bit          _BIT_ACCESS(PIE4,3)
// PIR4<CCP6IF>
extern volatile __bit                   CCP6IF              __at(0x7DBB);	// @ (0xFB7 * 8 + 3)
#define                                 CCP6IF_bit          _BIT_ACCESS(PIR4,3)
// IPR4<CCP6IP>
extern volatile __bit                   CCP6IP              __at(0x7DC3);	// @ (0xFB8 * 8 + 3)
#define                                 CCP6IP_bit          _BIT_ACCESS(IPR4,3)
// CCP6CON<CCP6M0>
extern volatile __bit                   CCP6M0              __at(0x7848);	// @ (0xF09 * 8 + 0)
#define                                 CCP6M0_bit          _BIT_ACCESS(CCP6CON,0)
// CCP6CON<CCP6M1>
extern volatile __bit                   CCP6M1              __at(0x7849);	// @ (0xF09 * 8 + 1)
#define                                 CCP6M1_bit          _BIT_ACCESS(CCP6CON,1)
// CCP6CON<CCP6M2>
extern volatile __bit                   CCP6M2              __at(0x784A);	// @ (0xF09 * 8 + 2)
#define                                 CCP6M2_bit          _BIT_ACCESS(CCP6CON,2)
// CCP6CON<CCP6M3>
extern volatile __bit                   CCP6M3              __at(0x784B);	// @ (0xF09 * 8 + 3)
#define                                 CCP6M3_bit          _BIT_ACCESS(CCP6CON,3)
// PMD3<CCP6MD>
extern volatile __bit                   CCP6MD              __at(0x78B3);	// @ (0xF16 * 8 + 3)
#define                                 CCP6MD_bit          _BIT_ACCESS(PMD3,3)
// ODCON2<CCP6OD>
extern volatile __bit                   CCP6OD              __at(0x7943);	// @ (0xF28 * 8 + 3)
#define                                 CCP6OD_bit          _BIT_ACCESS(ODCON2,3)
// CCP6CON<CCP6X>
extern volatile __bit                   CCP6X               __at(0x784D);	// @ (0xF09 * 8 + 5)
#define                                 CCP6X_bit           _BIT_ACCESS(CCP6CON,5)
// CCP6CON<CCP6Y>
extern volatile __bit                   CCP6Y               __at(0x784C);	// @ (0xF09 * 8 + 4)
#define                                 CCP6Y_bit           _BIT_ACCESS(CCP6CON,4)
// PORTE<CCP7E>
extern volatile __bit                   CCP7E               __at(0x7C25);	// @ (0xF84 * 8 + 5)
#define                                 CCP7E_bit           _BIT_ACCESS(PORTE,5)
// PIE4<CCP7IE>
extern volatile __bit                   CCP7IE              __at(0x7DB4);	// @ (0xFB6 * 8 + 4)
#define                                 CCP7IE_bit          _BIT_ACCESS(PIE4,4)
// PIR4<CCP7IF>
extern volatile __bit                   CCP7IF              __at(0x7DBC);	// @ (0xFB7 * 8 + 4)
#define                                 CCP7IF_bit          _BIT_ACCESS(PIR4,4)
// IPR4<CCP7IP>
extern volatile __bit                   CCP7IP              __at(0x7DC4);	// @ (0xFB8 * 8 + 4)
#define                                 CCP7IP_bit          _BIT_ACCESS(IPR4,4)
// CCP7CON<CCP7M0>
extern volatile __bit                   CCP7M0              __at(0x7830);	// @ (0xF06 * 8 + 0)
#define                                 CCP7M0_bit          _BIT_ACCESS(CCP7CON,0)
// CCP7CON<CCP7M1>
extern volatile __bit                   CCP7M1              __at(0x7831);	// @ (0xF06 * 8 + 1)
#define                                 CCP7M1_bit          _BIT_ACCESS(CCP7CON,1)
// CCP7CON<CCP7M2>
extern volatile __bit                   CCP7M2              __at(0x7832);	// @ (0xF06 * 8 + 2)
#define                                 CCP7M2_bit          _BIT_ACCESS(CCP7CON,2)
// CCP7CON<CCP7M3>
extern volatile __bit                   CCP7M3              __at(0x7833);	// @ (0xF06 * 8 + 3)
#define                                 CCP7M3_bit          _BIT_ACCESS(CCP7CON,3)
// PMD3<CCP7MD>
extern volatile __bit                   CCP7MD              __at(0x78B4);	// @ (0xF16 * 8 + 4)
#define                                 CCP7MD_bit          _BIT_ACCESS(PMD3,4)
// ODCON2<CCP7OD>
extern volatile __bit                   CCP7OD              __at(0x7944);	// @ (0xF28 * 8 + 4)
#define                                 CCP7OD_bit          _BIT_ACCESS(ODCON2,4)
// CCP7CON<CCP7X>
extern volatile __bit                   CCP7X               __at(0x7835);	// @ (0xF06 * 8 + 5)
#define                                 CCP7X_bit           _BIT_ACCESS(CCP7CON,5)
// CCP7CON<CCP7Y>
extern volatile __bit                   CCP7Y               __at(0x7834);	// @ (0xF06 * 8 + 4)
#define                                 CCP7Y_bit           _BIT_ACCESS(CCP7CON,4)
// PORTE<CCP8E>
extern volatile __bit                   CCP8E               __at(0x7C24);	// @ (0xF84 * 8 + 4)
#define                                 CCP8E_bit           _BIT_ACCESS(PORTE,4)
// PIE4<CCP8IE>
extern volatile __bit                   CCP8IE              __at(0x7DB5);	// @ (0xFB6 * 8 + 5)
#define                                 CCP8IE_bit          _BIT_ACCESS(PIE4,5)
// PIR4<CCP8IF>
extern volatile __bit                   CCP8IF              __at(0x7DBD);	// @ (0xFB7 * 8 + 5)
#define                                 CCP8IF_bit          _BIT_ACCESS(PIR4,5)
// IPR4<CCP8IP>
extern volatile __bit                   CCP8IP              __at(0x7DC5);	// @ (0xFB8 * 8 + 5)
#define                                 CCP8IP_bit          _BIT_ACCESS(IPR4,5)
// CCP8CON<CCP8M0>
extern volatile __bit                   CCP8M0              __at(0x7A30);	// @ (0xF46 * 8 + 0)
#define                                 CCP8M0_bit          _BIT_ACCESS(CCP8CON,0)
// CCP8CON<CCP8M1>
extern volatile __bit                   CCP8M1              __at(0x7A31);	// @ (0xF46 * 8 + 1)
#define                                 CCP8M1_bit          _BIT_ACCESS(CCP8CON,1)
// CCP8CON<CCP8M2>
extern volatile __bit                   CCP8M2              __at(0x7A32);	// @ (0xF46 * 8 + 2)
#define                                 CCP8M2_bit          _BIT_ACCESS(CCP8CON,2)
// CCP8CON<CCP8M3>
extern volatile __bit                   CCP8M3              __at(0x7A33);	// @ (0xF46 * 8 + 3)
#define                                 CCP8M3_bit          _BIT_ACCESS(CCP8CON,3)
// PMD3<CCP8MD>
extern volatile __bit                   CCP8MD              __at(0x78B5);	// @ (0xF16 * 8 + 5)
#define                                 CCP8MD_bit          _BIT_ACCESS(PMD3,5)
// ODCON2<CCP8OD>
extern volatile __bit                   CCP8OD              __at(0x7945);	// @ (0xF28 * 8 + 5)
#define                                 CCP8OD_bit          _BIT_ACCESS(ODCON2,5)
// CCP8CON<CCP8X>
extern volatile __bit                   CCP8X               __at(0x7A35);	// @ (0xF46 * 8 + 5)
#define                                 CCP8X_bit           _BIT_ACCESS(CCP8CON,5)
// CCP8CON<CCP8Y>
extern volatile __bit                   CCP8Y               __at(0x7A34);	// @ (0xF46 * 8 + 4)
#define                                 CCP8Y_bit           _BIT_ACCESS(CCP8CON,4)
// PORTE<CCP9E>
extern volatile __bit                   CCP9E               __at(0x7C23);	// @ (0xF84 * 8 + 3)
#define                                 CCP9E_bit           _BIT_ACCESS(PORTE,3)
// PORTJ<CE>
extern volatile __bit                   CE                  __at(0x7C45);	// @ (0xF88 * 8 + 5)
#define                                 CE_bit              _BIT_ACCESS(PORTJ,5)
// EECON1<CFGS>
extern volatile __bit                   CFGS                __at(0x7BFE);	// @ (0xF7F * 8 + 6)
#define                                 CFGS_bit            _BIT_ACCESS(EECON1,6)
// ALRMCFG<CHIME>
extern volatile __bit                   CHIME               __at(0x7ADE);	// @ (0xF5B * 8 + 6)
#define                                 CHIME_bit           _BIT_ACCESS(ALRMCFG,6)
// ADCON0<CHS0>
extern volatile __bit                   CHS0                __at(0x7E12);	// @ (0xFC2 * 8 + 2)
#define                                 CHS0_bit            _BIT_ACCESS(ADCON0,2)
// ADCON0<CHS1>
extern volatile __bit                   CHS1                __at(0x7E13);	// @ (0xFC2 * 8 + 3)
#define                                 CHS1_bit            _BIT_ACCESS(ADCON0,3)
// ADCON0<CHS2>
extern volatile __bit                   CHS2                __at(0x7E14);	// @ (0xFC2 * 8 + 4)
#define                                 CHS2_bit            _BIT_ACCESS(ADCON0,4)
// ADCON0<CHS3>
extern volatile __bit                   CHS3                __at(0x7E15);	// @ (0xFC2 * 8 + 5)
#define                                 CHS3_bit            _BIT_ACCESS(ADCON0,5)
// ADCON0<CHS4>
extern volatile __bit                   CHS4                __at(0x7E16);	// @ (0xFC2 * 8 + 6)
#define                                 CHS4_bit            _BIT_ACCESS(ADCON0,6)
// ADCON1<CHSN0>
extern volatile __bit                   CHSN0               __at(0x7E08);	// @ (0xFC1 * 8 + 0)
#define                                 CHSN0_bit           _BIT_ACCESS(ADCON1,0)
// ADCON1<CHSN1>
extern volatile __bit                   CHSN1               __at(0x7E09);	// @ (0xFC1 * 8 + 1)
#define                                 CHSN1_bit           _BIT_ACCESS(ADCON1,1)
// ADCON1<CHSN2>
extern volatile __bit                   CHSN2               __at(0x7E0A);	// @ (0xFC1 * 8 + 2)
#define                                 CHSN2_bit           _BIT_ACCESS(ADCON1,2)
// ADCON1<CHSN3>
extern volatile __bit                   CHSN3               __at(0x7E0B);	// @ (0xFC1 * 8 + 3)
#define                                 CHSN3_bit           _BIT_ACCESS(ADCON1,3)
// PORTC<CK1>
extern volatile __bit                   CK1                 __at(0x7C16);	// @ (0xF82 * 8 + 6)
#define                                 CK1_bit             _BIT_ACCESS(PORTC,6)
// PORTG<CK2>
extern volatile __bit                   CK2                 __at(0x7C31);	// @ (0xF86 * 8 + 1)
#define                                 CK2_bit             _BIT_ACCESS(PORTG,1)
// SSP1STAT<CKE1>
extern volatile __bit                   CKE1                __at(0x7E3E);	// @ (0xFC7 * 8 + 6)
#define                                 CKE1_bit            _BIT_ACCESS(SSP1STAT,6)
// SSP2STAT<CKE2>
extern volatile __bit                   CKE2                __at(0x7806);	// @ (0xF00 * 8 + 6)
#define                                 CKE2_bit            _BIT_ACCESS(SSP2STAT,6)
// SSP1CON1<CKP1>
extern volatile __bit                   CKP1                __at(0x7E34);	// @ (0xFC6 * 8 + 4)
#define                                 CKP1_bit            _BIT_ACCESS(SSP1CON1,4)
// SSP2CON1<CKP2>
extern volatile __bit                   CKP2                __at(0x77FC);	// @ (0xEFF * 8 + 4)
#define                                 CKP2_bit            _BIT_ACCESS(SSP2CON1,4)
// BAUDCON1<CKTXP>
extern volatile __bit                   CKTXP               __at(0x7B2C);	// @ (0xF65 * 8 + 4)
#define                                 CKTXP_bit           _BIT_ACCESS(BAUDCON1,4)
// PORTA<CLKI>
extern volatile __bit                   CLKI                __at(0x7C07);	// @ (0xF80 * 8 + 7)
#define                                 CLKI_bit            _BIT_ACCESS(PORTA,7)
// PORTA<CLKO>
extern volatile __bit                   CLKO                __at(0x7C06);	// @ (0xF80 * 8 + 6)
#define                                 CLKO_bit            _BIT_ACCESS(PORTA,6)
// RCON<CM>
extern volatile __bit                   CM                  __at(0x7E85);	// @ (0xFD0 * 8 + 5)
#define                                 CM_bit              _BIT_ACCESS(RCON,5)
// PIE6<CMP1IE>
extern volatile __bit                   CMP1IE              __at(0x7B00);	// @ (0xF60 * 8 + 0)
#define                                 CMP1IE_bit          _BIT_ACCESS(PIE6,0)
// PIR6<CMP1IF>
extern volatile __bit                   CMP1IF              __at(0x7D30);	// @ (0xFA6 * 8 + 0)
#define                                 CMP1IF_bit          _BIT_ACCESS(PIR6,0)
// IPR6<CMP1IP>
extern volatile __bit                   CMP1IP              __at(0x7D48);	// @ (0xFA9 * 8 + 0)
#define                                 CMP1IP_bit          _BIT_ACCESS(IPR6,0)
// PMD2<CMP1MD>
extern volatile __bit                   CMP1MD              __at(0x78B8);	// @ (0xF17 * 8 + 0)
#define                                 CMP1MD_bit          _BIT_ACCESS(PMD2,0)
// CMSTAT<CMP1OUT>
extern volatile __bit                   CMP1OUT             __at(0x7DA5);	// @ (0xFB4 * 8 + 5)
#define                                 CMP1OUT_bit         _BIT_ACCESS(CMSTAT,5)
// PIE6<CMP2IE>
extern volatile __bit                   CMP2IE              __at(0x7B01);	// @ (0xF60 * 8 + 1)
#define                                 CMP2IE_bit          _BIT_ACCESS(PIE6,1)
// PIR6<CMP2IF>
extern volatile __bit                   CMP2IF              __at(0x7D31);	// @ (0xFA6 * 8 + 1)
#define                                 CMP2IF_bit          _BIT_ACCESS(PIR6,1)
// IPR6<CMP2IP>
extern volatile __bit                   CMP2IP              __at(0x7D49);	// @ (0xFA9 * 8 + 1)
#define                                 CMP2IP_bit          _BIT_ACCESS(IPR6,1)
// PMD2<CMP2MD>
extern volatile __bit                   CMP2MD              __at(0x78B9);	// @ (0xF17 * 8 + 1)
#define                                 CMP2MD_bit          _BIT_ACCESS(PMD2,1)
// CMSTAT<CMP2OUT>
extern volatile __bit                   CMP2OUT             __at(0x7DA6);	// @ (0xFB4 * 8 + 6)
#define                                 CMP2OUT_bit         _BIT_ACCESS(CMSTAT,6)
// PIE6<CMP3IE>
extern volatile __bit                   CMP3IE              __at(0x7B02);	// @ (0xF60 * 8 + 2)
#define                                 CMP3IE_bit          _BIT_ACCESS(PIE6,2)
// PIR6<CMP3IF>
extern volatile __bit                   CMP3IF              __at(0x7D32);	// @ (0xFA6 * 8 + 2)
#define                                 CMP3IF_bit          _BIT_ACCESS(PIR6,2)
// IPR6<CMP3IP>
extern volatile __bit                   CMP3IP              __at(0x7D4A);	// @ (0xFA9 * 8 + 2)
#define                                 CMP3IP_bit          _BIT_ACCESS(IPR6,2)
// PMD2<CMP3MD>
extern volatile __bit                   CMP3MD              __at(0x78BA);	// @ (0xF17 * 8 + 2)
#define                                 CMP3MD_bit          _BIT_ACCESS(PMD2,2)
// CMSTAT<CMP3OUT>
extern volatile __bit                   CMP3OUT             __at(0x7DA7);	// @ (0xFB4 * 8 + 7)
#define                                 CMP3OUT_bit         _BIT_ACCESS(CMSTAT,7)
// PSTR2CON<CMPL02>
extern volatile __bit                   CMPL02              __at(0x78DE);	// @ (0xF1B * 8 + 6)
#define                                 CMPL02_bit          _BIT_ACCESS(PSTR2CON,6)
// PSTR3CON<CMPL03>
extern volatile __bit                   CMPL03              __at(0x78D6);	// @ (0xF1A * 8 + 6)
#define                                 CMPL03_bit          _BIT_ACCESS(PSTR3CON,6)
// PSTR2CON<CMPL12>
extern volatile __bit                   CMPL12              __at(0x78DF);	// @ (0xF1B * 8 + 7)
#define                                 CMPL12_bit          _BIT_ACCESS(PSTR2CON,7)
// PSTR3CON<CMPL13>
extern volatile __bit                   CMPL13              __at(0x78D7);	// @ (0xF1A * 8 + 7)
#define                                 CMPL13_bit          _BIT_ACCESS(PSTR3CON,7)
// CM1CON<COE1>
extern volatile __bit                   COE1                __at(0x7AA6);	// @ (0xF54 * 8 + 6)
#define                                 COE1_bit            _BIT_ACCESS(CM1CON,6)
// CM2CON<COE2>
extern volatile __bit                   COE2                __at(0x797E);	// @ (0xF2F * 8 + 6)
#define                                 COE2_bit            _BIT_ACCESS(CM2CON,6)
// CM3CON<COE3>
extern volatile __bit                   COE3                __at(0x7976);	// @ (0xF2E * 8 + 6)
#define                                 COE3_bit            _BIT_ACCESS(CM3CON,6)
// PORTE<COM0>
extern volatile __bit                   COM0                __at(0x7C23);	// @ (0xF84 * 8 + 3)
#define                                 COM0_bit            _BIT_ACCESS(PORTE,3)
// PORTE<COM1>
extern volatile __bit                   COM1                __at(0x7C24);	// @ (0xF84 * 8 + 4)
#define                                 COM1_bit            _BIT_ACCESS(PORTE,4)
// PORTE<COM2>
extern volatile __bit                   COM2                __at(0x7C25);	// @ (0xF84 * 8 + 5)
#define                                 COM2_bit            _BIT_ACCESS(PORTE,5)
// PORTE<COM3>
extern volatile __bit                   COM3                __at(0x7C26);	// @ (0xF84 * 8 + 6)
#define                                 COM3_bit            _BIT_ACCESS(PORTE,6)
// CM1CON<CON1>
extern volatile __bit                   CON1                __at(0x7AA7);	// @ (0xF54 * 8 + 7)
#define                                 CON1_bit            _BIT_ACCESS(CM1CON,7)
// CM2CON<CON2>
extern volatile __bit                   CON2                __at(0x797F);	// @ (0xF2F * 8 + 7)
#define                                 CON2_bit            _BIT_ACCESS(CM2CON,7)
// CM3CON<CON3>
extern volatile __bit                   CON3                __at(0x7977);	// @ (0xF2E * 8 + 7)
#define                                 CON3_bit            _BIT_ACCESS(CM3CON,7)
// CM1CON<CPOL1>
extern volatile __bit                   CPOL1               __at(0x7AA5);	// @ (0xF54 * 8 + 5)
#define                                 CPOL1_bit           _BIT_ACCESS(CM1CON,5)
// CM2CON<CPOL2>
extern volatile __bit                   CPOL2               __at(0x797D);	// @ (0xF2F * 8 + 5)
#define                                 CPOL2_bit           _BIT_ACCESS(CM2CON,5)
// CM3CON<CPOL3>
extern volatile __bit                   CPOL3               __at(0x7975);	// @ (0xF2E * 8 + 5)
#define                                 CPOL3_bit           _BIT_ACCESS(CM3CON,5)
// CM1CON<CREF1>
extern volatile __bit                   CREF1               __at(0x7AA2);	// @ (0xF54 * 8 + 2)
#define                                 CREF1_bit           _BIT_ACCESS(CM1CON,2)
// CM2CON<CREF2>
extern volatile __bit                   CREF2               __at(0x797A);	// @ (0xF2F * 8 + 2)
#define                                 CREF2_bit           _BIT_ACCESS(CM2CON,2)
// CM3CON<CREF3>
extern volatile __bit                   CREF3               __at(0x7972);	// @ (0xF2E * 8 + 2)
#define                                 CREF3_bit           _BIT_ACCESS(CM3CON,2)
// RCSTA1<CREN1>
extern volatile __bit                   CREN1               __at(0x7D5C);	// @ (0xFAB * 8 + 4)
#define                                 CREN1_bit           _BIT_ACCESS(RCSTA1,4)
// RCSTA2<CREN2>
extern volatile __bit                   CREN2               __at(0x7914);	// @ (0xF22 * 8 + 4)
#define                                 CREN2_bit           _BIT_ACCESS(RCSTA2,4)
// PORTE<CS>
extern volatile __bit                   CS                  __at(0x7C22);	// @ (0xF84 * 8 + 2)
#define                                 CS_bit              _BIT_ACCESS(PORTE,2)
// LCDCON<CS0>
extern volatile __bit                   CS0                 __at(0x77A2);	// @ (0xEF4 * 8 + 2)
#define                                 CS0_bit             _BIT_ACCESS(LCDCON,2)
// LCDCON<CS1>
extern volatile __bit                   CS1                 __at(0x77A3);	// @ (0xEF4 * 8 + 3)
#define                                 CS1_bit             _BIT_ACCESS(LCDCON,3)
// TXSTA1<CSRC1>
extern volatile __bit                   CSRC1               __at(0x7D67);	// @ (0xFAC * 8 + 7)
#define                                 CSRC1_bit           _BIT_ACCESS(TXSTA1,7)
// TXSTA2<CSRC2>
extern volatile __bit                   CSRC2               __at(0x790F);	// @ (0xF21 * 8 + 7)
#define                                 CSRC2_bit           _BIT_ACCESS(TXSTA2,7)
// PORTF<CTDIN>
extern volatile __bit                   CTDIN               __at(0x7C29);	// @ (0xF85 * 8 + 1)
#define                                 CTDIN_bit           _BIT_ACCESS(PORTF,1)
// PORTB<CTED1>
extern volatile __bit                   CTED1               __at(0x7C0A);	// @ (0xF81 * 8 + 2)
#define                                 CTED1_bit           _BIT_ACCESS(PORTB,2)
// PORTB<CTED2>
extern volatile __bit                   CTED2               __at(0x7C0B);	// @ (0xF81 * 8 + 3)
#define                                 CTED2_bit           _BIT_ACCESS(PORTB,3)
// ODCON3<CTMUDS>
extern volatile __bit                   CTMUDS              __at(0x7938);	// @ (0xF27 * 8 + 0)
#define                                 CTMUDS_bit          _BIT_ACCESS(ODCON3,0)
// CTMUCONH<CTMUEN>
extern volatile __bit                   CTMUEN              __at(0x7ABF);	// @ (0xF57 * 8 + 7)
#define                                 CTMUEN_bit          _BIT_ACCESS(CTMUCONH,7)
// PORTF<CTMUI>
extern volatile __bit                   CTMUI               __at(0x7C2B);	// @ (0xF85 * 8 + 3)
#define                                 CTMUI_bit           _BIT_ACCESS(PORTF,3)
// PIE3<CTMUIE>
extern volatile __bit                   CTMUIE              __at(0x7D1B);	// @ (0xFA3 * 8 + 3)
#define                                 CTMUIE_bit          _BIT_ACCESS(PIE3,3)
// PIR3<CTMUIF>
extern volatile __bit                   CTMUIF              __at(0x7D23);	// @ (0xFA4 * 8 + 3)
#define                                 CTMUIF_bit          _BIT_ACCESS(PIR3,3)
// IPR3<CTMUIP>
extern volatile __bit                   CTMUIP              __at(0x7D2B);	// @ (0xFA5 * 8 + 3)
#define                                 CTMUIP_bit          _BIT_ACCESS(IPR3,3)
// PMD1<CTMUMD>
extern volatile __bit                   CTMUMD              __at(0x78C6);	// @ (0xF18 * 8 + 6)
#define                                 CTMUMD_bit          _BIT_ACCESS(PMD1,6)
// CTMUCONH<CTMUSIDL>
extern volatile __bit                   CTMUSIDL            __at(0x7ABD);	// @ (0xF57 * 8 + 5)
#define                                 CTMUSIDL_bit        _BIT_ACCESS(CTMUCONH,5)
// PORTD<CTPLS>
extern volatile __bit                   CTPLS               __at(0x7C18);	// @ (0xF83 * 8 + 0)
#define                                 CTPLS_bit           _BIT_ACCESS(PORTD,0)
// CTMUCONH<CTTRIG>
extern volatile __bit                   CTTRIG              __at(0x7AB8);	// @ (0xF57 * 8 + 0)
#define                                 CTTRIG_bit          _BIT_ACCESS(CTMUCONH,0)
// CVRCON<CVR0>
extern volatile __bit                   CVR0                __at(0x7DA8);	// @ (0xFB5 * 8 + 0)
#define                                 CVR0_bit            _BIT_ACCESS(CVRCON,0)
// CVRCON<CVR1>
extern volatile __bit                   CVR1                __at(0x7DA9);	// @ (0xFB5 * 8 + 1)
#define                                 CVR1_bit            _BIT_ACCESS(CVRCON,1)
// CVRCON<CVR2>
extern volatile __bit                   CVR2                __at(0x7DAA);	// @ (0xFB5 * 8 + 2)
#define                                 CVR2_bit            _BIT_ACCESS(CVRCON,2)
// CVRCON<CVR3>
extern volatile __bit                   CVR3                __at(0x7DAB);	// @ (0xFB5 * 8 + 3)
#define                                 CVR3_bit            _BIT_ACCESS(CVRCON,3)
// CVRCON<CVR4>
extern volatile __bit                   CVR4                __at(0x7DAC);	// @ (0xFB5 * 8 + 4)
#define                                 CVR4_bit            _BIT_ACCESS(CVRCON,4)
// PORTF<CVREF>
extern volatile __bit                   CVREF               __at(0x7C2D);	// @ (0xF85 * 8 + 5)
#define                                 CVREF_bit           _BIT_ACCESS(PORTF,5)
// CVRCON<CVREN>
extern volatile __bit                   CVREN               __at(0x7DAF);	// @ (0xFB5 * 8 + 7)
#define                                 CVREN_bit           _BIT_ACCESS(CVRCON,7)
// CVRCON<CVROE>
extern volatile __bit                   CVROE               __at(0x7DAE);	// @ (0xFB5 * 8 + 6)
#define                                 CVROE_bit           _BIT_ACCESS(CVRCON,6)
// CVRCON<CVROEN>
extern volatile __bit                   CVROEN              __at(0x7DAE);	// @ (0xFB5 * 8 + 6)
#define                                 CVROEN_bit          _BIT_ACCESS(CVRCON,6)
// CVRCON<CVRR>
extern volatile __bit                   CVRR                __at(0x7DAD);	// @ (0xFB5 * 8 + 5)
#define                                 CVRR_bit            _BIT_ACCESS(CVRCON,5)
// CVRCON<CVRSS>
extern volatile __bit                   CVRSS               __at(0x7DAD);	// @ (0xFB5 * 8 + 5)
#define                                 CVRSS_bit           _BIT_ACCESS(CVRCON,5)
// SSP1STAT<DA>
extern volatile __bit                   DA                  __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 DA_bit              _BIT_ACCESS(SSP1STAT,5)
// SSP1STAT<DA1>
extern volatile __bit                   DA1                 __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 DA1_bit             _BIT_ACCESS(SSP1STAT,5)
// SSP2STAT<DA2>
extern volatile __bit                   DA2                 __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 DA2_bit             _BIT_ACCESS(SSP2STAT,5)
// SSP2STAT<DATA_ADDRESS2>
extern volatile __bit                   DATA_ADDRESS2       __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 DATA_ADDRESS2_bit   _BIT_ACCESS(SSP2STAT,5)
// STATUS<DC>
extern volatile __bit                   DC                  __at(0x7EC1);	// @ (0xFD8 * 8 + 1)
#define                                 DC_bit              _BIT_ACCESS(STATUS,1)
// CCP1CON<DC1B0>
extern volatile __bit                   DC1B0               __at(0x7DDC);	// @ (0xFBB * 8 + 4)
#define                                 DC1B0_bit           _BIT_ACCESS(CCP1CON,4)
// CCP1CON<DC1B1>
extern volatile __bit                   DC1B1               __at(0x7DDD);	// @ (0xFBB * 8 + 5)
#define                                 DC1B1_bit           _BIT_ACCESS(CCP1CON,5)
// CCP2CON<DC2B0>
extern volatile __bit                   DC2B0               __at(0x7A74);	// @ (0xF4E * 8 + 4)
#define                                 DC2B0_bit           _BIT_ACCESS(CCP2CON,4)
// CCP2CON<DC2B1>
extern volatile __bit                   DC2B1               __at(0x7A75);	// @ (0xF4E * 8 + 5)
#define                                 DC2B1_bit           _BIT_ACCESS(CCP2CON,5)
// CCP3CON<DC3B0>
extern volatile __bit                   DC3B0               __at(0x7A4C);	// @ (0xF49 * 8 + 4)
#define                                 DC3B0_bit           _BIT_ACCESS(CCP3CON,4)
// CCP3CON<DC3B1>
extern volatile __bit                   DC3B1               __at(0x7A4D);	// @ (0xF49 * 8 + 5)
#define                                 DC3B1_bit           _BIT_ACCESS(CCP3CON,5)
// CCP4CON<DC4B0>
extern volatile __bit                   DC4B0               __at(0x787C);	// @ (0xF0F * 8 + 4)
#define                                 DC4B0_bit           _BIT_ACCESS(CCP4CON,4)
// CCP4CON<DC4B1>
extern volatile __bit                   DC4B1               __at(0x787D);	// @ (0xF0F * 8 + 5)
#define                                 DC4B1_bit           _BIT_ACCESS(CCP4CON,5)
// CCP5CON<DC5B0>
extern volatile __bit                   DC5B0               __at(0x7864);	// @ (0xF0C * 8 + 4)
#define                                 DC5B0_bit           _BIT_ACCESS(CCP5CON,4)
// CCP5CON<DC5B1>
extern volatile __bit                   DC5B1               __at(0x7865);	// @ (0xF0C * 8 + 5)
#define                                 DC5B1_bit           _BIT_ACCESS(CCP5CON,5)
// CCP6CON<DC6B0>
extern volatile __bit                   DC6B0               __at(0x784C);	// @ (0xF09 * 8 + 4)
#define                                 DC6B0_bit           _BIT_ACCESS(CCP6CON,4)
// CCP6CON<DC6B1>
extern volatile __bit                   DC6B1               __at(0x784D);	// @ (0xF09 * 8 + 5)
#define                                 DC6B1_bit           _BIT_ACCESS(CCP6CON,5)
// CCP7CON<DC7B0>
extern volatile __bit                   DC7B0               __at(0x7834);	// @ (0xF06 * 8 + 4)
#define                                 DC7B0_bit           _BIT_ACCESS(CCP7CON,4)
// CCP7CON<DC7B1>
extern volatile __bit                   DC7B1               __at(0x7835);	// @ (0xF06 * 8 + 5)
#define                                 DC7B1_bit           _BIT_ACCESS(CCP7CON,5)
// CCP8CON<DC8B0>
extern volatile __bit                   DC8B0               __at(0x7A34);	// @ (0xF46 * 8 + 4)
#define                                 DC8B0_bit           _BIT_ACCESS(CCP8CON,4)
// CCP8CON<DC8B1>
extern volatile __bit                   DC8B1               __at(0x7A35);	// @ (0xF46 * 8 + 5)
#define                                 DC8B1_bit           _BIT_ACCESS(CCP8CON,5)
// ADCON0<DONE>
extern volatile __bit                   DONE                __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 DONE_bit            _BIT_ACCESS(ADCON0,1)
// PORTC<DT1>
extern volatile __bit                   DT1                 __at(0x7C17);	// @ (0xF82 * 8 + 7)
#define                                 DT1_bit             _BIT_ACCESS(PORTC,7)
// PORTG<DT2>
extern volatile __bit                   DT2                 __at(0x7C32);	// @ (0xF86 * 8 + 2)
#define                                 DT2_bit             _BIT_ACCESS(PORTG,2)
// BAUDCON1<DTRXP>
extern volatile __bit                   DTRXP               __at(0x7B2D);	// @ (0xF65 * 8 + 5)
#define                                 DTRXP_bit           _BIT_ACCESS(BAUDCON1,5)
// BAUDCON1<DTRXP1>
extern volatile __bit                   DTRXP1              __at(0x7B2D);	// @ (0xF65 * 8 + 5)
#define                                 DTRXP1_bit          _BIT_ACCESS(BAUDCON1,5)
// BAUDCON2<DTRXP2>
extern volatile __bit                   DTRXP2              __at(0x7905);	// @ (0xF20 * 8 + 5)
#define                                 DTRXP2_bit          _BIT_ACCESS(BAUDCON2,5)
// SSP2STAT<D_A2>
extern volatile __bit                   D_A2                __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 D_A2_bit            _BIT_ACCESS(SSP2STAT,5)
// SSP2STAT<D_NOT_A2>
extern volatile __bit                   D_NOT_A2            __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 D_NOT_A2_bit        _BIT_ACCESS(SSP2STAT,5)
// SSP2STAT<D_nA2>
extern volatile __bit                   D_nA2               __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 D_nA2_bit           _BIT_ACCESS(SSP2STAT,5)
// PR2<EBDIS>
extern volatile __bit                   EBDIS               __at(0x7E5F);	// @ (0xFCB * 8 + 7)
#define                                 EBDIS_bit           _BIT_ACCESS(PR2,7)
// ECCP1AS<ECCP1AS0>
extern volatile __bit                   ECCP1AS0            __at(0x7DFC);	// @ (0xFBF * 8 + 4)
#define                                 ECCP1AS0_bit        _BIT_ACCESS(ECCP1AS,4)
// ECCP1AS<ECCP1AS1>
extern volatile __bit                   ECCP1AS1            __at(0x7DFD);	// @ (0xFBF * 8 + 5)
#define                                 ECCP1AS1_bit        _BIT_ACCESS(ECCP1AS,5)
// ECCP1AS<ECCP1AS2>
extern volatile __bit                   ECCP1AS2            __at(0x7DFE);	// @ (0xFBF * 8 + 6)
#define                                 ECCP1AS2_bit        _BIT_ACCESS(ECCP1AS,6)
// ECCP1AS<ECCP1ASE>
extern volatile __bit                   ECCP1ASE            __at(0x7DFF);	// @ (0xFBF * 8 + 7)
#define                                 ECCP1ASE_bit        _BIT_ACCESS(ECCP1AS,7)
// ECCP2AS<ECCP2AS0>
extern volatile __bit                   ECCP2AS0            __at(0x7A94);	// @ (0xF52 * 8 + 4)
#define                                 ECCP2AS0_bit        _BIT_ACCESS(ECCP2AS,4)
// ECCP2AS<ECCP2AS1>
extern volatile __bit                   ECCP2AS1            __at(0x7A95);	// @ (0xF52 * 8 + 5)
#define                                 ECCP2AS1_bit        _BIT_ACCESS(ECCP2AS,5)
// ECCP2AS<ECCP2AS2>
extern volatile __bit                   ECCP2AS2            __at(0x7A96);	// @ (0xF52 * 8 + 6)
#define                                 ECCP2AS2_bit        _BIT_ACCESS(ECCP2AS,6)
// ECCP2AS<ECCP2ASE>
extern volatile __bit                   ECCP2ASE            __at(0x7A97);	// @ (0xF52 * 8 + 7)
#define                                 ECCP2ASE_bit        _BIT_ACCESS(ECCP2AS,7)
// ECCP3AS<ECCP3AS0>
extern volatile __bit                   ECCP3AS0            __at(0x7A6C);	// @ (0xF4D * 8 + 4)
#define                                 ECCP3AS0_bit        _BIT_ACCESS(ECCP3AS,4)
// ECCP3AS<ECCP3AS1>
extern volatile __bit                   ECCP3AS1            __at(0x7A6D);	// @ (0xF4D * 8 + 5)
#define                                 ECCP3AS1_bit        _BIT_ACCESS(ECCP3AS,5)
// ECCP3AS<ECCP3AS2>
extern volatile __bit                   ECCP3AS2            __at(0x7A6E);	// @ (0xF4D * 8 + 6)
#define                                 ECCP3AS2_bit        _BIT_ACCESS(ECCP3AS,6)
// ECCP3AS<ECCP3ASE>
extern volatile __bit                   ECCP3ASE            __at(0x7A6F);	// @ (0xF4D * 8 + 7)
#define                                 ECCP3ASE_bit        _BIT_ACCESS(ECCP3AS,7)
// CTMUCONL<EDG1POL>
extern volatile __bit                   EDG1POL             __at(0x7AB4);	// @ (0xF56 * 8 + 4)
#define                                 EDG1POL_bit         _BIT_ACCESS(CTMUCONL,4)
// CTMUCONL<EDG1SEL0>
extern volatile __bit                   EDG1SEL0            __at(0x7AB2);	// @ (0xF56 * 8 + 2)
#define                                 EDG1SEL0_bit        _BIT_ACCESS(CTMUCONL,2)
// CTMUCONL<EDG1SEL1>
extern volatile __bit                   EDG1SEL1            __at(0x7AB3);	// @ (0xF56 * 8 + 3)
#define                                 EDG1SEL1_bit        _BIT_ACCESS(CTMUCONL,3)
// CTMUCONL<EDG1STAT>
extern volatile __bit                   EDG1STAT            __at(0x7AB0);	// @ (0xF56 * 8 + 0)
#define                                 EDG1STAT_bit        _BIT_ACCESS(CTMUCONL,0)
// CTMUCONL<EDG2POL>
extern volatile __bit                   EDG2POL             __at(0x7AB7);	// @ (0xF56 * 8 + 7)
#define                                 EDG2POL_bit         _BIT_ACCESS(CTMUCONL,7)
// CTMUCONL<EDG2SEL0>
extern volatile __bit                   EDG2SEL0            __at(0x7AB5);	// @ (0xF56 * 8 + 5)
#define                                 EDG2SEL0_bit        _BIT_ACCESS(CTMUCONL,5)
// CTMUCONL<EDG2SEL1>
extern volatile __bit                   EDG2SEL1            __at(0x7AB6);	// @ (0xF56 * 8 + 6)
#define                                 EDG2SEL1_bit        _BIT_ACCESS(CTMUCONL,6)
// CTMUCONL<EDG2STAT>
extern volatile __bit                   EDG2STAT            __at(0x7AB1);	// @ (0xF56 * 8 + 1)
#define                                 EDG2STAT_bit        _BIT_ACCESS(CTMUCONL,1)
// CTMUCONH<EDGEN>
extern volatile __bit                   EDGEN               __at(0x7ABB);	// @ (0xF57 * 8 + 3)
#define                                 EDGEN_bit           _BIT_ACCESS(CTMUCONH,3)
// CTMUCONH<EDGSEQEN>
extern volatile __bit                   EDGSEQEN            __at(0x7ABA);	// @ (0xF57 * 8 + 2)
#define                                 EDGSEQEN_bit        _BIT_ACCESS(CTMUCONH,2)
// EECON1<EEFS>
extern volatile __bit                   EEFS                __at(0x7BFE);	// @ (0xF7F * 8 + 6)
#define                                 EEFS_bit            _BIT_ACCESS(EECON1,6)
// PIE6<EEIE>
extern volatile __bit                   EEIE                __at(0x7B04);	// @ (0xF60 * 8 + 4)
#define                                 EEIE_bit            _BIT_ACCESS(PIE6,4)
// PIR6<EEIF>
extern volatile __bit                   EEIF                __at(0x7D34);	// @ (0xFA6 * 8 + 4)
#define                                 EEIF_bit            _BIT_ACCESS(PIR6,4)
// IPR6<EEIP>
extern volatile __bit                   EEIP                __at(0x7D4C);	// @ (0xFA9 * 8 + 4)
#define                                 EEIP_bit            _BIT_ACCESS(IPR6,4)
// EECON1<EEPGD>
extern volatile __bit                   EEPGD               __at(0x7BFF);	// @ (0xF7F * 8 + 7)
#define                                 EEPGD_bit           _BIT_ACCESS(EECON1,7)
// CM1CON<EVPOL01>
extern volatile __bit                   EVPOL01             __at(0x7AA3);	// @ (0xF54 * 8 + 3)
#define                                 EVPOL01_bit         _BIT_ACCESS(CM1CON,3)
// CM2CON<EVPOL02>
extern volatile __bit                   EVPOL02             __at(0x797B);	// @ (0xF2F * 8 + 3)
#define                                 EVPOL02_bit         _BIT_ACCESS(CM2CON,3)
// CM3CON<EVPOL03>
extern volatile __bit                   EVPOL03             __at(0x7973);	// @ (0xF2E * 8 + 3)
#define                                 EVPOL03_bit         _BIT_ACCESS(CM3CON,3)
// CM1CON<EVPOL11>
extern volatile __bit                   EVPOL11             __at(0x7AA4);	// @ (0xF54 * 8 + 4)
#define                                 EVPOL11_bit         _BIT_ACCESS(CM1CON,4)
// CM2CON<EVPOL12>
extern volatile __bit                   EVPOL12             __at(0x797C);	// @ (0xF2F * 8 + 4)
#define                                 EVPOL12_bit         _BIT_ACCESS(CM2CON,4)
// CM3CON<EVPOL13>
extern volatile __bit                   EVPOL13             __at(0x7974);	// @ (0xF2E * 8 + 4)
#define                                 EVPOL13_bit         _BIT_ACCESS(CM3CON,4)
// IPR5<EVPOL15>
extern volatile __bit                   EVPOL15             __at(0x7E94);	// @ (0xFD2 * 8 + 4)
#define                                 EVPOL15_bit         _BIT_ACCESS(IPR5,4)
// RCSTA1<FERR1>
extern volatile __bit                   FERR1               __at(0x7D5A);	// @ (0xFAB * 8 + 2)
#define                                 FERR1_bit           _BIT_ACCESS(RCSTA1,2)
// RCSTA2<FERR2>
extern volatile __bit                   FERR2               __at(0x7912);	// @ (0xF22 * 8 + 2)
#define                                 FERR2_bit           _BIT_ACCESS(RCSTA2,2)
// PORTB<FLT0>
extern volatile __bit                   FLT0                __at(0x7C08);	// @ (0xF81 * 8 + 0)
#define                                 FLT0_bit            _BIT_ACCESS(PORTB,0)
// EECON1<FREE>
extern volatile __bit                   FREE                __at(0x7BFC);	// @ (0xF7F * 8 + 4)
#define                                 FREE_bit            _BIT_ACCESS(EECON1,4)
// SSP1CON2<GCEN1>
extern volatile __bit                   GCEN1               __at(0x7E2F);	// @ (0xFC5 * 8 + 7)
#define                                 GCEN1_bit           _BIT_ACCESS(SSP1CON2,7)
// SSP2CON2<GCEN2>
extern volatile __bit                   GCEN2               __at(0x77F7);	// @ (0xEFE * 8 + 7)
#define                                 GCEN2_bit           _BIT_ACCESS(SSP2CON2,7)
// INTCON<GIE>
extern volatile __bit                   GIE                 __at(0x7F97);	// @ (0xFF2 * 8 + 7)
#define                                 GIE_bit             _BIT_ACCESS(INTCON,7)
// INTCON<GIEH>
extern volatile __bit                   GIEH                __at(0x7F97);	// @ (0xFF2 * 8 + 7)
#define                                 GIEH_bit            _BIT_ACCESS(INTCON,7)
// INTCON<GIEL>
extern volatile __bit                   GIEL                __at(0x7F96);	// @ (0xFF2 * 8 + 6)
#define                                 GIEL_bit            _BIT_ACCESS(INTCON,6)
// INTCON<GIE_GIEH>
extern volatile __bit                   GIE_GIEH            __at(0x7F97);	// @ (0xFF2 * 8 + 7)
#define                                 GIE_GIEH_bit        _BIT_ACCESS(INTCON,7)
// ADCON0<GO>
extern volatile __bit                   GO                  __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 GO_bit              _BIT_ACCESS(ADCON0,1)
// ADCON0<GODONE>
extern volatile __bit                   GODONE              __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 GODONE_bit          _BIT_ACCESS(ADCON0,1)
// ADCON0<GO_DONE>
extern volatile __bit                   GO_DONE             __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 GO_DONE_bit         _BIT_ACCESS(ADCON0,1)
// ADCON0<GO_NOT_DONE>
extern volatile __bit                   GO_NOT_DONE         __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 GO_NOT_DONE_bit     _BIT_ACCESS(ADCON0,1)
// ADCON0<GO_nDONE>
extern volatile __bit                   GO_nDONE            __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 GO_nDONE_bit        _BIT_ACCESS(ADCON0,1)
// RTCCFG<HALFSEC>
extern volatile __bit                   HALFSEC             __at(0x7AFB);	// @ (0xF5F * 8 + 3)
#define                                 HALFSEC_bit         _BIT_ACCESS(RTCCFG,3)
// OSCCON<HFIOFS>
extern volatile __bit                   HFIOFS              __at(0x7E9A);	// @ (0xFD3 * 8 + 2)
#define                                 HFIOFS_bit          _BIT_ACCESS(OSCCON,2)
// HLVDCON<HLVDEN>
extern volatile __bit                   HLVDEN              __at(0x7D44);	// @ (0xFA8 * 8 + 4)
#define                                 HLVDEN_bit          _BIT_ACCESS(HLVDCON,4)
// PIE2<HLVDIE>
extern volatile __bit                   HLVDIE              __at(0x7D02);	// @ (0xFA0 * 8 + 2)
#define                                 HLVDIE_bit          _BIT_ACCESS(PIE2,2)
// PIR2<HLVDIF>
extern volatile __bit                   HLVDIF              __at(0x7D0A);	// @ (0xFA1 * 8 + 2)
#define                                 HLVDIF_bit          _BIT_ACCESS(PIR2,2)
// IPR2<HLVDIP>
extern volatile __bit                   HLVDIP              __at(0x7D12);	// @ (0xFA2 * 8 + 2)
#define                                 HLVDIP_bit          _BIT_ACCESS(IPR2,2)
// HLVDCON<HLVDL0>
extern volatile __bit                   HLVDL0              __at(0x7D40);	// @ (0xFA8 * 8 + 0)
#define                                 HLVDL0_bit          _BIT_ACCESS(HLVDCON,0)
// HLVDCON<HLVDL1>
extern volatile __bit                   HLVDL1              __at(0x7D41);	// @ (0xFA8 * 8 + 1)
#define                                 HLVDL1_bit          _BIT_ACCESS(HLVDCON,1)
// HLVDCON<HLVDL2>
extern volatile __bit                   HLVDL2              __at(0x7D42);	// @ (0xFA8 * 8 + 2)
#define                                 HLVDL2_bit          _BIT_ACCESS(HLVDCON,2)
// HLVDCON<HLVDL3>
extern volatile __bit                   HLVDL3              __at(0x7D43);	// @ (0xFA8 * 8 + 3)
#define                                 HLVDL3_bit          _BIT_ACCESS(HLVDCON,3)
// SSP2STAT<I2C_DAT2>
extern volatile __bit                   I2C_DAT2            __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 I2C_DAT2_bit        _BIT_ACCESS(SSP2STAT,5)
// SSP2STAT<I2C_READ2>
extern volatile __bit                   I2C_READ2           __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 I2C_READ2_bit       _BIT_ACCESS(SSP2STAT,2)
// SSP2STAT<I2C_START2>
extern volatile __bit                   I2C_START2          __at(0x7803);	// @ (0xF00 * 8 + 3)
#define                                 I2C_START2_bit      _BIT_ACCESS(SSP2STAT,3)
// SSP2STAT<I2C_STOP2>
extern volatile __bit                   I2C_STOP2           __at(0x7804);	// @ (0xF00 * 8 + 4)
#define                                 I2C_STOP2_bit       _BIT_ACCESS(SSP2STAT,4)
// CTMUCONH<IDISSEN>
extern volatile __bit                   IDISSEN             __at(0x7AB9);	// @ (0xF57 * 8 + 1)
#define                                 IDISSEN_bit         _BIT_ACCESS(CTMUCONH,1)
// OSCCON<IDLEN>
extern volatile __bit                   IDLEN               __at(0x7E9F);	// @ (0xFD3 * 8 + 7)
#define                                 IDLEN_bit           _BIT_ACCESS(OSCCON,7)
// PORTB<INT0>
extern volatile __bit                   INT0                __at(0x7C08);	// @ (0xF81 * 8 + 0)
#define                                 INT0_bit            _BIT_ACCESS(PORTB,0)
// INTCON<INT0E>
extern volatile __bit                   INT0E               __at(0x7F94);	// @ (0xFF2 * 8 + 4)
#define                                 INT0E_bit           _BIT_ACCESS(INTCON,4)
// INTCON<INT0F>
extern volatile __bit                   INT0F               __at(0x7F91);	// @ (0xFF2 * 8 + 1)
#define                                 INT0F_bit           _BIT_ACCESS(INTCON,1)
// INTCON<INT0IE>
extern volatile __bit                   INT0IE              __at(0x7F94);	// @ (0xFF2 * 8 + 4)
#define                                 INT0IE_bit          _BIT_ACCESS(INTCON,4)
// INTCON<INT0IF>
extern volatile __bit                   INT0IF              __at(0x7F91);	// @ (0xFF2 * 8 + 1)
#define                                 INT0IF_bit          _BIT_ACCESS(INTCON,1)
// PORTB<INT1>
extern volatile __bit                   INT1                __at(0x7C09);	// @ (0xF81 * 8 + 1)
#define                                 INT1_bit            _BIT_ACCESS(PORTB,1)
// INTCON3<INT1E>
extern volatile __bit                   INT1E               __at(0x7F83);	// @ (0xFF0 * 8 + 3)
#define                                 INT1E_bit           _BIT_ACCESS(INTCON3,3)
// INTCON3<INT1F>
extern volatile __bit                   INT1F               __at(0x7F80);	// @ (0xFF0 * 8 + 0)
#define                                 INT1F_bit           _BIT_ACCESS(INTCON3,0)
// INTCON3<INT1IE>
extern volatile __bit                   INT1IE              __at(0x7F83);	// @ (0xFF0 * 8 + 3)
#define                                 INT1IE_bit          _BIT_ACCESS(INTCON3,3)
// INTCON3<INT1IF>
extern volatile __bit                   INT1IF              __at(0x7F80);	// @ (0xFF0 * 8 + 0)
#define                                 INT1IF_bit          _BIT_ACCESS(INTCON3,0)
// INTCON3<INT1IP>
extern volatile __bit                   INT1IP              __at(0x7F86);	// @ (0xFF0 * 8 + 6)
#define                                 INT1IP_bit          _BIT_ACCESS(INTCON3,6)
// INTCON3<INT1P>
extern volatile __bit                   INT1P               __at(0x7F86);	// @ (0xFF0 * 8 + 6)
#define                                 INT1P_bit           _BIT_ACCESS(INTCON3,6)
// PORTB<INT2>
extern volatile __bit                   INT2                __at(0x7C0A);	// @ (0xF81 * 8 + 2)
#define                                 INT2_bit            _BIT_ACCESS(PORTB,2)
// INTCON3<INT2E>
extern volatile __bit                   INT2E               __at(0x7F84);	// @ (0xFF0 * 8 + 4)
#define                                 INT2E_bit           _BIT_ACCESS(INTCON3,4)
// INTCON3<INT2F>
extern volatile __bit                   INT2F               __at(0x7F81);	// @ (0xFF0 * 8 + 1)
#define                                 INT2F_bit           _BIT_ACCESS(INTCON3,1)
// INTCON3<INT2IE>
extern volatile __bit                   INT2IE              __at(0x7F84);	// @ (0xFF0 * 8 + 4)
#define                                 INT2IE_bit          _BIT_ACCESS(INTCON3,4)
// INTCON3<INT2IF>
extern volatile __bit                   INT2IF              __at(0x7F81);	// @ (0xFF0 * 8 + 1)
#define                                 INT2IF_bit          _BIT_ACCESS(INTCON3,1)
// INTCON3<INT2IP>
extern volatile __bit                   INT2IP              __at(0x7F87);	// @ (0xFF0 * 8 + 7)
#define                                 INT2IP_bit          _BIT_ACCESS(INTCON3,7)
// INTCON3<INT2P>
extern volatile __bit                   INT2P               __at(0x7F87);	// @ (0xFF0 * 8 + 7)
#define                                 INT2P_bit           _BIT_ACCESS(INTCON3,7)
// PORTB<INT3>
extern volatile __bit                   INT3                __at(0x7C0B);	// @ (0xF81 * 8 + 3)
#define                                 INT3_bit            _BIT_ACCESS(PORTB,3)
// INTCON3<INT3E>
extern volatile __bit                   INT3E               __at(0x7F85);	// @ (0xFF0 * 8 + 5)
#define                                 INT3E_bit           _BIT_ACCESS(INTCON3,5)
// INTCON3<INT3F>
extern volatile __bit                   INT3F               __at(0x7F82);	// @ (0xFF0 * 8 + 2)
#define                                 INT3F_bit           _BIT_ACCESS(INTCON3,2)
// INTCON3<INT3IE>
extern volatile __bit                   INT3IE              __at(0x7F85);	// @ (0xFF0 * 8 + 5)
#define                                 INT3IE_bit          _BIT_ACCESS(INTCON3,5)
// INTCON3<INT3IF>
extern volatile __bit                   INT3IF              __at(0x7F82);	// @ (0xFF0 * 8 + 2)
#define                                 INT3IF_bit          _BIT_ACCESS(INTCON3,2)
// INTCON2<INT3IP>
extern volatile __bit                   INT3IP              __at(0x7F89);	// @ (0xFF1 * 8 + 1)
#define                                 INT3IP_bit          _BIT_ACCESS(INTCON2,1)
// INTCON2<INT3P>
extern volatile __bit                   INT3P               __at(0x7F89);	// @ (0xFF1 * 8 + 1)
#define                                 INT3P_bit           _BIT_ACCESS(INTCON2,1)
// INTCON2<INTEDG0>
extern volatile __bit                   INTEDG0             __at(0x7F8E);	// @ (0xFF1 * 8 + 6)
#define                                 INTEDG0_bit         _BIT_ACCESS(INTCON2,6)
// INTCON2<INTEDG1>
extern volatile __bit                   INTEDG1             __at(0x7F8D);	// @ (0xFF1 * 8 + 5)
#define                                 INTEDG1_bit         _BIT_ACCESS(INTCON2,5)
// INTCON2<INTEDG2>
extern volatile __bit                   INTEDG2             __at(0x7F8C);	// @ (0xFF1 * 8 + 4)
#define                                 INTEDG2_bit         _BIT_ACCESS(INTCON2,4)
// INTCON2<INTEDG3>
extern volatile __bit                   INTEDG3             __at(0x7F8B);	// @ (0xFF1 * 8 + 3)
#define                                 INTEDG3_bit         _BIT_ACCESS(INTCON2,3)
// OSCTUNE<INTSRC>
extern volatile __bit                   INTSRC              __at(0x7CDF);	// @ (0xF9B * 8 + 7)
#define                                 INTSRC_bit          _BIT_ACCESS(OSCTUNE,7)
// RCON<IPEN>
extern volatile __bit                   IPEN                __at(0x7E87);	// @ (0xFD0 * 8 + 7)
#define                                 IPEN_bit            _BIT_ACCESS(RCON,7)
// OSCCON<IRCF0>
extern volatile __bit                   IRCF0               __at(0x7E9C);	// @ (0xFD3 * 8 + 4)
#define                                 IRCF0_bit           _BIT_ACCESS(OSCCON,4)
// OSCCON<IRCF1>
extern volatile __bit                   IRCF1               __at(0x7E9D);	// @ (0xFD3 * 8 + 5)
#define                                 IRCF1_bit           _BIT_ACCESS(OSCCON,5)
// OSCCON<IRCF2>
extern volatile __bit                   IRCF2               __at(0x7E9E);	// @ (0xFD3 * 8 + 6)
#define                                 IRCF2_bit           _BIT_ACCESS(OSCCON,6)
// CTMUICON<IRNG0>
extern volatile __bit                   IRNG0               __at(0x7AA8);	// @ (0xF55 * 8 + 0)
#define                                 IRNG0_bit           _BIT_ACCESS(CTMUICON,0)
// CTMUICON<IRNG1>
extern volatile __bit                   IRNG1               __at(0x7AA9);	// @ (0xF55 * 8 + 1)
#define                                 IRNG1_bit           _BIT_ACCESS(CTMUICON,1)
// HLVDCON<IRVST>
extern volatile __bit                   IRVST               __at(0x7D45);	// @ (0xFA8 * 8 + 5)
#define                                 IRVST_bit           _BIT_ACCESS(HLVDCON,5)
// CTMUICON<ITRIM0>
extern volatile __bit                   ITRIM0              __at(0x7AAA);	// @ (0xF55 * 8 + 2)
#define                                 ITRIM0_bit          _BIT_ACCESS(CTMUICON,2)
// CTMUICON<ITRIM1>
extern volatile __bit                   ITRIM1              __at(0x7AAB);	// @ (0xF55 * 8 + 3)
#define                                 ITRIM1_bit          _BIT_ACCESS(CTMUICON,3)
// CTMUICON<ITRIM2>
extern volatile __bit                   ITRIM2              __at(0x7AAC);	// @ (0xF55 * 8 + 4)
#define                                 ITRIM2_bit          _BIT_ACCESS(CTMUICON,4)
// CTMUICON<ITRIM3>
extern volatile __bit                   ITRIM3              __at(0x7AAD);	// @ (0xF55 * 8 + 5)
#define                                 ITRIM3_bit          _BIT_ACCESS(CTMUICON,5)
// CTMUICON<ITRIM4>
extern volatile __bit                   ITRIM4              __at(0x7AAE);	// @ (0xF55 * 8 + 6)
#define                                 ITRIM4_bit          _BIT_ACCESS(CTMUICON,6)
// CTMUICON<ITRIM5>
extern volatile __bit                   ITRIM5              __at(0x7AAF);	// @ (0xF55 * 8 + 7)
#define                                 ITRIM5_bit          _BIT_ACCESS(CTMUICON,7)
// PORTB<KBI0>
extern volatile __bit                   KBI0                __at(0x7C0C);	// @ (0xF81 * 8 + 4)
#define                                 KBI0_bit            _BIT_ACCESS(PORTB,4)
// PORTB<KBI1>
extern volatile __bit                   KBI1                __at(0x7C0D);	// @ (0xF81 * 8 + 5)
#define                                 KBI1_bit            _BIT_ACCESS(PORTB,5)
// PORTB<KBI2>
extern volatile __bit                   KBI2                __at(0x7C0E);	// @ (0xF81 * 8 + 6)
#define                                 KBI2_bit            _BIT_ACCESS(PORTB,6)
// PORTB<KBI3>
extern volatile __bit                   KBI3                __at(0x7C0F);	// @ (0xF81 * 8 + 7)
#define                                 KBI3_bit            _BIT_ACCESS(PORTB,7)
// LATA<LA0>
extern volatile __bit                   LA0                 __at(0x7C48);	// @ (0xF89 * 8 + 0)
#define                                 LA0_bit             _BIT_ACCESS(LATA,0)
// LATA<LA1>
extern volatile __bit                   LA1                 __at(0x7C49);	// @ (0xF89 * 8 + 1)
#define                                 LA1_bit             _BIT_ACCESS(LATA,1)
// LATA<LA2>
extern volatile __bit                   LA2                 __at(0x7C4A);	// @ (0xF89 * 8 + 2)
#define                                 LA2_bit             _BIT_ACCESS(LATA,2)
// LATA<LA3>
extern volatile __bit                   LA3                 __at(0x7C4B);	// @ (0xF89 * 8 + 3)
#define                                 LA3_bit             _BIT_ACCESS(LATA,3)
// LATA<LA4>
extern volatile __bit                   LA4                 __at(0x7C4C);	// @ (0xF89 * 8 + 4)
#define                                 LA4_bit             _BIT_ACCESS(LATA,4)
// LATA<LA5>
extern volatile __bit                   LA5                 __at(0x7C4D);	// @ (0xF89 * 8 + 5)
#define                                 LA5_bit             _BIT_ACCESS(LATA,5)
// LATA<LA6>
extern volatile __bit                   LA6                 __at(0x7C4E);	// @ (0xF89 * 8 + 6)
#define                                 LA6_bit             _BIT_ACCESS(LATA,6)
// LATA<LA7>
extern volatile __bit                   LA7                 __at(0x7C4F);	// @ (0xF89 * 8 + 7)
#define                                 LA7_bit             _BIT_ACCESS(LATA,7)
// LATA<LATA0>
extern volatile __bit                   LATA0               __at(0x7C48);	// @ (0xF89 * 8 + 0)
#define                                 LATA0_bit           _BIT_ACCESS(LATA,0)
// LATA<LATA1>
extern volatile __bit                   LATA1               __at(0x7C49);	// @ (0xF89 * 8 + 1)
#define                                 LATA1_bit           _BIT_ACCESS(LATA,1)
// LATA<LATA2>
extern volatile __bit                   LATA2               __at(0x7C4A);	// @ (0xF89 * 8 + 2)
#define                                 LATA2_bit           _BIT_ACCESS(LATA,2)
// LATA<LATA3>
extern volatile __bit                   LATA3               __at(0x7C4B);	// @ (0xF89 * 8 + 3)
#define                                 LATA3_bit           _BIT_ACCESS(LATA,3)
// LATA<LATA4>
extern volatile __bit                   LATA4               __at(0x7C4C);	// @ (0xF89 * 8 + 4)
#define                                 LATA4_bit           _BIT_ACCESS(LATA,4)
// LATA<LATA5>
extern volatile __bit                   LATA5               __at(0x7C4D);	// @ (0xF89 * 8 + 5)
#define                                 LATA5_bit           _BIT_ACCESS(LATA,5)
// LATA<LATA6>
extern volatile __bit                   LATA6               __at(0x7C4E);	// @ (0xF89 * 8 + 6)
#define                                 LATA6_bit           _BIT_ACCESS(LATA,6)
// LATA<LATA7>
extern volatile __bit                   LATA7               __at(0x7C4F);	// @ (0xF89 * 8 + 7)
#define                                 LATA7_bit           _BIT_ACCESS(LATA,7)
// LATB<LATB0>
extern volatile __bit                   LATB0               __at(0x7C50);	// @ (0xF8A * 8 + 0)
#define                                 LATB0_bit           _BIT_ACCESS(LATB,0)
// LATB<LATB1>
extern volatile __bit                   LATB1               __at(0x7C51);	// @ (0xF8A * 8 + 1)
#define                                 LATB1_bit           _BIT_ACCESS(LATB,1)
// LATB<LATB2>
extern volatile __bit                   LATB2               __at(0x7C52);	// @ (0xF8A * 8 + 2)
#define                                 LATB2_bit           _BIT_ACCESS(LATB,2)
// LATB<LATB3>
extern volatile __bit                   LATB3               __at(0x7C53);	// @ (0xF8A * 8 + 3)
#define                                 LATB3_bit           _BIT_ACCESS(LATB,3)
// LATB<LATB4>
extern volatile __bit                   LATB4               __at(0x7C54);	// @ (0xF8A * 8 + 4)
#define                                 LATB4_bit           _BIT_ACCESS(LATB,4)
// LATB<LATB5>
extern volatile __bit                   LATB5               __at(0x7C55);	// @ (0xF8A * 8 + 5)
#define                                 LATB5_bit           _BIT_ACCESS(LATB,5)
// LATB<LATB6>
extern volatile __bit                   LATB6               __at(0x7C56);	// @ (0xF8A * 8 + 6)
#define                                 LATB6_bit           _BIT_ACCESS(LATB,6)
// LATB<LATB7>
extern volatile __bit                   LATB7               __at(0x7C57);	// @ (0xF8A * 8 + 7)
#define                                 LATB7_bit           _BIT_ACCESS(LATB,7)
// LATC<LATC0>
extern volatile __bit                   LATC0               __at(0x7C58);	// @ (0xF8B * 8 + 0)
#define                                 LATC0_bit           _BIT_ACCESS(LATC,0)
// LATC<LATC1>
extern volatile __bit                   LATC1               __at(0x7C59);	// @ (0xF8B * 8 + 1)
#define                                 LATC1_bit           _BIT_ACCESS(LATC,1)
// LATC<LATC2>
extern volatile __bit                   LATC2               __at(0x7C5A);	// @ (0xF8B * 8 + 2)
#define                                 LATC2_bit           _BIT_ACCESS(LATC,2)
// LATC<LATC3>
extern volatile __bit                   LATC3               __at(0x7C5B);	// @ (0xF8B * 8 + 3)
#define                                 LATC3_bit           _BIT_ACCESS(LATC,3)
// LATC<LATC4>
extern volatile __bit                   LATC4               __at(0x7C5C);	// @ (0xF8B * 8 + 4)
#define                                 LATC4_bit           _BIT_ACCESS(LATC,4)
// LATC<LATC5>
extern volatile __bit                   LATC5               __at(0x7C5D);	// @ (0xF8B * 8 + 5)
#define                                 LATC5_bit           _BIT_ACCESS(LATC,5)
// LATC<LATC6>
extern volatile __bit                   LATC6               __at(0x7C5E);	// @ (0xF8B * 8 + 6)
#define                                 LATC6_bit           _BIT_ACCESS(LATC,6)
// LATC<LATC7>
extern volatile __bit                   LATC7               __at(0x7C5F);	// @ (0xF8B * 8 + 7)
#define                                 LATC7_bit           _BIT_ACCESS(LATC,7)
// LATD<LATD0>
extern volatile __bit                   LATD0               __at(0x7C60);	// @ (0xF8C * 8 + 0)
#define                                 LATD0_bit           _BIT_ACCESS(LATD,0)
// LATD<LATD1>
extern volatile __bit                   LATD1               __at(0x7C61);	// @ (0xF8C * 8 + 1)
#define                                 LATD1_bit           _BIT_ACCESS(LATD,1)
// LATD<LATD2>
extern volatile __bit                   LATD2               __at(0x7C62);	// @ (0xF8C * 8 + 2)
#define                                 LATD2_bit           _BIT_ACCESS(LATD,2)
// LATD<LATD3>
extern volatile __bit                   LATD3               __at(0x7C63);	// @ (0xF8C * 8 + 3)
#define                                 LATD3_bit           _BIT_ACCESS(LATD,3)
// LATD<LATD4>
extern volatile __bit                   LATD4               __at(0x7C64);	// @ (0xF8C * 8 + 4)
#define                                 LATD4_bit           _BIT_ACCESS(LATD,4)
// LATD<LATD5>
extern volatile __bit                   LATD5               __at(0x7C65);	// @ (0xF8C * 8 + 5)
#define                                 LATD5_bit           _BIT_ACCESS(LATD,5)
// LATD<LATD6>
extern volatile __bit                   LATD6               __at(0x7C66);	// @ (0xF8C * 8 + 6)
#define                                 LATD6_bit           _BIT_ACCESS(LATD,6)
// LATD<LATD7>
extern volatile __bit                   LATD7               __at(0x7C67);	// @ (0xF8C * 8 + 7)
#define                                 LATD7_bit           _BIT_ACCESS(LATD,7)
// LATE<LATE0>
extern volatile __bit                   LATE0               __at(0x7C68);	// @ (0xF8D * 8 + 0)
#define                                 LATE0_bit           _BIT_ACCESS(LATE,0)
// LATE<LATE1>
extern volatile __bit                   LATE1               __at(0x7C69);	// @ (0xF8D * 8 + 1)
#define                                 LATE1_bit           _BIT_ACCESS(LATE,1)
// LATE<LATE2>
extern volatile __bit                   LATE2               __at(0x7C6A);	// @ (0xF8D * 8 + 2)
#define                                 LATE2_bit           _BIT_ACCESS(LATE,2)
// LATE<LATE3>
extern volatile __bit                   LATE3               __at(0x7C6B);	// @ (0xF8D * 8 + 3)
#define                                 LATE3_bit           _BIT_ACCESS(LATE,3)
// LATE<LATE4>
extern volatile __bit                   LATE4               __at(0x7C6C);	// @ (0xF8D * 8 + 4)
#define                                 LATE4_bit           _BIT_ACCESS(LATE,4)
// LATE<LATE5>
extern volatile __bit                   LATE5               __at(0x7C6D);	// @ (0xF8D * 8 + 5)
#define                                 LATE5_bit           _BIT_ACCESS(LATE,5)
// LATE<LATE6>
extern volatile __bit                   LATE6               __at(0x7C6E);	// @ (0xF8D * 8 + 6)
#define                                 LATE6_bit           _BIT_ACCESS(LATE,6)
// LATE<LATE7>
extern volatile __bit                   LATE7               __at(0x7C6F);	// @ (0xF8D * 8 + 7)
#define                                 LATE7_bit           _BIT_ACCESS(LATE,7)
// LATF<LATF1>
extern volatile __bit                   LATF1               __at(0x7C71);	// @ (0xF8E * 8 + 1)
#define                                 LATF1_bit           _BIT_ACCESS(LATF,1)
// LATF<LATF2>
extern volatile __bit                   LATF2               __at(0x7C72);	// @ (0xF8E * 8 + 2)
#define                                 LATF2_bit           _BIT_ACCESS(LATF,2)
// LATF<LATF3>
extern volatile __bit                   LATF3               __at(0x7C73);	// @ (0xF8E * 8 + 3)
#define                                 LATF3_bit           _BIT_ACCESS(LATF,3)
// LATF<LATF4>
extern volatile __bit                   LATF4               __at(0x7C74);	// @ (0xF8E * 8 + 4)
#define                                 LATF4_bit           _BIT_ACCESS(LATF,4)
// LATF<LATF5>
extern volatile __bit                   LATF5               __at(0x7C75);	// @ (0xF8E * 8 + 5)
#define                                 LATF5_bit           _BIT_ACCESS(LATF,5)
// LATF<LATF6>
extern volatile __bit                   LATF6               __at(0x7C76);	// @ (0xF8E * 8 + 6)
#define                                 LATF6_bit           _BIT_ACCESS(LATF,6)
// LATF<LATF7>
extern volatile __bit                   LATF7               __at(0x7C77);	// @ (0xF8E * 8 + 7)
#define                                 LATF7_bit           _BIT_ACCESS(LATF,7)
// LATG<LATG0>
extern volatile __bit                   LATG0               __at(0x7C78);	// @ (0xF8F * 8 + 0)
#define                                 LATG0_bit           _BIT_ACCESS(LATG,0)
// LATG<LATG1>
extern volatile __bit                   LATG1               __at(0x7C79);	// @ (0xF8F * 8 + 1)
#define                                 LATG1_bit           _BIT_ACCESS(LATG,1)
// LATG<LATG2>
extern volatile __bit                   LATG2               __at(0x7C7A);	// @ (0xF8F * 8 + 2)
#define                                 LATG2_bit           _BIT_ACCESS(LATG,2)
// LATG<LATG3>
extern volatile __bit                   LATG3               __at(0x7C7B);	// @ (0xF8F * 8 + 3)
#define                                 LATG3_bit           _BIT_ACCESS(LATG,3)
// LATG<LATG4>
extern volatile __bit                   LATG4               __at(0x7C7C);	// @ (0xF8F * 8 + 4)
#define                                 LATG4_bit           _BIT_ACCESS(LATG,4)
// LATH<LATH0>
extern volatile __bit                   LATH0               __at(0x7C80);	// @ (0xF90 * 8 + 0)
#define                                 LATH0_bit           _BIT_ACCESS(LATH,0)
// LATH<LATH1>
extern volatile __bit                   LATH1               __at(0x7C81);	// @ (0xF90 * 8 + 1)
#define                                 LATH1_bit           _BIT_ACCESS(LATH,1)
// LATH<LATH2>
extern volatile __bit                   LATH2               __at(0x7C82);	// @ (0xF90 * 8 + 2)
#define                                 LATH2_bit           _BIT_ACCESS(LATH,2)
// LATH<LATH3>
extern volatile __bit                   LATH3               __at(0x7C83);	// @ (0xF90 * 8 + 3)
#define                                 LATH3_bit           _BIT_ACCESS(LATH,3)
// LATH<LATH4>
extern volatile __bit                   LATH4               __at(0x7C84);	// @ (0xF90 * 8 + 4)
#define                                 LATH4_bit           _BIT_ACCESS(LATH,4)
// LATH<LATH5>
extern volatile __bit                   LATH5               __at(0x7C85);	// @ (0xF90 * 8 + 5)
#define                                 LATH5_bit           _BIT_ACCESS(LATH,5)
// LATH<LATH6>
extern volatile __bit                   LATH6               __at(0x7C86);	// @ (0xF90 * 8 + 6)
#define                                 LATH6_bit           _BIT_ACCESS(LATH,6)
// LATH<LATH7>
extern volatile __bit                   LATH7               __at(0x7C87);	// @ (0xF90 * 8 + 7)
#define                                 LATH7_bit           _BIT_ACCESS(LATH,7)
// LATJ<LATJ0>
extern volatile __bit                   LATJ0               __at(0x7C88);	// @ (0xF91 * 8 + 0)
#define                                 LATJ0_bit           _BIT_ACCESS(LATJ,0)
// LATJ<LATJ1>
extern volatile __bit                   LATJ1               __at(0x7C89);	// @ (0xF91 * 8 + 1)
#define                                 LATJ1_bit           _BIT_ACCESS(LATJ,1)
// LATJ<LATJ2>
extern volatile __bit                   LATJ2               __at(0x7C8A);	// @ (0xF91 * 8 + 2)
#define                                 LATJ2_bit           _BIT_ACCESS(LATJ,2)
// LATJ<LATJ3>
extern volatile __bit                   LATJ3               __at(0x7C8B);	// @ (0xF91 * 8 + 3)
#define                                 LATJ3_bit           _BIT_ACCESS(LATJ,3)
// LATJ<LATJ4>
extern volatile __bit                   LATJ4               __at(0x7C8C);	// @ (0xF91 * 8 + 4)
#define                                 LATJ4_bit           _BIT_ACCESS(LATJ,4)
// LATJ<LATJ5>
extern volatile __bit                   LATJ5               __at(0x7C8D);	// @ (0xF91 * 8 + 5)
#define                                 LATJ5_bit           _BIT_ACCESS(LATJ,5)
// LATJ<LATJ6>
extern volatile __bit                   LATJ6               __at(0x7C8E);	// @ (0xF91 * 8 + 6)
#define                                 LATJ6_bit           _BIT_ACCESS(LATJ,6)
// LATJ<LATJ7>
extern volatile __bit                   LATJ7               __at(0x7C8F);	// @ (0xF91 * 8 + 7)
#define                                 LATJ7_bit           _BIT_ACCESS(LATJ,7)
// PORTJ<LB>
extern volatile __bit                   LB                  __at(0x7C46);	// @ (0xF88 * 8 + 6)
#define                                 LB_bit              _BIT_ACCESS(PORTJ,6)
// LATB<LB0>
extern volatile __bit                   LB0                 __at(0x7C50);	// @ (0xF8A * 8 + 0)
#define                                 LB0_bit             _BIT_ACCESS(LATB,0)
// LATB<LB1>
extern volatile __bit                   LB1                 __at(0x7C51);	// @ (0xF8A * 8 + 1)
#define                                 LB1_bit             _BIT_ACCESS(LATB,1)
// LATB<LB2>
extern volatile __bit                   LB2                 __at(0x7C52);	// @ (0xF8A * 8 + 2)
#define                                 LB2_bit             _BIT_ACCESS(LATB,2)
// LATB<LB3>
extern volatile __bit                   LB3                 __at(0x7C53);	// @ (0xF8A * 8 + 3)
#define                                 LB3_bit             _BIT_ACCESS(LATB,3)
// LATB<LB4>
extern volatile __bit                   LB4                 __at(0x7C54);	// @ (0xF8A * 8 + 4)
#define                                 LB4_bit             _BIT_ACCESS(LATB,4)
// LATB<LB5>
extern volatile __bit                   LB5                 __at(0x7C55);	// @ (0xF8A * 8 + 5)
#define                                 LB5_bit             _BIT_ACCESS(LATB,5)
// LATB<LB6>
extern volatile __bit                   LB6                 __at(0x7C56);	// @ (0xF8A * 8 + 6)
#define                                 LB6_bit             _BIT_ACCESS(LATB,6)
// LATB<LB7>
extern volatile __bit                   LB7                 __at(0x7C57);	// @ (0xF8A * 8 + 7)
#define                                 LB7_bit             _BIT_ACCESS(LATB,7)
// LATC<LC0>
extern volatile __bit                   LC0                 __at(0x7C58);	// @ (0xF8B * 8 + 0)
#define                                 LC0_bit             _BIT_ACCESS(LATC,0)
// LATC<LC1>
extern volatile __bit                   LC1                 __at(0x7C59);	// @ (0xF8B * 8 + 1)
#define                                 LC1_bit             _BIT_ACCESS(LATC,1)
// LATC<LC2>
extern volatile __bit                   LC2                 __at(0x7C5A);	// @ (0xF8B * 8 + 2)
#define                                 LC2_bit             _BIT_ACCESS(LATC,2)
// LATC<LC3>
extern volatile __bit                   LC3                 __at(0x7C5B);	// @ (0xF8B * 8 + 3)
#define                                 LC3_bit             _BIT_ACCESS(LATC,3)
// LATC<LC4>
extern volatile __bit                   LC4                 __at(0x7C5C);	// @ (0xF8B * 8 + 4)
#define                                 LC4_bit             _BIT_ACCESS(LATC,4)
// LATC<LC5>
extern volatile __bit                   LC5                 __at(0x7C5D);	// @ (0xF8B * 8 + 5)
#define                                 LC5_bit             _BIT_ACCESS(LATC,5)
// LATC<LC6>
extern volatile __bit                   LC6                 __at(0x7C5E);	// @ (0xF8B * 8 + 6)
#define                                 LC6_bit             _BIT_ACCESS(LATC,6)
// LATC<LC7>
extern volatile __bit                   LC7                 __at(0x7C5F);	// @ (0xF8B * 8 + 7)
#define                                 LC7_bit             _BIT_ACCESS(LATC,7)
// LCDPS<LCDA>
extern volatile __bit                   LCDA                __at(0x77AD);	// @ (0xEF5 * 8 + 5)
#define                                 LCDA_bit            _BIT_ACCESS(LCDPS,5)
// PORTE<LCDBIAS1>
extern volatile __bit                   LCDBIAS1            __at(0x7C20);	// @ (0xF84 * 8 + 0)
#define                                 LCDBIAS1_bit        _BIT_ACCESS(PORTE,0)
// PORTE<LCDBIAS2>
extern volatile __bit                   LCDBIAS2            __at(0x7C21);	// @ (0xF84 * 8 + 1)
#define                                 LCDBIAS2_bit        _BIT_ACCESS(PORTE,1)
// PORTE<LCDBIAS3>
extern volatile __bit                   LCDBIAS3            __at(0x7C22);	// @ (0xF84 * 8 + 2)
#define                                 LCDBIAS3_bit        _BIT_ACCESS(PORTE,2)
// LCDREF<LCDCST0>
extern volatile __bit                   LCDCST0             __at(0x77EB);	// @ (0xEFD * 8 + 3)
#define                                 LCDCST0_bit         _BIT_ACCESS(LCDREF,3)
// LCDREF<LCDCST1>
extern volatile __bit                   LCDCST1             __at(0x77EC);	// @ (0xEFD * 8 + 4)
#define                                 LCDCST1_bit         _BIT_ACCESS(LCDREF,4)
// LCDREF<LCDCST2>
extern volatile __bit                   LCDCST2             __at(0x77ED);	// @ (0xEFD * 8 + 5)
#define                                 LCDCST2_bit         _BIT_ACCESS(LCDREF,5)
// LCDCON<LCDEN>
extern volatile __bit                   LCDEN               __at(0x77A7);	// @ (0xEF4 * 8 + 7)
#define                                 LCDEN_bit           _BIT_ACCESS(LCDCON,7)
// PIE3<LCDIE>
extern volatile __bit                   LCDIE               __at(0x7D1E);	// @ (0xFA3 * 8 + 6)
#define                                 LCDIE_bit           _BIT_ACCESS(PIE3,6)
// PIR3<LCDIF>
extern volatile __bit                   LCDIF               __at(0x7D26);	// @ (0xFA4 * 8 + 6)
#define                                 LCDIF_bit           _BIT_ACCESS(PIR3,6)
// IPR3<LCDIP>
extern volatile __bit                   LCDIP               __at(0x7D2E);	// @ (0xFA5 * 8 + 6)
#define                                 LCDIP_bit           _BIT_ACCESS(IPR3,6)
// LCDREF<LCDIRE>
extern volatile __bit                   LCDIRE              __at(0x77EF);	// @ (0xEFD * 8 + 7)
#define                                 LCDIRE_bit          _BIT_ACCESS(LCDREF,7)
// LCDRL<LCDIRI>
extern volatile __bit                   LCDIRI              __at(0x77E3);	// @ (0xEFC * 8 + 3)
#define                                 LCDIRI_bit          _BIT_ACCESS(LCDRL,3)
// LCDREF<LCDIRS>
extern volatile __bit                   LCDIRS              __at(0x77EE);	// @ (0xEFD * 8 + 6)
#define                                 LCDIRS_bit          _BIT_ACCESS(LCDREF,6)
// LATD<LD0>
extern volatile __bit                   LD0                 __at(0x7C60);	// @ (0xF8C * 8 + 0)
#define                                 LD0_bit             _BIT_ACCESS(LATD,0)
// LATD<LD1>
extern volatile __bit                   LD1                 __at(0x7C61);	// @ (0xF8C * 8 + 1)
#define                                 LD1_bit             _BIT_ACCESS(LATD,1)
// LATD<LD2>
extern volatile __bit                   LD2                 __at(0x7C62);	// @ (0xF8C * 8 + 2)
#define                                 LD2_bit             _BIT_ACCESS(LATD,2)
// LATD<LD3>
extern volatile __bit                   LD3                 __at(0x7C63);	// @ (0xF8C * 8 + 3)
#define                                 LD3_bit             _BIT_ACCESS(LATD,3)
// LATD<LD4>
extern volatile __bit                   LD4                 __at(0x7C64);	// @ (0xF8C * 8 + 4)
#define                                 LD4_bit             _BIT_ACCESS(LATD,4)
// LATD<LD5>
extern volatile __bit                   LD5                 __at(0x7C65);	// @ (0xF8C * 8 + 5)
#define                                 LD5_bit             _BIT_ACCESS(LATD,5)
// LATD<LD6>
extern volatile __bit                   LD6                 __at(0x7C66);	// @ (0xF8C * 8 + 6)
#define                                 LD6_bit             _BIT_ACCESS(LATD,6)
// LATD<LD7>
extern volatile __bit                   LD7                 __at(0x7C67);	// @ (0xF8C * 8 + 7)
#define                                 LD7_bit             _BIT_ACCESS(LATD,7)
// LATE<LE0>
extern volatile __bit                   LE0                 __at(0x7C68);	// @ (0xF8D * 8 + 0)
#define                                 LE0_bit             _BIT_ACCESS(LATE,0)
// LATE<LE1>
extern volatile __bit                   LE1                 __at(0x7C69);	// @ (0xF8D * 8 + 1)
#define                                 LE1_bit             _BIT_ACCESS(LATE,1)
// LATE<LE2>
extern volatile __bit                   LE2                 __at(0x7C6A);	// @ (0xF8D * 8 + 2)
#define                                 LE2_bit             _BIT_ACCESS(LATE,2)
// LATE<LE3>
extern volatile __bit                   LE3                 __at(0x7C6B);	// @ (0xF8D * 8 + 3)
#define                                 LE3_bit             _BIT_ACCESS(LATE,3)
// LATE<LE4>
extern volatile __bit                   LE4                 __at(0x7C6C);	// @ (0xF8D * 8 + 4)
#define                                 LE4_bit             _BIT_ACCESS(LATE,4)
// LATE<LE5>
extern volatile __bit                   LE5                 __at(0x7C6D);	// @ (0xF8D * 8 + 5)
#define                                 LE5_bit             _BIT_ACCESS(LATE,5)
// LATE<LE6>
extern volatile __bit                   LE6                 __at(0x7C6E);	// @ (0xF8D * 8 + 6)
#define                                 LE6_bit             _BIT_ACCESS(LATE,6)
// LATE<LE7>
extern volatile __bit                   LE7                 __at(0x7C6F);	// @ (0xF8D * 8 + 7)
#define                                 LE7_bit             _BIT_ACCESS(LATE,7)
// LATF<LF1>
extern volatile __bit                   LF1                 __at(0x7C71);	// @ (0xF8E * 8 + 1)
#define                                 LF1_bit             _BIT_ACCESS(LATF,1)
// LATF<LF2>
extern volatile __bit                   LF2                 __at(0x7C72);	// @ (0xF8E * 8 + 2)
#define                                 LF2_bit             _BIT_ACCESS(LATF,2)
// LATF<LF3>
extern volatile __bit                   LF3                 __at(0x7C73);	// @ (0xF8E * 8 + 3)
#define                                 LF3_bit             _BIT_ACCESS(LATF,3)
// LATF<LF4>
extern volatile __bit                   LF4                 __at(0x7C74);	// @ (0xF8E * 8 + 4)
#define                                 LF4_bit             _BIT_ACCESS(LATF,4)
// LATF<LF5>
extern volatile __bit                   LF5                 __at(0x7C75);	// @ (0xF8E * 8 + 5)
#define                                 LF5_bit             _BIT_ACCESS(LATF,5)
// LATF<LF6>
extern volatile __bit                   LF6                 __at(0x7C76);	// @ (0xF8E * 8 + 6)
#define                                 LF6_bit             _BIT_ACCESS(LATF,6)
// LATF<LF7>
extern volatile __bit                   LF7                 __at(0x7C77);	// @ (0xF8E * 8 + 7)
#define                                 LF7_bit             _BIT_ACCESS(LATF,7)
// LATG<LG0>
extern volatile __bit                   LG0                 __at(0x7C78);	// @ (0xF8F * 8 + 0)
#define                                 LG0_bit             _BIT_ACCESS(LATG,0)
// LATG<LG1>
extern volatile __bit                   LG1                 __at(0x7C79);	// @ (0xF8F * 8 + 1)
#define                                 LG1_bit             _BIT_ACCESS(LATG,1)
// LATG<LG2>
extern volatile __bit                   LG2                 __at(0x7C7A);	// @ (0xF8F * 8 + 2)
#define                                 LG2_bit             _BIT_ACCESS(LATG,2)
// LATG<LG3>
extern volatile __bit                   LG3                 __at(0x7C7B);	// @ (0xF8F * 8 + 3)
#define                                 LG3_bit             _BIT_ACCESS(LATG,3)
// LATG<LG4>
extern volatile __bit                   LG4                 __at(0x7C7C);	// @ (0xF8F * 8 + 4)
#define                                 LG4_bit             _BIT_ACCESS(LATG,4)
// LATH<LH0>
extern volatile __bit                   LH0                 __at(0x7C80);	// @ (0xF90 * 8 + 0)
#define                                 LH0_bit             _BIT_ACCESS(LATH,0)
// LATH<LH1>
extern volatile __bit                   LH1                 __at(0x7C81);	// @ (0xF90 * 8 + 1)
#define                                 LH1_bit             _BIT_ACCESS(LATH,1)
// LATH<LH2>
extern volatile __bit                   LH2                 __at(0x7C82);	// @ (0xF90 * 8 + 2)
#define                                 LH2_bit             _BIT_ACCESS(LATH,2)
// LATH<LH3>
extern volatile __bit                   LH3                 __at(0x7C83);	// @ (0xF90 * 8 + 3)
#define                                 LH3_bit             _BIT_ACCESS(LATH,3)
// LATH<LH4>
extern volatile __bit                   LH4                 __at(0x7C84);	// @ (0xF90 * 8 + 4)
#define                                 LH4_bit             _BIT_ACCESS(LATH,4)
// LATH<LH5>
extern volatile __bit                   LH5                 __at(0x7C85);	// @ (0xF90 * 8 + 5)
#define                                 LH5_bit             _BIT_ACCESS(LATH,5)
// LATH<LH6>
extern volatile __bit                   LH6                 __at(0x7C86);	// @ (0xF90 * 8 + 6)
#define                                 LH6_bit             _BIT_ACCESS(LATH,6)
// LATH<LH7>
extern volatile __bit                   LH7                 __at(0x7C87);	// @ (0xF90 * 8 + 7)
#define                                 LH7_bit             _BIT_ACCESS(LATH,7)
// LATJ<LJ0>
extern volatile __bit                   LJ0                 __at(0x7C88);	// @ (0xF91 * 8 + 0)
#define                                 LJ0_bit             _BIT_ACCESS(LATJ,0)
// LATJ<LJ1>
extern volatile __bit                   LJ1                 __at(0x7C89);	// @ (0xF91 * 8 + 1)
#define                                 LJ1_bit             _BIT_ACCESS(LATJ,1)
// LATJ<LJ2>
extern volatile __bit                   LJ2                 __at(0x7C8A);	// @ (0xF91 * 8 + 2)
#define                                 LJ2_bit             _BIT_ACCESS(LATJ,2)
// LATJ<LJ3>
extern volatile __bit                   LJ3                 __at(0x7C8B);	// @ (0xF91 * 8 + 3)
#define                                 LJ3_bit             _BIT_ACCESS(LATJ,3)
// LATJ<LJ4>
extern volatile __bit                   LJ4                 __at(0x7C8C);	// @ (0xF91 * 8 + 4)
#define                                 LJ4_bit             _BIT_ACCESS(LATJ,4)
// LATJ<LJ5>
extern volatile __bit                   LJ5                 __at(0x7C8D);	// @ (0xF91 * 8 + 5)
#define                                 LJ5_bit             _BIT_ACCESS(LATJ,5)
// LATJ<LJ6>
extern volatile __bit                   LJ6                 __at(0x7C8E);	// @ (0xF91 * 8 + 6)
#define                                 LJ6_bit             _BIT_ACCESS(LATJ,6)
// LATJ<LJ7>
extern volatile __bit                   LJ7                 __at(0x7C8F);	// @ (0xF91 * 8 + 7)
#define                                 LJ7_bit             _BIT_ACCESS(LATJ,7)
// LCDCON<LMUX0>
extern volatile __bit                   LMUX0               __at(0x77A0);	// @ (0xEF4 * 8 + 0)
#define                                 LMUX0_bit           _BIT_ACCESS(LCDCON,0)
// LCDCON<LMUX1>
extern volatile __bit                   LMUX1               __at(0x77A1);	// @ (0xEF4 * 8 + 1)
#define                                 LMUX1_bit           _BIT_ACCESS(LCDCON,1)
// LCDPS<LP0>
extern volatile __bit                   LP0                 __at(0x77A8);	// @ (0xEF5 * 8 + 0)
#define                                 LP0_bit             _BIT_ACCESS(LCDPS,0)
// LCDPS<LP1>
extern volatile __bit                   LP1                 __at(0x77A9);	// @ (0xEF5 * 8 + 1)
#define                                 LP1_bit             _BIT_ACCESS(LCDPS,1)
// LCDPS<LP2>
extern volatile __bit                   LP2                 __at(0x77AA);	// @ (0xEF5 * 8 + 2)
#define                                 LP2_bit             _BIT_ACCESS(LCDPS,2)
// LCDPS<LP3>
extern volatile __bit                   LP3                 __at(0x77AB);	// @ (0xEF5 * 8 + 3)
#define                                 LP3_bit             _BIT_ACCESS(LCDPS,3)
// LCDRL<LRLAP0>
extern volatile __bit                   LRLAP0              __at(0x77E6);	// @ (0xEFC * 8 + 6)
#define                                 LRLAP0_bit          _BIT_ACCESS(LCDRL,6)
// LCDRL<LRLAP1>
extern volatile __bit                   LRLAP1              __at(0x77E7);	// @ (0xEFC * 8 + 7)
#define                                 LRLAP1_bit          _BIT_ACCESS(LCDRL,7)
// LCDRL<LRLAT0>
extern volatile __bit                   LRLAT0              __at(0x77E0);	// @ (0xEFC * 8 + 0)
#define                                 LRLAT0_bit          _BIT_ACCESS(LCDRL,0)
// LCDRL<LRLAT1>
extern volatile __bit                   LRLAT1              __at(0x77E1);	// @ (0xEFC * 8 + 1)
#define                                 LRLAT1_bit          _BIT_ACCESS(LCDRL,1)
// LCDRL<LRLAT2>
extern volatile __bit                   LRLAT2              __at(0x77E2);	// @ (0xEFC * 8 + 2)
#define                                 LRLAT2_bit          _BIT_ACCESS(LCDRL,2)
// LCDRL<LRLBP0>
extern volatile __bit                   LRLBP0              __at(0x77E4);	// @ (0xEFC * 8 + 4)
#define                                 LRLBP0_bit          _BIT_ACCESS(LCDRL,4)
// LCDRL<LRLBP1>
extern volatile __bit                   LRLBP1              __at(0x77E5);	// @ (0xEFC * 8 + 5)
#define                                 LRLBP1_bit          _BIT_ACCESS(LCDRL,5)
// PIE2<LVDIE>
extern volatile __bit                   LVDIE               __at(0x7D02);	// @ (0xFA0 * 8 + 2)
#define                                 LVDIE_bit           _BIT_ACCESS(PIE2,2)
// PIR2<LVDIF>
extern volatile __bit                   LVDIF               __at(0x7D0A);	// @ (0xFA1 * 8 + 2)
#define                                 LVDIF_bit           _BIT_ACCESS(PIR2,2)
// PORTA<LVDIN>
extern volatile __bit                   LVDIN               __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 LVDIN_bit           _BIT_ACCESS(PORTA,5)
// IPR2<LVDIP>
extern volatile __bit                   LVDIP               __at(0x7D12);	// @ (0xFA2 * 8 + 2)
#define                                 LVDIP_bit           _BIT_ACCESS(IPR2,2)
// OSCCON2<MFIOFS>
extern volatile __bit                   MFIOFS              __at(0x7B21);	// @ (0xF64 * 8 + 1)
#define                                 MFIOFS_bit          _BIT_ACCESS(OSCCON2,1)
// OSCCON2<MFIOSEL>
extern volatile __bit                   MFIOSEL             __at(0x7B20);	// @ (0xF64 * 8 + 0)
#define                                 MFIOSEL_bit         _BIT_ACCESS(OSCCON2,0)
// SSP1ADD<MSK01>
extern volatile __bit                   MSK01               __at(0x7E40);	// @ (0xFC8 * 8 + 0)
#define                                 MSK01_bit           _BIT_ACCESS(SSP1ADD,0)
// SSP2ADD<MSK02>
extern volatile __bit                   MSK02               __at(0x7808);	// @ (0xF01 * 8 + 0)
#define                                 MSK02_bit           _BIT_ACCESS(SSP2ADD,0)
// SSP1ADD<MSK11>
extern volatile __bit                   MSK11               __at(0x7E41);	// @ (0xFC8 * 8 + 1)
#define                                 MSK11_bit           _BIT_ACCESS(SSP1ADD,1)
// SSP2ADD<MSK12>
extern volatile __bit                   MSK12               __at(0x7809);	// @ (0xF01 * 8 + 1)
#define                                 MSK12_bit           _BIT_ACCESS(SSP2ADD,1)
// SSP1ADD<MSK21>
extern volatile __bit                   MSK21               __at(0x7E42);	// @ (0xFC8 * 8 + 2)
#define                                 MSK21_bit           _BIT_ACCESS(SSP1ADD,2)
// SSP2ADD<MSK22>
extern volatile __bit                   MSK22               __at(0x780A);	// @ (0xF01 * 8 + 2)
#define                                 MSK22_bit           _BIT_ACCESS(SSP2ADD,2)
// SSP1ADD<MSK31>
extern volatile __bit                   MSK31               __at(0x7E43);	// @ (0xFC8 * 8 + 3)
#define                                 MSK31_bit           _BIT_ACCESS(SSP1ADD,3)
// SSP2ADD<MSK32>
extern volatile __bit                   MSK32               __at(0x780B);	// @ (0xF01 * 8 + 3)
#define                                 MSK32_bit           _BIT_ACCESS(SSP2ADD,3)
// SSP1ADD<MSK41>
extern volatile __bit                   MSK41               __at(0x7E44);	// @ (0xFC8 * 8 + 4)
#define                                 MSK41_bit           _BIT_ACCESS(SSP1ADD,4)
// SSP2ADD<MSK42>
extern volatile __bit                   MSK42               __at(0x780C);	// @ (0xF01 * 8 + 4)
#define                                 MSK42_bit           _BIT_ACCESS(SSP2ADD,4)
// SSP1ADD<MSK51>
extern volatile __bit                   MSK51               __at(0x7E45);	// @ (0xFC8 * 8 + 5)
#define                                 MSK51_bit           _BIT_ACCESS(SSP1ADD,5)
// SSP2ADD<MSK52>
extern volatile __bit                   MSK52               __at(0x780D);	// @ (0xF01 * 8 + 5)
#define                                 MSK52_bit           _BIT_ACCESS(SSP2ADD,5)
// SSP1ADD<MSK61>
extern volatile __bit                   MSK61               __at(0x7E46);	// @ (0xFC8 * 8 + 6)
#define                                 MSK61_bit           _BIT_ACCESS(SSP1ADD,6)
// SSP2ADD<MSK62>
extern volatile __bit                   MSK62               __at(0x780E);	// @ (0xF01 * 8 + 6)
#define                                 MSK62_bit           _BIT_ACCESS(SSP2ADD,6)
// SSP1ADD<MSK71>
extern volatile __bit                   MSK71               __at(0x7E47);	// @ (0xFC8 * 8 + 7)
#define                                 MSK71_bit           _BIT_ACCESS(SSP1ADD,7)
// SSP2ADD<MSK72>
extern volatile __bit                   MSK72               __at(0x780F);	// @ (0xF01 * 8 + 7)
#define                                 MSK72_bit           _BIT_ACCESS(SSP2ADD,7)
// STATUS<NEGATIVE>
extern volatile __bit                   NEGATIVE            __at(0x7EC4);	// @ (0xFD8 * 8 + 4)
#define                                 NEGATIVE_bit        _BIT_ACCESS(STATUS,4)
// SSP1STAT<NOT_A>
extern volatile __bit                   NOT_A               __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 NOT_A_bit           _BIT_ACCESS(SSP1STAT,5)
// SSP2STAT<NOT_A2>
extern volatile __bit                   NOT_A2              __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 NOT_A2_bit          _BIT_ACCESS(SSP2STAT,5)
// SSP2STAT<NOT_ADDRESS2>
extern volatile __bit                   NOT_ADDRESS2        __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 NOT_ADDRESS2_bit    _BIT_ACCESS(SSP2STAT,5)
// RCON<NOT_BOR>
extern volatile __bit                   NOT_BOR             __at(0x7E80);	// @ (0xFD0 * 8 + 0)
#define                                 NOT_BOR_bit         _BIT_ACCESS(RCON,0)
// RCON<NOT_CM>
extern volatile __bit                   NOT_CM              __at(0x7E85);	// @ (0xFD0 * 8 + 5)
#define                                 NOT_CM_bit          _BIT_ACCESS(RCON,5)
// ADCON0<NOT_DONE>
extern volatile __bit                   NOT_DONE            __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 NOT_DONE_bit        _BIT_ACCESS(ADCON0,1)
// RCON<NOT_PD>
extern volatile __bit                   NOT_PD              __at(0x7E82);	// @ (0xFD0 * 8 + 2)
#define                                 NOT_PD_bit          _BIT_ACCESS(RCON,2)
// RCON<NOT_POR>
extern volatile __bit                   NOT_POR             __at(0x7E81);	// @ (0xFD0 * 8 + 1)
#define                                 NOT_POR_bit         _BIT_ACCESS(RCON,1)
// INTCON2<NOT_RBPU>
extern volatile __bit                   NOT_RBPU            __at(0x7F8F);	// @ (0xFF1 * 8 + 7)
#define                                 NOT_RBPU_bit        _BIT_ACCESS(INTCON2,7)
// RCSTA1<NOT_RC8>
extern volatile __bit                   NOT_RC8             __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 NOT_RC8_bit         _BIT_ACCESS(RCSTA1,6)
// RCON<NOT_RI>
extern volatile __bit                   NOT_RI              __at(0x7E84);	// @ (0xFD0 * 8 + 4)
#define                                 NOT_RI_bit          _BIT_ACCESS(RCON,4)
// T1GCON<NOT_T1DONE>
extern volatile __bit                   NOT_T1DONE          __at(0x7D53);	// @ (0xFAA * 8 + 3)
#define                                 NOT_T1DONE_bit      _BIT_ACCESS(T1GCON,3)
// T1CON<NOT_T1SYNC>
extern volatile __bit                   NOT_T1SYNC          __at(0x7E6A);	// @ (0xFCD * 8 + 2)
#define                                 NOT_T1SYNC_bit      _BIT_ACCESS(T1CON,2)
// T3GCON<NOT_T3DONE>
extern volatile __bit                   NOT_T3DONE          __at(0x7D83);	// @ (0xFB0 * 8 + 3)
#define                                 NOT_T3DONE_bit      _BIT_ACCESS(T3GCON,3)
// T3CON<NOT_T3SYNC>
extern volatile __bit                   NOT_T3SYNC          __at(0x7D8A);	// @ (0xFB1 * 8 + 2)
#define                                 NOT_T3SYNC_bit      _BIT_ACCESS(T3CON,2)
// T5GCON<NOT_T5DONE>
extern volatile __bit                   NOT_T5DONE          __at(0x7893);	// @ (0xF12 * 8 + 3)
#define                                 NOT_T5DONE_bit      _BIT_ACCESS(T5GCON,3)
// T5CON<NOT_T5SYNC>
extern volatile __bit                   NOT_T5SYNC          __at(0x789A);	// @ (0xF13 * 8 + 2)
#define                                 NOT_T5SYNC_bit      _BIT_ACCESS(T5CON,2)
// RCON<NOT_TO>
extern volatile __bit                   NOT_TO              __at(0x7E83);	// @ (0xFD0 * 8 + 3)
#define                                 NOT_TO_bit          _BIT_ACCESS(RCON,3)
// TXSTA1<NOT_TX8>
extern volatile __bit                   NOT_TX8             __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 NOT_TX8_bit         _BIT_ACCESS(TXSTA1,6)
// SSP1STAT<NOT_W>
extern volatile __bit                   NOT_W               __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 NOT_W_bit           _BIT_ACCESS(SSP1STAT,2)
// SSP2STAT<NOT_W2>
extern volatile __bit                   NOT_W2              __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 NOT_W2_bit          _BIT_ACCESS(SSP2STAT,2)
// SSP2STAT<NOT_WRITE2>
extern volatile __bit                   NOT_WRITE2          __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 NOT_WRITE2_bit      _BIT_ACCESS(SSP2STAT,2)
// PORTJ<OE>
extern volatile __bit                   OE                  __at(0x7C41);	// @ (0xF88 * 8 + 1)
#define                                 OE_bit              _BIT_ACCESS(PORTJ,1)
// RCSTA1<OERR1>
extern volatile __bit                   OERR1               __at(0x7D59);	// @ (0xFAB * 8 + 1)
#define                                 OERR1_bit           _BIT_ACCESS(RCSTA1,1)
// RCSTA2<OERR2>
extern volatile __bit                   OERR2               __at(0x7911);	// @ (0xF22 * 8 + 1)
#define                                 OERR2_bit           _BIT_ACCESS(RCSTA2,1)
// PORTA<OSC1>
extern volatile __bit                   OSC1                __at(0x7C07);	// @ (0xF80 * 8 + 7)
#define                                 OSC1_bit            _BIT_ACCESS(PORTA,7)
// PORTA<OSC2>
extern volatile __bit                   OSC2                __at(0x7C06);	// @ (0xF80 * 8 + 6)
#define                                 OSC2_bit            _BIT_ACCESS(PORTA,6)
// PIE2<OSCFIE>
extern volatile __bit                   OSCFIE              __at(0x7D07);	// @ (0xFA0 * 8 + 7)
#define                                 OSCFIE_bit          _BIT_ACCESS(PIE2,7)
// PIR2<OSCFIF>
extern volatile __bit                   OSCFIF              __at(0x7D0F);	// @ (0xFA1 * 8 + 7)
#define                                 OSCFIF_bit          _BIT_ACCESS(PIR2,7)
// IPR2<OSCFIP>
extern volatile __bit                   OSCFIP              __at(0x7D17);	// @ (0xFA2 * 8 + 7)
#define                                 OSCFIP_bit          _BIT_ACCESS(IPR2,7)
// OSCCON<OSTS>
extern volatile __bit                   OSTS                __at(0x7E9B);	// @ (0xFD3 * 8 + 3)
#define                                 OSTS_bit            _BIT_ACCESS(OSCCON,3)
// STATUS<OV>
extern volatile __bit                   OV                  __at(0x7EC3);	// @ (0xFD8 * 8 + 3)
#define                                 OV_bit              _BIT_ACCESS(STATUS,3)
// STATUS<OVERFLOW>
extern volatile __bit                   OVERFLOW            __at(0x7EC3);	// @ (0xFD8 * 8 + 3)
#define                                 OVERFLOW_bit        _BIT_ACCESS(STATUS,3)
// ECCP1DEL<P1DC0>
extern volatile __bit                   P1DC0               __at(0x7DF0);	// @ (0xFBE * 8 + 0)
#define                                 P1DC0_bit           _BIT_ACCESS(ECCP1DEL,0)
// ECCP1DEL<P1DC1>
extern volatile __bit                   P1DC1               __at(0x7DF1);	// @ (0xFBE * 8 + 1)
#define                                 P1DC1_bit           _BIT_ACCESS(ECCP1DEL,1)
// ECCP1DEL<P1DC2>
extern volatile __bit                   P1DC2               __at(0x7DF2);	// @ (0xFBE * 8 + 2)
#define                                 P1DC2_bit           _BIT_ACCESS(ECCP1DEL,2)
// ECCP1DEL<P1DC3>
extern volatile __bit                   P1DC3               __at(0x7DF3);	// @ (0xFBE * 8 + 3)
#define                                 P1DC3_bit           _BIT_ACCESS(ECCP1DEL,3)
// ECCP1DEL<P1DC4>
extern volatile __bit                   P1DC4               __at(0x7DF4);	// @ (0xFBE * 8 + 4)
#define                                 P1DC4_bit           _BIT_ACCESS(ECCP1DEL,4)
// ECCP1DEL<P1DC5>
extern volatile __bit                   P1DC5               __at(0x7DF5);	// @ (0xFBE * 8 + 5)
#define                                 P1DC5_bit           _BIT_ACCESS(ECCP1DEL,5)
// ECCP1DEL<P1DC6>
extern volatile __bit                   P1DC6               __at(0x7DF6);	// @ (0xFBE * 8 + 6)
#define                                 P1DC6_bit           _BIT_ACCESS(ECCP1DEL,6)
// CCP1CON<P1M0>
extern volatile __bit                   P1M0                __at(0x7DDE);	// @ (0xFBB * 8 + 6)
#define                                 P1M0_bit            _BIT_ACCESS(CCP1CON,6)
// CCP1CON<P1M1>
extern volatile __bit                   P1M1                __at(0x7DDF);	// @ (0xFBB * 8 + 7)
#define                                 P1M1_bit            _BIT_ACCESS(CCP1CON,7)
// ECCP1DEL<P1RSEN>
extern volatile __bit                   P1RSEN              __at(0x7DF7);	// @ (0xFBE * 8 + 7)
#define                                 P1RSEN_bit          _BIT_ACCESS(ECCP1DEL,7)
// SSP2STAT<P2>
extern volatile __bit                   P2                  __at(0x7804);	// @ (0xF00 * 8 + 4)
#define                                 P2_bit              _BIT_ACCESS(SSP2STAT,4)
// ECCP2DEL<P2DC0>
extern volatile __bit                   P2DC0               __at(0x7A88);	// @ (0xF51 * 8 + 0)
#define                                 P2DC0_bit           _BIT_ACCESS(ECCP2DEL,0)
// PSTR2CON<P2DC02>
extern volatile __bit                   P2DC02              __at(0x78D8);	// @ (0xF1B * 8 + 0)
#define                                 P2DC02_bit          _BIT_ACCESS(PSTR2CON,0)
// PSTR2CON<P2DC0CON>
extern volatile __bit                   P2DC0CON            __at(0x78D8);	// @ (0xF1B * 8 + 0)
#define                                 P2DC0CON_bit        _BIT_ACCESS(PSTR2CON,0)
// ECCP2DEL<P2DC1>
extern volatile __bit                   P2DC1               __at(0x7A89);	// @ (0xF51 * 8 + 1)
#define                                 P2DC1_bit           _BIT_ACCESS(ECCP2DEL,1)
// PSTR2CON<P2DC12>
extern volatile __bit                   P2DC12              __at(0x78D9);	// @ (0xF1B * 8 + 1)
#define                                 P2DC12_bit          _BIT_ACCESS(PSTR2CON,1)
// PSTR2CON<P2DC1CON>
extern volatile __bit                   P2DC1CON            __at(0x78D9);	// @ (0xF1B * 8 + 1)
#define                                 P2DC1CON_bit        _BIT_ACCESS(PSTR2CON,1)
// ECCP2DEL<P2DC2>
extern volatile __bit                   P2DC2               __at(0x7A8A);	// @ (0xF51 * 8 + 2)
#define                                 P2DC2_bit           _BIT_ACCESS(ECCP2DEL,2)
// PSTR2CON<P2DC22>
extern volatile __bit                   P2DC22              __at(0x78DA);	// @ (0xF1B * 8 + 2)
#define                                 P2DC22_bit          _BIT_ACCESS(PSTR2CON,2)
// PSTR2CON<P2DC2CON>
extern volatile __bit                   P2DC2CON            __at(0x78DA);	// @ (0xF1B * 8 + 2)
#define                                 P2DC2CON_bit        _BIT_ACCESS(PSTR2CON,2)
// ECCP2DEL<P2DC3>
extern volatile __bit                   P2DC3               __at(0x7A8B);	// @ (0xF51 * 8 + 3)
#define                                 P2DC3_bit           _BIT_ACCESS(ECCP2DEL,3)
// PSTR2CON<P2DC32>
extern volatile __bit                   P2DC32              __at(0x78DB);	// @ (0xF1B * 8 + 3)
#define                                 P2DC32_bit          _BIT_ACCESS(PSTR2CON,3)
// PSTR2CON<P2DC3CON>
extern volatile __bit                   P2DC3CON            __at(0x78DB);	// @ (0xF1B * 8 + 3)
#define                                 P2DC3CON_bit        _BIT_ACCESS(PSTR2CON,3)
// ECCP2DEL<P2DC4>
extern volatile __bit                   P2DC4               __at(0x7A8C);	// @ (0xF51 * 8 + 4)
#define                                 P2DC4_bit           _BIT_ACCESS(ECCP2DEL,4)
// PSTR2CON<P2DC42>
extern volatile __bit                   P2DC42              __at(0x78DC);	// @ (0xF1B * 8 + 4)
#define                                 P2DC42_bit          _BIT_ACCESS(PSTR2CON,4)
// PSTR2CON<P2DC4CON>
extern volatile __bit                   P2DC4CON            __at(0x78DC);	// @ (0xF1B * 8 + 4)
#define                                 P2DC4CON_bit        _BIT_ACCESS(PSTR2CON,4)
// ECCP2DEL<P2DC5>
extern volatile __bit                   P2DC5               __at(0x7A8D);	// @ (0xF51 * 8 + 5)
#define                                 P2DC5_bit           _BIT_ACCESS(ECCP2DEL,5)
// ECCP2DEL<P2DC6>
extern volatile __bit                   P2DC6               __at(0x7A8E);	// @ (0xF51 * 8 + 6)
#define                                 P2DC6_bit           _BIT_ACCESS(ECCP2DEL,6)
// PSTR2CON<P2DC62>
extern volatile __bit                   P2DC62              __at(0x78DE);	// @ (0xF1B * 8 + 6)
#define                                 P2DC62_bit          _BIT_ACCESS(PSTR2CON,6)
// PSTR2CON<P2DC6CON>
extern volatile __bit                   P2DC6CON            __at(0x78DE);	// @ (0xF1B * 8 + 6)
#define                                 P2DC6CON_bit        _BIT_ACCESS(PSTR2CON,6)
// CCP2CON<P2M0>
extern volatile __bit                   P2M0                __at(0x7A76);	// @ (0xF4E * 8 + 6)
#define                                 P2M0_bit            _BIT_ACCESS(CCP2CON,6)
// CCP2CON<P2M1>
extern volatile __bit                   P2M1                __at(0x7A77);	// @ (0xF4E * 8 + 7)
#define                                 P2M1_bit            _BIT_ACCESS(CCP2CON,7)
// ECCP2DEL<P2RSEN>
extern volatile __bit                   P2RSEN              __at(0x7A8F);	// @ (0xF51 * 8 + 7)
#define                                 P2RSEN_bit          _BIT_ACCESS(ECCP2DEL,7)
// ECCP3DEL<P3DC0>
extern volatile __bit                   P3DC0               __at(0x7A60);	// @ (0xF4C * 8 + 0)
#define                                 P3DC0_bit           _BIT_ACCESS(ECCP3DEL,0)
// ECCP3DEL<P3DC1>
extern volatile __bit                   P3DC1               __at(0x7A61);	// @ (0xF4C * 8 + 1)
#define                                 P3DC1_bit           _BIT_ACCESS(ECCP3DEL,1)
// ECCP3DEL<P3DC2>
extern volatile __bit                   P3DC2               __at(0x7A62);	// @ (0xF4C * 8 + 2)
#define                                 P3DC2_bit           _BIT_ACCESS(ECCP3DEL,2)
// ECCP3DEL<P3DC3>
extern volatile __bit                   P3DC3               __at(0x7A63);	// @ (0xF4C * 8 + 3)
#define                                 P3DC3_bit           _BIT_ACCESS(ECCP3DEL,3)
// ECCP3DEL<P3DC4>
extern volatile __bit                   P3DC4               __at(0x7A64);	// @ (0xF4C * 8 + 4)
#define                                 P3DC4_bit           _BIT_ACCESS(ECCP3DEL,4)
// ECCP3DEL<P3DC5>
extern volatile __bit                   P3DC5               __at(0x7A65);	// @ (0xF4C * 8 + 5)
#define                                 P3DC5_bit           _BIT_ACCESS(ECCP3DEL,5)
// ECCP3DEL<P3DC6>
extern volatile __bit                   P3DC6               __at(0x7A66);	// @ (0xF4C * 8 + 6)
#define                                 P3DC6_bit           _BIT_ACCESS(ECCP3DEL,6)
// CCP3CON<P3M0>
extern volatile __bit                   P3M0                __at(0x7A4E);	// @ (0xF49 * 8 + 6)
#define                                 P3M0_bit            _BIT_ACCESS(CCP3CON,6)
// CCP3CON<P3M1>
extern volatile __bit                   P3M1                __at(0x7A4F);	// @ (0xF49 * 8 + 7)
#define                                 P3M1_bit            _BIT_ACCESS(CCP3CON,7)
// ECCP3DEL<P3RSEN>
extern volatile __bit                   P3RSEN              __at(0x7A67);	// @ (0xF4C * 8 + 7)
#define                                 P3RSEN_bit          _BIT_ACCESS(ECCP3DEL,7)
// PORTC<PA1>
extern volatile __bit                   PA1                 __at(0x7C12);	// @ (0xF82 * 8 + 2)
#define                                 PA1_bit             _BIT_ACCESS(PORTC,2)
// PORTE<PA2E>
extern volatile __bit                   PA2E                __at(0x7C27);	// @ (0xF84 * 8 + 7)
#define                                 PA2E_bit            _BIT_ACCESS(PORTE,7)
// PORTG<PA3>
extern volatile __bit                   PA3                 __at(0x7C30);	// @ (0xF86 * 8 + 0)
#define                                 PA3_bit             _BIT_ACCESS(PORTG,0)
// PORTE<PB1E>
extern volatile __bit                   PB1E                __at(0x7C26);	// @ (0xF84 * 8 + 6)
#define                                 PB1E_bit            _BIT_ACCESS(PORTE,6)
// PORTE<PB2>
extern volatile __bit                   PB2                 __at(0x7C22);	// @ (0xF84 * 8 + 2)
#define                                 PB2_bit             _BIT_ACCESS(PORTE,2)
// PORTE<PB3E>
extern volatile __bit                   PB3E                __at(0x7C24);	// @ (0xF84 * 8 + 4)
#define                                 PB3E_bit            _BIT_ACCESS(PORTE,4)
// PORTE<PC1E>
extern volatile __bit                   PC1E                __at(0x7C25);	// @ (0xF84 * 8 + 5)
#define                                 PC1E_bit            _BIT_ACCESS(PORTE,5)
// PORTE<PC2>
extern volatile __bit                   PC2                 __at(0x7C21);	// @ (0xF84 * 8 + 1)
#define                                 PC2_bit             _BIT_ACCESS(PORTE,1)
// PORTE<PC3E>
extern volatile __bit                   PC3E                __at(0x7C23);	// @ (0xF84 * 8 + 3)
#define                                 PC3E_bit            _BIT_ACCESS(PORTE,3)
// ANCON0<PCFG0>
extern volatile __bit                   PCFG0               __at(0x7928);	// @ (0xF25 * 8 + 0)
#define                                 PCFG0_bit           _BIT_ACCESS(ANCON0,0)
// ANCON0<PCFG1>
extern volatile __bit                   PCFG1               __at(0x7929);	// @ (0xF25 * 8 + 1)
#define                                 PCFG1_bit           _BIT_ACCESS(ANCON0,1)
// ANCON1<PCFG10>
extern volatile __bit                   PCFG10              __at(0x7922);	// @ (0xF24 * 8 + 2)
#define                                 PCFG10_bit          _BIT_ACCESS(ANCON1,2)
// ANCON1<PCFG11>
extern volatile __bit                   PCFG11              __at(0x7923);	// @ (0xF24 * 8 + 3)
#define                                 PCFG11_bit          _BIT_ACCESS(ANCON1,3)
// ANCON1<PCFG12>
extern volatile __bit                   PCFG12              __at(0x7924);	// @ (0xF24 * 8 + 4)
#define                                 PCFG12_bit          _BIT_ACCESS(ANCON1,4)
// ANCON1<PCFG13>
extern volatile __bit                   PCFG13              __at(0x7925);	// @ (0xF24 * 8 + 5)
#define                                 PCFG13_bit          _BIT_ACCESS(ANCON1,5)
// ANCON1<PCFG14>
extern volatile __bit                   PCFG14              __at(0x7926);	// @ (0xF24 * 8 + 6)
#define                                 PCFG14_bit          _BIT_ACCESS(ANCON1,6)
// ANCON1<PCFG15>
extern volatile __bit                   PCFG15              __at(0x7927);	// @ (0xF24 * 8 + 7)
#define                                 PCFG15_bit          _BIT_ACCESS(ANCON1,7)
// ANCON2<PCFG16>
extern volatile __bit                   PCFG16              __at(0x7918);	// @ (0xF23 * 8 + 0)
#define                                 PCFG16_bit          _BIT_ACCESS(ANCON2,0)
// ANCON2<PCFG17>
extern volatile __bit                   PCFG17              __at(0x7919);	// @ (0xF23 * 8 + 1)
#define                                 PCFG17_bit          _BIT_ACCESS(ANCON2,1)
// ANCON2<PCFG18>
extern volatile __bit                   PCFG18              __at(0x791A);	// @ (0xF23 * 8 + 2)
#define                                 PCFG18_bit          _BIT_ACCESS(ANCON2,2)
// ANCON2<PCFG19>
extern volatile __bit                   PCFG19              __at(0x791B);	// @ (0xF23 * 8 + 3)
#define                                 PCFG19_bit          _BIT_ACCESS(ANCON2,3)
// ANCON0<PCFG2>
extern volatile __bit                   PCFG2               __at(0x792A);	// @ (0xF25 * 8 + 2)
#define                                 PCFG2_bit           _BIT_ACCESS(ANCON0,2)
// ANCON2<PCFG20>
extern volatile __bit                   PCFG20              __at(0x791C);	// @ (0xF23 * 8 + 4)
#define                                 PCFG20_bit          _BIT_ACCESS(ANCON2,4)
// ANCON2<PCFG21>
extern volatile __bit                   PCFG21              __at(0x791D);	// @ (0xF23 * 8 + 5)
#define                                 PCFG21_bit          _BIT_ACCESS(ANCON2,5)
// ANCON2<PCFG22>
extern volatile __bit                   PCFG22              __at(0x791E);	// @ (0xF23 * 8 + 6)
#define                                 PCFG22_bit          _BIT_ACCESS(ANCON2,6)
// ANCON2<PCFG23>
extern volatile __bit                   PCFG23              __at(0x791F);	// @ (0xF23 * 8 + 7)
#define                                 PCFG23_bit          _BIT_ACCESS(ANCON2,7)
// ANCON0<PCFG3>
extern volatile __bit                   PCFG3               __at(0x792B);	// @ (0xF25 * 8 + 3)
#define                                 PCFG3_bit           _BIT_ACCESS(ANCON0,3)
// ANCON0<PCFG4>
extern volatile __bit                   PCFG4               __at(0x792C);	// @ (0xF25 * 8 + 4)
#define                                 PCFG4_bit           _BIT_ACCESS(ANCON0,4)
// ANCON0<PCFG5>
extern volatile __bit                   PCFG5               __at(0x792D);	// @ (0xF25 * 8 + 5)
#define                                 PCFG5_bit           _BIT_ACCESS(ANCON0,5)
// ANCON0<PCFG6>
extern volatile __bit                   PCFG6               __at(0x792E);	// @ (0xF25 * 8 + 6)
#define                                 PCFG6_bit           _BIT_ACCESS(ANCON0,6)
// ANCON0<PCFG7>
extern volatile __bit                   PCFG7               __at(0x792F);	// @ (0xF25 * 8 + 7)
#define                                 PCFG7_bit           _BIT_ACCESS(ANCON0,7)
// ANCON1<PCFG8>
extern volatile __bit                   PCFG8               __at(0x7920);	// @ (0xF24 * 8 + 0)
#define                                 PCFG8_bit           _BIT_ACCESS(ANCON1,0)
// ANCON1<PCFG9>
extern volatile __bit                   PCFG9               __at(0x7921);	// @ (0xF24 * 8 + 1)
#define                                 PCFG9_bit           _BIT_ACCESS(ANCON1,1)
// RCON<PD>
extern volatile __bit                   PD                  __at(0x7E82);	// @ (0xFD0 * 8 + 2)
#define                                 PD_bit              _BIT_ACCESS(RCON,2)
// PORTG<PD1>
extern volatile __bit                   PD1                 __at(0x7C34);	// @ (0xF86 * 8 + 4)
#define                                 PD1_bit             _BIT_ACCESS(PORTG,4)
// PORTE<PD2>
extern volatile __bit                   PD2                 __at(0x7C20);	// @ (0xF84 * 8 + 0)
#define                                 PD2_bit             _BIT_ACCESS(PORTE,0)
// PORTG<PD3>
extern volatile __bit                   PD3                 __at(0x7C33);	// @ (0xF86 * 8 + 3)
#define                                 PD3_bit             _BIT_ACCESS(PORTG,3)
// INTCON<PEIE>
extern volatile __bit                   PEIE                __at(0x7F96);	// @ (0xFF2 * 8 + 6)
#define                                 PEIE_bit            _BIT_ACCESS(INTCON,6)
// INTCON<PEIE_GIEL>
extern volatile __bit                   PEIE_GIEL           __at(0x7F96);	// @ (0xFF2 * 8 + 6)
#define                                 PEIE_GIEL_bit       _BIT_ACCESS(INTCON,6)
// SSP1CON2<PEN1>
extern volatile __bit                   PEN1                __at(0x7E2A);	// @ (0xFC5 * 8 + 2)
#define                                 PEN1_bit            _BIT_ACCESS(SSP1CON2,2)
// SSP2CON2<PEN2>
extern volatile __bit                   PEN2                __at(0x77F2);	// @ (0xEFE * 8 + 2)
#define                                 PEN2_bit            _BIT_ACCESS(SSP2CON2,2)
// PORTB<PGC>
extern volatile __bit                   PGC                 __at(0x7C0E);	// @ (0xF81 * 8 + 6)
#define                                 PGC_bit             _BIT_ACCESS(PORTB,6)
// PORTB<PGD>
extern volatile __bit                   PGD                 __at(0x7C0F);	// @ (0xF81 * 8 + 7)
#define                                 PGD_bit             _BIT_ACCESS(PORTB,7)
// PORTB<PGM>
extern volatile __bit                   PGM                 __at(0x7C0D);	// @ (0xF81 * 8 + 5)
#define                                 PGM_bit             _BIT_ACCESS(PORTB,5)
// OSCTUNE<PLLEN>
extern volatile __bit                   PLLEN               __at(0x7CDE);	// @ (0xF9B * 8 + 6)
#define                                 PLLEN_bit           _BIT_ACCESS(OSCTUNE,6)
// RCON<POR>
extern volatile __bit                   POR                 __at(0x7E81);	// @ (0xFD0 * 8 + 1)
#define                                 POR_bit             _BIT_ACCESS(RCON,1)
// T0CON<PSA>
extern volatile __bit                   PSA                 __at(0x7EAB);	// @ (0xFD5 * 8 + 3)
#define                                 PSA_bit             _BIT_ACCESS(T0CON,3)
// PORTD<PSP0>
extern volatile __bit                   PSP0                __at(0x7C18);	// @ (0xF83 * 8 + 0)
#define                                 PSP0_bit            _BIT_ACCESS(PORTD,0)
// PORTD<PSP1>
extern volatile __bit                   PSP1                __at(0x7C19);	// @ (0xF83 * 8 + 1)
#define                                 PSP1_bit            _BIT_ACCESS(PORTD,1)
// PORTD<PSP2>
extern volatile __bit                   PSP2                __at(0x7C1A);	// @ (0xF83 * 8 + 2)
#define                                 PSP2_bit            _BIT_ACCESS(PORTD,2)
// PORTD<PSP3>
extern volatile __bit                   PSP3                __at(0x7C1B);	// @ (0xF83 * 8 + 3)
#define                                 PSP3_bit            _BIT_ACCESS(PORTD,3)
// PORTD<PSP4>
extern volatile __bit                   PSP4                __at(0x7C1C);	// @ (0xF83 * 8 + 4)
#define                                 PSP4_bit            _BIT_ACCESS(PORTD,4)
// PORTD<PSP5>
extern volatile __bit                   PSP5                __at(0x7C1D);	// @ (0xF83 * 8 + 5)
#define                                 PSP5_bit            _BIT_ACCESS(PORTD,5)
// PORTD<PSP6>
extern volatile __bit                   PSP6                __at(0x7C1E);	// @ (0xF83 * 8 + 6)
#define                                 PSP6_bit            _BIT_ACCESS(PORTD,6)
// PORTD<PSP7>
extern volatile __bit                   PSP7                __at(0x7C1F);	// @ (0xF83 * 8 + 7)
#define                                 PSP7_bit            _BIT_ACCESS(PORTD,7)
// ECCP1AS<PSS1AC0>
extern volatile __bit                   PSS1AC0             __at(0x7DFA);	// @ (0xFBF * 8 + 2)
#define                                 PSS1AC0_bit         _BIT_ACCESS(ECCP1AS,2)
// ECCP1AS<PSS1AC1>
extern volatile __bit                   PSS1AC1             __at(0x7DFB);	// @ (0xFBF * 8 + 3)
#define                                 PSS1AC1_bit         _BIT_ACCESS(ECCP1AS,3)
// ECCP1AS<PSS1BD0>
extern volatile __bit                   PSS1BD0             __at(0x7DF8);	// @ (0xFBF * 8 + 0)
#define                                 PSS1BD0_bit         _BIT_ACCESS(ECCP1AS,0)
// ECCP1AS<PSS1BD1>
extern volatile __bit                   PSS1BD1             __at(0x7DF9);	// @ (0xFBF * 8 + 1)
#define                                 PSS1BD1_bit         _BIT_ACCESS(ECCP1AS,1)
// ECCP2AS<PSS2AC0>
extern volatile __bit                   PSS2AC0             __at(0x7A92);	// @ (0xF52 * 8 + 2)
#define                                 PSS2AC0_bit         _BIT_ACCESS(ECCP2AS,2)
// ECCP2AS<PSS2AC1>
extern volatile __bit                   PSS2AC1             __at(0x7A93);	// @ (0xF52 * 8 + 3)
#define                                 PSS2AC1_bit         _BIT_ACCESS(ECCP2AS,3)
// ECCP2AS<PSS2BD0>
extern volatile __bit                   PSS2BD0             __at(0x7A90);	// @ (0xF52 * 8 + 0)
#define                                 PSS2BD0_bit         _BIT_ACCESS(ECCP2AS,0)
// ECCP2AS<PSS2BD1>
extern volatile __bit                   PSS2BD1             __at(0x7A91);	// @ (0xF52 * 8 + 1)
#define                                 PSS2BD1_bit         _BIT_ACCESS(ECCP2AS,1)
// ECCP3AS<PSS3AC0>
extern volatile __bit                   PSS3AC0             __at(0x7A6A);	// @ (0xF4D * 8 + 2)
#define                                 PSS3AC0_bit         _BIT_ACCESS(ECCP3AS,2)
// ECCP3AS<PSS3AC1>
extern volatile __bit                   PSS3AC1             __at(0x7A6B);	// @ (0xF4D * 8 + 3)
#define                                 PSS3AC1_bit         _BIT_ACCESS(ECCP3AS,3)
// ECCP3AS<PSS3BD0>
extern volatile __bit                   PSS3BD0             __at(0x7A68);	// @ (0xF4D * 8 + 0)
#define                                 PSS3BD0_bit         _BIT_ACCESS(ECCP3AS,0)
// ECCP3AS<PSS3BD1>
extern volatile __bit                   PSS3BD1             __at(0x7A69);	// @ (0xF4D * 8 + 1)
#define                                 PSS3BD1_bit         _BIT_ACCESS(ECCP3AS,1)
// PORTA<RA0>
extern volatile __bit                   RA0                 __at(0x7C00);	// @ (0xF80 * 8 + 0)
#define                                 RA0_bit             _BIT_ACCESS(PORTA,0)
// PORTA<RA1>
extern volatile __bit                   RA1                 __at(0x7C01);	// @ (0xF80 * 8 + 1)
#define                                 RA1_bit             _BIT_ACCESS(PORTA,1)
// PORTA<RA2>
extern volatile __bit                   RA2                 __at(0x7C02);	// @ (0xF80 * 8 + 2)
#define                                 RA2_bit             _BIT_ACCESS(PORTA,2)
// PORTA<RA3>
extern volatile __bit                   RA3                 __at(0x7C03);	// @ (0xF80 * 8 + 3)
#define                                 RA3_bit             _BIT_ACCESS(PORTA,3)
// PORTA<RA4>
extern volatile __bit                   RA4                 __at(0x7C04);	// @ (0xF80 * 8 + 4)
#define                                 RA4_bit             _BIT_ACCESS(PORTA,4)
// PORTA<RA5>
extern volatile __bit                   RA5                 __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 RA5_bit             _BIT_ACCESS(PORTA,5)
// PORTA<RA6>
extern volatile __bit                   RA6                 __at(0x7C06);	// @ (0xF80 * 8 + 6)
#define                                 RA6_bit             _BIT_ACCESS(PORTA,6)
// PORTA<RA7>
extern volatile __bit                   RA7                 __at(0x7C07);	// @ (0xF80 * 8 + 7)
#define                                 RA7_bit             _BIT_ACCESS(PORTA,7)
// PORTB<RB0>
extern volatile __bit                   RB0                 __at(0x7C08);	// @ (0xF81 * 8 + 0)
#define                                 RB0_bit             _BIT_ACCESS(PORTB,0)
// PORTB<RB1>
extern volatile __bit                   RB1                 __at(0x7C09);	// @ (0xF81 * 8 + 1)
#define                                 RB1_bit             _BIT_ACCESS(PORTB,1)
// PORTB<RB2>
extern volatile __bit                   RB2                 __at(0x7C0A);	// @ (0xF81 * 8 + 2)
#define                                 RB2_bit             _BIT_ACCESS(PORTB,2)
// PORTB<RB3>
extern volatile __bit                   RB3                 __at(0x7C0B);	// @ (0xF81 * 8 + 3)
#define                                 RB3_bit             _BIT_ACCESS(PORTB,3)
// PORTB<RB4>
extern volatile __bit                   RB4                 __at(0x7C0C);	// @ (0xF81 * 8 + 4)
#define                                 RB4_bit             _BIT_ACCESS(PORTB,4)
// PORTB<RB5>
extern volatile __bit                   RB5                 __at(0x7C0D);	// @ (0xF81 * 8 + 5)
#define                                 RB5_bit             _BIT_ACCESS(PORTB,5)
// PORTB<RB6>
extern volatile __bit                   RB6                 __at(0x7C0E);	// @ (0xF81 * 8 + 6)
#define                                 RB6_bit             _BIT_ACCESS(PORTB,6)
// PORTB<RB7>
extern volatile __bit                   RB7                 __at(0x7C0F);	// @ (0xF81 * 8 + 7)
#define                                 RB7_bit             _BIT_ACCESS(PORTB,7)
// INTCON<RBIE>
extern volatile __bit                   RBIE                __at(0x7F93);	// @ (0xFF2 * 8 + 3)
#define                                 RBIE_bit            _BIT_ACCESS(INTCON,3)
// INTCON<RBIF>
extern volatile __bit                   RBIF                __at(0x7F90);	// @ (0xFF2 * 8 + 0)
#define                                 RBIF_bit            _BIT_ACCESS(INTCON,0)
// INTCON2<RBIP>
extern volatile __bit                   RBIP                __at(0x7F88);	// @ (0xFF1 * 8 + 0)
#define                                 RBIP_bit            _BIT_ACCESS(INTCON2,0)
// INTCON2<RBPU>
extern volatile __bit                   RBPU                __at(0x7F8F);	// @ (0xFF1 * 8 + 7)
#define                                 RBPU_bit            _BIT_ACCESS(INTCON2,7)
// PORTC<RC0>
extern volatile __bit                   RC0                 __at(0x7C10);	// @ (0xF82 * 8 + 0)
#define                                 RC0_bit             _BIT_ACCESS(PORTC,0)
// PORTC<RC1>
extern volatile __bit                   RC1                 __at(0x7C11);	// @ (0xF82 * 8 + 1)
#define                                 RC1_bit             _BIT_ACCESS(PORTC,1)
// PIE1<RC1IE>
extern volatile __bit                   RC1IE               __at(0x7CED);	// @ (0xF9D * 8 + 5)
#define                                 RC1IE_bit           _BIT_ACCESS(PIE1,5)
// PIR1<RC1IF>
extern volatile __bit                   RC1IF               __at(0x7CF5);	// @ (0xF9E * 8 + 5)
#define                                 RC1IF_bit           _BIT_ACCESS(PIR1,5)
// IPR1<RC1IP>
extern volatile __bit                   RC1IP               __at(0x7CFD);	// @ (0xF9F * 8 + 5)
#define                                 RC1IP_bit           _BIT_ACCESS(IPR1,5)
// PORTC<RC2>
extern volatile __bit                   RC2                 __at(0x7C12);	// @ (0xF82 * 8 + 2)
#define                                 RC2_bit             _BIT_ACCESS(PORTC,2)
// PIE3<RC2IE>
extern volatile __bit                   RC2IE               __at(0x7D1D);	// @ (0xFA3 * 8 + 5)
#define                                 RC2IE_bit           _BIT_ACCESS(PIE3,5)
// PIR3<RC2IF>
extern volatile __bit                   RC2IF               __at(0x7D25);	// @ (0xFA4 * 8 + 5)
#define                                 RC2IF_bit           _BIT_ACCESS(PIR3,5)
// IPR3<RC2IP>
extern volatile __bit                   RC2IP               __at(0x7D2D);	// @ (0xFA5 * 8 + 5)
#define                                 RC2IP_bit           _BIT_ACCESS(IPR3,5)
// PORTC<RC3>
extern volatile __bit                   RC3                 __at(0x7C13);	// @ (0xF82 * 8 + 3)
#define                                 RC3_bit             _BIT_ACCESS(PORTC,3)
// PORTC<RC4>
extern volatile __bit                   RC4                 __at(0x7C14);	// @ (0xF82 * 8 + 4)
#define                                 RC4_bit             _BIT_ACCESS(PORTC,4)
// PORTC<RC5>
extern volatile __bit                   RC5                 __at(0x7C15);	// @ (0xF82 * 8 + 5)
#define                                 RC5_bit             _BIT_ACCESS(PORTC,5)
// PORTC<RC6>
extern volatile __bit                   RC6                 __at(0x7C16);	// @ (0xF82 * 8 + 6)
#define                                 RC6_bit             _BIT_ACCESS(PORTC,6)
// PORTC<RC7>
extern volatile __bit                   RC7                 __at(0x7C17);	// @ (0xF82 * 8 + 7)
#define                                 RC7_bit             _BIT_ACCESS(PORTC,7)
// RCSTA1<RC8_9>
extern volatile __bit                   RC8_9               __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 RC8_9_bit           _BIT_ACCESS(RCSTA1,6)
// RCSTA2<RC8_92>
extern volatile __bit                   RC8_92              __at(0x7916);	// @ (0xF22 * 8 + 6)
#define                                 RC8_92_bit          _BIT_ACCESS(RCSTA2,6)
// RCSTA1<RC9>
extern volatile __bit                   RC9                 __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 RC9_bit             _BIT_ACCESS(RCSTA1,6)
// RCSTA2<RC92>
extern volatile __bit                   RC92                __at(0x7916);	// @ (0xF22 * 8 + 6)
#define                                 RC92_bit            _BIT_ACCESS(RCSTA2,6)
// RCSTA1<RCD8>
extern volatile __bit                   RCD8                __at(0x7D58);	// @ (0xFAB * 8 + 0)
#define                                 RCD8_bit            _BIT_ACCESS(RCSTA1,0)
// RCSTA2<RCD82>
extern volatile __bit                   RCD82               __at(0x7910);	// @ (0xF22 * 8 + 0)
#define                                 RCD82_bit           _BIT_ACCESS(RCSTA2,0)
// SSP1CON2<RCEN1>
extern volatile __bit                   RCEN1               __at(0x7E2B);	// @ (0xFC5 * 8 + 3)
#define                                 RCEN1_bit           _BIT_ACCESS(SSP1CON2,3)
// SSP2CON2<RCEN2>
extern volatile __bit                   RCEN2               __at(0x77F3);	// @ (0xEFE * 8 + 3)
#define                                 RCEN2_bit           _BIT_ACCESS(SSP2CON2,3)
// BAUDCON1<RCIDL1>
extern volatile __bit                   RCIDL1              __at(0x7B2E);	// @ (0xF65 * 8 + 6)
#define                                 RCIDL1_bit          _BIT_ACCESS(BAUDCON1,6)
// BAUDCON2<RCIDL2>
extern volatile __bit                   RCIDL2              __at(0x7906);	// @ (0xF20 * 8 + 6)
#define                                 RCIDL2_bit          _BIT_ACCESS(BAUDCON2,6)
// PIE1<RCIE>
extern volatile __bit                   RCIE                __at(0x7CED);	// @ (0xF9D * 8 + 5)
#define                                 RCIE_bit            _BIT_ACCESS(PIE1,5)
// PIR1<RCIF>
extern volatile __bit                   RCIF                __at(0x7CF5);	// @ (0xF9E * 8 + 5)
#define                                 RCIF_bit            _BIT_ACCESS(PIR1,5)
// IPR1<RCIP>
extern volatile __bit                   RCIP                __at(0x7CFD);	// @ (0xF9F * 8 + 5)
#define                                 RCIP_bit            _BIT_ACCESS(IPR1,5)
// BAUDCON1<RCMT>
extern volatile __bit                   RCMT                __at(0x7B2E);	// @ (0xF65 * 8 + 6)
#define                                 RCMT_bit            _BIT_ACCESS(BAUDCON1,6)
// BAUDCON1<RCMT1>
extern volatile __bit                   RCMT1               __at(0x7B2E);	// @ (0xF65 * 8 + 6)
#define                                 RCMT1_bit           _BIT_ACCESS(BAUDCON1,6)
// BAUDCON2<RCMT2>
extern volatile __bit                   RCMT2               __at(0x7906);	// @ (0xF20 * 8 + 6)
#define                                 RCMT2_bit           _BIT_ACCESS(BAUDCON2,6)
// PORTD<RD0>
extern volatile __bit                   RD0                 __at(0x7C18);	// @ (0xF83 * 8 + 0)
#define                                 RD0_bit             _BIT_ACCESS(PORTD,0)
// PORTD<RD1>
extern volatile __bit                   RD1                 __at(0x7C19);	// @ (0xF83 * 8 + 1)
#define                                 RD1_bit             _BIT_ACCESS(PORTD,1)
// T3CON<RD163>
extern volatile __bit                   RD163               __at(0x7D8F);	// @ (0xFB1 * 8 + 7)
#define                                 RD163_bit           _BIT_ACCESS(T3CON,7)
// T5CON<RD165>
extern volatile __bit                   RD165               __at(0x7899);	// @ (0xF13 * 8 + 1)
#define                                 RD165_bit           _BIT_ACCESS(T5CON,1)
// PORTD<RD2>
extern volatile __bit                   RD2                 __at(0x7C1A);	// @ (0xF83 * 8 + 2)
#define                                 RD2_bit             _BIT_ACCESS(PORTD,2)
// PORTD<RD3>
extern volatile __bit                   RD3                 __at(0x7C1B);	// @ (0xF83 * 8 + 3)
#define                                 RD3_bit             _BIT_ACCESS(PORTD,3)
// PORTD<RD4>
extern volatile __bit                   RD4                 __at(0x7C1C);	// @ (0xF83 * 8 + 4)
#define                                 RD4_bit             _BIT_ACCESS(PORTD,4)
// PORTD<RD5>
extern volatile __bit                   RD5                 __at(0x7C1D);	// @ (0xF83 * 8 + 5)
#define                                 RD5_bit             _BIT_ACCESS(PORTD,5)
// PORTD<RD6>
extern volatile __bit                   RD6                 __at(0x7C1E);	// @ (0xF83 * 8 + 6)
#define                                 RD6_bit             _BIT_ACCESS(PORTD,6)
// PORTD<RD7>
extern volatile __bit                   RD7                 __at(0x7C1F);	// @ (0xF83 * 8 + 7)
#define                                 RD7_bit             _BIT_ACCESS(PORTD,7)
// PORTE<RDE>
extern volatile __bit                   RDE                 __at(0x7C20);	// @ (0xF84 * 8 + 0)
#define                                 RDE_bit             _BIT_ACCESS(PORTE,0)
// PADCFG1<RDPU>
extern volatile __bit                   RDPU                __at(0x7A9F);	// @ (0xF53 * 8 + 7)
#define                                 RDPU_bit            _BIT_ACCESS(PADCFG1,7)
// PORTE<RE0>
extern volatile __bit                   RE0                 __at(0x7C20);	// @ (0xF84 * 8 + 0)
#define                                 RE0_bit             _BIT_ACCESS(PORTE,0)
// PORTE<RE1>
extern volatile __bit                   RE1                 __at(0x7C21);	// @ (0xF84 * 8 + 1)
#define                                 RE1_bit             _BIT_ACCESS(PORTE,1)
// PORTE<RE2>
extern volatile __bit                   RE2                 __at(0x7C22);	// @ (0xF84 * 8 + 2)
#define                                 RE2_bit             _BIT_ACCESS(PORTE,2)
// PORTE<RE3>
extern volatile __bit                   RE3                 __at(0x7C23);	// @ (0xF84 * 8 + 3)
#define                                 RE3_bit             _BIT_ACCESS(PORTE,3)
// PORTE<RE4>
extern volatile __bit                   RE4                 __at(0x7C24);	// @ (0xF84 * 8 + 4)
#define                                 RE4_bit             _BIT_ACCESS(PORTE,4)
// PORTE<RE5>
extern volatile __bit                   RE5                 __at(0x7C25);	// @ (0xF84 * 8 + 5)
#define                                 RE5_bit             _BIT_ACCESS(PORTE,5)
// PORTE<RE6>
extern volatile __bit                   RE6                 __at(0x7C26);	// @ (0xF84 * 8 + 6)
#define                                 RE6_bit             _BIT_ACCESS(PORTE,6)
// PORTE<RE7>
extern volatile __bit                   RE7                 __at(0x7C27);	// @ (0xF84 * 8 + 7)
#define                                 RE7_bit             _BIT_ACCESS(PORTE,7)
// SSP2STAT<READ_WRITE2>
extern volatile __bit                   READ_WRITE2         __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 READ_WRITE2_bit     _BIT_ACCESS(SSP2STAT,2)
// PORTE<REFO>
extern volatile __bit                   REFO                __at(0x7C24);	// @ (0xF84 * 8 + 4)
#define                                 REFO_bit            _BIT_ACCESS(PORTE,4)
// WDTCON<REGSLP>
extern volatile __bit                   REGSLP              __at(0x7E8F);	// @ (0xFD1 * 8 + 7)
#define                                 REGSLP_bit          _BIT_ACCESS(WDTCON,7)
// PADCFG1<REPU>
extern volatile __bit                   REPU                __at(0x7A9E);	// @ (0xF53 * 8 + 6)
#define                                 REPU_bit            _BIT_ACCESS(PADCFG1,6)
// PORTF<RF1>
extern volatile __bit                   RF1                 __at(0x7C29);	// @ (0xF85 * 8 + 1)
#define                                 RF1_bit             _BIT_ACCESS(PORTF,1)
// PORTF<RF2>
extern volatile __bit                   RF2                 __at(0x7C2A);	// @ (0xF85 * 8 + 2)
#define                                 RF2_bit             _BIT_ACCESS(PORTF,2)
// PORTF<RF3>
extern volatile __bit                   RF3                 __at(0x7C2B);	// @ (0xF85 * 8 + 3)
#define                                 RF3_bit             _BIT_ACCESS(PORTF,3)
// PORTF<RF4>
extern volatile __bit                   RF4                 __at(0x7C2C);	// @ (0xF85 * 8 + 4)
#define                                 RF4_bit             _BIT_ACCESS(PORTF,4)
// PORTF<RF5>
extern volatile __bit                   RF5                 __at(0x7C2D);	// @ (0xF85 * 8 + 5)
#define                                 RF5_bit             _BIT_ACCESS(PORTF,5)
// PORTF<RF6>
extern volatile __bit                   RF6                 __at(0x7C2E);	// @ (0xF85 * 8 + 6)
#define                                 RF6_bit             _BIT_ACCESS(PORTF,6)
// PORTF<RF7>
extern volatile __bit                   RF7                 __at(0x7C2F);	// @ (0xF85 * 8 + 7)
#define                                 RF7_bit             _BIT_ACCESS(PORTF,7)
// PORTG<RG0>
extern volatile __bit                   RG0                 __at(0x7C30);	// @ (0xF86 * 8 + 0)
#define                                 RG0_bit             _BIT_ACCESS(PORTG,0)
// PORTG<RG1>
extern volatile __bit                   RG1                 __at(0x7C31);	// @ (0xF86 * 8 + 1)
#define                                 RG1_bit             _BIT_ACCESS(PORTG,1)
// PORTG<RG2>
extern volatile __bit                   RG2                 __at(0x7C32);	// @ (0xF86 * 8 + 2)
#define                                 RG2_bit             _BIT_ACCESS(PORTG,2)
// PORTG<RG3>
extern volatile __bit                   RG3                 __at(0x7C33);	// @ (0xF86 * 8 + 3)
#define                                 RG3_bit             _BIT_ACCESS(PORTG,3)
// PORTG<RG4>
extern volatile __bit                   RG4                 __at(0x7C34);	// @ (0xF86 * 8 + 4)
#define                                 RG4_bit             _BIT_ACCESS(PORTG,4)
// PORTG<RG5>
extern volatile __bit                   RG5                 __at(0x7C35);	// @ (0xF86 * 8 + 5)
#define                                 RG5_bit             _BIT_ACCESS(PORTG,5)
// PORTH<RH0>
extern volatile __bit                   RH0                 __at(0x7C38);	// @ (0xF87 * 8 + 0)
#define                                 RH0_bit             _BIT_ACCESS(PORTH,0)
// PORTH<RH1>
extern volatile __bit                   RH1                 __at(0x7C39);	// @ (0xF87 * 8 + 1)
#define                                 RH1_bit             _BIT_ACCESS(PORTH,1)
// PORTH<RH2>
extern volatile __bit                   RH2                 __at(0x7C3A);	// @ (0xF87 * 8 + 2)
#define                                 RH2_bit             _BIT_ACCESS(PORTH,2)
// PORTH<RH3>
extern volatile __bit                   RH3                 __at(0x7C3B);	// @ (0xF87 * 8 + 3)
#define                                 RH3_bit             _BIT_ACCESS(PORTH,3)
// PORTH<RH4>
extern volatile __bit                   RH4                 __at(0x7C3C);	// @ (0xF87 * 8 + 4)
#define                                 RH4_bit             _BIT_ACCESS(PORTH,4)
// PORTH<RH5>
extern volatile __bit                   RH5                 __at(0x7C3D);	// @ (0xF87 * 8 + 5)
#define                                 RH5_bit             _BIT_ACCESS(PORTH,5)
// PORTH<RH6>
extern volatile __bit                   RH6                 __at(0x7C3E);	// @ (0xF87 * 8 + 6)
#define                                 RH6_bit             _BIT_ACCESS(PORTH,6)
// PORTH<RH7>
extern volatile __bit                   RH7                 __at(0x7C3F);	// @ (0xF87 * 8 + 7)
#define                                 RH7_bit             _BIT_ACCESS(PORTH,7)
// RCON<RI>
extern volatile __bit                   RI                  __at(0x7E84);	// @ (0xFD0 * 8 + 4)
#define                                 RI_bit              _BIT_ACCESS(RCON,4)
// PORTJ<RJ0>
extern volatile __bit                   RJ0                 __at(0x7C40);	// @ (0xF88 * 8 + 0)
#define                                 RJ0_bit             _BIT_ACCESS(PORTJ,0)
// PORTJ<RJ1>
extern volatile __bit                   RJ1                 __at(0x7C41);	// @ (0xF88 * 8 + 1)
#define                                 RJ1_bit             _BIT_ACCESS(PORTJ,1)
// PORTJ<RJ2>
extern volatile __bit                   RJ2                 __at(0x7C42);	// @ (0xF88 * 8 + 2)
#define                                 RJ2_bit             _BIT_ACCESS(PORTJ,2)
// PORTJ<RJ3>
extern volatile __bit                   RJ3                 __at(0x7C43);	// @ (0xF88 * 8 + 3)
#define                                 RJ3_bit             _BIT_ACCESS(PORTJ,3)
// PORTJ<RJ4>
extern volatile __bit                   RJ4                 __at(0x7C44);	// @ (0xF88 * 8 + 4)
#define                                 RJ4_bit             _BIT_ACCESS(PORTJ,4)
// PORTJ<RJ5>
extern volatile __bit                   RJ5                 __at(0x7C45);	// @ (0xF88 * 8 + 5)
#define                                 RJ5_bit             _BIT_ACCESS(PORTJ,5)
// PORTJ<RJ6>
extern volatile __bit                   RJ6                 __at(0x7C46);	// @ (0xF88 * 8 + 6)
#define                                 RJ6_bit             _BIT_ACCESS(PORTJ,6)
// PORTJ<RJ7>
extern volatile __bit                   RJ7                 __at(0x7C47);	// @ (0xF88 * 8 + 7)
#define                                 RJ7_bit             _BIT_ACCESS(PORTJ,7)
// PADCFG1<RJPU>
extern volatile __bit _DEPRECATED       RJPU                __at(0x7A9D);	// @ (0xF53 * 8 + 5)
#define                                 RJPU_bit            _BIT_ACCESS(PADCFG1,5)
// REFOCON<RODIV0>
extern volatile __bit                   RODIV0              __at(0x7950);	// @ (0xF2A * 8 + 0)
#define                                 RODIV0_bit          _BIT_ACCESS(REFOCON,0)
// REFOCON<RODIV1>
extern volatile __bit                   RODIV1              __at(0x7951);	// @ (0xF2A * 8 + 1)
#define                                 RODIV1_bit          _BIT_ACCESS(REFOCON,1)
// REFOCON<RODIV2>
extern volatile __bit                   RODIV2              __at(0x7952);	// @ (0xF2A * 8 + 2)
#define                                 RODIV2_bit          _BIT_ACCESS(REFOCON,2)
// REFOCON<RODIV3>
extern volatile __bit                   RODIV3              __at(0x7953);	// @ (0xF2A * 8 + 3)
#define                                 RODIV3_bit          _BIT_ACCESS(REFOCON,3)
// REFOCON<ROON>
extern volatile __bit                   ROON                __at(0x7957);	// @ (0xF2A * 8 + 7)
#define                                 ROON_bit            _BIT_ACCESS(REFOCON,7)
// REFOCON<ROSEL>
extern volatile __bit                   ROSEL               __at(0x7954);	// @ (0xF2A * 8 + 4)
#define                                 ROSEL_bit           _BIT_ACCESS(REFOCON,4)
// REFOCON<ROSSLP>
extern volatile __bit                   ROSSLP              __at(0x7955);	// @ (0xF2A * 8 + 5)
#define                                 ROSSLP_bit          _BIT_ACCESS(REFOCON,5)
// SSP1CON2<RSEN1>
extern volatile __bit                   RSEN1               __at(0x7E29);	// @ (0xFC5 * 8 + 1)
#define                                 RSEN1_bit           _BIT_ACCESS(SSP1CON2,1)
// SSP2CON2<RSEN2>
extern volatile __bit                   RSEN2               __at(0x77F1);	// @ (0xEFE * 8 + 1)
#define                                 RSEN2_bit           _BIT_ACCESS(SSP2CON2,1)
// PORTG<RTCC>
extern volatile __bit                   RTCC                __at(0x7C34);	// @ (0xF86 * 8 + 4)
#define                                 RTCC_bit            _BIT_ACCESS(PORTG,4)
// PIE3<RTCCIE>
extern volatile __bit                   RTCCIE              __at(0x7D18);	// @ (0xFA3 * 8 + 0)
#define                                 RTCCIE_bit          _BIT_ACCESS(PIE3,0)
// PIR3<RTCCIF>
extern volatile __bit                   RTCCIF              __at(0x7D20);	// @ (0xFA4 * 8 + 0)
#define                                 RTCCIF_bit          _BIT_ACCESS(PIR3,0)
// IPR3<RTCCIP>
extern volatile __bit                   RTCCIP              __at(0x7D28);	// @ (0xFA5 * 8 + 0)
#define                                 RTCCIP_bit          _BIT_ACCESS(IPR3,0)
// PMD1<RTCCMD>
extern volatile __bit                   RTCCMD              __at(0x78C5);	// @ (0xF18 * 8 + 5)
#define                                 RTCCMD_bit          _BIT_ACCESS(PMD1,5)
// RTCCFG<RTCEN>
extern volatile __bit                   RTCEN               __at(0x7AFF);	// @ (0xF5F * 8 + 7)
#define                                 RTCEN_bit           _BIT_ACCESS(RTCCFG,7)
// RTCCFG<RTCOE>
extern volatile __bit                   RTCOE               __at(0x7AFA);	// @ (0xF5F * 8 + 2)
#define                                 RTCOE_bit           _BIT_ACCESS(RTCCFG,2)
// RTCCFG<RTCPTR0>
extern volatile __bit                   RTCPTR0             __at(0x7AF8);	// @ (0xF5F * 8 + 0)
#define                                 RTCPTR0_bit         _BIT_ACCESS(RTCCFG,0)
// RTCCFG<RTCPTR1>
extern volatile __bit                   RTCPTR1             __at(0x7AF9);	// @ (0xF5F * 8 + 1)
#define                                 RTCPTR1_bit         _BIT_ACCESS(RTCCFG,1)
// RTCCFG<RTCSYNC>
extern volatile __bit                   RTCSYNC             __at(0x7AFC);	// @ (0xF5F * 8 + 4)
#define                                 RTCSYNC_bit         _BIT_ACCESS(RTCCFG,4)
// RTCCFG<RTCWREN>
extern volatile __bit                   RTCWREN             __at(0x7AFD);	// @ (0xF5F * 8 + 5)
#define                                 RTCWREN_bit         _BIT_ACCESS(RTCCFG,5)
// PADCFG1<RTSECSEL0>
extern volatile __bit                   RTSECSEL0           __at(0x7A99);	// @ (0xF53 * 8 + 1)
#define                                 RTSECSEL0_bit       _BIT_ACCESS(PADCFG1,1)
// PADCFG1<RTSECSEL1>
extern volatile __bit                   RTSECSEL1           __at(0x7A9A);	// @ (0xF53 * 8 + 2)
#define                                 RTSECSEL1_bit       _BIT_ACCESS(PADCFG1,2)
// SSP1STAT<RW>
extern volatile __bit                   RW                  __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 RW_bit              _BIT_ACCESS(SSP1STAT,2)
// SSP1STAT<RW1>
extern volatile __bit                   RW1                 __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 RW1_bit             _BIT_ACCESS(SSP1STAT,2)
// SSP2STAT<RW2>
extern volatile __bit                   RW2                 __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 RW2_bit             _BIT_ACCESS(SSP2STAT,2)
// PORTC<RX1>
extern volatile __bit                   RX1                 __at(0x7C17);	// @ (0xF82 * 8 + 7)
#define                                 RX1_bit             _BIT_ACCESS(PORTC,7)
// PORTG<RX2>
extern volatile __bit                   RX2                 __at(0x7C32);	// @ (0xF86 * 8 + 2)
#define                                 RX2_bit             _BIT_ACCESS(PORTG,2)
// RCSTA1<RX91>
extern volatile __bit                   RX91                __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 RX91_bit            _BIT_ACCESS(RCSTA1,6)
// RCSTA2<RX92>
extern volatile __bit                   RX92                __at(0x7916);	// @ (0xF22 * 8 + 6)
#define                                 RX92_bit            _BIT_ACCESS(RCSTA2,6)
// RCSTA1<RX9D1>
extern volatile __bit                   RX9D1               __at(0x7D58);	// @ (0xFAB * 8 + 0)
#define                                 RX9D1_bit           _BIT_ACCESS(RCSTA1,0)
// RCSTA2<RX9D2>
extern volatile __bit                   RX9D2               __at(0x7910);	// @ (0xF22 * 8 + 0)
#define                                 RX9D2_bit           _BIT_ACCESS(RCSTA2,0)
// PIE3<RXB0IE>
extern volatile __bit                   RXB0IE              __at(0x7D18);	// @ (0xFA3 * 8 + 0)
#define                                 RXB0IE_bit          _BIT_ACCESS(PIE3,0)
// PIE3<RXB1IE>
extern volatile __bit                   RXB1IE              __at(0x7D19);	// @ (0xFA3 * 8 + 1)
#define                                 RXB1IE_bit          _BIT_ACCESS(PIE3,1)
// PIE3<RXBNIE>
extern volatile __bit                   RXBNIE              __at(0x7D19);	// @ (0xFA3 * 8 + 1)
#define                                 RXBNIE_bit          _BIT_ACCESS(PIE3,1)
// PIR3<RXBNIF>
extern volatile __bit                   RXBNIF              __at(0x7D21);	// @ (0xFA4 * 8 + 1)
#define                                 RXBNIF_bit          _BIT_ACCESS(PIR3,1)
// IPR3<RXBNIP>
extern volatile __bit                   RXBNIP              __at(0x7D29);	// @ (0xFA5 * 8 + 1)
#define                                 RXBNIP_bit          _BIT_ACCESS(IPR3,1)
// BAUDCON1<RXCKP>
extern volatile __bit                   RXCKP               __at(0x7B2D);	// @ (0xF65 * 8 + 5)
#define                                 RXCKP_bit           _BIT_ACCESS(BAUDCON1,5)
// BAUDCON1<RXDTP1>
extern volatile __bit                   RXDTP1              __at(0x7B2D);	// @ (0xF65 * 8 + 5)
#define                                 RXDTP1_bit          _BIT_ACCESS(BAUDCON1,5)
// BAUDCON2<RXDTP2>
extern volatile __bit                   RXDTP2              __at(0x7905);	// @ (0xF20 * 8 + 5)
#define                                 RXDTP2_bit          _BIT_ACCESS(BAUDCON2,5)
// SSP2STAT<R_NOT_W2>
extern volatile __bit                   R_NOT_W2            __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 R_NOT_W2_bit        _BIT_ACCESS(SSP2STAT,2)
// SSP2STAT<R_W2>
extern volatile __bit                   R_W2                __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 R_W2_bit            _BIT_ACCESS(SSP2STAT,2)
// SSP2STAT<R_nW2>
extern volatile __bit                   R_nW2               __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 R_nW2_bit           _BIT_ACCESS(SSP2STAT,2)
// LCDDATA0<S00C0>
extern volatile __bit                   S00C0               __at(0x7B30);	// @ (0xF66 * 8 + 0)
#define                                 S00C0_bit           _BIT_ACCESS(LCDDATA0,0)
// LCDDATA6<S00C1>
extern volatile __bit                   S00C1               __at(0x7B60);	// @ (0xF6C * 8 + 0)
#define                                 S00C1_bit           _BIT_ACCESS(LCDDATA6,0)
// LCDDATA12<S00C2>
extern volatile __bit                   S00C2               __at(0x7B90);	// @ (0xF72 * 8 + 0)
#define                                 S00C2_bit           _BIT_ACCESS(LCDDATA12,0)
// LCDDATA18<S00C3>
extern volatile __bit                   S00C3               __at(0x7BC0);	// @ (0xF78 * 8 + 0)
#define                                 S00C3_bit           _BIT_ACCESS(LCDDATA18,0)
// LCDDATA0<S01C0>
extern volatile __bit                   S01C0               __at(0x7B31);	// @ (0xF66 * 8 + 1)
#define                                 S01C0_bit           _BIT_ACCESS(LCDDATA0,1)
// LCDDATA6<S01C1>
extern volatile __bit                   S01C1               __at(0x7B61);	// @ (0xF6C * 8 + 1)
#define                                 S01C1_bit           _BIT_ACCESS(LCDDATA6,1)
// LCDDATA12<S01C2>
extern volatile __bit                   S01C2               __at(0x7B91);	// @ (0xF72 * 8 + 1)
#define                                 S01C2_bit           _BIT_ACCESS(LCDDATA12,1)
// LCDDATA18<S01C3>
extern volatile __bit                   S01C3               __at(0x7BC1);	// @ (0xF78 * 8 + 1)
#define                                 S01C3_bit           _BIT_ACCESS(LCDDATA18,1)
// LCDDATA0<S02C0>
extern volatile __bit                   S02C0               __at(0x7B32);	// @ (0xF66 * 8 + 2)
#define                                 S02C0_bit           _BIT_ACCESS(LCDDATA0,2)
// LCDDATA6<S02C1>
extern volatile __bit                   S02C1               __at(0x7B62);	// @ (0xF6C * 8 + 2)
#define                                 S02C1_bit           _BIT_ACCESS(LCDDATA6,2)
// LCDDATA12<S02C2>
extern volatile __bit                   S02C2               __at(0x7B92);	// @ (0xF72 * 8 + 2)
#define                                 S02C2_bit           _BIT_ACCESS(LCDDATA12,2)
// LCDDATA18<S02C3>
extern volatile __bit                   S02C3               __at(0x7BC2);	// @ (0xF78 * 8 + 2)
#define                                 S02C3_bit           _BIT_ACCESS(LCDDATA18,2)
// LCDDATA0<S03C0>
extern volatile __bit                   S03C0               __at(0x7B33);	// @ (0xF66 * 8 + 3)
#define                                 S03C0_bit           _BIT_ACCESS(LCDDATA0,3)
// LCDDATA6<S03C1>
extern volatile __bit                   S03C1               __at(0x7B63);	// @ (0xF6C * 8 + 3)
#define                                 S03C1_bit           _BIT_ACCESS(LCDDATA6,3)
// LCDDATA12<S03C2>
extern volatile __bit                   S03C2               __at(0x7B93);	// @ (0xF72 * 8 + 3)
#define                                 S03C2_bit           _BIT_ACCESS(LCDDATA12,3)
// LCDDATA18<S03C3>
extern volatile __bit                   S03C3               __at(0x7BC3);	// @ (0xF78 * 8 + 3)
#define                                 S03C3_bit           _BIT_ACCESS(LCDDATA18,3)
// LCDDATA0<S04C0>
extern volatile __bit                   S04C0               __at(0x7B34);	// @ (0xF66 * 8 + 4)
#define                                 S04C0_bit           _BIT_ACCESS(LCDDATA0,4)
// LCDDATA6<S04C1>
extern volatile __bit                   S04C1               __at(0x7B64);	// @ (0xF6C * 8 + 4)
#define                                 S04C1_bit           _BIT_ACCESS(LCDDATA6,4)
// LCDDATA12<S04C2>
extern volatile __bit                   S04C2               __at(0x7B94);	// @ (0xF72 * 8 + 4)
#define                                 S04C2_bit           _BIT_ACCESS(LCDDATA12,4)
// LCDDATA18<S04C3>
extern volatile __bit                   S04C3               __at(0x7BC4);	// @ (0xF78 * 8 + 4)
#define                                 S04C3_bit           _BIT_ACCESS(LCDDATA18,4)
// LCDDATA0<S05C0>
extern volatile __bit                   S05C0               __at(0x7B35);	// @ (0xF66 * 8 + 5)
#define                                 S05C0_bit           _BIT_ACCESS(LCDDATA0,5)
// LCDDATA6<S05C1>
extern volatile __bit                   S05C1               __at(0x7B65);	// @ (0xF6C * 8 + 5)
#define                                 S05C1_bit           _BIT_ACCESS(LCDDATA6,5)
// LCDDATA12<S05C2>
extern volatile __bit                   S05C2               __at(0x7B95);	// @ (0xF72 * 8 + 5)
#define                                 S05C2_bit           _BIT_ACCESS(LCDDATA12,5)
// LCDDATA18<S05C3>
extern volatile __bit                   S05C3               __at(0x7BC5);	// @ (0xF78 * 8 + 5)
#define                                 S05C3_bit           _BIT_ACCESS(LCDDATA18,5)
// LCDDATA0<S06C0>
extern volatile __bit                   S06C0               __at(0x7B36);	// @ (0xF66 * 8 + 6)
#define                                 S06C0_bit           _BIT_ACCESS(LCDDATA0,6)
// LCDDATA6<S06C1>
extern volatile __bit                   S06C1               __at(0x7B66);	// @ (0xF6C * 8 + 6)
#define                                 S06C1_bit           _BIT_ACCESS(LCDDATA6,6)
// LCDDATA12<S06C2>
extern volatile __bit                   S06C2               __at(0x7B96);	// @ (0xF72 * 8 + 6)
#define                                 S06C2_bit           _BIT_ACCESS(LCDDATA12,6)
// LCDDATA18<S06C3>
extern volatile __bit                   S06C3               __at(0x7BC6);	// @ (0xF78 * 8 + 6)
#define                                 S06C3_bit           _BIT_ACCESS(LCDDATA18,6)
// LCDDATA0<S07C0>
extern volatile __bit                   S07C0               __at(0x7B37);	// @ (0xF66 * 8 + 7)
#define                                 S07C0_bit           _BIT_ACCESS(LCDDATA0,7)
// LCDDATA6<S07C1>
extern volatile __bit                   S07C1               __at(0x7B67);	// @ (0xF6C * 8 + 7)
#define                                 S07C1_bit           _BIT_ACCESS(LCDDATA6,7)
// LCDDATA12<S07C2>
extern volatile __bit                   S07C2               __at(0x7B97);	// @ (0xF72 * 8 + 7)
#define                                 S07C2_bit           _BIT_ACCESS(LCDDATA12,7)
// LCDDATA18<S07C3>
extern volatile __bit                   S07C3               __at(0x7BC7);	// @ (0xF78 * 8 + 7)
#define                                 S07C3_bit           _BIT_ACCESS(LCDDATA18,7)
// LCDDATA1<S08C0>
extern volatile __bit                   S08C0               __at(0x7B38);	// @ (0xF67 * 8 + 0)
#define                                 S08C0_bit           _BIT_ACCESS(LCDDATA1,0)
// LCDDATA7<S08C1>
extern volatile __bit                   S08C1               __at(0x7B68);	// @ (0xF6D * 8 + 0)
#define                                 S08C1_bit           _BIT_ACCESS(LCDDATA7,0)
// LCDDATA13<S08C2>
extern volatile __bit                   S08C2               __at(0x7B98);	// @ (0xF73 * 8 + 0)
#define                                 S08C2_bit           _BIT_ACCESS(LCDDATA13,0)
// LCDDATA19<S08C3>
extern volatile __bit                   S08C3               __at(0x7BC8);	// @ (0xF79 * 8 + 0)
#define                                 S08C3_bit           _BIT_ACCESS(LCDDATA19,0)
// LCDDATA1<S09C0>
extern volatile __bit                   S09C0               __at(0x7B39);	// @ (0xF67 * 8 + 1)
#define                                 S09C0_bit           _BIT_ACCESS(LCDDATA1,1)
// LCDDATA7<S09C1>
extern volatile __bit                   S09C1               __at(0x7B69);	// @ (0xF6D * 8 + 1)
#define                                 S09C1_bit           _BIT_ACCESS(LCDDATA7,1)
// LCDDATA13<S09C2>
extern volatile __bit                   S09C2               __at(0x7B99);	// @ (0xF73 * 8 + 1)
#define                                 S09C2_bit           _BIT_ACCESS(LCDDATA13,1)
// LCDDATA19<S09C3>
extern volatile __bit                   S09C3               __at(0x7BC9);	// @ (0xF79 * 8 + 1)
#define                                 S09C3_bit           _BIT_ACCESS(LCDDATA19,1)
// LCDDATA1<S10C0>
extern volatile __bit                   S10C0               __at(0x7B3A);	// @ (0xF67 * 8 + 2)
#define                                 S10C0_bit           _BIT_ACCESS(LCDDATA1,2)
// LCDDATA7<S10C1>
extern volatile __bit                   S10C1               __at(0x7B6A);	// @ (0xF6D * 8 + 2)
#define                                 S10C1_bit           _BIT_ACCESS(LCDDATA7,2)
// LCDDATA13<S10C2>
extern volatile __bit                   S10C2               __at(0x7B9A);	// @ (0xF73 * 8 + 2)
#define                                 S10C2_bit           _BIT_ACCESS(LCDDATA13,2)
// LCDDATA19<S10C3>
extern volatile __bit                   S10C3               __at(0x7BCA);	// @ (0xF79 * 8 + 2)
#define                                 S10C3_bit           _BIT_ACCESS(LCDDATA19,2)
// LCDDATA1<S11C0>
extern volatile __bit                   S11C0               __at(0x7B3B);	// @ (0xF67 * 8 + 3)
#define                                 S11C0_bit           _BIT_ACCESS(LCDDATA1,3)
// LCDDATA7<S11C1>
extern volatile __bit                   S11C1               __at(0x7B6B);	// @ (0xF6D * 8 + 3)
#define                                 S11C1_bit           _BIT_ACCESS(LCDDATA7,3)
// LCDDATA13<S11C2>
extern volatile __bit                   S11C2               __at(0x7B9B);	// @ (0xF73 * 8 + 3)
#define                                 S11C2_bit           _BIT_ACCESS(LCDDATA13,3)
// LCDDATA19<S11C3>
extern volatile __bit                   S11C3               __at(0x7BCB);	// @ (0xF79 * 8 + 3)
#define                                 S11C3_bit           _BIT_ACCESS(LCDDATA19,3)
// LCDDATA1<S12C0>
extern volatile __bit                   S12C0               __at(0x7B3C);	// @ (0xF67 * 8 + 4)
#define                                 S12C0_bit           _BIT_ACCESS(LCDDATA1,4)
// LCDDATA7<S12C1>
extern volatile __bit                   S12C1               __at(0x7B6C);	// @ (0xF6D * 8 + 4)
#define                                 S12C1_bit           _BIT_ACCESS(LCDDATA7,4)
// LCDDATA13<S12C2>
extern volatile __bit                   S12C2               __at(0x7B9C);	// @ (0xF73 * 8 + 4)
#define                                 S12C2_bit           _BIT_ACCESS(LCDDATA13,4)
// LCDDATA19<S12C3>
extern volatile __bit                   S12C3               __at(0x7BCC);	// @ (0xF79 * 8 + 4)
#define                                 S12C3_bit           _BIT_ACCESS(LCDDATA19,4)
// LCDDATA1<S13C0>
extern volatile __bit                   S13C0               __at(0x7B3D);	// @ (0xF67 * 8 + 5)
#define                                 S13C0_bit           _BIT_ACCESS(LCDDATA1,5)
// LCDDATA7<S13C1>
extern volatile __bit                   S13C1               __at(0x7B6D);	// @ (0xF6D * 8 + 5)
#define                                 S13C1_bit           _BIT_ACCESS(LCDDATA7,5)
// LCDDATA13<S13C2>
extern volatile __bit                   S13C2               __at(0x7B9D);	// @ (0xF73 * 8 + 5)
#define                                 S13C2_bit           _BIT_ACCESS(LCDDATA13,5)
// LCDDATA19<S13C3>
extern volatile __bit                   S13C3               __at(0x7BCD);	// @ (0xF79 * 8 + 5)
#define                                 S13C3_bit           _BIT_ACCESS(LCDDATA19,5)
// LCDDATA1<S14C0>
extern volatile __bit                   S14C0               __at(0x7B3E);	// @ (0xF67 * 8 + 6)
#define                                 S14C0_bit           _BIT_ACCESS(LCDDATA1,6)
// LCDDATA7<S14C1>
extern volatile __bit                   S14C1               __at(0x7B6E);	// @ (0xF6D * 8 + 6)
#define                                 S14C1_bit           _BIT_ACCESS(LCDDATA7,6)
// LCDDATA13<S14C2>
extern volatile __bit                   S14C2               __at(0x7B9E);	// @ (0xF73 * 8 + 6)
#define                                 S14C2_bit           _BIT_ACCESS(LCDDATA13,6)
// LCDDATA19<S14C3>
extern volatile __bit                   S14C3               __at(0x7BCE);	// @ (0xF79 * 8 + 6)
#define                                 S14C3_bit           _BIT_ACCESS(LCDDATA19,6)
// LCDDATA1<S15C0>
extern volatile __bit                   S15C0               __at(0x7B3F);	// @ (0xF67 * 8 + 7)
#define                                 S15C0_bit           _BIT_ACCESS(LCDDATA1,7)
// LCDDATA7<S15C1>
extern volatile __bit                   S15C1               __at(0x7B6F);	// @ (0xF6D * 8 + 7)
#define                                 S15C1_bit           _BIT_ACCESS(LCDDATA7,7)
// LCDDATA13<S15C2>
extern volatile __bit                   S15C2               __at(0x7B9F);	// @ (0xF73 * 8 + 7)
#define                                 S15C2_bit           _BIT_ACCESS(LCDDATA13,7)
// LCDDATA19<S15C3>
extern volatile __bit                   S15C3               __at(0x7BCF);	// @ (0xF79 * 8 + 7)
#define                                 S15C3_bit           _BIT_ACCESS(LCDDATA19,7)
// LCDDATA2<S16C0>
extern volatile __bit                   S16C0               __at(0x7B40);	// @ (0xF68 * 8 + 0)
#define                                 S16C0_bit           _BIT_ACCESS(LCDDATA2,0)
// LCDDATA8<S16C1>
extern volatile __bit                   S16C1               __at(0x7B70);	// @ (0xF6E * 8 + 0)
#define                                 S16C1_bit           _BIT_ACCESS(LCDDATA8,0)
// LCDDATA14<S16C2>
extern volatile __bit                   S16C2               __at(0x7BA0);	// @ (0xF74 * 8 + 0)
#define                                 S16C2_bit           _BIT_ACCESS(LCDDATA14,0)
// LCDDATA20<S16C3>
extern volatile __bit                   S16C3               __at(0x7BD0);	// @ (0xF7A * 8 + 0)
#define                                 S16C3_bit           _BIT_ACCESS(LCDDATA20,0)
// LCDDATA2<S17C0>
extern volatile __bit                   S17C0               __at(0x7B41);	// @ (0xF68 * 8 + 1)
#define                                 S17C0_bit           _BIT_ACCESS(LCDDATA2,1)
// LCDDATA8<S17C1>
extern volatile __bit                   S17C1               __at(0x7B71);	// @ (0xF6E * 8 + 1)
#define                                 S17C1_bit           _BIT_ACCESS(LCDDATA8,1)
// LCDDATA14<S17C2>
extern volatile __bit                   S17C2               __at(0x7BA1);	// @ (0xF74 * 8 + 1)
#define                                 S17C2_bit           _BIT_ACCESS(LCDDATA14,1)
// LCDDATA20<S17C3>
extern volatile __bit                   S17C3               __at(0x7BD1);	// @ (0xF7A * 8 + 1)
#define                                 S17C3_bit           _BIT_ACCESS(LCDDATA20,1)
// LCDDATA2<S18C0>
extern volatile __bit                   S18C0               __at(0x7B42);	// @ (0xF68 * 8 + 2)
#define                                 S18C0_bit           _BIT_ACCESS(LCDDATA2,2)
// LCDDATA8<S18C1>
extern volatile __bit                   S18C1               __at(0x7B72);	// @ (0xF6E * 8 + 2)
#define                                 S18C1_bit           _BIT_ACCESS(LCDDATA8,2)
// LCDDATA14<S18C2>
extern volatile __bit                   S18C2               __at(0x7BA2);	// @ (0xF74 * 8 + 2)
#define                                 S18C2_bit           _BIT_ACCESS(LCDDATA14,2)
// LCDDATA20<S18C3>
extern volatile __bit                   S18C3               __at(0x7BD2);	// @ (0xF7A * 8 + 2)
#define                                 S18C3_bit           _BIT_ACCESS(LCDDATA20,2)
// LCDDATA2<S19C0>
extern volatile __bit                   S19C0               __at(0x7B43);	// @ (0xF68 * 8 + 3)
#define                                 S19C0_bit           _BIT_ACCESS(LCDDATA2,3)
// LCDDATA8<S19C1>
extern volatile __bit                   S19C1               __at(0x7B73);	// @ (0xF6E * 8 + 3)
#define                                 S19C1_bit           _BIT_ACCESS(LCDDATA8,3)
// LCDDATA14<S19C2>
extern volatile __bit                   S19C2               __at(0x7BA3);	// @ (0xF74 * 8 + 3)
#define                                 S19C2_bit           _BIT_ACCESS(LCDDATA14,3)
// LCDDATA20<S19C3>
extern volatile __bit                   S19C3               __at(0x7BD3);	// @ (0xF7A * 8 + 3)
#define                                 S19C3_bit           _BIT_ACCESS(LCDDATA20,3)
// SSP2STAT<S2>
extern volatile __bit                   S2                  __at(0x7803);	// @ (0xF00 * 8 + 3)
#define                                 S2_bit              _BIT_ACCESS(SSP2STAT,3)
// LCDDATA2<S20C0>
extern volatile __bit                   S20C0               __at(0x7B44);	// @ (0xF68 * 8 + 4)
#define                                 S20C0_bit           _BIT_ACCESS(LCDDATA2,4)
// LCDDATA8<S20C1>
extern volatile __bit                   S20C1               __at(0x7B74);	// @ (0xF6E * 8 + 4)
#define                                 S20C1_bit           _BIT_ACCESS(LCDDATA8,4)
// LCDDATA14<S20C2>
extern volatile __bit                   S20C2               __at(0x7BA4);	// @ (0xF74 * 8 + 4)
#define                                 S20C2_bit           _BIT_ACCESS(LCDDATA14,4)
// LCDDATA20<S20C3>
extern volatile __bit                   S20C3               __at(0x7BD4);	// @ (0xF7A * 8 + 4)
#define                                 S20C3_bit           _BIT_ACCESS(LCDDATA20,4)
// LCDDATA2<S21C0>
extern volatile __bit                   S21C0               __at(0x7B45);	// @ (0xF68 * 8 + 5)
#define                                 S21C0_bit           _BIT_ACCESS(LCDDATA2,5)
// LCDDATA8<S21C1>
extern volatile __bit                   S21C1               __at(0x7B75);	// @ (0xF6E * 8 + 5)
#define                                 S21C1_bit           _BIT_ACCESS(LCDDATA8,5)
// LCDDATA14<S21C2>
extern volatile __bit                   S21C2               __at(0x7BA5);	// @ (0xF74 * 8 + 5)
#define                                 S21C2_bit           _BIT_ACCESS(LCDDATA14,5)
// LCDDATA20<S21C3>
extern volatile __bit                   S21C3               __at(0x7BD5);	// @ (0xF7A * 8 + 5)
#define                                 S21C3_bit           _BIT_ACCESS(LCDDATA20,5)
// LCDDATA2<S22C0>
extern volatile __bit                   S22C0               __at(0x7B46);	// @ (0xF68 * 8 + 6)
#define                                 S22C0_bit           _BIT_ACCESS(LCDDATA2,6)
// LCDDATA8<S22C1>
extern volatile __bit                   S22C1               __at(0x7B76);	// @ (0xF6E * 8 + 6)
#define                                 S22C1_bit           _BIT_ACCESS(LCDDATA8,6)
// LCDDATA14<S22C2>
extern volatile __bit                   S22C2               __at(0x7BA6);	// @ (0xF74 * 8 + 6)
#define                                 S22C2_bit           _BIT_ACCESS(LCDDATA14,6)
// LCDDATA20<S22C3>
extern volatile __bit                   S22C3               __at(0x7BD6);	// @ (0xF7A * 8 + 6)
#define                                 S22C3_bit           _BIT_ACCESS(LCDDATA20,6)
// LCDDATA2<S23C0>
extern volatile __bit                   S23C0               __at(0x7B47);	// @ (0xF68 * 8 + 7)
#define                                 S23C0_bit           _BIT_ACCESS(LCDDATA2,7)
// LCDDATA8<S23C1>
extern volatile __bit                   S23C1               __at(0x7B77);	// @ (0xF6E * 8 + 7)
#define                                 S23C1_bit           _BIT_ACCESS(LCDDATA8,7)
// LCDDATA14<S23C2>
extern volatile __bit                   S23C2               __at(0x7BA7);	// @ (0xF74 * 8 + 7)
#define                                 S23C2_bit           _BIT_ACCESS(LCDDATA14,7)
// LCDDATA20<S23C3>
extern volatile __bit                   S23C3               __at(0x7BD7);	// @ (0xF7A * 8 + 7)
#define                                 S23C3_bit           _BIT_ACCESS(LCDDATA20,7)
// LCDDATA3<S24C0>
extern volatile __bit                   S24C0               __at(0x7B48);	// @ (0xF69 * 8 + 0)
#define                                 S24C0_bit           _BIT_ACCESS(LCDDATA3,0)
// LCDDATA9<S24C1>
extern volatile __bit                   S24C1               __at(0x7B78);	// @ (0xF6F * 8 + 0)
#define                                 S24C1_bit           _BIT_ACCESS(LCDDATA9,0)
// LCDDATA15<S24C2>
extern volatile __bit                   S24C2               __at(0x7BA8);	// @ (0xF75 * 8 + 0)
#define                                 S24C2_bit           _BIT_ACCESS(LCDDATA15,0)
// LCDDATA21<S24C3>
extern volatile __bit                   S24C3               __at(0x7BD8);	// @ (0xF7B * 8 + 0)
#define                                 S24C3_bit           _BIT_ACCESS(LCDDATA21,0)
// LCDDATA3<S25C0>
extern volatile __bit                   S25C0               __at(0x7B49);	// @ (0xF69 * 8 + 1)
#define                                 S25C0_bit           _BIT_ACCESS(LCDDATA3,1)
// LCDDATA9<S25C1>
extern volatile __bit                   S25C1               __at(0x7B79);	// @ (0xF6F * 8 + 1)
#define                                 S25C1_bit           _BIT_ACCESS(LCDDATA9,1)
// LCDDATA15<S25C2>
extern volatile __bit                   S25C2               __at(0x7BA9);	// @ (0xF75 * 8 + 1)
#define                                 S25C2_bit           _BIT_ACCESS(LCDDATA15,1)
// LCDDATA21<S25C3>
extern volatile __bit                   S25C3               __at(0x7BD9);	// @ (0xF7B * 8 + 1)
#define                                 S25C3_bit           _BIT_ACCESS(LCDDATA21,1)
// LCDDATA3<S26C0>
extern volatile __bit                   S26C0               __at(0x7B4A);	// @ (0xF69 * 8 + 2)
#define                                 S26C0_bit           _BIT_ACCESS(LCDDATA3,2)
// LCDDATA9<S26C1>
extern volatile __bit                   S26C1               __at(0x7B7A);	// @ (0xF6F * 8 + 2)
#define                                 S26C1_bit           _BIT_ACCESS(LCDDATA9,2)
// LCDDATA15<S26C2>
extern volatile __bit                   S26C2               __at(0x7BAA);	// @ (0xF75 * 8 + 2)
#define                                 S26C2_bit           _BIT_ACCESS(LCDDATA15,2)
// LCDDATA21<S26C3>
extern volatile __bit                   S26C3               __at(0x7BDA);	// @ (0xF7B * 8 + 2)
#define                                 S26C3_bit           _BIT_ACCESS(LCDDATA21,2)
// LCDDATA3<S27C0>
extern volatile __bit                   S27C0               __at(0x7B4B);	// @ (0xF69 * 8 + 3)
#define                                 S27C0_bit           _BIT_ACCESS(LCDDATA3,3)
// LCDDATA9<S27C1>
extern volatile __bit                   S27C1               __at(0x7B7B);	// @ (0xF6F * 8 + 3)
#define                                 S27C1_bit           _BIT_ACCESS(LCDDATA9,3)
// LCDDATA15<S27C2>
extern volatile __bit                   S27C2               __at(0x7BAB);	// @ (0xF75 * 8 + 3)
#define                                 S27C2_bit           _BIT_ACCESS(LCDDATA15,3)
// LCDDATA21<S27C3>
extern volatile __bit                   S27C3               __at(0x7BDB);	// @ (0xF7B * 8 + 3)
#define                                 S27C3_bit           _BIT_ACCESS(LCDDATA21,3)
// LCDDATA3<S28C0>
extern volatile __bit                   S28C0               __at(0x7B4C);	// @ (0xF69 * 8 + 4)
#define                                 S28C0_bit           _BIT_ACCESS(LCDDATA3,4)
// LCDDATA9<S28C1>
extern volatile __bit                   S28C1               __at(0x7B7C);	// @ (0xF6F * 8 + 4)
#define                                 S28C1_bit           _BIT_ACCESS(LCDDATA9,4)
// LCDDATA15<S28C2>
extern volatile __bit                   S28C2               __at(0x7BAC);	// @ (0xF75 * 8 + 4)
#define                                 S28C2_bit           _BIT_ACCESS(LCDDATA15,4)
// LCDDATA21<S28C3>
extern volatile __bit                   S28C3               __at(0x7BDC);	// @ (0xF7B * 8 + 4)
#define                                 S28C3_bit           _BIT_ACCESS(LCDDATA21,4)
// LCDDATA3<S29C0>
extern volatile __bit                   S29C0               __at(0x7B4D);	// @ (0xF69 * 8 + 5)
#define                                 S29C0_bit           _BIT_ACCESS(LCDDATA3,5)
// LCDDATA9<S29C1>
extern volatile __bit                   S29C1               __at(0x7B7D);	// @ (0xF6F * 8 + 5)
#define                                 S29C1_bit           _BIT_ACCESS(LCDDATA9,5)
// LCDDATA15<S29C2>
extern volatile __bit                   S29C2               __at(0x7BAD);	// @ (0xF75 * 8 + 5)
#define                                 S29C2_bit           _BIT_ACCESS(LCDDATA15,5)
// LCDDATA21<S29C3>
extern volatile __bit                   S29C3               __at(0x7BDD);	// @ (0xF7B * 8 + 5)
#define                                 S29C3_bit           _BIT_ACCESS(LCDDATA21,5)
// LCDDATA3<S30C0>
extern volatile __bit                   S30C0               __at(0x7B4E);	// @ (0xF69 * 8 + 6)
#define                                 S30C0_bit           _BIT_ACCESS(LCDDATA3,6)
// LCDDATA9<S30C1>
extern volatile __bit                   S30C1               __at(0x7B7E);	// @ (0xF6F * 8 + 6)
#define                                 S30C1_bit           _BIT_ACCESS(LCDDATA9,6)
// LCDDATA15<S30C2>
extern volatile __bit                   S30C2               __at(0x7BAE);	// @ (0xF75 * 8 + 6)
#define                                 S30C2_bit           _BIT_ACCESS(LCDDATA15,6)
// LCDDATA21<S30C3>
extern volatile __bit                   S30C3               __at(0x7BDE);	// @ (0xF7B * 8 + 6)
#define                                 S30C3_bit           _BIT_ACCESS(LCDDATA21,6)
// LCDDATA3<S31C0>
extern volatile __bit                   S31C0               __at(0x7B4F);	// @ (0xF69 * 8 + 7)
#define                                 S31C0_bit           _BIT_ACCESS(LCDDATA3,7)
// LCDDATA9<S31C1>
extern volatile __bit                   S31C1               __at(0x7B7F);	// @ (0xF6F * 8 + 7)
#define                                 S31C1_bit           _BIT_ACCESS(LCDDATA9,7)
// LCDDATA15<S31C2>
extern volatile __bit                   S31C2               __at(0x7BAF);	// @ (0xF75 * 8 + 7)
#define                                 S31C2_bit           _BIT_ACCESS(LCDDATA15,7)
// LCDDATA21<S31C3>
extern volatile __bit                   S31C3               __at(0x7BDF);	// @ (0xF7B * 8 + 7)
#define                                 S31C3_bit           _BIT_ACCESS(LCDDATA21,7)
// LCDDATA4<S32C0>
extern volatile __bit                   S32C0               __at(0x7B50);	// @ (0xF6A * 8 + 0)
#define                                 S32C0_bit           _BIT_ACCESS(LCDDATA4,0)
// LCDDATA10<S32C1>
extern volatile __bit                   S32C1               __at(0x7B80);	// @ (0xF70 * 8 + 0)
#define                                 S32C1_bit           _BIT_ACCESS(LCDDATA10,0)
// LCDDATA16<S32C2>
extern volatile __bit                   S32C2               __at(0x7BB0);	// @ (0xF76 * 8 + 0)
#define                                 S32C2_bit           _BIT_ACCESS(LCDDATA16,0)
// LCDDATA22<S32C3>
extern volatile __bit                   S32C3               __at(0x7BE0);	// @ (0xF7C * 8 + 0)
#define                                 S32C3_bit           _BIT_ACCESS(LCDDATA22,0)
// LCDDATA4<S33C0>
extern volatile __bit                   S33C0               __at(0x7B51);	// @ (0xF6A * 8 + 1)
#define                                 S33C0_bit           _BIT_ACCESS(LCDDATA4,1)
// LCDDATA10<S33C1>
extern volatile __bit                   S33C1               __at(0x7B81);	// @ (0xF70 * 8 + 1)
#define                                 S33C1_bit           _BIT_ACCESS(LCDDATA10,1)
// LCDDATA16<S33C2>
extern volatile __bit                   S33C2               __at(0x7BB1);	// @ (0xF76 * 8 + 1)
#define                                 S33C2_bit           _BIT_ACCESS(LCDDATA16,1)
// LCDDATA22<S33C3>
extern volatile __bit                   S33C3               __at(0x7BE1);	// @ (0xF7C * 8 + 1)
#define                                 S33C3_bit           _BIT_ACCESS(LCDDATA22,1)
// LCDDATA4<S34C0>
extern volatile __bit                   S34C0               __at(0x7B52);	// @ (0xF6A * 8 + 2)
#define                                 S34C0_bit           _BIT_ACCESS(LCDDATA4,2)
// LCDDATA10<S34C1>
extern volatile __bit                   S34C1               __at(0x7B82);	// @ (0xF70 * 8 + 2)
#define                                 S34C1_bit           _BIT_ACCESS(LCDDATA10,2)
// LCDDATA16<S34C2>
extern volatile __bit                   S34C2               __at(0x7BB2);	// @ (0xF76 * 8 + 2)
#define                                 S34C2_bit           _BIT_ACCESS(LCDDATA16,2)
// LCDDATA22<S34C3>
extern volatile __bit                   S34C3               __at(0x7BE2);	// @ (0xF7C * 8 + 2)
#define                                 S34C3_bit           _BIT_ACCESS(LCDDATA22,2)
// LCDDATA4<S35C0>
extern volatile __bit                   S35C0               __at(0x7B53);	// @ (0xF6A * 8 + 3)
#define                                 S35C0_bit           _BIT_ACCESS(LCDDATA4,3)
// LCDDATA10<S35C1>
extern volatile __bit                   S35C1               __at(0x7B83);	// @ (0xF70 * 8 + 3)
#define                                 S35C1_bit           _BIT_ACCESS(LCDDATA10,3)
// LCDDATA16<S35C2>
extern volatile __bit                   S35C2               __at(0x7BB3);	// @ (0xF76 * 8 + 3)
#define                                 S35C2_bit           _BIT_ACCESS(LCDDATA16,3)
// LCDDATA22<S35C3>
extern volatile __bit                   S35C3               __at(0x7BE3);	// @ (0xF7C * 8 + 3)
#define                                 S35C3_bit           _BIT_ACCESS(LCDDATA22,3)
// LCDDATA4<S36C0>
extern volatile __bit                   S36C0               __at(0x7B54);	// @ (0xF6A * 8 + 4)
#define                                 S36C0_bit           _BIT_ACCESS(LCDDATA4,4)
// LCDDATA10<S36C1>
extern volatile __bit                   S36C1               __at(0x7B84);	// @ (0xF70 * 8 + 4)
#define                                 S36C1_bit           _BIT_ACCESS(LCDDATA10,4)
// LCDDATA16<S36C2>
extern volatile __bit                   S36C2               __at(0x7BB4);	// @ (0xF76 * 8 + 4)
#define                                 S36C2_bit           _BIT_ACCESS(LCDDATA16,4)
// LCDDATA22<S36C3>
extern volatile __bit                   S36C3               __at(0x7BE4);	// @ (0xF7C * 8 + 4)
#define                                 S36C3_bit           _BIT_ACCESS(LCDDATA22,4)
// LCDDATA4<S37C0>
extern volatile __bit                   S37C0               __at(0x7B55);	// @ (0xF6A * 8 + 5)
#define                                 S37C0_bit           _BIT_ACCESS(LCDDATA4,5)
// LCDDATA10<S37C1>
extern volatile __bit                   S37C1               __at(0x7B85);	// @ (0xF70 * 8 + 5)
#define                                 S37C1_bit           _BIT_ACCESS(LCDDATA10,5)
// LCDDATA16<S37C2>
extern volatile __bit                   S37C2               __at(0x7BB5);	// @ (0xF76 * 8 + 5)
#define                                 S37C2_bit           _BIT_ACCESS(LCDDATA16,5)
// LCDDATA22<S37C3>
extern volatile __bit                   S37C3               __at(0x7BE5);	// @ (0xF7C * 8 + 5)
#define                                 S37C3_bit           _BIT_ACCESS(LCDDATA22,5)
// LCDDATA4<S38C0>
extern volatile __bit                   S38C0               __at(0x7B56);	// @ (0xF6A * 8 + 6)
#define                                 S38C0_bit           _BIT_ACCESS(LCDDATA4,6)
// LCDDATA10<S38C1>
extern volatile __bit                   S38C1               __at(0x7B86);	// @ (0xF70 * 8 + 6)
#define                                 S38C1_bit           _BIT_ACCESS(LCDDATA10,6)
// LCDDATA16<S38C2>
extern volatile __bit                   S38C2               __at(0x7BB6);	// @ (0xF76 * 8 + 6)
#define                                 S38C2_bit           _BIT_ACCESS(LCDDATA16,6)
// LCDDATA22<S38C3>
extern volatile __bit                   S38C3               __at(0x7BE6);	// @ (0xF7C * 8 + 6)
#define                                 S38C3_bit           _BIT_ACCESS(LCDDATA22,6)
// LCDDATA4<S39C0>
extern volatile __bit                   S39C0               __at(0x7B57);	// @ (0xF6A * 8 + 7)
#define                                 S39C0_bit           _BIT_ACCESS(LCDDATA4,7)
// LCDDATA10<S39C1>
extern volatile __bit                   S39C1               __at(0x7B87);	// @ (0xF70 * 8 + 7)
#define                                 S39C1_bit           _BIT_ACCESS(LCDDATA10,7)
// LCDDATA16<S39C2>
extern volatile __bit                   S39C2               __at(0x7BB7);	// @ (0xF76 * 8 + 7)
#define                                 S39C2_bit           _BIT_ACCESS(LCDDATA16,7)
// LCDDATA22<S39C3>
extern volatile __bit                   S39C3               __at(0x7BE7);	// @ (0xF7C * 8 + 7)
#define                                 S39C3_bit           _BIT_ACCESS(LCDDATA22,7)
// LCDDATA5<S40C0>
extern volatile __bit                   S40C0               __at(0x7B58);	// @ (0xF6B * 8 + 0)
#define                                 S40C0_bit           _BIT_ACCESS(LCDDATA5,0)
// LCDDATA11<S40C1>
extern volatile __bit                   S40C1               __at(0x7B88);	// @ (0xF71 * 8 + 0)
#define                                 S40C1_bit           _BIT_ACCESS(LCDDATA11,0)
// LCDDATA5<S40C15>
extern volatile __bit                   S40C15              __at(0x7B58);	// @ (0xF6B * 8 + 0)
#define                                 S40C15_bit          _BIT_ACCESS(LCDDATA5,0)
// LCDDATA17<S40C2>
extern volatile __bit                   S40C2               __at(0x7BB8);	// @ (0xF77 * 8 + 0)
#define                                 S40C2_bit           _BIT_ACCESS(LCDDATA17,0)
// LCDDATA23<S40C3>
extern volatile __bit                   S40C3               __at(0x7BE8);	// @ (0xF7D * 8 + 0)
#define                                 S40C3_bit           _BIT_ACCESS(LCDDATA23,0)
// LCDDATA5<S41C0>
extern volatile __bit                   S41C0               __at(0x7B59);	// @ (0xF6B * 8 + 1)
#define                                 S41C0_bit           _BIT_ACCESS(LCDDATA5,1)
// LCDDATA11<S41C1>
extern volatile __bit                   S41C1               __at(0x7B89);	// @ (0xF71 * 8 + 1)
#define                                 S41C1_bit           _BIT_ACCESS(LCDDATA11,1)
// LCDDATA17<S41C2>
extern volatile __bit                   S41C2               __at(0x7BB9);	// @ (0xF77 * 8 + 1)
#define                                 S41C2_bit           _BIT_ACCESS(LCDDATA17,1)
// LCDDATA23<S41C3>
extern volatile __bit                   S41C3               __at(0x7BE9);	// @ (0xF7D * 8 + 1)
#define                                 S41C3_bit           _BIT_ACCESS(LCDDATA23,1)
// LCDDATA5<S42C0>
extern volatile __bit                   S42C0               __at(0x7B5A);	// @ (0xF6B * 8 + 2)
#define                                 S42C0_bit           _BIT_ACCESS(LCDDATA5,2)
// LCDDATA11<S42C1>
extern volatile __bit                   S42C1               __at(0x7B8A);	// @ (0xF71 * 8 + 2)
#define                                 S42C1_bit           _BIT_ACCESS(LCDDATA11,2)
// LCDDATA17<S42C2>
extern volatile __bit                   S42C2               __at(0x7BBA);	// @ (0xF77 * 8 + 2)
#define                                 S42C2_bit           _BIT_ACCESS(LCDDATA17,2)
// LCDDATA23<S42C3>
extern volatile __bit                   S42C3               __at(0x7BEA);	// @ (0xF7D * 8 + 2)
#define                                 S42C3_bit           _BIT_ACCESS(LCDDATA23,2)
// LCDDATA5<S43C0>
extern volatile __bit                   S43C0               __at(0x7B5B);	// @ (0xF6B * 8 + 3)
#define                                 S43C0_bit           _BIT_ACCESS(LCDDATA5,3)
// LCDDATA11<S43C1>
extern volatile __bit                   S43C1               __at(0x7B8B);	// @ (0xF71 * 8 + 3)
#define                                 S43C1_bit           _BIT_ACCESS(LCDDATA11,3)
// LCDDATA17<S43C2>
extern volatile __bit                   S43C2               __at(0x7BBB);	// @ (0xF77 * 8 + 3)
#define                                 S43C2_bit           _BIT_ACCESS(LCDDATA17,3)
// LCDDATA23<S43C3>
extern volatile __bit                   S43C3               __at(0x7BEB);	// @ (0xF7D * 8 + 3)
#define                                 S43C3_bit           _BIT_ACCESS(LCDDATA23,3)
// LCDDATA5<S44C0>
extern volatile __bit                   S44C0               __at(0x7B5C);	// @ (0xF6B * 8 + 4)
#define                                 S44C0_bit           _BIT_ACCESS(LCDDATA5,4)
// LCDDATA11<S44C1>
extern volatile __bit                   S44C1               __at(0x7B8C);	// @ (0xF71 * 8 + 4)
#define                                 S44C1_bit           _BIT_ACCESS(LCDDATA11,4)
// LCDDATA17<S44C2>
extern volatile __bit                   S44C2               __at(0x7BBC);	// @ (0xF77 * 8 + 4)
#define                                 S44C2_bit           _BIT_ACCESS(LCDDATA17,4)
// LCDDATA23<S44C3>
extern volatile __bit                   S44C3               __at(0x7BEC);	// @ (0xF7D * 8 + 4)
#define                                 S44C3_bit           _BIT_ACCESS(LCDDATA23,4)
// LCDDATA5<S45C0>
extern volatile __bit                   S45C0               __at(0x7B5D);	// @ (0xF6B * 8 + 5)
#define                                 S45C0_bit           _BIT_ACCESS(LCDDATA5,5)
// LCDDATA11<S45C1>
extern volatile __bit                   S45C1               __at(0x7B8D);	// @ (0xF71 * 8 + 5)
#define                                 S45C1_bit           _BIT_ACCESS(LCDDATA11,5)
// LCDDATA17<S45C2>
extern volatile __bit                   S45C2               __at(0x7BBD);	// @ (0xF77 * 8 + 5)
#define                                 S45C2_bit           _BIT_ACCESS(LCDDATA17,5)
// LCDDATA23<S45C3>
extern volatile __bit                   S45C3               __at(0x7BED);	// @ (0xF7D * 8 + 5)
#define                                 S45C3_bit           _BIT_ACCESS(LCDDATA23,5)
// LCDDATA5<S46C0>
extern volatile __bit                   S46C0               __at(0x7B5E);	// @ (0xF6B * 8 + 6)
#define                                 S46C0_bit           _BIT_ACCESS(LCDDATA5,6)
// LCDDATA11<S46C1>
extern volatile __bit                   S46C1               __at(0x7B8E);	// @ (0xF71 * 8 + 6)
#define                                 S46C1_bit           _BIT_ACCESS(LCDDATA11,6)
// LCDDATA17<S46C2>
extern volatile __bit                   S46C2               __at(0x7BBE);	// @ (0xF77 * 8 + 6)
#define                                 S46C2_bit           _BIT_ACCESS(LCDDATA17,6)
// LCDDATA23<S46C3>
extern volatile __bit                   S46C3               __at(0x7BEE);	// @ (0xF7D * 8 + 6)
#define                                 S46C3_bit           _BIT_ACCESS(LCDDATA23,6)
// LCDDATA5<S47C0>
extern volatile __bit                   S47C0               __at(0x7B5F);	// @ (0xF6B * 8 + 7)
#define                                 S47C0_bit           _BIT_ACCESS(LCDDATA5,7)
// LCDDATA11<S47C1>
extern volatile __bit                   S47C1               __at(0x7B8F);	// @ (0xF71 * 8 + 7)
#define                                 S47C1_bit           _BIT_ACCESS(LCDDATA11,7)
// LCDDATA17<S47C2>
extern volatile __bit                   S47C2               __at(0x7BBF);	// @ (0xF77 * 8 + 7)
#define                                 S47C2_bit           _BIT_ACCESS(LCDDATA17,7)
// LCDDATA23<S47C3>
extern volatile __bit                   S47C3               __at(0x7BEF);	// @ (0xF7D * 8 + 7)
#define                                 S47C3_bit           _BIT_ACCESS(LCDDATA23,7)
// RCON<SBOREN>
extern volatile __bit                   SBOREN              __at(0x7E86);	// @ (0xFD0 * 8 + 6)
#define                                 SBOREN_bit          _BIT_ACCESS(RCON,6)
// PORTC<SCK1>
extern volatile __bit                   SCK1                __at(0x7C13);	// @ (0xF82 * 8 + 3)
#define                                 SCK1_bit            _BIT_ACCESS(PORTC,3)
// PORTD<SCK2>
extern volatile __bit                   SCK2                __at(0x7C1E);	// @ (0xF83 * 8 + 6)
#define                                 SCK2_bit            _BIT_ACCESS(PORTD,6)
// PORTC<SCKLI>
extern volatile __bit                   SCKLI               __at(0x7C10);	// @ (0xF82 * 8 + 0)
#define                                 SCKLI_bit           _BIT_ACCESS(PORTC,0)
// BAUDCON1<SCKP>
extern volatile __bit                   SCKP                __at(0x7B2C);	// @ (0xF65 * 8 + 4)
#define                                 SCKP_bit            _BIT_ACCESS(BAUDCON1,4)
// BAUDCON1<SCKP1>
extern volatile __bit                   SCKP1               __at(0x7B2C);	// @ (0xF65 * 8 + 4)
#define                                 SCKP1_bit           _BIT_ACCESS(BAUDCON1,4)
// BAUDCON2<SCKP2>
extern volatile __bit                   SCKP2               __at(0x7904);	// @ (0xF20 * 8 + 4)
#define                                 SCKP2_bit           _BIT_ACCESS(BAUDCON2,4)
// PORTC<SCL1>
extern volatile __bit                   SCL1                __at(0x7C13);	// @ (0xF82 * 8 + 3)
#define                                 SCL1_bit            _BIT_ACCESS(PORTC,3)
// PORTD<SCL2>
extern volatile __bit                   SCL2                __at(0x7C1E);	// @ (0xF83 * 8 + 6)
#define                                 SCL2_bit            _BIT_ACCESS(PORTD,6)
// OSCCON<SCS0>
extern volatile __bit                   SCS0                __at(0x7E98);	// @ (0xFD3 * 8 + 0)
#define                                 SCS0_bit            _BIT_ACCESS(OSCCON,0)
// OSCCON<SCS1>
extern volatile __bit                   SCS1                __at(0x7E99);	// @ (0xFD3 * 8 + 1)
#define                                 SCS1_bit            _BIT_ACCESS(OSCCON,1)
// PORTC<SDA1>
extern volatile __bit                   SDA1                __at(0x7C14);	// @ (0xF82 * 8 + 4)
#define                                 SDA1_bit            _BIT_ACCESS(PORTC,4)
// PORTD<SDA2>
extern volatile __bit                   SDA2                __at(0x7C1D);	// @ (0xF83 * 8 + 5)
#define                                 SDA2_bit            _BIT_ACCESS(PORTD,5)
// PORTC<SDI1>
extern volatile __bit                   SDI1                __at(0x7C14);	// @ (0xF82 * 8 + 4)
#define                                 SDI1_bit            _BIT_ACCESS(PORTC,4)
// PORTD<SDI2>
extern volatile __bit                   SDI2                __at(0x7C1D);	// @ (0xF83 * 8 + 5)
#define                                 SDI2_bit            _BIT_ACCESS(PORTD,5)
// PORTC<SDO1>
extern volatile __bit                   SDO1                __at(0x7C15);	// @ (0xF82 * 8 + 5)
#define                                 SDO1_bit            _BIT_ACCESS(PORTC,5)
// PORTD<SDO2>
extern volatile __bit                   SDO2                __at(0x7C1C);	// @ (0xF83 * 8 + 4)
#define                                 SDO2_bit            _BIT_ACCESS(PORTD,4)
// LCDSE0<SE00>
extern volatile __bit                   SE00                __at(0x77B0);	// @ (0xEF6 * 8 + 0)
#define                                 SE00_bit            _BIT_ACCESS(LCDSE0,0)
// LCDSE0<SE01>
extern volatile __bit                   SE01                __at(0x77B1);	// @ (0xEF6 * 8 + 1)
#define                                 SE01_bit            _BIT_ACCESS(LCDSE0,1)
// LCDSE0<SE02>
extern volatile __bit                   SE02                __at(0x77B2);	// @ (0xEF6 * 8 + 2)
#define                                 SE02_bit            _BIT_ACCESS(LCDSE0,2)
// LCDSE0<SE03>
extern volatile __bit                   SE03                __at(0x77B3);	// @ (0xEF6 * 8 + 3)
#define                                 SE03_bit            _BIT_ACCESS(LCDSE0,3)
// LCDSE0<SE04>
extern volatile __bit                   SE04                __at(0x77B4);	// @ (0xEF6 * 8 + 4)
#define                                 SE04_bit            _BIT_ACCESS(LCDSE0,4)
// LCDSE0<SE05>
extern volatile __bit                   SE05                __at(0x77B5);	// @ (0xEF6 * 8 + 5)
#define                                 SE05_bit            _BIT_ACCESS(LCDSE0,5)
// LCDSE0<SE06>
extern volatile __bit                   SE06                __at(0x77B6);	// @ (0xEF6 * 8 + 6)
#define                                 SE06_bit            _BIT_ACCESS(LCDSE0,6)
// LCDSE0<SE07>
extern volatile __bit                   SE07                __at(0x77B7);	// @ (0xEF6 * 8 + 7)
#define                                 SE07_bit            _BIT_ACCESS(LCDSE0,7)
// LCDSE1<SE08>
extern volatile __bit                   SE08                __at(0x77B8);	// @ (0xEF7 * 8 + 0)
#define                                 SE08_bit            _BIT_ACCESS(LCDSE1,0)
// LCDSE1<SE09>
extern volatile __bit                   SE09                __at(0x77B9);	// @ (0xEF7 * 8 + 1)
#define                                 SE09_bit            _BIT_ACCESS(LCDSE1,1)
// LCDSE1<SE10>
extern volatile __bit                   SE10                __at(0x77BA);	// @ (0xEF7 * 8 + 2)
#define                                 SE10_bit            _BIT_ACCESS(LCDSE1,2)
// LCDSE1<SE11>
extern volatile __bit                   SE11                __at(0x77BB);	// @ (0xEF7 * 8 + 3)
#define                                 SE11_bit            _BIT_ACCESS(LCDSE1,3)
// LCDSE1<SE12>
extern volatile __bit                   SE12                __at(0x77BC);	// @ (0xEF7 * 8 + 4)
#define                                 SE12_bit            _BIT_ACCESS(LCDSE1,4)
// LCDSE1<SE13>
extern volatile __bit                   SE13                __at(0x77BD);	// @ (0xEF7 * 8 + 5)
#define                                 SE13_bit            _BIT_ACCESS(LCDSE1,5)
// LCDSE1<SE14>
extern volatile __bit                   SE14                __at(0x77BE);	// @ (0xEF7 * 8 + 6)
#define                                 SE14_bit            _BIT_ACCESS(LCDSE1,6)
// LCDSE1<SE15>
extern volatile __bit                   SE15                __at(0x77BF);	// @ (0xEF7 * 8 + 7)
#define                                 SE15_bit            _BIT_ACCESS(LCDSE1,7)
// LCDSE2<SE16>
extern volatile __bit                   SE16                __at(0x77C0);	// @ (0xEF8 * 8 + 0)
#define                                 SE16_bit            _BIT_ACCESS(LCDSE2,0)
// LCDSE2<SE17>
extern volatile __bit                   SE17                __at(0x77C1);	// @ (0xEF8 * 8 + 1)
#define                                 SE17_bit            _BIT_ACCESS(LCDSE2,1)
// LCDSE2<SE18>
extern volatile __bit                   SE18                __at(0x77C2);	// @ (0xEF8 * 8 + 2)
#define                                 SE18_bit            _BIT_ACCESS(LCDSE2,2)
// LCDSE2<SE19>
extern volatile __bit                   SE19                __at(0x77C3);	// @ (0xEF8 * 8 + 3)
#define                                 SE19_bit            _BIT_ACCESS(LCDSE2,3)
// LCDSE2<SE20>
extern volatile __bit                   SE20                __at(0x77C4);	// @ (0xEF8 * 8 + 4)
#define                                 SE20_bit            _BIT_ACCESS(LCDSE2,4)
// LCDSE2<SE21>
extern volatile __bit                   SE21                __at(0x77C5);	// @ (0xEF8 * 8 + 5)
#define                                 SE21_bit            _BIT_ACCESS(LCDSE2,5)
// LCDSE2<SE22>
extern volatile __bit                   SE22                __at(0x77C6);	// @ (0xEF8 * 8 + 6)
#define                                 SE22_bit            _BIT_ACCESS(LCDSE2,6)
// LCDSE2<SE23>
extern volatile __bit                   SE23                __at(0x77C7);	// @ (0xEF8 * 8 + 7)
#define                                 SE23_bit            _BIT_ACCESS(LCDSE2,7)
// LCDSE3<SE24>
extern volatile __bit                   SE24                __at(0x77C8);	// @ (0xEF9 * 8 + 0)
#define                                 SE24_bit            _BIT_ACCESS(LCDSE3,0)
// LCDSE3<SE25>
extern volatile __bit                   SE25                __at(0x77C9);	// @ (0xEF9 * 8 + 1)
#define                                 SE25_bit            _BIT_ACCESS(LCDSE3,1)
// LCDSE3<SE26>
extern volatile __bit                   SE26                __at(0x77CA);	// @ (0xEF9 * 8 + 2)
#define                                 SE26_bit            _BIT_ACCESS(LCDSE3,2)
// LCDSE3<SE27>
extern volatile __bit                   SE27                __at(0x77CB);	// @ (0xEF9 * 8 + 3)
#define                                 SE27_bit            _BIT_ACCESS(LCDSE3,3)
// LCDSE3<SE28>
extern volatile __bit                   SE28                __at(0x77CC);	// @ (0xEF9 * 8 + 4)
#define                                 SE28_bit            _BIT_ACCESS(LCDSE3,4)
// LCDSE3<SE29>
extern volatile __bit                   SE29                __at(0x77CD);	// @ (0xEF9 * 8 + 5)
#define                                 SE29_bit            _BIT_ACCESS(LCDSE3,5)
// LCDSE3<SE30>
extern volatile __bit                   SE30                __at(0x77CE);	// @ (0xEF9 * 8 + 6)
#define                                 SE30_bit            _BIT_ACCESS(LCDSE3,6)
// LCDSE3<SE31>
extern volatile __bit                   SE31                __at(0x77CF);	// @ (0xEF9 * 8 + 7)
#define                                 SE31_bit            _BIT_ACCESS(LCDSE3,7)
// LCDSE4<SE32>
extern volatile __bit                   SE32                __at(0x77D0);	// @ (0xEFA * 8 + 0)
#define                                 SE32_bit            _BIT_ACCESS(LCDSE4,0)
// LCDSE4<SE33>
extern volatile __bit                   SE33                __at(0x77D1);	// @ (0xEFA * 8 + 1)
#define                                 SE33_bit            _BIT_ACCESS(LCDSE4,1)
// LCDSE4<SE34>
extern volatile __bit                   SE34                __at(0x77D2);	// @ (0xEFA * 8 + 2)
#define                                 SE34_bit            _BIT_ACCESS(LCDSE4,2)
// LCDSE4<SE35>
extern volatile __bit                   SE35                __at(0x77D3);	// @ (0xEFA * 8 + 3)
#define                                 SE35_bit            _BIT_ACCESS(LCDSE4,3)
// LCDSE4<SE36>
extern volatile __bit                   SE36                __at(0x77D4);	// @ (0xEFA * 8 + 4)
#define                                 SE36_bit            _BIT_ACCESS(LCDSE4,4)
// LCDSE4<SE37>
extern volatile __bit                   SE37                __at(0x77D5);	// @ (0xEFA * 8 + 5)
#define                                 SE37_bit            _BIT_ACCESS(LCDSE4,5)
// LCDSE4<SE38>
extern volatile __bit                   SE38                __at(0x77D6);	// @ (0xEFA * 8 + 6)
#define                                 SE38_bit            _BIT_ACCESS(LCDSE4,6)
// LCDSE4<SE39>
extern volatile __bit                   SE39                __at(0x77D7);	// @ (0xEFA * 8 + 7)
#define                                 SE39_bit            _BIT_ACCESS(LCDSE4,7)
// LCDSE5<SE40>
extern volatile __bit                   SE40                __at(0x77D8);	// @ (0xEFB * 8 + 0)
#define                                 SE40_bit            _BIT_ACCESS(LCDSE5,0)
// LCDSE5<SE41>
extern volatile __bit                   SE41                __at(0x77D9);	// @ (0xEFB * 8 + 1)
#define                                 SE41_bit            _BIT_ACCESS(LCDSE5,1)
// LCDSE5<SE42>
extern volatile __bit                   SE42                __at(0x77DA);	// @ (0xEFB * 8 + 2)
#define                                 SE42_bit            _BIT_ACCESS(LCDSE5,2)
// LCDSE5<SE43>
extern volatile __bit                   SE43                __at(0x77DB);	// @ (0xEFB * 8 + 3)
#define                                 SE43_bit            _BIT_ACCESS(LCDSE5,3)
// LCDSE5<SE44>
extern volatile __bit                   SE44                __at(0x77DC);	// @ (0xEFB * 8 + 4)
#define                                 SE44_bit            _BIT_ACCESS(LCDSE5,4)
// LCDSE5<SE45>
extern volatile __bit                   SE45                __at(0x77DD);	// @ (0xEFB * 8 + 5)
#define                                 SE45_bit            _BIT_ACCESS(LCDSE5,5)
// LCDSE5<SE46>
extern volatile __bit                   SE46                __at(0x77DE);	// @ (0xEFB * 8 + 6)
#define                                 SE46_bit            _BIT_ACCESS(LCDSE5,6)
// LCDSE5<SE47>
extern volatile __bit                   SE47                __at(0x77DF);	// @ (0xEFB * 8 + 7)
#define                                 SE47_bit            _BIT_ACCESS(LCDSE5,7)
// PORTD<SEG0>
extern volatile __bit                   SEG0                __at(0x7C18);	// @ (0xF83 * 8 + 0)
#define                                 SEG0_bit            _BIT_ACCESS(PORTD,0)
// PORTD<SEG1>
extern volatile __bit                   SEG1                __at(0x7C19);	// @ (0xF83 * 8 + 1)
#define                                 SEG1_bit            _BIT_ACCESS(PORTD,1)
// PORTB<SEG10>
extern volatile __bit                   SEG10               __at(0x7C0B);	// @ (0xF81 * 8 + 3)
#define                                 SEG10_bit           _BIT_ACCESS(PORTB,3)
// PORTB<SEG11>
extern volatile __bit                   SEG11               __at(0x7C0C);	// @ (0xF81 * 8 + 4)
#define                                 SEG11_bit           _BIT_ACCESS(PORTB,4)
// PORTC<SEG12>
extern volatile __bit                   SEG12               __at(0x7C15);	// @ (0xF82 * 8 + 5)
#define                                 SEG12_bit           _BIT_ACCESS(PORTC,5)
// PORTC<SEG13>
extern volatile __bit                   SEG13               __at(0x7C12);	// @ (0xF82 * 8 + 2)
#define                                 SEG13_bit           _BIT_ACCESS(PORTC,2)
// PORTA<SEG14>
extern volatile __bit                   SEG14               __at(0x7C04);	// @ (0xF80 * 8 + 4)
#define                                 SEG14_bit           _BIT_ACCESS(PORTA,4)
// PORTA<SEG15>
extern volatile __bit                   SEG15               __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 SEG15_bit           _BIT_ACCESS(PORTA,5)
// PORTC<SEG16>
extern volatile __bit                   SEG16               __at(0x7C14);	// @ (0xF82 * 8 + 4)
#define                                 SEG16_bit           _BIT_ACCESS(PORTC,4)
// PORTC<SEG17>
extern volatile __bit                   SEG17               __at(0x7C13);	// @ (0xF82 * 8 + 3)
#define                                 SEG17_bit           _BIT_ACCESS(PORTC,3)
// PORTA<SEG18>
extern volatile __bit                   SEG18               __at(0x7C01);	// @ (0xF80 * 8 + 1)
#define                                 SEG18_bit           _BIT_ACCESS(PORTA,1)
// PORTF<SEG19>
extern volatile __bit                   SEG19               __at(0x7C29);	// @ (0xF85 * 8 + 1)
#define                                 SEG19_bit           _BIT_ACCESS(PORTF,1)
// PORTD<SEG2>
extern volatile __bit                   SEG2                __at(0x7C1A);	// @ (0xF83 * 8 + 2)
#define                                 SEG2_bit            _BIT_ACCESS(PORTD,2)
// PORTF<SEG20>
extern volatile __bit                   SEG20               __at(0x7C2A);	// @ (0xF85 * 8 + 2)
#define                                 SEG20_bit           _BIT_ACCESS(PORTF,2)
// PORTF<SEG21>
extern volatile __bit                   SEG21               __at(0x7C2B);	// @ (0xF85 * 8 + 3)
#define                                 SEG21_bit           _BIT_ACCESS(PORTF,3)
// PORTF<SEG22>
extern volatile __bit                   SEG22               __at(0x7C2C);	// @ (0xF85 * 8 + 4)
#define                                 SEG22_bit           _BIT_ACCESS(PORTF,4)
// PORTF<SEG23>
extern volatile __bit                   SEG23               __at(0x7C2D);	// @ (0xF85 * 8 + 5)
#define                                 SEG23_bit           _BIT_ACCESS(PORTF,5)
// PORTF<SEG24>
extern volatile __bit                   SEG24               __at(0x7C2E);	// @ (0xF85 * 8 + 6)
#define                                 SEG24_bit           _BIT_ACCESS(PORTF,6)
// PORTF<SEG25>
extern volatile __bit                   SEG25               __at(0x7C2F);	// @ (0xF85 * 8 + 7)
#define                                 SEG25_bit           _BIT_ACCESS(PORTF,7)
// PORTG<SEG26>
extern volatile __bit                   SEG26               __at(0x7C34);	// @ (0xF86 * 8 + 4)
#define                                 SEG26_bit           _BIT_ACCESS(PORTG,4)
// PORTC<SEG27>
extern volatile __bit                   SEG27               __at(0x7C16);	// @ (0xF82 * 8 + 6)
#define                                 SEG27_bit           _BIT_ACCESS(PORTC,6)
// PORTC<SEG28>
extern volatile __bit                   SEG28               __at(0x7C17);	// @ (0xF82 * 8 + 7)
#define                                 SEG28_bit           _BIT_ACCESS(PORTC,7)
// PORTB<SEG29>
extern volatile __bit                   SEG29               __at(0x7C0D);	// @ (0xF81 * 8 + 5)
#define                                 SEG29_bit           _BIT_ACCESS(PORTB,5)
// PORTD<SEG3>
extern volatile __bit                   SEG3                __at(0x7C1B);	// @ (0xF83 * 8 + 3)
#define                                 SEG3_bit            _BIT_ACCESS(PORTD,3)
// PORTB<SEG30>
extern volatile __bit                   SEG30               __at(0x7C08);	// @ (0xF81 * 8 + 0)
#define                                 SEG30_bit           _BIT_ACCESS(PORTB,0)
// PORTE<SEG31>
extern volatile __bit                   SEG31               __at(0x7C27);	// @ (0xF84 * 8 + 7)
#define                                 SEG31_bit           _BIT_ACCESS(PORTE,7)
// PORTC<SEG32>
extern volatile __bit                   SEG32               __at(0x7C11);	// @ (0xF82 * 8 + 1)
#define                                 SEG32_bit           _BIT_ACCESS(PORTC,1)
// PORTJ<SEG33>
extern volatile __bit                   SEG33               __at(0x7C41);	// @ (0xF88 * 8 + 1)
#define                                 SEG33_bit           _BIT_ACCESS(PORTJ,1)
// PORTJ<SEG34>
extern volatile __bit                   SEG34               __at(0x7C42);	// @ (0xF88 * 8 + 2)
#define                                 SEG34_bit           _BIT_ACCESS(PORTJ,2)
// PORTJ<SEG35>
extern volatile __bit                   SEG35               __at(0x7C43);	// @ (0xF88 * 8 + 3)
#define                                 SEG35_bit           _BIT_ACCESS(PORTJ,3)
// PORTJ<SEG36>
extern volatile __bit                   SEG36               __at(0x7C47);	// @ (0xF88 * 8 + 7)
#define                                 SEG36_bit           _BIT_ACCESS(PORTJ,7)
// PORTJ<SEG37>
extern volatile __bit                   SEG37               __at(0x7C46);	// @ (0xF88 * 8 + 6)
#define                                 SEG37_bit           _BIT_ACCESS(PORTJ,6)
// PORTJ<SEG38>
extern volatile __bit                   SEG38               __at(0x7C45);	// @ (0xF88 * 8 + 5)
#define                                 SEG38_bit           _BIT_ACCESS(PORTJ,5)
// PORTJ<SEG39>
extern volatile __bit                   SEG39               __at(0x7C44);	// @ (0xF88 * 8 + 4)
#define                                 SEG39_bit           _BIT_ACCESS(PORTJ,4)
// PORTD<SEG4>
extern volatile __bit                   SEG4                __at(0x7C1C);	// @ (0xF83 * 8 + 4)
#define                                 SEG4_bit            _BIT_ACCESS(PORTD,4)
// PORTH<SEG40>
extern volatile __bit                   SEG40               __at(0x7C3C);	// @ (0xF87 * 8 + 4)
#define                                 SEG40_bit           _BIT_ACCESS(PORTH,4)
// PORTH<SEG41>
extern volatile __bit                   SEG41               __at(0x7C3D);	// @ (0xF87 * 8 + 5)
#define                                 SEG41_bit           _BIT_ACCESS(PORTH,5)
// PORTH<SEG42>
extern volatile __bit                   SEG42               __at(0x7C3E);	// @ (0xF87 * 8 + 6)
#define                                 SEG42_bit           _BIT_ACCESS(PORTH,6)
// PORTH<SEG43>
extern volatile __bit                   SEG43               __at(0x7C3F);	// @ (0xF87 * 8 + 7)
#define                                 SEG43_bit           _BIT_ACCESS(PORTH,7)
// PORTH<SEG44>
extern volatile __bit                   SEG44               __at(0x7C3B);	// @ (0xF87 * 8 + 3)
#define                                 SEG44_bit           _BIT_ACCESS(PORTH,3)
// PORTH<SEG45>
extern volatile __bit                   SEG45               __at(0x7C3A);	// @ (0xF87 * 8 + 2)
#define                                 SEG45_bit           _BIT_ACCESS(PORTH,2)
// PORTH<SEG46>
extern volatile __bit                   SEG46               __at(0x7C39);	// @ (0xF87 * 8 + 1)
#define                                 SEG46_bit           _BIT_ACCESS(PORTH,1)
// PORTH<SEG47>
extern volatile __bit                   SEG47               __at(0x7C38);	// @ (0xF87 * 8 + 0)
#define                                 SEG47_bit           _BIT_ACCESS(PORTH,0)
// PORTD<SEG5>
extern volatile __bit                   SEG5                __at(0x7C1D);	// @ (0xF83 * 8 + 5)
#define                                 SEG5_bit            _BIT_ACCESS(PORTD,5)
// PORTD<SEG6>
extern volatile __bit                   SEG6                __at(0x7C1E);	// @ (0xF83 * 8 + 6)
#define                                 SEG6_bit            _BIT_ACCESS(PORTD,6)
// PORTD<SEG7>
extern volatile __bit                   SEG7                __at(0x7C1F);	// @ (0xF83 * 8 + 7)
#define                                 SEG7_bit            _BIT_ACCESS(PORTD,7)
// PORTB<SEG8>
extern volatile __bit                   SEG8                __at(0x7C09);	// @ (0xF81 * 8 + 1)
#define                                 SEG8_bit            _BIT_ACCESS(PORTB,1)
// PORTB<SEG9>
extern volatile __bit                   SEG9                __at(0x7C0A);	// @ (0xF81 * 8 + 2)
#define                                 SEG9_bit            _BIT_ACCESS(PORTB,2)
// SSP1CON2<SEN1>
extern volatile __bit                   SEN1                __at(0x7E28);	// @ (0xFC5 * 8 + 0)
#define                                 SEN1_bit            _BIT_ACCESS(SSP1CON2,0)
// SSP2CON2<SEN2>
extern volatile __bit                   SEN2                __at(0x77F0);	// @ (0xEFE * 8 + 0)
#define                                 SEN2_bit            _BIT_ACCESS(SSP2CON2,0)
// TXSTA1<SENDB1>
extern volatile __bit                   SENDB1              __at(0x7D63);	// @ (0xFAC * 8 + 3)
#define                                 SENDB1_bit          _BIT_ACCESS(TXSTA1,3)
// TXSTA2<SENDB2>
extern volatile __bit                   SENDB2              __at(0x790B);	// @ (0xF21 * 8 + 3)
#define                                 SENDB2_bit          _BIT_ACCESS(TXSTA2,3)
// LCDCON<SLPEN>
extern volatile __bit                   SLPEN               __at(0x77A6);	// @ (0xEF4 * 8 + 6)
#define                                 SLPEN_bit           _BIT_ACCESS(LCDCON,6)
// SSP1STAT<SMP1>
extern volatile __bit                   SMP1                __at(0x7E3F);	// @ (0xFC7 * 8 + 7)
#define                                 SMP1_bit            _BIT_ACCESS(SSP1STAT,7)
// SSP2STAT<SMP2>
extern volatile __bit                   SMP2                __at(0x7807);	// @ (0xF00 * 8 + 7)
#define                                 SMP2_bit            _BIT_ACCESS(SSP2STAT,7)
// T3CON<SOSCEN3>
extern volatile __bit                   SOSCEN3             __at(0x7D8B);	// @ (0xFB1 * 8 + 3)
#define                                 SOSCEN3_bit         _BIT_ACCESS(T3CON,3)
// T5CON<SOSCEN5>
extern volatile __bit                   SOSCEN5             __at(0x789B);	// @ (0xF13 * 8 + 3)
#define                                 SOSCEN5_bit         _BIT_ACCESS(T5CON,3)
// OSCCON2<SOSCGO>
extern volatile __bit                   SOSCGO              __at(0x7B23);	// @ (0xF64 * 8 + 3)
#define                                 SOSCGO_bit          _BIT_ACCESS(OSCCON2,3)
// PORTC<SOSCI>
extern volatile __bit                   SOSCI               __at(0x7C11);	// @ (0xF82 * 8 + 1)
#define                                 SOSCI_bit           _BIT_ACCESS(PORTC,1)
// PORTC<SOSCO>
extern volatile __bit                   SOSCO               __at(0x7C10);	// @ (0xF82 * 8 + 0)
#define                                 SOSCO_bit           _BIT_ACCESS(PORTC,0)
// OSCCON2<SOSCRUN>
extern volatile __bit                   SOSCRUN             __at(0x7B26);	// @ (0xF64 * 8 + 6)
#define                                 SOSCRUN_bit         _BIT_ACCESS(OSCCON2,6)
// STKPTR<SP0>
extern volatile __bit                   SP0                 __at(0x7FE0);	// @ (0xFFC * 8 + 0)
#define                                 SP0_bit             _BIT_ACCESS(STKPTR,0)
// STKPTR<SP1>
extern volatile __bit                   SP1                 __at(0x7FE1);	// @ (0xFFC * 8 + 1)
#define                                 SP1_bit             _BIT_ACCESS(STKPTR,1)
// STKPTR<SP2>
extern volatile __bit                   SP2                 __at(0x7FE2);	// @ (0xFFC * 8 + 2)
#define                                 SP2_bit             _BIT_ACCESS(STKPTR,2)
// STKPTR<SP3>
extern volatile __bit                   SP3                 __at(0x7FE3);	// @ (0xFFC * 8 + 3)
#define                                 SP3_bit             _BIT_ACCESS(STKPTR,3)
// STKPTR<SP4>
extern volatile __bit                   SP4                 __at(0x7FE4);	// @ (0xFFC * 8 + 4)
#define                                 SP4_bit             _BIT_ACCESS(STKPTR,4)
// RCSTA1<SPEN1>
extern volatile __bit                   SPEN1               __at(0x7D5F);	// @ (0xFAB * 8 + 7)
#define                                 SPEN1_bit           _BIT_ACCESS(RCSTA1,7)
// RCSTA2<SPEN2>
extern volatile __bit                   SPEN2               __at(0x7917);	// @ (0xF22 * 8 + 7)
#define                                 SPEN2_bit           _BIT_ACCESS(RCSTA2,7)
// PMD0<SPI1MD>
extern volatile __bit                   SPI1MD              __at(0x78C9);	// @ (0xF19 * 8 + 1)
#define                                 SPI1MD_bit          _BIT_ACCESS(PMD0,1)
// ODCON1<SPI1OD>
extern volatile __bit                   SPI1OD              __at(0x794F);	// @ (0xF29 * 8 + 7)
#define                                 SPI1OD_bit          _BIT_ACCESS(ODCON1,7)
// PMD0<SPI2MD>
extern volatile __bit                   SPI2MD              __at(0x78CA);	// @ (0xF19 * 8 + 2)
#define                                 SPI2MD_bit          _BIT_ACCESS(PMD0,2)
// ODCON1<SPI2OD>
extern volatile __bit                   SPI2OD              __at(0x7948);	// @ (0xF29 * 8 + 0)
#define                                 SPI2OD_bit          _BIT_ACCESS(ODCON1,0)
// RCSTA1<SREN1>
extern volatile __bit                   SREN1               __at(0x7D5D);	// @ (0xFAB * 8 + 5)
#define                                 SREN1_bit           _BIT_ACCESS(RCSTA1,5)
// RCSTA2<SREN2>
extern volatile __bit                   SREN2               __at(0x7915);	// @ (0xF22 * 8 + 5)
#define                                 SREN2_bit           _BIT_ACCESS(RCSTA2,5)
// RCSTA1<SRENA>
extern volatile __bit                   SRENA               __at(0x7D5D);	// @ (0xFAB * 8 + 5)
#define                                 SRENA_bit           _BIT_ACCESS(RCSTA1,5)
// WDTCON<SRETEN>
extern volatile __bit                   SRETEN              __at(0x7E8C);	// @ (0xFD1 * 8 + 4)
#define                                 SRETEN_bit          _BIT_ACCESS(WDTCON,4)
// PORTF<SS1>
extern volatile __bit                   SS1                 __at(0x7C2F);	// @ (0xF85 * 8 + 7)
#define                                 SS1_bit             _BIT_ACCESS(PORTF,7)
// PORTD<SS2>
extern volatile __bit                   SS2                 __at(0x7C1F);	// @ (0xF83 * 8 + 7)
#define                                 SS2_bit             _BIT_ACCESS(PORTD,7)
// PIE1<SSP1IE>
extern volatile __bit                   SSP1IE              __at(0x7CEB);	// @ (0xF9D * 8 + 3)
#define                                 SSP1IE_bit          _BIT_ACCESS(PIE1,3)
// PIR1<SSP1IF>
extern volatile __bit                   SSP1IF              __at(0x7CF3);	// @ (0xF9E * 8 + 3)
#define                                 SSP1IF_bit          _BIT_ACCESS(PIR1,3)
// IPR1<SSP1IP>
extern volatile __bit                   SSP1IP              __at(0x7CFB);	// @ (0xF9F * 8 + 3)
#define                                 SSP1IP_bit          _BIT_ACCESS(IPR1,3)
// PMD0<SSP1MD>
extern volatile __bit                   SSP1MD              __at(0x78C9);	// @ (0xF19 * 8 + 1)
#define                                 SSP1MD_bit          _BIT_ACCESS(PMD0,1)
// PIE2<SSP2IE>
extern volatile __bit                   SSP2IE              __at(0x7D05);	// @ (0xFA0 * 8 + 5)
#define                                 SSP2IE_bit          _BIT_ACCESS(PIE2,5)
// PIR2<SSP2IF>
extern volatile __bit                   SSP2IF              __at(0x7D0D);	// @ (0xFA1 * 8 + 5)
#define                                 SSP2IF_bit          _BIT_ACCESS(PIR2,5)
// IPR2<SSP2IP>
extern volatile __bit                   SSP2IP              __at(0x7D15);	// @ (0xFA2 * 8 + 5)
#define                                 SSP2IP_bit          _BIT_ACCESS(IPR2,5)
// PMD0<SSP2MD>
extern volatile __bit                   SSP2MD              __at(0x78CA);	// @ (0xF19 * 8 + 2)
#define                                 SSP2MD_bit          _BIT_ACCESS(PMD0,2)
// SSP1CON1<SSPEN1>
extern volatile __bit                   SSPEN1              __at(0x7E35);	// @ (0xFC6 * 8 + 5)
#define                                 SSPEN1_bit          _BIT_ACCESS(SSP1CON1,5)
// SSP2CON1<SSPEN2>
extern volatile __bit                   SSPEN2              __at(0x77FD);	// @ (0xEFF * 8 + 5)
#define                                 SSPEN2_bit          _BIT_ACCESS(SSP2CON1,5)
// PIE1<SSPIE>
extern volatile __bit                   SSPIE               __at(0x7CEB);	// @ (0xF9D * 8 + 3)
#define                                 SSPIE_bit           _BIT_ACCESS(PIE1,3)
// PIR1<SSPIF>
extern volatile __bit                   SSPIF               __at(0x7CF3);	// @ (0xF9E * 8 + 3)
#define                                 SSPIF_bit           _BIT_ACCESS(PIR1,3)
// IPR1<SSPIP>
extern volatile __bit                   SSPIP               __at(0x7CFB);	// @ (0xF9F * 8 + 3)
#define                                 SSPIP_bit           _BIT_ACCESS(IPR1,3)
// SSP1CON1<SSPM01>
extern volatile __bit                   SSPM01              __at(0x7E30);	// @ (0xFC6 * 8 + 0)
#define                                 SSPM01_bit          _BIT_ACCESS(SSP1CON1,0)
// LCDDATA12<SSPM012>
extern volatile __bit                   SSPM012             __at(0x7B90);	// @ (0xF72 * 8 + 0)
#define                                 SSPM012_bit         _BIT_ACCESS(LCDDATA12,0)
// SSP2CON1<SSPM02>
extern volatile __bit                   SSPM02              __at(0x77F8);	// @ (0xEFF * 8 + 0)
#define                                 SSPM02_bit          _BIT_ACCESS(SSP2CON1,0)
// SSP1CON1<SSPM11>
extern volatile __bit                   SSPM11              __at(0x7E31);	// @ (0xFC6 * 8 + 1)
#define                                 SSPM11_bit          _BIT_ACCESS(SSP1CON1,1)
// LCDDATA12<SSPM112>
extern volatile __bit                   SSPM112             __at(0x7B91);	// @ (0xF72 * 8 + 1)
#define                                 SSPM112_bit         _BIT_ACCESS(LCDDATA12,1)
// SSP2CON1<SSPM12>
extern volatile __bit                   SSPM12              __at(0x77F9);	// @ (0xEFF * 8 + 1)
#define                                 SSPM12_bit          _BIT_ACCESS(SSP2CON1,1)
// SSP1CON1<SSPM21>
extern volatile __bit                   SSPM21              __at(0x7E32);	// @ (0xFC6 * 8 + 2)
#define                                 SSPM21_bit          _BIT_ACCESS(SSP1CON1,2)
// LCDDATA12<SSPM212>
extern volatile __bit                   SSPM212             __at(0x7B92);	// @ (0xF72 * 8 + 2)
#define                                 SSPM212_bit         _BIT_ACCESS(LCDDATA12,2)
// SSP2CON1<SSPM22>
extern volatile __bit                   SSPM22              __at(0x77FA);	// @ (0xEFF * 8 + 2)
#define                                 SSPM22_bit          _BIT_ACCESS(SSP2CON1,2)
// SSP1CON1<SSPM31>
extern volatile __bit                   SSPM31              __at(0x7E33);	// @ (0xFC6 * 8 + 3)
#define                                 SSPM31_bit          _BIT_ACCESS(SSP1CON1,3)
// LCDDATA12<SSPM312>
extern volatile __bit                   SSPM312             __at(0x7B93);	// @ (0xF72 * 8 + 3)
#define                                 SSPM312_bit         _BIT_ACCESS(LCDDATA12,3)
// SSP2CON1<SSPM32>
extern volatile __bit                   SSPM32              __at(0x77FB);	// @ (0xEFF * 8 + 3)
#define                                 SSPM32_bit          _BIT_ACCESS(SSP2CON1,3)
// SSP1CON1<SSPOV1>
extern volatile __bit                   SSPOV1              __at(0x7E36);	// @ (0xFC6 * 8 + 6)
#define                                 SSPOV1_bit          _BIT_ACCESS(SSP1CON1,6)
// SSP2CON1<SSPOV2>
extern volatile __bit                   SSPOV2              __at(0x77FE);	// @ (0xEFF * 8 + 6)
#define                                 SSPOV2_bit          _BIT_ACCESS(SSP2CON1,6)
// SSP1STAT<START>
extern volatile __bit                   START               __at(0x7E3B);	// @ (0xFC7 * 8 + 3)
#define                                 START_bit           _BIT_ACCESS(SSP1STAT,3)
// SSP1STAT<START1>
extern volatile __bit                   START1              __at(0x7E3B);	// @ (0xFC7 * 8 + 3)
#define                                 START1_bit          _BIT_ACCESS(SSP1STAT,3)
// SSP2STAT<START2>
extern volatile __bit                   START2              __at(0x7803);	// @ (0xF00 * 8 + 3)
#define                                 START2_bit          _BIT_ACCESS(SSP2STAT,3)
// STKPTR<STKFUL>
extern volatile __bit                   STKFUL              __at(0x7FE7);	// @ (0xFFC * 8 + 7)
#define                                 STKFUL_bit          _BIT_ACCESS(STKPTR,7)
// STKPTR<STKOVF>
extern volatile __bit                   STKOVF              __at(0x7FE7);	// @ (0xFFC * 8 + 7)
#define                                 STKOVF_bit          _BIT_ACCESS(STKPTR,7)
// STKPTR<STKUNF>
extern volatile __bit                   STKUNF              __at(0x7FE6);	// @ (0xFFC * 8 + 6)
#define                                 STKUNF_bit          _BIT_ACCESS(STKPTR,6)
// SSP1STAT<STOP>
extern volatile __bit                   STOP                __at(0x7E3C);	// @ (0xFC7 * 8 + 4)
#define                                 STOP_bit            _BIT_ACCESS(SSP1STAT,4)
// SSP1STAT<STOP1>
extern volatile __bit                   STOP1               __at(0x7E3C);	// @ (0xFC7 * 8 + 4)
#define                                 STOP1_bit           _BIT_ACCESS(SSP1STAT,4)
// SSP2STAT<STOP2>
extern volatile __bit                   STOP2               __at(0x7804);	// @ (0xF00 * 8 + 4)
#define                                 STOP2_bit           _BIT_ACCESS(SSP2STAT,4)
// PSTR2CON<STRA2>
extern volatile __bit                   STRA2               __at(0x78D8);	// @ (0xF1B * 8 + 0)
#define                                 STRA2_bit           _BIT_ACCESS(PSTR2CON,0)
// PSTR3CON<STRA3>
extern volatile __bit                   STRA3               __at(0x78D0);	// @ (0xF1A * 8 + 0)
#define                                 STRA3_bit           _BIT_ACCESS(PSTR3CON,0)
// PSTR2CON<STRB2>
extern volatile __bit                   STRB2               __at(0x78D9);	// @ (0xF1B * 8 + 1)
#define                                 STRB2_bit           _BIT_ACCESS(PSTR2CON,1)
// PSTR3CON<STRB3>
extern volatile __bit                   STRB3               __at(0x78D1);	// @ (0xF1A * 8 + 1)
#define                                 STRB3_bit           _BIT_ACCESS(PSTR3CON,1)
// PSTR2CON<STRC2>
extern volatile __bit                   STRC2               __at(0x78DA);	// @ (0xF1B * 8 + 2)
#define                                 STRC2_bit           _BIT_ACCESS(PSTR2CON,2)
// PSTR3CON<STRC3>
extern volatile __bit                   STRC3               __at(0x78D2);	// @ (0xF1A * 8 + 2)
#define                                 STRC3_bit           _BIT_ACCESS(PSTR3CON,2)
// PSTR2CON<STRD2>
extern volatile __bit                   STRD2               __at(0x78DB);	// @ (0xF1B * 8 + 3)
#define                                 STRD2_bit           _BIT_ACCESS(PSTR2CON,3)
// PSTR3CON<STRD3>
extern volatile __bit                   STRD3               __at(0x78D3);	// @ (0xF1A * 8 + 3)
#define                                 STRD3_bit           _BIT_ACCESS(PSTR3CON,3)
// PSTR2CON<STRSYNC2>
extern volatile __bit                   STRSYNC2            __at(0x78DC);	// @ (0xF1B * 8 + 4)
#define                                 STRSYNC2_bit        _BIT_ACCESS(PSTR2CON,4)
// PSTR3CON<STRSYNC3>
extern volatile __bit                   STRSYNC3            __at(0x78D4);	// @ (0xF1A * 8 + 4)
#define                                 STRSYNC3_bit        _BIT_ACCESS(PSTR3CON,4)
// WDTCON<SWDTE>
extern volatile __bit                   SWDTE               __at(0x7E88);	// @ (0xFD1 * 8 + 0)
#define                                 SWDTE_bit           _BIT_ACCESS(WDTCON,0)
// WDTCON<SWDTEN>
extern volatile __bit                   SWDTEN              __at(0x7E88);	// @ (0xFD1 * 8 + 0)
#define                                 SWDTEN_bit          _BIT_ACCESS(WDTCON,0)
// TXSTA1<SYNC1>
extern volatile __bit                   SYNC1               __at(0x7D64);	// @ (0xFAC * 8 + 4)
#define                                 SYNC1_bit           _BIT_ACCESS(TXSTA1,4)
// TXSTA2<SYNC2>
extern volatile __bit                   SYNC2               __at(0x790C);	// @ (0xF21 * 8 + 4)
#define                                 SYNC2_bit           _BIT_ACCESS(TXSTA2,4)
// T0CON<T08BIT>
extern volatile __bit                   T08BIT              __at(0x7EAE);	// @ (0xFD5 * 8 + 6)
#define                                 T08BIT_bit          _BIT_ACCESS(T0CON,6)
// PORTA<T0CKI>
extern volatile __bit                   T0CKI               __at(0x7C04);	// @ (0xF80 * 8 + 4)
#define                                 T0CKI_bit           _BIT_ACCESS(PORTA,4)
// T0CON<T0CS>
extern volatile __bit                   T0CS                __at(0x7EAD);	// @ (0xFD5 * 8 + 5)
#define                                 T0CS_bit            _BIT_ACCESS(T0CON,5)
// INTCON<T0IE>
extern volatile __bit                   T0IE                __at(0x7F95);	// @ (0xFF2 * 8 + 5)
#define                                 T0IE_bit            _BIT_ACCESS(INTCON,5)
// INTCON<T0IF>
extern volatile __bit                   T0IF                __at(0x7F92);	// @ (0xFF2 * 8 + 2)
#define                                 T0IF_bit            _BIT_ACCESS(INTCON,2)
// INTCON2<T0IP>
extern volatile __bit                   T0IP                __at(0x7F8A);	// @ (0xFF1 * 8 + 2)
#define                                 T0IP_bit            _BIT_ACCESS(INTCON2,2)
// T0CON<T0PS0>
extern volatile __bit                   T0PS0               __at(0x7EA8);	// @ (0xFD5 * 8 + 0)
#define                                 T0PS0_bit           _BIT_ACCESS(T0CON,0)
// T0CON<T0PS1>
extern volatile __bit                   T0PS1               __at(0x7EA9);	// @ (0xFD5 * 8 + 1)
#define                                 T0PS1_bit           _BIT_ACCESS(T0CON,1)
// T0CON<T0PS2>
extern volatile __bit                   T0PS2               __at(0x7EAA);	// @ (0xFD5 * 8 + 2)
#define                                 T0PS2_bit           _BIT_ACCESS(T0CON,2)
// T0CON<T0SE>
extern volatile __bit                   T0SE                __at(0x7EAC);	// @ (0xFD5 * 8 + 4)
#define                                 T0SE_bit            _BIT_ACCESS(T0CON,4)
// PORTA<T1CKI>
extern volatile __bit                   T1CKI               __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 T1CKI_bit           _BIT_ACCESS(PORTA,5)
// T1CON<T1CKPS0>
extern volatile __bit                   T1CKPS0             __at(0x7E6C);	// @ (0xFCD * 8 + 4)
#define                                 T1CKPS0_bit         _BIT_ACCESS(T1CON,4)
// T1CON<T1CKPS1>
extern volatile __bit                   T1CKPS1             __at(0x7E6D);	// @ (0xFCD * 8 + 5)
#define                                 T1CKPS1_bit         _BIT_ACCESS(T1CON,5)
// PORTB<T1G>
extern volatile __bit                   T1G                 __at(0x7C0D);	// @ (0xF81 * 8 + 5)
#define                                 T1G_bit             _BIT_ACCESS(PORTB,5)
// T1GCON<T1GGO>
extern volatile __bit                   T1GGO               __at(0x7D53);	// @ (0xFAA * 8 + 3)
#define                                 T1GGO_bit           _BIT_ACCESS(T1GCON,3)
// T1GCON<T1GGO_NOT_T1DONE>
extern volatile __bit                   T1GGO_NOT_T1DONE    __at(0x7D53);	// @ (0xFAA * 8 + 3)
#define                                 T1GGO_NOT_T1DONE_bit _BIT_ACCESS(T1GCON,3)
// T1GCON<T1GGO_nT1DONE>
extern volatile __bit                   T1GGO_nT1DONE       __at(0x7D53);	// @ (0xFAA * 8 + 3)
#define                                 T1GGO_nT1DONE_bit   _BIT_ACCESS(T1GCON,3)
// T1GCON<T1GPOL>
extern volatile __bit                   T1GPOL              __at(0x7D56);	// @ (0xFAA * 8 + 6)
#define                                 T1GPOL_bit          _BIT_ACCESS(T1GCON,6)
// T1GCON<T1GSPM>
extern volatile __bit                   T1GSPM              __at(0x7D54);	// @ (0xFAA * 8 + 4)
#define                                 T1GSPM_bit          _BIT_ACCESS(T1GCON,4)
// T1GCON<T1GSS0>
extern volatile __bit                   T1GSS0              __at(0x7D50);	// @ (0xFAA * 8 + 0)
#define                                 T1GSS0_bit          _BIT_ACCESS(T1GCON,0)
// T1GCON<T1GSS1>
extern volatile __bit                   T1GSS1              __at(0x7D51);	// @ (0xFAA * 8 + 1)
#define                                 T1GSS1_bit          _BIT_ACCESS(T1GCON,1)
// T1GCON<T1GTM>
extern volatile __bit                   T1GTM               __at(0x7D55);	// @ (0xFAA * 8 + 5)
#define                                 T1GTM_bit           _BIT_ACCESS(T1GCON,5)
// T1GCON<T1GVAL>
extern volatile __bit                   T1GVAL              __at(0x7D52);	// @ (0xFAA * 8 + 2)
#define                                 T1GVAL_bit          _BIT_ACCESS(T1GCON,2)
// T1CON<T1OSCEN>
extern volatile __bit                   T1OSCEN             __at(0x7E6B);	// @ (0xFCD * 8 + 3)
#define                                 T1OSCEN_bit         _BIT_ACCESS(T1CON,3)
// T1CON<T1RD16>
extern volatile __bit                   T1RD16              __at(0x7E6F);	// @ (0xFCD * 8 + 7)
#define                                 T1RD16_bit          _BIT_ACCESS(T1CON,7)
// T2CON<T2CKPS0>
extern volatile __bit                   T2CKPS0             __at(0x7E50);	// @ (0xFCA * 8 + 0)
#define                                 T2CKPS0_bit         _BIT_ACCESS(T2CON,0)
// T2CON<T2CKPS1>
extern volatile __bit                   T2CKPS1             __at(0x7E51);	// @ (0xFCA * 8 + 1)
#define                                 T2CKPS1_bit         _BIT_ACCESS(T2CON,1)
// T2CON<T2OUTPS0>
extern volatile __bit                   T2OUTPS0            __at(0x7E53);	// @ (0xFCA * 8 + 3)
#define                                 T2OUTPS0_bit        _BIT_ACCESS(T2CON,3)
// T2CON<T2OUTPS1>
extern volatile __bit                   T2OUTPS1            __at(0x7E54);	// @ (0xFCA * 8 + 4)
#define                                 T2OUTPS1_bit        _BIT_ACCESS(T2CON,4)
// T2CON<T2OUTPS2>
extern volatile __bit                   T2OUTPS2            __at(0x7E55);	// @ (0xFCA * 8 + 5)
#define                                 T2OUTPS2_bit        _BIT_ACCESS(T2CON,5)
// T2CON<T2OUTPS3>
extern volatile __bit                   T2OUTPS3            __at(0x7E56);	// @ (0xFCA * 8 + 6)
#define                                 T2OUTPS3_bit        _BIT_ACCESS(T2CON,6)
// PORTB<T3CKI>
extern volatile __bit                   T3CKI               __at(0x7C0D);	// @ (0xF81 * 8 + 5)
#define                                 T3CKI_bit           _BIT_ACCESS(PORTB,5)
// T3CON<T3CKPS0>
extern volatile __bit                   T3CKPS0             __at(0x7D8C);	// @ (0xFB1 * 8 + 4)
#define                                 T3CKPS0_bit         _BIT_ACCESS(T3CON,4)
// LCDDATA19<T3CKPS019>
extern volatile __bit                   T3CKPS019           __at(0x7BCC);	// @ (0xF79 * 8 + 4)
#define                                 T3CKPS019_bit       _BIT_ACCESS(LCDDATA19,4)
// T3CON<T3CKPS1>
extern volatile __bit                   T3CKPS1             __at(0x7D8D);	// @ (0xFB1 * 8 + 5)
#define                                 T3CKPS1_bit         _BIT_ACCESS(T3CON,5)
// LCDDATA19<T3CKPS119>
extern volatile __bit                   T3CKPS119           __at(0x7BCD);	// @ (0xF79 * 8 + 5)
#define                                 T3CKPS119_bit       _BIT_ACCESS(LCDDATA19,5)
// PORTA<T3G>
extern volatile __bit                   T3G                 __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 T3G_bit             _BIT_ACCESS(PORTA,5)
// T3GCON<T3GGO>
extern volatile __bit                   T3GGO               __at(0x7D83);	// @ (0xFB0 * 8 + 3)
#define                                 T3GGO_bit           _BIT_ACCESS(T3GCON,3)
// T3GCON<T3GGO_NOT_T3DONE>
extern volatile __bit                   T3GGO_NOT_T3DONE    __at(0x7D83);	// @ (0xFB0 * 8 + 3)
#define                                 T3GGO_NOT_T3DONE_bit _BIT_ACCESS(T3GCON,3)
// T3GCON<T3GGO_nT3DONE>
extern volatile __bit                   T3GGO_nT3DONE       __at(0x7D83);	// @ (0xFB0 * 8 + 3)
#define                                 T3GGO_nT3DONE_bit   _BIT_ACCESS(T3GCON,3)
// T3GCON<T3GPOL>
extern volatile __bit                   T3GPOL              __at(0x7D86);	// @ (0xFB0 * 8 + 6)
#define                                 T3GPOL_bit          _BIT_ACCESS(T3GCON,6)
// T3GCON<T3GSPM>
extern volatile __bit                   T3GSPM              __at(0x7D84);	// @ (0xFB0 * 8 + 4)
#define                                 T3GSPM_bit          _BIT_ACCESS(T3GCON,4)
// T3GCON<T3GSS0>
extern volatile __bit                   T3GSS0              __at(0x7D80);	// @ (0xFB0 * 8 + 0)
#define                                 T3GSS0_bit          _BIT_ACCESS(T3GCON,0)
// T3GCON<T3GSS1>
extern volatile __bit                   T3GSS1              __at(0x7D81);	// @ (0xFB0 * 8 + 1)
#define                                 T3GSS1_bit          _BIT_ACCESS(T3GCON,1)
// T3GCON<T3GTM>
extern volatile __bit                   T3GTM               __at(0x7D85);	// @ (0xFB0 * 8 + 5)
#define                                 T3GTM_bit           _BIT_ACCESS(T3GCON,5)
// T3GCON<T3GVAL>
extern volatile __bit                   T3GVAL              __at(0x7D82);	// @ (0xFB0 * 8 + 2)
#define                                 T3GVAL_bit          _BIT_ACCESS(T3GCON,2)
// T3CON<T3RD16>
extern volatile __bit                   T3RD16              __at(0x7D8F);	// @ (0xFB1 * 8 + 7)
#define                                 T3RD16_bit          _BIT_ACCESS(T3CON,7)
// T4CON<T4CKPS0>
extern volatile __bit                   T4CKPS0             __at(0x7818);	// @ (0xF03 * 8 + 0)
#define                                 T4CKPS0_bit         _BIT_ACCESS(T4CON,0)
// LCDDATA16<T4CKPS016>
extern volatile __bit                   T4CKPS016           __at(0x7BB0);	// @ (0xF76 * 8 + 0)
#define                                 T4CKPS016_bit       _BIT_ACCESS(LCDDATA16,0)
// T4CON<T4CKPS1>
extern volatile __bit                   T4CKPS1             __at(0x7819);	// @ (0xF03 * 8 + 1)
#define                                 T4CKPS1_bit         _BIT_ACCESS(T4CON,1)
// LCDDATA16<T4CKPS116>
extern volatile __bit                   T4CKPS116           __at(0x7BB1);	// @ (0xF76 * 8 + 1)
#define                                 T4CKPS116_bit       _BIT_ACCESS(LCDDATA16,1)
// T4CON<T4OUTPS0>
extern volatile __bit                   T4OUTPS0            __at(0x781B);	// @ (0xF03 * 8 + 3)
#define                                 T4OUTPS0_bit        _BIT_ACCESS(T4CON,3)
// LCDDATA16<T4OUTPS016>
extern volatile __bit                   T4OUTPS016          __at(0x7BB3);	// @ (0xF76 * 8 + 3)
#define                                 T4OUTPS016_bit      _BIT_ACCESS(LCDDATA16,3)
// T4CON<T4OUTPS1>
extern volatile __bit                   T4OUTPS1            __at(0x781C);	// @ (0xF03 * 8 + 4)
#define                                 T4OUTPS1_bit        _BIT_ACCESS(T4CON,4)
// LCDDATA16<T4OUTPS116>
extern volatile __bit                   T4OUTPS116          __at(0x7BB4);	// @ (0xF76 * 8 + 4)
#define                                 T4OUTPS116_bit      _BIT_ACCESS(LCDDATA16,4)
// T4CON<T4OUTPS2>
extern volatile __bit                   T4OUTPS2            __at(0x781D);	// @ (0xF03 * 8 + 5)
#define                                 T4OUTPS2_bit        _BIT_ACCESS(T4CON,5)
// LCDDATA16<T4OUTPS216>
extern volatile __bit                   T4OUTPS216          __at(0x7BB5);	// @ (0xF76 * 8 + 5)
#define                                 T4OUTPS216_bit      _BIT_ACCESS(LCDDATA16,5)
// T4CON<T4OUTPS3>
extern volatile __bit                   T4OUTPS3            __at(0x781E);	// @ (0xF03 * 8 + 6)
#define                                 T4OUTPS3_bit        _BIT_ACCESS(T4CON,6)
// LCDDATA16<T4OUTPS316>
extern volatile __bit                   T4OUTPS316          __at(0x7BB6);	// @ (0xF76 * 8 + 6)
#define                                 T4OUTPS316_bit      _BIT_ACCESS(LCDDATA16,6)
// PORTD<T5CKI>
extern volatile __bit                   T5CKI               __at(0x7C19);	// @ (0xF83 * 8 + 1)
#define                                 T5CKI_bit           _BIT_ACCESS(PORTD,1)
// T5CON<T5CKPS0>
extern volatile __bit                   T5CKPS0             __at(0x789C);	// @ (0xF13 * 8 + 4)
#define                                 T5CKPS0_bit         _BIT_ACCESS(T5CON,4)
// T5CON<T5CKPS1>
extern volatile __bit                   T5CKPS1             __at(0x789D);	// @ (0xF13 * 8 + 5)
#define                                 T5CKPS1_bit         _BIT_ACCESS(T5CON,5)
// PORTG<T5G>
extern volatile __bit                   T5G                 __at(0x7C34);	// @ (0xF86 * 8 + 4)
#define                                 T5G_bit             _BIT_ACCESS(PORTG,4)
// T5GCON<T5GGO>
extern volatile __bit                   T5GGO               __at(0x7893);	// @ (0xF12 * 8 + 3)
#define                                 T5GGO_bit           _BIT_ACCESS(T5GCON,3)
// T5GCON<T5GGO_NOT_T5DONE>
extern volatile __bit                   T5GGO_NOT_T5DONE    __at(0x7893);	// @ (0xF12 * 8 + 3)
#define                                 T5GGO_NOT_T5DONE_bit _BIT_ACCESS(T5GCON,3)
// T5GCON<T5GGO_nT5DONE>
extern volatile __bit                   T5GGO_nT5DONE       __at(0x7893);	// @ (0xF12 * 8 + 3)
#define                                 T5GGO_nT5DONE_bit   _BIT_ACCESS(T5GCON,3)
// T5GCON<T5GPOL>
extern volatile __bit                   T5GPOL              __at(0x7896);	// @ (0xF12 * 8 + 6)
#define                                 T5GPOL_bit          _BIT_ACCESS(T5GCON,6)
// T5GCON<T5GSPM>
extern volatile __bit                   T5GSPM              __at(0x7894);	// @ (0xF12 * 8 + 4)
#define                                 T5GSPM_bit          _BIT_ACCESS(T5GCON,4)
// T5GCON<T5GSS0>
extern volatile __bit                   T5GSS0              __at(0x7890);	// @ (0xF12 * 8 + 0)
#define                                 T5GSS0_bit          _BIT_ACCESS(T5GCON,0)
// T5GCON<T5GSS1>
extern volatile __bit                   T5GSS1              __at(0x7891);	// @ (0xF12 * 8 + 1)
#define                                 T5GSS1_bit          _BIT_ACCESS(T5GCON,1)
// T5GCON<T5GTM>
extern volatile __bit                   T5GTM               __at(0x7895);	// @ (0xF12 * 8 + 5)
#define                                 T5GTM_bit           _BIT_ACCESS(T5GCON,5)
// T5GCON<T5GVAL>
extern volatile __bit                   T5GVAL              __at(0x7892);	// @ (0xF12 * 8 + 2)
#define                                 T5GVAL_bit          _BIT_ACCESS(T5GCON,2)
// T6CON<T6CKPS0>
extern volatile __bit                   T6CKPS0             __at(0x79C8);	// @ (0xF39 * 8 + 0)
#define                                 T6CKPS0_bit         _BIT_ACCESS(T6CON,0)
// T6CON<T6CKPS1>
extern volatile __bit                   T6CKPS1             __at(0x79C9);	// @ (0xF39 * 8 + 1)
#define                                 T6CKPS1_bit         _BIT_ACCESS(T6CON,1)
// T6CON<T6OUTPS0>
extern volatile __bit                   T6OUTPS0            __at(0x79CB);	// @ (0xF39 * 8 + 3)
#define                                 T6OUTPS0_bit        _BIT_ACCESS(T6CON,3)
// T6CON<T6OUTPS1>
extern volatile __bit                   T6OUTPS1            __at(0x79CC);	// @ (0xF39 * 8 + 4)
#define                                 T6OUTPS1_bit        _BIT_ACCESS(T6CON,4)
// T6CON<T6OUTPS2>
extern volatile __bit                   T6OUTPS2            __at(0x79CD);	// @ (0xF39 * 8 + 5)
#define                                 T6OUTPS2_bit        _BIT_ACCESS(T6CON,5)
// T6CON<T6OUTPS3>
extern volatile __bit                   T6OUTPS3            __at(0x79CE);	// @ (0xF39 * 8 + 6)
#define                                 T6OUTPS3_bit        _BIT_ACCESS(T6CON,6)
// PORTG<T7CKI>
extern volatile __bit                   T7CKI               __at(0x7C34);	// @ (0xF86 * 8 + 4)
#define                                 T7CKI_bit           _BIT_ACCESS(PORTG,4)
// PORTD<T7G>
extern volatile __bit                   T7G                 __at(0x7C19);	// @ (0xF83 * 8 + 1)
#define                                 T7G_bit             _BIT_ACCESS(PORTD,1)
// T8CON<T8CKPS0>
extern volatile __bit                   T8CKPS0             __at(0x79B0);	// @ (0xF36 * 8 + 0)
#define                                 T8CKPS0_bit         _BIT_ACCESS(T8CON,0)
// T8CON<T8CKPS1>
extern volatile __bit                   T8CKPS1             __at(0x79B1);	// @ (0xF36 * 8 + 1)
#define                                 T8CKPS1_bit         _BIT_ACCESS(T8CON,1)
// T8CON<T8OUTPS0>
extern volatile __bit                   T8OUTPS0            __at(0x79B3);	// @ (0xF36 * 8 + 3)
#define                                 T8OUTPS0_bit        _BIT_ACCESS(T8CON,3)
// T8CON<T8OUTPS1>
extern volatile __bit                   T8OUTPS1            __at(0x79B4);	// @ (0xF36 * 8 + 4)
#define                                 T8OUTPS1_bit        _BIT_ACCESS(T8CON,4)
// T8CON<T8OUTPS2>
extern volatile __bit                   T8OUTPS2            __at(0x79B5);	// @ (0xF36 * 8 + 5)
#define                                 T8OUTPS2_bit        _BIT_ACCESS(T8CON,5)
// T8CON<T8OUTPS3>
extern volatile __bit                   T8OUTPS3            __at(0x79B6);	// @ (0xF36 * 8 + 6)
#define                                 T8OUTPS3_bit        _BIT_ACCESS(T8CON,6)
// CTMUCONH<TGEN>
extern volatile __bit                   TGEN                __at(0x7ABC);	// @ (0xF57 * 8 + 4)
#define                                 TGEN_bit            _BIT_ACCESS(CTMUCONH,4)
// INTCON<TMR0IE>
extern volatile __bit                   TMR0IE              __at(0x7F95);	// @ (0xFF2 * 8 + 5)
#define                                 TMR0IE_bit          _BIT_ACCESS(INTCON,5)
// INTCON<TMR0IF>
extern volatile __bit                   TMR0IF              __at(0x7F92);	// @ (0xFF2 * 8 + 2)
#define                                 TMR0IF_bit          _BIT_ACCESS(INTCON,2)
// INTCON2<TMR0IP>
extern volatile __bit                   TMR0IP              __at(0x7F8A);	// @ (0xFF1 * 8 + 2)
#define                                 TMR0IP_bit          _BIT_ACCESS(INTCON2,2)
// T0CON<TMR0ON>
extern volatile __bit                   TMR0ON              __at(0x7EAF);	// @ (0xFD5 * 8 + 7)
#define                                 TMR0ON_bit          _BIT_ACCESS(T0CON,7)
// T1CON<TMR1CS0>
extern volatile __bit                   TMR1CS0             __at(0x7E6E);	// @ (0xFCD * 8 + 6)
#define                                 TMR1CS0_bit         _BIT_ACCESS(T1CON,6)
// T1CON<TMR1CS1>
extern volatile __bit                   TMR1CS1             __at(0x7E6F);	// @ (0xFCD * 8 + 7)
#define                                 TMR1CS1_bit         _BIT_ACCESS(T1CON,7)
// T1GCON<TMR1GE>
extern volatile __bit                   TMR1GE              __at(0x7D57);	// @ (0xFAA * 8 + 7)
#define                                 TMR1GE_bit          _BIT_ACCESS(T1GCON,7)
// PIE1<TMR1GIE>
extern volatile __bit                   TMR1GIE             __at(0x7CEA);	// @ (0xF9D * 8 + 2)
#define                                 TMR1GIE_bit         _BIT_ACCESS(PIE1,2)
// PIR1<TMR1GIF>
extern volatile __bit                   TMR1GIF             __at(0x7CF2);	// @ (0xF9E * 8 + 2)
#define                                 TMR1GIF_bit         _BIT_ACCESS(PIR1,2)
// IPR1<TMR1GIP>
extern volatile __bit                   TMR1GIP             __at(0x7CFA);	// @ (0xF9F * 8 + 2)
#define                                 TMR1GIP_bit         _BIT_ACCESS(IPR1,2)
// PIE1<TMR1IE>
extern volatile __bit                   TMR1IE              __at(0x7CE8);	// @ (0xF9D * 8 + 0)
#define                                 TMR1IE_bit          _BIT_ACCESS(PIE1,0)
// PIR1<TMR1IF>
extern volatile __bit                   TMR1IF              __at(0x7CF0);	// @ (0xF9E * 8 + 0)
#define                                 TMR1IF_bit          _BIT_ACCESS(PIR1,0)
// IPR1<TMR1IP>
extern volatile __bit                   TMR1IP              __at(0x7CF8);	// @ (0xF9F * 8 + 0)
#define                                 TMR1IP_bit          _BIT_ACCESS(IPR1,0)
// PMD1<TMR1MD>
extern volatile __bit                   TMR1MD              __at(0x78C1);	// @ (0xF18 * 8 + 1)
#define                                 TMR1MD_bit          _BIT_ACCESS(PMD1,1)
// T1CON<TMR1ON>
extern volatile __bit                   TMR1ON              __at(0x7E68);	// @ (0xFCD * 8 + 0)
#define                                 TMR1ON_bit          _BIT_ACCESS(T1CON,0)
// PIE1<TMR2IE>
extern volatile __bit                   TMR2IE              __at(0x7CE9);	// @ (0xF9D * 8 + 1)
#define                                 TMR2IE_bit          _BIT_ACCESS(PIE1,1)
// PIR1<TMR2IF>
extern volatile __bit                   TMR2IF              __at(0x7CF1);	// @ (0xF9E * 8 + 1)
#define                                 TMR2IF_bit          _BIT_ACCESS(PIR1,1)
// IPR1<TMR2IP>
extern volatile __bit                   TMR2IP              __at(0x7CF9);	// @ (0xF9F * 8 + 1)
#define                                 TMR2IP_bit          _BIT_ACCESS(IPR1,1)
// PMD1<TMR2MD>
extern volatile __bit                   TMR2MD              __at(0x78C2);	// @ (0xF18 * 8 + 2)
#define                                 TMR2MD_bit          _BIT_ACCESS(PMD1,2)
// T2CON<TMR2ON>
extern volatile __bit                   TMR2ON              __at(0x7E52);	// @ (0xFCA * 8 + 2)
#define                                 TMR2ON_bit          _BIT_ACCESS(T2CON,2)
// T3CON<TMR3CS0>
extern volatile __bit                   TMR3CS0             __at(0x7D8E);	// @ (0xFB1 * 8 + 6)
#define                                 TMR3CS0_bit         _BIT_ACCESS(T3CON,6)
// LCDDATA19<TMR3CS019>
extern volatile __bit                   TMR3CS019           __at(0x7BCE);	// @ (0xF79 * 8 + 6)
#define                                 TMR3CS019_bit       _BIT_ACCESS(LCDDATA19,6)
// T3CON<TMR3CS1>
extern volatile __bit                   TMR3CS1             __at(0x7D8F);	// @ (0xFB1 * 8 + 7)
#define                                 TMR3CS1_bit         _BIT_ACCESS(T3CON,7)
// LCDDATA19<TMR3CS119>
extern volatile __bit                   TMR3CS119           __at(0x7BCF);	// @ (0xF79 * 8 + 7)
#define                                 TMR3CS119_bit       _BIT_ACCESS(LCDDATA19,7)
// T3GCON<TMR3GE>
extern volatile __bit                   TMR3GE              __at(0x7D87);	// @ (0xFB0 * 8 + 7)
#define                                 TMR3GE_bit          _BIT_ACCESS(T3GCON,7)
// PIE2<TMR3GIE>
extern volatile __bit                   TMR3GIE             __at(0x7D00);	// @ (0xFA0 * 8 + 0)
#define                                 TMR3GIE_bit         _BIT_ACCESS(PIE2,0)
// PIR2<TMR3GIF>
extern volatile __bit                   TMR3GIF             __at(0x7D08);	// @ (0xFA1 * 8 + 0)
#define                                 TMR3GIF_bit         _BIT_ACCESS(PIR2,0)
// IPR2<TMR3GIP>
extern volatile __bit                   TMR3GIP             __at(0x7D10);	// @ (0xFA2 * 8 + 0)
#define                                 TMR3GIP_bit         _BIT_ACCESS(IPR2,0)
// PIE2<TMR3IE>
extern volatile __bit                   TMR3IE              __at(0x7D01);	// @ (0xFA0 * 8 + 1)
#define                                 TMR3IE_bit          _BIT_ACCESS(PIE2,1)
// PIR2<TMR3IF>
extern volatile __bit                   TMR3IF              __at(0x7D09);	// @ (0xFA1 * 8 + 1)
#define                                 TMR3IF_bit          _BIT_ACCESS(PIR2,1)
// IPR2<TMR3IP>
extern volatile __bit                   TMR3IP              __at(0x7D11);	// @ (0xFA2 * 8 + 1)
#define                                 TMR3IP_bit          _BIT_ACCESS(IPR2,1)
// PMD1<TMR3MD>
extern volatile __bit                   TMR3MD              __at(0x78C3);	// @ (0xF18 * 8 + 3)
#define                                 TMR3MD_bit          _BIT_ACCESS(PMD1,3)
// T3CON<TMR3ON>
extern volatile __bit                   TMR3ON              __at(0x7D88);	// @ (0xFB1 * 8 + 0)
#define                                 TMR3ON_bit          _BIT_ACCESS(T3CON,0)
// PIE5<TMR4IE>
extern volatile __bit                   TMR4IE              __at(0x7DC8);	// @ (0xFB9 * 8 + 0)
#define                                 TMR4IE_bit          _BIT_ACCESS(PIE5,0)
// PIR5<TMR4IF>
extern volatile __bit                   TMR4IF              __at(0x7DD0);	// @ (0xFBA * 8 + 0)
#define                                 TMR4IF_bit          _BIT_ACCESS(PIR5,0)
// IPR5<TMR4IP>
extern volatile __bit                   TMR4IP              __at(0x7E90);	// @ (0xFD2 * 8 + 0)
#define                                 TMR4IP_bit          _BIT_ACCESS(IPR5,0)
// PMD1<TMR4MD>
extern volatile __bit                   TMR4MD              __at(0x78C4);	// @ (0xF18 * 8 + 4)
#define                                 TMR4MD_bit          _BIT_ACCESS(PMD1,4)
// T4CON<TMR4ON>
extern volatile __bit                   TMR4ON              __at(0x781A);	// @ (0xF03 * 8 + 2)
#define                                 TMR4ON_bit          _BIT_ACCESS(T4CON,2)
// T5CON<TMR5CS0>
extern volatile __bit                   TMR5CS0             __at(0x789E);	// @ (0xF13 * 8 + 6)
#define                                 TMR5CS0_bit         _BIT_ACCESS(T5CON,6)
// T5CON<TMR5CS1>
extern volatile __bit                   TMR5CS1             __at(0x789F);	// @ (0xF13 * 8 + 7)
#define                                 TMR5CS1_bit         _BIT_ACCESS(T5CON,7)
// T5GCON<TMR5GE>
extern volatile __bit                   TMR5GE              __at(0x7897);	// @ (0xF12 * 8 + 7)
#define                                 TMR5GE_bit          _BIT_ACCESS(T5GCON,7)
// PIE3<TMR5GIE>
extern volatile __bit                   TMR5GIE             __at(0x7D1F);	// @ (0xFA3 * 8 + 7)
#define                                 TMR5GIE_bit         _BIT_ACCESS(PIE3,7)
// PIR3<TMR5GIF>
extern volatile __bit                   TMR5GIF             __at(0x7D27);	// @ (0xFA4 * 8 + 7)
#define                                 TMR5GIF_bit         _BIT_ACCESS(PIR3,7)
// IPR3<TMR5GIP>
extern volatile __bit                   TMR5GIP             __at(0x7D2F);	// @ (0xFA5 * 8 + 7)
#define                                 TMR5GIP_bit         _BIT_ACCESS(IPR3,7)
// PIE5<TMR5IE>
extern volatile __bit                   TMR5IE              __at(0x7DC9);	// @ (0xFB9 * 8 + 1)
#define                                 TMR5IE_bit          _BIT_ACCESS(PIE5,1)
// PIR5<TMR5IF>
extern volatile __bit                   TMR5IF              __at(0x7DD1);	// @ (0xFBA * 8 + 1)
#define                                 TMR5IF_bit          _BIT_ACCESS(PIR5,1)
// IPR5<TMR5IP>
extern volatile __bit                   TMR5IP              __at(0x7E91);	// @ (0xFD2 * 8 + 1)
#define                                 TMR5IP_bit          _BIT_ACCESS(IPR5,1)
// PMD2<TMR5MD>
extern volatile __bit                   TMR5MD              __at(0x78BB);	// @ (0xF17 * 8 + 3)
#define                                 TMR5MD_bit          _BIT_ACCESS(PMD2,3)
// T5CON<TMR5ON>
extern volatile __bit                   TMR5ON              __at(0x7898);	// @ (0xF13 * 8 + 0)
#define                                 TMR5ON_bit          _BIT_ACCESS(T5CON,0)
// PIE5<TMR6IE>
extern volatile __bit                   TMR6IE              __at(0x7DCA);	// @ (0xFB9 * 8 + 2)
#define                                 TMR6IE_bit          _BIT_ACCESS(PIE5,2)
// PIR5<TMR6IF>
extern volatile __bit                   TMR6IF              __at(0x7DD2);	// @ (0xFBA * 8 + 2)
#define                                 TMR6IF_bit          _BIT_ACCESS(PIR5,2)
// IPR5<TMR6IP>
extern volatile __bit                   TMR6IP              __at(0x7E92);	// @ (0xFD2 * 8 + 2)
#define                                 TMR6IP_bit          _BIT_ACCESS(IPR5,2)
// PMD2<TMR6MD>
extern volatile __bit                   TMR6MD              __at(0x78BC);	// @ (0xF17 * 8 + 4)
#define                                 TMR6MD_bit          _BIT_ACCESS(PMD2,4)
// T6CON<TMR6ON>
extern volatile __bit                   TMR6ON              __at(0x79CA);	// @ (0xF39 * 8 + 2)
#define                                 TMR6ON_bit          _BIT_ACCESS(T6CON,2)
// PIE5<TMR8IE>
extern volatile __bit                   TMR8IE              __at(0x7DCC);	// @ (0xFB9 * 8 + 4)
#define                                 TMR8IE_bit          _BIT_ACCESS(PIE5,4)
// PIR5<TMR8IF>
extern volatile __bit                   TMR8IF              __at(0x7DD4);	// @ (0xFBA * 8 + 4)
#define                                 TMR8IF_bit          _BIT_ACCESS(PIR5,4)
// IPR5<TMR8IP>
extern volatile __bit                   TMR8IP              __at(0x7E94);	// @ (0xFD2 * 8 + 4)
#define                                 TMR8IP_bit          _BIT_ACCESS(IPR5,4)
// PMD2<TMR8MD>
extern volatile __bit                   TMR8MD              __at(0x78BE);	// @ (0xF17 * 8 + 6)
#define                                 TMR8MD_bit          _BIT_ACCESS(PMD2,6)
// T8CON<TMR8ON>
extern volatile __bit                   TMR8ON              __at(0x79B2);	// @ (0xF36 * 8 + 2)
#define                                 TMR8ON_bit          _BIT_ACCESS(T8CON,2)
// RCON<TO>
extern volatile __bit                   TO                  __at(0x7E83);	// @ (0xFD0 * 8 + 3)
#define                                 TO_bit              _BIT_ACCESS(RCON,3)
// ADCON1<TRIGSEL0>
extern volatile __bit                   TRIGSEL0            __at(0x7E0E);	// @ (0xFC1 * 8 + 6)
#define                                 TRIGSEL0_bit        _BIT_ACCESS(ADCON1,6)
// ADCON1<TRIGSEL1>
extern volatile __bit                   TRIGSEL1            __at(0x7E0F);	// @ (0xFC1 * 8 + 7)
#define                                 TRIGSEL1_bit        _BIT_ACCESS(ADCON1,7)
// TRISA<TRISA0>
extern volatile __bit                   TRISA0              __at(0x7C90);	// @ (0xF92 * 8 + 0)
#define                                 TRISA0_bit          _BIT_ACCESS(TRISA,0)
// TRISA<TRISA1>
extern volatile __bit                   TRISA1              __at(0x7C91);	// @ (0xF92 * 8 + 1)
#define                                 TRISA1_bit          _BIT_ACCESS(TRISA,1)
// TRISA<TRISA2>
extern volatile __bit                   TRISA2              __at(0x7C92);	// @ (0xF92 * 8 + 2)
#define                                 TRISA2_bit          _BIT_ACCESS(TRISA,2)
// TRISA<TRISA3>
extern volatile __bit                   TRISA3              __at(0x7C93);	// @ (0xF92 * 8 + 3)
#define                                 TRISA3_bit          _BIT_ACCESS(TRISA,3)
// TRISA<TRISA4>
extern volatile __bit                   TRISA4              __at(0x7C94);	// @ (0xF92 * 8 + 4)
#define                                 TRISA4_bit          _BIT_ACCESS(TRISA,4)
// TRISA<TRISA5>
extern volatile __bit                   TRISA5              __at(0x7C95);	// @ (0xF92 * 8 + 5)
#define                                 TRISA5_bit          _BIT_ACCESS(TRISA,5)
// TRISA<TRISA6>
extern volatile __bit                   TRISA6              __at(0x7C96);	// @ (0xF92 * 8 + 6)
#define                                 TRISA6_bit          _BIT_ACCESS(TRISA,6)
// TRISA<TRISA7>
extern volatile __bit                   TRISA7              __at(0x7C97);	// @ (0xF92 * 8 + 7)
#define                                 TRISA7_bit          _BIT_ACCESS(TRISA,7)
// TRISB<TRISB0>
extern volatile __bit                   TRISB0              __at(0x7C98);	// @ (0xF93 * 8 + 0)
#define                                 TRISB0_bit          _BIT_ACCESS(TRISB,0)
// TRISB<TRISB1>
extern volatile __bit                   TRISB1              __at(0x7C99);	// @ (0xF93 * 8 + 1)
#define                                 TRISB1_bit          _BIT_ACCESS(TRISB,1)
// TRISB<TRISB2>
extern volatile __bit                   TRISB2              __at(0x7C9A);	// @ (0xF93 * 8 + 2)
#define                                 TRISB2_bit          _BIT_ACCESS(TRISB,2)
// TRISB<TRISB3>
extern volatile __bit                   TRISB3              __at(0x7C9B);	// @ (0xF93 * 8 + 3)
#define                                 TRISB3_bit          _BIT_ACCESS(TRISB,3)
// TRISB<TRISB4>
extern volatile __bit                   TRISB4              __at(0x7C9C);	// @ (0xF93 * 8 + 4)
#define                                 TRISB4_bit          _BIT_ACCESS(TRISB,4)
// TRISB<TRISB5>
extern volatile __bit                   TRISB5              __at(0x7C9D);	// @ (0xF93 * 8 + 5)
#define                                 TRISB5_bit          _BIT_ACCESS(TRISB,5)
// TRISB<TRISB6>
extern volatile __bit                   TRISB6              __at(0x7C9E);	// @ (0xF93 * 8 + 6)
#define                                 TRISB6_bit          _BIT_ACCESS(TRISB,6)
// TRISB<TRISB7>
extern volatile __bit                   TRISB7              __at(0x7C9F);	// @ (0xF93 * 8 + 7)
#define                                 TRISB7_bit          _BIT_ACCESS(TRISB,7)
// TRISC<TRISC0>
extern volatile __bit                   TRISC0              __at(0x7CA0);	// @ (0xF94 * 8 + 0)
#define                                 TRISC0_bit          _BIT_ACCESS(TRISC,0)
// TRISC<TRISC1>
extern volatile __bit                   TRISC1              __at(0x7CA1);	// @ (0xF94 * 8 + 1)
#define                                 TRISC1_bit          _BIT_ACCESS(TRISC,1)
// TRISC<TRISC2>
extern volatile __bit                   TRISC2              __at(0x7CA2);	// @ (0xF94 * 8 + 2)
#define                                 TRISC2_bit          _BIT_ACCESS(TRISC,2)
// TRISC<TRISC3>
extern volatile __bit                   TRISC3              __at(0x7CA3);	// @ (0xF94 * 8 + 3)
#define                                 TRISC3_bit          _BIT_ACCESS(TRISC,3)
// TRISC<TRISC4>
extern volatile __bit                   TRISC4              __at(0x7CA4);	// @ (0xF94 * 8 + 4)
#define                                 TRISC4_bit          _BIT_ACCESS(TRISC,4)
// TRISC<TRISC5>
extern volatile __bit                   TRISC5              __at(0x7CA5);	// @ (0xF94 * 8 + 5)
#define                                 TRISC5_bit          _BIT_ACCESS(TRISC,5)
// TRISC<TRISC6>
extern volatile __bit                   TRISC6              __at(0x7CA6);	// @ (0xF94 * 8 + 6)
#define                                 TRISC6_bit          _BIT_ACCESS(TRISC,6)
// TRISC<TRISC7>
extern volatile __bit                   TRISC7              __at(0x7CA7);	// @ (0xF94 * 8 + 7)
#define                                 TRISC7_bit          _BIT_ACCESS(TRISC,7)
// TRISD<TRISD0>
extern volatile __bit                   TRISD0              __at(0x7CA8);	// @ (0xF95 * 8 + 0)
#define                                 TRISD0_bit          _BIT_ACCESS(TRISD,0)
// TRISD<TRISD1>
extern volatile __bit                   TRISD1              __at(0x7CA9);	// @ (0xF95 * 8 + 1)
#define                                 TRISD1_bit          _BIT_ACCESS(TRISD,1)
// TRISD<TRISD2>
extern volatile __bit                   TRISD2              __at(0x7CAA);	// @ (0xF95 * 8 + 2)
#define                                 TRISD2_bit          _BIT_ACCESS(TRISD,2)
// TRISD<TRISD3>
extern volatile __bit                   TRISD3              __at(0x7CAB);	// @ (0xF95 * 8 + 3)
#define                                 TRISD3_bit          _BIT_ACCESS(TRISD,3)
// TRISD<TRISD4>
extern volatile __bit                   TRISD4              __at(0x7CAC);	// @ (0xF95 * 8 + 4)
#define                                 TRISD4_bit          _BIT_ACCESS(TRISD,4)
// TRISD<TRISD5>
extern volatile __bit                   TRISD5              __at(0x7CAD);	// @ (0xF95 * 8 + 5)
#define                                 TRISD5_bit          _BIT_ACCESS(TRISD,5)
// TRISD<TRISD6>
extern volatile __bit                   TRISD6              __at(0x7CAE);	// @ (0xF95 * 8 + 6)
#define                                 TRISD6_bit          _BIT_ACCESS(TRISD,6)
// TRISD<TRISD7>
extern volatile __bit                   TRISD7              __at(0x7CAF);	// @ (0xF95 * 8 + 7)
#define                                 TRISD7_bit          _BIT_ACCESS(TRISD,7)
// TRISE<TRISE0>
extern volatile __bit                   TRISE0              __at(0x7CB0);	// @ (0xF96 * 8 + 0)
#define                                 TRISE0_bit          _BIT_ACCESS(TRISE,0)
// TRISE<TRISE1>
extern volatile __bit                   TRISE1              __at(0x7CB1);	// @ (0xF96 * 8 + 1)
#define                                 TRISE1_bit          _BIT_ACCESS(TRISE,1)
// TRISE<TRISE2>
extern volatile __bit                   TRISE2              __at(0x7CB2);	// @ (0xF96 * 8 + 2)
#define                                 TRISE2_bit          _BIT_ACCESS(TRISE,2)
// TRISE<TRISE3>
extern volatile __bit                   TRISE3              __at(0x7CB3);	// @ (0xF96 * 8 + 3)
#define                                 TRISE3_bit          _BIT_ACCESS(TRISE,3)
// TRISE<TRISE4>
extern volatile __bit                   TRISE4              __at(0x7CB4);	// @ (0xF96 * 8 + 4)
#define                                 TRISE4_bit          _BIT_ACCESS(TRISE,4)
// TRISE<TRISE5>
extern volatile __bit                   TRISE5              __at(0x7CB5);	// @ (0xF96 * 8 + 5)
#define                                 TRISE5_bit          _BIT_ACCESS(TRISE,5)
// TRISE<TRISE6>
extern volatile __bit                   TRISE6              __at(0x7CB6);	// @ (0xF96 * 8 + 6)
#define                                 TRISE6_bit          _BIT_ACCESS(TRISE,6)
// TRISE<TRISE7>
extern volatile __bit                   TRISE7              __at(0x7CB7);	// @ (0xF96 * 8 + 7)
#define                                 TRISE7_bit          _BIT_ACCESS(TRISE,7)
// TRISF<TRISF1>
extern volatile __bit                   TRISF1              __at(0x7CB9);	// @ (0xF97 * 8 + 1)
#define                                 TRISF1_bit          _BIT_ACCESS(TRISF,1)
// TRISF<TRISF2>
extern volatile __bit                   TRISF2              __at(0x7CBA);	// @ (0xF97 * 8 + 2)
#define                                 TRISF2_bit          _BIT_ACCESS(TRISF,2)
// TRISF<TRISF3>
extern volatile __bit                   TRISF3              __at(0x7CBB);	// @ (0xF97 * 8 + 3)
#define                                 TRISF3_bit          _BIT_ACCESS(TRISF,3)
// TRISF<TRISF4>
extern volatile __bit                   TRISF4              __at(0x7CBC);	// @ (0xF97 * 8 + 4)
#define                                 TRISF4_bit          _BIT_ACCESS(TRISF,4)
// TRISF<TRISF5>
extern volatile __bit                   TRISF5              __at(0x7CBD);	// @ (0xF97 * 8 + 5)
#define                                 TRISF5_bit          _BIT_ACCESS(TRISF,5)
// TRISF<TRISF6>
extern volatile __bit                   TRISF6              __at(0x7CBE);	// @ (0xF97 * 8 + 6)
#define                                 TRISF6_bit          _BIT_ACCESS(TRISF,6)
// TRISF<TRISF7>
extern volatile __bit                   TRISF7              __at(0x7CBF);	// @ (0xF97 * 8 + 7)
#define                                 TRISF7_bit          _BIT_ACCESS(TRISF,7)
// TRISG<TRISG0>
extern volatile __bit                   TRISG0              __at(0x7CC0);	// @ (0xF98 * 8 + 0)
#define                                 TRISG0_bit          _BIT_ACCESS(TRISG,0)
// TRISG<TRISG1>
extern volatile __bit                   TRISG1              __at(0x7CC1);	// @ (0xF98 * 8 + 1)
#define                                 TRISG1_bit          _BIT_ACCESS(TRISG,1)
// TRISG<TRISG2>
extern volatile __bit                   TRISG2              __at(0x7CC2);	// @ (0xF98 * 8 + 2)
#define                                 TRISG2_bit          _BIT_ACCESS(TRISG,2)
// TRISG<TRISG3>
extern volatile __bit                   TRISG3              __at(0x7CC3);	// @ (0xF98 * 8 + 3)
#define                                 TRISG3_bit          _BIT_ACCESS(TRISG,3)
// TRISG<TRISG4>
extern volatile __bit                   TRISG4              __at(0x7CC4);	// @ (0xF98 * 8 + 4)
#define                                 TRISG4_bit          _BIT_ACCESS(TRISG,4)
// TRISH<TRISH0>
extern volatile __bit                   TRISH0              __at(0x7CC8);	// @ (0xF99 * 8 + 0)
#define                                 TRISH0_bit          _BIT_ACCESS(TRISH,0)
// TRISH<TRISH1>
extern volatile __bit                   TRISH1              __at(0x7CC9);	// @ (0xF99 * 8 + 1)
#define                                 TRISH1_bit          _BIT_ACCESS(TRISH,1)
// TRISH<TRISH2>
extern volatile __bit                   TRISH2              __at(0x7CCA);	// @ (0xF99 * 8 + 2)
#define                                 TRISH2_bit          _BIT_ACCESS(TRISH,2)
// TRISH<TRISH3>
extern volatile __bit                   TRISH3              __at(0x7CCB);	// @ (0xF99 * 8 + 3)
#define                                 TRISH3_bit          _BIT_ACCESS(TRISH,3)
// TRISH<TRISH4>
extern volatile __bit                   TRISH4              __at(0x7CCC);	// @ (0xF99 * 8 + 4)
#define                                 TRISH4_bit          _BIT_ACCESS(TRISH,4)
// TRISH<TRISH5>
extern volatile __bit                   TRISH5              __at(0x7CCD);	// @ (0xF99 * 8 + 5)
#define                                 TRISH5_bit          _BIT_ACCESS(TRISH,5)
// TRISH<TRISH6>
extern volatile __bit                   TRISH6              __at(0x7CCE);	// @ (0xF99 * 8 + 6)
#define                                 TRISH6_bit          _BIT_ACCESS(TRISH,6)
// TRISH<TRISH7>
extern volatile __bit                   TRISH7              __at(0x7CCF);	// @ (0xF99 * 8 + 7)
#define                                 TRISH7_bit          _BIT_ACCESS(TRISH,7)
// TRISJ<TRISJ0>
extern volatile __bit                   TRISJ0              __at(0x7CD0);	// @ (0xF9A * 8 + 0)
#define                                 TRISJ0_bit          _BIT_ACCESS(TRISJ,0)
// TRISJ<TRISJ1>
extern volatile __bit                   TRISJ1              __at(0x7CD1);	// @ (0xF9A * 8 + 1)
#define                                 TRISJ1_bit          _BIT_ACCESS(TRISJ,1)
// TRISJ<TRISJ2>
extern volatile __bit                   TRISJ2              __at(0x7CD2);	// @ (0xF9A * 8 + 2)
#define                                 TRISJ2_bit          _BIT_ACCESS(TRISJ,2)
// TRISJ<TRISJ3>
extern volatile __bit                   TRISJ3              __at(0x7CD3);	// @ (0xF9A * 8 + 3)
#define                                 TRISJ3_bit          _BIT_ACCESS(TRISJ,3)
// TRISJ<TRISJ4>
extern volatile __bit                   TRISJ4              __at(0x7CD4);	// @ (0xF9A * 8 + 4)
#define                                 TRISJ4_bit          _BIT_ACCESS(TRISJ,4)
// TRISJ<TRISJ5>
extern volatile __bit                   TRISJ5              __at(0x7CD5);	// @ (0xF9A * 8 + 5)
#define                                 TRISJ5_bit          _BIT_ACCESS(TRISJ,5)
// TRISJ<TRISJ6>
extern volatile __bit                   TRISJ6              __at(0x7CD6);	// @ (0xF9A * 8 + 6)
#define                                 TRISJ6_bit          _BIT_ACCESS(TRISJ,6)
// TRISJ<TRISJ7>
extern volatile __bit                   TRISJ7              __at(0x7CD7);	// @ (0xF9A * 8 + 7)
#define                                 TRISJ7_bit          _BIT_ACCESS(TRISJ,7)
// TXSTA1<TRMT1>
extern volatile __bit                   TRMT1               __at(0x7D61);	// @ (0xFAC * 8 + 1)
#define                                 TRMT1_bit           _BIT_ACCESS(TXSTA1,1)
// TXSTA2<TRMT2>
extern volatile __bit                   TRMT2               __at(0x7909);	// @ (0xF21 * 8 + 1)
#define                                 TRMT2_bit           _BIT_ACCESS(TXSTA2,1)
// OSCTUNE<TUN0>
extern volatile __bit                   TUN0                __at(0x7CD8);	// @ (0xF9B * 8 + 0)
#define                                 TUN0_bit            _BIT_ACCESS(OSCTUNE,0)
// OSCTUNE<TUN1>
extern volatile __bit                   TUN1                __at(0x7CD9);	// @ (0xF9B * 8 + 1)
#define                                 TUN1_bit            _BIT_ACCESS(OSCTUNE,1)
// OSCTUNE<TUN2>
extern volatile __bit                   TUN2                __at(0x7CDA);	// @ (0xF9B * 8 + 2)
#define                                 TUN2_bit            _BIT_ACCESS(OSCTUNE,2)
// OSCTUNE<TUN3>
extern volatile __bit                   TUN3                __at(0x7CDB);	// @ (0xF9B * 8 + 3)
#define                                 TUN3_bit            _BIT_ACCESS(OSCTUNE,3)
// OSCTUNE<TUN4>
extern volatile __bit                   TUN4                __at(0x7CDC);	// @ (0xF9B * 8 + 4)
#define                                 TUN4_bit            _BIT_ACCESS(OSCTUNE,4)
// OSCTUNE<TUN5>
extern volatile __bit                   TUN5                __at(0x7CDD);	// @ (0xF9B * 8 + 5)
#define                                 TUN5_bit            _BIT_ACCESS(OSCTUNE,5)
// PORTC<TX1>
extern volatile __bit                   TX1                 __at(0x7C16);	// @ (0xF82 * 8 + 6)
#define                                 TX1_bit             _BIT_ACCESS(PORTC,6)
// PIE1<TX1IE>
extern volatile __bit                   TX1IE               __at(0x7CEC);	// @ (0xF9D * 8 + 4)
#define                                 TX1IE_bit           _BIT_ACCESS(PIE1,4)
// PIR1<TX1IF>
extern volatile __bit                   TX1IF               __at(0x7CF4);	// @ (0xF9E * 8 + 4)
#define                                 TX1IF_bit           _BIT_ACCESS(PIR1,4)
// IPR1<TX1IP>
extern volatile __bit                   TX1IP               __at(0x7CFC);	// @ (0xF9F * 8 + 4)
#define                                 TX1IP_bit           _BIT_ACCESS(IPR1,4)
// PORTG<TX2>
extern volatile __bit                   TX2                 __at(0x7C31);	// @ (0xF86 * 8 + 1)
#define                                 TX2_bit             _BIT_ACCESS(PORTG,1)
// PIE3<TX2IE>
extern volatile __bit                   TX2IE               __at(0x7D1C);	// @ (0xFA3 * 8 + 4)
#define                                 TX2IE_bit           _BIT_ACCESS(PIE3,4)
// PIR3<TX2IF>
extern volatile __bit                   TX2IF               __at(0x7D24);	// @ (0xFA4 * 8 + 4)
#define                                 TX2IF_bit           _BIT_ACCESS(PIR3,4)
// IPR3<TX2IP>
extern volatile __bit                   TX2IP               __at(0x7D2C);	// @ (0xFA5 * 8 + 4)
#define                                 TX2IP_bit           _BIT_ACCESS(IPR3,4)
// TXSTA1<TX8_9>
extern volatile __bit                   TX8_9               __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 TX8_9_bit           _BIT_ACCESS(TXSTA1,6)
// TXSTA2<TX8_92>
extern volatile __bit                   TX8_92              __at(0x790E);	// @ (0xF21 * 8 + 6)
#define                                 TX8_92_bit          _BIT_ACCESS(TXSTA2,6)
// TXSTA1<TX91>
extern volatile __bit                   TX91                __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 TX91_bit            _BIT_ACCESS(TXSTA1,6)
// TXSTA2<TX92>
extern volatile __bit                   TX92                __at(0x790E);	// @ (0xF21 * 8 + 6)
#define                                 TX92_bit            _BIT_ACCESS(TXSTA2,6)
// TXSTA1<TX9D1>
extern volatile __bit                   TX9D1               __at(0x7D60);	// @ (0xFAC * 8 + 0)
#define                                 TX9D1_bit           _BIT_ACCESS(TXSTA1,0)
// TXSTA2<TX9D2>
extern volatile __bit                   TX9D2               __at(0x7908);	// @ (0xF21 * 8 + 0)
#define                                 TX9D2_bit           _BIT_ACCESS(TXSTA2,0)
// PIE3<TXB0IE>
extern volatile __bit                   TXB0IE              __at(0x7D1A);	// @ (0xFA3 * 8 + 2)
#define                                 TXB0IE_bit          _BIT_ACCESS(PIE3,2)
// PIE3<TXB1IE>
extern volatile __bit                   TXB1IE              __at(0x7D1B);	// @ (0xFA3 * 8 + 3)
#define                                 TXB1IE_bit          _BIT_ACCESS(PIE3,3)
// PIE3<TXB2IE>
extern volatile __bit                   TXB2IE              __at(0x7D1C);	// @ (0xFA3 * 8 + 4)
#define                                 TXB2IE_bit          _BIT_ACCESS(PIE3,4)
// PIE3<TXBNIE>
extern volatile __bit                   TXBNIE              __at(0x7D1C);	// @ (0xFA3 * 8 + 4)
#define                                 TXBNIE_bit          _BIT_ACCESS(PIE3,4)
// PIR3<TXBNIF>
extern volatile __bit                   TXBNIF              __at(0x7D24);	// @ (0xFA4 * 8 + 4)
#define                                 TXBNIF_bit          _BIT_ACCESS(PIR3,4)
// IPR3<TXBNIP>
extern volatile __bit                   TXBNIP              __at(0x7D2C);	// @ (0xFA5 * 8 + 4)
#define                                 TXBNIP_bit          _BIT_ACCESS(IPR3,4)
// BAUDCON1<TXCKP1>
extern volatile __bit                   TXCKP1              __at(0x7B2C);	// @ (0xF65 * 8 + 4)
#define                                 TXCKP1_bit          _BIT_ACCESS(BAUDCON1,4)
// BAUDCON2<TXCKP2>
extern volatile __bit                   TXCKP2              __at(0x7904);	// @ (0xF20 * 8 + 4)
#define                                 TXCKP2_bit          _BIT_ACCESS(BAUDCON2,4)
// TXSTA1<TXD8>
extern volatile __bit                   TXD8                __at(0x7D60);	// @ (0xFAC * 8 + 0)
#define                                 TXD8_bit            _BIT_ACCESS(TXSTA1,0)
// TXSTA2<TXD82>
extern volatile __bit                   TXD82               __at(0x7908);	// @ (0xF21 * 8 + 0)
#define                                 TXD82_bit           _BIT_ACCESS(TXSTA2,0)
// TXSTA1<TXEN1>
extern volatile __bit                   TXEN1               __at(0x7D65);	// @ (0xFAC * 8 + 5)
#define                                 TXEN1_bit           _BIT_ACCESS(TXSTA1,5)
// TXSTA2<TXEN2>
extern volatile __bit                   TXEN2               __at(0x790D);	// @ (0xF21 * 8 + 5)
#define                                 TXEN2_bit           _BIT_ACCESS(TXSTA2,5)
// PIE1<TXIE>
extern volatile __bit                   TXIE                __at(0x7CEC);	// @ (0xF9D * 8 + 4)
#define                                 TXIE_bit            _BIT_ACCESS(PIE1,4)
// PIR1<TXIF>
extern volatile __bit                   TXIF                __at(0x7CF4);	// @ (0xF9E * 8 + 4)
#define                                 TXIF_bit            _BIT_ACCESS(PIR1,4)
// IPR1<TXIP>
extern volatile __bit                   TXIP                __at(0x7CFC);	// @ (0xF9F * 8 + 4)
#define                                 TXIP_bit            _BIT_ACCESS(IPR1,4)
// ODCON3<U1OD>
extern volatile __bit                   U1OD                __at(0x793E);	// @ (0xF27 * 8 + 6)
#define                                 U1OD_bit            _BIT_ACCESS(ODCON3,6)
// ODCON3<U2OD>
extern volatile __bit                   U2OD                __at(0x793F);	// @ (0xF27 * 8 + 7)
#define                                 U2OD_bit            _BIT_ACCESS(ODCON3,7)
// SSP1STAT<UA1>
extern volatile __bit                   UA1                 __at(0x7E39);	// @ (0xFC7 * 8 + 1)
#define                                 UA1_bit             _BIT_ACCESS(SSP1STAT,1)
// SSP2STAT<UA2>
extern volatile __bit                   UA2                 __at(0x7801);	// @ (0xF00 * 8 + 1)
#define                                 UA2_bit             _BIT_ACCESS(SSP2STAT,1)
// PMD0<UART1MD>
extern volatile __bit                   UART1MD             __at(0x78CB);	// @ (0xF19 * 8 + 3)
#define                                 UART1MD_bit         _BIT_ACCESS(PMD0,3)
// PMD0<UART2MD>
extern volatile __bit                   UART2MD             __at(0x78CC);	// @ (0xF19 * 8 + 4)
#define                                 UART2MD_bit         _BIT_ACCESS(PMD0,4)
// PORTJ<UB>
extern volatile __bit                   UB                  __at(0x7C47);	// @ (0xF88 * 8 + 7)
#define                                 UB_bit              _BIT_ACCESS(PORTJ,7)
// WDTCON<ULPEN>
extern volatile __bit                   ULPEN               __at(0x7E8A);	// @ (0xFD1 * 8 + 2)
#define                                 ULPEN_bit           _BIT_ACCESS(WDTCON,2)
// WDTCON<ULPLVL>
extern volatile __bit                   ULPLVL              __at(0x7E8D);	// @ (0xFD1 * 8 + 5)
#define                                 ULPLVL_bit          _BIT_ACCESS(WDTCON,5)
// WDTCON<ULPSINK>
extern volatile __bit                   ULPSINK             __at(0x7E89);	// @ (0xFD1 * 8 + 1)
#define                                 ULPSINK_bit         _BIT_ACCESS(WDTCON,1)
// PORTA<ULPWUIN>
extern volatile __bit                   ULPWUIN             __at(0x7C00);	// @ (0xF80 * 8 + 0)
#define                                 ULPWUIN_bit         _BIT_ACCESS(PORTA,0)
// ADCON1<VCFG0>
extern volatile __bit                   VCFG0               __at(0x7E0C);	// @ (0xFC1 * 8 + 4)
#define                                 VCFG0_bit           _BIT_ACCESS(ADCON1,4)
// ADCON1<VCFG01>
extern volatile __bit                   VCFG01              __at(0x7E0C);	// @ (0xFC1 * 8 + 4)
#define                                 VCFG01_bit          _BIT_ACCESS(ADCON1,4)
// ADCON1<VCFG1>
extern volatile __bit                   VCFG1               __at(0x7E0D);	// @ (0xFC1 * 8 + 5)
#define                                 VCFG1_bit           _BIT_ACCESS(ADCON1,5)
// ADCON1<VCFG11>
extern volatile __bit                   VCFG11              __at(0x7E0D);	// @ (0xFC1 * 8 + 5)
#define                                 VCFG11_bit          _BIT_ACCESS(ADCON1,5)
// HLVDCON<VDIRMAG>
extern volatile __bit                   VDIRMAG             __at(0x7D47);	// @ (0xFA8 * 8 + 7)
#define                                 VDIRMAG_bit         _BIT_ACCESS(HLVDCON,7)
// LCDREF<VLCD1PE>
extern volatile __bit                   VLCD1PE             __at(0x77E8);	// @ (0xEFD * 8 + 0)
#define                                 VLCD1PE_bit         _BIT_ACCESS(LCDREF,0)
// LCDREF<VLCD2PE>
extern volatile __bit                   VLCD2PE             __at(0x77E9);	// @ (0xEFD * 8 + 1)
#define                                 VLCD2PE_bit         _BIT_ACCESS(LCDREF,1)
// LCDREF<VLCD3PE>
extern volatile __bit                   VLCD3PE             __at(0x77EA);	// @ (0xEFD * 8 + 2)
#define                                 VLCD3PE_bit         _BIT_ACCESS(LCDREF,2)
// ADCON1<VNCFG>
extern volatile __bit                   VNCFG               __at(0x7E0B);	// @ (0xFC1 * 8 + 3)
#define                                 VNCFG_bit           _BIT_ACCESS(ADCON1,3)
// PORTA<VREF_MINUS>
extern volatile __bit                   VREF_MINUS          __at(0x7C02);	// @ (0xF80 * 8 + 2)
#define                                 VREF_MINUS_bit      _BIT_ACCESS(PORTA,2)
// PORTA<VREF_PLUS>
extern volatile __bit                   VREF_PLUS           __at(0x7C03);	// @ (0xF80 * 8 + 3)
#define                                 VREF_PLUS_bit       _BIT_ACCESS(PORTA,3)
// BAUDCON1<W4E>
extern volatile __bit                   W4E                 __at(0x7B29);	// @ (0xF65 * 8 + 1)
#define                                 W4E_bit             _BIT_ACCESS(BAUDCON1,1)
// LCDPS<WA>
extern volatile __bit                   WA                  __at(0x77AC);	// @ (0xEF5 * 8 + 4)
#define                                 WA_bit              _BIT_ACCESS(LCDPS,4)
// PR2<WAIT0>
extern volatile __bit                   WAIT0               __at(0x7E5C);	// @ (0xFCB * 8 + 4)
#define                                 WAIT0_bit           _BIT_ACCESS(PR2,4)
// PR2<WAIT1>
extern volatile __bit                   WAIT1               __at(0x7E5D);	// @ (0xFCB * 8 + 5)
#define                                 WAIT1_bit           _BIT_ACCESS(PR2,5)
// RTCVALH<WAITB0>
extern volatile __bit                   WAITB0              __at(0x7AEE);	// @ (0xF5D * 8 + 6)
#define                                 WAITB0_bit          _BIT_ACCESS(RTCVALH,6)
// RTCVALH<WAITB1>
extern volatile __bit                   WAITB1              __at(0x7AEF);	// @ (0xF5D * 8 + 7)
#define                                 WAITB1_bit          _BIT_ACCESS(RTCVALH,7)
// RTCVALH<WAITE0>
extern volatile __bit                   WAITE0              __at(0x7AE8);	// @ (0xF5D * 8 + 0)
#define                                 WAITE0_bit          _BIT_ACCESS(RTCVALH,0)
// RTCVALH<WAITE1>
extern volatile __bit                   WAITE1              __at(0x7AE9);	// @ (0xF5D * 8 + 1)
#define                                 WAITE1_bit          _BIT_ACCESS(RTCVALH,1)
// RTCVALH<WAITM0>
extern volatile __bit                   WAITM0              __at(0x7AEA);	// @ (0xF5D * 8 + 2)
#define                                 WAITM0_bit          _BIT_ACCESS(RTCVALH,2)
// RTCVALH<WAITM1>
extern volatile __bit                   WAITM1              __at(0x7AEB);	// @ (0xF5D * 8 + 3)
#define                                 WAITM1_bit          _BIT_ACCESS(RTCVALH,3)
// RTCVALH<WAITM2>
extern volatile __bit                   WAITM2              __at(0x7AEC);	// @ (0xF5D * 8 + 4)
#define                                 WAITM2_bit          _BIT_ACCESS(RTCVALH,4)
// RTCVALH<WAITM3>
extern volatile __bit                   WAITM3              __at(0x7AED);	// @ (0xF5D * 8 + 5)
#define                                 WAITM3_bit          _BIT_ACCESS(RTCVALH,5)
// SSP1CON1<WCOL1>
extern volatile __bit                   WCOL1               __at(0x7E37);	// @ (0xFC6 * 8 + 7)
#define                                 WCOL1_bit           _BIT_ACCESS(SSP1CON1,7)
// SSP2CON1<WCOL2>
extern volatile __bit                   WCOL2               __at(0x77FF);	// @ (0xEFF * 8 + 7)
#define                                 WCOL2_bit           _BIT_ACCESS(SSP2CON1,7)
// LCDCON<WERR>
extern volatile __bit                   WERR                __at(0x77A5);	// @ (0xEF4 * 8 + 5)
#define                                 WERR_bit            _BIT_ACCESS(LCDCON,5)
// LCDPS<WFT>
extern volatile __bit                   WFT                 __at(0x77AF);	// @ (0xEF5 * 8 + 7)
#define                                 WFT_bit             _BIT_ACCESS(LCDPS,7)
// PR2<WM0>
extern volatile __bit                   WM0                 __at(0x7E58);	// @ (0xFCB * 8 + 0)
#define                                 WM0_bit             _BIT_ACCESS(PR2,0)
// PR2<WM1>
extern volatile __bit                   WM1                 __at(0x7E59);	// @ (0xFCB * 8 + 1)
#define                                 WM1_bit             _BIT_ACCESS(PR2,1)
// PORTE<WRE>
extern volatile __bit                   WRE                 __at(0x7C21);	// @ (0xF84 * 8 + 1)
#define                                 WRE_bit             _BIT_ACCESS(PORTE,1)
// EECON1<WREN>
extern volatile __bit                   WREN                __at(0x7BFA);	// @ (0xF7F * 8 + 2)
#define                                 WREN_bit            _BIT_ACCESS(EECON1,2)
// EECON1<WRERR>
extern volatile __bit                   WRERR               __at(0x7BFB);	// @ (0xF7F * 8 + 3)
#define                                 WRERR_bit           _BIT_ACCESS(EECON1,3)
// PORTJ<WRH>
extern volatile __bit                   WRH                 __at(0x7C43);	// @ (0xF88 * 8 + 3)
#define                                 WRH_bit             _BIT_ACCESS(PORTJ,3)
// PORTJ<WRL>
extern volatile __bit                   WRL                 __at(0x7C42);	// @ (0xF88 * 8 + 2)
#define                                 WRL_bit             _BIT_ACCESS(PORTJ,2)
// BAUDCON1<WUE1>
extern volatile __bit                   WUE1                __at(0x7B29);	// @ (0xF65 * 8 + 1)
#define                                 WUE1_bit            _BIT_ACCESS(BAUDCON1,1)
// BAUDCON2<WUE2>
extern volatile __bit                   WUE2                __at(0x7901);	// @ (0xF20 * 8 + 1)
#define                                 WUE2_bit            _BIT_ACCESS(BAUDCON2,1)
// STATUS<ZERO>
extern volatile __bit                   ZERO                __at(0x7EC2);	// @ (0xFD8 * 8 + 2)
#define                                 ZERO_bit            _BIT_ACCESS(STATUS,2)
// SSP2STAT<nA2>
extern volatile __bit                   nA2                 __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 nA2_bit             _BIT_ACCESS(SSP2STAT,5)
// SSP2STAT<nADDRESS2>
extern volatile __bit                   nADDRESS2           __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 nADDRESS2_bit       _BIT_ACCESS(SSP2STAT,5)
// RCON<nBOR>
extern volatile __bit                   nBOR                __at(0x7E80);	// @ (0xFD0 * 8 + 0)
#define                                 nBOR_bit            _BIT_ACCESS(RCON,0)
// RCON<nCM>
extern volatile __bit                   nCM                 __at(0x7E85);	// @ (0xFD0 * 8 + 5)
#define                                 nCM_bit             _BIT_ACCESS(RCON,5)
// ADCON0<nDONE>
extern volatile __bit                   nDONE               __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 nDONE_bit           _BIT_ACCESS(ADCON0,1)
// RCON<nPD>
extern volatile __bit                   nPD                 __at(0x7E82);	// @ (0xFD0 * 8 + 2)
#define                                 nPD_bit             _BIT_ACCESS(RCON,2)
// RCON<nPOR>
extern volatile __bit                   nPOR                __at(0x7E81);	// @ (0xFD0 * 8 + 1)
#define                                 nPOR_bit            _BIT_ACCESS(RCON,1)
// INTCON2<nRBPU>
extern volatile __bit                   nRBPU               __at(0x7F8F);	// @ (0xFF1 * 8 + 7)
#define                                 nRBPU_bit           _BIT_ACCESS(INTCON2,7)
// RCSTA1<nRC8>
extern volatile __bit                   nRC8                __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 nRC8_bit            _BIT_ACCESS(RCSTA1,6)
// RCON<nRI>
extern volatile __bit                   nRI                 __at(0x7E84);	// @ (0xFD0 * 8 + 4)
#define                                 nRI_bit             _BIT_ACCESS(RCON,4)
// T1GCON<nT1DONE>
extern volatile __bit                   nT1DONE             __at(0x7D53);	// @ (0xFAA * 8 + 3)
#define                                 nT1DONE_bit         _BIT_ACCESS(T1GCON,3)
// T1CON<nT1SYNC>
extern volatile __bit                   nT1SYNC             __at(0x7E6A);	// @ (0xFCD * 8 + 2)
#define                                 nT1SYNC_bit         _BIT_ACCESS(T1CON,2)
// T3GCON<nT3DONE>
extern volatile __bit                   nT3DONE             __at(0x7D83);	// @ (0xFB0 * 8 + 3)
#define                                 nT3DONE_bit         _BIT_ACCESS(T3GCON,3)
// T3CON<nT3SYNC>
extern volatile __bit                   nT3SYNC             __at(0x7D8A);	// @ (0xFB1 * 8 + 2)
#define                                 nT3SYNC_bit         _BIT_ACCESS(T3CON,2)
// T5GCON<nT5DONE>
extern volatile __bit                   nT5DONE             __at(0x7893);	// @ (0xF12 * 8 + 3)
#define                                 nT5DONE_bit         _BIT_ACCESS(T5GCON,3)
// T5CON<nT5SYNC>
extern volatile __bit                   nT5SYNC             __at(0x789A);	// @ (0xF13 * 8 + 2)
#define                                 nT5SYNC_bit         _BIT_ACCESS(T5CON,2)
// RCON<nTO>
extern volatile __bit                   nTO                 __at(0x7E83);	// @ (0xFD0 * 8 + 3)
#define                                 nTO_bit             _BIT_ACCESS(RCON,3)
// TXSTA1<nTX8>
extern volatile __bit                   nTX8                __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 nTX8_bit            _BIT_ACCESS(TXSTA1,6)
// SSP2STAT<nW2>
extern volatile __bit                   nW2                 __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 nW2_bit             _BIT_ACCESS(SSP2STAT,2)
// SSP2STAT<nWRITE2>
extern volatile __bit                   nWRITE2             __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 nWRITE2_bit         _BIT_ACCESS(SSP2STAT,2)

#endif // _PIC18F85K90_H_
