// Generated 09/02/2023 GMT

/*
 * Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
 * All rights reserved.
 * 
 * This software is developed by Microchip Technology Inc. and its subsidiaries ("Microchip").
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *     1. Redistributions of source code must retain the above copyright notice, this list of
 *        conditions and the following disclaimer.
 * 
 *     2. Redistributions in binary form must reproduce the above copyright notice, this list
 *        of conditions and the following disclaimer in the documentation and/or other
 *        materials provided with the distribution. Publication is not required when
 *        this file is used in an embedded application.
 * 
 *     3. Microchip's name may not be used to endorse or promote products derived from this
 *        software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _PIC18F6585_H_
#define _PIC18F6585_H_

/*
 * C Header file for the Microchip PIC Microcontroller
 * PIC18F6585
 */
#ifndef _XC_H_
#warning Header file pic18f6585.h included directly. Use #include <xc.h> instead.
#endif

#include <__at.h>

/*
 * Register Definitions
 */

// Register: RXF6SIDH
#define RXF6SIDH RXF6SIDH
extern volatile unsigned char           RXF6SIDH            __at(0xD60);
#ifndef _LIB_BUILD
asm("RXF6SIDH equ 0D60h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF6SID3               :1;
        unsigned RXF6SID4               :1;
        unsigned RXF6SID5               :1;
        unsigned RXF6SID6               :1;
        unsigned RXF6SID7               :1;
        unsigned RXF6SID8               :1;
        unsigned RXF6SID9               :1;
        unsigned RXF6SID10              :1;
    };
} RXF6SIDHbits_t;
extern volatile RXF6SIDHbits_t RXF6SIDHbits __at(0xD60);
// bitfield macros
#define _RXF6SIDH_SID3_POSN                                 0x0
#define _RXF6SIDH_SID3_POSITION                             0x0
#define _RXF6SIDH_SID3_SIZE                                 0x1
#define _RXF6SIDH_SID3_LENGTH                               0x1
#define _RXF6SIDH_SID3_MASK                                 0x1
#define _RXF6SIDH_SID4_POSN                                 0x1
#define _RXF6SIDH_SID4_POSITION                             0x1
#define _RXF6SIDH_SID4_SIZE                                 0x1
#define _RXF6SIDH_SID4_LENGTH                               0x1
#define _RXF6SIDH_SID4_MASK                                 0x2
#define _RXF6SIDH_SID5_POSN                                 0x2
#define _RXF6SIDH_SID5_POSITION                             0x2
#define _RXF6SIDH_SID5_SIZE                                 0x1
#define _RXF6SIDH_SID5_LENGTH                               0x1
#define _RXF6SIDH_SID5_MASK                                 0x4
#define _RXF6SIDH_SID6_POSN                                 0x3
#define _RXF6SIDH_SID6_POSITION                             0x3
#define _RXF6SIDH_SID6_SIZE                                 0x1
#define _RXF6SIDH_SID6_LENGTH                               0x1
#define _RXF6SIDH_SID6_MASK                                 0x8
#define _RXF6SIDH_SID7_POSN                                 0x4
#define _RXF6SIDH_SID7_POSITION                             0x4
#define _RXF6SIDH_SID7_SIZE                                 0x1
#define _RXF6SIDH_SID7_LENGTH                               0x1
#define _RXF6SIDH_SID7_MASK                                 0x10
#define _RXF6SIDH_SID8_POSN                                 0x5
#define _RXF6SIDH_SID8_POSITION                             0x5
#define _RXF6SIDH_SID8_SIZE                                 0x1
#define _RXF6SIDH_SID8_LENGTH                               0x1
#define _RXF6SIDH_SID8_MASK                                 0x20
#define _RXF6SIDH_SID9_POSN                                 0x6
#define _RXF6SIDH_SID9_POSITION                             0x6
#define _RXF6SIDH_SID9_SIZE                                 0x1
#define _RXF6SIDH_SID9_LENGTH                               0x1
#define _RXF6SIDH_SID9_MASK                                 0x40
#define _RXF6SIDH_SID10_POSN                                0x7
#define _RXF6SIDH_SID10_POSITION                            0x7
#define _RXF6SIDH_SID10_SIZE                                0x1
#define _RXF6SIDH_SID10_LENGTH                              0x1
#define _RXF6SIDH_SID10_MASK                                0x80
#define _RXF6SIDH_RXF6SID3_POSN                             0x0
#define _RXF6SIDH_RXF6SID3_POSITION                         0x0
#define _RXF6SIDH_RXF6SID3_SIZE                             0x1
#define _RXF6SIDH_RXF6SID3_LENGTH                           0x1
#define _RXF6SIDH_RXF6SID3_MASK                             0x1
#define _RXF6SIDH_RXF6SID4_POSN                             0x1
#define _RXF6SIDH_RXF6SID4_POSITION                         0x1
#define _RXF6SIDH_RXF6SID4_SIZE                             0x1
#define _RXF6SIDH_RXF6SID4_LENGTH                           0x1
#define _RXF6SIDH_RXF6SID4_MASK                             0x2
#define _RXF6SIDH_RXF6SID5_POSN                             0x2
#define _RXF6SIDH_RXF6SID5_POSITION                         0x2
#define _RXF6SIDH_RXF6SID5_SIZE                             0x1
#define _RXF6SIDH_RXF6SID5_LENGTH                           0x1
#define _RXF6SIDH_RXF6SID5_MASK                             0x4
#define _RXF6SIDH_RXF6SID6_POSN                             0x3
#define _RXF6SIDH_RXF6SID6_POSITION                         0x3
#define _RXF6SIDH_RXF6SID6_SIZE                             0x1
#define _RXF6SIDH_RXF6SID6_LENGTH                           0x1
#define _RXF6SIDH_RXF6SID6_MASK                             0x8
#define _RXF6SIDH_RXF6SID7_POSN                             0x4
#define _RXF6SIDH_RXF6SID7_POSITION                         0x4
#define _RXF6SIDH_RXF6SID7_SIZE                             0x1
#define _RXF6SIDH_RXF6SID7_LENGTH                           0x1
#define _RXF6SIDH_RXF6SID7_MASK                             0x10
#define _RXF6SIDH_RXF6SID8_POSN                             0x5
#define _RXF6SIDH_RXF6SID8_POSITION                         0x5
#define _RXF6SIDH_RXF6SID8_SIZE                             0x1
#define _RXF6SIDH_RXF6SID8_LENGTH                           0x1
#define _RXF6SIDH_RXF6SID8_MASK                             0x20
#define _RXF6SIDH_RXF6SID9_POSN                             0x6
#define _RXF6SIDH_RXF6SID9_POSITION                         0x6
#define _RXF6SIDH_RXF6SID9_SIZE                             0x1
#define _RXF6SIDH_RXF6SID9_LENGTH                           0x1
#define _RXF6SIDH_RXF6SID9_MASK                             0x40
#define _RXF6SIDH_RXF6SID10_POSN                            0x7
#define _RXF6SIDH_RXF6SID10_POSITION                        0x7
#define _RXF6SIDH_RXF6SID10_SIZE                            0x1
#define _RXF6SIDH_RXF6SID10_LENGTH                          0x1
#define _RXF6SIDH_RXF6SID10_MASK                            0x80

// Register: RXF6SIDL
#define RXF6SIDL RXF6SIDL
extern volatile unsigned char           RXF6SIDL            __at(0xD61);
#ifndef _LIB_BUILD
asm("RXF6SIDL equ 0D61h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF6EID16              :1;
        unsigned RXF6EID17              :1;
        unsigned                        :1;
        unsigned RXF6EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF6SID0               :1;
        unsigned RXF6SID1               :1;
        unsigned RXF6SID2               :1;
    };
} RXF6SIDLbits_t;
extern volatile RXF6SIDLbits_t RXF6SIDLbits __at(0xD61);
// bitfield macros
#define _RXF6SIDL_EID16_POSN                                0x0
#define _RXF6SIDL_EID16_POSITION                            0x0
#define _RXF6SIDL_EID16_SIZE                                0x1
#define _RXF6SIDL_EID16_LENGTH                              0x1
#define _RXF6SIDL_EID16_MASK                                0x1
#define _RXF6SIDL_EID17_POSN                                0x1
#define _RXF6SIDL_EID17_POSITION                            0x1
#define _RXF6SIDL_EID17_SIZE                                0x1
#define _RXF6SIDL_EID17_LENGTH                              0x1
#define _RXF6SIDL_EID17_MASK                                0x2
#define _RXF6SIDL_EXIDEN_POSN                               0x3
#define _RXF6SIDL_EXIDEN_POSITION                           0x3
#define _RXF6SIDL_EXIDEN_SIZE                               0x1
#define _RXF6SIDL_EXIDEN_LENGTH                             0x1
#define _RXF6SIDL_EXIDEN_MASK                               0x8
#define _RXF6SIDL_SID0_POSN                                 0x5
#define _RXF6SIDL_SID0_POSITION                             0x5
#define _RXF6SIDL_SID0_SIZE                                 0x1
#define _RXF6SIDL_SID0_LENGTH                               0x1
#define _RXF6SIDL_SID0_MASK                                 0x20
#define _RXF6SIDL_SID1_POSN                                 0x6
#define _RXF6SIDL_SID1_POSITION                             0x6
#define _RXF6SIDL_SID1_SIZE                                 0x1
#define _RXF6SIDL_SID1_LENGTH                               0x1
#define _RXF6SIDL_SID1_MASK                                 0x40
#define _RXF6SIDL_SID2_POSN                                 0x7
#define _RXF6SIDL_SID2_POSITION                             0x7
#define _RXF6SIDL_SID2_SIZE                                 0x1
#define _RXF6SIDL_SID2_LENGTH                               0x1
#define _RXF6SIDL_SID2_MASK                                 0x80
#define _RXF6SIDL_EXIDE_POSN                                0x3
#define _RXF6SIDL_EXIDE_POSITION                            0x3
#define _RXF6SIDL_EXIDE_SIZE                                0x1
#define _RXF6SIDL_EXIDE_LENGTH                              0x1
#define _RXF6SIDL_EXIDE_MASK                                0x8
#define _RXF6SIDL_RXF6EID16_POSN                            0x0
#define _RXF6SIDL_RXF6EID16_POSITION                        0x0
#define _RXF6SIDL_RXF6EID16_SIZE                            0x1
#define _RXF6SIDL_RXF6EID16_LENGTH                          0x1
#define _RXF6SIDL_RXF6EID16_MASK                            0x1
#define _RXF6SIDL_RXF6EID17_POSN                            0x1
#define _RXF6SIDL_RXF6EID17_POSITION                        0x1
#define _RXF6SIDL_RXF6EID17_SIZE                            0x1
#define _RXF6SIDL_RXF6EID17_LENGTH                          0x1
#define _RXF6SIDL_RXF6EID17_MASK                            0x2
#define _RXF6SIDL_RXF6EXIDEN_POSN                           0x3
#define _RXF6SIDL_RXF6EXIDEN_POSITION                       0x3
#define _RXF6SIDL_RXF6EXIDEN_SIZE                           0x1
#define _RXF6SIDL_RXF6EXIDEN_LENGTH                         0x1
#define _RXF6SIDL_RXF6EXIDEN_MASK                           0x8
#define _RXF6SIDL_RXF6SID0_POSN                             0x5
#define _RXF6SIDL_RXF6SID0_POSITION                         0x5
#define _RXF6SIDL_RXF6SID0_SIZE                             0x1
#define _RXF6SIDL_RXF6SID0_LENGTH                           0x1
#define _RXF6SIDL_RXF6SID0_MASK                             0x20
#define _RXF6SIDL_RXF6SID1_POSN                             0x6
#define _RXF6SIDL_RXF6SID1_POSITION                         0x6
#define _RXF6SIDL_RXF6SID1_SIZE                             0x1
#define _RXF6SIDL_RXF6SID1_LENGTH                           0x1
#define _RXF6SIDL_RXF6SID1_MASK                             0x40
#define _RXF6SIDL_RXF6SID2_POSN                             0x7
#define _RXF6SIDL_RXF6SID2_POSITION                         0x7
#define _RXF6SIDL_RXF6SID2_SIZE                             0x1
#define _RXF6SIDL_RXF6SID2_LENGTH                           0x1
#define _RXF6SIDL_RXF6SID2_MASK                             0x80

// Register: RXF6EIDH
#define RXF6EIDH RXF6EIDH
extern volatile unsigned char           RXF6EIDH            __at(0xD62);
#ifndef _LIB_BUILD
asm("RXF6EIDH equ 0D62h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF6EID8               :1;
        unsigned RXF6EID9               :1;
        unsigned RXF6EID10              :1;
        unsigned RXF6EID11              :1;
        unsigned RXF6EID12              :1;
        unsigned RXF6EID13              :1;
        unsigned RXF6EID14              :1;
        unsigned RXF6EID15              :1;
    };
} RXF6EIDHbits_t;
extern volatile RXF6EIDHbits_t RXF6EIDHbits __at(0xD62);
// bitfield macros
#define _RXF6EIDH_EID8_POSN                                 0x0
#define _RXF6EIDH_EID8_POSITION                             0x0
#define _RXF6EIDH_EID8_SIZE                                 0x1
#define _RXF6EIDH_EID8_LENGTH                               0x1
#define _RXF6EIDH_EID8_MASK                                 0x1
#define _RXF6EIDH_EID9_POSN                                 0x1
#define _RXF6EIDH_EID9_POSITION                             0x1
#define _RXF6EIDH_EID9_SIZE                                 0x1
#define _RXF6EIDH_EID9_LENGTH                               0x1
#define _RXF6EIDH_EID9_MASK                                 0x2
#define _RXF6EIDH_EID10_POSN                                0x2
#define _RXF6EIDH_EID10_POSITION                            0x2
#define _RXF6EIDH_EID10_SIZE                                0x1
#define _RXF6EIDH_EID10_LENGTH                              0x1
#define _RXF6EIDH_EID10_MASK                                0x4
#define _RXF6EIDH_EID11_POSN                                0x3
#define _RXF6EIDH_EID11_POSITION                            0x3
#define _RXF6EIDH_EID11_SIZE                                0x1
#define _RXF6EIDH_EID11_LENGTH                              0x1
#define _RXF6EIDH_EID11_MASK                                0x8
#define _RXF6EIDH_EID12_POSN                                0x4
#define _RXF6EIDH_EID12_POSITION                            0x4
#define _RXF6EIDH_EID12_SIZE                                0x1
#define _RXF6EIDH_EID12_LENGTH                              0x1
#define _RXF6EIDH_EID12_MASK                                0x10
#define _RXF6EIDH_EID13_POSN                                0x5
#define _RXF6EIDH_EID13_POSITION                            0x5
#define _RXF6EIDH_EID13_SIZE                                0x1
#define _RXF6EIDH_EID13_LENGTH                              0x1
#define _RXF6EIDH_EID13_MASK                                0x20
#define _RXF6EIDH_EID14_POSN                                0x6
#define _RXF6EIDH_EID14_POSITION                            0x6
#define _RXF6EIDH_EID14_SIZE                                0x1
#define _RXF6EIDH_EID14_LENGTH                              0x1
#define _RXF6EIDH_EID14_MASK                                0x40
#define _RXF6EIDH_EID15_POSN                                0x7
#define _RXF6EIDH_EID15_POSITION                            0x7
#define _RXF6EIDH_EID15_SIZE                                0x1
#define _RXF6EIDH_EID15_LENGTH                              0x1
#define _RXF6EIDH_EID15_MASK                                0x80
#define _RXF6EIDH_RXF6EID8_POSN                             0x0
#define _RXF6EIDH_RXF6EID8_POSITION                         0x0
#define _RXF6EIDH_RXF6EID8_SIZE                             0x1
#define _RXF6EIDH_RXF6EID8_LENGTH                           0x1
#define _RXF6EIDH_RXF6EID8_MASK                             0x1
#define _RXF6EIDH_RXF6EID9_POSN                             0x1
#define _RXF6EIDH_RXF6EID9_POSITION                         0x1
#define _RXF6EIDH_RXF6EID9_SIZE                             0x1
#define _RXF6EIDH_RXF6EID9_LENGTH                           0x1
#define _RXF6EIDH_RXF6EID9_MASK                             0x2
#define _RXF6EIDH_RXF6EID10_POSN                            0x2
#define _RXF6EIDH_RXF6EID10_POSITION                        0x2
#define _RXF6EIDH_RXF6EID10_SIZE                            0x1
#define _RXF6EIDH_RXF6EID10_LENGTH                          0x1
#define _RXF6EIDH_RXF6EID10_MASK                            0x4
#define _RXF6EIDH_RXF6EID11_POSN                            0x3
#define _RXF6EIDH_RXF6EID11_POSITION                        0x3
#define _RXF6EIDH_RXF6EID11_SIZE                            0x1
#define _RXF6EIDH_RXF6EID11_LENGTH                          0x1
#define _RXF6EIDH_RXF6EID11_MASK                            0x8
#define _RXF6EIDH_RXF6EID12_POSN                            0x4
#define _RXF6EIDH_RXF6EID12_POSITION                        0x4
#define _RXF6EIDH_RXF6EID12_SIZE                            0x1
#define _RXF6EIDH_RXF6EID12_LENGTH                          0x1
#define _RXF6EIDH_RXF6EID12_MASK                            0x10
#define _RXF6EIDH_RXF6EID13_POSN                            0x5
#define _RXF6EIDH_RXF6EID13_POSITION                        0x5
#define _RXF6EIDH_RXF6EID13_SIZE                            0x1
#define _RXF6EIDH_RXF6EID13_LENGTH                          0x1
#define _RXF6EIDH_RXF6EID13_MASK                            0x20
#define _RXF6EIDH_RXF6EID14_POSN                            0x6
#define _RXF6EIDH_RXF6EID14_POSITION                        0x6
#define _RXF6EIDH_RXF6EID14_SIZE                            0x1
#define _RXF6EIDH_RXF6EID14_LENGTH                          0x1
#define _RXF6EIDH_RXF6EID14_MASK                            0x40
#define _RXF6EIDH_RXF6EID15_POSN                            0x7
#define _RXF6EIDH_RXF6EID15_POSITION                        0x7
#define _RXF6EIDH_RXF6EID15_SIZE                            0x1
#define _RXF6EIDH_RXF6EID15_LENGTH                          0x1
#define _RXF6EIDH_RXF6EID15_MASK                            0x80

// Register: RXF6EIDL
#define RXF6EIDL RXF6EIDL
extern volatile unsigned char           RXF6EIDL            __at(0xD63);
#ifndef _LIB_BUILD
asm("RXF6EIDL equ 0D63h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF6EID0               :1;
        unsigned RXF6EID1               :1;
        unsigned RXF6EID2               :1;
        unsigned RXF6EID3               :1;
        unsigned RXF6EID4               :1;
        unsigned RXF6EID5               :1;
        unsigned RXF6EID6               :1;
        unsigned RXF6EID7               :1;
    };
} RXF6EIDLbits_t;
extern volatile RXF6EIDLbits_t RXF6EIDLbits __at(0xD63);
// bitfield macros
#define _RXF6EIDL_EID0_POSN                                 0x0
#define _RXF6EIDL_EID0_POSITION                             0x0
#define _RXF6EIDL_EID0_SIZE                                 0x1
#define _RXF6EIDL_EID0_LENGTH                               0x1
#define _RXF6EIDL_EID0_MASK                                 0x1
#define _RXF6EIDL_EID1_POSN                                 0x1
#define _RXF6EIDL_EID1_POSITION                             0x1
#define _RXF6EIDL_EID1_SIZE                                 0x1
#define _RXF6EIDL_EID1_LENGTH                               0x1
#define _RXF6EIDL_EID1_MASK                                 0x2
#define _RXF6EIDL_EID2_POSN                                 0x2
#define _RXF6EIDL_EID2_POSITION                             0x2
#define _RXF6EIDL_EID2_SIZE                                 0x1
#define _RXF6EIDL_EID2_LENGTH                               0x1
#define _RXF6EIDL_EID2_MASK                                 0x4
#define _RXF6EIDL_EID3_POSN                                 0x3
#define _RXF6EIDL_EID3_POSITION                             0x3
#define _RXF6EIDL_EID3_SIZE                                 0x1
#define _RXF6EIDL_EID3_LENGTH                               0x1
#define _RXF6EIDL_EID3_MASK                                 0x8
#define _RXF6EIDL_EID4_POSN                                 0x4
#define _RXF6EIDL_EID4_POSITION                             0x4
#define _RXF6EIDL_EID4_SIZE                                 0x1
#define _RXF6EIDL_EID4_LENGTH                               0x1
#define _RXF6EIDL_EID4_MASK                                 0x10
#define _RXF6EIDL_EID5_POSN                                 0x5
#define _RXF6EIDL_EID5_POSITION                             0x5
#define _RXF6EIDL_EID5_SIZE                                 0x1
#define _RXF6EIDL_EID5_LENGTH                               0x1
#define _RXF6EIDL_EID5_MASK                                 0x20
#define _RXF6EIDL_EID6_POSN                                 0x6
#define _RXF6EIDL_EID6_POSITION                             0x6
#define _RXF6EIDL_EID6_SIZE                                 0x1
#define _RXF6EIDL_EID6_LENGTH                               0x1
#define _RXF6EIDL_EID6_MASK                                 0x40
#define _RXF6EIDL_EID7_POSN                                 0x7
#define _RXF6EIDL_EID7_POSITION                             0x7
#define _RXF6EIDL_EID7_SIZE                                 0x1
#define _RXF6EIDL_EID7_LENGTH                               0x1
#define _RXF6EIDL_EID7_MASK                                 0x80
#define _RXF6EIDL_RXF6EID0_POSN                             0x0
#define _RXF6EIDL_RXF6EID0_POSITION                         0x0
#define _RXF6EIDL_RXF6EID0_SIZE                             0x1
#define _RXF6EIDL_RXF6EID0_LENGTH                           0x1
#define _RXF6EIDL_RXF6EID0_MASK                             0x1
#define _RXF6EIDL_RXF6EID1_POSN                             0x1
#define _RXF6EIDL_RXF6EID1_POSITION                         0x1
#define _RXF6EIDL_RXF6EID1_SIZE                             0x1
#define _RXF6EIDL_RXF6EID1_LENGTH                           0x1
#define _RXF6EIDL_RXF6EID1_MASK                             0x2
#define _RXF6EIDL_RXF6EID2_POSN                             0x2
#define _RXF6EIDL_RXF6EID2_POSITION                         0x2
#define _RXF6EIDL_RXF6EID2_SIZE                             0x1
#define _RXF6EIDL_RXF6EID2_LENGTH                           0x1
#define _RXF6EIDL_RXF6EID2_MASK                             0x4
#define _RXF6EIDL_RXF6EID3_POSN                             0x3
#define _RXF6EIDL_RXF6EID3_POSITION                         0x3
#define _RXF6EIDL_RXF6EID3_SIZE                             0x1
#define _RXF6EIDL_RXF6EID3_LENGTH                           0x1
#define _RXF6EIDL_RXF6EID3_MASK                             0x8
#define _RXF6EIDL_RXF6EID4_POSN                             0x4
#define _RXF6EIDL_RXF6EID4_POSITION                         0x4
#define _RXF6EIDL_RXF6EID4_SIZE                             0x1
#define _RXF6EIDL_RXF6EID4_LENGTH                           0x1
#define _RXF6EIDL_RXF6EID4_MASK                             0x10
#define _RXF6EIDL_RXF6EID5_POSN                             0x5
#define _RXF6EIDL_RXF6EID5_POSITION                         0x5
#define _RXF6EIDL_RXF6EID5_SIZE                             0x1
#define _RXF6EIDL_RXF6EID5_LENGTH                           0x1
#define _RXF6EIDL_RXF6EID5_MASK                             0x20
#define _RXF6EIDL_RXF6EID6_POSN                             0x6
#define _RXF6EIDL_RXF6EID6_POSITION                         0x6
#define _RXF6EIDL_RXF6EID6_SIZE                             0x1
#define _RXF6EIDL_RXF6EID6_LENGTH                           0x1
#define _RXF6EIDL_RXF6EID6_MASK                             0x40
#define _RXF6EIDL_RXF6EID7_POSN                             0x7
#define _RXF6EIDL_RXF6EID7_POSITION                         0x7
#define _RXF6EIDL_RXF6EID7_SIZE                             0x1
#define _RXF6EIDL_RXF6EID7_LENGTH                           0x1
#define _RXF6EIDL_RXF6EID7_MASK                             0x80

// Register: RXF7SIDH
#define RXF7SIDH RXF7SIDH
extern volatile unsigned char           RXF7SIDH            __at(0xD64);
#ifndef _LIB_BUILD
asm("RXF7SIDH equ 0D64h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF7SID3               :1;
        unsigned RXF7SID4               :1;
        unsigned RXF7SID5               :1;
        unsigned RXF7SID6               :1;
        unsigned RXF7SID7               :1;
        unsigned RXF7SID8               :1;
        unsigned RXF7SID9               :1;
        unsigned RXF7SID10              :1;
    };
} RXF7SIDHbits_t;
extern volatile RXF7SIDHbits_t RXF7SIDHbits __at(0xD64);
// bitfield macros
#define _RXF7SIDH_SID3_POSN                                 0x0
#define _RXF7SIDH_SID3_POSITION                             0x0
#define _RXF7SIDH_SID3_SIZE                                 0x1
#define _RXF7SIDH_SID3_LENGTH                               0x1
#define _RXF7SIDH_SID3_MASK                                 0x1
#define _RXF7SIDH_SID4_POSN                                 0x1
#define _RXF7SIDH_SID4_POSITION                             0x1
#define _RXF7SIDH_SID4_SIZE                                 0x1
#define _RXF7SIDH_SID4_LENGTH                               0x1
#define _RXF7SIDH_SID4_MASK                                 0x2
#define _RXF7SIDH_SID5_POSN                                 0x2
#define _RXF7SIDH_SID5_POSITION                             0x2
#define _RXF7SIDH_SID5_SIZE                                 0x1
#define _RXF7SIDH_SID5_LENGTH                               0x1
#define _RXF7SIDH_SID5_MASK                                 0x4
#define _RXF7SIDH_SID6_POSN                                 0x3
#define _RXF7SIDH_SID6_POSITION                             0x3
#define _RXF7SIDH_SID6_SIZE                                 0x1
#define _RXF7SIDH_SID6_LENGTH                               0x1
#define _RXF7SIDH_SID6_MASK                                 0x8
#define _RXF7SIDH_SID7_POSN                                 0x4
#define _RXF7SIDH_SID7_POSITION                             0x4
#define _RXF7SIDH_SID7_SIZE                                 0x1
#define _RXF7SIDH_SID7_LENGTH                               0x1
#define _RXF7SIDH_SID7_MASK                                 0x10
#define _RXF7SIDH_SID8_POSN                                 0x5
#define _RXF7SIDH_SID8_POSITION                             0x5
#define _RXF7SIDH_SID8_SIZE                                 0x1
#define _RXF7SIDH_SID8_LENGTH                               0x1
#define _RXF7SIDH_SID8_MASK                                 0x20
#define _RXF7SIDH_SID9_POSN                                 0x6
#define _RXF7SIDH_SID9_POSITION                             0x6
#define _RXF7SIDH_SID9_SIZE                                 0x1
#define _RXF7SIDH_SID9_LENGTH                               0x1
#define _RXF7SIDH_SID9_MASK                                 0x40
#define _RXF7SIDH_SID10_POSN                                0x7
#define _RXF7SIDH_SID10_POSITION                            0x7
#define _RXF7SIDH_SID10_SIZE                                0x1
#define _RXF7SIDH_SID10_LENGTH                              0x1
#define _RXF7SIDH_SID10_MASK                                0x80
#define _RXF7SIDH_RXF7SID3_POSN                             0x0
#define _RXF7SIDH_RXF7SID3_POSITION                         0x0
#define _RXF7SIDH_RXF7SID3_SIZE                             0x1
#define _RXF7SIDH_RXF7SID3_LENGTH                           0x1
#define _RXF7SIDH_RXF7SID3_MASK                             0x1
#define _RXF7SIDH_RXF7SID4_POSN                             0x1
#define _RXF7SIDH_RXF7SID4_POSITION                         0x1
#define _RXF7SIDH_RXF7SID4_SIZE                             0x1
#define _RXF7SIDH_RXF7SID4_LENGTH                           0x1
#define _RXF7SIDH_RXF7SID4_MASK                             0x2
#define _RXF7SIDH_RXF7SID5_POSN                             0x2
#define _RXF7SIDH_RXF7SID5_POSITION                         0x2
#define _RXF7SIDH_RXF7SID5_SIZE                             0x1
#define _RXF7SIDH_RXF7SID5_LENGTH                           0x1
#define _RXF7SIDH_RXF7SID5_MASK                             0x4
#define _RXF7SIDH_RXF7SID6_POSN                             0x3
#define _RXF7SIDH_RXF7SID6_POSITION                         0x3
#define _RXF7SIDH_RXF7SID6_SIZE                             0x1
#define _RXF7SIDH_RXF7SID6_LENGTH                           0x1
#define _RXF7SIDH_RXF7SID6_MASK                             0x8
#define _RXF7SIDH_RXF7SID7_POSN                             0x4
#define _RXF7SIDH_RXF7SID7_POSITION                         0x4
#define _RXF7SIDH_RXF7SID7_SIZE                             0x1
#define _RXF7SIDH_RXF7SID7_LENGTH                           0x1
#define _RXF7SIDH_RXF7SID7_MASK                             0x10
#define _RXF7SIDH_RXF7SID8_POSN                             0x5
#define _RXF7SIDH_RXF7SID8_POSITION                         0x5
#define _RXF7SIDH_RXF7SID8_SIZE                             0x1
#define _RXF7SIDH_RXF7SID8_LENGTH                           0x1
#define _RXF7SIDH_RXF7SID8_MASK                             0x20
#define _RXF7SIDH_RXF7SID9_POSN                             0x6
#define _RXF7SIDH_RXF7SID9_POSITION                         0x6
#define _RXF7SIDH_RXF7SID9_SIZE                             0x1
#define _RXF7SIDH_RXF7SID9_LENGTH                           0x1
#define _RXF7SIDH_RXF7SID9_MASK                             0x40
#define _RXF7SIDH_RXF7SID10_POSN                            0x7
#define _RXF7SIDH_RXF7SID10_POSITION                        0x7
#define _RXF7SIDH_RXF7SID10_SIZE                            0x1
#define _RXF7SIDH_RXF7SID10_LENGTH                          0x1
#define _RXF7SIDH_RXF7SID10_MASK                            0x80

// Register: RXF7SIDL
#define RXF7SIDL RXF7SIDL
extern volatile unsigned char           RXF7SIDL            __at(0xD65);
#ifndef _LIB_BUILD
asm("RXF7SIDL equ 0D65h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF7EID16              :1;
        unsigned RXF7EID17              :1;
        unsigned                        :1;
        unsigned RXF7EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF7SID0               :1;
        unsigned RXF7SID1               :1;
        unsigned RXF7SID2               :1;
    };
} RXF7SIDLbits_t;
extern volatile RXF7SIDLbits_t RXF7SIDLbits __at(0xD65);
// bitfield macros
#define _RXF7SIDL_EID16_POSN                                0x0
#define _RXF7SIDL_EID16_POSITION                            0x0
#define _RXF7SIDL_EID16_SIZE                                0x1
#define _RXF7SIDL_EID16_LENGTH                              0x1
#define _RXF7SIDL_EID16_MASK                                0x1
#define _RXF7SIDL_EID17_POSN                                0x1
#define _RXF7SIDL_EID17_POSITION                            0x1
#define _RXF7SIDL_EID17_SIZE                                0x1
#define _RXF7SIDL_EID17_LENGTH                              0x1
#define _RXF7SIDL_EID17_MASK                                0x2
#define _RXF7SIDL_EXIDEN_POSN                               0x3
#define _RXF7SIDL_EXIDEN_POSITION                           0x3
#define _RXF7SIDL_EXIDEN_SIZE                               0x1
#define _RXF7SIDL_EXIDEN_LENGTH                             0x1
#define _RXF7SIDL_EXIDEN_MASK                               0x8
#define _RXF7SIDL_SID0_POSN                                 0x5
#define _RXF7SIDL_SID0_POSITION                             0x5
#define _RXF7SIDL_SID0_SIZE                                 0x1
#define _RXF7SIDL_SID0_LENGTH                               0x1
#define _RXF7SIDL_SID0_MASK                                 0x20
#define _RXF7SIDL_SID1_POSN                                 0x6
#define _RXF7SIDL_SID1_POSITION                             0x6
#define _RXF7SIDL_SID1_SIZE                                 0x1
#define _RXF7SIDL_SID1_LENGTH                               0x1
#define _RXF7SIDL_SID1_MASK                                 0x40
#define _RXF7SIDL_SID2_POSN                                 0x7
#define _RXF7SIDL_SID2_POSITION                             0x7
#define _RXF7SIDL_SID2_SIZE                                 0x1
#define _RXF7SIDL_SID2_LENGTH                               0x1
#define _RXF7SIDL_SID2_MASK                                 0x80
#define _RXF7SIDL_EXIDE_POSN                                0x3
#define _RXF7SIDL_EXIDE_POSITION                            0x3
#define _RXF7SIDL_EXIDE_SIZE                                0x1
#define _RXF7SIDL_EXIDE_LENGTH                              0x1
#define _RXF7SIDL_EXIDE_MASK                                0x8
#define _RXF7SIDL_RXF7EID16_POSN                            0x0
#define _RXF7SIDL_RXF7EID16_POSITION                        0x0
#define _RXF7SIDL_RXF7EID16_SIZE                            0x1
#define _RXF7SIDL_RXF7EID16_LENGTH                          0x1
#define _RXF7SIDL_RXF7EID16_MASK                            0x1
#define _RXF7SIDL_RXF7EID17_POSN                            0x1
#define _RXF7SIDL_RXF7EID17_POSITION                        0x1
#define _RXF7SIDL_RXF7EID17_SIZE                            0x1
#define _RXF7SIDL_RXF7EID17_LENGTH                          0x1
#define _RXF7SIDL_RXF7EID17_MASK                            0x2
#define _RXF7SIDL_RXF7EXIDEN_POSN                           0x3
#define _RXF7SIDL_RXF7EXIDEN_POSITION                       0x3
#define _RXF7SIDL_RXF7EXIDEN_SIZE                           0x1
#define _RXF7SIDL_RXF7EXIDEN_LENGTH                         0x1
#define _RXF7SIDL_RXF7EXIDEN_MASK                           0x8
#define _RXF7SIDL_RXF7SID0_POSN                             0x5
#define _RXF7SIDL_RXF7SID0_POSITION                         0x5
#define _RXF7SIDL_RXF7SID0_SIZE                             0x1
#define _RXF7SIDL_RXF7SID0_LENGTH                           0x1
#define _RXF7SIDL_RXF7SID0_MASK                             0x20
#define _RXF7SIDL_RXF7SID1_POSN                             0x6
#define _RXF7SIDL_RXF7SID1_POSITION                         0x6
#define _RXF7SIDL_RXF7SID1_SIZE                             0x1
#define _RXF7SIDL_RXF7SID1_LENGTH                           0x1
#define _RXF7SIDL_RXF7SID1_MASK                             0x40
#define _RXF7SIDL_RXF7SID2_POSN                             0x7
#define _RXF7SIDL_RXF7SID2_POSITION                         0x7
#define _RXF7SIDL_RXF7SID2_SIZE                             0x1
#define _RXF7SIDL_RXF7SID2_LENGTH                           0x1
#define _RXF7SIDL_RXF7SID2_MASK                             0x80

// Register: RXF7EIDH
#define RXF7EIDH RXF7EIDH
extern volatile unsigned char           RXF7EIDH            __at(0xD66);
#ifndef _LIB_BUILD
asm("RXF7EIDH equ 0D66h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF7EID8               :1;
        unsigned RXF7EID9               :1;
        unsigned RXF7EID10              :1;
        unsigned RXF7EID11              :1;
        unsigned RXF7EID12              :1;
        unsigned RXF7EID13              :1;
        unsigned RXF7EID14              :1;
        unsigned RXF7EID15              :1;
    };
} RXF7EIDHbits_t;
extern volatile RXF7EIDHbits_t RXF7EIDHbits __at(0xD66);
// bitfield macros
#define _RXF7EIDH_EID8_POSN                                 0x0
#define _RXF7EIDH_EID8_POSITION                             0x0
#define _RXF7EIDH_EID8_SIZE                                 0x1
#define _RXF7EIDH_EID8_LENGTH                               0x1
#define _RXF7EIDH_EID8_MASK                                 0x1
#define _RXF7EIDH_EID9_POSN                                 0x1
#define _RXF7EIDH_EID9_POSITION                             0x1
#define _RXF7EIDH_EID9_SIZE                                 0x1
#define _RXF7EIDH_EID9_LENGTH                               0x1
#define _RXF7EIDH_EID9_MASK                                 0x2
#define _RXF7EIDH_EID10_POSN                                0x2
#define _RXF7EIDH_EID10_POSITION                            0x2
#define _RXF7EIDH_EID10_SIZE                                0x1
#define _RXF7EIDH_EID10_LENGTH                              0x1
#define _RXF7EIDH_EID10_MASK                                0x4
#define _RXF7EIDH_EID11_POSN                                0x3
#define _RXF7EIDH_EID11_POSITION                            0x3
#define _RXF7EIDH_EID11_SIZE                                0x1
#define _RXF7EIDH_EID11_LENGTH                              0x1
#define _RXF7EIDH_EID11_MASK                                0x8
#define _RXF7EIDH_EID12_POSN                                0x4
#define _RXF7EIDH_EID12_POSITION                            0x4
#define _RXF7EIDH_EID12_SIZE                                0x1
#define _RXF7EIDH_EID12_LENGTH                              0x1
#define _RXF7EIDH_EID12_MASK                                0x10
#define _RXF7EIDH_EID13_POSN                                0x5
#define _RXF7EIDH_EID13_POSITION                            0x5
#define _RXF7EIDH_EID13_SIZE                                0x1
#define _RXF7EIDH_EID13_LENGTH                              0x1
#define _RXF7EIDH_EID13_MASK                                0x20
#define _RXF7EIDH_EID14_POSN                                0x6
#define _RXF7EIDH_EID14_POSITION                            0x6
#define _RXF7EIDH_EID14_SIZE                                0x1
#define _RXF7EIDH_EID14_LENGTH                              0x1
#define _RXF7EIDH_EID14_MASK                                0x40
#define _RXF7EIDH_EID15_POSN                                0x7
#define _RXF7EIDH_EID15_POSITION                            0x7
#define _RXF7EIDH_EID15_SIZE                                0x1
#define _RXF7EIDH_EID15_LENGTH                              0x1
#define _RXF7EIDH_EID15_MASK                                0x80
#define _RXF7EIDH_RXF7EID8_POSN                             0x0
#define _RXF7EIDH_RXF7EID8_POSITION                         0x0
#define _RXF7EIDH_RXF7EID8_SIZE                             0x1
#define _RXF7EIDH_RXF7EID8_LENGTH                           0x1
#define _RXF7EIDH_RXF7EID8_MASK                             0x1
#define _RXF7EIDH_RXF7EID9_POSN                             0x1
#define _RXF7EIDH_RXF7EID9_POSITION                         0x1
#define _RXF7EIDH_RXF7EID9_SIZE                             0x1
#define _RXF7EIDH_RXF7EID9_LENGTH                           0x1
#define _RXF7EIDH_RXF7EID9_MASK                             0x2
#define _RXF7EIDH_RXF7EID10_POSN                            0x2
#define _RXF7EIDH_RXF7EID10_POSITION                        0x2
#define _RXF7EIDH_RXF7EID10_SIZE                            0x1
#define _RXF7EIDH_RXF7EID10_LENGTH                          0x1
#define _RXF7EIDH_RXF7EID10_MASK                            0x4
#define _RXF7EIDH_RXF7EID11_POSN                            0x3
#define _RXF7EIDH_RXF7EID11_POSITION                        0x3
#define _RXF7EIDH_RXF7EID11_SIZE                            0x1
#define _RXF7EIDH_RXF7EID11_LENGTH                          0x1
#define _RXF7EIDH_RXF7EID11_MASK                            0x8
#define _RXF7EIDH_RXF7EID12_POSN                            0x4
#define _RXF7EIDH_RXF7EID12_POSITION                        0x4
#define _RXF7EIDH_RXF7EID12_SIZE                            0x1
#define _RXF7EIDH_RXF7EID12_LENGTH                          0x1
#define _RXF7EIDH_RXF7EID12_MASK                            0x10
#define _RXF7EIDH_RXF7EID13_POSN                            0x5
#define _RXF7EIDH_RXF7EID13_POSITION                        0x5
#define _RXF7EIDH_RXF7EID13_SIZE                            0x1
#define _RXF7EIDH_RXF7EID13_LENGTH                          0x1
#define _RXF7EIDH_RXF7EID13_MASK                            0x20
#define _RXF7EIDH_RXF7EID14_POSN                            0x6
#define _RXF7EIDH_RXF7EID14_POSITION                        0x6
#define _RXF7EIDH_RXF7EID14_SIZE                            0x1
#define _RXF7EIDH_RXF7EID14_LENGTH                          0x1
#define _RXF7EIDH_RXF7EID14_MASK                            0x40
#define _RXF7EIDH_RXF7EID15_POSN                            0x7
#define _RXF7EIDH_RXF7EID15_POSITION                        0x7
#define _RXF7EIDH_RXF7EID15_SIZE                            0x1
#define _RXF7EIDH_RXF7EID15_LENGTH                          0x1
#define _RXF7EIDH_RXF7EID15_MASK                            0x80

// Register: RXF7EIDL
#define RXF7EIDL RXF7EIDL
extern volatile unsigned char           RXF7EIDL            __at(0xD67);
#ifndef _LIB_BUILD
asm("RXF7EIDL equ 0D67h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF7EID0               :1;
        unsigned RXF7EID1               :1;
        unsigned RXF7EID2               :1;
        unsigned RXF7EID3               :1;
        unsigned RXF7EID4               :1;
        unsigned RXF7EID5               :1;
        unsigned RXF7EID6               :1;
        unsigned RXF7EID7               :1;
    };
} RXF7EIDLbits_t;
extern volatile RXF7EIDLbits_t RXF7EIDLbits __at(0xD67);
// bitfield macros
#define _RXF7EIDL_EID0_POSN                                 0x0
#define _RXF7EIDL_EID0_POSITION                             0x0
#define _RXF7EIDL_EID0_SIZE                                 0x1
#define _RXF7EIDL_EID0_LENGTH                               0x1
#define _RXF7EIDL_EID0_MASK                                 0x1
#define _RXF7EIDL_EID1_POSN                                 0x1
#define _RXF7EIDL_EID1_POSITION                             0x1
#define _RXF7EIDL_EID1_SIZE                                 0x1
#define _RXF7EIDL_EID1_LENGTH                               0x1
#define _RXF7EIDL_EID1_MASK                                 0x2
#define _RXF7EIDL_EID2_POSN                                 0x2
#define _RXF7EIDL_EID2_POSITION                             0x2
#define _RXF7EIDL_EID2_SIZE                                 0x1
#define _RXF7EIDL_EID2_LENGTH                               0x1
#define _RXF7EIDL_EID2_MASK                                 0x4
#define _RXF7EIDL_EID3_POSN                                 0x3
#define _RXF7EIDL_EID3_POSITION                             0x3
#define _RXF7EIDL_EID3_SIZE                                 0x1
#define _RXF7EIDL_EID3_LENGTH                               0x1
#define _RXF7EIDL_EID3_MASK                                 0x8
#define _RXF7EIDL_EID4_POSN                                 0x4
#define _RXF7EIDL_EID4_POSITION                             0x4
#define _RXF7EIDL_EID4_SIZE                                 0x1
#define _RXF7EIDL_EID4_LENGTH                               0x1
#define _RXF7EIDL_EID4_MASK                                 0x10
#define _RXF7EIDL_EID5_POSN                                 0x5
#define _RXF7EIDL_EID5_POSITION                             0x5
#define _RXF7EIDL_EID5_SIZE                                 0x1
#define _RXF7EIDL_EID5_LENGTH                               0x1
#define _RXF7EIDL_EID5_MASK                                 0x20
#define _RXF7EIDL_EID6_POSN                                 0x6
#define _RXF7EIDL_EID6_POSITION                             0x6
#define _RXF7EIDL_EID6_SIZE                                 0x1
#define _RXF7EIDL_EID6_LENGTH                               0x1
#define _RXF7EIDL_EID6_MASK                                 0x40
#define _RXF7EIDL_EID7_POSN                                 0x7
#define _RXF7EIDL_EID7_POSITION                             0x7
#define _RXF7EIDL_EID7_SIZE                                 0x1
#define _RXF7EIDL_EID7_LENGTH                               0x1
#define _RXF7EIDL_EID7_MASK                                 0x80
#define _RXF7EIDL_RXF7EID0_POSN                             0x0
#define _RXF7EIDL_RXF7EID0_POSITION                         0x0
#define _RXF7EIDL_RXF7EID0_SIZE                             0x1
#define _RXF7EIDL_RXF7EID0_LENGTH                           0x1
#define _RXF7EIDL_RXF7EID0_MASK                             0x1
#define _RXF7EIDL_RXF7EID1_POSN                             0x1
#define _RXF7EIDL_RXF7EID1_POSITION                         0x1
#define _RXF7EIDL_RXF7EID1_SIZE                             0x1
#define _RXF7EIDL_RXF7EID1_LENGTH                           0x1
#define _RXF7EIDL_RXF7EID1_MASK                             0x2
#define _RXF7EIDL_RXF7EID2_POSN                             0x2
#define _RXF7EIDL_RXF7EID2_POSITION                         0x2
#define _RXF7EIDL_RXF7EID2_SIZE                             0x1
#define _RXF7EIDL_RXF7EID2_LENGTH                           0x1
#define _RXF7EIDL_RXF7EID2_MASK                             0x4
#define _RXF7EIDL_RXF7EID3_POSN                             0x3
#define _RXF7EIDL_RXF7EID3_POSITION                         0x3
#define _RXF7EIDL_RXF7EID3_SIZE                             0x1
#define _RXF7EIDL_RXF7EID3_LENGTH                           0x1
#define _RXF7EIDL_RXF7EID3_MASK                             0x8
#define _RXF7EIDL_RXF7EID4_POSN                             0x4
#define _RXF7EIDL_RXF7EID4_POSITION                         0x4
#define _RXF7EIDL_RXF7EID4_SIZE                             0x1
#define _RXF7EIDL_RXF7EID4_LENGTH                           0x1
#define _RXF7EIDL_RXF7EID4_MASK                             0x10
#define _RXF7EIDL_RXF7EID5_POSN                             0x5
#define _RXF7EIDL_RXF7EID5_POSITION                         0x5
#define _RXF7EIDL_RXF7EID5_SIZE                             0x1
#define _RXF7EIDL_RXF7EID5_LENGTH                           0x1
#define _RXF7EIDL_RXF7EID5_MASK                             0x20
#define _RXF7EIDL_RXF7EID6_POSN                             0x6
#define _RXF7EIDL_RXF7EID6_POSITION                         0x6
#define _RXF7EIDL_RXF7EID6_SIZE                             0x1
#define _RXF7EIDL_RXF7EID6_LENGTH                           0x1
#define _RXF7EIDL_RXF7EID6_MASK                             0x40
#define _RXF7EIDL_RXF7EID7_POSN                             0x7
#define _RXF7EIDL_RXF7EID7_POSITION                         0x7
#define _RXF7EIDL_RXF7EID7_SIZE                             0x1
#define _RXF7EIDL_RXF7EID7_LENGTH                           0x1
#define _RXF7EIDL_RXF7EID7_MASK                             0x80

// Register: RXF8SIDH
#define RXF8SIDH RXF8SIDH
extern volatile unsigned char           RXF8SIDH            __at(0xD68);
#ifndef _LIB_BUILD
asm("RXF8SIDH equ 0D68h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF8SID3               :1;
        unsigned RXF8SID4               :1;
        unsigned RXF8SID5               :1;
        unsigned RXF8SID6               :1;
        unsigned RXF8SID7               :1;
        unsigned RXF8SID8               :1;
        unsigned RXF8SID9               :1;
        unsigned RXF8SID10              :1;
    };
} RXF8SIDHbits_t;
extern volatile RXF8SIDHbits_t RXF8SIDHbits __at(0xD68);
// bitfield macros
#define _RXF8SIDH_SID3_POSN                                 0x0
#define _RXF8SIDH_SID3_POSITION                             0x0
#define _RXF8SIDH_SID3_SIZE                                 0x1
#define _RXF8SIDH_SID3_LENGTH                               0x1
#define _RXF8SIDH_SID3_MASK                                 0x1
#define _RXF8SIDH_SID4_POSN                                 0x1
#define _RXF8SIDH_SID4_POSITION                             0x1
#define _RXF8SIDH_SID4_SIZE                                 0x1
#define _RXF8SIDH_SID4_LENGTH                               0x1
#define _RXF8SIDH_SID4_MASK                                 0x2
#define _RXF8SIDH_SID5_POSN                                 0x2
#define _RXF8SIDH_SID5_POSITION                             0x2
#define _RXF8SIDH_SID5_SIZE                                 0x1
#define _RXF8SIDH_SID5_LENGTH                               0x1
#define _RXF8SIDH_SID5_MASK                                 0x4
#define _RXF8SIDH_SID6_POSN                                 0x3
#define _RXF8SIDH_SID6_POSITION                             0x3
#define _RXF8SIDH_SID6_SIZE                                 0x1
#define _RXF8SIDH_SID6_LENGTH                               0x1
#define _RXF8SIDH_SID6_MASK                                 0x8
#define _RXF8SIDH_SID7_POSN                                 0x4
#define _RXF8SIDH_SID7_POSITION                             0x4
#define _RXF8SIDH_SID7_SIZE                                 0x1
#define _RXF8SIDH_SID7_LENGTH                               0x1
#define _RXF8SIDH_SID7_MASK                                 0x10
#define _RXF8SIDH_SID8_POSN                                 0x5
#define _RXF8SIDH_SID8_POSITION                             0x5
#define _RXF8SIDH_SID8_SIZE                                 0x1
#define _RXF8SIDH_SID8_LENGTH                               0x1
#define _RXF8SIDH_SID8_MASK                                 0x20
#define _RXF8SIDH_SID9_POSN                                 0x6
#define _RXF8SIDH_SID9_POSITION                             0x6
#define _RXF8SIDH_SID9_SIZE                                 0x1
#define _RXF8SIDH_SID9_LENGTH                               0x1
#define _RXF8SIDH_SID9_MASK                                 0x40
#define _RXF8SIDH_SID10_POSN                                0x7
#define _RXF8SIDH_SID10_POSITION                            0x7
#define _RXF8SIDH_SID10_SIZE                                0x1
#define _RXF8SIDH_SID10_LENGTH                              0x1
#define _RXF8SIDH_SID10_MASK                                0x80
#define _RXF8SIDH_RXF8SID3_POSN                             0x0
#define _RXF8SIDH_RXF8SID3_POSITION                         0x0
#define _RXF8SIDH_RXF8SID3_SIZE                             0x1
#define _RXF8SIDH_RXF8SID3_LENGTH                           0x1
#define _RXF8SIDH_RXF8SID3_MASK                             0x1
#define _RXF8SIDH_RXF8SID4_POSN                             0x1
#define _RXF8SIDH_RXF8SID4_POSITION                         0x1
#define _RXF8SIDH_RXF8SID4_SIZE                             0x1
#define _RXF8SIDH_RXF8SID4_LENGTH                           0x1
#define _RXF8SIDH_RXF8SID4_MASK                             0x2
#define _RXF8SIDH_RXF8SID5_POSN                             0x2
#define _RXF8SIDH_RXF8SID5_POSITION                         0x2
#define _RXF8SIDH_RXF8SID5_SIZE                             0x1
#define _RXF8SIDH_RXF8SID5_LENGTH                           0x1
#define _RXF8SIDH_RXF8SID5_MASK                             0x4
#define _RXF8SIDH_RXF8SID6_POSN                             0x3
#define _RXF8SIDH_RXF8SID6_POSITION                         0x3
#define _RXF8SIDH_RXF8SID6_SIZE                             0x1
#define _RXF8SIDH_RXF8SID6_LENGTH                           0x1
#define _RXF8SIDH_RXF8SID6_MASK                             0x8
#define _RXF8SIDH_RXF8SID7_POSN                             0x4
#define _RXF8SIDH_RXF8SID7_POSITION                         0x4
#define _RXF8SIDH_RXF8SID7_SIZE                             0x1
#define _RXF8SIDH_RXF8SID7_LENGTH                           0x1
#define _RXF8SIDH_RXF8SID7_MASK                             0x10
#define _RXF8SIDH_RXF8SID8_POSN                             0x5
#define _RXF8SIDH_RXF8SID8_POSITION                         0x5
#define _RXF8SIDH_RXF8SID8_SIZE                             0x1
#define _RXF8SIDH_RXF8SID8_LENGTH                           0x1
#define _RXF8SIDH_RXF8SID8_MASK                             0x20
#define _RXF8SIDH_RXF8SID9_POSN                             0x6
#define _RXF8SIDH_RXF8SID9_POSITION                         0x6
#define _RXF8SIDH_RXF8SID9_SIZE                             0x1
#define _RXF8SIDH_RXF8SID9_LENGTH                           0x1
#define _RXF8SIDH_RXF8SID9_MASK                             0x40
#define _RXF8SIDH_RXF8SID10_POSN                            0x7
#define _RXF8SIDH_RXF8SID10_POSITION                        0x7
#define _RXF8SIDH_RXF8SID10_SIZE                            0x1
#define _RXF8SIDH_RXF8SID10_LENGTH                          0x1
#define _RXF8SIDH_RXF8SID10_MASK                            0x80

// Register: RXF8SIDL
#define RXF8SIDL RXF8SIDL
extern volatile unsigned char           RXF8SIDL            __at(0xD69);
#ifndef _LIB_BUILD
asm("RXF8SIDL equ 0D69h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF8EID16              :1;
        unsigned RXF8EID17              :1;
        unsigned                        :1;
        unsigned RXF8EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF8SID0               :1;
        unsigned RXF8SID1               :1;
        unsigned RXF8SID2               :1;
    };
} RXF8SIDLbits_t;
extern volatile RXF8SIDLbits_t RXF8SIDLbits __at(0xD69);
// bitfield macros
#define _RXF8SIDL_EID16_POSN                                0x0
#define _RXF8SIDL_EID16_POSITION                            0x0
#define _RXF8SIDL_EID16_SIZE                                0x1
#define _RXF8SIDL_EID16_LENGTH                              0x1
#define _RXF8SIDL_EID16_MASK                                0x1
#define _RXF8SIDL_EID17_POSN                                0x1
#define _RXF8SIDL_EID17_POSITION                            0x1
#define _RXF8SIDL_EID17_SIZE                                0x1
#define _RXF8SIDL_EID17_LENGTH                              0x1
#define _RXF8SIDL_EID17_MASK                                0x2
#define _RXF8SIDL_EXIDEN_POSN                               0x3
#define _RXF8SIDL_EXIDEN_POSITION                           0x3
#define _RXF8SIDL_EXIDEN_SIZE                               0x1
#define _RXF8SIDL_EXIDEN_LENGTH                             0x1
#define _RXF8SIDL_EXIDEN_MASK                               0x8
#define _RXF8SIDL_SID0_POSN                                 0x5
#define _RXF8SIDL_SID0_POSITION                             0x5
#define _RXF8SIDL_SID0_SIZE                                 0x1
#define _RXF8SIDL_SID0_LENGTH                               0x1
#define _RXF8SIDL_SID0_MASK                                 0x20
#define _RXF8SIDL_SID1_POSN                                 0x6
#define _RXF8SIDL_SID1_POSITION                             0x6
#define _RXF8SIDL_SID1_SIZE                                 0x1
#define _RXF8SIDL_SID1_LENGTH                               0x1
#define _RXF8SIDL_SID1_MASK                                 0x40
#define _RXF8SIDL_SID2_POSN                                 0x7
#define _RXF8SIDL_SID2_POSITION                             0x7
#define _RXF8SIDL_SID2_SIZE                                 0x1
#define _RXF8SIDL_SID2_LENGTH                               0x1
#define _RXF8SIDL_SID2_MASK                                 0x80
#define _RXF8SIDL_EXIDE_POSN                                0x3
#define _RXF8SIDL_EXIDE_POSITION                            0x3
#define _RXF8SIDL_EXIDE_SIZE                                0x1
#define _RXF8SIDL_EXIDE_LENGTH                              0x1
#define _RXF8SIDL_EXIDE_MASK                                0x8
#define _RXF8SIDL_RXF8EID16_POSN                            0x0
#define _RXF8SIDL_RXF8EID16_POSITION                        0x0
#define _RXF8SIDL_RXF8EID16_SIZE                            0x1
#define _RXF8SIDL_RXF8EID16_LENGTH                          0x1
#define _RXF8SIDL_RXF8EID16_MASK                            0x1
#define _RXF8SIDL_RXF8EID17_POSN                            0x1
#define _RXF8SIDL_RXF8EID17_POSITION                        0x1
#define _RXF8SIDL_RXF8EID17_SIZE                            0x1
#define _RXF8SIDL_RXF8EID17_LENGTH                          0x1
#define _RXF8SIDL_RXF8EID17_MASK                            0x2
#define _RXF8SIDL_RXF8EXIDEN_POSN                           0x3
#define _RXF8SIDL_RXF8EXIDEN_POSITION                       0x3
#define _RXF8SIDL_RXF8EXIDEN_SIZE                           0x1
#define _RXF8SIDL_RXF8EXIDEN_LENGTH                         0x1
#define _RXF8SIDL_RXF8EXIDEN_MASK                           0x8
#define _RXF8SIDL_RXF8SID0_POSN                             0x5
#define _RXF8SIDL_RXF8SID0_POSITION                         0x5
#define _RXF8SIDL_RXF8SID0_SIZE                             0x1
#define _RXF8SIDL_RXF8SID0_LENGTH                           0x1
#define _RXF8SIDL_RXF8SID0_MASK                             0x20
#define _RXF8SIDL_RXF8SID1_POSN                             0x6
#define _RXF8SIDL_RXF8SID1_POSITION                         0x6
#define _RXF8SIDL_RXF8SID1_SIZE                             0x1
#define _RXF8SIDL_RXF8SID1_LENGTH                           0x1
#define _RXF8SIDL_RXF8SID1_MASK                             0x40
#define _RXF8SIDL_RXF8SID2_POSN                             0x7
#define _RXF8SIDL_RXF8SID2_POSITION                         0x7
#define _RXF8SIDL_RXF8SID2_SIZE                             0x1
#define _RXF8SIDL_RXF8SID2_LENGTH                           0x1
#define _RXF8SIDL_RXF8SID2_MASK                             0x80

// Register: RXF8EIDH
#define RXF8EIDH RXF8EIDH
extern volatile unsigned char           RXF8EIDH            __at(0xD6A);
#ifndef _LIB_BUILD
asm("RXF8EIDH equ 0D6Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF8EID8               :1;
        unsigned RXF8EID9               :1;
        unsigned RXF8EID10              :1;
        unsigned RXF8EID11              :1;
        unsigned RXF8EID12              :1;
        unsigned RXF8EID13              :1;
        unsigned RXF8EID14              :1;
        unsigned RXF8EID15              :1;
    };
} RXF8EIDHbits_t;
extern volatile RXF8EIDHbits_t RXF8EIDHbits __at(0xD6A);
// bitfield macros
#define _RXF8EIDH_EID8_POSN                                 0x0
#define _RXF8EIDH_EID8_POSITION                             0x0
#define _RXF8EIDH_EID8_SIZE                                 0x1
#define _RXF8EIDH_EID8_LENGTH                               0x1
#define _RXF8EIDH_EID8_MASK                                 0x1
#define _RXF8EIDH_EID9_POSN                                 0x1
#define _RXF8EIDH_EID9_POSITION                             0x1
#define _RXF8EIDH_EID9_SIZE                                 0x1
#define _RXF8EIDH_EID9_LENGTH                               0x1
#define _RXF8EIDH_EID9_MASK                                 0x2
#define _RXF8EIDH_EID10_POSN                                0x2
#define _RXF8EIDH_EID10_POSITION                            0x2
#define _RXF8EIDH_EID10_SIZE                                0x1
#define _RXF8EIDH_EID10_LENGTH                              0x1
#define _RXF8EIDH_EID10_MASK                                0x4
#define _RXF8EIDH_EID11_POSN                                0x3
#define _RXF8EIDH_EID11_POSITION                            0x3
#define _RXF8EIDH_EID11_SIZE                                0x1
#define _RXF8EIDH_EID11_LENGTH                              0x1
#define _RXF8EIDH_EID11_MASK                                0x8
#define _RXF8EIDH_EID12_POSN                                0x4
#define _RXF8EIDH_EID12_POSITION                            0x4
#define _RXF8EIDH_EID12_SIZE                                0x1
#define _RXF8EIDH_EID12_LENGTH                              0x1
#define _RXF8EIDH_EID12_MASK                                0x10
#define _RXF8EIDH_EID13_POSN                                0x5
#define _RXF8EIDH_EID13_POSITION                            0x5
#define _RXF8EIDH_EID13_SIZE                                0x1
#define _RXF8EIDH_EID13_LENGTH                              0x1
#define _RXF8EIDH_EID13_MASK                                0x20
#define _RXF8EIDH_EID14_POSN                                0x6
#define _RXF8EIDH_EID14_POSITION                            0x6
#define _RXF8EIDH_EID14_SIZE                                0x1
#define _RXF8EIDH_EID14_LENGTH                              0x1
#define _RXF8EIDH_EID14_MASK                                0x40
#define _RXF8EIDH_EID15_POSN                                0x7
#define _RXF8EIDH_EID15_POSITION                            0x7
#define _RXF8EIDH_EID15_SIZE                                0x1
#define _RXF8EIDH_EID15_LENGTH                              0x1
#define _RXF8EIDH_EID15_MASK                                0x80
#define _RXF8EIDH_RXF8EID8_POSN                             0x0
#define _RXF8EIDH_RXF8EID8_POSITION                         0x0
#define _RXF8EIDH_RXF8EID8_SIZE                             0x1
#define _RXF8EIDH_RXF8EID8_LENGTH                           0x1
#define _RXF8EIDH_RXF8EID8_MASK                             0x1
#define _RXF8EIDH_RXF8EID9_POSN                             0x1
#define _RXF8EIDH_RXF8EID9_POSITION                         0x1
#define _RXF8EIDH_RXF8EID9_SIZE                             0x1
#define _RXF8EIDH_RXF8EID9_LENGTH                           0x1
#define _RXF8EIDH_RXF8EID9_MASK                             0x2
#define _RXF8EIDH_RXF8EID10_POSN                            0x2
#define _RXF8EIDH_RXF8EID10_POSITION                        0x2
#define _RXF8EIDH_RXF8EID10_SIZE                            0x1
#define _RXF8EIDH_RXF8EID10_LENGTH                          0x1
#define _RXF8EIDH_RXF8EID10_MASK                            0x4
#define _RXF8EIDH_RXF8EID11_POSN                            0x3
#define _RXF8EIDH_RXF8EID11_POSITION                        0x3
#define _RXF8EIDH_RXF8EID11_SIZE                            0x1
#define _RXF8EIDH_RXF8EID11_LENGTH                          0x1
#define _RXF8EIDH_RXF8EID11_MASK                            0x8
#define _RXF8EIDH_RXF8EID12_POSN                            0x4
#define _RXF8EIDH_RXF8EID12_POSITION                        0x4
#define _RXF8EIDH_RXF8EID12_SIZE                            0x1
#define _RXF8EIDH_RXF8EID12_LENGTH                          0x1
#define _RXF8EIDH_RXF8EID12_MASK                            0x10
#define _RXF8EIDH_RXF8EID13_POSN                            0x5
#define _RXF8EIDH_RXF8EID13_POSITION                        0x5
#define _RXF8EIDH_RXF8EID13_SIZE                            0x1
#define _RXF8EIDH_RXF8EID13_LENGTH                          0x1
#define _RXF8EIDH_RXF8EID13_MASK                            0x20
#define _RXF8EIDH_RXF8EID14_POSN                            0x6
#define _RXF8EIDH_RXF8EID14_POSITION                        0x6
#define _RXF8EIDH_RXF8EID14_SIZE                            0x1
#define _RXF8EIDH_RXF8EID14_LENGTH                          0x1
#define _RXF8EIDH_RXF8EID14_MASK                            0x40
#define _RXF8EIDH_RXF8EID15_POSN                            0x7
#define _RXF8EIDH_RXF8EID15_POSITION                        0x7
#define _RXF8EIDH_RXF8EID15_SIZE                            0x1
#define _RXF8EIDH_RXF8EID15_LENGTH                          0x1
#define _RXF8EIDH_RXF8EID15_MASK                            0x80

// Register: RXF8EIDL
#define RXF8EIDL RXF8EIDL
extern volatile unsigned char           RXF8EIDL            __at(0xD6B);
#ifndef _LIB_BUILD
asm("RXF8EIDL equ 0D6Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF8EID0               :1;
        unsigned RXF8EID1               :1;
        unsigned RXF8EID2               :1;
        unsigned RXF8EID3               :1;
        unsigned RXF8EID4               :1;
        unsigned RXF8EID5               :1;
        unsigned RXF8EID6               :1;
        unsigned RXF8EID7               :1;
    };
} RXF8EIDLbits_t;
extern volatile RXF8EIDLbits_t RXF8EIDLbits __at(0xD6B);
// bitfield macros
#define _RXF8EIDL_EID0_POSN                                 0x0
#define _RXF8EIDL_EID0_POSITION                             0x0
#define _RXF8EIDL_EID0_SIZE                                 0x1
#define _RXF8EIDL_EID0_LENGTH                               0x1
#define _RXF8EIDL_EID0_MASK                                 0x1
#define _RXF8EIDL_EID1_POSN                                 0x1
#define _RXF8EIDL_EID1_POSITION                             0x1
#define _RXF8EIDL_EID1_SIZE                                 0x1
#define _RXF8EIDL_EID1_LENGTH                               0x1
#define _RXF8EIDL_EID1_MASK                                 0x2
#define _RXF8EIDL_EID2_POSN                                 0x2
#define _RXF8EIDL_EID2_POSITION                             0x2
#define _RXF8EIDL_EID2_SIZE                                 0x1
#define _RXF8EIDL_EID2_LENGTH                               0x1
#define _RXF8EIDL_EID2_MASK                                 0x4
#define _RXF8EIDL_EID3_POSN                                 0x3
#define _RXF8EIDL_EID3_POSITION                             0x3
#define _RXF8EIDL_EID3_SIZE                                 0x1
#define _RXF8EIDL_EID3_LENGTH                               0x1
#define _RXF8EIDL_EID3_MASK                                 0x8
#define _RXF8EIDL_EID4_POSN                                 0x4
#define _RXF8EIDL_EID4_POSITION                             0x4
#define _RXF8EIDL_EID4_SIZE                                 0x1
#define _RXF8EIDL_EID4_LENGTH                               0x1
#define _RXF8EIDL_EID4_MASK                                 0x10
#define _RXF8EIDL_EID5_POSN                                 0x5
#define _RXF8EIDL_EID5_POSITION                             0x5
#define _RXF8EIDL_EID5_SIZE                                 0x1
#define _RXF8EIDL_EID5_LENGTH                               0x1
#define _RXF8EIDL_EID5_MASK                                 0x20
#define _RXF8EIDL_EID6_POSN                                 0x6
#define _RXF8EIDL_EID6_POSITION                             0x6
#define _RXF8EIDL_EID6_SIZE                                 0x1
#define _RXF8EIDL_EID6_LENGTH                               0x1
#define _RXF8EIDL_EID6_MASK                                 0x40
#define _RXF8EIDL_EID7_POSN                                 0x7
#define _RXF8EIDL_EID7_POSITION                             0x7
#define _RXF8EIDL_EID7_SIZE                                 0x1
#define _RXF8EIDL_EID7_LENGTH                               0x1
#define _RXF8EIDL_EID7_MASK                                 0x80
#define _RXF8EIDL_RXF8EID0_POSN                             0x0
#define _RXF8EIDL_RXF8EID0_POSITION                         0x0
#define _RXF8EIDL_RXF8EID0_SIZE                             0x1
#define _RXF8EIDL_RXF8EID0_LENGTH                           0x1
#define _RXF8EIDL_RXF8EID0_MASK                             0x1
#define _RXF8EIDL_RXF8EID1_POSN                             0x1
#define _RXF8EIDL_RXF8EID1_POSITION                         0x1
#define _RXF8EIDL_RXF8EID1_SIZE                             0x1
#define _RXF8EIDL_RXF8EID1_LENGTH                           0x1
#define _RXF8EIDL_RXF8EID1_MASK                             0x2
#define _RXF8EIDL_RXF8EID2_POSN                             0x2
#define _RXF8EIDL_RXF8EID2_POSITION                         0x2
#define _RXF8EIDL_RXF8EID2_SIZE                             0x1
#define _RXF8EIDL_RXF8EID2_LENGTH                           0x1
#define _RXF8EIDL_RXF8EID2_MASK                             0x4
#define _RXF8EIDL_RXF8EID3_POSN                             0x3
#define _RXF8EIDL_RXF8EID3_POSITION                         0x3
#define _RXF8EIDL_RXF8EID3_SIZE                             0x1
#define _RXF8EIDL_RXF8EID3_LENGTH                           0x1
#define _RXF8EIDL_RXF8EID3_MASK                             0x8
#define _RXF8EIDL_RXF8EID4_POSN                             0x4
#define _RXF8EIDL_RXF8EID4_POSITION                         0x4
#define _RXF8EIDL_RXF8EID4_SIZE                             0x1
#define _RXF8EIDL_RXF8EID4_LENGTH                           0x1
#define _RXF8EIDL_RXF8EID4_MASK                             0x10
#define _RXF8EIDL_RXF8EID5_POSN                             0x5
#define _RXF8EIDL_RXF8EID5_POSITION                         0x5
#define _RXF8EIDL_RXF8EID5_SIZE                             0x1
#define _RXF8EIDL_RXF8EID5_LENGTH                           0x1
#define _RXF8EIDL_RXF8EID5_MASK                             0x20
#define _RXF8EIDL_RXF8EID6_POSN                             0x6
#define _RXF8EIDL_RXF8EID6_POSITION                         0x6
#define _RXF8EIDL_RXF8EID6_SIZE                             0x1
#define _RXF8EIDL_RXF8EID6_LENGTH                           0x1
#define _RXF8EIDL_RXF8EID6_MASK                             0x40
#define _RXF8EIDL_RXF8EID7_POSN                             0x7
#define _RXF8EIDL_RXF8EID7_POSITION                         0x7
#define _RXF8EIDL_RXF8EID7_SIZE                             0x1
#define _RXF8EIDL_RXF8EID7_LENGTH                           0x1
#define _RXF8EIDL_RXF8EID7_MASK                             0x80

// Register: RXF9SIDH
#define RXF9SIDH RXF9SIDH
extern volatile unsigned char           RXF9SIDH            __at(0xD70);
#ifndef _LIB_BUILD
asm("RXF9SIDH equ 0D70h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF9SID3               :1;
        unsigned RXF9SID4               :1;
        unsigned RXF9SID5               :1;
        unsigned RXF9SID6               :1;
        unsigned RXF9SID7               :1;
        unsigned RXF9SID8               :1;
        unsigned RXF9SID9               :1;
        unsigned RXF9SID10              :1;
    };
} RXF9SIDHbits_t;
extern volatile RXF9SIDHbits_t RXF9SIDHbits __at(0xD70);
// bitfield macros
#define _RXF9SIDH_SID3_POSN                                 0x0
#define _RXF9SIDH_SID3_POSITION                             0x0
#define _RXF9SIDH_SID3_SIZE                                 0x1
#define _RXF9SIDH_SID3_LENGTH                               0x1
#define _RXF9SIDH_SID3_MASK                                 0x1
#define _RXF9SIDH_SID4_POSN                                 0x1
#define _RXF9SIDH_SID4_POSITION                             0x1
#define _RXF9SIDH_SID4_SIZE                                 0x1
#define _RXF9SIDH_SID4_LENGTH                               0x1
#define _RXF9SIDH_SID4_MASK                                 0x2
#define _RXF9SIDH_SID5_POSN                                 0x2
#define _RXF9SIDH_SID5_POSITION                             0x2
#define _RXF9SIDH_SID5_SIZE                                 0x1
#define _RXF9SIDH_SID5_LENGTH                               0x1
#define _RXF9SIDH_SID5_MASK                                 0x4
#define _RXF9SIDH_SID6_POSN                                 0x3
#define _RXF9SIDH_SID6_POSITION                             0x3
#define _RXF9SIDH_SID6_SIZE                                 0x1
#define _RXF9SIDH_SID6_LENGTH                               0x1
#define _RXF9SIDH_SID6_MASK                                 0x8
#define _RXF9SIDH_SID7_POSN                                 0x4
#define _RXF9SIDH_SID7_POSITION                             0x4
#define _RXF9SIDH_SID7_SIZE                                 0x1
#define _RXF9SIDH_SID7_LENGTH                               0x1
#define _RXF9SIDH_SID7_MASK                                 0x10
#define _RXF9SIDH_SID8_POSN                                 0x5
#define _RXF9SIDH_SID8_POSITION                             0x5
#define _RXF9SIDH_SID8_SIZE                                 0x1
#define _RXF9SIDH_SID8_LENGTH                               0x1
#define _RXF9SIDH_SID8_MASK                                 0x20
#define _RXF9SIDH_SID9_POSN                                 0x6
#define _RXF9SIDH_SID9_POSITION                             0x6
#define _RXF9SIDH_SID9_SIZE                                 0x1
#define _RXF9SIDH_SID9_LENGTH                               0x1
#define _RXF9SIDH_SID9_MASK                                 0x40
#define _RXF9SIDH_SID10_POSN                                0x7
#define _RXF9SIDH_SID10_POSITION                            0x7
#define _RXF9SIDH_SID10_SIZE                                0x1
#define _RXF9SIDH_SID10_LENGTH                              0x1
#define _RXF9SIDH_SID10_MASK                                0x80
#define _RXF9SIDH_RXF9SID3_POSN                             0x0
#define _RXF9SIDH_RXF9SID3_POSITION                         0x0
#define _RXF9SIDH_RXF9SID3_SIZE                             0x1
#define _RXF9SIDH_RXF9SID3_LENGTH                           0x1
#define _RXF9SIDH_RXF9SID3_MASK                             0x1
#define _RXF9SIDH_RXF9SID4_POSN                             0x1
#define _RXF9SIDH_RXF9SID4_POSITION                         0x1
#define _RXF9SIDH_RXF9SID4_SIZE                             0x1
#define _RXF9SIDH_RXF9SID4_LENGTH                           0x1
#define _RXF9SIDH_RXF9SID4_MASK                             0x2
#define _RXF9SIDH_RXF9SID5_POSN                             0x2
#define _RXF9SIDH_RXF9SID5_POSITION                         0x2
#define _RXF9SIDH_RXF9SID5_SIZE                             0x1
#define _RXF9SIDH_RXF9SID5_LENGTH                           0x1
#define _RXF9SIDH_RXF9SID5_MASK                             0x4
#define _RXF9SIDH_RXF9SID6_POSN                             0x3
#define _RXF9SIDH_RXF9SID6_POSITION                         0x3
#define _RXF9SIDH_RXF9SID6_SIZE                             0x1
#define _RXF9SIDH_RXF9SID6_LENGTH                           0x1
#define _RXF9SIDH_RXF9SID6_MASK                             0x8
#define _RXF9SIDH_RXF9SID7_POSN                             0x4
#define _RXF9SIDH_RXF9SID7_POSITION                         0x4
#define _RXF9SIDH_RXF9SID7_SIZE                             0x1
#define _RXF9SIDH_RXF9SID7_LENGTH                           0x1
#define _RXF9SIDH_RXF9SID7_MASK                             0x10
#define _RXF9SIDH_RXF9SID8_POSN                             0x5
#define _RXF9SIDH_RXF9SID8_POSITION                         0x5
#define _RXF9SIDH_RXF9SID8_SIZE                             0x1
#define _RXF9SIDH_RXF9SID8_LENGTH                           0x1
#define _RXF9SIDH_RXF9SID8_MASK                             0x20
#define _RXF9SIDH_RXF9SID9_POSN                             0x6
#define _RXF9SIDH_RXF9SID9_POSITION                         0x6
#define _RXF9SIDH_RXF9SID9_SIZE                             0x1
#define _RXF9SIDH_RXF9SID9_LENGTH                           0x1
#define _RXF9SIDH_RXF9SID9_MASK                             0x40
#define _RXF9SIDH_RXF9SID10_POSN                            0x7
#define _RXF9SIDH_RXF9SID10_POSITION                        0x7
#define _RXF9SIDH_RXF9SID10_SIZE                            0x1
#define _RXF9SIDH_RXF9SID10_LENGTH                          0x1
#define _RXF9SIDH_RXF9SID10_MASK                            0x80

// Register: RXF9SIDL
#define RXF9SIDL RXF9SIDL
extern volatile unsigned char           RXF9SIDL            __at(0xD71);
#ifndef _LIB_BUILD
asm("RXF9SIDL equ 0D71h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF9EID16              :1;
        unsigned RXF9EID17              :1;
        unsigned                        :1;
        unsigned RXF9EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF9SID0               :1;
        unsigned RXF9SID1               :1;
        unsigned RXF9SID2               :1;
    };
} RXF9SIDLbits_t;
extern volatile RXF9SIDLbits_t RXF9SIDLbits __at(0xD71);
// bitfield macros
#define _RXF9SIDL_EID16_POSN                                0x0
#define _RXF9SIDL_EID16_POSITION                            0x0
#define _RXF9SIDL_EID16_SIZE                                0x1
#define _RXF9SIDL_EID16_LENGTH                              0x1
#define _RXF9SIDL_EID16_MASK                                0x1
#define _RXF9SIDL_EID17_POSN                                0x1
#define _RXF9SIDL_EID17_POSITION                            0x1
#define _RXF9SIDL_EID17_SIZE                                0x1
#define _RXF9SIDL_EID17_LENGTH                              0x1
#define _RXF9SIDL_EID17_MASK                                0x2
#define _RXF9SIDL_EXIDEN_POSN                               0x3
#define _RXF9SIDL_EXIDEN_POSITION                           0x3
#define _RXF9SIDL_EXIDEN_SIZE                               0x1
#define _RXF9SIDL_EXIDEN_LENGTH                             0x1
#define _RXF9SIDL_EXIDEN_MASK                               0x8
#define _RXF9SIDL_SID0_POSN                                 0x5
#define _RXF9SIDL_SID0_POSITION                             0x5
#define _RXF9SIDL_SID0_SIZE                                 0x1
#define _RXF9SIDL_SID0_LENGTH                               0x1
#define _RXF9SIDL_SID0_MASK                                 0x20
#define _RXF9SIDL_SID1_POSN                                 0x6
#define _RXF9SIDL_SID1_POSITION                             0x6
#define _RXF9SIDL_SID1_SIZE                                 0x1
#define _RXF9SIDL_SID1_LENGTH                               0x1
#define _RXF9SIDL_SID1_MASK                                 0x40
#define _RXF9SIDL_SID2_POSN                                 0x7
#define _RXF9SIDL_SID2_POSITION                             0x7
#define _RXF9SIDL_SID2_SIZE                                 0x1
#define _RXF9SIDL_SID2_LENGTH                               0x1
#define _RXF9SIDL_SID2_MASK                                 0x80
#define _RXF9SIDL_EXIDE_POSN                                0x3
#define _RXF9SIDL_EXIDE_POSITION                            0x3
#define _RXF9SIDL_EXIDE_SIZE                                0x1
#define _RXF9SIDL_EXIDE_LENGTH                              0x1
#define _RXF9SIDL_EXIDE_MASK                                0x8
#define _RXF9SIDL_RXF9EID16_POSN                            0x0
#define _RXF9SIDL_RXF9EID16_POSITION                        0x0
#define _RXF9SIDL_RXF9EID16_SIZE                            0x1
#define _RXF9SIDL_RXF9EID16_LENGTH                          0x1
#define _RXF9SIDL_RXF9EID16_MASK                            0x1
#define _RXF9SIDL_RXF9EID17_POSN                            0x1
#define _RXF9SIDL_RXF9EID17_POSITION                        0x1
#define _RXF9SIDL_RXF9EID17_SIZE                            0x1
#define _RXF9SIDL_RXF9EID17_LENGTH                          0x1
#define _RXF9SIDL_RXF9EID17_MASK                            0x2
#define _RXF9SIDL_RXF9EXIDEN_POSN                           0x3
#define _RXF9SIDL_RXF9EXIDEN_POSITION                       0x3
#define _RXF9SIDL_RXF9EXIDEN_SIZE                           0x1
#define _RXF9SIDL_RXF9EXIDEN_LENGTH                         0x1
#define _RXF9SIDL_RXF9EXIDEN_MASK                           0x8
#define _RXF9SIDL_RXF9SID0_POSN                             0x5
#define _RXF9SIDL_RXF9SID0_POSITION                         0x5
#define _RXF9SIDL_RXF9SID0_SIZE                             0x1
#define _RXF9SIDL_RXF9SID0_LENGTH                           0x1
#define _RXF9SIDL_RXF9SID0_MASK                             0x20
#define _RXF9SIDL_RXF9SID1_POSN                             0x6
#define _RXF9SIDL_RXF9SID1_POSITION                         0x6
#define _RXF9SIDL_RXF9SID1_SIZE                             0x1
#define _RXF9SIDL_RXF9SID1_LENGTH                           0x1
#define _RXF9SIDL_RXF9SID1_MASK                             0x40
#define _RXF9SIDL_RXF9SID2_POSN                             0x7
#define _RXF9SIDL_RXF9SID2_POSITION                         0x7
#define _RXF9SIDL_RXF9SID2_SIZE                             0x1
#define _RXF9SIDL_RXF9SID2_LENGTH                           0x1
#define _RXF9SIDL_RXF9SID2_MASK                             0x80

// Register: RXF9EIDH
#define RXF9EIDH RXF9EIDH
extern volatile unsigned char           RXF9EIDH            __at(0xD72);
#ifndef _LIB_BUILD
asm("RXF9EIDH equ 0D72h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF9EID8               :1;
        unsigned RXF9EID9               :1;
        unsigned RXF9EID10              :1;
        unsigned RXF9EID11              :1;
        unsigned RXF9EID12              :1;
        unsigned RXF9EID13              :1;
        unsigned RXF9EID14              :1;
        unsigned RXF9EID15              :1;
    };
} RXF9EIDHbits_t;
extern volatile RXF9EIDHbits_t RXF9EIDHbits __at(0xD72);
// bitfield macros
#define _RXF9EIDH_EID8_POSN                                 0x0
#define _RXF9EIDH_EID8_POSITION                             0x0
#define _RXF9EIDH_EID8_SIZE                                 0x1
#define _RXF9EIDH_EID8_LENGTH                               0x1
#define _RXF9EIDH_EID8_MASK                                 0x1
#define _RXF9EIDH_EID9_POSN                                 0x1
#define _RXF9EIDH_EID9_POSITION                             0x1
#define _RXF9EIDH_EID9_SIZE                                 0x1
#define _RXF9EIDH_EID9_LENGTH                               0x1
#define _RXF9EIDH_EID9_MASK                                 0x2
#define _RXF9EIDH_EID10_POSN                                0x2
#define _RXF9EIDH_EID10_POSITION                            0x2
#define _RXF9EIDH_EID10_SIZE                                0x1
#define _RXF9EIDH_EID10_LENGTH                              0x1
#define _RXF9EIDH_EID10_MASK                                0x4
#define _RXF9EIDH_EID11_POSN                                0x3
#define _RXF9EIDH_EID11_POSITION                            0x3
#define _RXF9EIDH_EID11_SIZE                                0x1
#define _RXF9EIDH_EID11_LENGTH                              0x1
#define _RXF9EIDH_EID11_MASK                                0x8
#define _RXF9EIDH_EID12_POSN                                0x4
#define _RXF9EIDH_EID12_POSITION                            0x4
#define _RXF9EIDH_EID12_SIZE                                0x1
#define _RXF9EIDH_EID12_LENGTH                              0x1
#define _RXF9EIDH_EID12_MASK                                0x10
#define _RXF9EIDH_EID13_POSN                                0x5
#define _RXF9EIDH_EID13_POSITION                            0x5
#define _RXF9EIDH_EID13_SIZE                                0x1
#define _RXF9EIDH_EID13_LENGTH                              0x1
#define _RXF9EIDH_EID13_MASK                                0x20
#define _RXF9EIDH_EID14_POSN                                0x6
#define _RXF9EIDH_EID14_POSITION                            0x6
#define _RXF9EIDH_EID14_SIZE                                0x1
#define _RXF9EIDH_EID14_LENGTH                              0x1
#define _RXF9EIDH_EID14_MASK                                0x40
#define _RXF9EIDH_EID15_POSN                                0x7
#define _RXF9EIDH_EID15_POSITION                            0x7
#define _RXF9EIDH_EID15_SIZE                                0x1
#define _RXF9EIDH_EID15_LENGTH                              0x1
#define _RXF9EIDH_EID15_MASK                                0x80
#define _RXF9EIDH_RXF9EID8_POSN                             0x0
#define _RXF9EIDH_RXF9EID8_POSITION                         0x0
#define _RXF9EIDH_RXF9EID8_SIZE                             0x1
#define _RXF9EIDH_RXF9EID8_LENGTH                           0x1
#define _RXF9EIDH_RXF9EID8_MASK                             0x1
#define _RXF9EIDH_RXF9EID9_POSN                             0x1
#define _RXF9EIDH_RXF9EID9_POSITION                         0x1
#define _RXF9EIDH_RXF9EID9_SIZE                             0x1
#define _RXF9EIDH_RXF9EID9_LENGTH                           0x1
#define _RXF9EIDH_RXF9EID9_MASK                             0x2
#define _RXF9EIDH_RXF9EID10_POSN                            0x2
#define _RXF9EIDH_RXF9EID10_POSITION                        0x2
#define _RXF9EIDH_RXF9EID10_SIZE                            0x1
#define _RXF9EIDH_RXF9EID10_LENGTH                          0x1
#define _RXF9EIDH_RXF9EID10_MASK                            0x4
#define _RXF9EIDH_RXF9EID11_POSN                            0x3
#define _RXF9EIDH_RXF9EID11_POSITION                        0x3
#define _RXF9EIDH_RXF9EID11_SIZE                            0x1
#define _RXF9EIDH_RXF9EID11_LENGTH                          0x1
#define _RXF9EIDH_RXF9EID11_MASK                            0x8
#define _RXF9EIDH_RXF9EID12_POSN                            0x4
#define _RXF9EIDH_RXF9EID12_POSITION                        0x4
#define _RXF9EIDH_RXF9EID12_SIZE                            0x1
#define _RXF9EIDH_RXF9EID12_LENGTH                          0x1
#define _RXF9EIDH_RXF9EID12_MASK                            0x10
#define _RXF9EIDH_RXF9EID13_POSN                            0x5
#define _RXF9EIDH_RXF9EID13_POSITION                        0x5
#define _RXF9EIDH_RXF9EID13_SIZE                            0x1
#define _RXF9EIDH_RXF9EID13_LENGTH                          0x1
#define _RXF9EIDH_RXF9EID13_MASK                            0x20
#define _RXF9EIDH_RXF9EID14_POSN                            0x6
#define _RXF9EIDH_RXF9EID14_POSITION                        0x6
#define _RXF9EIDH_RXF9EID14_SIZE                            0x1
#define _RXF9EIDH_RXF9EID14_LENGTH                          0x1
#define _RXF9EIDH_RXF9EID14_MASK                            0x40
#define _RXF9EIDH_RXF9EID15_POSN                            0x7
#define _RXF9EIDH_RXF9EID15_POSITION                        0x7
#define _RXF9EIDH_RXF9EID15_SIZE                            0x1
#define _RXF9EIDH_RXF9EID15_LENGTH                          0x1
#define _RXF9EIDH_RXF9EID15_MASK                            0x80

// Register: RXF9EIDL
#define RXF9EIDL RXF9EIDL
extern volatile unsigned char           RXF9EIDL            __at(0xD73);
#ifndef _LIB_BUILD
asm("RXF9EIDL equ 0D73h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF9EID0               :1;
        unsigned RXF9EID1               :1;
        unsigned RXF9EID2               :1;
        unsigned RXF9EID3               :1;
        unsigned RXF9EID4               :1;
        unsigned RXF9EID5               :1;
        unsigned RXF9EID6               :1;
        unsigned RXF9EID7               :1;
    };
} RXF9EIDLbits_t;
extern volatile RXF9EIDLbits_t RXF9EIDLbits __at(0xD73);
// bitfield macros
#define _RXF9EIDL_EID0_POSN                                 0x0
#define _RXF9EIDL_EID0_POSITION                             0x0
#define _RXF9EIDL_EID0_SIZE                                 0x1
#define _RXF9EIDL_EID0_LENGTH                               0x1
#define _RXF9EIDL_EID0_MASK                                 0x1
#define _RXF9EIDL_EID1_POSN                                 0x1
#define _RXF9EIDL_EID1_POSITION                             0x1
#define _RXF9EIDL_EID1_SIZE                                 0x1
#define _RXF9EIDL_EID1_LENGTH                               0x1
#define _RXF9EIDL_EID1_MASK                                 0x2
#define _RXF9EIDL_EID2_POSN                                 0x2
#define _RXF9EIDL_EID2_POSITION                             0x2
#define _RXF9EIDL_EID2_SIZE                                 0x1
#define _RXF9EIDL_EID2_LENGTH                               0x1
#define _RXF9EIDL_EID2_MASK                                 0x4
#define _RXF9EIDL_EID3_POSN                                 0x3
#define _RXF9EIDL_EID3_POSITION                             0x3
#define _RXF9EIDL_EID3_SIZE                                 0x1
#define _RXF9EIDL_EID3_LENGTH                               0x1
#define _RXF9EIDL_EID3_MASK                                 0x8
#define _RXF9EIDL_EID4_POSN                                 0x4
#define _RXF9EIDL_EID4_POSITION                             0x4
#define _RXF9EIDL_EID4_SIZE                                 0x1
#define _RXF9EIDL_EID4_LENGTH                               0x1
#define _RXF9EIDL_EID4_MASK                                 0x10
#define _RXF9EIDL_EID5_POSN                                 0x5
#define _RXF9EIDL_EID5_POSITION                             0x5
#define _RXF9EIDL_EID5_SIZE                                 0x1
#define _RXF9EIDL_EID5_LENGTH                               0x1
#define _RXF9EIDL_EID5_MASK                                 0x20
#define _RXF9EIDL_EID6_POSN                                 0x6
#define _RXF9EIDL_EID6_POSITION                             0x6
#define _RXF9EIDL_EID6_SIZE                                 0x1
#define _RXF9EIDL_EID6_LENGTH                               0x1
#define _RXF9EIDL_EID6_MASK                                 0x40
#define _RXF9EIDL_EID7_POSN                                 0x7
#define _RXF9EIDL_EID7_POSITION                             0x7
#define _RXF9EIDL_EID7_SIZE                                 0x1
#define _RXF9EIDL_EID7_LENGTH                               0x1
#define _RXF9EIDL_EID7_MASK                                 0x80
#define _RXF9EIDL_RXF9EID0_POSN                             0x0
#define _RXF9EIDL_RXF9EID0_POSITION                         0x0
#define _RXF9EIDL_RXF9EID0_SIZE                             0x1
#define _RXF9EIDL_RXF9EID0_LENGTH                           0x1
#define _RXF9EIDL_RXF9EID0_MASK                             0x1
#define _RXF9EIDL_RXF9EID1_POSN                             0x1
#define _RXF9EIDL_RXF9EID1_POSITION                         0x1
#define _RXF9EIDL_RXF9EID1_SIZE                             0x1
#define _RXF9EIDL_RXF9EID1_LENGTH                           0x1
#define _RXF9EIDL_RXF9EID1_MASK                             0x2
#define _RXF9EIDL_RXF9EID2_POSN                             0x2
#define _RXF9EIDL_RXF9EID2_POSITION                         0x2
#define _RXF9EIDL_RXF9EID2_SIZE                             0x1
#define _RXF9EIDL_RXF9EID2_LENGTH                           0x1
#define _RXF9EIDL_RXF9EID2_MASK                             0x4
#define _RXF9EIDL_RXF9EID3_POSN                             0x3
#define _RXF9EIDL_RXF9EID3_POSITION                         0x3
#define _RXF9EIDL_RXF9EID3_SIZE                             0x1
#define _RXF9EIDL_RXF9EID3_LENGTH                           0x1
#define _RXF9EIDL_RXF9EID3_MASK                             0x8
#define _RXF9EIDL_RXF9EID4_POSN                             0x4
#define _RXF9EIDL_RXF9EID4_POSITION                         0x4
#define _RXF9EIDL_RXF9EID4_SIZE                             0x1
#define _RXF9EIDL_RXF9EID4_LENGTH                           0x1
#define _RXF9EIDL_RXF9EID4_MASK                             0x10
#define _RXF9EIDL_RXF9EID5_POSN                             0x5
#define _RXF9EIDL_RXF9EID5_POSITION                         0x5
#define _RXF9EIDL_RXF9EID5_SIZE                             0x1
#define _RXF9EIDL_RXF9EID5_LENGTH                           0x1
#define _RXF9EIDL_RXF9EID5_MASK                             0x20
#define _RXF9EIDL_RXF9EID6_POSN                             0x6
#define _RXF9EIDL_RXF9EID6_POSITION                         0x6
#define _RXF9EIDL_RXF9EID6_SIZE                             0x1
#define _RXF9EIDL_RXF9EID6_LENGTH                           0x1
#define _RXF9EIDL_RXF9EID6_MASK                             0x40
#define _RXF9EIDL_RXF9EID7_POSN                             0x7
#define _RXF9EIDL_RXF9EID7_POSITION                         0x7
#define _RXF9EIDL_RXF9EID7_SIZE                             0x1
#define _RXF9EIDL_RXF9EID7_LENGTH                           0x1
#define _RXF9EIDL_RXF9EID7_MASK                             0x80

// Register: RXF10SIDH
#define RXF10SIDH RXF10SIDH
extern volatile unsigned char           RXF10SIDH           __at(0xD74);
#ifndef _LIB_BUILD
asm("RXF10SIDH equ 0D74h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF10SID3              :1;
        unsigned RXF10SID4              :1;
        unsigned RXF10SID5              :1;
        unsigned RXF10SID6              :1;
        unsigned RXF10SID7              :1;
        unsigned RXF10SID8              :1;
        unsigned RXF10SID9              :1;
        unsigned RXF10SID10             :1;
    };
} RXF10SIDHbits_t;
extern volatile RXF10SIDHbits_t RXF10SIDHbits __at(0xD74);
// bitfield macros
#define _RXF10SIDH_SID3_POSN                                0x0
#define _RXF10SIDH_SID3_POSITION                            0x0
#define _RXF10SIDH_SID3_SIZE                                0x1
#define _RXF10SIDH_SID3_LENGTH                              0x1
#define _RXF10SIDH_SID3_MASK                                0x1
#define _RXF10SIDH_SID4_POSN                                0x1
#define _RXF10SIDH_SID4_POSITION                            0x1
#define _RXF10SIDH_SID4_SIZE                                0x1
#define _RXF10SIDH_SID4_LENGTH                              0x1
#define _RXF10SIDH_SID4_MASK                                0x2
#define _RXF10SIDH_SID5_POSN                                0x2
#define _RXF10SIDH_SID5_POSITION                            0x2
#define _RXF10SIDH_SID5_SIZE                                0x1
#define _RXF10SIDH_SID5_LENGTH                              0x1
#define _RXF10SIDH_SID5_MASK                                0x4
#define _RXF10SIDH_SID6_POSN                                0x3
#define _RXF10SIDH_SID6_POSITION                            0x3
#define _RXF10SIDH_SID6_SIZE                                0x1
#define _RXF10SIDH_SID6_LENGTH                              0x1
#define _RXF10SIDH_SID6_MASK                                0x8
#define _RXF10SIDH_SID7_POSN                                0x4
#define _RXF10SIDH_SID7_POSITION                            0x4
#define _RXF10SIDH_SID7_SIZE                                0x1
#define _RXF10SIDH_SID7_LENGTH                              0x1
#define _RXF10SIDH_SID7_MASK                                0x10
#define _RXF10SIDH_SID8_POSN                                0x5
#define _RXF10SIDH_SID8_POSITION                            0x5
#define _RXF10SIDH_SID8_SIZE                                0x1
#define _RXF10SIDH_SID8_LENGTH                              0x1
#define _RXF10SIDH_SID8_MASK                                0x20
#define _RXF10SIDH_SID9_POSN                                0x6
#define _RXF10SIDH_SID9_POSITION                            0x6
#define _RXF10SIDH_SID9_SIZE                                0x1
#define _RXF10SIDH_SID9_LENGTH                              0x1
#define _RXF10SIDH_SID9_MASK                                0x40
#define _RXF10SIDH_SID10_POSN                               0x7
#define _RXF10SIDH_SID10_POSITION                           0x7
#define _RXF10SIDH_SID10_SIZE                               0x1
#define _RXF10SIDH_SID10_LENGTH                             0x1
#define _RXF10SIDH_SID10_MASK                               0x80
#define _RXF10SIDH_RXF10SID3_POSN                           0x0
#define _RXF10SIDH_RXF10SID3_POSITION                       0x0
#define _RXF10SIDH_RXF10SID3_SIZE                           0x1
#define _RXF10SIDH_RXF10SID3_LENGTH                         0x1
#define _RXF10SIDH_RXF10SID3_MASK                           0x1
#define _RXF10SIDH_RXF10SID4_POSN                           0x1
#define _RXF10SIDH_RXF10SID4_POSITION                       0x1
#define _RXF10SIDH_RXF10SID4_SIZE                           0x1
#define _RXF10SIDH_RXF10SID4_LENGTH                         0x1
#define _RXF10SIDH_RXF10SID4_MASK                           0x2
#define _RXF10SIDH_RXF10SID5_POSN                           0x2
#define _RXF10SIDH_RXF10SID5_POSITION                       0x2
#define _RXF10SIDH_RXF10SID5_SIZE                           0x1
#define _RXF10SIDH_RXF10SID5_LENGTH                         0x1
#define _RXF10SIDH_RXF10SID5_MASK                           0x4
#define _RXF10SIDH_RXF10SID6_POSN                           0x3
#define _RXF10SIDH_RXF10SID6_POSITION                       0x3
#define _RXF10SIDH_RXF10SID6_SIZE                           0x1
#define _RXF10SIDH_RXF10SID6_LENGTH                         0x1
#define _RXF10SIDH_RXF10SID6_MASK                           0x8
#define _RXF10SIDH_RXF10SID7_POSN                           0x4
#define _RXF10SIDH_RXF10SID7_POSITION                       0x4
#define _RXF10SIDH_RXF10SID7_SIZE                           0x1
#define _RXF10SIDH_RXF10SID7_LENGTH                         0x1
#define _RXF10SIDH_RXF10SID7_MASK                           0x10
#define _RXF10SIDH_RXF10SID8_POSN                           0x5
#define _RXF10SIDH_RXF10SID8_POSITION                       0x5
#define _RXF10SIDH_RXF10SID8_SIZE                           0x1
#define _RXF10SIDH_RXF10SID8_LENGTH                         0x1
#define _RXF10SIDH_RXF10SID8_MASK                           0x20
#define _RXF10SIDH_RXF10SID9_POSN                           0x6
#define _RXF10SIDH_RXF10SID9_POSITION                       0x6
#define _RXF10SIDH_RXF10SID9_SIZE                           0x1
#define _RXF10SIDH_RXF10SID9_LENGTH                         0x1
#define _RXF10SIDH_RXF10SID9_MASK                           0x40
#define _RXF10SIDH_RXF10SID10_POSN                          0x7
#define _RXF10SIDH_RXF10SID10_POSITION                      0x7
#define _RXF10SIDH_RXF10SID10_SIZE                          0x1
#define _RXF10SIDH_RXF10SID10_LENGTH                        0x1
#define _RXF10SIDH_RXF10SID10_MASK                          0x80

// Register: RXF10SIDL
#define RXF10SIDL RXF10SIDL
extern volatile unsigned char           RXF10SIDL           __at(0xD75);
#ifndef _LIB_BUILD
asm("RXF10SIDL equ 0D75h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF10EID16             :1;
        unsigned RXF10EID17             :1;
        unsigned                        :1;
        unsigned RXF10EXIDEN            :1;
        unsigned                        :1;
        unsigned RXF10SID0              :1;
        unsigned RXF10SID1              :1;
        unsigned RXF10SID2              :1;
    };
} RXF10SIDLbits_t;
extern volatile RXF10SIDLbits_t RXF10SIDLbits __at(0xD75);
// bitfield macros
#define _RXF10SIDL_EID16_POSN                               0x0
#define _RXF10SIDL_EID16_POSITION                           0x0
#define _RXF10SIDL_EID16_SIZE                               0x1
#define _RXF10SIDL_EID16_LENGTH                             0x1
#define _RXF10SIDL_EID16_MASK                               0x1
#define _RXF10SIDL_EID17_POSN                               0x1
#define _RXF10SIDL_EID17_POSITION                           0x1
#define _RXF10SIDL_EID17_SIZE                               0x1
#define _RXF10SIDL_EID17_LENGTH                             0x1
#define _RXF10SIDL_EID17_MASK                               0x2
#define _RXF10SIDL_EXIDEN_POSN                              0x3
#define _RXF10SIDL_EXIDEN_POSITION                          0x3
#define _RXF10SIDL_EXIDEN_SIZE                              0x1
#define _RXF10SIDL_EXIDEN_LENGTH                            0x1
#define _RXF10SIDL_EXIDEN_MASK                              0x8
#define _RXF10SIDL_SID0_POSN                                0x5
#define _RXF10SIDL_SID0_POSITION                            0x5
#define _RXF10SIDL_SID0_SIZE                                0x1
#define _RXF10SIDL_SID0_LENGTH                              0x1
#define _RXF10SIDL_SID0_MASK                                0x20
#define _RXF10SIDL_SID1_POSN                                0x6
#define _RXF10SIDL_SID1_POSITION                            0x6
#define _RXF10SIDL_SID1_SIZE                                0x1
#define _RXF10SIDL_SID1_LENGTH                              0x1
#define _RXF10SIDL_SID1_MASK                                0x40
#define _RXF10SIDL_SID2_POSN                                0x7
#define _RXF10SIDL_SID2_POSITION                            0x7
#define _RXF10SIDL_SID2_SIZE                                0x1
#define _RXF10SIDL_SID2_LENGTH                              0x1
#define _RXF10SIDL_SID2_MASK                                0x80
#define _RXF10SIDL_EXIDE_POSN                               0x3
#define _RXF10SIDL_EXIDE_POSITION                           0x3
#define _RXF10SIDL_EXIDE_SIZE                               0x1
#define _RXF10SIDL_EXIDE_LENGTH                             0x1
#define _RXF10SIDL_EXIDE_MASK                               0x8
#define _RXF10SIDL_RXF10EID16_POSN                          0x0
#define _RXF10SIDL_RXF10EID16_POSITION                      0x0
#define _RXF10SIDL_RXF10EID16_SIZE                          0x1
#define _RXF10SIDL_RXF10EID16_LENGTH                        0x1
#define _RXF10SIDL_RXF10EID16_MASK                          0x1
#define _RXF10SIDL_RXF10EID17_POSN                          0x1
#define _RXF10SIDL_RXF10EID17_POSITION                      0x1
#define _RXF10SIDL_RXF10EID17_SIZE                          0x1
#define _RXF10SIDL_RXF10EID17_LENGTH                        0x1
#define _RXF10SIDL_RXF10EID17_MASK                          0x2
#define _RXF10SIDL_RXF10EXIDEN_POSN                         0x3
#define _RXF10SIDL_RXF10EXIDEN_POSITION                     0x3
#define _RXF10SIDL_RXF10EXIDEN_SIZE                         0x1
#define _RXF10SIDL_RXF10EXIDEN_LENGTH                       0x1
#define _RXF10SIDL_RXF10EXIDEN_MASK                         0x8
#define _RXF10SIDL_RXF10SID0_POSN                           0x5
#define _RXF10SIDL_RXF10SID0_POSITION                       0x5
#define _RXF10SIDL_RXF10SID0_SIZE                           0x1
#define _RXF10SIDL_RXF10SID0_LENGTH                         0x1
#define _RXF10SIDL_RXF10SID0_MASK                           0x20
#define _RXF10SIDL_RXF10SID1_POSN                           0x6
#define _RXF10SIDL_RXF10SID1_POSITION                       0x6
#define _RXF10SIDL_RXF10SID1_SIZE                           0x1
#define _RXF10SIDL_RXF10SID1_LENGTH                         0x1
#define _RXF10SIDL_RXF10SID1_MASK                           0x40
#define _RXF10SIDL_RXF10SID2_POSN                           0x7
#define _RXF10SIDL_RXF10SID2_POSITION                       0x7
#define _RXF10SIDL_RXF10SID2_SIZE                           0x1
#define _RXF10SIDL_RXF10SID2_LENGTH                         0x1
#define _RXF10SIDL_RXF10SID2_MASK                           0x80

// Register: RXF10EIDH
#define RXF10EIDH RXF10EIDH
extern volatile unsigned char           RXF10EIDH           __at(0xD76);
#ifndef _LIB_BUILD
asm("RXF10EIDH equ 0D76h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF10EID8              :1;
        unsigned RXF10EID9              :1;
        unsigned RXF10EID10             :1;
        unsigned RXF10EID11             :1;
        unsigned RXF10EID12             :1;
        unsigned RXF10EID13             :1;
        unsigned RXF10EID14             :1;
        unsigned RXF10EID15             :1;
    };
} RXF10EIDHbits_t;
extern volatile RXF10EIDHbits_t RXF10EIDHbits __at(0xD76);
// bitfield macros
#define _RXF10EIDH_EID8_POSN                                0x0
#define _RXF10EIDH_EID8_POSITION                            0x0
#define _RXF10EIDH_EID8_SIZE                                0x1
#define _RXF10EIDH_EID8_LENGTH                              0x1
#define _RXF10EIDH_EID8_MASK                                0x1
#define _RXF10EIDH_EID9_POSN                                0x1
#define _RXF10EIDH_EID9_POSITION                            0x1
#define _RXF10EIDH_EID9_SIZE                                0x1
#define _RXF10EIDH_EID9_LENGTH                              0x1
#define _RXF10EIDH_EID9_MASK                                0x2
#define _RXF10EIDH_EID10_POSN                               0x2
#define _RXF10EIDH_EID10_POSITION                           0x2
#define _RXF10EIDH_EID10_SIZE                               0x1
#define _RXF10EIDH_EID10_LENGTH                             0x1
#define _RXF10EIDH_EID10_MASK                               0x4
#define _RXF10EIDH_EID11_POSN                               0x3
#define _RXF10EIDH_EID11_POSITION                           0x3
#define _RXF10EIDH_EID11_SIZE                               0x1
#define _RXF10EIDH_EID11_LENGTH                             0x1
#define _RXF10EIDH_EID11_MASK                               0x8
#define _RXF10EIDH_EID12_POSN                               0x4
#define _RXF10EIDH_EID12_POSITION                           0x4
#define _RXF10EIDH_EID12_SIZE                               0x1
#define _RXF10EIDH_EID12_LENGTH                             0x1
#define _RXF10EIDH_EID12_MASK                               0x10
#define _RXF10EIDH_EID13_POSN                               0x5
#define _RXF10EIDH_EID13_POSITION                           0x5
#define _RXF10EIDH_EID13_SIZE                               0x1
#define _RXF10EIDH_EID13_LENGTH                             0x1
#define _RXF10EIDH_EID13_MASK                               0x20
#define _RXF10EIDH_EID14_POSN                               0x6
#define _RXF10EIDH_EID14_POSITION                           0x6
#define _RXF10EIDH_EID14_SIZE                               0x1
#define _RXF10EIDH_EID14_LENGTH                             0x1
#define _RXF10EIDH_EID14_MASK                               0x40
#define _RXF10EIDH_EID15_POSN                               0x7
#define _RXF10EIDH_EID15_POSITION                           0x7
#define _RXF10EIDH_EID15_SIZE                               0x1
#define _RXF10EIDH_EID15_LENGTH                             0x1
#define _RXF10EIDH_EID15_MASK                               0x80
#define _RXF10EIDH_RXF10EID8_POSN                           0x0
#define _RXF10EIDH_RXF10EID8_POSITION                       0x0
#define _RXF10EIDH_RXF10EID8_SIZE                           0x1
#define _RXF10EIDH_RXF10EID8_LENGTH                         0x1
#define _RXF10EIDH_RXF10EID8_MASK                           0x1
#define _RXF10EIDH_RXF10EID9_POSN                           0x1
#define _RXF10EIDH_RXF10EID9_POSITION                       0x1
#define _RXF10EIDH_RXF10EID9_SIZE                           0x1
#define _RXF10EIDH_RXF10EID9_LENGTH                         0x1
#define _RXF10EIDH_RXF10EID9_MASK                           0x2
#define _RXF10EIDH_RXF10EID10_POSN                          0x2
#define _RXF10EIDH_RXF10EID10_POSITION                      0x2
#define _RXF10EIDH_RXF10EID10_SIZE                          0x1
#define _RXF10EIDH_RXF10EID10_LENGTH                        0x1
#define _RXF10EIDH_RXF10EID10_MASK                          0x4
#define _RXF10EIDH_RXF10EID11_POSN                          0x3
#define _RXF10EIDH_RXF10EID11_POSITION                      0x3
#define _RXF10EIDH_RXF10EID11_SIZE                          0x1
#define _RXF10EIDH_RXF10EID11_LENGTH                        0x1
#define _RXF10EIDH_RXF10EID11_MASK                          0x8
#define _RXF10EIDH_RXF10EID12_POSN                          0x4
#define _RXF10EIDH_RXF10EID12_POSITION                      0x4
#define _RXF10EIDH_RXF10EID12_SIZE                          0x1
#define _RXF10EIDH_RXF10EID12_LENGTH                        0x1
#define _RXF10EIDH_RXF10EID12_MASK                          0x10
#define _RXF10EIDH_RXF10EID13_POSN                          0x5
#define _RXF10EIDH_RXF10EID13_POSITION                      0x5
#define _RXF10EIDH_RXF10EID13_SIZE                          0x1
#define _RXF10EIDH_RXF10EID13_LENGTH                        0x1
#define _RXF10EIDH_RXF10EID13_MASK                          0x20
#define _RXF10EIDH_RXF10EID14_POSN                          0x6
#define _RXF10EIDH_RXF10EID14_POSITION                      0x6
#define _RXF10EIDH_RXF10EID14_SIZE                          0x1
#define _RXF10EIDH_RXF10EID14_LENGTH                        0x1
#define _RXF10EIDH_RXF10EID14_MASK                          0x40
#define _RXF10EIDH_RXF10EID15_POSN                          0x7
#define _RXF10EIDH_RXF10EID15_POSITION                      0x7
#define _RXF10EIDH_RXF10EID15_SIZE                          0x1
#define _RXF10EIDH_RXF10EID15_LENGTH                        0x1
#define _RXF10EIDH_RXF10EID15_MASK                          0x80

// Register: RXF10EIDL
#define RXF10EIDL RXF10EIDL
extern volatile unsigned char           RXF10EIDL           __at(0xD77);
#ifndef _LIB_BUILD
asm("RXF10EIDL equ 0D77h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF10EID0              :1;
        unsigned RXF10EID1              :1;
        unsigned RXF10EID2              :1;
        unsigned RXF10EID3              :1;
        unsigned RXF10EID4              :1;
        unsigned RXF10EID5              :1;
        unsigned RXF10EID6              :1;
        unsigned RXF10EID7              :1;
    };
} RXF10EIDLbits_t;
extern volatile RXF10EIDLbits_t RXF10EIDLbits __at(0xD77);
// bitfield macros
#define _RXF10EIDL_EID0_POSN                                0x0
#define _RXF10EIDL_EID0_POSITION                            0x0
#define _RXF10EIDL_EID0_SIZE                                0x1
#define _RXF10EIDL_EID0_LENGTH                              0x1
#define _RXF10EIDL_EID0_MASK                                0x1
#define _RXF10EIDL_EID1_POSN                                0x1
#define _RXF10EIDL_EID1_POSITION                            0x1
#define _RXF10EIDL_EID1_SIZE                                0x1
#define _RXF10EIDL_EID1_LENGTH                              0x1
#define _RXF10EIDL_EID1_MASK                                0x2
#define _RXF10EIDL_EID2_POSN                                0x2
#define _RXF10EIDL_EID2_POSITION                            0x2
#define _RXF10EIDL_EID2_SIZE                                0x1
#define _RXF10EIDL_EID2_LENGTH                              0x1
#define _RXF10EIDL_EID2_MASK                                0x4
#define _RXF10EIDL_EID3_POSN                                0x3
#define _RXF10EIDL_EID3_POSITION                            0x3
#define _RXF10EIDL_EID3_SIZE                                0x1
#define _RXF10EIDL_EID3_LENGTH                              0x1
#define _RXF10EIDL_EID3_MASK                                0x8
#define _RXF10EIDL_EID4_POSN                                0x4
#define _RXF10EIDL_EID4_POSITION                            0x4
#define _RXF10EIDL_EID4_SIZE                                0x1
#define _RXF10EIDL_EID4_LENGTH                              0x1
#define _RXF10EIDL_EID4_MASK                                0x10
#define _RXF10EIDL_EID5_POSN                                0x5
#define _RXF10EIDL_EID5_POSITION                            0x5
#define _RXF10EIDL_EID5_SIZE                                0x1
#define _RXF10EIDL_EID5_LENGTH                              0x1
#define _RXF10EIDL_EID5_MASK                                0x20
#define _RXF10EIDL_EID6_POSN                                0x6
#define _RXF10EIDL_EID6_POSITION                            0x6
#define _RXF10EIDL_EID6_SIZE                                0x1
#define _RXF10EIDL_EID6_LENGTH                              0x1
#define _RXF10EIDL_EID6_MASK                                0x40
#define _RXF10EIDL_EID7_POSN                                0x7
#define _RXF10EIDL_EID7_POSITION                            0x7
#define _RXF10EIDL_EID7_SIZE                                0x1
#define _RXF10EIDL_EID7_LENGTH                              0x1
#define _RXF10EIDL_EID7_MASK                                0x80
#define _RXF10EIDL_RXF10EID0_POSN                           0x0
#define _RXF10EIDL_RXF10EID0_POSITION                       0x0
#define _RXF10EIDL_RXF10EID0_SIZE                           0x1
#define _RXF10EIDL_RXF10EID0_LENGTH                         0x1
#define _RXF10EIDL_RXF10EID0_MASK                           0x1
#define _RXF10EIDL_RXF10EID1_POSN                           0x1
#define _RXF10EIDL_RXF10EID1_POSITION                       0x1
#define _RXF10EIDL_RXF10EID1_SIZE                           0x1
#define _RXF10EIDL_RXF10EID1_LENGTH                         0x1
#define _RXF10EIDL_RXF10EID1_MASK                           0x2
#define _RXF10EIDL_RXF10EID2_POSN                           0x2
#define _RXF10EIDL_RXF10EID2_POSITION                       0x2
#define _RXF10EIDL_RXF10EID2_SIZE                           0x1
#define _RXF10EIDL_RXF10EID2_LENGTH                         0x1
#define _RXF10EIDL_RXF10EID2_MASK                           0x4
#define _RXF10EIDL_RXF10EID3_POSN                           0x3
#define _RXF10EIDL_RXF10EID3_POSITION                       0x3
#define _RXF10EIDL_RXF10EID3_SIZE                           0x1
#define _RXF10EIDL_RXF10EID3_LENGTH                         0x1
#define _RXF10EIDL_RXF10EID3_MASK                           0x8
#define _RXF10EIDL_RXF10EID4_POSN                           0x4
#define _RXF10EIDL_RXF10EID4_POSITION                       0x4
#define _RXF10EIDL_RXF10EID4_SIZE                           0x1
#define _RXF10EIDL_RXF10EID4_LENGTH                         0x1
#define _RXF10EIDL_RXF10EID4_MASK                           0x10
#define _RXF10EIDL_RXF10EID5_POSN                           0x5
#define _RXF10EIDL_RXF10EID5_POSITION                       0x5
#define _RXF10EIDL_RXF10EID5_SIZE                           0x1
#define _RXF10EIDL_RXF10EID5_LENGTH                         0x1
#define _RXF10EIDL_RXF10EID5_MASK                           0x20
#define _RXF10EIDL_RXF10EID6_POSN                           0x6
#define _RXF10EIDL_RXF10EID6_POSITION                       0x6
#define _RXF10EIDL_RXF10EID6_SIZE                           0x1
#define _RXF10EIDL_RXF10EID6_LENGTH                         0x1
#define _RXF10EIDL_RXF10EID6_MASK                           0x40
#define _RXF10EIDL_RXF10EID7_POSN                           0x7
#define _RXF10EIDL_RXF10EID7_POSITION                       0x7
#define _RXF10EIDL_RXF10EID7_SIZE                           0x1
#define _RXF10EIDL_RXF10EID7_LENGTH                         0x1
#define _RXF10EIDL_RXF10EID7_MASK                           0x80

// Register: RXF11SIDH
#define RXF11SIDH RXF11SIDH
extern volatile unsigned char           RXF11SIDH           __at(0xD78);
#ifndef _LIB_BUILD
asm("RXF11SIDH equ 0D78h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF11SID3              :1;
        unsigned RXF11SID4              :1;
        unsigned RXF11SID5              :1;
        unsigned RXF11SID6              :1;
        unsigned RXF11SID7              :1;
        unsigned RXF11SID8              :1;
        unsigned RXF11SID9              :1;
        unsigned RXF11SID10             :1;
    };
} RXF11SIDHbits_t;
extern volatile RXF11SIDHbits_t RXF11SIDHbits __at(0xD78);
// bitfield macros
#define _RXF11SIDH_SID3_POSN                                0x0
#define _RXF11SIDH_SID3_POSITION                            0x0
#define _RXF11SIDH_SID3_SIZE                                0x1
#define _RXF11SIDH_SID3_LENGTH                              0x1
#define _RXF11SIDH_SID3_MASK                                0x1
#define _RXF11SIDH_SID4_POSN                                0x1
#define _RXF11SIDH_SID4_POSITION                            0x1
#define _RXF11SIDH_SID4_SIZE                                0x1
#define _RXF11SIDH_SID4_LENGTH                              0x1
#define _RXF11SIDH_SID4_MASK                                0x2
#define _RXF11SIDH_SID5_POSN                                0x2
#define _RXF11SIDH_SID5_POSITION                            0x2
#define _RXF11SIDH_SID5_SIZE                                0x1
#define _RXF11SIDH_SID5_LENGTH                              0x1
#define _RXF11SIDH_SID5_MASK                                0x4
#define _RXF11SIDH_SID6_POSN                                0x3
#define _RXF11SIDH_SID6_POSITION                            0x3
#define _RXF11SIDH_SID6_SIZE                                0x1
#define _RXF11SIDH_SID6_LENGTH                              0x1
#define _RXF11SIDH_SID6_MASK                                0x8
#define _RXF11SIDH_SID7_POSN                                0x4
#define _RXF11SIDH_SID7_POSITION                            0x4
#define _RXF11SIDH_SID7_SIZE                                0x1
#define _RXF11SIDH_SID7_LENGTH                              0x1
#define _RXF11SIDH_SID7_MASK                                0x10
#define _RXF11SIDH_SID8_POSN                                0x5
#define _RXF11SIDH_SID8_POSITION                            0x5
#define _RXF11SIDH_SID8_SIZE                                0x1
#define _RXF11SIDH_SID8_LENGTH                              0x1
#define _RXF11SIDH_SID8_MASK                                0x20
#define _RXF11SIDH_SID9_POSN                                0x6
#define _RXF11SIDH_SID9_POSITION                            0x6
#define _RXF11SIDH_SID9_SIZE                                0x1
#define _RXF11SIDH_SID9_LENGTH                              0x1
#define _RXF11SIDH_SID9_MASK                                0x40
#define _RXF11SIDH_SID10_POSN                               0x7
#define _RXF11SIDH_SID10_POSITION                           0x7
#define _RXF11SIDH_SID10_SIZE                               0x1
#define _RXF11SIDH_SID10_LENGTH                             0x1
#define _RXF11SIDH_SID10_MASK                               0x80
#define _RXF11SIDH_RXF11SID3_POSN                           0x0
#define _RXF11SIDH_RXF11SID3_POSITION                       0x0
#define _RXF11SIDH_RXF11SID3_SIZE                           0x1
#define _RXF11SIDH_RXF11SID3_LENGTH                         0x1
#define _RXF11SIDH_RXF11SID3_MASK                           0x1
#define _RXF11SIDH_RXF11SID4_POSN                           0x1
#define _RXF11SIDH_RXF11SID4_POSITION                       0x1
#define _RXF11SIDH_RXF11SID4_SIZE                           0x1
#define _RXF11SIDH_RXF11SID4_LENGTH                         0x1
#define _RXF11SIDH_RXF11SID4_MASK                           0x2
#define _RXF11SIDH_RXF11SID5_POSN                           0x2
#define _RXF11SIDH_RXF11SID5_POSITION                       0x2
#define _RXF11SIDH_RXF11SID5_SIZE                           0x1
#define _RXF11SIDH_RXF11SID5_LENGTH                         0x1
#define _RXF11SIDH_RXF11SID5_MASK                           0x4
#define _RXF11SIDH_RXF11SID6_POSN                           0x3
#define _RXF11SIDH_RXF11SID6_POSITION                       0x3
#define _RXF11SIDH_RXF11SID6_SIZE                           0x1
#define _RXF11SIDH_RXF11SID6_LENGTH                         0x1
#define _RXF11SIDH_RXF11SID6_MASK                           0x8
#define _RXF11SIDH_RXF11SID7_POSN                           0x4
#define _RXF11SIDH_RXF11SID7_POSITION                       0x4
#define _RXF11SIDH_RXF11SID7_SIZE                           0x1
#define _RXF11SIDH_RXF11SID7_LENGTH                         0x1
#define _RXF11SIDH_RXF11SID7_MASK                           0x10
#define _RXF11SIDH_RXF11SID8_POSN                           0x5
#define _RXF11SIDH_RXF11SID8_POSITION                       0x5
#define _RXF11SIDH_RXF11SID8_SIZE                           0x1
#define _RXF11SIDH_RXF11SID8_LENGTH                         0x1
#define _RXF11SIDH_RXF11SID8_MASK                           0x20
#define _RXF11SIDH_RXF11SID9_POSN                           0x6
#define _RXF11SIDH_RXF11SID9_POSITION                       0x6
#define _RXF11SIDH_RXF11SID9_SIZE                           0x1
#define _RXF11SIDH_RXF11SID9_LENGTH                         0x1
#define _RXF11SIDH_RXF11SID9_MASK                           0x40
#define _RXF11SIDH_RXF11SID10_POSN                          0x7
#define _RXF11SIDH_RXF11SID10_POSITION                      0x7
#define _RXF11SIDH_RXF11SID10_SIZE                          0x1
#define _RXF11SIDH_RXF11SID10_LENGTH                        0x1
#define _RXF11SIDH_RXF11SID10_MASK                          0x80

// Register: RXF11SIDL
#define RXF11SIDL RXF11SIDL
extern volatile unsigned char           RXF11SIDL           __at(0xD79);
#ifndef _LIB_BUILD
asm("RXF11SIDL equ 0D79h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF11EID16             :1;
        unsigned RXF11EID17             :1;
        unsigned                        :1;
        unsigned RXF11EXIDEN            :1;
        unsigned                        :1;
        unsigned RXF11SID0              :1;
        unsigned RXF11SID1              :1;
        unsigned RXF11SID2              :1;
    };
} RXF11SIDLbits_t;
extern volatile RXF11SIDLbits_t RXF11SIDLbits __at(0xD79);
// bitfield macros
#define _RXF11SIDL_EID16_POSN                               0x0
#define _RXF11SIDL_EID16_POSITION                           0x0
#define _RXF11SIDL_EID16_SIZE                               0x1
#define _RXF11SIDL_EID16_LENGTH                             0x1
#define _RXF11SIDL_EID16_MASK                               0x1
#define _RXF11SIDL_EID17_POSN                               0x1
#define _RXF11SIDL_EID17_POSITION                           0x1
#define _RXF11SIDL_EID17_SIZE                               0x1
#define _RXF11SIDL_EID17_LENGTH                             0x1
#define _RXF11SIDL_EID17_MASK                               0x2
#define _RXF11SIDL_EXIDEN_POSN                              0x3
#define _RXF11SIDL_EXIDEN_POSITION                          0x3
#define _RXF11SIDL_EXIDEN_SIZE                              0x1
#define _RXF11SIDL_EXIDEN_LENGTH                            0x1
#define _RXF11SIDL_EXIDEN_MASK                              0x8
#define _RXF11SIDL_SID0_POSN                                0x5
#define _RXF11SIDL_SID0_POSITION                            0x5
#define _RXF11SIDL_SID0_SIZE                                0x1
#define _RXF11SIDL_SID0_LENGTH                              0x1
#define _RXF11SIDL_SID0_MASK                                0x20
#define _RXF11SIDL_SID1_POSN                                0x6
#define _RXF11SIDL_SID1_POSITION                            0x6
#define _RXF11SIDL_SID1_SIZE                                0x1
#define _RXF11SIDL_SID1_LENGTH                              0x1
#define _RXF11SIDL_SID1_MASK                                0x40
#define _RXF11SIDL_SID2_POSN                                0x7
#define _RXF11SIDL_SID2_POSITION                            0x7
#define _RXF11SIDL_SID2_SIZE                                0x1
#define _RXF11SIDL_SID2_LENGTH                              0x1
#define _RXF11SIDL_SID2_MASK                                0x80
#define _RXF11SIDL_EXIDE_POSN                               0x3
#define _RXF11SIDL_EXIDE_POSITION                           0x3
#define _RXF11SIDL_EXIDE_SIZE                               0x1
#define _RXF11SIDL_EXIDE_LENGTH                             0x1
#define _RXF11SIDL_EXIDE_MASK                               0x8
#define _RXF11SIDL_RXF11EID16_POSN                          0x0
#define _RXF11SIDL_RXF11EID16_POSITION                      0x0
#define _RXF11SIDL_RXF11EID16_SIZE                          0x1
#define _RXF11SIDL_RXF11EID16_LENGTH                        0x1
#define _RXF11SIDL_RXF11EID16_MASK                          0x1
#define _RXF11SIDL_RXF11EID17_POSN                          0x1
#define _RXF11SIDL_RXF11EID17_POSITION                      0x1
#define _RXF11SIDL_RXF11EID17_SIZE                          0x1
#define _RXF11SIDL_RXF11EID17_LENGTH                        0x1
#define _RXF11SIDL_RXF11EID17_MASK                          0x2
#define _RXF11SIDL_RXF11EXIDEN_POSN                         0x3
#define _RXF11SIDL_RXF11EXIDEN_POSITION                     0x3
#define _RXF11SIDL_RXF11EXIDEN_SIZE                         0x1
#define _RXF11SIDL_RXF11EXIDEN_LENGTH                       0x1
#define _RXF11SIDL_RXF11EXIDEN_MASK                         0x8
#define _RXF11SIDL_RXF11SID0_POSN                           0x5
#define _RXF11SIDL_RXF11SID0_POSITION                       0x5
#define _RXF11SIDL_RXF11SID0_SIZE                           0x1
#define _RXF11SIDL_RXF11SID0_LENGTH                         0x1
#define _RXF11SIDL_RXF11SID0_MASK                           0x20
#define _RXF11SIDL_RXF11SID1_POSN                           0x6
#define _RXF11SIDL_RXF11SID1_POSITION                       0x6
#define _RXF11SIDL_RXF11SID1_SIZE                           0x1
#define _RXF11SIDL_RXF11SID1_LENGTH                         0x1
#define _RXF11SIDL_RXF11SID1_MASK                           0x40
#define _RXF11SIDL_RXF11SID2_POSN                           0x7
#define _RXF11SIDL_RXF11SID2_POSITION                       0x7
#define _RXF11SIDL_RXF11SID2_SIZE                           0x1
#define _RXF11SIDL_RXF11SID2_LENGTH                         0x1
#define _RXF11SIDL_RXF11SID2_MASK                           0x80

// Register: RXF11EIDH
#define RXF11EIDH RXF11EIDH
extern volatile unsigned char           RXF11EIDH           __at(0xD7A);
#ifndef _LIB_BUILD
asm("RXF11EIDH equ 0D7Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF11EID8              :1;
        unsigned RXF11EID9              :1;
        unsigned RXF11EID10             :1;
        unsigned RXF11EID11             :1;
        unsigned RXF11EID12             :1;
        unsigned RXF11EID13             :1;
        unsigned RXF11EID14             :1;
        unsigned RXF11EID15             :1;
    };
} RXF11EIDHbits_t;
extern volatile RXF11EIDHbits_t RXF11EIDHbits __at(0xD7A);
// bitfield macros
#define _RXF11EIDH_EID8_POSN                                0x0
#define _RXF11EIDH_EID8_POSITION                            0x0
#define _RXF11EIDH_EID8_SIZE                                0x1
#define _RXF11EIDH_EID8_LENGTH                              0x1
#define _RXF11EIDH_EID8_MASK                                0x1
#define _RXF11EIDH_EID9_POSN                                0x1
#define _RXF11EIDH_EID9_POSITION                            0x1
#define _RXF11EIDH_EID9_SIZE                                0x1
#define _RXF11EIDH_EID9_LENGTH                              0x1
#define _RXF11EIDH_EID9_MASK                                0x2
#define _RXF11EIDH_EID10_POSN                               0x2
#define _RXF11EIDH_EID10_POSITION                           0x2
#define _RXF11EIDH_EID10_SIZE                               0x1
#define _RXF11EIDH_EID10_LENGTH                             0x1
#define _RXF11EIDH_EID10_MASK                               0x4
#define _RXF11EIDH_EID11_POSN                               0x3
#define _RXF11EIDH_EID11_POSITION                           0x3
#define _RXF11EIDH_EID11_SIZE                               0x1
#define _RXF11EIDH_EID11_LENGTH                             0x1
#define _RXF11EIDH_EID11_MASK                               0x8
#define _RXF11EIDH_EID12_POSN                               0x4
#define _RXF11EIDH_EID12_POSITION                           0x4
#define _RXF11EIDH_EID12_SIZE                               0x1
#define _RXF11EIDH_EID12_LENGTH                             0x1
#define _RXF11EIDH_EID12_MASK                               0x10
#define _RXF11EIDH_EID13_POSN                               0x5
#define _RXF11EIDH_EID13_POSITION                           0x5
#define _RXF11EIDH_EID13_SIZE                               0x1
#define _RXF11EIDH_EID13_LENGTH                             0x1
#define _RXF11EIDH_EID13_MASK                               0x20
#define _RXF11EIDH_EID14_POSN                               0x6
#define _RXF11EIDH_EID14_POSITION                           0x6
#define _RXF11EIDH_EID14_SIZE                               0x1
#define _RXF11EIDH_EID14_LENGTH                             0x1
#define _RXF11EIDH_EID14_MASK                               0x40
#define _RXF11EIDH_EID15_POSN                               0x7
#define _RXF11EIDH_EID15_POSITION                           0x7
#define _RXF11EIDH_EID15_SIZE                               0x1
#define _RXF11EIDH_EID15_LENGTH                             0x1
#define _RXF11EIDH_EID15_MASK                               0x80
#define _RXF11EIDH_RXF11EID8_POSN                           0x0
#define _RXF11EIDH_RXF11EID8_POSITION                       0x0
#define _RXF11EIDH_RXF11EID8_SIZE                           0x1
#define _RXF11EIDH_RXF11EID8_LENGTH                         0x1
#define _RXF11EIDH_RXF11EID8_MASK                           0x1
#define _RXF11EIDH_RXF11EID9_POSN                           0x1
#define _RXF11EIDH_RXF11EID9_POSITION                       0x1
#define _RXF11EIDH_RXF11EID9_SIZE                           0x1
#define _RXF11EIDH_RXF11EID9_LENGTH                         0x1
#define _RXF11EIDH_RXF11EID9_MASK                           0x2
#define _RXF11EIDH_RXF11EID10_POSN                          0x2
#define _RXF11EIDH_RXF11EID10_POSITION                      0x2
#define _RXF11EIDH_RXF11EID10_SIZE                          0x1
#define _RXF11EIDH_RXF11EID10_LENGTH                        0x1
#define _RXF11EIDH_RXF11EID10_MASK                          0x4
#define _RXF11EIDH_RXF11EID11_POSN                          0x3
#define _RXF11EIDH_RXF11EID11_POSITION                      0x3
#define _RXF11EIDH_RXF11EID11_SIZE                          0x1
#define _RXF11EIDH_RXF11EID11_LENGTH                        0x1
#define _RXF11EIDH_RXF11EID11_MASK                          0x8
#define _RXF11EIDH_RXF11EID12_POSN                          0x4
#define _RXF11EIDH_RXF11EID12_POSITION                      0x4
#define _RXF11EIDH_RXF11EID12_SIZE                          0x1
#define _RXF11EIDH_RXF11EID12_LENGTH                        0x1
#define _RXF11EIDH_RXF11EID12_MASK                          0x10
#define _RXF11EIDH_RXF11EID13_POSN                          0x5
#define _RXF11EIDH_RXF11EID13_POSITION                      0x5
#define _RXF11EIDH_RXF11EID13_SIZE                          0x1
#define _RXF11EIDH_RXF11EID13_LENGTH                        0x1
#define _RXF11EIDH_RXF11EID13_MASK                          0x20
#define _RXF11EIDH_RXF11EID14_POSN                          0x6
#define _RXF11EIDH_RXF11EID14_POSITION                      0x6
#define _RXF11EIDH_RXF11EID14_SIZE                          0x1
#define _RXF11EIDH_RXF11EID14_LENGTH                        0x1
#define _RXF11EIDH_RXF11EID14_MASK                          0x40
#define _RXF11EIDH_RXF11EID15_POSN                          0x7
#define _RXF11EIDH_RXF11EID15_POSITION                      0x7
#define _RXF11EIDH_RXF11EID15_SIZE                          0x1
#define _RXF11EIDH_RXF11EID15_LENGTH                        0x1
#define _RXF11EIDH_RXF11EID15_MASK                          0x80

// Register: RXF11EIDL
#define RXF11EIDL RXF11EIDL
extern volatile unsigned char           RXF11EIDL           __at(0xD7B);
#ifndef _LIB_BUILD
asm("RXF11EIDL equ 0D7Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF11EID0              :1;
        unsigned RXF11EID1              :1;
        unsigned RXF11EID2              :1;
        unsigned RXF11EID3              :1;
        unsigned RXF11EID4              :1;
        unsigned RXF11EID5              :1;
        unsigned RXF11EID6              :1;
        unsigned RXF11EID7              :1;
    };
} RXF11EIDLbits_t;
extern volatile RXF11EIDLbits_t RXF11EIDLbits __at(0xD7B);
// bitfield macros
#define _RXF11EIDL_EID0_POSN                                0x0
#define _RXF11EIDL_EID0_POSITION                            0x0
#define _RXF11EIDL_EID0_SIZE                                0x1
#define _RXF11EIDL_EID0_LENGTH                              0x1
#define _RXF11EIDL_EID0_MASK                                0x1
#define _RXF11EIDL_EID1_POSN                                0x1
#define _RXF11EIDL_EID1_POSITION                            0x1
#define _RXF11EIDL_EID1_SIZE                                0x1
#define _RXF11EIDL_EID1_LENGTH                              0x1
#define _RXF11EIDL_EID1_MASK                                0x2
#define _RXF11EIDL_EID2_POSN                                0x2
#define _RXF11EIDL_EID2_POSITION                            0x2
#define _RXF11EIDL_EID2_SIZE                                0x1
#define _RXF11EIDL_EID2_LENGTH                              0x1
#define _RXF11EIDL_EID2_MASK                                0x4
#define _RXF11EIDL_EID3_POSN                                0x3
#define _RXF11EIDL_EID3_POSITION                            0x3
#define _RXF11EIDL_EID3_SIZE                                0x1
#define _RXF11EIDL_EID3_LENGTH                              0x1
#define _RXF11EIDL_EID3_MASK                                0x8
#define _RXF11EIDL_EID4_POSN                                0x4
#define _RXF11EIDL_EID4_POSITION                            0x4
#define _RXF11EIDL_EID4_SIZE                                0x1
#define _RXF11EIDL_EID4_LENGTH                              0x1
#define _RXF11EIDL_EID4_MASK                                0x10
#define _RXF11EIDL_EID5_POSN                                0x5
#define _RXF11EIDL_EID5_POSITION                            0x5
#define _RXF11EIDL_EID5_SIZE                                0x1
#define _RXF11EIDL_EID5_LENGTH                              0x1
#define _RXF11EIDL_EID5_MASK                                0x20
#define _RXF11EIDL_EID6_POSN                                0x6
#define _RXF11EIDL_EID6_POSITION                            0x6
#define _RXF11EIDL_EID6_SIZE                                0x1
#define _RXF11EIDL_EID6_LENGTH                              0x1
#define _RXF11EIDL_EID6_MASK                                0x40
#define _RXF11EIDL_EID7_POSN                                0x7
#define _RXF11EIDL_EID7_POSITION                            0x7
#define _RXF11EIDL_EID7_SIZE                                0x1
#define _RXF11EIDL_EID7_LENGTH                              0x1
#define _RXF11EIDL_EID7_MASK                                0x80
#define _RXF11EIDL_RXF11EID0_POSN                           0x0
#define _RXF11EIDL_RXF11EID0_POSITION                       0x0
#define _RXF11EIDL_RXF11EID0_SIZE                           0x1
#define _RXF11EIDL_RXF11EID0_LENGTH                         0x1
#define _RXF11EIDL_RXF11EID0_MASK                           0x1
#define _RXF11EIDL_RXF11EID1_POSN                           0x1
#define _RXF11EIDL_RXF11EID1_POSITION                       0x1
#define _RXF11EIDL_RXF11EID1_SIZE                           0x1
#define _RXF11EIDL_RXF11EID1_LENGTH                         0x1
#define _RXF11EIDL_RXF11EID1_MASK                           0x2
#define _RXF11EIDL_RXF11EID2_POSN                           0x2
#define _RXF11EIDL_RXF11EID2_POSITION                       0x2
#define _RXF11EIDL_RXF11EID2_SIZE                           0x1
#define _RXF11EIDL_RXF11EID2_LENGTH                         0x1
#define _RXF11EIDL_RXF11EID2_MASK                           0x4
#define _RXF11EIDL_RXF11EID3_POSN                           0x3
#define _RXF11EIDL_RXF11EID3_POSITION                       0x3
#define _RXF11EIDL_RXF11EID3_SIZE                           0x1
#define _RXF11EIDL_RXF11EID3_LENGTH                         0x1
#define _RXF11EIDL_RXF11EID3_MASK                           0x8
#define _RXF11EIDL_RXF11EID4_POSN                           0x4
#define _RXF11EIDL_RXF11EID4_POSITION                       0x4
#define _RXF11EIDL_RXF11EID4_SIZE                           0x1
#define _RXF11EIDL_RXF11EID4_LENGTH                         0x1
#define _RXF11EIDL_RXF11EID4_MASK                           0x10
#define _RXF11EIDL_RXF11EID5_POSN                           0x5
#define _RXF11EIDL_RXF11EID5_POSITION                       0x5
#define _RXF11EIDL_RXF11EID5_SIZE                           0x1
#define _RXF11EIDL_RXF11EID5_LENGTH                         0x1
#define _RXF11EIDL_RXF11EID5_MASK                           0x20
#define _RXF11EIDL_RXF11EID6_POSN                           0x6
#define _RXF11EIDL_RXF11EID6_POSITION                       0x6
#define _RXF11EIDL_RXF11EID6_SIZE                           0x1
#define _RXF11EIDL_RXF11EID6_LENGTH                         0x1
#define _RXF11EIDL_RXF11EID6_MASK                           0x40
#define _RXF11EIDL_RXF11EID7_POSN                           0x7
#define _RXF11EIDL_RXF11EID7_POSITION                       0x7
#define _RXF11EIDL_RXF11EID7_SIZE                           0x1
#define _RXF11EIDL_RXF11EID7_LENGTH                         0x1
#define _RXF11EIDL_RXF11EID7_MASK                           0x80

// Register: RXF12SIDH
#define RXF12SIDH RXF12SIDH
extern volatile unsigned char           RXF12SIDH           __at(0xD80);
#ifndef _LIB_BUILD
asm("RXF12SIDH equ 0D80h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF12SID3              :1;
        unsigned RXF12SID4              :1;
        unsigned RXF12SID5              :1;
        unsigned RXF12SID6              :1;
        unsigned RXF12SID7              :1;
        unsigned RXF12SID8              :1;
        unsigned RXF12SID9              :1;
        unsigned RXF12SID10             :1;
    };
} RXF12SIDHbits_t;
extern volatile RXF12SIDHbits_t RXF12SIDHbits __at(0xD80);
// bitfield macros
#define _RXF12SIDH_SID3_POSN                                0x0
#define _RXF12SIDH_SID3_POSITION                            0x0
#define _RXF12SIDH_SID3_SIZE                                0x1
#define _RXF12SIDH_SID3_LENGTH                              0x1
#define _RXF12SIDH_SID3_MASK                                0x1
#define _RXF12SIDH_SID4_POSN                                0x1
#define _RXF12SIDH_SID4_POSITION                            0x1
#define _RXF12SIDH_SID4_SIZE                                0x1
#define _RXF12SIDH_SID4_LENGTH                              0x1
#define _RXF12SIDH_SID4_MASK                                0x2
#define _RXF12SIDH_SID5_POSN                                0x2
#define _RXF12SIDH_SID5_POSITION                            0x2
#define _RXF12SIDH_SID5_SIZE                                0x1
#define _RXF12SIDH_SID5_LENGTH                              0x1
#define _RXF12SIDH_SID5_MASK                                0x4
#define _RXF12SIDH_SID6_POSN                                0x3
#define _RXF12SIDH_SID6_POSITION                            0x3
#define _RXF12SIDH_SID6_SIZE                                0x1
#define _RXF12SIDH_SID6_LENGTH                              0x1
#define _RXF12SIDH_SID6_MASK                                0x8
#define _RXF12SIDH_SID7_POSN                                0x4
#define _RXF12SIDH_SID7_POSITION                            0x4
#define _RXF12SIDH_SID7_SIZE                                0x1
#define _RXF12SIDH_SID7_LENGTH                              0x1
#define _RXF12SIDH_SID7_MASK                                0x10
#define _RXF12SIDH_SID8_POSN                                0x5
#define _RXF12SIDH_SID8_POSITION                            0x5
#define _RXF12SIDH_SID8_SIZE                                0x1
#define _RXF12SIDH_SID8_LENGTH                              0x1
#define _RXF12SIDH_SID8_MASK                                0x20
#define _RXF12SIDH_SID9_POSN                                0x6
#define _RXF12SIDH_SID9_POSITION                            0x6
#define _RXF12SIDH_SID9_SIZE                                0x1
#define _RXF12SIDH_SID9_LENGTH                              0x1
#define _RXF12SIDH_SID9_MASK                                0x40
#define _RXF12SIDH_SID10_POSN                               0x7
#define _RXF12SIDH_SID10_POSITION                           0x7
#define _RXF12SIDH_SID10_SIZE                               0x1
#define _RXF12SIDH_SID10_LENGTH                             0x1
#define _RXF12SIDH_SID10_MASK                               0x80
#define _RXF12SIDH_RXF12SID3_POSN                           0x0
#define _RXF12SIDH_RXF12SID3_POSITION                       0x0
#define _RXF12SIDH_RXF12SID3_SIZE                           0x1
#define _RXF12SIDH_RXF12SID3_LENGTH                         0x1
#define _RXF12SIDH_RXF12SID3_MASK                           0x1
#define _RXF12SIDH_RXF12SID4_POSN                           0x1
#define _RXF12SIDH_RXF12SID4_POSITION                       0x1
#define _RXF12SIDH_RXF12SID4_SIZE                           0x1
#define _RXF12SIDH_RXF12SID4_LENGTH                         0x1
#define _RXF12SIDH_RXF12SID4_MASK                           0x2
#define _RXF12SIDH_RXF12SID5_POSN                           0x2
#define _RXF12SIDH_RXF12SID5_POSITION                       0x2
#define _RXF12SIDH_RXF12SID5_SIZE                           0x1
#define _RXF12SIDH_RXF12SID5_LENGTH                         0x1
#define _RXF12SIDH_RXF12SID5_MASK                           0x4
#define _RXF12SIDH_RXF12SID6_POSN                           0x3
#define _RXF12SIDH_RXF12SID6_POSITION                       0x3
#define _RXF12SIDH_RXF12SID6_SIZE                           0x1
#define _RXF12SIDH_RXF12SID6_LENGTH                         0x1
#define _RXF12SIDH_RXF12SID6_MASK                           0x8
#define _RXF12SIDH_RXF12SID7_POSN                           0x4
#define _RXF12SIDH_RXF12SID7_POSITION                       0x4
#define _RXF12SIDH_RXF12SID7_SIZE                           0x1
#define _RXF12SIDH_RXF12SID7_LENGTH                         0x1
#define _RXF12SIDH_RXF12SID7_MASK                           0x10
#define _RXF12SIDH_RXF12SID8_POSN                           0x5
#define _RXF12SIDH_RXF12SID8_POSITION                       0x5
#define _RXF12SIDH_RXF12SID8_SIZE                           0x1
#define _RXF12SIDH_RXF12SID8_LENGTH                         0x1
#define _RXF12SIDH_RXF12SID8_MASK                           0x20
#define _RXF12SIDH_RXF12SID9_POSN                           0x6
#define _RXF12SIDH_RXF12SID9_POSITION                       0x6
#define _RXF12SIDH_RXF12SID9_SIZE                           0x1
#define _RXF12SIDH_RXF12SID9_LENGTH                         0x1
#define _RXF12SIDH_RXF12SID9_MASK                           0x40
#define _RXF12SIDH_RXF12SID10_POSN                          0x7
#define _RXF12SIDH_RXF12SID10_POSITION                      0x7
#define _RXF12SIDH_RXF12SID10_SIZE                          0x1
#define _RXF12SIDH_RXF12SID10_LENGTH                        0x1
#define _RXF12SIDH_RXF12SID10_MASK                          0x80

// Register: RXF12SIDL
#define RXF12SIDL RXF12SIDL
extern volatile unsigned char           RXF12SIDL           __at(0xD81);
#ifndef _LIB_BUILD
asm("RXF12SIDL equ 0D81h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF12EID16             :1;
        unsigned RXF12EID17             :1;
        unsigned                        :1;
        unsigned RXF12EXIDEN            :1;
        unsigned                        :1;
        unsigned RXF12SID0              :1;
        unsigned RXF12SID1              :1;
        unsigned RXF12SID2              :1;
    };
} RXF12SIDLbits_t;
extern volatile RXF12SIDLbits_t RXF12SIDLbits __at(0xD81);
// bitfield macros
#define _RXF12SIDL_EID16_POSN                               0x0
#define _RXF12SIDL_EID16_POSITION                           0x0
#define _RXF12SIDL_EID16_SIZE                               0x1
#define _RXF12SIDL_EID16_LENGTH                             0x1
#define _RXF12SIDL_EID16_MASK                               0x1
#define _RXF12SIDL_EID17_POSN                               0x1
#define _RXF12SIDL_EID17_POSITION                           0x1
#define _RXF12SIDL_EID17_SIZE                               0x1
#define _RXF12SIDL_EID17_LENGTH                             0x1
#define _RXF12SIDL_EID17_MASK                               0x2
#define _RXF12SIDL_EXIDEN_POSN                              0x3
#define _RXF12SIDL_EXIDEN_POSITION                          0x3
#define _RXF12SIDL_EXIDEN_SIZE                              0x1
#define _RXF12SIDL_EXIDEN_LENGTH                            0x1
#define _RXF12SIDL_EXIDEN_MASK                              0x8
#define _RXF12SIDL_SID0_POSN                                0x5
#define _RXF12SIDL_SID0_POSITION                            0x5
#define _RXF12SIDL_SID0_SIZE                                0x1
#define _RXF12SIDL_SID0_LENGTH                              0x1
#define _RXF12SIDL_SID0_MASK                                0x20
#define _RXF12SIDL_SID1_POSN                                0x6
#define _RXF12SIDL_SID1_POSITION                            0x6
#define _RXF12SIDL_SID1_SIZE                                0x1
#define _RXF12SIDL_SID1_LENGTH                              0x1
#define _RXF12SIDL_SID1_MASK                                0x40
#define _RXF12SIDL_SID2_POSN                                0x7
#define _RXF12SIDL_SID2_POSITION                            0x7
#define _RXF12SIDL_SID2_SIZE                                0x1
#define _RXF12SIDL_SID2_LENGTH                              0x1
#define _RXF12SIDL_SID2_MASK                                0x80
#define _RXF12SIDL_EXIDE_POSN                               0x3
#define _RXF12SIDL_EXIDE_POSITION                           0x3
#define _RXF12SIDL_EXIDE_SIZE                               0x1
#define _RXF12SIDL_EXIDE_LENGTH                             0x1
#define _RXF12SIDL_EXIDE_MASK                               0x8
#define _RXF12SIDL_RXF12EID16_POSN                          0x0
#define _RXF12SIDL_RXF12EID16_POSITION                      0x0
#define _RXF12SIDL_RXF12EID16_SIZE                          0x1
#define _RXF12SIDL_RXF12EID16_LENGTH                        0x1
#define _RXF12SIDL_RXF12EID16_MASK                          0x1
#define _RXF12SIDL_RXF12EID17_POSN                          0x1
#define _RXF12SIDL_RXF12EID17_POSITION                      0x1
#define _RXF12SIDL_RXF12EID17_SIZE                          0x1
#define _RXF12SIDL_RXF12EID17_LENGTH                        0x1
#define _RXF12SIDL_RXF12EID17_MASK                          0x2
#define _RXF12SIDL_RXF12EXIDEN_POSN                         0x3
#define _RXF12SIDL_RXF12EXIDEN_POSITION                     0x3
#define _RXF12SIDL_RXF12EXIDEN_SIZE                         0x1
#define _RXF12SIDL_RXF12EXIDEN_LENGTH                       0x1
#define _RXF12SIDL_RXF12EXIDEN_MASK                         0x8
#define _RXF12SIDL_RXF12SID0_POSN                           0x5
#define _RXF12SIDL_RXF12SID0_POSITION                       0x5
#define _RXF12SIDL_RXF12SID0_SIZE                           0x1
#define _RXF12SIDL_RXF12SID0_LENGTH                         0x1
#define _RXF12SIDL_RXF12SID0_MASK                           0x20
#define _RXF12SIDL_RXF12SID1_POSN                           0x6
#define _RXF12SIDL_RXF12SID1_POSITION                       0x6
#define _RXF12SIDL_RXF12SID1_SIZE                           0x1
#define _RXF12SIDL_RXF12SID1_LENGTH                         0x1
#define _RXF12SIDL_RXF12SID1_MASK                           0x40
#define _RXF12SIDL_RXF12SID2_POSN                           0x7
#define _RXF12SIDL_RXF12SID2_POSITION                       0x7
#define _RXF12SIDL_RXF12SID2_SIZE                           0x1
#define _RXF12SIDL_RXF12SID2_LENGTH                         0x1
#define _RXF12SIDL_RXF12SID2_MASK                           0x80

// Register: RXF12EIDH
#define RXF12EIDH RXF12EIDH
extern volatile unsigned char           RXF12EIDH           __at(0xD82);
#ifndef _LIB_BUILD
asm("RXF12EIDH equ 0D82h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF12EID8              :1;
        unsigned RXF12EID9              :1;
        unsigned RXF12EID10             :1;
        unsigned RXF12EID11             :1;
        unsigned RXF12EID12             :1;
        unsigned RXF12EID13             :1;
        unsigned RXF12EID14             :1;
        unsigned RXF12EID15             :1;
    };
} RXF12EIDHbits_t;
extern volatile RXF12EIDHbits_t RXF12EIDHbits __at(0xD82);
// bitfield macros
#define _RXF12EIDH_EID8_POSN                                0x0
#define _RXF12EIDH_EID8_POSITION                            0x0
#define _RXF12EIDH_EID8_SIZE                                0x1
#define _RXF12EIDH_EID8_LENGTH                              0x1
#define _RXF12EIDH_EID8_MASK                                0x1
#define _RXF12EIDH_EID9_POSN                                0x1
#define _RXF12EIDH_EID9_POSITION                            0x1
#define _RXF12EIDH_EID9_SIZE                                0x1
#define _RXF12EIDH_EID9_LENGTH                              0x1
#define _RXF12EIDH_EID9_MASK                                0x2
#define _RXF12EIDH_EID10_POSN                               0x2
#define _RXF12EIDH_EID10_POSITION                           0x2
#define _RXF12EIDH_EID10_SIZE                               0x1
#define _RXF12EIDH_EID10_LENGTH                             0x1
#define _RXF12EIDH_EID10_MASK                               0x4
#define _RXF12EIDH_EID11_POSN                               0x3
#define _RXF12EIDH_EID11_POSITION                           0x3
#define _RXF12EIDH_EID11_SIZE                               0x1
#define _RXF12EIDH_EID11_LENGTH                             0x1
#define _RXF12EIDH_EID11_MASK                               0x8
#define _RXF12EIDH_EID12_POSN                               0x4
#define _RXF12EIDH_EID12_POSITION                           0x4
#define _RXF12EIDH_EID12_SIZE                               0x1
#define _RXF12EIDH_EID12_LENGTH                             0x1
#define _RXF12EIDH_EID12_MASK                               0x10
#define _RXF12EIDH_EID13_POSN                               0x5
#define _RXF12EIDH_EID13_POSITION                           0x5
#define _RXF12EIDH_EID13_SIZE                               0x1
#define _RXF12EIDH_EID13_LENGTH                             0x1
#define _RXF12EIDH_EID13_MASK                               0x20
#define _RXF12EIDH_EID14_POSN                               0x6
#define _RXF12EIDH_EID14_POSITION                           0x6
#define _RXF12EIDH_EID14_SIZE                               0x1
#define _RXF12EIDH_EID14_LENGTH                             0x1
#define _RXF12EIDH_EID14_MASK                               0x40
#define _RXF12EIDH_EID15_POSN                               0x7
#define _RXF12EIDH_EID15_POSITION                           0x7
#define _RXF12EIDH_EID15_SIZE                               0x1
#define _RXF12EIDH_EID15_LENGTH                             0x1
#define _RXF12EIDH_EID15_MASK                               0x80
#define _RXF12EIDH_RXF12EID8_POSN                           0x0
#define _RXF12EIDH_RXF12EID8_POSITION                       0x0
#define _RXF12EIDH_RXF12EID8_SIZE                           0x1
#define _RXF12EIDH_RXF12EID8_LENGTH                         0x1
#define _RXF12EIDH_RXF12EID8_MASK                           0x1
#define _RXF12EIDH_RXF12EID9_POSN                           0x1
#define _RXF12EIDH_RXF12EID9_POSITION                       0x1
#define _RXF12EIDH_RXF12EID9_SIZE                           0x1
#define _RXF12EIDH_RXF12EID9_LENGTH                         0x1
#define _RXF12EIDH_RXF12EID9_MASK                           0x2
#define _RXF12EIDH_RXF12EID10_POSN                          0x2
#define _RXF12EIDH_RXF12EID10_POSITION                      0x2
#define _RXF12EIDH_RXF12EID10_SIZE                          0x1
#define _RXF12EIDH_RXF12EID10_LENGTH                        0x1
#define _RXF12EIDH_RXF12EID10_MASK                          0x4
#define _RXF12EIDH_RXF12EID11_POSN                          0x3
#define _RXF12EIDH_RXF12EID11_POSITION                      0x3
#define _RXF12EIDH_RXF12EID11_SIZE                          0x1
#define _RXF12EIDH_RXF12EID11_LENGTH                        0x1
#define _RXF12EIDH_RXF12EID11_MASK                          0x8
#define _RXF12EIDH_RXF12EID12_POSN                          0x4
#define _RXF12EIDH_RXF12EID12_POSITION                      0x4
#define _RXF12EIDH_RXF12EID12_SIZE                          0x1
#define _RXF12EIDH_RXF12EID12_LENGTH                        0x1
#define _RXF12EIDH_RXF12EID12_MASK                          0x10
#define _RXF12EIDH_RXF12EID13_POSN                          0x5
#define _RXF12EIDH_RXF12EID13_POSITION                      0x5
#define _RXF12EIDH_RXF12EID13_SIZE                          0x1
#define _RXF12EIDH_RXF12EID13_LENGTH                        0x1
#define _RXF12EIDH_RXF12EID13_MASK                          0x20
#define _RXF12EIDH_RXF12EID14_POSN                          0x6
#define _RXF12EIDH_RXF12EID14_POSITION                      0x6
#define _RXF12EIDH_RXF12EID14_SIZE                          0x1
#define _RXF12EIDH_RXF12EID14_LENGTH                        0x1
#define _RXF12EIDH_RXF12EID14_MASK                          0x40
#define _RXF12EIDH_RXF12EID15_POSN                          0x7
#define _RXF12EIDH_RXF12EID15_POSITION                      0x7
#define _RXF12EIDH_RXF12EID15_SIZE                          0x1
#define _RXF12EIDH_RXF12EID15_LENGTH                        0x1
#define _RXF12EIDH_RXF12EID15_MASK                          0x80

// Register: RXF12EIDL
#define RXF12EIDL RXF12EIDL
extern volatile unsigned char           RXF12EIDL           __at(0xD83);
#ifndef _LIB_BUILD
asm("RXF12EIDL equ 0D83h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF12EID0              :1;
        unsigned RXF12EID1              :1;
        unsigned RXF12EID2              :1;
        unsigned RXF12EID3              :1;
        unsigned RXF12EID4              :1;
        unsigned RXF12EID5              :1;
        unsigned RXF12EID6              :1;
        unsigned RXF12EID7              :1;
    };
} RXF12EIDLbits_t;
extern volatile RXF12EIDLbits_t RXF12EIDLbits __at(0xD83);
// bitfield macros
#define _RXF12EIDL_EID0_POSN                                0x0
#define _RXF12EIDL_EID0_POSITION                            0x0
#define _RXF12EIDL_EID0_SIZE                                0x1
#define _RXF12EIDL_EID0_LENGTH                              0x1
#define _RXF12EIDL_EID0_MASK                                0x1
#define _RXF12EIDL_EID1_POSN                                0x1
#define _RXF12EIDL_EID1_POSITION                            0x1
#define _RXF12EIDL_EID1_SIZE                                0x1
#define _RXF12EIDL_EID1_LENGTH                              0x1
#define _RXF12EIDL_EID1_MASK                                0x2
#define _RXF12EIDL_EID2_POSN                                0x2
#define _RXF12EIDL_EID2_POSITION                            0x2
#define _RXF12EIDL_EID2_SIZE                                0x1
#define _RXF12EIDL_EID2_LENGTH                              0x1
#define _RXF12EIDL_EID2_MASK                                0x4
#define _RXF12EIDL_EID3_POSN                                0x3
#define _RXF12EIDL_EID3_POSITION                            0x3
#define _RXF12EIDL_EID3_SIZE                                0x1
#define _RXF12EIDL_EID3_LENGTH                              0x1
#define _RXF12EIDL_EID3_MASK                                0x8
#define _RXF12EIDL_EID4_POSN                                0x4
#define _RXF12EIDL_EID4_POSITION                            0x4
#define _RXF12EIDL_EID4_SIZE                                0x1
#define _RXF12EIDL_EID4_LENGTH                              0x1
#define _RXF12EIDL_EID4_MASK                                0x10
#define _RXF12EIDL_EID5_POSN                                0x5
#define _RXF12EIDL_EID5_POSITION                            0x5
#define _RXF12EIDL_EID5_SIZE                                0x1
#define _RXF12EIDL_EID5_LENGTH                              0x1
#define _RXF12EIDL_EID5_MASK                                0x20
#define _RXF12EIDL_EID6_POSN                                0x6
#define _RXF12EIDL_EID6_POSITION                            0x6
#define _RXF12EIDL_EID6_SIZE                                0x1
#define _RXF12EIDL_EID6_LENGTH                              0x1
#define _RXF12EIDL_EID6_MASK                                0x40
#define _RXF12EIDL_EID7_POSN                                0x7
#define _RXF12EIDL_EID7_POSITION                            0x7
#define _RXF12EIDL_EID7_SIZE                                0x1
#define _RXF12EIDL_EID7_LENGTH                              0x1
#define _RXF12EIDL_EID7_MASK                                0x80
#define _RXF12EIDL_RXF12EID0_POSN                           0x0
#define _RXF12EIDL_RXF12EID0_POSITION                       0x0
#define _RXF12EIDL_RXF12EID0_SIZE                           0x1
#define _RXF12EIDL_RXF12EID0_LENGTH                         0x1
#define _RXF12EIDL_RXF12EID0_MASK                           0x1
#define _RXF12EIDL_RXF12EID1_POSN                           0x1
#define _RXF12EIDL_RXF12EID1_POSITION                       0x1
#define _RXF12EIDL_RXF12EID1_SIZE                           0x1
#define _RXF12EIDL_RXF12EID1_LENGTH                         0x1
#define _RXF12EIDL_RXF12EID1_MASK                           0x2
#define _RXF12EIDL_RXF12EID2_POSN                           0x2
#define _RXF12EIDL_RXF12EID2_POSITION                       0x2
#define _RXF12EIDL_RXF12EID2_SIZE                           0x1
#define _RXF12EIDL_RXF12EID2_LENGTH                         0x1
#define _RXF12EIDL_RXF12EID2_MASK                           0x4
#define _RXF12EIDL_RXF12EID3_POSN                           0x3
#define _RXF12EIDL_RXF12EID3_POSITION                       0x3
#define _RXF12EIDL_RXF12EID3_SIZE                           0x1
#define _RXF12EIDL_RXF12EID3_LENGTH                         0x1
#define _RXF12EIDL_RXF12EID3_MASK                           0x8
#define _RXF12EIDL_RXF12EID4_POSN                           0x4
#define _RXF12EIDL_RXF12EID4_POSITION                       0x4
#define _RXF12EIDL_RXF12EID4_SIZE                           0x1
#define _RXF12EIDL_RXF12EID4_LENGTH                         0x1
#define _RXF12EIDL_RXF12EID4_MASK                           0x10
#define _RXF12EIDL_RXF12EID5_POSN                           0x5
#define _RXF12EIDL_RXF12EID5_POSITION                       0x5
#define _RXF12EIDL_RXF12EID5_SIZE                           0x1
#define _RXF12EIDL_RXF12EID5_LENGTH                         0x1
#define _RXF12EIDL_RXF12EID5_MASK                           0x20
#define _RXF12EIDL_RXF12EID6_POSN                           0x6
#define _RXF12EIDL_RXF12EID6_POSITION                       0x6
#define _RXF12EIDL_RXF12EID6_SIZE                           0x1
#define _RXF12EIDL_RXF12EID6_LENGTH                         0x1
#define _RXF12EIDL_RXF12EID6_MASK                           0x40
#define _RXF12EIDL_RXF12EID7_POSN                           0x7
#define _RXF12EIDL_RXF12EID7_POSITION                       0x7
#define _RXF12EIDL_RXF12EID7_SIZE                           0x1
#define _RXF12EIDL_RXF12EID7_LENGTH                         0x1
#define _RXF12EIDL_RXF12EID7_MASK                           0x80

// Register: RXF13SIDH
#define RXF13SIDH RXF13SIDH
extern volatile unsigned char           RXF13SIDH           __at(0xD84);
#ifndef _LIB_BUILD
asm("RXF13SIDH equ 0D84h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF13SID3              :1;
        unsigned RXF13SID4              :1;
        unsigned RXF13SID5              :1;
        unsigned RXF13SID6              :1;
        unsigned RXF13SID7              :1;
        unsigned RXF13SID8              :1;
        unsigned RXF13SID9              :1;
        unsigned RXF13SID10             :1;
    };
} RXF13SIDHbits_t;
extern volatile RXF13SIDHbits_t RXF13SIDHbits __at(0xD84);
// bitfield macros
#define _RXF13SIDH_SID3_POSN                                0x0
#define _RXF13SIDH_SID3_POSITION                            0x0
#define _RXF13SIDH_SID3_SIZE                                0x1
#define _RXF13SIDH_SID3_LENGTH                              0x1
#define _RXF13SIDH_SID3_MASK                                0x1
#define _RXF13SIDH_SID4_POSN                                0x1
#define _RXF13SIDH_SID4_POSITION                            0x1
#define _RXF13SIDH_SID4_SIZE                                0x1
#define _RXF13SIDH_SID4_LENGTH                              0x1
#define _RXF13SIDH_SID4_MASK                                0x2
#define _RXF13SIDH_SID5_POSN                                0x2
#define _RXF13SIDH_SID5_POSITION                            0x2
#define _RXF13SIDH_SID5_SIZE                                0x1
#define _RXF13SIDH_SID5_LENGTH                              0x1
#define _RXF13SIDH_SID5_MASK                                0x4
#define _RXF13SIDH_SID6_POSN                                0x3
#define _RXF13SIDH_SID6_POSITION                            0x3
#define _RXF13SIDH_SID6_SIZE                                0x1
#define _RXF13SIDH_SID6_LENGTH                              0x1
#define _RXF13SIDH_SID6_MASK                                0x8
#define _RXF13SIDH_SID7_POSN                                0x4
#define _RXF13SIDH_SID7_POSITION                            0x4
#define _RXF13SIDH_SID7_SIZE                                0x1
#define _RXF13SIDH_SID7_LENGTH                              0x1
#define _RXF13SIDH_SID7_MASK                                0x10
#define _RXF13SIDH_SID8_POSN                                0x5
#define _RXF13SIDH_SID8_POSITION                            0x5
#define _RXF13SIDH_SID8_SIZE                                0x1
#define _RXF13SIDH_SID8_LENGTH                              0x1
#define _RXF13SIDH_SID8_MASK                                0x20
#define _RXF13SIDH_SID9_POSN                                0x6
#define _RXF13SIDH_SID9_POSITION                            0x6
#define _RXF13SIDH_SID9_SIZE                                0x1
#define _RXF13SIDH_SID9_LENGTH                              0x1
#define _RXF13SIDH_SID9_MASK                                0x40
#define _RXF13SIDH_SID10_POSN                               0x7
#define _RXF13SIDH_SID10_POSITION                           0x7
#define _RXF13SIDH_SID10_SIZE                               0x1
#define _RXF13SIDH_SID10_LENGTH                             0x1
#define _RXF13SIDH_SID10_MASK                               0x80
#define _RXF13SIDH_RXF13SID3_POSN                           0x0
#define _RXF13SIDH_RXF13SID3_POSITION                       0x0
#define _RXF13SIDH_RXF13SID3_SIZE                           0x1
#define _RXF13SIDH_RXF13SID3_LENGTH                         0x1
#define _RXF13SIDH_RXF13SID3_MASK                           0x1
#define _RXF13SIDH_RXF13SID4_POSN                           0x1
#define _RXF13SIDH_RXF13SID4_POSITION                       0x1
#define _RXF13SIDH_RXF13SID4_SIZE                           0x1
#define _RXF13SIDH_RXF13SID4_LENGTH                         0x1
#define _RXF13SIDH_RXF13SID4_MASK                           0x2
#define _RXF13SIDH_RXF13SID5_POSN                           0x2
#define _RXF13SIDH_RXF13SID5_POSITION                       0x2
#define _RXF13SIDH_RXF13SID5_SIZE                           0x1
#define _RXF13SIDH_RXF13SID5_LENGTH                         0x1
#define _RXF13SIDH_RXF13SID5_MASK                           0x4
#define _RXF13SIDH_RXF13SID6_POSN                           0x3
#define _RXF13SIDH_RXF13SID6_POSITION                       0x3
#define _RXF13SIDH_RXF13SID6_SIZE                           0x1
#define _RXF13SIDH_RXF13SID6_LENGTH                         0x1
#define _RXF13SIDH_RXF13SID6_MASK                           0x8
#define _RXF13SIDH_RXF13SID7_POSN                           0x4
#define _RXF13SIDH_RXF13SID7_POSITION                       0x4
#define _RXF13SIDH_RXF13SID7_SIZE                           0x1
#define _RXF13SIDH_RXF13SID7_LENGTH                         0x1
#define _RXF13SIDH_RXF13SID7_MASK                           0x10
#define _RXF13SIDH_RXF13SID8_POSN                           0x5
#define _RXF13SIDH_RXF13SID8_POSITION                       0x5
#define _RXF13SIDH_RXF13SID8_SIZE                           0x1
#define _RXF13SIDH_RXF13SID8_LENGTH                         0x1
#define _RXF13SIDH_RXF13SID8_MASK                           0x20
#define _RXF13SIDH_RXF13SID9_POSN                           0x6
#define _RXF13SIDH_RXF13SID9_POSITION                       0x6
#define _RXF13SIDH_RXF13SID9_SIZE                           0x1
#define _RXF13SIDH_RXF13SID9_LENGTH                         0x1
#define _RXF13SIDH_RXF13SID9_MASK                           0x40
#define _RXF13SIDH_RXF13SID10_POSN                          0x7
#define _RXF13SIDH_RXF13SID10_POSITION                      0x7
#define _RXF13SIDH_RXF13SID10_SIZE                          0x1
#define _RXF13SIDH_RXF13SID10_LENGTH                        0x1
#define _RXF13SIDH_RXF13SID10_MASK                          0x80

// Register: RXF13SIDL
#define RXF13SIDL RXF13SIDL
extern volatile unsigned char           RXF13SIDL           __at(0xD85);
#ifndef _LIB_BUILD
asm("RXF13SIDL equ 0D85h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF13EID16             :1;
        unsigned RXF13EID17             :1;
        unsigned                        :1;
        unsigned RXF13EXIDEN            :1;
        unsigned                        :1;
        unsigned RXF13SID0              :1;
        unsigned RXF13SID1              :1;
        unsigned RXF13SID2              :1;
    };
} RXF13SIDLbits_t;
extern volatile RXF13SIDLbits_t RXF13SIDLbits __at(0xD85);
// bitfield macros
#define _RXF13SIDL_EID16_POSN                               0x0
#define _RXF13SIDL_EID16_POSITION                           0x0
#define _RXF13SIDL_EID16_SIZE                               0x1
#define _RXF13SIDL_EID16_LENGTH                             0x1
#define _RXF13SIDL_EID16_MASK                               0x1
#define _RXF13SIDL_EID17_POSN                               0x1
#define _RXF13SIDL_EID17_POSITION                           0x1
#define _RXF13SIDL_EID17_SIZE                               0x1
#define _RXF13SIDL_EID17_LENGTH                             0x1
#define _RXF13SIDL_EID17_MASK                               0x2
#define _RXF13SIDL_EXIDEN_POSN                              0x3
#define _RXF13SIDL_EXIDEN_POSITION                          0x3
#define _RXF13SIDL_EXIDEN_SIZE                              0x1
#define _RXF13SIDL_EXIDEN_LENGTH                            0x1
#define _RXF13SIDL_EXIDEN_MASK                              0x8
#define _RXF13SIDL_SID0_POSN                                0x5
#define _RXF13SIDL_SID0_POSITION                            0x5
#define _RXF13SIDL_SID0_SIZE                                0x1
#define _RXF13SIDL_SID0_LENGTH                              0x1
#define _RXF13SIDL_SID0_MASK                                0x20
#define _RXF13SIDL_SID1_POSN                                0x6
#define _RXF13SIDL_SID1_POSITION                            0x6
#define _RXF13SIDL_SID1_SIZE                                0x1
#define _RXF13SIDL_SID1_LENGTH                              0x1
#define _RXF13SIDL_SID1_MASK                                0x40
#define _RXF13SIDL_SID2_POSN                                0x7
#define _RXF13SIDL_SID2_POSITION                            0x7
#define _RXF13SIDL_SID2_SIZE                                0x1
#define _RXF13SIDL_SID2_LENGTH                              0x1
#define _RXF13SIDL_SID2_MASK                                0x80
#define _RXF13SIDL_EXIDE_POSN                               0x3
#define _RXF13SIDL_EXIDE_POSITION                           0x3
#define _RXF13SIDL_EXIDE_SIZE                               0x1
#define _RXF13SIDL_EXIDE_LENGTH                             0x1
#define _RXF13SIDL_EXIDE_MASK                               0x8
#define _RXF13SIDL_RXF13EID16_POSN                          0x0
#define _RXF13SIDL_RXF13EID16_POSITION                      0x0
#define _RXF13SIDL_RXF13EID16_SIZE                          0x1
#define _RXF13SIDL_RXF13EID16_LENGTH                        0x1
#define _RXF13SIDL_RXF13EID16_MASK                          0x1
#define _RXF13SIDL_RXF13EID17_POSN                          0x1
#define _RXF13SIDL_RXF13EID17_POSITION                      0x1
#define _RXF13SIDL_RXF13EID17_SIZE                          0x1
#define _RXF13SIDL_RXF13EID17_LENGTH                        0x1
#define _RXF13SIDL_RXF13EID17_MASK                          0x2
#define _RXF13SIDL_RXF13EXIDEN_POSN                         0x3
#define _RXF13SIDL_RXF13EXIDEN_POSITION                     0x3
#define _RXF13SIDL_RXF13EXIDEN_SIZE                         0x1
#define _RXF13SIDL_RXF13EXIDEN_LENGTH                       0x1
#define _RXF13SIDL_RXF13EXIDEN_MASK                         0x8
#define _RXF13SIDL_RXF13SID0_POSN                           0x5
#define _RXF13SIDL_RXF13SID0_POSITION                       0x5
#define _RXF13SIDL_RXF13SID0_SIZE                           0x1
#define _RXF13SIDL_RXF13SID0_LENGTH                         0x1
#define _RXF13SIDL_RXF13SID0_MASK                           0x20
#define _RXF13SIDL_RXF13SID1_POSN                           0x6
#define _RXF13SIDL_RXF13SID1_POSITION                       0x6
#define _RXF13SIDL_RXF13SID1_SIZE                           0x1
#define _RXF13SIDL_RXF13SID1_LENGTH                         0x1
#define _RXF13SIDL_RXF13SID1_MASK                           0x40
#define _RXF13SIDL_RXF13SID2_POSN                           0x7
#define _RXF13SIDL_RXF13SID2_POSITION                       0x7
#define _RXF13SIDL_RXF13SID2_SIZE                           0x1
#define _RXF13SIDL_RXF13SID2_LENGTH                         0x1
#define _RXF13SIDL_RXF13SID2_MASK                           0x80

// Register: RXF13EIDH
#define RXF13EIDH RXF13EIDH
extern volatile unsigned char           RXF13EIDH           __at(0xD86);
#ifndef _LIB_BUILD
asm("RXF13EIDH equ 0D86h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF13EID8              :1;
        unsigned RXF13EID9              :1;
        unsigned RXF13EID10             :1;
        unsigned RXF13EID11             :1;
        unsigned RXF13EID12             :1;
        unsigned RXF13EID13             :1;
        unsigned RXF13EID14             :1;
        unsigned RXF13EID15             :1;
    };
} RXF13EIDHbits_t;
extern volatile RXF13EIDHbits_t RXF13EIDHbits __at(0xD86);
// bitfield macros
#define _RXF13EIDH_EID8_POSN                                0x0
#define _RXF13EIDH_EID8_POSITION                            0x0
#define _RXF13EIDH_EID8_SIZE                                0x1
#define _RXF13EIDH_EID8_LENGTH                              0x1
#define _RXF13EIDH_EID8_MASK                                0x1
#define _RXF13EIDH_EID9_POSN                                0x1
#define _RXF13EIDH_EID9_POSITION                            0x1
#define _RXF13EIDH_EID9_SIZE                                0x1
#define _RXF13EIDH_EID9_LENGTH                              0x1
#define _RXF13EIDH_EID9_MASK                                0x2
#define _RXF13EIDH_EID10_POSN                               0x2
#define _RXF13EIDH_EID10_POSITION                           0x2
#define _RXF13EIDH_EID10_SIZE                               0x1
#define _RXF13EIDH_EID10_LENGTH                             0x1
#define _RXF13EIDH_EID10_MASK                               0x4
#define _RXF13EIDH_EID11_POSN                               0x3
#define _RXF13EIDH_EID11_POSITION                           0x3
#define _RXF13EIDH_EID11_SIZE                               0x1
#define _RXF13EIDH_EID11_LENGTH                             0x1
#define _RXF13EIDH_EID11_MASK                               0x8
#define _RXF13EIDH_EID12_POSN                               0x4
#define _RXF13EIDH_EID12_POSITION                           0x4
#define _RXF13EIDH_EID12_SIZE                               0x1
#define _RXF13EIDH_EID12_LENGTH                             0x1
#define _RXF13EIDH_EID12_MASK                               0x10
#define _RXF13EIDH_EID13_POSN                               0x5
#define _RXF13EIDH_EID13_POSITION                           0x5
#define _RXF13EIDH_EID13_SIZE                               0x1
#define _RXF13EIDH_EID13_LENGTH                             0x1
#define _RXF13EIDH_EID13_MASK                               0x20
#define _RXF13EIDH_EID14_POSN                               0x6
#define _RXF13EIDH_EID14_POSITION                           0x6
#define _RXF13EIDH_EID14_SIZE                               0x1
#define _RXF13EIDH_EID14_LENGTH                             0x1
#define _RXF13EIDH_EID14_MASK                               0x40
#define _RXF13EIDH_EID15_POSN                               0x7
#define _RXF13EIDH_EID15_POSITION                           0x7
#define _RXF13EIDH_EID15_SIZE                               0x1
#define _RXF13EIDH_EID15_LENGTH                             0x1
#define _RXF13EIDH_EID15_MASK                               0x80
#define _RXF13EIDH_RXF13EID8_POSN                           0x0
#define _RXF13EIDH_RXF13EID8_POSITION                       0x0
#define _RXF13EIDH_RXF13EID8_SIZE                           0x1
#define _RXF13EIDH_RXF13EID8_LENGTH                         0x1
#define _RXF13EIDH_RXF13EID8_MASK                           0x1
#define _RXF13EIDH_RXF13EID9_POSN                           0x1
#define _RXF13EIDH_RXF13EID9_POSITION                       0x1
#define _RXF13EIDH_RXF13EID9_SIZE                           0x1
#define _RXF13EIDH_RXF13EID9_LENGTH                         0x1
#define _RXF13EIDH_RXF13EID9_MASK                           0x2
#define _RXF13EIDH_RXF13EID10_POSN                          0x2
#define _RXF13EIDH_RXF13EID10_POSITION                      0x2
#define _RXF13EIDH_RXF13EID10_SIZE                          0x1
#define _RXF13EIDH_RXF13EID10_LENGTH                        0x1
#define _RXF13EIDH_RXF13EID10_MASK                          0x4
#define _RXF13EIDH_RXF13EID11_POSN                          0x3
#define _RXF13EIDH_RXF13EID11_POSITION                      0x3
#define _RXF13EIDH_RXF13EID11_SIZE                          0x1
#define _RXF13EIDH_RXF13EID11_LENGTH                        0x1
#define _RXF13EIDH_RXF13EID11_MASK                          0x8
#define _RXF13EIDH_RXF13EID12_POSN                          0x4
#define _RXF13EIDH_RXF13EID12_POSITION                      0x4
#define _RXF13EIDH_RXF13EID12_SIZE                          0x1
#define _RXF13EIDH_RXF13EID12_LENGTH                        0x1
#define _RXF13EIDH_RXF13EID12_MASK                          0x10
#define _RXF13EIDH_RXF13EID13_POSN                          0x5
#define _RXF13EIDH_RXF13EID13_POSITION                      0x5
#define _RXF13EIDH_RXF13EID13_SIZE                          0x1
#define _RXF13EIDH_RXF13EID13_LENGTH                        0x1
#define _RXF13EIDH_RXF13EID13_MASK                          0x20
#define _RXF13EIDH_RXF13EID14_POSN                          0x6
#define _RXF13EIDH_RXF13EID14_POSITION                      0x6
#define _RXF13EIDH_RXF13EID14_SIZE                          0x1
#define _RXF13EIDH_RXF13EID14_LENGTH                        0x1
#define _RXF13EIDH_RXF13EID14_MASK                          0x40
#define _RXF13EIDH_RXF13EID15_POSN                          0x7
#define _RXF13EIDH_RXF13EID15_POSITION                      0x7
#define _RXF13EIDH_RXF13EID15_SIZE                          0x1
#define _RXF13EIDH_RXF13EID15_LENGTH                        0x1
#define _RXF13EIDH_RXF13EID15_MASK                          0x80

// Register: RXF13EIDL
#define RXF13EIDL RXF13EIDL
extern volatile unsigned char           RXF13EIDL           __at(0xD87);
#ifndef _LIB_BUILD
asm("RXF13EIDL equ 0D87h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF13EID0              :1;
        unsigned RXF13EID1              :1;
        unsigned RXF13EID2              :1;
        unsigned RXF13EID3              :1;
        unsigned RXF13EID4              :1;
        unsigned RXF13EID5              :1;
        unsigned RXF13EID6              :1;
        unsigned RXF13EID7              :1;
    };
} RXF13EIDLbits_t;
extern volatile RXF13EIDLbits_t RXF13EIDLbits __at(0xD87);
// bitfield macros
#define _RXF13EIDL_EID0_POSN                                0x0
#define _RXF13EIDL_EID0_POSITION                            0x0
#define _RXF13EIDL_EID0_SIZE                                0x1
#define _RXF13EIDL_EID0_LENGTH                              0x1
#define _RXF13EIDL_EID0_MASK                                0x1
#define _RXF13EIDL_EID1_POSN                                0x1
#define _RXF13EIDL_EID1_POSITION                            0x1
#define _RXF13EIDL_EID1_SIZE                                0x1
#define _RXF13EIDL_EID1_LENGTH                              0x1
#define _RXF13EIDL_EID1_MASK                                0x2
#define _RXF13EIDL_EID2_POSN                                0x2
#define _RXF13EIDL_EID2_POSITION                            0x2
#define _RXF13EIDL_EID2_SIZE                                0x1
#define _RXF13EIDL_EID2_LENGTH                              0x1
#define _RXF13EIDL_EID2_MASK                                0x4
#define _RXF13EIDL_EID3_POSN                                0x3
#define _RXF13EIDL_EID3_POSITION                            0x3
#define _RXF13EIDL_EID3_SIZE                                0x1
#define _RXF13EIDL_EID3_LENGTH                              0x1
#define _RXF13EIDL_EID3_MASK                                0x8
#define _RXF13EIDL_EID4_POSN                                0x4
#define _RXF13EIDL_EID4_POSITION                            0x4
#define _RXF13EIDL_EID4_SIZE                                0x1
#define _RXF13EIDL_EID4_LENGTH                              0x1
#define _RXF13EIDL_EID4_MASK                                0x10
#define _RXF13EIDL_EID5_POSN                                0x5
#define _RXF13EIDL_EID5_POSITION                            0x5
#define _RXF13EIDL_EID5_SIZE                                0x1
#define _RXF13EIDL_EID5_LENGTH                              0x1
#define _RXF13EIDL_EID5_MASK                                0x20
#define _RXF13EIDL_EID6_POSN                                0x6
#define _RXF13EIDL_EID6_POSITION                            0x6
#define _RXF13EIDL_EID6_SIZE                                0x1
#define _RXF13EIDL_EID6_LENGTH                              0x1
#define _RXF13EIDL_EID6_MASK                                0x40
#define _RXF13EIDL_EID7_POSN                                0x7
#define _RXF13EIDL_EID7_POSITION                            0x7
#define _RXF13EIDL_EID7_SIZE                                0x1
#define _RXF13EIDL_EID7_LENGTH                              0x1
#define _RXF13EIDL_EID7_MASK                                0x80
#define _RXF13EIDL_RXF13EID0_POSN                           0x0
#define _RXF13EIDL_RXF13EID0_POSITION                       0x0
#define _RXF13EIDL_RXF13EID0_SIZE                           0x1
#define _RXF13EIDL_RXF13EID0_LENGTH                         0x1
#define _RXF13EIDL_RXF13EID0_MASK                           0x1
#define _RXF13EIDL_RXF13EID1_POSN                           0x1
#define _RXF13EIDL_RXF13EID1_POSITION                       0x1
#define _RXF13EIDL_RXF13EID1_SIZE                           0x1
#define _RXF13EIDL_RXF13EID1_LENGTH                         0x1
#define _RXF13EIDL_RXF13EID1_MASK                           0x2
#define _RXF13EIDL_RXF13EID2_POSN                           0x2
#define _RXF13EIDL_RXF13EID2_POSITION                       0x2
#define _RXF13EIDL_RXF13EID2_SIZE                           0x1
#define _RXF13EIDL_RXF13EID2_LENGTH                         0x1
#define _RXF13EIDL_RXF13EID2_MASK                           0x4
#define _RXF13EIDL_RXF13EID3_POSN                           0x3
#define _RXF13EIDL_RXF13EID3_POSITION                       0x3
#define _RXF13EIDL_RXF13EID3_SIZE                           0x1
#define _RXF13EIDL_RXF13EID3_LENGTH                         0x1
#define _RXF13EIDL_RXF13EID3_MASK                           0x8
#define _RXF13EIDL_RXF13EID4_POSN                           0x4
#define _RXF13EIDL_RXF13EID4_POSITION                       0x4
#define _RXF13EIDL_RXF13EID4_SIZE                           0x1
#define _RXF13EIDL_RXF13EID4_LENGTH                         0x1
#define _RXF13EIDL_RXF13EID4_MASK                           0x10
#define _RXF13EIDL_RXF13EID5_POSN                           0x5
#define _RXF13EIDL_RXF13EID5_POSITION                       0x5
#define _RXF13EIDL_RXF13EID5_SIZE                           0x1
#define _RXF13EIDL_RXF13EID5_LENGTH                         0x1
#define _RXF13EIDL_RXF13EID5_MASK                           0x20
#define _RXF13EIDL_RXF13EID6_POSN                           0x6
#define _RXF13EIDL_RXF13EID6_POSITION                       0x6
#define _RXF13EIDL_RXF13EID6_SIZE                           0x1
#define _RXF13EIDL_RXF13EID6_LENGTH                         0x1
#define _RXF13EIDL_RXF13EID6_MASK                           0x40
#define _RXF13EIDL_RXF13EID7_POSN                           0x7
#define _RXF13EIDL_RXF13EID7_POSITION                       0x7
#define _RXF13EIDL_RXF13EID7_SIZE                           0x1
#define _RXF13EIDL_RXF13EID7_LENGTH                         0x1
#define _RXF13EIDL_RXF13EID7_MASK                           0x80

// Register: RXF14SIDH
#define RXF14SIDH RXF14SIDH
extern volatile unsigned char           RXF14SIDH           __at(0xD88);
#ifndef _LIB_BUILD
asm("RXF14SIDH equ 0D88h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF14SID3              :1;
        unsigned RXF14SID4              :1;
        unsigned RXF14SID5              :1;
        unsigned RXF14SID6              :1;
        unsigned RXF14SID7              :1;
        unsigned RXF14SID8              :1;
        unsigned RXF14SID9              :1;
        unsigned RXF14SID10             :1;
    };
} RXF14SIDHbits_t;
extern volatile RXF14SIDHbits_t RXF14SIDHbits __at(0xD88);
// bitfield macros
#define _RXF14SIDH_SID3_POSN                                0x0
#define _RXF14SIDH_SID3_POSITION                            0x0
#define _RXF14SIDH_SID3_SIZE                                0x1
#define _RXF14SIDH_SID3_LENGTH                              0x1
#define _RXF14SIDH_SID3_MASK                                0x1
#define _RXF14SIDH_SID4_POSN                                0x1
#define _RXF14SIDH_SID4_POSITION                            0x1
#define _RXF14SIDH_SID4_SIZE                                0x1
#define _RXF14SIDH_SID4_LENGTH                              0x1
#define _RXF14SIDH_SID4_MASK                                0x2
#define _RXF14SIDH_SID5_POSN                                0x2
#define _RXF14SIDH_SID5_POSITION                            0x2
#define _RXF14SIDH_SID5_SIZE                                0x1
#define _RXF14SIDH_SID5_LENGTH                              0x1
#define _RXF14SIDH_SID5_MASK                                0x4
#define _RXF14SIDH_SID6_POSN                                0x3
#define _RXF14SIDH_SID6_POSITION                            0x3
#define _RXF14SIDH_SID6_SIZE                                0x1
#define _RXF14SIDH_SID6_LENGTH                              0x1
#define _RXF14SIDH_SID6_MASK                                0x8
#define _RXF14SIDH_SID7_POSN                                0x4
#define _RXF14SIDH_SID7_POSITION                            0x4
#define _RXF14SIDH_SID7_SIZE                                0x1
#define _RXF14SIDH_SID7_LENGTH                              0x1
#define _RXF14SIDH_SID7_MASK                                0x10
#define _RXF14SIDH_SID8_POSN                                0x5
#define _RXF14SIDH_SID8_POSITION                            0x5
#define _RXF14SIDH_SID8_SIZE                                0x1
#define _RXF14SIDH_SID8_LENGTH                              0x1
#define _RXF14SIDH_SID8_MASK                                0x20
#define _RXF14SIDH_SID9_POSN                                0x6
#define _RXF14SIDH_SID9_POSITION                            0x6
#define _RXF14SIDH_SID9_SIZE                                0x1
#define _RXF14SIDH_SID9_LENGTH                              0x1
#define _RXF14SIDH_SID9_MASK                                0x40
#define _RXF14SIDH_SID10_POSN                               0x7
#define _RXF14SIDH_SID10_POSITION                           0x7
#define _RXF14SIDH_SID10_SIZE                               0x1
#define _RXF14SIDH_SID10_LENGTH                             0x1
#define _RXF14SIDH_SID10_MASK                               0x80
#define _RXF14SIDH_RXF14SID3_POSN                           0x0
#define _RXF14SIDH_RXF14SID3_POSITION                       0x0
#define _RXF14SIDH_RXF14SID3_SIZE                           0x1
#define _RXF14SIDH_RXF14SID3_LENGTH                         0x1
#define _RXF14SIDH_RXF14SID3_MASK                           0x1
#define _RXF14SIDH_RXF14SID4_POSN                           0x1
#define _RXF14SIDH_RXF14SID4_POSITION                       0x1
#define _RXF14SIDH_RXF14SID4_SIZE                           0x1
#define _RXF14SIDH_RXF14SID4_LENGTH                         0x1
#define _RXF14SIDH_RXF14SID4_MASK                           0x2
#define _RXF14SIDH_RXF14SID5_POSN                           0x2
#define _RXF14SIDH_RXF14SID5_POSITION                       0x2
#define _RXF14SIDH_RXF14SID5_SIZE                           0x1
#define _RXF14SIDH_RXF14SID5_LENGTH                         0x1
#define _RXF14SIDH_RXF14SID5_MASK                           0x4
#define _RXF14SIDH_RXF14SID6_POSN                           0x3
#define _RXF14SIDH_RXF14SID6_POSITION                       0x3
#define _RXF14SIDH_RXF14SID6_SIZE                           0x1
#define _RXF14SIDH_RXF14SID6_LENGTH                         0x1
#define _RXF14SIDH_RXF14SID6_MASK                           0x8
#define _RXF14SIDH_RXF14SID7_POSN                           0x4
#define _RXF14SIDH_RXF14SID7_POSITION                       0x4
#define _RXF14SIDH_RXF14SID7_SIZE                           0x1
#define _RXF14SIDH_RXF14SID7_LENGTH                         0x1
#define _RXF14SIDH_RXF14SID7_MASK                           0x10
#define _RXF14SIDH_RXF14SID8_POSN                           0x5
#define _RXF14SIDH_RXF14SID8_POSITION                       0x5
#define _RXF14SIDH_RXF14SID8_SIZE                           0x1
#define _RXF14SIDH_RXF14SID8_LENGTH                         0x1
#define _RXF14SIDH_RXF14SID8_MASK                           0x20
#define _RXF14SIDH_RXF14SID9_POSN                           0x6
#define _RXF14SIDH_RXF14SID9_POSITION                       0x6
#define _RXF14SIDH_RXF14SID9_SIZE                           0x1
#define _RXF14SIDH_RXF14SID9_LENGTH                         0x1
#define _RXF14SIDH_RXF14SID9_MASK                           0x40
#define _RXF14SIDH_RXF14SID10_POSN                          0x7
#define _RXF14SIDH_RXF14SID10_POSITION                      0x7
#define _RXF14SIDH_RXF14SID10_SIZE                          0x1
#define _RXF14SIDH_RXF14SID10_LENGTH                        0x1
#define _RXF14SIDH_RXF14SID10_MASK                          0x80

// Register: RXF14SIDL
#define RXF14SIDL RXF14SIDL
extern volatile unsigned char           RXF14SIDL           __at(0xD89);
#ifndef _LIB_BUILD
asm("RXF14SIDL equ 0D89h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF14EID16             :1;
        unsigned RXF14EID17             :1;
        unsigned                        :1;
        unsigned RXF14EXIDEN            :1;
        unsigned                        :1;
        unsigned RXF14SID0              :1;
        unsigned RXF14SID1              :1;
        unsigned RXF14SID2              :1;
    };
} RXF14SIDLbits_t;
extern volatile RXF14SIDLbits_t RXF14SIDLbits __at(0xD89);
// bitfield macros
#define _RXF14SIDL_EID16_POSN                               0x0
#define _RXF14SIDL_EID16_POSITION                           0x0
#define _RXF14SIDL_EID16_SIZE                               0x1
#define _RXF14SIDL_EID16_LENGTH                             0x1
#define _RXF14SIDL_EID16_MASK                               0x1
#define _RXF14SIDL_EID17_POSN                               0x1
#define _RXF14SIDL_EID17_POSITION                           0x1
#define _RXF14SIDL_EID17_SIZE                               0x1
#define _RXF14SIDL_EID17_LENGTH                             0x1
#define _RXF14SIDL_EID17_MASK                               0x2
#define _RXF14SIDL_EXIDEN_POSN                              0x3
#define _RXF14SIDL_EXIDEN_POSITION                          0x3
#define _RXF14SIDL_EXIDEN_SIZE                              0x1
#define _RXF14SIDL_EXIDEN_LENGTH                            0x1
#define _RXF14SIDL_EXIDEN_MASK                              0x8
#define _RXF14SIDL_SID0_POSN                                0x5
#define _RXF14SIDL_SID0_POSITION                            0x5
#define _RXF14SIDL_SID0_SIZE                                0x1
#define _RXF14SIDL_SID0_LENGTH                              0x1
#define _RXF14SIDL_SID0_MASK                                0x20
#define _RXF14SIDL_SID1_POSN                                0x6
#define _RXF14SIDL_SID1_POSITION                            0x6
#define _RXF14SIDL_SID1_SIZE                                0x1
#define _RXF14SIDL_SID1_LENGTH                              0x1
#define _RXF14SIDL_SID1_MASK                                0x40
#define _RXF14SIDL_SID2_POSN                                0x7
#define _RXF14SIDL_SID2_POSITION                            0x7
#define _RXF14SIDL_SID2_SIZE                                0x1
#define _RXF14SIDL_SID2_LENGTH                              0x1
#define _RXF14SIDL_SID2_MASK                                0x80
#define _RXF14SIDL_EXIDE_POSN                               0x3
#define _RXF14SIDL_EXIDE_POSITION                           0x3
#define _RXF14SIDL_EXIDE_SIZE                               0x1
#define _RXF14SIDL_EXIDE_LENGTH                             0x1
#define _RXF14SIDL_EXIDE_MASK                               0x8
#define _RXF14SIDL_RXF14EID16_POSN                          0x0
#define _RXF14SIDL_RXF14EID16_POSITION                      0x0
#define _RXF14SIDL_RXF14EID16_SIZE                          0x1
#define _RXF14SIDL_RXF14EID16_LENGTH                        0x1
#define _RXF14SIDL_RXF14EID16_MASK                          0x1
#define _RXF14SIDL_RXF14EID17_POSN                          0x1
#define _RXF14SIDL_RXF14EID17_POSITION                      0x1
#define _RXF14SIDL_RXF14EID17_SIZE                          0x1
#define _RXF14SIDL_RXF14EID17_LENGTH                        0x1
#define _RXF14SIDL_RXF14EID17_MASK                          0x2
#define _RXF14SIDL_RXF14EXIDEN_POSN                         0x3
#define _RXF14SIDL_RXF14EXIDEN_POSITION                     0x3
#define _RXF14SIDL_RXF14EXIDEN_SIZE                         0x1
#define _RXF14SIDL_RXF14EXIDEN_LENGTH                       0x1
#define _RXF14SIDL_RXF14EXIDEN_MASK                         0x8
#define _RXF14SIDL_RXF14SID0_POSN                           0x5
#define _RXF14SIDL_RXF14SID0_POSITION                       0x5
#define _RXF14SIDL_RXF14SID0_SIZE                           0x1
#define _RXF14SIDL_RXF14SID0_LENGTH                         0x1
#define _RXF14SIDL_RXF14SID0_MASK                           0x20
#define _RXF14SIDL_RXF14SID1_POSN                           0x6
#define _RXF14SIDL_RXF14SID1_POSITION                       0x6
#define _RXF14SIDL_RXF14SID1_SIZE                           0x1
#define _RXF14SIDL_RXF14SID1_LENGTH                         0x1
#define _RXF14SIDL_RXF14SID1_MASK                           0x40
#define _RXF14SIDL_RXF14SID2_POSN                           0x7
#define _RXF14SIDL_RXF14SID2_POSITION                       0x7
#define _RXF14SIDL_RXF14SID2_SIZE                           0x1
#define _RXF14SIDL_RXF14SID2_LENGTH                         0x1
#define _RXF14SIDL_RXF14SID2_MASK                           0x80

// Register: RXF14EIDH
#define RXF14EIDH RXF14EIDH
extern volatile unsigned char           RXF14EIDH           __at(0xD8A);
#ifndef _LIB_BUILD
asm("RXF14EIDH equ 0D8Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF14EID8              :1;
        unsigned RXF14EID9              :1;
        unsigned RXF14EID10             :1;
        unsigned RXF14EID11             :1;
        unsigned RXF14EID12             :1;
        unsigned RXF14EID13             :1;
        unsigned RXF14EID14             :1;
        unsigned RXF14EID15             :1;
    };
} RXF14EIDHbits_t;
extern volatile RXF14EIDHbits_t RXF14EIDHbits __at(0xD8A);
// bitfield macros
#define _RXF14EIDH_EID8_POSN                                0x0
#define _RXF14EIDH_EID8_POSITION                            0x0
#define _RXF14EIDH_EID8_SIZE                                0x1
#define _RXF14EIDH_EID8_LENGTH                              0x1
#define _RXF14EIDH_EID8_MASK                                0x1
#define _RXF14EIDH_EID9_POSN                                0x1
#define _RXF14EIDH_EID9_POSITION                            0x1
#define _RXF14EIDH_EID9_SIZE                                0x1
#define _RXF14EIDH_EID9_LENGTH                              0x1
#define _RXF14EIDH_EID9_MASK                                0x2
#define _RXF14EIDH_EID10_POSN                               0x2
#define _RXF14EIDH_EID10_POSITION                           0x2
#define _RXF14EIDH_EID10_SIZE                               0x1
#define _RXF14EIDH_EID10_LENGTH                             0x1
#define _RXF14EIDH_EID10_MASK                               0x4
#define _RXF14EIDH_EID11_POSN                               0x3
#define _RXF14EIDH_EID11_POSITION                           0x3
#define _RXF14EIDH_EID11_SIZE                               0x1
#define _RXF14EIDH_EID11_LENGTH                             0x1
#define _RXF14EIDH_EID11_MASK                               0x8
#define _RXF14EIDH_EID12_POSN                               0x4
#define _RXF14EIDH_EID12_POSITION                           0x4
#define _RXF14EIDH_EID12_SIZE                               0x1
#define _RXF14EIDH_EID12_LENGTH                             0x1
#define _RXF14EIDH_EID12_MASK                               0x10
#define _RXF14EIDH_EID13_POSN                               0x5
#define _RXF14EIDH_EID13_POSITION                           0x5
#define _RXF14EIDH_EID13_SIZE                               0x1
#define _RXF14EIDH_EID13_LENGTH                             0x1
#define _RXF14EIDH_EID13_MASK                               0x20
#define _RXF14EIDH_EID14_POSN                               0x6
#define _RXF14EIDH_EID14_POSITION                           0x6
#define _RXF14EIDH_EID14_SIZE                               0x1
#define _RXF14EIDH_EID14_LENGTH                             0x1
#define _RXF14EIDH_EID14_MASK                               0x40
#define _RXF14EIDH_EID15_POSN                               0x7
#define _RXF14EIDH_EID15_POSITION                           0x7
#define _RXF14EIDH_EID15_SIZE                               0x1
#define _RXF14EIDH_EID15_LENGTH                             0x1
#define _RXF14EIDH_EID15_MASK                               0x80
#define _RXF14EIDH_RXF14EID8_POSN                           0x0
#define _RXF14EIDH_RXF14EID8_POSITION                       0x0
#define _RXF14EIDH_RXF14EID8_SIZE                           0x1
#define _RXF14EIDH_RXF14EID8_LENGTH                         0x1
#define _RXF14EIDH_RXF14EID8_MASK                           0x1
#define _RXF14EIDH_RXF14EID9_POSN                           0x1
#define _RXF14EIDH_RXF14EID9_POSITION                       0x1
#define _RXF14EIDH_RXF14EID9_SIZE                           0x1
#define _RXF14EIDH_RXF14EID9_LENGTH                         0x1
#define _RXF14EIDH_RXF14EID9_MASK                           0x2
#define _RXF14EIDH_RXF14EID10_POSN                          0x2
#define _RXF14EIDH_RXF14EID10_POSITION                      0x2
#define _RXF14EIDH_RXF14EID10_SIZE                          0x1
#define _RXF14EIDH_RXF14EID10_LENGTH                        0x1
#define _RXF14EIDH_RXF14EID10_MASK                          0x4
#define _RXF14EIDH_RXF14EID11_POSN                          0x3
#define _RXF14EIDH_RXF14EID11_POSITION                      0x3
#define _RXF14EIDH_RXF14EID11_SIZE                          0x1
#define _RXF14EIDH_RXF14EID11_LENGTH                        0x1
#define _RXF14EIDH_RXF14EID11_MASK                          0x8
#define _RXF14EIDH_RXF14EID12_POSN                          0x4
#define _RXF14EIDH_RXF14EID12_POSITION                      0x4
#define _RXF14EIDH_RXF14EID12_SIZE                          0x1
#define _RXF14EIDH_RXF14EID12_LENGTH                        0x1
#define _RXF14EIDH_RXF14EID12_MASK                          0x10
#define _RXF14EIDH_RXF14EID13_POSN                          0x5
#define _RXF14EIDH_RXF14EID13_POSITION                      0x5
#define _RXF14EIDH_RXF14EID13_SIZE                          0x1
#define _RXF14EIDH_RXF14EID13_LENGTH                        0x1
#define _RXF14EIDH_RXF14EID13_MASK                          0x20
#define _RXF14EIDH_RXF14EID14_POSN                          0x6
#define _RXF14EIDH_RXF14EID14_POSITION                      0x6
#define _RXF14EIDH_RXF14EID14_SIZE                          0x1
#define _RXF14EIDH_RXF14EID14_LENGTH                        0x1
#define _RXF14EIDH_RXF14EID14_MASK                          0x40
#define _RXF14EIDH_RXF14EID15_POSN                          0x7
#define _RXF14EIDH_RXF14EID15_POSITION                      0x7
#define _RXF14EIDH_RXF14EID15_SIZE                          0x1
#define _RXF14EIDH_RXF14EID15_LENGTH                        0x1
#define _RXF14EIDH_RXF14EID15_MASK                          0x80

// Register: RXF14EIDL
#define RXF14EIDL RXF14EIDL
extern volatile unsigned char           RXF14EIDL           __at(0xD8B);
#ifndef _LIB_BUILD
asm("RXF14EIDL equ 0D8Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF14EID0              :1;
        unsigned RXF14EID1              :1;
        unsigned RXF14EID2              :1;
        unsigned RXF14EID3              :1;
        unsigned RXF14EID4              :1;
        unsigned RXF14EID5              :1;
        unsigned RXF14EID6              :1;
        unsigned RXF14EID7              :1;
    };
} RXF14EIDLbits_t;
extern volatile RXF14EIDLbits_t RXF14EIDLbits __at(0xD8B);
// bitfield macros
#define _RXF14EIDL_EID0_POSN                                0x0
#define _RXF14EIDL_EID0_POSITION                            0x0
#define _RXF14EIDL_EID0_SIZE                                0x1
#define _RXF14EIDL_EID0_LENGTH                              0x1
#define _RXF14EIDL_EID0_MASK                                0x1
#define _RXF14EIDL_EID1_POSN                                0x1
#define _RXF14EIDL_EID1_POSITION                            0x1
#define _RXF14EIDL_EID1_SIZE                                0x1
#define _RXF14EIDL_EID1_LENGTH                              0x1
#define _RXF14EIDL_EID1_MASK                                0x2
#define _RXF14EIDL_EID2_POSN                                0x2
#define _RXF14EIDL_EID2_POSITION                            0x2
#define _RXF14EIDL_EID2_SIZE                                0x1
#define _RXF14EIDL_EID2_LENGTH                              0x1
#define _RXF14EIDL_EID2_MASK                                0x4
#define _RXF14EIDL_EID3_POSN                                0x3
#define _RXF14EIDL_EID3_POSITION                            0x3
#define _RXF14EIDL_EID3_SIZE                                0x1
#define _RXF14EIDL_EID3_LENGTH                              0x1
#define _RXF14EIDL_EID3_MASK                                0x8
#define _RXF14EIDL_EID4_POSN                                0x4
#define _RXF14EIDL_EID4_POSITION                            0x4
#define _RXF14EIDL_EID4_SIZE                                0x1
#define _RXF14EIDL_EID4_LENGTH                              0x1
#define _RXF14EIDL_EID4_MASK                                0x10
#define _RXF14EIDL_EID5_POSN                                0x5
#define _RXF14EIDL_EID5_POSITION                            0x5
#define _RXF14EIDL_EID5_SIZE                                0x1
#define _RXF14EIDL_EID5_LENGTH                              0x1
#define _RXF14EIDL_EID5_MASK                                0x20
#define _RXF14EIDL_EID6_POSN                                0x6
#define _RXF14EIDL_EID6_POSITION                            0x6
#define _RXF14EIDL_EID6_SIZE                                0x1
#define _RXF14EIDL_EID6_LENGTH                              0x1
#define _RXF14EIDL_EID6_MASK                                0x40
#define _RXF14EIDL_EID7_POSN                                0x7
#define _RXF14EIDL_EID7_POSITION                            0x7
#define _RXF14EIDL_EID7_SIZE                                0x1
#define _RXF14EIDL_EID7_LENGTH                              0x1
#define _RXF14EIDL_EID7_MASK                                0x80
#define _RXF14EIDL_RXF14EID0_POSN                           0x0
#define _RXF14EIDL_RXF14EID0_POSITION                       0x0
#define _RXF14EIDL_RXF14EID0_SIZE                           0x1
#define _RXF14EIDL_RXF14EID0_LENGTH                         0x1
#define _RXF14EIDL_RXF14EID0_MASK                           0x1
#define _RXF14EIDL_RXF14EID1_POSN                           0x1
#define _RXF14EIDL_RXF14EID1_POSITION                       0x1
#define _RXF14EIDL_RXF14EID1_SIZE                           0x1
#define _RXF14EIDL_RXF14EID1_LENGTH                         0x1
#define _RXF14EIDL_RXF14EID1_MASK                           0x2
#define _RXF14EIDL_RXF14EID2_POSN                           0x2
#define _RXF14EIDL_RXF14EID2_POSITION                       0x2
#define _RXF14EIDL_RXF14EID2_SIZE                           0x1
#define _RXF14EIDL_RXF14EID2_LENGTH                         0x1
#define _RXF14EIDL_RXF14EID2_MASK                           0x4
#define _RXF14EIDL_RXF14EID3_POSN                           0x3
#define _RXF14EIDL_RXF14EID3_POSITION                       0x3
#define _RXF14EIDL_RXF14EID3_SIZE                           0x1
#define _RXF14EIDL_RXF14EID3_LENGTH                         0x1
#define _RXF14EIDL_RXF14EID3_MASK                           0x8
#define _RXF14EIDL_RXF14EID4_POSN                           0x4
#define _RXF14EIDL_RXF14EID4_POSITION                       0x4
#define _RXF14EIDL_RXF14EID4_SIZE                           0x1
#define _RXF14EIDL_RXF14EID4_LENGTH                         0x1
#define _RXF14EIDL_RXF14EID4_MASK                           0x10
#define _RXF14EIDL_RXF14EID5_POSN                           0x5
#define _RXF14EIDL_RXF14EID5_POSITION                       0x5
#define _RXF14EIDL_RXF14EID5_SIZE                           0x1
#define _RXF14EIDL_RXF14EID5_LENGTH                         0x1
#define _RXF14EIDL_RXF14EID5_MASK                           0x20
#define _RXF14EIDL_RXF14EID6_POSN                           0x6
#define _RXF14EIDL_RXF14EID6_POSITION                       0x6
#define _RXF14EIDL_RXF14EID6_SIZE                           0x1
#define _RXF14EIDL_RXF14EID6_LENGTH                         0x1
#define _RXF14EIDL_RXF14EID6_MASK                           0x40
#define _RXF14EIDL_RXF14EID7_POSN                           0x7
#define _RXF14EIDL_RXF14EID7_POSITION                       0x7
#define _RXF14EIDL_RXF14EID7_SIZE                           0x1
#define _RXF14EIDL_RXF14EID7_LENGTH                         0x1
#define _RXF14EIDL_RXF14EID7_MASK                           0x80

// Register: RXF15SIDH
#define RXF15SIDH RXF15SIDH
extern volatile unsigned char           RXF15SIDH           __at(0xD90);
#ifndef _LIB_BUILD
asm("RXF15SIDH equ 0D90h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF15SID3              :1;
        unsigned RXF15SID4              :1;
        unsigned RXF15SID5              :1;
        unsigned RXF15SID6              :1;
        unsigned RXF15SID7              :1;
        unsigned RXF15SID8              :1;
        unsigned RXF15SID9              :1;
        unsigned RXF15SID10             :1;
    };
} RXF15SIDHbits_t;
extern volatile RXF15SIDHbits_t RXF15SIDHbits __at(0xD90);
// bitfield macros
#define _RXF15SIDH_SID3_POSN                                0x0
#define _RXF15SIDH_SID3_POSITION                            0x0
#define _RXF15SIDH_SID3_SIZE                                0x1
#define _RXF15SIDH_SID3_LENGTH                              0x1
#define _RXF15SIDH_SID3_MASK                                0x1
#define _RXF15SIDH_SID4_POSN                                0x1
#define _RXF15SIDH_SID4_POSITION                            0x1
#define _RXF15SIDH_SID4_SIZE                                0x1
#define _RXF15SIDH_SID4_LENGTH                              0x1
#define _RXF15SIDH_SID4_MASK                                0x2
#define _RXF15SIDH_SID5_POSN                                0x2
#define _RXF15SIDH_SID5_POSITION                            0x2
#define _RXF15SIDH_SID5_SIZE                                0x1
#define _RXF15SIDH_SID5_LENGTH                              0x1
#define _RXF15SIDH_SID5_MASK                                0x4
#define _RXF15SIDH_SID6_POSN                                0x3
#define _RXF15SIDH_SID6_POSITION                            0x3
#define _RXF15SIDH_SID6_SIZE                                0x1
#define _RXF15SIDH_SID6_LENGTH                              0x1
#define _RXF15SIDH_SID6_MASK                                0x8
#define _RXF15SIDH_SID7_POSN                                0x4
#define _RXF15SIDH_SID7_POSITION                            0x4
#define _RXF15SIDH_SID7_SIZE                                0x1
#define _RXF15SIDH_SID7_LENGTH                              0x1
#define _RXF15SIDH_SID7_MASK                                0x10
#define _RXF15SIDH_SID8_POSN                                0x5
#define _RXF15SIDH_SID8_POSITION                            0x5
#define _RXF15SIDH_SID8_SIZE                                0x1
#define _RXF15SIDH_SID8_LENGTH                              0x1
#define _RXF15SIDH_SID8_MASK                                0x20
#define _RXF15SIDH_SID9_POSN                                0x6
#define _RXF15SIDH_SID9_POSITION                            0x6
#define _RXF15SIDH_SID9_SIZE                                0x1
#define _RXF15SIDH_SID9_LENGTH                              0x1
#define _RXF15SIDH_SID9_MASK                                0x40
#define _RXF15SIDH_SID10_POSN                               0x7
#define _RXF15SIDH_SID10_POSITION                           0x7
#define _RXF15SIDH_SID10_SIZE                               0x1
#define _RXF15SIDH_SID10_LENGTH                             0x1
#define _RXF15SIDH_SID10_MASK                               0x80
#define _RXF15SIDH_RXF15SID3_POSN                           0x0
#define _RXF15SIDH_RXF15SID3_POSITION                       0x0
#define _RXF15SIDH_RXF15SID3_SIZE                           0x1
#define _RXF15SIDH_RXF15SID3_LENGTH                         0x1
#define _RXF15SIDH_RXF15SID3_MASK                           0x1
#define _RXF15SIDH_RXF15SID4_POSN                           0x1
#define _RXF15SIDH_RXF15SID4_POSITION                       0x1
#define _RXF15SIDH_RXF15SID4_SIZE                           0x1
#define _RXF15SIDH_RXF15SID4_LENGTH                         0x1
#define _RXF15SIDH_RXF15SID4_MASK                           0x2
#define _RXF15SIDH_RXF15SID5_POSN                           0x2
#define _RXF15SIDH_RXF15SID5_POSITION                       0x2
#define _RXF15SIDH_RXF15SID5_SIZE                           0x1
#define _RXF15SIDH_RXF15SID5_LENGTH                         0x1
#define _RXF15SIDH_RXF15SID5_MASK                           0x4
#define _RXF15SIDH_RXF15SID6_POSN                           0x3
#define _RXF15SIDH_RXF15SID6_POSITION                       0x3
#define _RXF15SIDH_RXF15SID6_SIZE                           0x1
#define _RXF15SIDH_RXF15SID6_LENGTH                         0x1
#define _RXF15SIDH_RXF15SID6_MASK                           0x8
#define _RXF15SIDH_RXF15SID7_POSN                           0x4
#define _RXF15SIDH_RXF15SID7_POSITION                       0x4
#define _RXF15SIDH_RXF15SID7_SIZE                           0x1
#define _RXF15SIDH_RXF15SID7_LENGTH                         0x1
#define _RXF15SIDH_RXF15SID7_MASK                           0x10
#define _RXF15SIDH_RXF15SID8_POSN                           0x5
#define _RXF15SIDH_RXF15SID8_POSITION                       0x5
#define _RXF15SIDH_RXF15SID8_SIZE                           0x1
#define _RXF15SIDH_RXF15SID8_LENGTH                         0x1
#define _RXF15SIDH_RXF15SID8_MASK                           0x20
#define _RXF15SIDH_RXF15SID9_POSN                           0x6
#define _RXF15SIDH_RXF15SID9_POSITION                       0x6
#define _RXF15SIDH_RXF15SID9_SIZE                           0x1
#define _RXF15SIDH_RXF15SID9_LENGTH                         0x1
#define _RXF15SIDH_RXF15SID9_MASK                           0x40
#define _RXF15SIDH_RXF15SID10_POSN                          0x7
#define _RXF15SIDH_RXF15SID10_POSITION                      0x7
#define _RXF15SIDH_RXF15SID10_SIZE                          0x1
#define _RXF15SIDH_RXF15SID10_LENGTH                        0x1
#define _RXF15SIDH_RXF15SID10_MASK                          0x80

// Register: RXF15SIDL
#define RXF15SIDL RXF15SIDL
extern volatile unsigned char           RXF15SIDL           __at(0xD91);
#ifndef _LIB_BUILD
asm("RXF15SIDL equ 0D91h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF15EID16             :1;
        unsigned RXF15EID17             :1;
        unsigned                        :1;
        unsigned RXF15EXIDEN            :1;
        unsigned                        :1;
        unsigned RXF15SID0              :1;
        unsigned RXF15SID1              :1;
        unsigned RXF15SID2              :1;
    };
} RXF15SIDLbits_t;
extern volatile RXF15SIDLbits_t RXF15SIDLbits __at(0xD91);
// bitfield macros
#define _RXF15SIDL_EID16_POSN                               0x0
#define _RXF15SIDL_EID16_POSITION                           0x0
#define _RXF15SIDL_EID16_SIZE                               0x1
#define _RXF15SIDL_EID16_LENGTH                             0x1
#define _RXF15SIDL_EID16_MASK                               0x1
#define _RXF15SIDL_EID17_POSN                               0x1
#define _RXF15SIDL_EID17_POSITION                           0x1
#define _RXF15SIDL_EID17_SIZE                               0x1
#define _RXF15SIDL_EID17_LENGTH                             0x1
#define _RXF15SIDL_EID17_MASK                               0x2
#define _RXF15SIDL_EXIDEN_POSN                              0x3
#define _RXF15SIDL_EXIDEN_POSITION                          0x3
#define _RXF15SIDL_EXIDEN_SIZE                              0x1
#define _RXF15SIDL_EXIDEN_LENGTH                            0x1
#define _RXF15SIDL_EXIDEN_MASK                              0x8
#define _RXF15SIDL_SID0_POSN                                0x5
#define _RXF15SIDL_SID0_POSITION                            0x5
#define _RXF15SIDL_SID0_SIZE                                0x1
#define _RXF15SIDL_SID0_LENGTH                              0x1
#define _RXF15SIDL_SID0_MASK                                0x20
#define _RXF15SIDL_SID1_POSN                                0x6
#define _RXF15SIDL_SID1_POSITION                            0x6
#define _RXF15SIDL_SID1_SIZE                                0x1
#define _RXF15SIDL_SID1_LENGTH                              0x1
#define _RXF15SIDL_SID1_MASK                                0x40
#define _RXF15SIDL_SID2_POSN                                0x7
#define _RXF15SIDL_SID2_POSITION                            0x7
#define _RXF15SIDL_SID2_SIZE                                0x1
#define _RXF15SIDL_SID2_LENGTH                              0x1
#define _RXF15SIDL_SID2_MASK                                0x80
#define _RXF15SIDL_EXIDE_POSN                               0x3
#define _RXF15SIDL_EXIDE_POSITION                           0x3
#define _RXF15SIDL_EXIDE_SIZE                               0x1
#define _RXF15SIDL_EXIDE_LENGTH                             0x1
#define _RXF15SIDL_EXIDE_MASK                               0x8
#define _RXF15SIDL_RXF15EID16_POSN                          0x0
#define _RXF15SIDL_RXF15EID16_POSITION                      0x0
#define _RXF15SIDL_RXF15EID16_SIZE                          0x1
#define _RXF15SIDL_RXF15EID16_LENGTH                        0x1
#define _RXF15SIDL_RXF15EID16_MASK                          0x1
#define _RXF15SIDL_RXF15EID17_POSN                          0x1
#define _RXF15SIDL_RXF15EID17_POSITION                      0x1
#define _RXF15SIDL_RXF15EID17_SIZE                          0x1
#define _RXF15SIDL_RXF15EID17_LENGTH                        0x1
#define _RXF15SIDL_RXF15EID17_MASK                          0x2
#define _RXF15SIDL_RXF15EXIDEN_POSN                         0x3
#define _RXF15SIDL_RXF15EXIDEN_POSITION                     0x3
#define _RXF15SIDL_RXF15EXIDEN_SIZE                         0x1
#define _RXF15SIDL_RXF15EXIDEN_LENGTH                       0x1
#define _RXF15SIDL_RXF15EXIDEN_MASK                         0x8
#define _RXF15SIDL_RXF15SID0_POSN                           0x5
#define _RXF15SIDL_RXF15SID0_POSITION                       0x5
#define _RXF15SIDL_RXF15SID0_SIZE                           0x1
#define _RXF15SIDL_RXF15SID0_LENGTH                         0x1
#define _RXF15SIDL_RXF15SID0_MASK                           0x20
#define _RXF15SIDL_RXF15SID1_POSN                           0x6
#define _RXF15SIDL_RXF15SID1_POSITION                       0x6
#define _RXF15SIDL_RXF15SID1_SIZE                           0x1
#define _RXF15SIDL_RXF15SID1_LENGTH                         0x1
#define _RXF15SIDL_RXF15SID1_MASK                           0x40
#define _RXF15SIDL_RXF15SID2_POSN                           0x7
#define _RXF15SIDL_RXF15SID2_POSITION                       0x7
#define _RXF15SIDL_RXF15SID2_SIZE                           0x1
#define _RXF15SIDL_RXF15SID2_LENGTH                         0x1
#define _RXF15SIDL_RXF15SID2_MASK                           0x80

// Register: RXF15EIDH
#define RXF15EIDH RXF15EIDH
extern volatile unsigned char           RXF15EIDH           __at(0xD92);
#ifndef _LIB_BUILD
asm("RXF15EIDH equ 0D92h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF15EID8              :1;
        unsigned RXF15EID9              :1;
        unsigned RXF15EID10             :1;
        unsigned RXF15EID11             :1;
        unsigned RXF15EID12             :1;
        unsigned RXF15EID13             :1;
        unsigned RXF15EID14             :1;
        unsigned RXF15EID15             :1;
    };
} RXF15EIDHbits_t;
extern volatile RXF15EIDHbits_t RXF15EIDHbits __at(0xD92);
// bitfield macros
#define _RXF15EIDH_EID8_POSN                                0x0
#define _RXF15EIDH_EID8_POSITION                            0x0
#define _RXF15EIDH_EID8_SIZE                                0x1
#define _RXF15EIDH_EID8_LENGTH                              0x1
#define _RXF15EIDH_EID8_MASK                                0x1
#define _RXF15EIDH_EID9_POSN                                0x1
#define _RXF15EIDH_EID9_POSITION                            0x1
#define _RXF15EIDH_EID9_SIZE                                0x1
#define _RXF15EIDH_EID9_LENGTH                              0x1
#define _RXF15EIDH_EID9_MASK                                0x2
#define _RXF15EIDH_EID10_POSN                               0x2
#define _RXF15EIDH_EID10_POSITION                           0x2
#define _RXF15EIDH_EID10_SIZE                               0x1
#define _RXF15EIDH_EID10_LENGTH                             0x1
#define _RXF15EIDH_EID10_MASK                               0x4
#define _RXF15EIDH_EID11_POSN                               0x3
#define _RXF15EIDH_EID11_POSITION                           0x3
#define _RXF15EIDH_EID11_SIZE                               0x1
#define _RXF15EIDH_EID11_LENGTH                             0x1
#define _RXF15EIDH_EID11_MASK                               0x8
#define _RXF15EIDH_EID12_POSN                               0x4
#define _RXF15EIDH_EID12_POSITION                           0x4
#define _RXF15EIDH_EID12_SIZE                               0x1
#define _RXF15EIDH_EID12_LENGTH                             0x1
#define _RXF15EIDH_EID12_MASK                               0x10
#define _RXF15EIDH_EID13_POSN                               0x5
#define _RXF15EIDH_EID13_POSITION                           0x5
#define _RXF15EIDH_EID13_SIZE                               0x1
#define _RXF15EIDH_EID13_LENGTH                             0x1
#define _RXF15EIDH_EID13_MASK                               0x20
#define _RXF15EIDH_EID14_POSN                               0x6
#define _RXF15EIDH_EID14_POSITION                           0x6
#define _RXF15EIDH_EID14_SIZE                               0x1
#define _RXF15EIDH_EID14_LENGTH                             0x1
#define _RXF15EIDH_EID14_MASK                               0x40
#define _RXF15EIDH_EID15_POSN                               0x7
#define _RXF15EIDH_EID15_POSITION                           0x7
#define _RXF15EIDH_EID15_SIZE                               0x1
#define _RXF15EIDH_EID15_LENGTH                             0x1
#define _RXF15EIDH_EID15_MASK                               0x80
#define _RXF15EIDH_RXF15EID8_POSN                           0x0
#define _RXF15EIDH_RXF15EID8_POSITION                       0x0
#define _RXF15EIDH_RXF15EID8_SIZE                           0x1
#define _RXF15EIDH_RXF15EID8_LENGTH                         0x1
#define _RXF15EIDH_RXF15EID8_MASK                           0x1
#define _RXF15EIDH_RXF15EID9_POSN                           0x1
#define _RXF15EIDH_RXF15EID9_POSITION                       0x1
#define _RXF15EIDH_RXF15EID9_SIZE                           0x1
#define _RXF15EIDH_RXF15EID9_LENGTH                         0x1
#define _RXF15EIDH_RXF15EID9_MASK                           0x2
#define _RXF15EIDH_RXF15EID10_POSN                          0x2
#define _RXF15EIDH_RXF15EID10_POSITION                      0x2
#define _RXF15EIDH_RXF15EID10_SIZE                          0x1
#define _RXF15EIDH_RXF15EID10_LENGTH                        0x1
#define _RXF15EIDH_RXF15EID10_MASK                          0x4
#define _RXF15EIDH_RXF15EID11_POSN                          0x3
#define _RXF15EIDH_RXF15EID11_POSITION                      0x3
#define _RXF15EIDH_RXF15EID11_SIZE                          0x1
#define _RXF15EIDH_RXF15EID11_LENGTH                        0x1
#define _RXF15EIDH_RXF15EID11_MASK                          0x8
#define _RXF15EIDH_RXF15EID12_POSN                          0x4
#define _RXF15EIDH_RXF15EID12_POSITION                      0x4
#define _RXF15EIDH_RXF15EID12_SIZE                          0x1
#define _RXF15EIDH_RXF15EID12_LENGTH                        0x1
#define _RXF15EIDH_RXF15EID12_MASK                          0x10
#define _RXF15EIDH_RXF15EID13_POSN                          0x5
#define _RXF15EIDH_RXF15EID13_POSITION                      0x5
#define _RXF15EIDH_RXF15EID13_SIZE                          0x1
#define _RXF15EIDH_RXF15EID13_LENGTH                        0x1
#define _RXF15EIDH_RXF15EID13_MASK                          0x20
#define _RXF15EIDH_RXF15EID14_POSN                          0x6
#define _RXF15EIDH_RXF15EID14_POSITION                      0x6
#define _RXF15EIDH_RXF15EID14_SIZE                          0x1
#define _RXF15EIDH_RXF15EID14_LENGTH                        0x1
#define _RXF15EIDH_RXF15EID14_MASK                          0x40
#define _RXF15EIDH_RXF15EID15_POSN                          0x7
#define _RXF15EIDH_RXF15EID15_POSITION                      0x7
#define _RXF15EIDH_RXF15EID15_SIZE                          0x1
#define _RXF15EIDH_RXF15EID15_LENGTH                        0x1
#define _RXF15EIDH_RXF15EID15_MASK                          0x80

// Register: RXF15EIDL
#define RXF15EIDL RXF15EIDL
extern volatile unsigned char           RXF15EIDL           __at(0xD93);
#ifndef _LIB_BUILD
asm("RXF15EIDL equ 0D93h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF15EID0              :1;
        unsigned RXF15EID1              :1;
        unsigned RXF15EID2              :1;
        unsigned RXF15EID3              :1;
        unsigned RXF15EID4              :1;
        unsigned RXF15EID5              :1;
        unsigned RXF15EID6              :1;
        unsigned RXF15EID7              :1;
    };
} RXF15EIDLbits_t;
extern volatile RXF15EIDLbits_t RXF15EIDLbits __at(0xD93);
// bitfield macros
#define _RXF15EIDL_EID0_POSN                                0x0
#define _RXF15EIDL_EID0_POSITION                            0x0
#define _RXF15EIDL_EID0_SIZE                                0x1
#define _RXF15EIDL_EID0_LENGTH                              0x1
#define _RXF15EIDL_EID0_MASK                                0x1
#define _RXF15EIDL_EID1_POSN                                0x1
#define _RXF15EIDL_EID1_POSITION                            0x1
#define _RXF15EIDL_EID1_SIZE                                0x1
#define _RXF15EIDL_EID1_LENGTH                              0x1
#define _RXF15EIDL_EID1_MASK                                0x2
#define _RXF15EIDL_EID2_POSN                                0x2
#define _RXF15EIDL_EID2_POSITION                            0x2
#define _RXF15EIDL_EID2_SIZE                                0x1
#define _RXF15EIDL_EID2_LENGTH                              0x1
#define _RXF15EIDL_EID2_MASK                                0x4
#define _RXF15EIDL_EID3_POSN                                0x3
#define _RXF15EIDL_EID3_POSITION                            0x3
#define _RXF15EIDL_EID3_SIZE                                0x1
#define _RXF15EIDL_EID3_LENGTH                              0x1
#define _RXF15EIDL_EID3_MASK                                0x8
#define _RXF15EIDL_EID4_POSN                                0x4
#define _RXF15EIDL_EID4_POSITION                            0x4
#define _RXF15EIDL_EID4_SIZE                                0x1
#define _RXF15EIDL_EID4_LENGTH                              0x1
#define _RXF15EIDL_EID4_MASK                                0x10
#define _RXF15EIDL_EID5_POSN                                0x5
#define _RXF15EIDL_EID5_POSITION                            0x5
#define _RXF15EIDL_EID5_SIZE                                0x1
#define _RXF15EIDL_EID5_LENGTH                              0x1
#define _RXF15EIDL_EID5_MASK                                0x20
#define _RXF15EIDL_EID6_POSN                                0x6
#define _RXF15EIDL_EID6_POSITION                            0x6
#define _RXF15EIDL_EID6_SIZE                                0x1
#define _RXF15EIDL_EID6_LENGTH                              0x1
#define _RXF15EIDL_EID6_MASK                                0x40
#define _RXF15EIDL_EID7_POSN                                0x7
#define _RXF15EIDL_EID7_POSITION                            0x7
#define _RXF15EIDL_EID7_SIZE                                0x1
#define _RXF15EIDL_EID7_LENGTH                              0x1
#define _RXF15EIDL_EID7_MASK                                0x80
#define _RXF15EIDL_RXF15EID0_POSN                           0x0
#define _RXF15EIDL_RXF15EID0_POSITION                       0x0
#define _RXF15EIDL_RXF15EID0_SIZE                           0x1
#define _RXF15EIDL_RXF15EID0_LENGTH                         0x1
#define _RXF15EIDL_RXF15EID0_MASK                           0x1
#define _RXF15EIDL_RXF15EID1_POSN                           0x1
#define _RXF15EIDL_RXF15EID1_POSITION                       0x1
#define _RXF15EIDL_RXF15EID1_SIZE                           0x1
#define _RXF15EIDL_RXF15EID1_LENGTH                         0x1
#define _RXF15EIDL_RXF15EID1_MASK                           0x2
#define _RXF15EIDL_RXF15EID2_POSN                           0x2
#define _RXF15EIDL_RXF15EID2_POSITION                       0x2
#define _RXF15EIDL_RXF15EID2_SIZE                           0x1
#define _RXF15EIDL_RXF15EID2_LENGTH                         0x1
#define _RXF15EIDL_RXF15EID2_MASK                           0x4
#define _RXF15EIDL_RXF15EID3_POSN                           0x3
#define _RXF15EIDL_RXF15EID3_POSITION                       0x3
#define _RXF15EIDL_RXF15EID3_SIZE                           0x1
#define _RXF15EIDL_RXF15EID3_LENGTH                         0x1
#define _RXF15EIDL_RXF15EID3_MASK                           0x8
#define _RXF15EIDL_RXF15EID4_POSN                           0x4
#define _RXF15EIDL_RXF15EID4_POSITION                       0x4
#define _RXF15EIDL_RXF15EID4_SIZE                           0x1
#define _RXF15EIDL_RXF15EID4_LENGTH                         0x1
#define _RXF15EIDL_RXF15EID4_MASK                           0x10
#define _RXF15EIDL_RXF15EID5_POSN                           0x5
#define _RXF15EIDL_RXF15EID5_POSITION                       0x5
#define _RXF15EIDL_RXF15EID5_SIZE                           0x1
#define _RXF15EIDL_RXF15EID5_LENGTH                         0x1
#define _RXF15EIDL_RXF15EID5_MASK                           0x20
#define _RXF15EIDL_RXF15EID6_POSN                           0x6
#define _RXF15EIDL_RXF15EID6_POSITION                       0x6
#define _RXF15EIDL_RXF15EID6_SIZE                           0x1
#define _RXF15EIDL_RXF15EID6_LENGTH                         0x1
#define _RXF15EIDL_RXF15EID6_MASK                           0x40
#define _RXF15EIDL_RXF15EID7_POSN                           0x7
#define _RXF15EIDL_RXF15EID7_POSITION                       0x7
#define _RXF15EIDL_RXF15EID7_SIZE                           0x1
#define _RXF15EIDL_RXF15EID7_LENGTH                         0x1
#define _RXF15EIDL_RXF15EID7_MASK                           0x80

// Register: RXFCON0
#define RXFCON0 RXFCON0
extern volatile unsigned char           RXFCON0             __at(0xDD4);
#ifndef _LIB_BUILD
asm("RXFCON0 equ 0DD4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXF0EN                 :1;
        unsigned RXF1EN                 :1;
        unsigned RXF2EN                 :1;
        unsigned RXF3EN                 :1;
        unsigned RXF4EN                 :1;
        unsigned RXF5EN                 :1;
        unsigned RXF6EN                 :1;
        unsigned RXF7EN                 :1;
    };
} RXFCON0bits_t;
extern volatile RXFCON0bits_t RXFCON0bits __at(0xDD4);
// bitfield macros
#define _RXFCON0_RXF0EN_POSN                                0x0
#define _RXFCON0_RXF0EN_POSITION                            0x0
#define _RXFCON0_RXF0EN_SIZE                                0x1
#define _RXFCON0_RXF0EN_LENGTH                              0x1
#define _RXFCON0_RXF0EN_MASK                                0x1
#define _RXFCON0_RXF1EN_POSN                                0x1
#define _RXFCON0_RXF1EN_POSITION                            0x1
#define _RXFCON0_RXF1EN_SIZE                                0x1
#define _RXFCON0_RXF1EN_LENGTH                              0x1
#define _RXFCON0_RXF1EN_MASK                                0x2
#define _RXFCON0_RXF2EN_POSN                                0x2
#define _RXFCON0_RXF2EN_POSITION                            0x2
#define _RXFCON0_RXF2EN_SIZE                                0x1
#define _RXFCON0_RXF2EN_LENGTH                              0x1
#define _RXFCON0_RXF2EN_MASK                                0x4
#define _RXFCON0_RXF3EN_POSN                                0x3
#define _RXFCON0_RXF3EN_POSITION                            0x3
#define _RXFCON0_RXF3EN_SIZE                                0x1
#define _RXFCON0_RXF3EN_LENGTH                              0x1
#define _RXFCON0_RXF3EN_MASK                                0x8
#define _RXFCON0_RXF4EN_POSN                                0x4
#define _RXFCON0_RXF4EN_POSITION                            0x4
#define _RXFCON0_RXF4EN_SIZE                                0x1
#define _RXFCON0_RXF4EN_LENGTH                              0x1
#define _RXFCON0_RXF4EN_MASK                                0x10
#define _RXFCON0_RXF5EN_POSN                                0x5
#define _RXFCON0_RXF5EN_POSITION                            0x5
#define _RXFCON0_RXF5EN_SIZE                                0x1
#define _RXFCON0_RXF5EN_LENGTH                              0x1
#define _RXFCON0_RXF5EN_MASK                                0x20
#define _RXFCON0_RXF6EN_POSN                                0x6
#define _RXFCON0_RXF6EN_POSITION                            0x6
#define _RXFCON0_RXF6EN_SIZE                                0x1
#define _RXFCON0_RXF6EN_LENGTH                              0x1
#define _RXFCON0_RXF6EN_MASK                                0x40
#define _RXFCON0_RXF7EN_POSN                                0x7
#define _RXFCON0_RXF7EN_POSITION                            0x7
#define _RXFCON0_RXF7EN_SIZE                                0x1
#define _RXFCON0_RXF7EN_LENGTH                              0x1
#define _RXFCON0_RXF7EN_MASK                                0x80

// Register: RXFCON1
#define RXFCON1 RXFCON1
extern volatile unsigned char           RXFCON1             __at(0xDD5);
#ifndef _LIB_BUILD
asm("RXFCON1 equ 0DD5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXF8EN                 :1;
        unsigned RXF9EN                 :1;
        unsigned RXF10EN                :1;
        unsigned RXF11EN                :1;
        unsigned RXF12EN                :1;
        unsigned RXF13EN                :1;
        unsigned RXF14EN                :1;
        unsigned RXF15EN                :1;
    };
} RXFCON1bits_t;
extern volatile RXFCON1bits_t RXFCON1bits __at(0xDD5);
// bitfield macros
#define _RXFCON1_RXF8EN_POSN                                0x0
#define _RXFCON1_RXF8EN_POSITION                            0x0
#define _RXFCON1_RXF8EN_SIZE                                0x1
#define _RXFCON1_RXF8EN_LENGTH                              0x1
#define _RXFCON1_RXF8EN_MASK                                0x1
#define _RXFCON1_RXF9EN_POSN                                0x1
#define _RXFCON1_RXF9EN_POSITION                            0x1
#define _RXFCON1_RXF9EN_SIZE                                0x1
#define _RXFCON1_RXF9EN_LENGTH                              0x1
#define _RXFCON1_RXF9EN_MASK                                0x2
#define _RXFCON1_RXF10EN_POSN                               0x2
#define _RXFCON1_RXF10EN_POSITION                           0x2
#define _RXFCON1_RXF10EN_SIZE                               0x1
#define _RXFCON1_RXF10EN_LENGTH                             0x1
#define _RXFCON1_RXF10EN_MASK                               0x4
#define _RXFCON1_RXF11EN_POSN                               0x3
#define _RXFCON1_RXF11EN_POSITION                           0x3
#define _RXFCON1_RXF11EN_SIZE                               0x1
#define _RXFCON1_RXF11EN_LENGTH                             0x1
#define _RXFCON1_RXF11EN_MASK                               0x8
#define _RXFCON1_RXF12EN_POSN                               0x4
#define _RXFCON1_RXF12EN_POSITION                           0x4
#define _RXFCON1_RXF12EN_SIZE                               0x1
#define _RXFCON1_RXF12EN_LENGTH                             0x1
#define _RXFCON1_RXF12EN_MASK                               0x10
#define _RXFCON1_RXF13EN_POSN                               0x5
#define _RXFCON1_RXF13EN_POSITION                           0x5
#define _RXFCON1_RXF13EN_SIZE                               0x1
#define _RXFCON1_RXF13EN_LENGTH                             0x1
#define _RXFCON1_RXF13EN_MASK                               0x20
#define _RXFCON1_RXF14EN_POSN                               0x6
#define _RXFCON1_RXF14EN_POSITION                           0x6
#define _RXFCON1_RXF14EN_SIZE                               0x1
#define _RXFCON1_RXF14EN_LENGTH                             0x1
#define _RXFCON1_RXF14EN_MASK                               0x40
#define _RXFCON1_RXF15EN_POSN                               0x7
#define _RXFCON1_RXF15EN_POSITION                           0x7
#define _RXFCON1_RXF15EN_SIZE                               0x1
#define _RXFCON1_RXF15EN_LENGTH                             0x1
#define _RXFCON1_RXF15EN_MASK                               0x80

// Register: SDFLC
#define SDFLC SDFLC
extern volatile unsigned char           SDFLC               __at(0xDD8);
#ifndef _LIB_BUILD
asm("SDFLC equ 0DD8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DFLC0                  :1;
        unsigned DFLC1                  :1;
        unsigned DFLC2                  :1;
        unsigned DFLC3                  :1;
        unsigned DFLC4                  :1;
    };
} SDFLCbits_t;
extern volatile SDFLCbits_t SDFLCbits __at(0xDD8);
// bitfield macros
#define _SDFLC_DFLC0_POSN                                   0x0
#define _SDFLC_DFLC0_POSITION                               0x0
#define _SDFLC_DFLC0_SIZE                                   0x1
#define _SDFLC_DFLC0_LENGTH                                 0x1
#define _SDFLC_DFLC0_MASK                                   0x1
#define _SDFLC_DFLC1_POSN                                   0x1
#define _SDFLC_DFLC1_POSITION                               0x1
#define _SDFLC_DFLC1_SIZE                                   0x1
#define _SDFLC_DFLC1_LENGTH                                 0x1
#define _SDFLC_DFLC1_MASK                                   0x2
#define _SDFLC_DFLC2_POSN                                   0x2
#define _SDFLC_DFLC2_POSITION                               0x2
#define _SDFLC_DFLC2_SIZE                                   0x1
#define _SDFLC_DFLC2_LENGTH                                 0x1
#define _SDFLC_DFLC2_MASK                                   0x4
#define _SDFLC_DFLC3_POSN                                   0x3
#define _SDFLC_DFLC3_POSITION                               0x3
#define _SDFLC_DFLC3_SIZE                                   0x1
#define _SDFLC_DFLC3_LENGTH                                 0x1
#define _SDFLC_DFLC3_MASK                                   0x8
#define _SDFLC_DFLC4_POSN                                   0x4
#define _SDFLC_DFLC4_POSITION                               0x4
#define _SDFLC_DFLC4_SIZE                                   0x1
#define _SDFLC_DFLC4_LENGTH                                 0x1
#define _SDFLC_DFLC4_MASK                                   0x10

// Register: RXFBCON0
#define RXFBCON0 RXFBCON0
extern volatile unsigned char           RXFBCON0            __at(0xDE0);
#ifndef _LIB_BUILD
asm("RXFBCON0 equ 0DE0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned F0BP_0                 :1;
        unsigned F0BP_1                 :1;
        unsigned F0BP_2                 :1;
        unsigned F0BP_3                 :1;
        unsigned F1BP_0                 :1;
        unsigned F1BP_1                 :1;
        unsigned F1BP_2                 :1;
        unsigned F1BP_3                 :1;
    };
    struct {
        unsigned F0BP_01                :1;
    };
} RXFBCON0bits_t;
extern volatile RXFBCON0bits_t RXFBCON0bits __at(0xDE0);
// bitfield macros
#define _RXFBCON0_F0BP_0_POSN                               0x0
#define _RXFBCON0_F0BP_0_POSITION                           0x0
#define _RXFBCON0_F0BP_0_SIZE                               0x1
#define _RXFBCON0_F0BP_0_LENGTH                             0x1
#define _RXFBCON0_F0BP_0_MASK                               0x1
#define _RXFBCON0_F0BP_1_POSN                               0x1
#define _RXFBCON0_F0BP_1_POSITION                           0x1
#define _RXFBCON0_F0BP_1_SIZE                               0x1
#define _RXFBCON0_F0BP_1_LENGTH                             0x1
#define _RXFBCON0_F0BP_1_MASK                               0x2
#define _RXFBCON0_F0BP_2_POSN                               0x2
#define _RXFBCON0_F0BP_2_POSITION                           0x2
#define _RXFBCON0_F0BP_2_SIZE                               0x1
#define _RXFBCON0_F0BP_2_LENGTH                             0x1
#define _RXFBCON0_F0BP_2_MASK                               0x4
#define _RXFBCON0_F0BP_3_POSN                               0x3
#define _RXFBCON0_F0BP_3_POSITION                           0x3
#define _RXFBCON0_F0BP_3_SIZE                               0x1
#define _RXFBCON0_F0BP_3_LENGTH                             0x1
#define _RXFBCON0_F0BP_3_MASK                               0x8
#define _RXFBCON0_F1BP_0_POSN                               0x4
#define _RXFBCON0_F1BP_0_POSITION                           0x4
#define _RXFBCON0_F1BP_0_SIZE                               0x1
#define _RXFBCON0_F1BP_0_LENGTH                             0x1
#define _RXFBCON0_F1BP_0_MASK                               0x10
#define _RXFBCON0_F1BP_1_POSN                               0x5
#define _RXFBCON0_F1BP_1_POSITION                           0x5
#define _RXFBCON0_F1BP_1_SIZE                               0x1
#define _RXFBCON0_F1BP_1_LENGTH                             0x1
#define _RXFBCON0_F1BP_1_MASK                               0x20
#define _RXFBCON0_F1BP_2_POSN                               0x6
#define _RXFBCON0_F1BP_2_POSITION                           0x6
#define _RXFBCON0_F1BP_2_SIZE                               0x1
#define _RXFBCON0_F1BP_2_LENGTH                             0x1
#define _RXFBCON0_F1BP_2_MASK                               0x40
#define _RXFBCON0_F1BP_3_POSN                               0x7
#define _RXFBCON0_F1BP_3_POSITION                           0x7
#define _RXFBCON0_F1BP_3_SIZE                               0x1
#define _RXFBCON0_F1BP_3_LENGTH                             0x1
#define _RXFBCON0_F1BP_3_MASK                               0x80
#define _RXFBCON0_F0BP_01_POSN                              0x0
#define _RXFBCON0_F0BP_01_POSITION                          0x0
#define _RXFBCON0_F0BP_01_SIZE                              0x1
#define _RXFBCON0_F0BP_01_LENGTH                            0x1
#define _RXFBCON0_F0BP_01_MASK                              0x1

// Register: RXFBCON1
#define RXFBCON1 RXFBCON1
extern volatile unsigned char           RXFBCON1            __at(0xDE1);
#ifndef _LIB_BUILD
asm("RXFBCON1 equ 0DE1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned F2BP_0                 :1;
        unsigned F2BP_1                 :1;
        unsigned F2BP_2                 :1;
        unsigned F2BP_3                 :1;
        unsigned F3BP_0                 :1;
        unsigned F3BP_1                 :1;
        unsigned F3BP_2                 :1;
        unsigned F3BP_3                 :1;
    };
    struct {
        unsigned F2BP_01                :1;
    };
} RXFBCON1bits_t;
extern volatile RXFBCON1bits_t RXFBCON1bits __at(0xDE1);
// bitfield macros
#define _RXFBCON1_F2BP_0_POSN                               0x0
#define _RXFBCON1_F2BP_0_POSITION                           0x0
#define _RXFBCON1_F2BP_0_SIZE                               0x1
#define _RXFBCON1_F2BP_0_LENGTH                             0x1
#define _RXFBCON1_F2BP_0_MASK                               0x1
#define _RXFBCON1_F2BP_1_POSN                               0x1
#define _RXFBCON1_F2BP_1_POSITION                           0x1
#define _RXFBCON1_F2BP_1_SIZE                               0x1
#define _RXFBCON1_F2BP_1_LENGTH                             0x1
#define _RXFBCON1_F2BP_1_MASK                               0x2
#define _RXFBCON1_F2BP_2_POSN                               0x2
#define _RXFBCON1_F2BP_2_POSITION                           0x2
#define _RXFBCON1_F2BP_2_SIZE                               0x1
#define _RXFBCON1_F2BP_2_LENGTH                             0x1
#define _RXFBCON1_F2BP_2_MASK                               0x4
#define _RXFBCON1_F2BP_3_POSN                               0x3
#define _RXFBCON1_F2BP_3_POSITION                           0x3
#define _RXFBCON1_F2BP_3_SIZE                               0x1
#define _RXFBCON1_F2BP_3_LENGTH                             0x1
#define _RXFBCON1_F2BP_3_MASK                               0x8
#define _RXFBCON1_F3BP_0_POSN                               0x4
#define _RXFBCON1_F3BP_0_POSITION                           0x4
#define _RXFBCON1_F3BP_0_SIZE                               0x1
#define _RXFBCON1_F3BP_0_LENGTH                             0x1
#define _RXFBCON1_F3BP_0_MASK                               0x10
#define _RXFBCON1_F3BP_1_POSN                               0x5
#define _RXFBCON1_F3BP_1_POSITION                           0x5
#define _RXFBCON1_F3BP_1_SIZE                               0x1
#define _RXFBCON1_F3BP_1_LENGTH                             0x1
#define _RXFBCON1_F3BP_1_MASK                               0x20
#define _RXFBCON1_F3BP_2_POSN                               0x6
#define _RXFBCON1_F3BP_2_POSITION                           0x6
#define _RXFBCON1_F3BP_2_SIZE                               0x1
#define _RXFBCON1_F3BP_2_LENGTH                             0x1
#define _RXFBCON1_F3BP_2_MASK                               0x40
#define _RXFBCON1_F3BP_3_POSN                               0x7
#define _RXFBCON1_F3BP_3_POSITION                           0x7
#define _RXFBCON1_F3BP_3_SIZE                               0x1
#define _RXFBCON1_F3BP_3_LENGTH                             0x1
#define _RXFBCON1_F3BP_3_MASK                               0x80
#define _RXFBCON1_F2BP_01_POSN                              0x0
#define _RXFBCON1_F2BP_01_POSITION                          0x0
#define _RXFBCON1_F2BP_01_SIZE                              0x1
#define _RXFBCON1_F2BP_01_LENGTH                            0x1
#define _RXFBCON1_F2BP_01_MASK                              0x1

// Register: RXFBCON2
#define RXFBCON2 RXFBCON2
extern volatile unsigned char           RXFBCON2            __at(0xDE2);
#ifndef _LIB_BUILD
asm("RXFBCON2 equ 0DE2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned F4BP_0                 :1;
        unsigned F4BP_1                 :1;
        unsigned F4BP_2                 :1;
        unsigned F4BP_3                 :1;
        unsigned F5BP_0                 :1;
        unsigned F5BP_1                 :1;
        unsigned F5BP_2                 :1;
        unsigned F5BP_3                 :1;
    };
    struct {
        unsigned F4BP_01                :1;
    };
} RXFBCON2bits_t;
extern volatile RXFBCON2bits_t RXFBCON2bits __at(0xDE2);
// bitfield macros
#define _RXFBCON2_F4BP_0_POSN                               0x0
#define _RXFBCON2_F4BP_0_POSITION                           0x0
#define _RXFBCON2_F4BP_0_SIZE                               0x1
#define _RXFBCON2_F4BP_0_LENGTH                             0x1
#define _RXFBCON2_F4BP_0_MASK                               0x1
#define _RXFBCON2_F4BP_1_POSN                               0x1
#define _RXFBCON2_F4BP_1_POSITION                           0x1
#define _RXFBCON2_F4BP_1_SIZE                               0x1
#define _RXFBCON2_F4BP_1_LENGTH                             0x1
#define _RXFBCON2_F4BP_1_MASK                               0x2
#define _RXFBCON2_F4BP_2_POSN                               0x2
#define _RXFBCON2_F4BP_2_POSITION                           0x2
#define _RXFBCON2_F4BP_2_SIZE                               0x1
#define _RXFBCON2_F4BP_2_LENGTH                             0x1
#define _RXFBCON2_F4BP_2_MASK                               0x4
#define _RXFBCON2_F4BP_3_POSN                               0x3
#define _RXFBCON2_F4BP_3_POSITION                           0x3
#define _RXFBCON2_F4BP_3_SIZE                               0x1
#define _RXFBCON2_F4BP_3_LENGTH                             0x1
#define _RXFBCON2_F4BP_3_MASK                               0x8
#define _RXFBCON2_F5BP_0_POSN                               0x4
#define _RXFBCON2_F5BP_0_POSITION                           0x4
#define _RXFBCON2_F5BP_0_SIZE                               0x1
#define _RXFBCON2_F5BP_0_LENGTH                             0x1
#define _RXFBCON2_F5BP_0_MASK                               0x10
#define _RXFBCON2_F5BP_1_POSN                               0x5
#define _RXFBCON2_F5BP_1_POSITION                           0x5
#define _RXFBCON2_F5BP_1_SIZE                               0x1
#define _RXFBCON2_F5BP_1_LENGTH                             0x1
#define _RXFBCON2_F5BP_1_MASK                               0x20
#define _RXFBCON2_F5BP_2_POSN                               0x6
#define _RXFBCON2_F5BP_2_POSITION                           0x6
#define _RXFBCON2_F5BP_2_SIZE                               0x1
#define _RXFBCON2_F5BP_2_LENGTH                             0x1
#define _RXFBCON2_F5BP_2_MASK                               0x40
#define _RXFBCON2_F5BP_3_POSN                               0x7
#define _RXFBCON2_F5BP_3_POSITION                           0x7
#define _RXFBCON2_F5BP_3_SIZE                               0x1
#define _RXFBCON2_F5BP_3_LENGTH                             0x1
#define _RXFBCON2_F5BP_3_MASK                               0x80
#define _RXFBCON2_F4BP_01_POSN                              0x0
#define _RXFBCON2_F4BP_01_POSITION                          0x0
#define _RXFBCON2_F4BP_01_SIZE                              0x1
#define _RXFBCON2_F4BP_01_LENGTH                            0x1
#define _RXFBCON2_F4BP_01_MASK                              0x1

// Register: RXFBCON3
#define RXFBCON3 RXFBCON3
extern volatile unsigned char           RXFBCON3            __at(0xDE3);
#ifndef _LIB_BUILD
asm("RXFBCON3 equ 0DE3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned F6BP_0                 :1;
        unsigned F6BP_1                 :1;
        unsigned F6BP_2                 :1;
        unsigned F6BP_3                 :1;
        unsigned F7BP_0                 :1;
        unsigned F7BP_1                 :1;
        unsigned F7BP_2                 :1;
        unsigned F7BP_3                 :1;
    };
    struct {
        unsigned F6BP_01                :1;
    };
} RXFBCON3bits_t;
extern volatile RXFBCON3bits_t RXFBCON3bits __at(0xDE3);
// bitfield macros
#define _RXFBCON3_F6BP_0_POSN                               0x0
#define _RXFBCON3_F6BP_0_POSITION                           0x0
#define _RXFBCON3_F6BP_0_SIZE                               0x1
#define _RXFBCON3_F6BP_0_LENGTH                             0x1
#define _RXFBCON3_F6BP_0_MASK                               0x1
#define _RXFBCON3_F6BP_1_POSN                               0x1
#define _RXFBCON3_F6BP_1_POSITION                           0x1
#define _RXFBCON3_F6BP_1_SIZE                               0x1
#define _RXFBCON3_F6BP_1_LENGTH                             0x1
#define _RXFBCON3_F6BP_1_MASK                               0x2
#define _RXFBCON3_F6BP_2_POSN                               0x2
#define _RXFBCON3_F6BP_2_POSITION                           0x2
#define _RXFBCON3_F6BP_2_SIZE                               0x1
#define _RXFBCON3_F6BP_2_LENGTH                             0x1
#define _RXFBCON3_F6BP_2_MASK                               0x4
#define _RXFBCON3_F6BP_3_POSN                               0x3
#define _RXFBCON3_F6BP_3_POSITION                           0x3
#define _RXFBCON3_F6BP_3_SIZE                               0x1
#define _RXFBCON3_F6BP_3_LENGTH                             0x1
#define _RXFBCON3_F6BP_3_MASK                               0x8
#define _RXFBCON3_F7BP_0_POSN                               0x4
#define _RXFBCON3_F7BP_0_POSITION                           0x4
#define _RXFBCON3_F7BP_0_SIZE                               0x1
#define _RXFBCON3_F7BP_0_LENGTH                             0x1
#define _RXFBCON3_F7BP_0_MASK                               0x10
#define _RXFBCON3_F7BP_1_POSN                               0x5
#define _RXFBCON3_F7BP_1_POSITION                           0x5
#define _RXFBCON3_F7BP_1_SIZE                               0x1
#define _RXFBCON3_F7BP_1_LENGTH                             0x1
#define _RXFBCON3_F7BP_1_MASK                               0x20
#define _RXFBCON3_F7BP_2_POSN                               0x6
#define _RXFBCON3_F7BP_2_POSITION                           0x6
#define _RXFBCON3_F7BP_2_SIZE                               0x1
#define _RXFBCON3_F7BP_2_LENGTH                             0x1
#define _RXFBCON3_F7BP_2_MASK                               0x40
#define _RXFBCON3_F7BP_3_POSN                               0x7
#define _RXFBCON3_F7BP_3_POSITION                           0x7
#define _RXFBCON3_F7BP_3_SIZE                               0x1
#define _RXFBCON3_F7BP_3_LENGTH                             0x1
#define _RXFBCON3_F7BP_3_MASK                               0x80
#define _RXFBCON3_F6BP_01_POSN                              0x0
#define _RXFBCON3_F6BP_01_POSITION                          0x0
#define _RXFBCON3_F6BP_01_SIZE                              0x1
#define _RXFBCON3_F6BP_01_LENGTH                            0x1
#define _RXFBCON3_F6BP_01_MASK                              0x1

// Register: RXFBCON4
#define RXFBCON4 RXFBCON4
extern volatile unsigned char           RXFBCON4            __at(0xDE4);
#ifndef _LIB_BUILD
asm("RXFBCON4 equ 0DE4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned F8BP_0                 :1;
        unsigned F8BP_1                 :1;
        unsigned F8BP_2                 :1;
        unsigned F8BP_3                 :1;
        unsigned F9BP_0                 :1;
        unsigned F9BP_1                 :1;
        unsigned F9BP_2                 :1;
        unsigned F9BP_3                 :1;
    };
    struct {
        unsigned F8BP_01                :1;
    };
} RXFBCON4bits_t;
extern volatile RXFBCON4bits_t RXFBCON4bits __at(0xDE4);
// bitfield macros
#define _RXFBCON4_F8BP_0_POSN                               0x0
#define _RXFBCON4_F8BP_0_POSITION                           0x0
#define _RXFBCON4_F8BP_0_SIZE                               0x1
#define _RXFBCON4_F8BP_0_LENGTH                             0x1
#define _RXFBCON4_F8BP_0_MASK                               0x1
#define _RXFBCON4_F8BP_1_POSN                               0x1
#define _RXFBCON4_F8BP_1_POSITION                           0x1
#define _RXFBCON4_F8BP_1_SIZE                               0x1
#define _RXFBCON4_F8BP_1_LENGTH                             0x1
#define _RXFBCON4_F8BP_1_MASK                               0x2
#define _RXFBCON4_F8BP_2_POSN                               0x2
#define _RXFBCON4_F8BP_2_POSITION                           0x2
#define _RXFBCON4_F8BP_2_SIZE                               0x1
#define _RXFBCON4_F8BP_2_LENGTH                             0x1
#define _RXFBCON4_F8BP_2_MASK                               0x4
#define _RXFBCON4_F8BP_3_POSN                               0x3
#define _RXFBCON4_F8BP_3_POSITION                           0x3
#define _RXFBCON4_F8BP_3_SIZE                               0x1
#define _RXFBCON4_F8BP_3_LENGTH                             0x1
#define _RXFBCON4_F8BP_3_MASK                               0x8
#define _RXFBCON4_F9BP_0_POSN                               0x4
#define _RXFBCON4_F9BP_0_POSITION                           0x4
#define _RXFBCON4_F9BP_0_SIZE                               0x1
#define _RXFBCON4_F9BP_0_LENGTH                             0x1
#define _RXFBCON4_F9BP_0_MASK                               0x10
#define _RXFBCON4_F9BP_1_POSN                               0x5
#define _RXFBCON4_F9BP_1_POSITION                           0x5
#define _RXFBCON4_F9BP_1_SIZE                               0x1
#define _RXFBCON4_F9BP_1_LENGTH                             0x1
#define _RXFBCON4_F9BP_1_MASK                               0x20
#define _RXFBCON4_F9BP_2_POSN                               0x6
#define _RXFBCON4_F9BP_2_POSITION                           0x6
#define _RXFBCON4_F9BP_2_SIZE                               0x1
#define _RXFBCON4_F9BP_2_LENGTH                             0x1
#define _RXFBCON4_F9BP_2_MASK                               0x40
#define _RXFBCON4_F9BP_3_POSN                               0x7
#define _RXFBCON4_F9BP_3_POSITION                           0x7
#define _RXFBCON4_F9BP_3_SIZE                               0x1
#define _RXFBCON4_F9BP_3_LENGTH                             0x1
#define _RXFBCON4_F9BP_3_MASK                               0x80
#define _RXFBCON4_F8BP_01_POSN                              0x0
#define _RXFBCON4_F8BP_01_POSITION                          0x0
#define _RXFBCON4_F8BP_01_SIZE                              0x1
#define _RXFBCON4_F8BP_01_LENGTH                            0x1
#define _RXFBCON4_F8BP_01_MASK                              0x1

// Register: RXFBCON5
#define RXFBCON5 RXFBCON5
extern volatile unsigned char           RXFBCON5            __at(0xDE5);
#ifndef _LIB_BUILD
asm("RXFBCON5 equ 0DE5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned F10BP_0                :1;
        unsigned F10BP_1                :1;
        unsigned F10BP_2                :1;
        unsigned F10BP_3                :1;
        unsigned F11BP_0                :1;
        unsigned F11BP_1                :1;
        unsigned F11BP_2                :1;
        unsigned F11BP_3                :1;
    };
    struct {
        unsigned F10BP_01               :1;
    };
} RXFBCON5bits_t;
extern volatile RXFBCON5bits_t RXFBCON5bits __at(0xDE5);
// bitfield macros
#define _RXFBCON5_F10BP_0_POSN                              0x0
#define _RXFBCON5_F10BP_0_POSITION                          0x0
#define _RXFBCON5_F10BP_0_SIZE                              0x1
#define _RXFBCON5_F10BP_0_LENGTH                            0x1
#define _RXFBCON5_F10BP_0_MASK                              0x1
#define _RXFBCON5_F10BP_1_POSN                              0x1
#define _RXFBCON5_F10BP_1_POSITION                          0x1
#define _RXFBCON5_F10BP_1_SIZE                              0x1
#define _RXFBCON5_F10BP_1_LENGTH                            0x1
#define _RXFBCON5_F10BP_1_MASK                              0x2
#define _RXFBCON5_F10BP_2_POSN                              0x2
#define _RXFBCON5_F10BP_2_POSITION                          0x2
#define _RXFBCON5_F10BP_2_SIZE                              0x1
#define _RXFBCON5_F10BP_2_LENGTH                            0x1
#define _RXFBCON5_F10BP_2_MASK                              0x4
#define _RXFBCON5_F10BP_3_POSN                              0x3
#define _RXFBCON5_F10BP_3_POSITION                          0x3
#define _RXFBCON5_F10BP_3_SIZE                              0x1
#define _RXFBCON5_F10BP_3_LENGTH                            0x1
#define _RXFBCON5_F10BP_3_MASK                              0x8
#define _RXFBCON5_F11BP_0_POSN                              0x4
#define _RXFBCON5_F11BP_0_POSITION                          0x4
#define _RXFBCON5_F11BP_0_SIZE                              0x1
#define _RXFBCON5_F11BP_0_LENGTH                            0x1
#define _RXFBCON5_F11BP_0_MASK                              0x10
#define _RXFBCON5_F11BP_1_POSN                              0x5
#define _RXFBCON5_F11BP_1_POSITION                          0x5
#define _RXFBCON5_F11BP_1_SIZE                              0x1
#define _RXFBCON5_F11BP_1_LENGTH                            0x1
#define _RXFBCON5_F11BP_1_MASK                              0x20
#define _RXFBCON5_F11BP_2_POSN                              0x6
#define _RXFBCON5_F11BP_2_POSITION                          0x6
#define _RXFBCON5_F11BP_2_SIZE                              0x1
#define _RXFBCON5_F11BP_2_LENGTH                            0x1
#define _RXFBCON5_F11BP_2_MASK                              0x40
#define _RXFBCON5_F11BP_3_POSN                              0x7
#define _RXFBCON5_F11BP_3_POSITION                          0x7
#define _RXFBCON5_F11BP_3_SIZE                              0x1
#define _RXFBCON5_F11BP_3_LENGTH                            0x1
#define _RXFBCON5_F11BP_3_MASK                              0x80
#define _RXFBCON5_F10BP_01_POSN                             0x0
#define _RXFBCON5_F10BP_01_POSITION                         0x0
#define _RXFBCON5_F10BP_01_SIZE                             0x1
#define _RXFBCON5_F10BP_01_LENGTH                           0x1
#define _RXFBCON5_F10BP_01_MASK                             0x1

// Register: RXFBCON6
#define RXFBCON6 RXFBCON6
extern volatile unsigned char           RXFBCON6            __at(0xDE6);
#ifndef _LIB_BUILD
asm("RXFBCON6 equ 0DE6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned F12BP_0                :1;
        unsigned F12BP_1                :1;
        unsigned F12BP_2                :1;
        unsigned F12BP_3                :1;
        unsigned F13BP_0                :1;
        unsigned F13BP_1                :1;
        unsigned F13BP_2                :1;
        unsigned F13BP_3                :1;
    };
    struct {
        unsigned F12BP_01               :1;
    };
} RXFBCON6bits_t;
extern volatile RXFBCON6bits_t RXFBCON6bits __at(0xDE6);
// bitfield macros
#define _RXFBCON6_F12BP_0_POSN                              0x0
#define _RXFBCON6_F12BP_0_POSITION                          0x0
#define _RXFBCON6_F12BP_0_SIZE                              0x1
#define _RXFBCON6_F12BP_0_LENGTH                            0x1
#define _RXFBCON6_F12BP_0_MASK                              0x1
#define _RXFBCON6_F12BP_1_POSN                              0x1
#define _RXFBCON6_F12BP_1_POSITION                          0x1
#define _RXFBCON6_F12BP_1_SIZE                              0x1
#define _RXFBCON6_F12BP_1_LENGTH                            0x1
#define _RXFBCON6_F12BP_1_MASK                              0x2
#define _RXFBCON6_F12BP_2_POSN                              0x2
#define _RXFBCON6_F12BP_2_POSITION                          0x2
#define _RXFBCON6_F12BP_2_SIZE                              0x1
#define _RXFBCON6_F12BP_2_LENGTH                            0x1
#define _RXFBCON6_F12BP_2_MASK                              0x4
#define _RXFBCON6_F12BP_3_POSN                              0x3
#define _RXFBCON6_F12BP_3_POSITION                          0x3
#define _RXFBCON6_F12BP_3_SIZE                              0x1
#define _RXFBCON6_F12BP_3_LENGTH                            0x1
#define _RXFBCON6_F12BP_3_MASK                              0x8
#define _RXFBCON6_F13BP_0_POSN                              0x4
#define _RXFBCON6_F13BP_0_POSITION                          0x4
#define _RXFBCON6_F13BP_0_SIZE                              0x1
#define _RXFBCON6_F13BP_0_LENGTH                            0x1
#define _RXFBCON6_F13BP_0_MASK                              0x10
#define _RXFBCON6_F13BP_1_POSN                              0x5
#define _RXFBCON6_F13BP_1_POSITION                          0x5
#define _RXFBCON6_F13BP_1_SIZE                              0x1
#define _RXFBCON6_F13BP_1_LENGTH                            0x1
#define _RXFBCON6_F13BP_1_MASK                              0x20
#define _RXFBCON6_F13BP_2_POSN                              0x6
#define _RXFBCON6_F13BP_2_POSITION                          0x6
#define _RXFBCON6_F13BP_2_SIZE                              0x1
#define _RXFBCON6_F13BP_2_LENGTH                            0x1
#define _RXFBCON6_F13BP_2_MASK                              0x40
#define _RXFBCON6_F13BP_3_POSN                              0x7
#define _RXFBCON6_F13BP_3_POSITION                          0x7
#define _RXFBCON6_F13BP_3_SIZE                              0x1
#define _RXFBCON6_F13BP_3_LENGTH                            0x1
#define _RXFBCON6_F13BP_3_MASK                              0x80
#define _RXFBCON6_F12BP_01_POSN                             0x0
#define _RXFBCON6_F12BP_01_POSITION                         0x0
#define _RXFBCON6_F12BP_01_SIZE                             0x1
#define _RXFBCON6_F12BP_01_LENGTH                           0x1
#define _RXFBCON6_F12BP_01_MASK                             0x1

// Register: RXFBCON7
#define RXFBCON7 RXFBCON7
extern volatile unsigned char           RXFBCON7            __at(0xDE7);
#ifndef _LIB_BUILD
asm("RXFBCON7 equ 0DE7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned F14BP_0                :1;
        unsigned F14BP_1                :1;
        unsigned F14BP_2                :1;
        unsigned F14BP_3                :1;
        unsigned F15BP_0                :1;
        unsigned F15BP_1                :1;
        unsigned F15BP_2                :1;
        unsigned F15BP_3                :1;
    };
    struct {
        unsigned F14BP_01               :1;
    };
} RXFBCON7bits_t;
extern volatile RXFBCON7bits_t RXFBCON7bits __at(0xDE7);
// bitfield macros
#define _RXFBCON7_F14BP_0_POSN                              0x0
#define _RXFBCON7_F14BP_0_POSITION                          0x0
#define _RXFBCON7_F14BP_0_SIZE                              0x1
#define _RXFBCON7_F14BP_0_LENGTH                            0x1
#define _RXFBCON7_F14BP_0_MASK                              0x1
#define _RXFBCON7_F14BP_1_POSN                              0x1
#define _RXFBCON7_F14BP_1_POSITION                          0x1
#define _RXFBCON7_F14BP_1_SIZE                              0x1
#define _RXFBCON7_F14BP_1_LENGTH                            0x1
#define _RXFBCON7_F14BP_1_MASK                              0x2
#define _RXFBCON7_F14BP_2_POSN                              0x2
#define _RXFBCON7_F14BP_2_POSITION                          0x2
#define _RXFBCON7_F14BP_2_SIZE                              0x1
#define _RXFBCON7_F14BP_2_LENGTH                            0x1
#define _RXFBCON7_F14BP_2_MASK                              0x4
#define _RXFBCON7_F14BP_3_POSN                              0x3
#define _RXFBCON7_F14BP_3_POSITION                          0x3
#define _RXFBCON7_F14BP_3_SIZE                              0x1
#define _RXFBCON7_F14BP_3_LENGTH                            0x1
#define _RXFBCON7_F14BP_3_MASK                              0x8
#define _RXFBCON7_F15BP_0_POSN                              0x4
#define _RXFBCON7_F15BP_0_POSITION                          0x4
#define _RXFBCON7_F15BP_0_SIZE                              0x1
#define _RXFBCON7_F15BP_0_LENGTH                            0x1
#define _RXFBCON7_F15BP_0_MASK                              0x10
#define _RXFBCON7_F15BP_1_POSN                              0x5
#define _RXFBCON7_F15BP_1_POSITION                          0x5
#define _RXFBCON7_F15BP_1_SIZE                              0x1
#define _RXFBCON7_F15BP_1_LENGTH                            0x1
#define _RXFBCON7_F15BP_1_MASK                              0x20
#define _RXFBCON7_F15BP_2_POSN                              0x6
#define _RXFBCON7_F15BP_2_POSITION                          0x6
#define _RXFBCON7_F15BP_2_SIZE                              0x1
#define _RXFBCON7_F15BP_2_LENGTH                            0x1
#define _RXFBCON7_F15BP_2_MASK                              0x40
#define _RXFBCON7_F15BP_3_POSN                              0x7
#define _RXFBCON7_F15BP_3_POSITION                          0x7
#define _RXFBCON7_F15BP_3_SIZE                              0x1
#define _RXFBCON7_F15BP_3_LENGTH                            0x1
#define _RXFBCON7_F15BP_3_MASK                              0x80
#define _RXFBCON7_F14BP_01_POSN                             0x0
#define _RXFBCON7_F14BP_01_POSITION                         0x0
#define _RXFBCON7_F14BP_01_SIZE                             0x1
#define _RXFBCON7_F14BP_01_LENGTH                           0x1
#define _RXFBCON7_F14BP_01_MASK                             0x1

// Register: MSEL0
#define MSEL0 MSEL0
extern volatile unsigned char           MSEL0               __at(0xDF0);
#ifndef _LIB_BUILD
asm("MSEL0 equ 0DF0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FIL0_0                 :1;
        unsigned FIL0_1                 :1;
        unsigned FIL1_0                 :1;
        unsigned FIL1_1                 :1;
        unsigned FIL2_0                 :1;
        unsigned FIL2_1                 :1;
        unsigned FIL3_0                 :1;
        unsigned FIL3_1                 :1;
    };
} MSEL0bits_t;
extern volatile MSEL0bits_t MSEL0bits __at(0xDF0);
// bitfield macros
#define _MSEL0_FIL0_0_POSN                                  0x0
#define _MSEL0_FIL0_0_POSITION                              0x0
#define _MSEL0_FIL0_0_SIZE                                  0x1
#define _MSEL0_FIL0_0_LENGTH                                0x1
#define _MSEL0_FIL0_0_MASK                                  0x1
#define _MSEL0_FIL0_1_POSN                                  0x1
#define _MSEL0_FIL0_1_POSITION                              0x1
#define _MSEL0_FIL0_1_SIZE                                  0x1
#define _MSEL0_FIL0_1_LENGTH                                0x1
#define _MSEL0_FIL0_1_MASK                                  0x2
#define _MSEL0_FIL1_0_POSN                                  0x2
#define _MSEL0_FIL1_0_POSITION                              0x2
#define _MSEL0_FIL1_0_SIZE                                  0x1
#define _MSEL0_FIL1_0_LENGTH                                0x1
#define _MSEL0_FIL1_0_MASK                                  0x4
#define _MSEL0_FIL1_1_POSN                                  0x3
#define _MSEL0_FIL1_1_POSITION                              0x3
#define _MSEL0_FIL1_1_SIZE                                  0x1
#define _MSEL0_FIL1_1_LENGTH                                0x1
#define _MSEL0_FIL1_1_MASK                                  0x8
#define _MSEL0_FIL2_0_POSN                                  0x4
#define _MSEL0_FIL2_0_POSITION                              0x4
#define _MSEL0_FIL2_0_SIZE                                  0x1
#define _MSEL0_FIL2_0_LENGTH                                0x1
#define _MSEL0_FIL2_0_MASK                                  0x10
#define _MSEL0_FIL2_1_POSN                                  0x5
#define _MSEL0_FIL2_1_POSITION                              0x5
#define _MSEL0_FIL2_1_SIZE                                  0x1
#define _MSEL0_FIL2_1_LENGTH                                0x1
#define _MSEL0_FIL2_1_MASK                                  0x20
#define _MSEL0_FIL3_0_POSN                                  0x6
#define _MSEL0_FIL3_0_POSITION                              0x6
#define _MSEL0_FIL3_0_SIZE                                  0x1
#define _MSEL0_FIL3_0_LENGTH                                0x1
#define _MSEL0_FIL3_0_MASK                                  0x40
#define _MSEL0_FIL3_1_POSN                                  0x7
#define _MSEL0_FIL3_1_POSITION                              0x7
#define _MSEL0_FIL3_1_SIZE                                  0x1
#define _MSEL0_FIL3_1_LENGTH                                0x1
#define _MSEL0_FIL3_1_MASK                                  0x80

// Register: MSEL1
#define MSEL1 MSEL1
extern volatile unsigned char           MSEL1               __at(0xDF1);
#ifndef _LIB_BUILD
asm("MSEL1 equ 0DF1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FIL4_0                 :1;
        unsigned FIL4_1                 :1;
        unsigned FIL5_0                 :1;
        unsigned FIL5_1                 :1;
        unsigned FIL6_0                 :1;
        unsigned FIL6_1                 :1;
        unsigned FIL7_0                 :1;
        unsigned FIL7_1                 :1;
    };
} MSEL1bits_t;
extern volatile MSEL1bits_t MSEL1bits __at(0xDF1);
// bitfield macros
#define _MSEL1_FIL4_0_POSN                                  0x0
#define _MSEL1_FIL4_0_POSITION                              0x0
#define _MSEL1_FIL4_0_SIZE                                  0x1
#define _MSEL1_FIL4_0_LENGTH                                0x1
#define _MSEL1_FIL4_0_MASK                                  0x1
#define _MSEL1_FIL4_1_POSN                                  0x1
#define _MSEL1_FIL4_1_POSITION                              0x1
#define _MSEL1_FIL4_1_SIZE                                  0x1
#define _MSEL1_FIL4_1_LENGTH                                0x1
#define _MSEL1_FIL4_1_MASK                                  0x2
#define _MSEL1_FIL5_0_POSN                                  0x2
#define _MSEL1_FIL5_0_POSITION                              0x2
#define _MSEL1_FIL5_0_SIZE                                  0x1
#define _MSEL1_FIL5_0_LENGTH                                0x1
#define _MSEL1_FIL5_0_MASK                                  0x4
#define _MSEL1_FIL5_1_POSN                                  0x3
#define _MSEL1_FIL5_1_POSITION                              0x3
#define _MSEL1_FIL5_1_SIZE                                  0x1
#define _MSEL1_FIL5_1_LENGTH                                0x1
#define _MSEL1_FIL5_1_MASK                                  0x8
#define _MSEL1_FIL6_0_POSN                                  0x4
#define _MSEL1_FIL6_0_POSITION                              0x4
#define _MSEL1_FIL6_0_SIZE                                  0x1
#define _MSEL1_FIL6_0_LENGTH                                0x1
#define _MSEL1_FIL6_0_MASK                                  0x10
#define _MSEL1_FIL6_1_POSN                                  0x5
#define _MSEL1_FIL6_1_POSITION                              0x5
#define _MSEL1_FIL6_1_SIZE                                  0x1
#define _MSEL1_FIL6_1_LENGTH                                0x1
#define _MSEL1_FIL6_1_MASK                                  0x20
#define _MSEL1_FIL7_0_POSN                                  0x6
#define _MSEL1_FIL7_0_POSITION                              0x6
#define _MSEL1_FIL7_0_SIZE                                  0x1
#define _MSEL1_FIL7_0_LENGTH                                0x1
#define _MSEL1_FIL7_0_MASK                                  0x40
#define _MSEL1_FIL7_1_POSN                                  0x7
#define _MSEL1_FIL7_1_POSITION                              0x7
#define _MSEL1_FIL7_1_SIZE                                  0x1
#define _MSEL1_FIL7_1_LENGTH                                0x1
#define _MSEL1_FIL7_1_MASK                                  0x80

// Register: MSEL2
#define MSEL2 MSEL2
extern volatile unsigned char           MSEL2               __at(0xDF2);
#ifndef _LIB_BUILD
asm("MSEL2 equ 0DF2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FIL8_0                 :1;
        unsigned FIL8_1                 :1;
        unsigned FIL9_0                 :1;
        unsigned FIL9_1                 :1;
        unsigned FIL10_0                :1;
        unsigned FIL10_1                :1;
        unsigned FIL11_0                :1;
        unsigned FIL11_1                :1;
    };
} MSEL2bits_t;
extern volatile MSEL2bits_t MSEL2bits __at(0xDF2);
// bitfield macros
#define _MSEL2_FIL8_0_POSN                                  0x0
#define _MSEL2_FIL8_0_POSITION                              0x0
#define _MSEL2_FIL8_0_SIZE                                  0x1
#define _MSEL2_FIL8_0_LENGTH                                0x1
#define _MSEL2_FIL8_0_MASK                                  0x1
#define _MSEL2_FIL8_1_POSN                                  0x1
#define _MSEL2_FIL8_1_POSITION                              0x1
#define _MSEL2_FIL8_1_SIZE                                  0x1
#define _MSEL2_FIL8_1_LENGTH                                0x1
#define _MSEL2_FIL8_1_MASK                                  0x2
#define _MSEL2_FIL9_0_POSN                                  0x2
#define _MSEL2_FIL9_0_POSITION                              0x2
#define _MSEL2_FIL9_0_SIZE                                  0x1
#define _MSEL2_FIL9_0_LENGTH                                0x1
#define _MSEL2_FIL9_0_MASK                                  0x4
#define _MSEL2_FIL9_1_POSN                                  0x3
#define _MSEL2_FIL9_1_POSITION                              0x3
#define _MSEL2_FIL9_1_SIZE                                  0x1
#define _MSEL2_FIL9_1_LENGTH                                0x1
#define _MSEL2_FIL9_1_MASK                                  0x8
#define _MSEL2_FIL10_0_POSN                                 0x4
#define _MSEL2_FIL10_0_POSITION                             0x4
#define _MSEL2_FIL10_0_SIZE                                 0x1
#define _MSEL2_FIL10_0_LENGTH                               0x1
#define _MSEL2_FIL10_0_MASK                                 0x10
#define _MSEL2_FIL10_1_POSN                                 0x5
#define _MSEL2_FIL10_1_POSITION                             0x5
#define _MSEL2_FIL10_1_SIZE                                 0x1
#define _MSEL2_FIL10_1_LENGTH                               0x1
#define _MSEL2_FIL10_1_MASK                                 0x20
#define _MSEL2_FIL11_0_POSN                                 0x6
#define _MSEL2_FIL11_0_POSITION                             0x6
#define _MSEL2_FIL11_0_SIZE                                 0x1
#define _MSEL2_FIL11_0_LENGTH                               0x1
#define _MSEL2_FIL11_0_MASK                                 0x40
#define _MSEL2_FIL11_1_POSN                                 0x7
#define _MSEL2_FIL11_1_POSITION                             0x7
#define _MSEL2_FIL11_1_SIZE                                 0x1
#define _MSEL2_FIL11_1_LENGTH                               0x1
#define _MSEL2_FIL11_1_MASK                                 0x80

// Register: MSEL3
#define MSEL3 MSEL3
extern volatile unsigned char           MSEL3               __at(0xDF3);
#ifndef _LIB_BUILD
asm("MSEL3 equ 0DF3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FIL12_0                :1;
        unsigned FIL12_1                :1;
        unsigned FIL13_0                :1;
        unsigned FIL13_1                :1;
        unsigned FIL14_0                :1;
        unsigned FIL14_1                :1;
        unsigned FIL15_0                :1;
        unsigned FIL15_1                :1;
    };
} MSEL3bits_t;
extern volatile MSEL3bits_t MSEL3bits __at(0xDF3);
// bitfield macros
#define _MSEL3_FIL12_0_POSN                                 0x0
#define _MSEL3_FIL12_0_POSITION                             0x0
#define _MSEL3_FIL12_0_SIZE                                 0x1
#define _MSEL3_FIL12_0_LENGTH                               0x1
#define _MSEL3_FIL12_0_MASK                                 0x1
#define _MSEL3_FIL12_1_POSN                                 0x1
#define _MSEL3_FIL12_1_POSITION                             0x1
#define _MSEL3_FIL12_1_SIZE                                 0x1
#define _MSEL3_FIL12_1_LENGTH                               0x1
#define _MSEL3_FIL12_1_MASK                                 0x2
#define _MSEL3_FIL13_0_POSN                                 0x2
#define _MSEL3_FIL13_0_POSITION                             0x2
#define _MSEL3_FIL13_0_SIZE                                 0x1
#define _MSEL3_FIL13_0_LENGTH                               0x1
#define _MSEL3_FIL13_0_MASK                                 0x4
#define _MSEL3_FIL13_1_POSN                                 0x3
#define _MSEL3_FIL13_1_POSITION                             0x3
#define _MSEL3_FIL13_1_SIZE                                 0x1
#define _MSEL3_FIL13_1_LENGTH                               0x1
#define _MSEL3_FIL13_1_MASK                                 0x8
#define _MSEL3_FIL14_0_POSN                                 0x4
#define _MSEL3_FIL14_0_POSITION                             0x4
#define _MSEL3_FIL14_0_SIZE                                 0x1
#define _MSEL3_FIL14_0_LENGTH                               0x1
#define _MSEL3_FIL14_0_MASK                                 0x10
#define _MSEL3_FIL14_1_POSN                                 0x5
#define _MSEL3_FIL14_1_POSITION                             0x5
#define _MSEL3_FIL14_1_SIZE                                 0x1
#define _MSEL3_FIL14_1_LENGTH                               0x1
#define _MSEL3_FIL14_1_MASK                                 0x20
#define _MSEL3_FIL15_0_POSN                                 0x6
#define _MSEL3_FIL15_0_POSITION                             0x6
#define _MSEL3_FIL15_0_SIZE                                 0x1
#define _MSEL3_FIL15_0_LENGTH                               0x1
#define _MSEL3_FIL15_0_MASK                                 0x40
#define _MSEL3_FIL15_1_POSN                                 0x7
#define _MSEL3_FIL15_1_POSITION                             0x7
#define _MSEL3_FIL15_1_SIZE                                 0x1
#define _MSEL3_FIL15_1_LENGTH                               0x1
#define _MSEL3_FIL15_1_MASK                                 0x80

// Register: BSEL0
#define BSEL0 BSEL0
extern volatile unsigned char           BSEL0               __at(0xDF8);
#ifndef _LIB_BUILD
asm("BSEL0 equ 0DF8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned B0TXEN                 :1;
        unsigned B1TXEN                 :1;
        unsigned B2TXEN                 :1;
        unsigned B3TXEN                 :1;
        unsigned B4TXEN                 :1;
        unsigned B5TXEN                 :1;
    };
} BSEL0bits_t;
extern volatile BSEL0bits_t BSEL0bits __at(0xDF8);
// bitfield macros
#define _BSEL0_B0TXEN_POSN                                  0x2
#define _BSEL0_B0TXEN_POSITION                              0x2
#define _BSEL0_B0TXEN_SIZE                                  0x1
#define _BSEL0_B0TXEN_LENGTH                                0x1
#define _BSEL0_B0TXEN_MASK                                  0x4
#define _BSEL0_B1TXEN_POSN                                  0x3
#define _BSEL0_B1TXEN_POSITION                              0x3
#define _BSEL0_B1TXEN_SIZE                                  0x1
#define _BSEL0_B1TXEN_LENGTH                                0x1
#define _BSEL0_B1TXEN_MASK                                  0x8
#define _BSEL0_B2TXEN_POSN                                  0x4
#define _BSEL0_B2TXEN_POSITION                              0x4
#define _BSEL0_B2TXEN_SIZE                                  0x1
#define _BSEL0_B2TXEN_LENGTH                                0x1
#define _BSEL0_B2TXEN_MASK                                  0x10
#define _BSEL0_B3TXEN_POSN                                  0x5
#define _BSEL0_B3TXEN_POSITION                              0x5
#define _BSEL0_B3TXEN_SIZE                                  0x1
#define _BSEL0_B3TXEN_LENGTH                                0x1
#define _BSEL0_B3TXEN_MASK                                  0x20
#define _BSEL0_B4TXEN_POSN                                  0x6
#define _BSEL0_B4TXEN_POSITION                              0x6
#define _BSEL0_B4TXEN_SIZE                                  0x1
#define _BSEL0_B4TXEN_LENGTH                                0x1
#define _BSEL0_B4TXEN_MASK                                  0x40
#define _BSEL0_B5TXEN_POSN                                  0x7
#define _BSEL0_B5TXEN_POSITION                              0x7
#define _BSEL0_B5TXEN_SIZE                                  0x1
#define _BSEL0_B5TXEN_LENGTH                                0x1
#define _BSEL0_B5TXEN_MASK                                  0x80

// Register: BIE0
#define BIE0 BIE0
extern volatile unsigned char           BIE0                __at(0xDFA);
#ifndef _LIB_BUILD
asm("BIE0 equ 0DFAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0IE                 :1;
        unsigned RXB1IE                 :1;
        unsigned B0IE                   :1;
        unsigned B1IE                   :1;
        unsigned B2IE                   :1;
        unsigned B3IE                   :1;
        unsigned B4IE                   :1;
        unsigned B5IE                   :1;
    };
    struct {
        unsigned DRXB0IE                :1;
        unsigned DRXB1IE                :1;
    };
} BIE0bits_t;
extern volatile BIE0bits_t BIE0bits __at(0xDFA);
// bitfield macros
#define _BIE0_RXB0IE_POSN                                   0x0
#define _BIE0_RXB0IE_POSITION                               0x0
#define _BIE0_RXB0IE_SIZE                                   0x1
#define _BIE0_RXB0IE_LENGTH                                 0x1
#define _BIE0_RXB0IE_MASK                                   0x1
#define _BIE0_RXB1IE_POSN                                   0x1
#define _BIE0_RXB1IE_POSITION                               0x1
#define _BIE0_RXB1IE_SIZE                                   0x1
#define _BIE0_RXB1IE_LENGTH                                 0x1
#define _BIE0_RXB1IE_MASK                                   0x2
#define _BIE0_B0IE_POSN                                     0x2
#define _BIE0_B0IE_POSITION                                 0x2
#define _BIE0_B0IE_SIZE                                     0x1
#define _BIE0_B0IE_LENGTH                                   0x1
#define _BIE0_B0IE_MASK                                     0x4
#define _BIE0_B1IE_POSN                                     0x3
#define _BIE0_B1IE_POSITION                                 0x3
#define _BIE0_B1IE_SIZE                                     0x1
#define _BIE0_B1IE_LENGTH                                   0x1
#define _BIE0_B1IE_MASK                                     0x8
#define _BIE0_B2IE_POSN                                     0x4
#define _BIE0_B2IE_POSITION                                 0x4
#define _BIE0_B2IE_SIZE                                     0x1
#define _BIE0_B2IE_LENGTH                                   0x1
#define _BIE0_B2IE_MASK                                     0x10
#define _BIE0_B3IE_POSN                                     0x5
#define _BIE0_B3IE_POSITION                                 0x5
#define _BIE0_B3IE_SIZE                                     0x1
#define _BIE0_B3IE_LENGTH                                   0x1
#define _BIE0_B3IE_MASK                                     0x20
#define _BIE0_B4IE_POSN                                     0x6
#define _BIE0_B4IE_POSITION                                 0x6
#define _BIE0_B4IE_SIZE                                     0x1
#define _BIE0_B4IE_LENGTH                                   0x1
#define _BIE0_B4IE_MASK                                     0x40
#define _BIE0_B5IE_POSN                                     0x7
#define _BIE0_B5IE_POSITION                                 0x7
#define _BIE0_B5IE_SIZE                                     0x1
#define _BIE0_B5IE_LENGTH                                   0x1
#define _BIE0_B5IE_MASK                                     0x80
#define _BIE0_DRXB0IE_POSN                                  0x0
#define _BIE0_DRXB0IE_POSITION                              0x0
#define _BIE0_DRXB0IE_SIZE                                  0x1
#define _BIE0_DRXB0IE_LENGTH                                0x1
#define _BIE0_DRXB0IE_MASK                                  0x1
#define _BIE0_DRXB1IE_POSN                                  0x1
#define _BIE0_DRXB1IE_POSITION                              0x1
#define _BIE0_DRXB1IE_SIZE                                  0x1
#define _BIE0_DRXB1IE_LENGTH                                0x1
#define _BIE0_DRXB1IE_MASK                                  0x2

// Register: TXBIE
#define TXBIE TXBIE
extern volatile unsigned char           TXBIE               __at(0xDFC);
#ifndef _LIB_BUILD
asm("TXBIE equ 0DFCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned TXB0IE                 :1;
        unsigned TXB1IE                 :1;
        unsigned TXB2IE                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned TX0IE                  :1;
        unsigned TX1IE                  :1;
        unsigned TX2IE                  :1;
    };
} TXBIEbits_t;
extern volatile TXBIEbits_t TXBIEbits __at(0xDFC);
// bitfield macros
#define _TXBIE_TXB0IE_POSN                                  0x2
#define _TXBIE_TXB0IE_POSITION                              0x2
#define _TXBIE_TXB0IE_SIZE                                  0x1
#define _TXBIE_TXB0IE_LENGTH                                0x1
#define _TXBIE_TXB0IE_MASK                                  0x4
#define _TXBIE_TXB1IE_POSN                                  0x3
#define _TXBIE_TXB1IE_POSITION                              0x3
#define _TXBIE_TXB1IE_SIZE                                  0x1
#define _TXBIE_TXB1IE_LENGTH                                0x1
#define _TXBIE_TXB1IE_MASK                                  0x8
#define _TXBIE_TXB2IE_POSN                                  0x4
#define _TXBIE_TXB2IE_POSITION                              0x4
#define _TXBIE_TXB2IE_SIZE                                  0x1
#define _TXBIE_TXB2IE_LENGTH                                0x1
#define _TXBIE_TXB2IE_MASK                                  0x10
#define _TXBIE_TX0IE_POSN                                   0x2
#define _TXBIE_TX0IE_POSITION                               0x2
#define _TXBIE_TX0IE_SIZE                                   0x1
#define _TXBIE_TX0IE_LENGTH                                 0x1
#define _TXBIE_TX0IE_MASK                                   0x4
#define _TXBIE_TX1IE_POSN                                   0x3
#define _TXBIE_TX1IE_POSITION                               0x3
#define _TXBIE_TX1IE_SIZE                                   0x1
#define _TXBIE_TX1IE_LENGTH                                 0x1
#define _TXBIE_TX1IE_MASK                                   0x8
#define _TXBIE_TX2IE_POSN                                   0x4
#define _TXBIE_TX2IE_POSITION                               0x4
#define _TXBIE_TX2IE_SIZE                                   0x1
#define _TXBIE_TX2IE_LENGTH                                 0x1
#define _TXBIE_TX2IE_MASK                                   0x10

// Register: B0CON
#define B0CON B0CON
extern volatile unsigned char           B0CON               __at(0xE20);
#ifndef _LIB_BUILD
asm("B0CON equ 0E20h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FILHIT0_TXPRI0         :1;
        unsigned FILHIT1_TXPRI1         :1;
        unsigned FILHIT2_RTREN          :1;
        unsigned FILHIT3_TXREQ          :1;
        unsigned FILHIT4_TXERR          :1;
        unsigned RXRTRRO_TXLARB         :1;
        unsigned RXM1_TXABT             :1;
        unsigned RXFUL_TXBIF            :1;
    };
    struct {
        unsigned FILHIT0                :1;
        unsigned FILHIT1                :1;
        unsigned FILHIT2                :1;
        unsigned FILHIT3                :1;
        unsigned FILHIT4                :1;
        unsigned RTRRO                  :1;
        unsigned RXM1                   :1;
        unsigned RXFUL                  :1;
    };
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned RTREN                  :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
        unsigned TXBIF                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned RTRRO_TXLARB           :1;
    };
    struct {
        unsigned B0FILHIT0              :1;
        unsigned B0FILHIT1              :1;
        unsigned B0FILHIT2              :1;
        unsigned B0FILHIT3              :1;
        unsigned B0FILHIT4              :1;
        unsigned B0RTRRO                :1;
        unsigned B0RXM1                 :1;
        unsigned B0RXFUL                :1;
    };
    struct {
        unsigned B0TXPRI0               :1;
        unsigned B0TXPRI1               :1;
        unsigned B0RTREN                :1;
        unsigned B0TXREQ                :1;
        unsigned B0TXERR                :1;
        unsigned B0TXLARB               :1;
        unsigned B0TXABT                :1;
        unsigned B0TXB3IF               :1;
    };
} B0CONbits_t;
extern volatile B0CONbits_t B0CONbits __at(0xE20);
// bitfield macros
#define _B0CON_FILHIT0_TXPRI0_POSN                          0x0
#define _B0CON_FILHIT0_TXPRI0_POSITION                      0x0
#define _B0CON_FILHIT0_TXPRI0_SIZE                          0x1
#define _B0CON_FILHIT0_TXPRI0_LENGTH                        0x1
#define _B0CON_FILHIT0_TXPRI0_MASK                          0x1
#define _B0CON_FILHIT1_TXPRI1_POSN                          0x1
#define _B0CON_FILHIT1_TXPRI1_POSITION                      0x1
#define _B0CON_FILHIT1_TXPRI1_SIZE                          0x1
#define _B0CON_FILHIT1_TXPRI1_LENGTH                        0x1
#define _B0CON_FILHIT1_TXPRI1_MASK                          0x2
#define _B0CON_FILHIT2_RTREN_POSN                           0x2
#define _B0CON_FILHIT2_RTREN_POSITION                       0x2
#define _B0CON_FILHIT2_RTREN_SIZE                           0x1
#define _B0CON_FILHIT2_RTREN_LENGTH                         0x1
#define _B0CON_FILHIT2_RTREN_MASK                           0x4
#define _B0CON_FILHIT3_TXREQ_POSN                           0x3
#define _B0CON_FILHIT3_TXREQ_POSITION                       0x3
#define _B0CON_FILHIT3_TXREQ_SIZE                           0x1
#define _B0CON_FILHIT3_TXREQ_LENGTH                         0x1
#define _B0CON_FILHIT3_TXREQ_MASK                           0x8
#define _B0CON_FILHIT4_TXERR_POSN                           0x4
#define _B0CON_FILHIT4_TXERR_POSITION                       0x4
#define _B0CON_FILHIT4_TXERR_SIZE                           0x1
#define _B0CON_FILHIT4_TXERR_LENGTH                         0x1
#define _B0CON_FILHIT4_TXERR_MASK                           0x10
#define _B0CON_RXRTRRO_TXLARB_POSN                          0x5
#define _B0CON_RXRTRRO_TXLARB_POSITION                      0x5
#define _B0CON_RXRTRRO_TXLARB_SIZE                          0x1
#define _B0CON_RXRTRRO_TXLARB_LENGTH                        0x1
#define _B0CON_RXRTRRO_TXLARB_MASK                          0x20
#define _B0CON_RXM1_TXABT_POSN                              0x6
#define _B0CON_RXM1_TXABT_POSITION                          0x6
#define _B0CON_RXM1_TXABT_SIZE                              0x1
#define _B0CON_RXM1_TXABT_LENGTH                            0x1
#define _B0CON_RXM1_TXABT_MASK                              0x40
#define _B0CON_RXFUL_TXBIF_POSN                             0x7
#define _B0CON_RXFUL_TXBIF_POSITION                         0x7
#define _B0CON_RXFUL_TXBIF_SIZE                             0x1
#define _B0CON_RXFUL_TXBIF_LENGTH                           0x1
#define _B0CON_RXFUL_TXBIF_MASK                             0x80
#define _B0CON_FILHIT0_POSN                                 0x0
#define _B0CON_FILHIT0_POSITION                             0x0
#define _B0CON_FILHIT0_SIZE                                 0x1
#define _B0CON_FILHIT0_LENGTH                               0x1
#define _B0CON_FILHIT0_MASK                                 0x1
#define _B0CON_FILHIT1_POSN                                 0x1
#define _B0CON_FILHIT1_POSITION                             0x1
#define _B0CON_FILHIT1_SIZE                                 0x1
#define _B0CON_FILHIT1_LENGTH                               0x1
#define _B0CON_FILHIT1_MASK                                 0x2
#define _B0CON_FILHIT2_POSN                                 0x2
#define _B0CON_FILHIT2_POSITION                             0x2
#define _B0CON_FILHIT2_SIZE                                 0x1
#define _B0CON_FILHIT2_LENGTH                               0x1
#define _B0CON_FILHIT2_MASK                                 0x4
#define _B0CON_FILHIT3_POSN                                 0x3
#define _B0CON_FILHIT3_POSITION                             0x3
#define _B0CON_FILHIT3_SIZE                                 0x1
#define _B0CON_FILHIT3_LENGTH                               0x1
#define _B0CON_FILHIT3_MASK                                 0x8
#define _B0CON_FILHIT4_POSN                                 0x4
#define _B0CON_FILHIT4_POSITION                             0x4
#define _B0CON_FILHIT4_SIZE                                 0x1
#define _B0CON_FILHIT4_LENGTH                               0x1
#define _B0CON_FILHIT4_MASK                                 0x10
#define _B0CON_RTRRO_POSN                                   0x5
#define _B0CON_RTRRO_POSITION                               0x5
#define _B0CON_RTRRO_SIZE                                   0x1
#define _B0CON_RTRRO_LENGTH                                 0x1
#define _B0CON_RTRRO_MASK                                   0x20
#define _B0CON_RXM1_POSN                                    0x6
#define _B0CON_RXM1_POSITION                                0x6
#define _B0CON_RXM1_SIZE                                    0x1
#define _B0CON_RXM1_LENGTH                                  0x1
#define _B0CON_RXM1_MASK                                    0x40
#define _B0CON_RXFUL_POSN                                   0x7
#define _B0CON_RXFUL_POSITION                               0x7
#define _B0CON_RXFUL_SIZE                                   0x1
#define _B0CON_RXFUL_LENGTH                                 0x1
#define _B0CON_RXFUL_MASK                                   0x80
#define _B0CON_TXPRI0_POSN                                  0x0
#define _B0CON_TXPRI0_POSITION                              0x0
#define _B0CON_TXPRI0_SIZE                                  0x1
#define _B0CON_TXPRI0_LENGTH                                0x1
#define _B0CON_TXPRI0_MASK                                  0x1
#define _B0CON_TXPRI1_POSN                                  0x1
#define _B0CON_TXPRI1_POSITION                              0x1
#define _B0CON_TXPRI1_SIZE                                  0x1
#define _B0CON_TXPRI1_LENGTH                                0x1
#define _B0CON_TXPRI1_MASK                                  0x2
#define _B0CON_RTREN_POSN                                   0x2
#define _B0CON_RTREN_POSITION                               0x2
#define _B0CON_RTREN_SIZE                                   0x1
#define _B0CON_RTREN_LENGTH                                 0x1
#define _B0CON_RTREN_MASK                                   0x4
#define _B0CON_TXREQ_POSN                                   0x3
#define _B0CON_TXREQ_POSITION                               0x3
#define _B0CON_TXREQ_SIZE                                   0x1
#define _B0CON_TXREQ_LENGTH                                 0x1
#define _B0CON_TXREQ_MASK                                   0x8
#define _B0CON_TXERR_POSN                                   0x4
#define _B0CON_TXERR_POSITION                               0x4
#define _B0CON_TXERR_SIZE                                   0x1
#define _B0CON_TXERR_LENGTH                                 0x1
#define _B0CON_TXERR_MASK                                   0x10
#define _B0CON_TXLARB_POSN                                  0x5
#define _B0CON_TXLARB_POSITION                              0x5
#define _B0CON_TXLARB_SIZE                                  0x1
#define _B0CON_TXLARB_LENGTH                                0x1
#define _B0CON_TXLARB_MASK                                  0x20
#define _B0CON_TXABT_POSN                                   0x6
#define _B0CON_TXABT_POSITION                               0x6
#define _B0CON_TXABT_SIZE                                   0x1
#define _B0CON_TXABT_LENGTH                                 0x1
#define _B0CON_TXABT_MASK                                   0x40
#define _B0CON_TXBIF_POSN                                   0x7
#define _B0CON_TXBIF_POSITION                               0x7
#define _B0CON_TXBIF_SIZE                                   0x1
#define _B0CON_TXBIF_LENGTH                                 0x1
#define _B0CON_TXBIF_MASK                                   0x80
#define _B0CON_RTRRO_TXLARB_POSN                            0x5
#define _B0CON_RTRRO_TXLARB_POSITION                        0x5
#define _B0CON_RTRRO_TXLARB_SIZE                            0x1
#define _B0CON_RTRRO_TXLARB_LENGTH                          0x1
#define _B0CON_RTRRO_TXLARB_MASK                            0x20
#define _B0CON_B0FILHIT0_POSN                               0x0
#define _B0CON_B0FILHIT0_POSITION                           0x0
#define _B0CON_B0FILHIT0_SIZE                               0x1
#define _B0CON_B0FILHIT0_LENGTH                             0x1
#define _B0CON_B0FILHIT0_MASK                               0x1
#define _B0CON_B0FILHIT1_POSN                               0x1
#define _B0CON_B0FILHIT1_POSITION                           0x1
#define _B0CON_B0FILHIT1_SIZE                               0x1
#define _B0CON_B0FILHIT1_LENGTH                             0x1
#define _B0CON_B0FILHIT1_MASK                               0x2
#define _B0CON_B0FILHIT2_POSN                               0x2
#define _B0CON_B0FILHIT2_POSITION                           0x2
#define _B0CON_B0FILHIT2_SIZE                               0x1
#define _B0CON_B0FILHIT2_LENGTH                             0x1
#define _B0CON_B0FILHIT2_MASK                               0x4
#define _B0CON_B0FILHIT3_POSN                               0x3
#define _B0CON_B0FILHIT3_POSITION                           0x3
#define _B0CON_B0FILHIT3_SIZE                               0x1
#define _B0CON_B0FILHIT3_LENGTH                             0x1
#define _B0CON_B0FILHIT3_MASK                               0x8
#define _B0CON_B0FILHIT4_POSN                               0x4
#define _B0CON_B0FILHIT4_POSITION                           0x4
#define _B0CON_B0FILHIT4_SIZE                               0x1
#define _B0CON_B0FILHIT4_LENGTH                             0x1
#define _B0CON_B0FILHIT4_MASK                               0x10
#define _B0CON_B0RTRRO_POSN                                 0x5
#define _B0CON_B0RTRRO_POSITION                             0x5
#define _B0CON_B0RTRRO_SIZE                                 0x1
#define _B0CON_B0RTRRO_LENGTH                               0x1
#define _B0CON_B0RTRRO_MASK                                 0x20
#define _B0CON_B0RXM1_POSN                                  0x6
#define _B0CON_B0RXM1_POSITION                              0x6
#define _B0CON_B0RXM1_SIZE                                  0x1
#define _B0CON_B0RXM1_LENGTH                                0x1
#define _B0CON_B0RXM1_MASK                                  0x40
#define _B0CON_B0RXFUL_POSN                                 0x7
#define _B0CON_B0RXFUL_POSITION                             0x7
#define _B0CON_B0RXFUL_SIZE                                 0x1
#define _B0CON_B0RXFUL_LENGTH                               0x1
#define _B0CON_B0RXFUL_MASK                                 0x80
#define _B0CON_B0TXPRI0_POSN                                0x0
#define _B0CON_B0TXPRI0_POSITION                            0x0
#define _B0CON_B0TXPRI0_SIZE                                0x1
#define _B0CON_B0TXPRI0_LENGTH                              0x1
#define _B0CON_B0TXPRI0_MASK                                0x1
#define _B0CON_B0TXPRI1_POSN                                0x1
#define _B0CON_B0TXPRI1_POSITION                            0x1
#define _B0CON_B0TXPRI1_SIZE                                0x1
#define _B0CON_B0TXPRI1_LENGTH                              0x1
#define _B0CON_B0TXPRI1_MASK                                0x2
#define _B0CON_B0RTREN_POSN                                 0x2
#define _B0CON_B0RTREN_POSITION                             0x2
#define _B0CON_B0RTREN_SIZE                                 0x1
#define _B0CON_B0RTREN_LENGTH                               0x1
#define _B0CON_B0RTREN_MASK                                 0x4
#define _B0CON_B0TXREQ_POSN                                 0x3
#define _B0CON_B0TXREQ_POSITION                             0x3
#define _B0CON_B0TXREQ_SIZE                                 0x1
#define _B0CON_B0TXREQ_LENGTH                               0x1
#define _B0CON_B0TXREQ_MASK                                 0x8
#define _B0CON_B0TXERR_POSN                                 0x4
#define _B0CON_B0TXERR_POSITION                             0x4
#define _B0CON_B0TXERR_SIZE                                 0x1
#define _B0CON_B0TXERR_LENGTH                               0x1
#define _B0CON_B0TXERR_MASK                                 0x10
#define _B0CON_B0TXLARB_POSN                                0x5
#define _B0CON_B0TXLARB_POSITION                            0x5
#define _B0CON_B0TXLARB_SIZE                                0x1
#define _B0CON_B0TXLARB_LENGTH                              0x1
#define _B0CON_B0TXLARB_MASK                                0x20
#define _B0CON_B0TXABT_POSN                                 0x6
#define _B0CON_B0TXABT_POSITION                             0x6
#define _B0CON_B0TXABT_SIZE                                 0x1
#define _B0CON_B0TXABT_LENGTH                               0x1
#define _B0CON_B0TXABT_MASK                                 0x40
#define _B0CON_B0TXB3IF_POSN                                0x7
#define _B0CON_B0TXB3IF_POSITION                            0x7
#define _B0CON_B0TXB3IF_SIZE                                0x1
#define _B0CON_B0TXB3IF_LENGTH                              0x1
#define _B0CON_B0TXB3IF_MASK                                0x80

// Register: B0SIDH
#define B0SIDH B0SIDH
extern volatile unsigned char           B0SIDH              __at(0xE21);
#ifndef _LIB_BUILD
asm("B0SIDH equ 0E21h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned B0SID3                 :1;
        unsigned B0SID4                 :1;
        unsigned B0SID5                 :1;
        unsigned B0SID6                 :1;
        unsigned B0SID7                 :1;
        unsigned B0SID8                 :1;
        unsigned B0SID9                 :1;
        unsigned B0SID10                :1;
    };
} B0SIDHbits_t;
extern volatile B0SIDHbits_t B0SIDHbits __at(0xE21);
// bitfield macros
#define _B0SIDH_SID3_POSN                                   0x0
#define _B0SIDH_SID3_POSITION                               0x0
#define _B0SIDH_SID3_SIZE                                   0x1
#define _B0SIDH_SID3_LENGTH                                 0x1
#define _B0SIDH_SID3_MASK                                   0x1
#define _B0SIDH_SID4_POSN                                   0x1
#define _B0SIDH_SID4_POSITION                               0x1
#define _B0SIDH_SID4_SIZE                                   0x1
#define _B0SIDH_SID4_LENGTH                                 0x1
#define _B0SIDH_SID4_MASK                                   0x2
#define _B0SIDH_SID5_POSN                                   0x2
#define _B0SIDH_SID5_POSITION                               0x2
#define _B0SIDH_SID5_SIZE                                   0x1
#define _B0SIDH_SID5_LENGTH                                 0x1
#define _B0SIDH_SID5_MASK                                   0x4
#define _B0SIDH_SID6_POSN                                   0x3
#define _B0SIDH_SID6_POSITION                               0x3
#define _B0SIDH_SID6_SIZE                                   0x1
#define _B0SIDH_SID6_LENGTH                                 0x1
#define _B0SIDH_SID6_MASK                                   0x8
#define _B0SIDH_SID7_POSN                                   0x4
#define _B0SIDH_SID7_POSITION                               0x4
#define _B0SIDH_SID7_SIZE                                   0x1
#define _B0SIDH_SID7_LENGTH                                 0x1
#define _B0SIDH_SID7_MASK                                   0x10
#define _B0SIDH_SID8_POSN                                   0x5
#define _B0SIDH_SID8_POSITION                               0x5
#define _B0SIDH_SID8_SIZE                                   0x1
#define _B0SIDH_SID8_LENGTH                                 0x1
#define _B0SIDH_SID8_MASK                                   0x20
#define _B0SIDH_SID9_POSN                                   0x6
#define _B0SIDH_SID9_POSITION                               0x6
#define _B0SIDH_SID9_SIZE                                   0x1
#define _B0SIDH_SID9_LENGTH                                 0x1
#define _B0SIDH_SID9_MASK                                   0x40
#define _B0SIDH_SID10_POSN                                  0x7
#define _B0SIDH_SID10_POSITION                              0x7
#define _B0SIDH_SID10_SIZE                                  0x1
#define _B0SIDH_SID10_LENGTH                                0x1
#define _B0SIDH_SID10_MASK                                  0x80
#define _B0SIDH_B0SID3_POSN                                 0x0
#define _B0SIDH_B0SID3_POSITION                             0x0
#define _B0SIDH_B0SID3_SIZE                                 0x1
#define _B0SIDH_B0SID3_LENGTH                               0x1
#define _B0SIDH_B0SID3_MASK                                 0x1
#define _B0SIDH_B0SID4_POSN                                 0x1
#define _B0SIDH_B0SID4_POSITION                             0x1
#define _B0SIDH_B0SID4_SIZE                                 0x1
#define _B0SIDH_B0SID4_LENGTH                               0x1
#define _B0SIDH_B0SID4_MASK                                 0x2
#define _B0SIDH_B0SID5_POSN                                 0x2
#define _B0SIDH_B0SID5_POSITION                             0x2
#define _B0SIDH_B0SID5_SIZE                                 0x1
#define _B0SIDH_B0SID5_LENGTH                               0x1
#define _B0SIDH_B0SID5_MASK                                 0x4
#define _B0SIDH_B0SID6_POSN                                 0x3
#define _B0SIDH_B0SID6_POSITION                             0x3
#define _B0SIDH_B0SID6_SIZE                                 0x1
#define _B0SIDH_B0SID6_LENGTH                               0x1
#define _B0SIDH_B0SID6_MASK                                 0x8
#define _B0SIDH_B0SID7_POSN                                 0x4
#define _B0SIDH_B0SID7_POSITION                             0x4
#define _B0SIDH_B0SID7_SIZE                                 0x1
#define _B0SIDH_B0SID7_LENGTH                               0x1
#define _B0SIDH_B0SID7_MASK                                 0x10
#define _B0SIDH_B0SID8_POSN                                 0x5
#define _B0SIDH_B0SID8_POSITION                             0x5
#define _B0SIDH_B0SID8_SIZE                                 0x1
#define _B0SIDH_B0SID8_LENGTH                               0x1
#define _B0SIDH_B0SID8_MASK                                 0x20
#define _B0SIDH_B0SID9_POSN                                 0x6
#define _B0SIDH_B0SID9_POSITION                             0x6
#define _B0SIDH_B0SID9_SIZE                                 0x1
#define _B0SIDH_B0SID9_LENGTH                               0x1
#define _B0SIDH_B0SID9_MASK                                 0x40
#define _B0SIDH_B0SID10_POSN                                0x7
#define _B0SIDH_B0SID10_POSITION                            0x7
#define _B0SIDH_B0SID10_SIZE                                0x1
#define _B0SIDH_B0SID10_LENGTH                              0x1
#define _B0SIDH_B0SID10_MASK                                0x80

// Register: B0SIDL
#define B0SIDL B0SIDL
extern volatile unsigned char           B0SIDL              __at(0xE22);
#ifndef _LIB_BUILD
asm("B0SIDL equ 0E22h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXID                   :1;
        unsigned SRR                    :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned B0EID16                :1;
        unsigned B0EID17                :1;
        unsigned                        :1;
        unsigned B0EXID                 :1;
        unsigned B0SRR                  :1;
        unsigned B0SID0                 :1;
        unsigned B0SID1                 :1;
        unsigned B0SID2                 :1;
    };
} B0SIDLbits_t;
extern volatile B0SIDLbits_t B0SIDLbits __at(0xE22);
// bitfield macros
#define _B0SIDL_EID16_POSN                                  0x0
#define _B0SIDL_EID16_POSITION                              0x0
#define _B0SIDL_EID16_SIZE                                  0x1
#define _B0SIDL_EID16_LENGTH                                0x1
#define _B0SIDL_EID16_MASK                                  0x1
#define _B0SIDL_EID17_POSN                                  0x1
#define _B0SIDL_EID17_POSITION                              0x1
#define _B0SIDL_EID17_SIZE                                  0x1
#define _B0SIDL_EID17_LENGTH                                0x1
#define _B0SIDL_EID17_MASK                                  0x2
#define _B0SIDL_EXID_POSN                                   0x3
#define _B0SIDL_EXID_POSITION                               0x3
#define _B0SIDL_EXID_SIZE                                   0x1
#define _B0SIDL_EXID_LENGTH                                 0x1
#define _B0SIDL_EXID_MASK                                   0x8
#define _B0SIDL_SRR_POSN                                    0x4
#define _B0SIDL_SRR_POSITION                                0x4
#define _B0SIDL_SRR_SIZE                                    0x1
#define _B0SIDL_SRR_LENGTH                                  0x1
#define _B0SIDL_SRR_MASK                                    0x10
#define _B0SIDL_SID0_POSN                                   0x5
#define _B0SIDL_SID0_POSITION                               0x5
#define _B0SIDL_SID0_SIZE                                   0x1
#define _B0SIDL_SID0_LENGTH                                 0x1
#define _B0SIDL_SID0_MASK                                   0x20
#define _B0SIDL_SID1_POSN                                   0x6
#define _B0SIDL_SID1_POSITION                               0x6
#define _B0SIDL_SID1_SIZE                                   0x1
#define _B0SIDL_SID1_LENGTH                                 0x1
#define _B0SIDL_SID1_MASK                                   0x40
#define _B0SIDL_SID2_POSN                                   0x7
#define _B0SIDL_SID2_POSITION                               0x7
#define _B0SIDL_SID2_SIZE                                   0x1
#define _B0SIDL_SID2_LENGTH                                 0x1
#define _B0SIDL_SID2_MASK                                   0x80
#define _B0SIDL_EXIDE_POSN                                  0x3
#define _B0SIDL_EXIDE_POSITION                              0x3
#define _B0SIDL_EXIDE_SIZE                                  0x1
#define _B0SIDL_EXIDE_LENGTH                                0x1
#define _B0SIDL_EXIDE_MASK                                  0x8
#define _B0SIDL_B0EID16_POSN                                0x0
#define _B0SIDL_B0EID16_POSITION                            0x0
#define _B0SIDL_B0EID16_SIZE                                0x1
#define _B0SIDL_B0EID16_LENGTH                              0x1
#define _B0SIDL_B0EID16_MASK                                0x1
#define _B0SIDL_B0EID17_POSN                                0x1
#define _B0SIDL_B0EID17_POSITION                            0x1
#define _B0SIDL_B0EID17_SIZE                                0x1
#define _B0SIDL_B0EID17_LENGTH                              0x1
#define _B0SIDL_B0EID17_MASK                                0x2
#define _B0SIDL_B0EXID_POSN                                 0x3
#define _B0SIDL_B0EXID_POSITION                             0x3
#define _B0SIDL_B0EXID_SIZE                                 0x1
#define _B0SIDL_B0EXID_LENGTH                               0x1
#define _B0SIDL_B0EXID_MASK                                 0x8
#define _B0SIDL_B0SRR_POSN                                  0x4
#define _B0SIDL_B0SRR_POSITION                              0x4
#define _B0SIDL_B0SRR_SIZE                                  0x1
#define _B0SIDL_B0SRR_LENGTH                                0x1
#define _B0SIDL_B0SRR_MASK                                  0x10
#define _B0SIDL_B0SID0_POSN                                 0x5
#define _B0SIDL_B0SID0_POSITION                             0x5
#define _B0SIDL_B0SID0_SIZE                                 0x1
#define _B0SIDL_B0SID0_LENGTH                               0x1
#define _B0SIDL_B0SID0_MASK                                 0x20
#define _B0SIDL_B0SID1_POSN                                 0x6
#define _B0SIDL_B0SID1_POSITION                             0x6
#define _B0SIDL_B0SID1_SIZE                                 0x1
#define _B0SIDL_B0SID1_LENGTH                               0x1
#define _B0SIDL_B0SID1_MASK                                 0x40
#define _B0SIDL_B0SID2_POSN                                 0x7
#define _B0SIDL_B0SID2_POSITION                             0x7
#define _B0SIDL_B0SID2_SIZE                                 0x1
#define _B0SIDL_B0SID2_LENGTH                               0x1
#define _B0SIDL_B0SID2_MASK                                 0x80

// Register: B0EIDH
#define B0EIDH B0EIDH
extern volatile unsigned char           B0EIDH              __at(0xE23);
#ifndef _LIB_BUILD
asm("B0EIDH equ 0E23h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned B0EID8                 :1;
        unsigned B0EID9                 :1;
        unsigned B0EID10                :1;
        unsigned B0EID11                :1;
        unsigned B0EID12                :1;
        unsigned B0EID13                :1;
        unsigned B0EID14                :1;
        unsigned B0EID15                :1;
    };
} B0EIDHbits_t;
extern volatile B0EIDHbits_t B0EIDHbits __at(0xE23);
// bitfield macros
#define _B0EIDH_EID8_POSN                                   0x0
#define _B0EIDH_EID8_POSITION                               0x0
#define _B0EIDH_EID8_SIZE                                   0x1
#define _B0EIDH_EID8_LENGTH                                 0x1
#define _B0EIDH_EID8_MASK                                   0x1
#define _B0EIDH_EID9_POSN                                   0x1
#define _B0EIDH_EID9_POSITION                               0x1
#define _B0EIDH_EID9_SIZE                                   0x1
#define _B0EIDH_EID9_LENGTH                                 0x1
#define _B0EIDH_EID9_MASK                                   0x2
#define _B0EIDH_EID10_POSN                                  0x2
#define _B0EIDH_EID10_POSITION                              0x2
#define _B0EIDH_EID10_SIZE                                  0x1
#define _B0EIDH_EID10_LENGTH                                0x1
#define _B0EIDH_EID10_MASK                                  0x4
#define _B0EIDH_EID11_POSN                                  0x3
#define _B0EIDH_EID11_POSITION                              0x3
#define _B0EIDH_EID11_SIZE                                  0x1
#define _B0EIDH_EID11_LENGTH                                0x1
#define _B0EIDH_EID11_MASK                                  0x8
#define _B0EIDH_EID12_POSN                                  0x4
#define _B0EIDH_EID12_POSITION                              0x4
#define _B0EIDH_EID12_SIZE                                  0x1
#define _B0EIDH_EID12_LENGTH                                0x1
#define _B0EIDH_EID12_MASK                                  0x10
#define _B0EIDH_EID13_POSN                                  0x5
#define _B0EIDH_EID13_POSITION                              0x5
#define _B0EIDH_EID13_SIZE                                  0x1
#define _B0EIDH_EID13_LENGTH                                0x1
#define _B0EIDH_EID13_MASK                                  0x20
#define _B0EIDH_EID14_POSN                                  0x6
#define _B0EIDH_EID14_POSITION                              0x6
#define _B0EIDH_EID14_SIZE                                  0x1
#define _B0EIDH_EID14_LENGTH                                0x1
#define _B0EIDH_EID14_MASK                                  0x40
#define _B0EIDH_EID15_POSN                                  0x7
#define _B0EIDH_EID15_POSITION                              0x7
#define _B0EIDH_EID15_SIZE                                  0x1
#define _B0EIDH_EID15_LENGTH                                0x1
#define _B0EIDH_EID15_MASK                                  0x80
#define _B0EIDH_B0EID8_POSN                                 0x0
#define _B0EIDH_B0EID8_POSITION                             0x0
#define _B0EIDH_B0EID8_SIZE                                 0x1
#define _B0EIDH_B0EID8_LENGTH                               0x1
#define _B0EIDH_B0EID8_MASK                                 0x1
#define _B0EIDH_B0EID9_POSN                                 0x1
#define _B0EIDH_B0EID9_POSITION                             0x1
#define _B0EIDH_B0EID9_SIZE                                 0x1
#define _B0EIDH_B0EID9_LENGTH                               0x1
#define _B0EIDH_B0EID9_MASK                                 0x2
#define _B0EIDH_B0EID10_POSN                                0x2
#define _B0EIDH_B0EID10_POSITION                            0x2
#define _B0EIDH_B0EID10_SIZE                                0x1
#define _B0EIDH_B0EID10_LENGTH                              0x1
#define _B0EIDH_B0EID10_MASK                                0x4
#define _B0EIDH_B0EID11_POSN                                0x3
#define _B0EIDH_B0EID11_POSITION                            0x3
#define _B0EIDH_B0EID11_SIZE                                0x1
#define _B0EIDH_B0EID11_LENGTH                              0x1
#define _B0EIDH_B0EID11_MASK                                0x8
#define _B0EIDH_B0EID12_POSN                                0x4
#define _B0EIDH_B0EID12_POSITION                            0x4
#define _B0EIDH_B0EID12_SIZE                                0x1
#define _B0EIDH_B0EID12_LENGTH                              0x1
#define _B0EIDH_B0EID12_MASK                                0x10
#define _B0EIDH_B0EID13_POSN                                0x5
#define _B0EIDH_B0EID13_POSITION                            0x5
#define _B0EIDH_B0EID13_SIZE                                0x1
#define _B0EIDH_B0EID13_LENGTH                              0x1
#define _B0EIDH_B0EID13_MASK                                0x20
#define _B0EIDH_B0EID14_POSN                                0x6
#define _B0EIDH_B0EID14_POSITION                            0x6
#define _B0EIDH_B0EID14_SIZE                                0x1
#define _B0EIDH_B0EID14_LENGTH                              0x1
#define _B0EIDH_B0EID14_MASK                                0x40
#define _B0EIDH_B0EID15_POSN                                0x7
#define _B0EIDH_B0EID15_POSITION                            0x7
#define _B0EIDH_B0EID15_SIZE                                0x1
#define _B0EIDH_B0EID15_LENGTH                              0x1
#define _B0EIDH_B0EID15_MASK                                0x80

// Register: B0EIDL
#define B0EIDL B0EIDL
extern volatile unsigned char           B0EIDL              __at(0xE24);
#ifndef _LIB_BUILD
asm("B0EIDL equ 0E24h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned B0EID0                 :1;
        unsigned B0EID1                 :1;
        unsigned B0EID2                 :1;
        unsigned B0EID3                 :1;
        unsigned B0EID4                 :1;
        unsigned B0EID5                 :1;
        unsigned B0EID6                 :1;
        unsigned B0EID7                 :1;
    };
} B0EIDLbits_t;
extern volatile B0EIDLbits_t B0EIDLbits __at(0xE24);
// bitfield macros
#define _B0EIDL_EID0_POSN                                   0x0
#define _B0EIDL_EID0_POSITION                               0x0
#define _B0EIDL_EID0_SIZE                                   0x1
#define _B0EIDL_EID0_LENGTH                                 0x1
#define _B0EIDL_EID0_MASK                                   0x1
#define _B0EIDL_EID1_POSN                                   0x1
#define _B0EIDL_EID1_POSITION                               0x1
#define _B0EIDL_EID1_SIZE                                   0x1
#define _B0EIDL_EID1_LENGTH                                 0x1
#define _B0EIDL_EID1_MASK                                   0x2
#define _B0EIDL_EID2_POSN                                   0x2
#define _B0EIDL_EID2_POSITION                               0x2
#define _B0EIDL_EID2_SIZE                                   0x1
#define _B0EIDL_EID2_LENGTH                                 0x1
#define _B0EIDL_EID2_MASK                                   0x4
#define _B0EIDL_EID3_POSN                                   0x3
#define _B0EIDL_EID3_POSITION                               0x3
#define _B0EIDL_EID3_SIZE                                   0x1
#define _B0EIDL_EID3_LENGTH                                 0x1
#define _B0EIDL_EID3_MASK                                   0x8
#define _B0EIDL_EID4_POSN                                   0x4
#define _B0EIDL_EID4_POSITION                               0x4
#define _B0EIDL_EID4_SIZE                                   0x1
#define _B0EIDL_EID4_LENGTH                                 0x1
#define _B0EIDL_EID4_MASK                                   0x10
#define _B0EIDL_EID5_POSN                                   0x5
#define _B0EIDL_EID5_POSITION                               0x5
#define _B0EIDL_EID5_SIZE                                   0x1
#define _B0EIDL_EID5_LENGTH                                 0x1
#define _B0EIDL_EID5_MASK                                   0x20
#define _B0EIDL_EID6_POSN                                   0x6
#define _B0EIDL_EID6_POSITION                               0x6
#define _B0EIDL_EID6_SIZE                                   0x1
#define _B0EIDL_EID6_LENGTH                                 0x1
#define _B0EIDL_EID6_MASK                                   0x40
#define _B0EIDL_EID7_POSN                                   0x7
#define _B0EIDL_EID7_POSITION                               0x7
#define _B0EIDL_EID7_SIZE                                   0x1
#define _B0EIDL_EID7_LENGTH                                 0x1
#define _B0EIDL_EID7_MASK                                   0x80
#define _B0EIDL_B0EID0_POSN                                 0x0
#define _B0EIDL_B0EID0_POSITION                             0x0
#define _B0EIDL_B0EID0_SIZE                                 0x1
#define _B0EIDL_B0EID0_LENGTH                               0x1
#define _B0EIDL_B0EID0_MASK                                 0x1
#define _B0EIDL_B0EID1_POSN                                 0x1
#define _B0EIDL_B0EID1_POSITION                             0x1
#define _B0EIDL_B0EID1_SIZE                                 0x1
#define _B0EIDL_B0EID1_LENGTH                               0x1
#define _B0EIDL_B0EID1_MASK                                 0x2
#define _B0EIDL_B0EID2_POSN                                 0x2
#define _B0EIDL_B0EID2_POSITION                             0x2
#define _B0EIDL_B0EID2_SIZE                                 0x1
#define _B0EIDL_B0EID2_LENGTH                               0x1
#define _B0EIDL_B0EID2_MASK                                 0x4
#define _B0EIDL_B0EID3_POSN                                 0x3
#define _B0EIDL_B0EID3_POSITION                             0x3
#define _B0EIDL_B0EID3_SIZE                                 0x1
#define _B0EIDL_B0EID3_LENGTH                               0x1
#define _B0EIDL_B0EID3_MASK                                 0x8
#define _B0EIDL_B0EID4_POSN                                 0x4
#define _B0EIDL_B0EID4_POSITION                             0x4
#define _B0EIDL_B0EID4_SIZE                                 0x1
#define _B0EIDL_B0EID4_LENGTH                               0x1
#define _B0EIDL_B0EID4_MASK                                 0x10
#define _B0EIDL_B0EID5_POSN                                 0x5
#define _B0EIDL_B0EID5_POSITION                             0x5
#define _B0EIDL_B0EID5_SIZE                                 0x1
#define _B0EIDL_B0EID5_LENGTH                               0x1
#define _B0EIDL_B0EID5_MASK                                 0x20
#define _B0EIDL_B0EID6_POSN                                 0x6
#define _B0EIDL_B0EID6_POSITION                             0x6
#define _B0EIDL_B0EID6_SIZE                                 0x1
#define _B0EIDL_B0EID6_LENGTH                               0x1
#define _B0EIDL_B0EID6_MASK                                 0x40
#define _B0EIDL_B0EID7_POSN                                 0x7
#define _B0EIDL_B0EID7_POSITION                             0x7
#define _B0EIDL_B0EID7_SIZE                                 0x1
#define _B0EIDL_B0EID7_LENGTH                               0x1
#define _B0EIDL_B0EID7_MASK                                 0x80

// Register: B0DLC
#define B0DLC B0DLC
extern volatile unsigned char           B0DLC               __at(0xE25);
#ifndef _LIB_BUILD
asm("B0DLC equ 0E25h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RXRTR                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned RESRB0                 :1;
        unsigned RESRB1                 :1;
        unsigned TXRTR                  :1;
    };
    struct {
        unsigned B0DLC0                 :1;
        unsigned B0DLC1                 :1;
        unsigned B0DLC2                 :1;
        unsigned B0DLC3                 :1;
        unsigned B0RB0                  :1;
        unsigned B0RB1                  :1;
        unsigned B0RXRTR                :1;
    };
} B0DLCbits_t;
extern volatile B0DLCbits_t B0DLCbits __at(0xE25);
// bitfield macros
#define _B0DLC_DLC0_POSN                                    0x0
#define _B0DLC_DLC0_POSITION                                0x0
#define _B0DLC_DLC0_SIZE                                    0x1
#define _B0DLC_DLC0_LENGTH                                  0x1
#define _B0DLC_DLC0_MASK                                    0x1
#define _B0DLC_DLC1_POSN                                    0x1
#define _B0DLC_DLC1_POSITION                                0x1
#define _B0DLC_DLC1_SIZE                                    0x1
#define _B0DLC_DLC1_LENGTH                                  0x1
#define _B0DLC_DLC1_MASK                                    0x2
#define _B0DLC_DLC2_POSN                                    0x2
#define _B0DLC_DLC2_POSITION                                0x2
#define _B0DLC_DLC2_SIZE                                    0x1
#define _B0DLC_DLC2_LENGTH                                  0x1
#define _B0DLC_DLC2_MASK                                    0x4
#define _B0DLC_DLC3_POSN                                    0x3
#define _B0DLC_DLC3_POSITION                                0x3
#define _B0DLC_DLC3_SIZE                                    0x1
#define _B0DLC_DLC3_LENGTH                                  0x1
#define _B0DLC_DLC3_MASK                                    0x8
#define _B0DLC_RB0_POSN                                     0x4
#define _B0DLC_RB0_POSITION                                 0x4
#define _B0DLC_RB0_SIZE                                     0x1
#define _B0DLC_RB0_LENGTH                                   0x1
#define _B0DLC_RB0_MASK                                     0x10
#define _B0DLC_RB1_POSN                                     0x5
#define _B0DLC_RB1_POSITION                                 0x5
#define _B0DLC_RB1_SIZE                                     0x1
#define _B0DLC_RB1_LENGTH                                   0x1
#define _B0DLC_RB1_MASK                                     0x20
#define _B0DLC_RXRTR_POSN                                   0x6
#define _B0DLC_RXRTR_POSITION                               0x6
#define _B0DLC_RXRTR_SIZE                                   0x1
#define _B0DLC_RXRTR_LENGTH                                 0x1
#define _B0DLC_RXRTR_MASK                                   0x40
#define _B0DLC_RESRB0_POSN                                  0x4
#define _B0DLC_RESRB0_POSITION                              0x4
#define _B0DLC_RESRB0_SIZE                                  0x1
#define _B0DLC_RESRB0_LENGTH                                0x1
#define _B0DLC_RESRB0_MASK                                  0x10
#define _B0DLC_RESRB1_POSN                                  0x5
#define _B0DLC_RESRB1_POSITION                              0x5
#define _B0DLC_RESRB1_SIZE                                  0x1
#define _B0DLC_RESRB1_LENGTH                                0x1
#define _B0DLC_RESRB1_MASK                                  0x20
#define _B0DLC_TXRTR_POSN                                   0x6
#define _B0DLC_TXRTR_POSITION                               0x6
#define _B0DLC_TXRTR_SIZE                                   0x1
#define _B0DLC_TXRTR_LENGTH                                 0x1
#define _B0DLC_TXRTR_MASK                                   0x40
#define _B0DLC_B0DLC0_POSN                                  0x0
#define _B0DLC_B0DLC0_POSITION                              0x0
#define _B0DLC_B0DLC0_SIZE                                  0x1
#define _B0DLC_B0DLC0_LENGTH                                0x1
#define _B0DLC_B0DLC0_MASK                                  0x1
#define _B0DLC_B0DLC1_POSN                                  0x1
#define _B0DLC_B0DLC1_POSITION                              0x1
#define _B0DLC_B0DLC1_SIZE                                  0x1
#define _B0DLC_B0DLC1_LENGTH                                0x1
#define _B0DLC_B0DLC1_MASK                                  0x2
#define _B0DLC_B0DLC2_POSN                                  0x2
#define _B0DLC_B0DLC2_POSITION                              0x2
#define _B0DLC_B0DLC2_SIZE                                  0x1
#define _B0DLC_B0DLC2_LENGTH                                0x1
#define _B0DLC_B0DLC2_MASK                                  0x4
#define _B0DLC_B0DLC3_POSN                                  0x3
#define _B0DLC_B0DLC3_POSITION                              0x3
#define _B0DLC_B0DLC3_SIZE                                  0x1
#define _B0DLC_B0DLC3_LENGTH                                0x1
#define _B0DLC_B0DLC3_MASK                                  0x8
#define _B0DLC_B0RB0_POSN                                   0x4
#define _B0DLC_B0RB0_POSITION                               0x4
#define _B0DLC_B0RB0_SIZE                                   0x1
#define _B0DLC_B0RB0_LENGTH                                 0x1
#define _B0DLC_B0RB0_MASK                                   0x10
#define _B0DLC_B0RB1_POSN                                   0x5
#define _B0DLC_B0RB1_POSITION                               0x5
#define _B0DLC_B0RB1_SIZE                                   0x1
#define _B0DLC_B0RB1_LENGTH                                 0x1
#define _B0DLC_B0RB1_MASK                                   0x20
#define _B0DLC_B0RXRTR_POSN                                 0x6
#define _B0DLC_B0RXRTR_POSITION                             0x6
#define _B0DLC_B0RXRTR_SIZE                                 0x1
#define _B0DLC_B0RXRTR_LENGTH                               0x1
#define _B0DLC_B0RXRTR_MASK                                 0x40

// Register: B0D0
#define B0D0 B0D0
extern volatile unsigned char           B0D0                __at(0xE26);
#ifndef _LIB_BUILD
asm("B0D0 equ 0E26h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B0D00                  :1;
        unsigned B0D01                  :1;
        unsigned B0D02                  :1;
        unsigned B0D03                  :1;
        unsigned B0D04                  :1;
        unsigned B0D05                  :1;
        unsigned B0D06                  :1;
        unsigned B0D07                  :1;
    };
} B0D0bits_t;
extern volatile B0D0bits_t B0D0bits __at(0xE26);
// bitfield macros
#define _B0D0_B0D00_POSN                                    0x0
#define _B0D0_B0D00_POSITION                                0x0
#define _B0D0_B0D00_SIZE                                    0x1
#define _B0D0_B0D00_LENGTH                                  0x1
#define _B0D0_B0D00_MASK                                    0x1
#define _B0D0_B0D01_POSN                                    0x1
#define _B0D0_B0D01_POSITION                                0x1
#define _B0D0_B0D01_SIZE                                    0x1
#define _B0D0_B0D01_LENGTH                                  0x1
#define _B0D0_B0D01_MASK                                    0x2
#define _B0D0_B0D02_POSN                                    0x2
#define _B0D0_B0D02_POSITION                                0x2
#define _B0D0_B0D02_SIZE                                    0x1
#define _B0D0_B0D02_LENGTH                                  0x1
#define _B0D0_B0D02_MASK                                    0x4
#define _B0D0_B0D03_POSN                                    0x3
#define _B0D0_B0D03_POSITION                                0x3
#define _B0D0_B0D03_SIZE                                    0x1
#define _B0D0_B0D03_LENGTH                                  0x1
#define _B0D0_B0D03_MASK                                    0x8
#define _B0D0_B0D04_POSN                                    0x4
#define _B0D0_B0D04_POSITION                                0x4
#define _B0D0_B0D04_SIZE                                    0x1
#define _B0D0_B0D04_LENGTH                                  0x1
#define _B0D0_B0D04_MASK                                    0x10
#define _B0D0_B0D05_POSN                                    0x5
#define _B0D0_B0D05_POSITION                                0x5
#define _B0D0_B0D05_SIZE                                    0x1
#define _B0D0_B0D05_LENGTH                                  0x1
#define _B0D0_B0D05_MASK                                    0x20
#define _B0D0_B0D06_POSN                                    0x6
#define _B0D0_B0D06_POSITION                                0x6
#define _B0D0_B0D06_SIZE                                    0x1
#define _B0D0_B0D06_LENGTH                                  0x1
#define _B0D0_B0D06_MASK                                    0x40
#define _B0D0_B0D07_POSN                                    0x7
#define _B0D0_B0D07_POSITION                                0x7
#define _B0D0_B0D07_SIZE                                    0x1
#define _B0D0_B0D07_LENGTH                                  0x1
#define _B0D0_B0D07_MASK                                    0x80

// Register: B0D1
#define B0D1 B0D1
extern volatile unsigned char           B0D1                __at(0xE27);
#ifndef _LIB_BUILD
asm("B0D1 equ 0E27h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B0D10                  :1;
        unsigned B0D11                  :1;
        unsigned B0D12                  :1;
        unsigned B0D13                  :1;
        unsigned B0D14                  :1;
        unsigned B0D15                  :1;
        unsigned B0D16                  :1;
        unsigned B0D17                  :1;
    };
} B0D1bits_t;
extern volatile B0D1bits_t B0D1bits __at(0xE27);
// bitfield macros
#define _B0D1_B0D10_POSN                                    0x0
#define _B0D1_B0D10_POSITION                                0x0
#define _B0D1_B0D10_SIZE                                    0x1
#define _B0D1_B0D10_LENGTH                                  0x1
#define _B0D1_B0D10_MASK                                    0x1
#define _B0D1_B0D11_POSN                                    0x1
#define _B0D1_B0D11_POSITION                                0x1
#define _B0D1_B0D11_SIZE                                    0x1
#define _B0D1_B0D11_LENGTH                                  0x1
#define _B0D1_B0D11_MASK                                    0x2
#define _B0D1_B0D12_POSN                                    0x2
#define _B0D1_B0D12_POSITION                                0x2
#define _B0D1_B0D12_SIZE                                    0x1
#define _B0D1_B0D12_LENGTH                                  0x1
#define _B0D1_B0D12_MASK                                    0x4
#define _B0D1_B0D13_POSN                                    0x3
#define _B0D1_B0D13_POSITION                                0x3
#define _B0D1_B0D13_SIZE                                    0x1
#define _B0D1_B0D13_LENGTH                                  0x1
#define _B0D1_B0D13_MASK                                    0x8
#define _B0D1_B0D14_POSN                                    0x4
#define _B0D1_B0D14_POSITION                                0x4
#define _B0D1_B0D14_SIZE                                    0x1
#define _B0D1_B0D14_LENGTH                                  0x1
#define _B0D1_B0D14_MASK                                    0x10
#define _B0D1_B0D15_POSN                                    0x5
#define _B0D1_B0D15_POSITION                                0x5
#define _B0D1_B0D15_SIZE                                    0x1
#define _B0D1_B0D15_LENGTH                                  0x1
#define _B0D1_B0D15_MASK                                    0x20
#define _B0D1_B0D16_POSN                                    0x6
#define _B0D1_B0D16_POSITION                                0x6
#define _B0D1_B0D16_SIZE                                    0x1
#define _B0D1_B0D16_LENGTH                                  0x1
#define _B0D1_B0D16_MASK                                    0x40
#define _B0D1_B0D17_POSN                                    0x7
#define _B0D1_B0D17_POSITION                                0x7
#define _B0D1_B0D17_SIZE                                    0x1
#define _B0D1_B0D17_LENGTH                                  0x1
#define _B0D1_B0D17_MASK                                    0x80

// Register: B0D2
#define B0D2 B0D2
extern volatile unsigned char           B0D2                __at(0xE28);
#ifndef _LIB_BUILD
asm("B0D2 equ 0E28h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B0D20                  :1;
        unsigned B0D21                  :1;
        unsigned B0D22                  :1;
        unsigned B0D23                  :1;
        unsigned B0D24                  :1;
        unsigned B0D25                  :1;
        unsigned B0D26                  :1;
        unsigned B0D27                  :1;
    };
} B0D2bits_t;
extern volatile B0D2bits_t B0D2bits __at(0xE28);
// bitfield macros
#define _B0D2_B0D20_POSN                                    0x0
#define _B0D2_B0D20_POSITION                                0x0
#define _B0D2_B0D20_SIZE                                    0x1
#define _B0D2_B0D20_LENGTH                                  0x1
#define _B0D2_B0D20_MASK                                    0x1
#define _B0D2_B0D21_POSN                                    0x1
#define _B0D2_B0D21_POSITION                                0x1
#define _B0D2_B0D21_SIZE                                    0x1
#define _B0D2_B0D21_LENGTH                                  0x1
#define _B0D2_B0D21_MASK                                    0x2
#define _B0D2_B0D22_POSN                                    0x2
#define _B0D2_B0D22_POSITION                                0x2
#define _B0D2_B0D22_SIZE                                    0x1
#define _B0D2_B0D22_LENGTH                                  0x1
#define _B0D2_B0D22_MASK                                    0x4
#define _B0D2_B0D23_POSN                                    0x3
#define _B0D2_B0D23_POSITION                                0x3
#define _B0D2_B0D23_SIZE                                    0x1
#define _B0D2_B0D23_LENGTH                                  0x1
#define _B0D2_B0D23_MASK                                    0x8
#define _B0D2_B0D24_POSN                                    0x4
#define _B0D2_B0D24_POSITION                                0x4
#define _B0D2_B0D24_SIZE                                    0x1
#define _B0D2_B0D24_LENGTH                                  0x1
#define _B0D2_B0D24_MASK                                    0x10
#define _B0D2_B0D25_POSN                                    0x5
#define _B0D2_B0D25_POSITION                                0x5
#define _B0D2_B0D25_SIZE                                    0x1
#define _B0D2_B0D25_LENGTH                                  0x1
#define _B0D2_B0D25_MASK                                    0x20
#define _B0D2_B0D26_POSN                                    0x6
#define _B0D2_B0D26_POSITION                                0x6
#define _B0D2_B0D26_SIZE                                    0x1
#define _B0D2_B0D26_LENGTH                                  0x1
#define _B0D2_B0D26_MASK                                    0x40
#define _B0D2_B0D27_POSN                                    0x7
#define _B0D2_B0D27_POSITION                                0x7
#define _B0D2_B0D27_SIZE                                    0x1
#define _B0D2_B0D27_LENGTH                                  0x1
#define _B0D2_B0D27_MASK                                    0x80

// Register: B0D3
#define B0D3 B0D3
extern volatile unsigned char           B0D3                __at(0xE29);
#ifndef _LIB_BUILD
asm("B0D3 equ 0E29h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B0D30                  :1;
        unsigned B0D31                  :1;
        unsigned B0D32                  :1;
        unsigned B0D33                  :1;
        unsigned B0D34                  :1;
        unsigned B0D35                  :1;
        unsigned B0D36                  :1;
        unsigned B0D37                  :1;
    };
} B0D3bits_t;
extern volatile B0D3bits_t B0D3bits __at(0xE29);
// bitfield macros
#define _B0D3_B0D30_POSN                                    0x0
#define _B0D3_B0D30_POSITION                                0x0
#define _B0D3_B0D30_SIZE                                    0x1
#define _B0D3_B0D30_LENGTH                                  0x1
#define _B0D3_B0D30_MASK                                    0x1
#define _B0D3_B0D31_POSN                                    0x1
#define _B0D3_B0D31_POSITION                                0x1
#define _B0D3_B0D31_SIZE                                    0x1
#define _B0D3_B0D31_LENGTH                                  0x1
#define _B0D3_B0D31_MASK                                    0x2
#define _B0D3_B0D32_POSN                                    0x2
#define _B0D3_B0D32_POSITION                                0x2
#define _B0D3_B0D32_SIZE                                    0x1
#define _B0D3_B0D32_LENGTH                                  0x1
#define _B0D3_B0D32_MASK                                    0x4
#define _B0D3_B0D33_POSN                                    0x3
#define _B0D3_B0D33_POSITION                                0x3
#define _B0D3_B0D33_SIZE                                    0x1
#define _B0D3_B0D33_LENGTH                                  0x1
#define _B0D3_B0D33_MASK                                    0x8
#define _B0D3_B0D34_POSN                                    0x4
#define _B0D3_B0D34_POSITION                                0x4
#define _B0D3_B0D34_SIZE                                    0x1
#define _B0D3_B0D34_LENGTH                                  0x1
#define _B0D3_B0D34_MASK                                    0x10
#define _B0D3_B0D35_POSN                                    0x5
#define _B0D3_B0D35_POSITION                                0x5
#define _B0D3_B0D35_SIZE                                    0x1
#define _B0D3_B0D35_LENGTH                                  0x1
#define _B0D3_B0D35_MASK                                    0x20
#define _B0D3_B0D36_POSN                                    0x6
#define _B0D3_B0D36_POSITION                                0x6
#define _B0D3_B0D36_SIZE                                    0x1
#define _B0D3_B0D36_LENGTH                                  0x1
#define _B0D3_B0D36_MASK                                    0x40
#define _B0D3_B0D37_POSN                                    0x7
#define _B0D3_B0D37_POSITION                                0x7
#define _B0D3_B0D37_SIZE                                    0x1
#define _B0D3_B0D37_LENGTH                                  0x1
#define _B0D3_B0D37_MASK                                    0x80

// Register: B0D4
#define B0D4 B0D4
extern volatile unsigned char           B0D4                __at(0xE2A);
#ifndef _LIB_BUILD
asm("B0D4 equ 0E2Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B0D40                  :1;
        unsigned B0D41                  :1;
        unsigned B0D42                  :1;
        unsigned B0D43                  :1;
        unsigned B0D44                  :1;
        unsigned B0D45                  :1;
        unsigned B0D46                  :1;
        unsigned B0D47                  :1;
    };
} B0D4bits_t;
extern volatile B0D4bits_t B0D4bits __at(0xE2A);
// bitfield macros
#define _B0D4_B0D40_POSN                                    0x0
#define _B0D4_B0D40_POSITION                                0x0
#define _B0D4_B0D40_SIZE                                    0x1
#define _B0D4_B0D40_LENGTH                                  0x1
#define _B0D4_B0D40_MASK                                    0x1
#define _B0D4_B0D41_POSN                                    0x1
#define _B0D4_B0D41_POSITION                                0x1
#define _B0D4_B0D41_SIZE                                    0x1
#define _B0D4_B0D41_LENGTH                                  0x1
#define _B0D4_B0D41_MASK                                    0x2
#define _B0D4_B0D42_POSN                                    0x2
#define _B0D4_B0D42_POSITION                                0x2
#define _B0D4_B0D42_SIZE                                    0x1
#define _B0D4_B0D42_LENGTH                                  0x1
#define _B0D4_B0D42_MASK                                    0x4
#define _B0D4_B0D43_POSN                                    0x3
#define _B0D4_B0D43_POSITION                                0x3
#define _B0D4_B0D43_SIZE                                    0x1
#define _B0D4_B0D43_LENGTH                                  0x1
#define _B0D4_B0D43_MASK                                    0x8
#define _B0D4_B0D44_POSN                                    0x4
#define _B0D4_B0D44_POSITION                                0x4
#define _B0D4_B0D44_SIZE                                    0x1
#define _B0D4_B0D44_LENGTH                                  0x1
#define _B0D4_B0D44_MASK                                    0x10
#define _B0D4_B0D45_POSN                                    0x5
#define _B0D4_B0D45_POSITION                                0x5
#define _B0D4_B0D45_SIZE                                    0x1
#define _B0D4_B0D45_LENGTH                                  0x1
#define _B0D4_B0D45_MASK                                    0x20
#define _B0D4_B0D46_POSN                                    0x6
#define _B0D4_B0D46_POSITION                                0x6
#define _B0D4_B0D46_SIZE                                    0x1
#define _B0D4_B0D46_LENGTH                                  0x1
#define _B0D4_B0D46_MASK                                    0x40
#define _B0D4_B0D47_POSN                                    0x7
#define _B0D4_B0D47_POSITION                                0x7
#define _B0D4_B0D47_SIZE                                    0x1
#define _B0D4_B0D47_LENGTH                                  0x1
#define _B0D4_B0D47_MASK                                    0x80

// Register: B0D5
#define B0D5 B0D5
extern volatile unsigned char           B0D5                __at(0xE2B);
#ifndef _LIB_BUILD
asm("B0D5 equ 0E2Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B0D50                  :1;
        unsigned B0D51                  :1;
        unsigned B0D52                  :1;
        unsigned B0D53                  :1;
        unsigned B0D54                  :1;
        unsigned B0D55                  :1;
        unsigned B0D56                  :1;
        unsigned B0D57                  :1;
    };
} B0D5bits_t;
extern volatile B0D5bits_t B0D5bits __at(0xE2B);
// bitfield macros
#define _B0D5_B0D50_POSN                                    0x0
#define _B0D5_B0D50_POSITION                                0x0
#define _B0D5_B0D50_SIZE                                    0x1
#define _B0D5_B0D50_LENGTH                                  0x1
#define _B0D5_B0D50_MASK                                    0x1
#define _B0D5_B0D51_POSN                                    0x1
#define _B0D5_B0D51_POSITION                                0x1
#define _B0D5_B0D51_SIZE                                    0x1
#define _B0D5_B0D51_LENGTH                                  0x1
#define _B0D5_B0D51_MASK                                    0x2
#define _B0D5_B0D52_POSN                                    0x2
#define _B0D5_B0D52_POSITION                                0x2
#define _B0D5_B0D52_SIZE                                    0x1
#define _B0D5_B0D52_LENGTH                                  0x1
#define _B0D5_B0D52_MASK                                    0x4
#define _B0D5_B0D53_POSN                                    0x3
#define _B0D5_B0D53_POSITION                                0x3
#define _B0D5_B0D53_SIZE                                    0x1
#define _B0D5_B0D53_LENGTH                                  0x1
#define _B0D5_B0D53_MASK                                    0x8
#define _B0D5_B0D54_POSN                                    0x4
#define _B0D5_B0D54_POSITION                                0x4
#define _B0D5_B0D54_SIZE                                    0x1
#define _B0D5_B0D54_LENGTH                                  0x1
#define _B0D5_B0D54_MASK                                    0x10
#define _B0D5_B0D55_POSN                                    0x5
#define _B0D5_B0D55_POSITION                                0x5
#define _B0D5_B0D55_SIZE                                    0x1
#define _B0D5_B0D55_LENGTH                                  0x1
#define _B0D5_B0D55_MASK                                    0x20
#define _B0D5_B0D56_POSN                                    0x6
#define _B0D5_B0D56_POSITION                                0x6
#define _B0D5_B0D56_SIZE                                    0x1
#define _B0D5_B0D56_LENGTH                                  0x1
#define _B0D5_B0D56_MASK                                    0x40
#define _B0D5_B0D57_POSN                                    0x7
#define _B0D5_B0D57_POSITION                                0x7
#define _B0D5_B0D57_SIZE                                    0x1
#define _B0D5_B0D57_LENGTH                                  0x1
#define _B0D5_B0D57_MASK                                    0x80

// Register: B0D6
#define B0D6 B0D6
extern volatile unsigned char           B0D6                __at(0xE2C);
#ifndef _LIB_BUILD
asm("B0D6 equ 0E2Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B0D60                  :1;
        unsigned B0D61                  :1;
        unsigned B0D62                  :1;
        unsigned B0D63                  :1;
        unsigned B0D64                  :1;
        unsigned B0D65                  :1;
        unsigned B0D66                  :1;
        unsigned B0D67                  :1;
    };
} B0D6bits_t;
extern volatile B0D6bits_t B0D6bits __at(0xE2C);
// bitfield macros
#define _B0D6_B0D60_POSN                                    0x0
#define _B0D6_B0D60_POSITION                                0x0
#define _B0D6_B0D60_SIZE                                    0x1
#define _B0D6_B0D60_LENGTH                                  0x1
#define _B0D6_B0D60_MASK                                    0x1
#define _B0D6_B0D61_POSN                                    0x1
#define _B0D6_B0D61_POSITION                                0x1
#define _B0D6_B0D61_SIZE                                    0x1
#define _B0D6_B0D61_LENGTH                                  0x1
#define _B0D6_B0D61_MASK                                    0x2
#define _B0D6_B0D62_POSN                                    0x2
#define _B0D6_B0D62_POSITION                                0x2
#define _B0D6_B0D62_SIZE                                    0x1
#define _B0D6_B0D62_LENGTH                                  0x1
#define _B0D6_B0D62_MASK                                    0x4
#define _B0D6_B0D63_POSN                                    0x3
#define _B0D6_B0D63_POSITION                                0x3
#define _B0D6_B0D63_SIZE                                    0x1
#define _B0D6_B0D63_LENGTH                                  0x1
#define _B0D6_B0D63_MASK                                    0x8
#define _B0D6_B0D64_POSN                                    0x4
#define _B0D6_B0D64_POSITION                                0x4
#define _B0D6_B0D64_SIZE                                    0x1
#define _B0D6_B0D64_LENGTH                                  0x1
#define _B0D6_B0D64_MASK                                    0x10
#define _B0D6_B0D65_POSN                                    0x5
#define _B0D6_B0D65_POSITION                                0x5
#define _B0D6_B0D65_SIZE                                    0x1
#define _B0D6_B0D65_LENGTH                                  0x1
#define _B0D6_B0D65_MASK                                    0x20
#define _B0D6_B0D66_POSN                                    0x6
#define _B0D6_B0D66_POSITION                                0x6
#define _B0D6_B0D66_SIZE                                    0x1
#define _B0D6_B0D66_LENGTH                                  0x1
#define _B0D6_B0D66_MASK                                    0x40
#define _B0D6_B0D67_POSN                                    0x7
#define _B0D6_B0D67_POSITION                                0x7
#define _B0D6_B0D67_SIZE                                    0x1
#define _B0D6_B0D67_LENGTH                                  0x1
#define _B0D6_B0D67_MASK                                    0x80

// Register: B0D7
#define B0D7 B0D7
extern volatile unsigned char           B0D7                __at(0xE2D);
#ifndef _LIB_BUILD
asm("B0D7 equ 0E2Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B0D70                  :1;
        unsigned B0D71                  :1;
        unsigned B0D72                  :1;
        unsigned B0D73                  :1;
        unsigned B0D74                  :1;
        unsigned B0D75                  :1;
        unsigned B0D76                  :1;
        unsigned B0D77                  :1;
    };
} B0D7bits_t;
extern volatile B0D7bits_t B0D7bits __at(0xE2D);
// bitfield macros
#define _B0D7_B0D70_POSN                                    0x0
#define _B0D7_B0D70_POSITION                                0x0
#define _B0D7_B0D70_SIZE                                    0x1
#define _B0D7_B0D70_LENGTH                                  0x1
#define _B0D7_B0D70_MASK                                    0x1
#define _B0D7_B0D71_POSN                                    0x1
#define _B0D7_B0D71_POSITION                                0x1
#define _B0D7_B0D71_SIZE                                    0x1
#define _B0D7_B0D71_LENGTH                                  0x1
#define _B0D7_B0D71_MASK                                    0x2
#define _B0D7_B0D72_POSN                                    0x2
#define _B0D7_B0D72_POSITION                                0x2
#define _B0D7_B0D72_SIZE                                    0x1
#define _B0D7_B0D72_LENGTH                                  0x1
#define _B0D7_B0D72_MASK                                    0x4
#define _B0D7_B0D73_POSN                                    0x3
#define _B0D7_B0D73_POSITION                                0x3
#define _B0D7_B0D73_SIZE                                    0x1
#define _B0D7_B0D73_LENGTH                                  0x1
#define _B0D7_B0D73_MASK                                    0x8
#define _B0D7_B0D74_POSN                                    0x4
#define _B0D7_B0D74_POSITION                                0x4
#define _B0D7_B0D74_SIZE                                    0x1
#define _B0D7_B0D74_LENGTH                                  0x1
#define _B0D7_B0D74_MASK                                    0x10
#define _B0D7_B0D75_POSN                                    0x5
#define _B0D7_B0D75_POSITION                                0x5
#define _B0D7_B0D75_SIZE                                    0x1
#define _B0D7_B0D75_LENGTH                                  0x1
#define _B0D7_B0D75_MASK                                    0x20
#define _B0D7_B0D76_POSN                                    0x6
#define _B0D7_B0D76_POSITION                                0x6
#define _B0D7_B0D76_SIZE                                    0x1
#define _B0D7_B0D76_LENGTH                                  0x1
#define _B0D7_B0D76_MASK                                    0x40
#define _B0D7_B0D77_POSN                                    0x7
#define _B0D7_B0D77_POSITION                                0x7
#define _B0D7_B0D77_SIZE                                    0x1
#define _B0D7_B0D77_LENGTH                                  0x1
#define _B0D7_B0D77_MASK                                    0x80

// Register: CANSTAT_RO9
#define CANSTAT_RO9 CANSTAT_RO9
extern volatile unsigned char           CANSTAT_RO9         __at(0xE2E);
#ifndef _LIB_BUILD
asm("CANSTAT_RO9 equ 0E2Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EICODE0                :1;
        unsigned EICODE1_ICODE0         :1;
        unsigned EICODE2_ICODE1         :1;
        unsigned EICODE3_ICODE2         :1;
        unsigned EICODE4                :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTAT_RO9bits_t;
extern volatile CANSTAT_RO9bits_t CANSTAT_RO9bits __at(0xE2E);
// bitfield macros
#define _CANSTAT_RO9_EICODE0_POSN                           0x0
#define _CANSTAT_RO9_EICODE0_POSITION                       0x0
#define _CANSTAT_RO9_EICODE0_SIZE                           0x1
#define _CANSTAT_RO9_EICODE0_LENGTH                         0x1
#define _CANSTAT_RO9_EICODE0_MASK                           0x1
#define _CANSTAT_RO9_EICODE1_ICODE0_POSN                    0x1
#define _CANSTAT_RO9_EICODE1_ICODE0_POSITION                0x1
#define _CANSTAT_RO9_EICODE1_ICODE0_SIZE                    0x1
#define _CANSTAT_RO9_EICODE1_ICODE0_LENGTH                  0x1
#define _CANSTAT_RO9_EICODE1_ICODE0_MASK                    0x2
#define _CANSTAT_RO9_EICODE2_ICODE1_POSN                    0x2
#define _CANSTAT_RO9_EICODE2_ICODE1_POSITION                0x2
#define _CANSTAT_RO9_EICODE2_ICODE1_SIZE                    0x1
#define _CANSTAT_RO9_EICODE2_ICODE1_LENGTH                  0x1
#define _CANSTAT_RO9_EICODE2_ICODE1_MASK                    0x4
#define _CANSTAT_RO9_EICODE3_ICODE2_POSN                    0x3
#define _CANSTAT_RO9_EICODE3_ICODE2_POSITION                0x3
#define _CANSTAT_RO9_EICODE3_ICODE2_SIZE                    0x1
#define _CANSTAT_RO9_EICODE3_ICODE2_LENGTH                  0x1
#define _CANSTAT_RO9_EICODE3_ICODE2_MASK                    0x8
#define _CANSTAT_RO9_EICODE4_POSN                           0x4
#define _CANSTAT_RO9_EICODE4_POSITION                       0x4
#define _CANSTAT_RO9_EICODE4_SIZE                           0x1
#define _CANSTAT_RO9_EICODE4_LENGTH                         0x1
#define _CANSTAT_RO9_EICODE4_MASK                           0x10
#define _CANSTAT_RO9_OPMODE0_POSN                           0x5
#define _CANSTAT_RO9_OPMODE0_POSITION                       0x5
#define _CANSTAT_RO9_OPMODE0_SIZE                           0x1
#define _CANSTAT_RO9_OPMODE0_LENGTH                         0x1
#define _CANSTAT_RO9_OPMODE0_MASK                           0x20
#define _CANSTAT_RO9_OPMODE1_POSN                           0x6
#define _CANSTAT_RO9_OPMODE1_POSITION                       0x6
#define _CANSTAT_RO9_OPMODE1_SIZE                           0x1
#define _CANSTAT_RO9_OPMODE1_LENGTH                         0x1
#define _CANSTAT_RO9_OPMODE1_MASK                           0x40
#define _CANSTAT_RO9_OPMODE2_POSN                           0x7
#define _CANSTAT_RO9_OPMODE2_POSITION                       0x7
#define _CANSTAT_RO9_OPMODE2_SIZE                           0x1
#define _CANSTAT_RO9_OPMODE2_LENGTH                         0x1
#define _CANSTAT_RO9_OPMODE2_MASK                           0x80

// Register: CANCON_RO9
#define CANCON_RO9 CANCON_RO9
extern volatile unsigned char           CANCON_RO9          __at(0xE2F);
#ifndef _LIB_BUILD
asm("CANCON_RO9 equ 0E2Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FP0                    :1;
        unsigned WIN0_FP1               :1;
        unsigned WIN1_FP2               :1;
        unsigned WIN2_FP3               :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
} CANCON_RO9bits_t;
extern volatile CANCON_RO9bits_t CANCON_RO9bits __at(0xE2F);
// bitfield macros
#define _CANCON_RO9_FP0_POSN                                0x0
#define _CANCON_RO9_FP0_POSITION                            0x0
#define _CANCON_RO9_FP0_SIZE                                0x1
#define _CANCON_RO9_FP0_LENGTH                              0x1
#define _CANCON_RO9_FP0_MASK                                0x1
#define _CANCON_RO9_WIN0_FP1_POSN                           0x1
#define _CANCON_RO9_WIN0_FP1_POSITION                       0x1
#define _CANCON_RO9_WIN0_FP1_SIZE                           0x1
#define _CANCON_RO9_WIN0_FP1_LENGTH                         0x1
#define _CANCON_RO9_WIN0_FP1_MASK                           0x2
#define _CANCON_RO9_WIN1_FP2_POSN                           0x2
#define _CANCON_RO9_WIN1_FP2_POSITION                       0x2
#define _CANCON_RO9_WIN1_FP2_SIZE                           0x1
#define _CANCON_RO9_WIN1_FP2_LENGTH                         0x1
#define _CANCON_RO9_WIN1_FP2_MASK                           0x4
#define _CANCON_RO9_WIN2_FP3_POSN                           0x3
#define _CANCON_RO9_WIN2_FP3_POSITION                       0x3
#define _CANCON_RO9_WIN2_FP3_SIZE                           0x1
#define _CANCON_RO9_WIN2_FP3_LENGTH                         0x1
#define _CANCON_RO9_WIN2_FP3_MASK                           0x8
#define _CANCON_RO9_ABAT_POSN                               0x4
#define _CANCON_RO9_ABAT_POSITION                           0x4
#define _CANCON_RO9_ABAT_SIZE                               0x1
#define _CANCON_RO9_ABAT_LENGTH                             0x1
#define _CANCON_RO9_ABAT_MASK                               0x10
#define _CANCON_RO9_REQOP0_POSN                             0x5
#define _CANCON_RO9_REQOP0_POSITION                         0x5
#define _CANCON_RO9_REQOP0_SIZE                             0x1
#define _CANCON_RO9_REQOP0_LENGTH                           0x1
#define _CANCON_RO9_REQOP0_MASK                             0x20
#define _CANCON_RO9_REQOP1_POSN                             0x6
#define _CANCON_RO9_REQOP1_POSITION                         0x6
#define _CANCON_RO9_REQOP1_SIZE                             0x1
#define _CANCON_RO9_REQOP1_LENGTH                           0x1
#define _CANCON_RO9_REQOP1_MASK                             0x40
#define _CANCON_RO9_REQOP2_POSN                             0x7
#define _CANCON_RO9_REQOP2_POSITION                         0x7
#define _CANCON_RO9_REQOP2_SIZE                             0x1
#define _CANCON_RO9_REQOP2_LENGTH                           0x1
#define _CANCON_RO9_REQOP2_MASK                             0x80

// Register: B1CON
#define B1CON B1CON
extern volatile unsigned char           B1CON               __at(0xE30);
#ifndef _LIB_BUILD
asm("B1CON equ 0E30h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FILHIT0_TXPRI0         :1;
        unsigned FILHIT1_TXPRI1         :1;
        unsigned FILHIT2_RTREN          :1;
        unsigned FILHIT3_TXREQ          :1;
        unsigned FILHIT4_TXERR          :1;
        unsigned RTRRO_TXLARB           :1;
        unsigned RXM1_TXABT             :1;
        unsigned RXFUL_TXBIF            :1;
    };
    struct {
        unsigned FILHIT0                :1;
        unsigned FILHIT1                :1;
        unsigned FILHIT2                :1;
        unsigned FILHIT3                :1;
        unsigned FILHIT4                :1;
        unsigned RTRRO                  :1;
        unsigned RXM1                   :1;
        unsigned RXFUL                  :1;
    };
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned RTREN                  :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
        unsigned TXBIF                  :1;
    };
    struct {
        unsigned B1FILHIT0              :1;
        unsigned B1FILHIT1              :1;
        unsigned B1FILHIT2              :1;
        unsigned B1FILHIT3              :1;
        unsigned B1FILHIT4              :1;
        unsigned B1RTRRO                :1;
        unsigned B1RXM1                 :1;
        unsigned B1RXFUL                :1;
    };
    struct {
        unsigned B1TXPRI0               :1;
        unsigned B1TXPRI1               :1;
        unsigned B1RTREN                :1;
        unsigned B1TXREQ                :1;
        unsigned B1TXERR                :1;
        unsigned B1TXLARB               :1;
        unsigned B1TXABT                :1;
        unsigned B1TXB3IF               :1;
    };
} B1CONbits_t;
extern volatile B1CONbits_t B1CONbits __at(0xE30);
// bitfield macros
#define _B1CON_FILHIT0_TXPRI0_POSN                          0x0
#define _B1CON_FILHIT0_TXPRI0_POSITION                      0x0
#define _B1CON_FILHIT0_TXPRI0_SIZE                          0x1
#define _B1CON_FILHIT0_TXPRI0_LENGTH                        0x1
#define _B1CON_FILHIT0_TXPRI0_MASK                          0x1
#define _B1CON_FILHIT1_TXPRI1_POSN                          0x1
#define _B1CON_FILHIT1_TXPRI1_POSITION                      0x1
#define _B1CON_FILHIT1_TXPRI1_SIZE                          0x1
#define _B1CON_FILHIT1_TXPRI1_LENGTH                        0x1
#define _B1CON_FILHIT1_TXPRI1_MASK                          0x2
#define _B1CON_FILHIT2_RTREN_POSN                           0x2
#define _B1CON_FILHIT2_RTREN_POSITION                       0x2
#define _B1CON_FILHIT2_RTREN_SIZE                           0x1
#define _B1CON_FILHIT2_RTREN_LENGTH                         0x1
#define _B1CON_FILHIT2_RTREN_MASK                           0x4
#define _B1CON_FILHIT3_TXREQ_POSN                           0x3
#define _B1CON_FILHIT3_TXREQ_POSITION                       0x3
#define _B1CON_FILHIT3_TXREQ_SIZE                           0x1
#define _B1CON_FILHIT3_TXREQ_LENGTH                         0x1
#define _B1CON_FILHIT3_TXREQ_MASK                           0x8
#define _B1CON_FILHIT4_TXERR_POSN                           0x4
#define _B1CON_FILHIT4_TXERR_POSITION                       0x4
#define _B1CON_FILHIT4_TXERR_SIZE                           0x1
#define _B1CON_FILHIT4_TXERR_LENGTH                         0x1
#define _B1CON_FILHIT4_TXERR_MASK                           0x10
#define _B1CON_RTRRO_TXLARB_POSN                            0x5
#define _B1CON_RTRRO_TXLARB_POSITION                        0x5
#define _B1CON_RTRRO_TXLARB_SIZE                            0x1
#define _B1CON_RTRRO_TXLARB_LENGTH                          0x1
#define _B1CON_RTRRO_TXLARB_MASK                            0x20
#define _B1CON_RXM1_TXABT_POSN                              0x6
#define _B1CON_RXM1_TXABT_POSITION                          0x6
#define _B1CON_RXM1_TXABT_SIZE                              0x1
#define _B1CON_RXM1_TXABT_LENGTH                            0x1
#define _B1CON_RXM1_TXABT_MASK                              0x40
#define _B1CON_RXFUL_TXBIF_POSN                             0x7
#define _B1CON_RXFUL_TXBIF_POSITION                         0x7
#define _B1CON_RXFUL_TXBIF_SIZE                             0x1
#define _B1CON_RXFUL_TXBIF_LENGTH                           0x1
#define _B1CON_RXFUL_TXBIF_MASK                             0x80
#define _B1CON_FILHIT0_POSN                                 0x0
#define _B1CON_FILHIT0_POSITION                             0x0
#define _B1CON_FILHIT0_SIZE                                 0x1
#define _B1CON_FILHIT0_LENGTH                               0x1
#define _B1CON_FILHIT0_MASK                                 0x1
#define _B1CON_FILHIT1_POSN                                 0x1
#define _B1CON_FILHIT1_POSITION                             0x1
#define _B1CON_FILHIT1_SIZE                                 0x1
#define _B1CON_FILHIT1_LENGTH                               0x1
#define _B1CON_FILHIT1_MASK                                 0x2
#define _B1CON_FILHIT2_POSN                                 0x2
#define _B1CON_FILHIT2_POSITION                             0x2
#define _B1CON_FILHIT2_SIZE                                 0x1
#define _B1CON_FILHIT2_LENGTH                               0x1
#define _B1CON_FILHIT2_MASK                                 0x4
#define _B1CON_FILHIT3_POSN                                 0x3
#define _B1CON_FILHIT3_POSITION                             0x3
#define _B1CON_FILHIT3_SIZE                                 0x1
#define _B1CON_FILHIT3_LENGTH                               0x1
#define _B1CON_FILHIT3_MASK                                 0x8
#define _B1CON_FILHIT4_POSN                                 0x4
#define _B1CON_FILHIT4_POSITION                             0x4
#define _B1CON_FILHIT4_SIZE                                 0x1
#define _B1CON_FILHIT4_LENGTH                               0x1
#define _B1CON_FILHIT4_MASK                                 0x10
#define _B1CON_RTRRO_POSN                                   0x5
#define _B1CON_RTRRO_POSITION                               0x5
#define _B1CON_RTRRO_SIZE                                   0x1
#define _B1CON_RTRRO_LENGTH                                 0x1
#define _B1CON_RTRRO_MASK                                   0x20
#define _B1CON_RXM1_POSN                                    0x6
#define _B1CON_RXM1_POSITION                                0x6
#define _B1CON_RXM1_SIZE                                    0x1
#define _B1CON_RXM1_LENGTH                                  0x1
#define _B1CON_RXM1_MASK                                    0x40
#define _B1CON_RXFUL_POSN                                   0x7
#define _B1CON_RXFUL_POSITION                               0x7
#define _B1CON_RXFUL_SIZE                                   0x1
#define _B1CON_RXFUL_LENGTH                                 0x1
#define _B1CON_RXFUL_MASK                                   0x80
#define _B1CON_TXPRI0_POSN                                  0x0
#define _B1CON_TXPRI0_POSITION                              0x0
#define _B1CON_TXPRI0_SIZE                                  0x1
#define _B1CON_TXPRI0_LENGTH                                0x1
#define _B1CON_TXPRI0_MASK                                  0x1
#define _B1CON_TXPRI1_POSN                                  0x1
#define _B1CON_TXPRI1_POSITION                              0x1
#define _B1CON_TXPRI1_SIZE                                  0x1
#define _B1CON_TXPRI1_LENGTH                                0x1
#define _B1CON_TXPRI1_MASK                                  0x2
#define _B1CON_RTREN_POSN                                   0x2
#define _B1CON_RTREN_POSITION                               0x2
#define _B1CON_RTREN_SIZE                                   0x1
#define _B1CON_RTREN_LENGTH                                 0x1
#define _B1CON_RTREN_MASK                                   0x4
#define _B1CON_TXREQ_POSN                                   0x3
#define _B1CON_TXREQ_POSITION                               0x3
#define _B1CON_TXREQ_SIZE                                   0x1
#define _B1CON_TXREQ_LENGTH                                 0x1
#define _B1CON_TXREQ_MASK                                   0x8
#define _B1CON_TXERR_POSN                                   0x4
#define _B1CON_TXERR_POSITION                               0x4
#define _B1CON_TXERR_SIZE                                   0x1
#define _B1CON_TXERR_LENGTH                                 0x1
#define _B1CON_TXERR_MASK                                   0x10
#define _B1CON_TXLARB_POSN                                  0x5
#define _B1CON_TXLARB_POSITION                              0x5
#define _B1CON_TXLARB_SIZE                                  0x1
#define _B1CON_TXLARB_LENGTH                                0x1
#define _B1CON_TXLARB_MASK                                  0x20
#define _B1CON_TXABT_POSN                                   0x6
#define _B1CON_TXABT_POSITION                               0x6
#define _B1CON_TXABT_SIZE                                   0x1
#define _B1CON_TXABT_LENGTH                                 0x1
#define _B1CON_TXABT_MASK                                   0x40
#define _B1CON_TXBIF_POSN                                   0x7
#define _B1CON_TXBIF_POSITION                               0x7
#define _B1CON_TXBIF_SIZE                                   0x1
#define _B1CON_TXBIF_LENGTH                                 0x1
#define _B1CON_TXBIF_MASK                                   0x80
#define _B1CON_B1FILHIT0_POSN                               0x0
#define _B1CON_B1FILHIT0_POSITION                           0x0
#define _B1CON_B1FILHIT0_SIZE                               0x1
#define _B1CON_B1FILHIT0_LENGTH                             0x1
#define _B1CON_B1FILHIT0_MASK                               0x1
#define _B1CON_B1FILHIT1_POSN                               0x1
#define _B1CON_B1FILHIT1_POSITION                           0x1
#define _B1CON_B1FILHIT1_SIZE                               0x1
#define _B1CON_B1FILHIT1_LENGTH                             0x1
#define _B1CON_B1FILHIT1_MASK                               0x2
#define _B1CON_B1FILHIT2_POSN                               0x2
#define _B1CON_B1FILHIT2_POSITION                           0x2
#define _B1CON_B1FILHIT2_SIZE                               0x1
#define _B1CON_B1FILHIT2_LENGTH                             0x1
#define _B1CON_B1FILHIT2_MASK                               0x4
#define _B1CON_B1FILHIT3_POSN                               0x3
#define _B1CON_B1FILHIT3_POSITION                           0x3
#define _B1CON_B1FILHIT3_SIZE                               0x1
#define _B1CON_B1FILHIT3_LENGTH                             0x1
#define _B1CON_B1FILHIT3_MASK                               0x8
#define _B1CON_B1FILHIT4_POSN                               0x4
#define _B1CON_B1FILHIT4_POSITION                           0x4
#define _B1CON_B1FILHIT4_SIZE                               0x1
#define _B1CON_B1FILHIT4_LENGTH                             0x1
#define _B1CON_B1FILHIT4_MASK                               0x10
#define _B1CON_B1RTRRO_POSN                                 0x5
#define _B1CON_B1RTRRO_POSITION                             0x5
#define _B1CON_B1RTRRO_SIZE                                 0x1
#define _B1CON_B1RTRRO_LENGTH                               0x1
#define _B1CON_B1RTRRO_MASK                                 0x20
#define _B1CON_B1RXM1_POSN                                  0x6
#define _B1CON_B1RXM1_POSITION                              0x6
#define _B1CON_B1RXM1_SIZE                                  0x1
#define _B1CON_B1RXM1_LENGTH                                0x1
#define _B1CON_B1RXM1_MASK                                  0x40
#define _B1CON_B1RXFUL_POSN                                 0x7
#define _B1CON_B1RXFUL_POSITION                             0x7
#define _B1CON_B1RXFUL_SIZE                                 0x1
#define _B1CON_B1RXFUL_LENGTH                               0x1
#define _B1CON_B1RXFUL_MASK                                 0x80
#define _B1CON_B1TXPRI0_POSN                                0x0
#define _B1CON_B1TXPRI0_POSITION                            0x0
#define _B1CON_B1TXPRI0_SIZE                                0x1
#define _B1CON_B1TXPRI0_LENGTH                              0x1
#define _B1CON_B1TXPRI0_MASK                                0x1
#define _B1CON_B1TXPRI1_POSN                                0x1
#define _B1CON_B1TXPRI1_POSITION                            0x1
#define _B1CON_B1TXPRI1_SIZE                                0x1
#define _B1CON_B1TXPRI1_LENGTH                              0x1
#define _B1CON_B1TXPRI1_MASK                                0x2
#define _B1CON_B1RTREN_POSN                                 0x2
#define _B1CON_B1RTREN_POSITION                             0x2
#define _B1CON_B1RTREN_SIZE                                 0x1
#define _B1CON_B1RTREN_LENGTH                               0x1
#define _B1CON_B1RTREN_MASK                                 0x4
#define _B1CON_B1TXREQ_POSN                                 0x3
#define _B1CON_B1TXREQ_POSITION                             0x3
#define _B1CON_B1TXREQ_SIZE                                 0x1
#define _B1CON_B1TXREQ_LENGTH                               0x1
#define _B1CON_B1TXREQ_MASK                                 0x8
#define _B1CON_B1TXERR_POSN                                 0x4
#define _B1CON_B1TXERR_POSITION                             0x4
#define _B1CON_B1TXERR_SIZE                                 0x1
#define _B1CON_B1TXERR_LENGTH                               0x1
#define _B1CON_B1TXERR_MASK                                 0x10
#define _B1CON_B1TXLARB_POSN                                0x5
#define _B1CON_B1TXLARB_POSITION                            0x5
#define _B1CON_B1TXLARB_SIZE                                0x1
#define _B1CON_B1TXLARB_LENGTH                              0x1
#define _B1CON_B1TXLARB_MASK                                0x20
#define _B1CON_B1TXABT_POSN                                 0x6
#define _B1CON_B1TXABT_POSITION                             0x6
#define _B1CON_B1TXABT_SIZE                                 0x1
#define _B1CON_B1TXABT_LENGTH                               0x1
#define _B1CON_B1TXABT_MASK                                 0x40
#define _B1CON_B1TXB3IF_POSN                                0x7
#define _B1CON_B1TXB3IF_POSITION                            0x7
#define _B1CON_B1TXB3IF_SIZE                                0x1
#define _B1CON_B1TXB3IF_LENGTH                              0x1
#define _B1CON_B1TXB3IF_MASK                                0x80

// Register: B1SIDH
#define B1SIDH B1SIDH
extern volatile unsigned char           B1SIDH              __at(0xE31);
#ifndef _LIB_BUILD
asm("B1SIDH equ 0E31h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned B1SID3                 :1;
        unsigned B1SID4                 :1;
        unsigned B1SID5                 :1;
        unsigned B1SID6                 :1;
        unsigned B1SID7                 :1;
        unsigned B1SID8                 :1;
        unsigned B1SID9                 :1;
        unsigned B1SID10                :1;
    };
} B1SIDHbits_t;
extern volatile B1SIDHbits_t B1SIDHbits __at(0xE31);
// bitfield macros
#define _B1SIDH_SID3_POSN                                   0x0
#define _B1SIDH_SID3_POSITION                               0x0
#define _B1SIDH_SID3_SIZE                                   0x1
#define _B1SIDH_SID3_LENGTH                                 0x1
#define _B1SIDH_SID3_MASK                                   0x1
#define _B1SIDH_SID4_POSN                                   0x1
#define _B1SIDH_SID4_POSITION                               0x1
#define _B1SIDH_SID4_SIZE                                   0x1
#define _B1SIDH_SID4_LENGTH                                 0x1
#define _B1SIDH_SID4_MASK                                   0x2
#define _B1SIDH_SID5_POSN                                   0x2
#define _B1SIDH_SID5_POSITION                               0x2
#define _B1SIDH_SID5_SIZE                                   0x1
#define _B1SIDH_SID5_LENGTH                                 0x1
#define _B1SIDH_SID5_MASK                                   0x4
#define _B1SIDH_SID6_POSN                                   0x3
#define _B1SIDH_SID6_POSITION                               0x3
#define _B1SIDH_SID6_SIZE                                   0x1
#define _B1SIDH_SID6_LENGTH                                 0x1
#define _B1SIDH_SID6_MASK                                   0x8
#define _B1SIDH_SID7_POSN                                   0x4
#define _B1SIDH_SID7_POSITION                               0x4
#define _B1SIDH_SID7_SIZE                                   0x1
#define _B1SIDH_SID7_LENGTH                                 0x1
#define _B1SIDH_SID7_MASK                                   0x10
#define _B1SIDH_SID8_POSN                                   0x5
#define _B1SIDH_SID8_POSITION                               0x5
#define _B1SIDH_SID8_SIZE                                   0x1
#define _B1SIDH_SID8_LENGTH                                 0x1
#define _B1SIDH_SID8_MASK                                   0x20
#define _B1SIDH_SID9_POSN                                   0x6
#define _B1SIDH_SID9_POSITION                               0x6
#define _B1SIDH_SID9_SIZE                                   0x1
#define _B1SIDH_SID9_LENGTH                                 0x1
#define _B1SIDH_SID9_MASK                                   0x40
#define _B1SIDH_SID10_POSN                                  0x7
#define _B1SIDH_SID10_POSITION                              0x7
#define _B1SIDH_SID10_SIZE                                  0x1
#define _B1SIDH_SID10_LENGTH                                0x1
#define _B1SIDH_SID10_MASK                                  0x80
#define _B1SIDH_B1SID3_POSN                                 0x0
#define _B1SIDH_B1SID3_POSITION                             0x0
#define _B1SIDH_B1SID3_SIZE                                 0x1
#define _B1SIDH_B1SID3_LENGTH                               0x1
#define _B1SIDH_B1SID3_MASK                                 0x1
#define _B1SIDH_B1SID4_POSN                                 0x1
#define _B1SIDH_B1SID4_POSITION                             0x1
#define _B1SIDH_B1SID4_SIZE                                 0x1
#define _B1SIDH_B1SID4_LENGTH                               0x1
#define _B1SIDH_B1SID4_MASK                                 0x2
#define _B1SIDH_B1SID5_POSN                                 0x2
#define _B1SIDH_B1SID5_POSITION                             0x2
#define _B1SIDH_B1SID5_SIZE                                 0x1
#define _B1SIDH_B1SID5_LENGTH                               0x1
#define _B1SIDH_B1SID5_MASK                                 0x4
#define _B1SIDH_B1SID6_POSN                                 0x3
#define _B1SIDH_B1SID6_POSITION                             0x3
#define _B1SIDH_B1SID6_SIZE                                 0x1
#define _B1SIDH_B1SID6_LENGTH                               0x1
#define _B1SIDH_B1SID6_MASK                                 0x8
#define _B1SIDH_B1SID7_POSN                                 0x4
#define _B1SIDH_B1SID7_POSITION                             0x4
#define _B1SIDH_B1SID7_SIZE                                 0x1
#define _B1SIDH_B1SID7_LENGTH                               0x1
#define _B1SIDH_B1SID7_MASK                                 0x10
#define _B1SIDH_B1SID8_POSN                                 0x5
#define _B1SIDH_B1SID8_POSITION                             0x5
#define _B1SIDH_B1SID8_SIZE                                 0x1
#define _B1SIDH_B1SID8_LENGTH                               0x1
#define _B1SIDH_B1SID8_MASK                                 0x20
#define _B1SIDH_B1SID9_POSN                                 0x6
#define _B1SIDH_B1SID9_POSITION                             0x6
#define _B1SIDH_B1SID9_SIZE                                 0x1
#define _B1SIDH_B1SID9_LENGTH                               0x1
#define _B1SIDH_B1SID9_MASK                                 0x40
#define _B1SIDH_B1SID10_POSN                                0x7
#define _B1SIDH_B1SID10_POSITION                            0x7
#define _B1SIDH_B1SID10_SIZE                                0x1
#define _B1SIDH_B1SID10_LENGTH                              0x1
#define _B1SIDH_B1SID10_MASK                                0x80

// Register: B1SIDL
#define B1SIDL B1SIDL
extern volatile unsigned char           B1SIDL              __at(0xE32);
#ifndef _LIB_BUILD
asm("B1SIDL equ 0E32h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXID                   :1;
        unsigned SRR                    :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned B1EID16                :1;
        unsigned B1EID17                :1;
        unsigned                        :1;
        unsigned B1EXID                 :1;
        unsigned B1SRR                  :1;
        unsigned B1SID0                 :1;
        unsigned B1SID1                 :1;
        unsigned B1SID2                 :1;
    };
} B1SIDLbits_t;
extern volatile B1SIDLbits_t B1SIDLbits __at(0xE32);
// bitfield macros
#define _B1SIDL_EID16_POSN                                  0x0
#define _B1SIDL_EID16_POSITION                              0x0
#define _B1SIDL_EID16_SIZE                                  0x1
#define _B1SIDL_EID16_LENGTH                                0x1
#define _B1SIDL_EID16_MASK                                  0x1
#define _B1SIDL_EID17_POSN                                  0x1
#define _B1SIDL_EID17_POSITION                              0x1
#define _B1SIDL_EID17_SIZE                                  0x1
#define _B1SIDL_EID17_LENGTH                                0x1
#define _B1SIDL_EID17_MASK                                  0x2
#define _B1SIDL_EXID_POSN                                   0x3
#define _B1SIDL_EXID_POSITION                               0x3
#define _B1SIDL_EXID_SIZE                                   0x1
#define _B1SIDL_EXID_LENGTH                                 0x1
#define _B1SIDL_EXID_MASK                                   0x8
#define _B1SIDL_SRR_POSN                                    0x4
#define _B1SIDL_SRR_POSITION                                0x4
#define _B1SIDL_SRR_SIZE                                    0x1
#define _B1SIDL_SRR_LENGTH                                  0x1
#define _B1SIDL_SRR_MASK                                    0x10
#define _B1SIDL_SID0_POSN                                   0x5
#define _B1SIDL_SID0_POSITION                               0x5
#define _B1SIDL_SID0_SIZE                                   0x1
#define _B1SIDL_SID0_LENGTH                                 0x1
#define _B1SIDL_SID0_MASK                                   0x20
#define _B1SIDL_SID1_POSN                                   0x6
#define _B1SIDL_SID1_POSITION                               0x6
#define _B1SIDL_SID1_SIZE                                   0x1
#define _B1SIDL_SID1_LENGTH                                 0x1
#define _B1SIDL_SID1_MASK                                   0x40
#define _B1SIDL_SID2_POSN                                   0x7
#define _B1SIDL_SID2_POSITION                               0x7
#define _B1SIDL_SID2_SIZE                                   0x1
#define _B1SIDL_SID2_LENGTH                                 0x1
#define _B1SIDL_SID2_MASK                                   0x80
#define _B1SIDL_EXIDE_POSN                                  0x3
#define _B1SIDL_EXIDE_POSITION                              0x3
#define _B1SIDL_EXIDE_SIZE                                  0x1
#define _B1SIDL_EXIDE_LENGTH                                0x1
#define _B1SIDL_EXIDE_MASK                                  0x8
#define _B1SIDL_B1EID16_POSN                                0x0
#define _B1SIDL_B1EID16_POSITION                            0x0
#define _B1SIDL_B1EID16_SIZE                                0x1
#define _B1SIDL_B1EID16_LENGTH                              0x1
#define _B1SIDL_B1EID16_MASK                                0x1
#define _B1SIDL_B1EID17_POSN                                0x1
#define _B1SIDL_B1EID17_POSITION                            0x1
#define _B1SIDL_B1EID17_SIZE                                0x1
#define _B1SIDL_B1EID17_LENGTH                              0x1
#define _B1SIDL_B1EID17_MASK                                0x2
#define _B1SIDL_B1EXID_POSN                                 0x3
#define _B1SIDL_B1EXID_POSITION                             0x3
#define _B1SIDL_B1EXID_SIZE                                 0x1
#define _B1SIDL_B1EXID_LENGTH                               0x1
#define _B1SIDL_B1EXID_MASK                                 0x8
#define _B1SIDL_B1SRR_POSN                                  0x4
#define _B1SIDL_B1SRR_POSITION                              0x4
#define _B1SIDL_B1SRR_SIZE                                  0x1
#define _B1SIDL_B1SRR_LENGTH                                0x1
#define _B1SIDL_B1SRR_MASK                                  0x10
#define _B1SIDL_B1SID0_POSN                                 0x5
#define _B1SIDL_B1SID0_POSITION                             0x5
#define _B1SIDL_B1SID0_SIZE                                 0x1
#define _B1SIDL_B1SID0_LENGTH                               0x1
#define _B1SIDL_B1SID0_MASK                                 0x20
#define _B1SIDL_B1SID1_POSN                                 0x6
#define _B1SIDL_B1SID1_POSITION                             0x6
#define _B1SIDL_B1SID1_SIZE                                 0x1
#define _B1SIDL_B1SID1_LENGTH                               0x1
#define _B1SIDL_B1SID1_MASK                                 0x40
#define _B1SIDL_B1SID2_POSN                                 0x7
#define _B1SIDL_B1SID2_POSITION                             0x7
#define _B1SIDL_B1SID2_SIZE                                 0x1
#define _B1SIDL_B1SID2_LENGTH                               0x1
#define _B1SIDL_B1SID2_MASK                                 0x80

// Register: B1EIDH
#define B1EIDH B1EIDH
extern volatile unsigned char           B1EIDH              __at(0xE33);
#ifndef _LIB_BUILD
asm("B1EIDH equ 0E33h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned B1EID8                 :1;
        unsigned B1EID9                 :1;
        unsigned B1EID10                :1;
        unsigned B1EID11                :1;
        unsigned B1EID12                :1;
        unsigned B1EID13                :1;
        unsigned B1EID14                :1;
        unsigned B1EID15                :1;
    };
} B1EIDHbits_t;
extern volatile B1EIDHbits_t B1EIDHbits __at(0xE33);
// bitfield macros
#define _B1EIDH_EID8_POSN                                   0x0
#define _B1EIDH_EID8_POSITION                               0x0
#define _B1EIDH_EID8_SIZE                                   0x1
#define _B1EIDH_EID8_LENGTH                                 0x1
#define _B1EIDH_EID8_MASK                                   0x1
#define _B1EIDH_EID9_POSN                                   0x1
#define _B1EIDH_EID9_POSITION                               0x1
#define _B1EIDH_EID9_SIZE                                   0x1
#define _B1EIDH_EID9_LENGTH                                 0x1
#define _B1EIDH_EID9_MASK                                   0x2
#define _B1EIDH_EID10_POSN                                  0x2
#define _B1EIDH_EID10_POSITION                              0x2
#define _B1EIDH_EID10_SIZE                                  0x1
#define _B1EIDH_EID10_LENGTH                                0x1
#define _B1EIDH_EID10_MASK                                  0x4
#define _B1EIDH_EID11_POSN                                  0x3
#define _B1EIDH_EID11_POSITION                              0x3
#define _B1EIDH_EID11_SIZE                                  0x1
#define _B1EIDH_EID11_LENGTH                                0x1
#define _B1EIDH_EID11_MASK                                  0x8
#define _B1EIDH_EID12_POSN                                  0x4
#define _B1EIDH_EID12_POSITION                              0x4
#define _B1EIDH_EID12_SIZE                                  0x1
#define _B1EIDH_EID12_LENGTH                                0x1
#define _B1EIDH_EID12_MASK                                  0x10
#define _B1EIDH_EID13_POSN                                  0x5
#define _B1EIDH_EID13_POSITION                              0x5
#define _B1EIDH_EID13_SIZE                                  0x1
#define _B1EIDH_EID13_LENGTH                                0x1
#define _B1EIDH_EID13_MASK                                  0x20
#define _B1EIDH_EID14_POSN                                  0x6
#define _B1EIDH_EID14_POSITION                              0x6
#define _B1EIDH_EID14_SIZE                                  0x1
#define _B1EIDH_EID14_LENGTH                                0x1
#define _B1EIDH_EID14_MASK                                  0x40
#define _B1EIDH_EID15_POSN                                  0x7
#define _B1EIDH_EID15_POSITION                              0x7
#define _B1EIDH_EID15_SIZE                                  0x1
#define _B1EIDH_EID15_LENGTH                                0x1
#define _B1EIDH_EID15_MASK                                  0x80
#define _B1EIDH_B1EID8_POSN                                 0x0
#define _B1EIDH_B1EID8_POSITION                             0x0
#define _B1EIDH_B1EID8_SIZE                                 0x1
#define _B1EIDH_B1EID8_LENGTH                               0x1
#define _B1EIDH_B1EID8_MASK                                 0x1
#define _B1EIDH_B1EID9_POSN                                 0x1
#define _B1EIDH_B1EID9_POSITION                             0x1
#define _B1EIDH_B1EID9_SIZE                                 0x1
#define _B1EIDH_B1EID9_LENGTH                               0x1
#define _B1EIDH_B1EID9_MASK                                 0x2
#define _B1EIDH_B1EID10_POSN                                0x2
#define _B1EIDH_B1EID10_POSITION                            0x2
#define _B1EIDH_B1EID10_SIZE                                0x1
#define _B1EIDH_B1EID10_LENGTH                              0x1
#define _B1EIDH_B1EID10_MASK                                0x4
#define _B1EIDH_B1EID11_POSN                                0x3
#define _B1EIDH_B1EID11_POSITION                            0x3
#define _B1EIDH_B1EID11_SIZE                                0x1
#define _B1EIDH_B1EID11_LENGTH                              0x1
#define _B1EIDH_B1EID11_MASK                                0x8
#define _B1EIDH_B1EID12_POSN                                0x4
#define _B1EIDH_B1EID12_POSITION                            0x4
#define _B1EIDH_B1EID12_SIZE                                0x1
#define _B1EIDH_B1EID12_LENGTH                              0x1
#define _B1EIDH_B1EID12_MASK                                0x10
#define _B1EIDH_B1EID13_POSN                                0x5
#define _B1EIDH_B1EID13_POSITION                            0x5
#define _B1EIDH_B1EID13_SIZE                                0x1
#define _B1EIDH_B1EID13_LENGTH                              0x1
#define _B1EIDH_B1EID13_MASK                                0x20
#define _B1EIDH_B1EID14_POSN                                0x6
#define _B1EIDH_B1EID14_POSITION                            0x6
#define _B1EIDH_B1EID14_SIZE                                0x1
#define _B1EIDH_B1EID14_LENGTH                              0x1
#define _B1EIDH_B1EID14_MASK                                0x40
#define _B1EIDH_B1EID15_POSN                                0x7
#define _B1EIDH_B1EID15_POSITION                            0x7
#define _B1EIDH_B1EID15_SIZE                                0x1
#define _B1EIDH_B1EID15_LENGTH                              0x1
#define _B1EIDH_B1EID15_MASK                                0x80

// Register: B1EIDL
#define B1EIDL B1EIDL
extern volatile unsigned char           B1EIDL              __at(0xE34);
#ifndef _LIB_BUILD
asm("B1EIDL equ 0E34h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned B1EID0                 :1;
        unsigned B1EID1                 :1;
        unsigned B1EID2                 :1;
        unsigned B1EID3                 :1;
        unsigned B1EID4                 :1;
        unsigned B1EID5                 :1;
        unsigned B1EID6                 :1;
        unsigned B1EID7                 :1;
    };
} B1EIDLbits_t;
extern volatile B1EIDLbits_t B1EIDLbits __at(0xE34);
// bitfield macros
#define _B1EIDL_EID0_POSN                                   0x0
#define _B1EIDL_EID0_POSITION                               0x0
#define _B1EIDL_EID0_SIZE                                   0x1
#define _B1EIDL_EID0_LENGTH                                 0x1
#define _B1EIDL_EID0_MASK                                   0x1
#define _B1EIDL_EID1_POSN                                   0x1
#define _B1EIDL_EID1_POSITION                               0x1
#define _B1EIDL_EID1_SIZE                                   0x1
#define _B1EIDL_EID1_LENGTH                                 0x1
#define _B1EIDL_EID1_MASK                                   0x2
#define _B1EIDL_EID2_POSN                                   0x2
#define _B1EIDL_EID2_POSITION                               0x2
#define _B1EIDL_EID2_SIZE                                   0x1
#define _B1EIDL_EID2_LENGTH                                 0x1
#define _B1EIDL_EID2_MASK                                   0x4
#define _B1EIDL_EID3_POSN                                   0x3
#define _B1EIDL_EID3_POSITION                               0x3
#define _B1EIDL_EID3_SIZE                                   0x1
#define _B1EIDL_EID3_LENGTH                                 0x1
#define _B1EIDL_EID3_MASK                                   0x8
#define _B1EIDL_EID4_POSN                                   0x4
#define _B1EIDL_EID4_POSITION                               0x4
#define _B1EIDL_EID4_SIZE                                   0x1
#define _B1EIDL_EID4_LENGTH                                 0x1
#define _B1EIDL_EID4_MASK                                   0x10
#define _B1EIDL_EID5_POSN                                   0x5
#define _B1EIDL_EID5_POSITION                               0x5
#define _B1EIDL_EID5_SIZE                                   0x1
#define _B1EIDL_EID5_LENGTH                                 0x1
#define _B1EIDL_EID5_MASK                                   0x20
#define _B1EIDL_EID6_POSN                                   0x6
#define _B1EIDL_EID6_POSITION                               0x6
#define _B1EIDL_EID6_SIZE                                   0x1
#define _B1EIDL_EID6_LENGTH                                 0x1
#define _B1EIDL_EID6_MASK                                   0x40
#define _B1EIDL_EID7_POSN                                   0x7
#define _B1EIDL_EID7_POSITION                               0x7
#define _B1EIDL_EID7_SIZE                                   0x1
#define _B1EIDL_EID7_LENGTH                                 0x1
#define _B1EIDL_EID7_MASK                                   0x80
#define _B1EIDL_B1EID0_POSN                                 0x0
#define _B1EIDL_B1EID0_POSITION                             0x0
#define _B1EIDL_B1EID0_SIZE                                 0x1
#define _B1EIDL_B1EID0_LENGTH                               0x1
#define _B1EIDL_B1EID0_MASK                                 0x1
#define _B1EIDL_B1EID1_POSN                                 0x1
#define _B1EIDL_B1EID1_POSITION                             0x1
#define _B1EIDL_B1EID1_SIZE                                 0x1
#define _B1EIDL_B1EID1_LENGTH                               0x1
#define _B1EIDL_B1EID1_MASK                                 0x2
#define _B1EIDL_B1EID2_POSN                                 0x2
#define _B1EIDL_B1EID2_POSITION                             0x2
#define _B1EIDL_B1EID2_SIZE                                 0x1
#define _B1EIDL_B1EID2_LENGTH                               0x1
#define _B1EIDL_B1EID2_MASK                                 0x4
#define _B1EIDL_B1EID3_POSN                                 0x3
#define _B1EIDL_B1EID3_POSITION                             0x3
#define _B1EIDL_B1EID3_SIZE                                 0x1
#define _B1EIDL_B1EID3_LENGTH                               0x1
#define _B1EIDL_B1EID3_MASK                                 0x8
#define _B1EIDL_B1EID4_POSN                                 0x4
#define _B1EIDL_B1EID4_POSITION                             0x4
#define _B1EIDL_B1EID4_SIZE                                 0x1
#define _B1EIDL_B1EID4_LENGTH                               0x1
#define _B1EIDL_B1EID4_MASK                                 0x10
#define _B1EIDL_B1EID5_POSN                                 0x5
#define _B1EIDL_B1EID5_POSITION                             0x5
#define _B1EIDL_B1EID5_SIZE                                 0x1
#define _B1EIDL_B1EID5_LENGTH                               0x1
#define _B1EIDL_B1EID5_MASK                                 0x20
#define _B1EIDL_B1EID6_POSN                                 0x6
#define _B1EIDL_B1EID6_POSITION                             0x6
#define _B1EIDL_B1EID6_SIZE                                 0x1
#define _B1EIDL_B1EID6_LENGTH                               0x1
#define _B1EIDL_B1EID6_MASK                                 0x40
#define _B1EIDL_B1EID7_POSN                                 0x7
#define _B1EIDL_B1EID7_POSITION                             0x7
#define _B1EIDL_B1EID7_SIZE                                 0x1
#define _B1EIDL_B1EID7_LENGTH                               0x1
#define _B1EIDL_B1EID7_MASK                                 0x80

// Register: B1DLC
#define B1DLC B1DLC
extern volatile unsigned char           B1DLC               __at(0xE35);
#ifndef _LIB_BUILD
asm("B1DLC equ 0E35h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RXRTR                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned RESRB0                 :1;
        unsigned RESRB1                 :1;
        unsigned TXRTR                  :1;
    };
    struct {
        unsigned B1DLC0                 :1;
        unsigned B1DLC1                 :1;
        unsigned B1DLC2                 :1;
        unsigned B1DLC3                 :1;
        unsigned B1RB0                  :1;
        unsigned B1RB1                  :1;
        unsigned B1RXRTR                :1;
    };
} B1DLCbits_t;
extern volatile B1DLCbits_t B1DLCbits __at(0xE35);
// bitfield macros
#define _B1DLC_DLC0_POSN                                    0x0
#define _B1DLC_DLC0_POSITION                                0x0
#define _B1DLC_DLC0_SIZE                                    0x1
#define _B1DLC_DLC0_LENGTH                                  0x1
#define _B1DLC_DLC0_MASK                                    0x1
#define _B1DLC_DLC1_POSN                                    0x1
#define _B1DLC_DLC1_POSITION                                0x1
#define _B1DLC_DLC1_SIZE                                    0x1
#define _B1DLC_DLC1_LENGTH                                  0x1
#define _B1DLC_DLC1_MASK                                    0x2
#define _B1DLC_DLC2_POSN                                    0x2
#define _B1DLC_DLC2_POSITION                                0x2
#define _B1DLC_DLC2_SIZE                                    0x1
#define _B1DLC_DLC2_LENGTH                                  0x1
#define _B1DLC_DLC2_MASK                                    0x4
#define _B1DLC_DLC3_POSN                                    0x3
#define _B1DLC_DLC3_POSITION                                0x3
#define _B1DLC_DLC3_SIZE                                    0x1
#define _B1DLC_DLC3_LENGTH                                  0x1
#define _B1DLC_DLC3_MASK                                    0x8
#define _B1DLC_RB0_POSN                                     0x4
#define _B1DLC_RB0_POSITION                                 0x4
#define _B1DLC_RB0_SIZE                                     0x1
#define _B1DLC_RB0_LENGTH                                   0x1
#define _B1DLC_RB0_MASK                                     0x10
#define _B1DLC_RB1_POSN                                     0x5
#define _B1DLC_RB1_POSITION                                 0x5
#define _B1DLC_RB1_SIZE                                     0x1
#define _B1DLC_RB1_LENGTH                                   0x1
#define _B1DLC_RB1_MASK                                     0x20
#define _B1DLC_RXRTR_POSN                                   0x6
#define _B1DLC_RXRTR_POSITION                               0x6
#define _B1DLC_RXRTR_SIZE                                   0x1
#define _B1DLC_RXRTR_LENGTH                                 0x1
#define _B1DLC_RXRTR_MASK                                   0x40
#define _B1DLC_RESRB0_POSN                                  0x4
#define _B1DLC_RESRB0_POSITION                              0x4
#define _B1DLC_RESRB0_SIZE                                  0x1
#define _B1DLC_RESRB0_LENGTH                                0x1
#define _B1DLC_RESRB0_MASK                                  0x10
#define _B1DLC_RESRB1_POSN                                  0x5
#define _B1DLC_RESRB1_POSITION                              0x5
#define _B1DLC_RESRB1_SIZE                                  0x1
#define _B1DLC_RESRB1_LENGTH                                0x1
#define _B1DLC_RESRB1_MASK                                  0x20
#define _B1DLC_TXRTR_POSN                                   0x6
#define _B1DLC_TXRTR_POSITION                               0x6
#define _B1DLC_TXRTR_SIZE                                   0x1
#define _B1DLC_TXRTR_LENGTH                                 0x1
#define _B1DLC_TXRTR_MASK                                   0x40
#define _B1DLC_B1DLC0_POSN                                  0x0
#define _B1DLC_B1DLC0_POSITION                              0x0
#define _B1DLC_B1DLC0_SIZE                                  0x1
#define _B1DLC_B1DLC0_LENGTH                                0x1
#define _B1DLC_B1DLC0_MASK                                  0x1
#define _B1DLC_B1DLC1_POSN                                  0x1
#define _B1DLC_B1DLC1_POSITION                              0x1
#define _B1DLC_B1DLC1_SIZE                                  0x1
#define _B1DLC_B1DLC1_LENGTH                                0x1
#define _B1DLC_B1DLC1_MASK                                  0x2
#define _B1DLC_B1DLC2_POSN                                  0x2
#define _B1DLC_B1DLC2_POSITION                              0x2
#define _B1DLC_B1DLC2_SIZE                                  0x1
#define _B1DLC_B1DLC2_LENGTH                                0x1
#define _B1DLC_B1DLC2_MASK                                  0x4
#define _B1DLC_B1DLC3_POSN                                  0x3
#define _B1DLC_B1DLC3_POSITION                              0x3
#define _B1DLC_B1DLC3_SIZE                                  0x1
#define _B1DLC_B1DLC3_LENGTH                                0x1
#define _B1DLC_B1DLC3_MASK                                  0x8
#define _B1DLC_B1RB0_POSN                                   0x4
#define _B1DLC_B1RB0_POSITION                               0x4
#define _B1DLC_B1RB0_SIZE                                   0x1
#define _B1DLC_B1RB0_LENGTH                                 0x1
#define _B1DLC_B1RB0_MASK                                   0x10
#define _B1DLC_B1RB1_POSN                                   0x5
#define _B1DLC_B1RB1_POSITION                               0x5
#define _B1DLC_B1RB1_SIZE                                   0x1
#define _B1DLC_B1RB1_LENGTH                                 0x1
#define _B1DLC_B1RB1_MASK                                   0x20
#define _B1DLC_B1RXRTR_POSN                                 0x6
#define _B1DLC_B1RXRTR_POSITION                             0x6
#define _B1DLC_B1RXRTR_SIZE                                 0x1
#define _B1DLC_B1RXRTR_LENGTH                               0x1
#define _B1DLC_B1RXRTR_MASK                                 0x40

// Register: B1D0
#define B1D0 B1D0
extern volatile unsigned char           B1D0                __at(0xE36);
#ifndef _LIB_BUILD
asm("B1D0 equ 0E36h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B1D00                  :1;
        unsigned B1D01                  :1;
        unsigned B1D02                  :1;
        unsigned B1D03                  :1;
        unsigned B1D04                  :1;
        unsigned B1D05                  :1;
        unsigned B1D06                  :1;
        unsigned B1D07                  :1;
    };
} B1D0bits_t;
extern volatile B1D0bits_t B1D0bits __at(0xE36);
// bitfield macros
#define _B1D0_B1D00_POSN                                    0x0
#define _B1D0_B1D00_POSITION                                0x0
#define _B1D0_B1D00_SIZE                                    0x1
#define _B1D0_B1D00_LENGTH                                  0x1
#define _B1D0_B1D00_MASK                                    0x1
#define _B1D0_B1D01_POSN                                    0x1
#define _B1D0_B1D01_POSITION                                0x1
#define _B1D0_B1D01_SIZE                                    0x1
#define _B1D0_B1D01_LENGTH                                  0x1
#define _B1D0_B1D01_MASK                                    0x2
#define _B1D0_B1D02_POSN                                    0x2
#define _B1D0_B1D02_POSITION                                0x2
#define _B1D0_B1D02_SIZE                                    0x1
#define _B1D0_B1D02_LENGTH                                  0x1
#define _B1D0_B1D02_MASK                                    0x4
#define _B1D0_B1D03_POSN                                    0x3
#define _B1D0_B1D03_POSITION                                0x3
#define _B1D0_B1D03_SIZE                                    0x1
#define _B1D0_B1D03_LENGTH                                  0x1
#define _B1D0_B1D03_MASK                                    0x8
#define _B1D0_B1D04_POSN                                    0x4
#define _B1D0_B1D04_POSITION                                0x4
#define _B1D0_B1D04_SIZE                                    0x1
#define _B1D0_B1D04_LENGTH                                  0x1
#define _B1D0_B1D04_MASK                                    0x10
#define _B1D0_B1D05_POSN                                    0x5
#define _B1D0_B1D05_POSITION                                0x5
#define _B1D0_B1D05_SIZE                                    0x1
#define _B1D0_B1D05_LENGTH                                  0x1
#define _B1D0_B1D05_MASK                                    0x20
#define _B1D0_B1D06_POSN                                    0x6
#define _B1D0_B1D06_POSITION                                0x6
#define _B1D0_B1D06_SIZE                                    0x1
#define _B1D0_B1D06_LENGTH                                  0x1
#define _B1D0_B1D06_MASK                                    0x40
#define _B1D0_B1D07_POSN                                    0x7
#define _B1D0_B1D07_POSITION                                0x7
#define _B1D0_B1D07_SIZE                                    0x1
#define _B1D0_B1D07_LENGTH                                  0x1
#define _B1D0_B1D07_MASK                                    0x80

// Register: B1D1
#define B1D1 B1D1
extern volatile unsigned char           B1D1                __at(0xE37);
#ifndef _LIB_BUILD
asm("B1D1 equ 0E37h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B1D10                  :1;
        unsigned B1D11                  :1;
        unsigned B1D12                  :1;
        unsigned B1D13                  :1;
        unsigned B1D14                  :1;
        unsigned B1D15                  :1;
        unsigned B1D16                  :1;
        unsigned B1D17                  :1;
    };
} B1D1bits_t;
extern volatile B1D1bits_t B1D1bits __at(0xE37);
// bitfield macros
#define _B1D1_B1D10_POSN                                    0x0
#define _B1D1_B1D10_POSITION                                0x0
#define _B1D1_B1D10_SIZE                                    0x1
#define _B1D1_B1D10_LENGTH                                  0x1
#define _B1D1_B1D10_MASK                                    0x1
#define _B1D1_B1D11_POSN                                    0x1
#define _B1D1_B1D11_POSITION                                0x1
#define _B1D1_B1D11_SIZE                                    0x1
#define _B1D1_B1D11_LENGTH                                  0x1
#define _B1D1_B1D11_MASK                                    0x2
#define _B1D1_B1D12_POSN                                    0x2
#define _B1D1_B1D12_POSITION                                0x2
#define _B1D1_B1D12_SIZE                                    0x1
#define _B1D1_B1D12_LENGTH                                  0x1
#define _B1D1_B1D12_MASK                                    0x4
#define _B1D1_B1D13_POSN                                    0x3
#define _B1D1_B1D13_POSITION                                0x3
#define _B1D1_B1D13_SIZE                                    0x1
#define _B1D1_B1D13_LENGTH                                  0x1
#define _B1D1_B1D13_MASK                                    0x8
#define _B1D1_B1D14_POSN                                    0x4
#define _B1D1_B1D14_POSITION                                0x4
#define _B1D1_B1D14_SIZE                                    0x1
#define _B1D1_B1D14_LENGTH                                  0x1
#define _B1D1_B1D14_MASK                                    0x10
#define _B1D1_B1D15_POSN                                    0x5
#define _B1D1_B1D15_POSITION                                0x5
#define _B1D1_B1D15_SIZE                                    0x1
#define _B1D1_B1D15_LENGTH                                  0x1
#define _B1D1_B1D15_MASK                                    0x20
#define _B1D1_B1D16_POSN                                    0x6
#define _B1D1_B1D16_POSITION                                0x6
#define _B1D1_B1D16_SIZE                                    0x1
#define _B1D1_B1D16_LENGTH                                  0x1
#define _B1D1_B1D16_MASK                                    0x40
#define _B1D1_B1D17_POSN                                    0x7
#define _B1D1_B1D17_POSITION                                0x7
#define _B1D1_B1D17_SIZE                                    0x1
#define _B1D1_B1D17_LENGTH                                  0x1
#define _B1D1_B1D17_MASK                                    0x80

// Register: B1D2
#define B1D2 B1D2
extern volatile unsigned char           B1D2                __at(0xE38);
#ifndef _LIB_BUILD
asm("B1D2 equ 0E38h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B1D20                  :1;
        unsigned B1D21                  :1;
        unsigned B1D22                  :1;
        unsigned B1D23                  :1;
        unsigned B1D24                  :1;
        unsigned B1D25                  :1;
        unsigned B1D26                  :1;
        unsigned B1D27                  :1;
    };
} B1D2bits_t;
extern volatile B1D2bits_t B1D2bits __at(0xE38);
// bitfield macros
#define _B1D2_B1D20_POSN                                    0x0
#define _B1D2_B1D20_POSITION                                0x0
#define _B1D2_B1D20_SIZE                                    0x1
#define _B1D2_B1D20_LENGTH                                  0x1
#define _B1D2_B1D20_MASK                                    0x1
#define _B1D2_B1D21_POSN                                    0x1
#define _B1D2_B1D21_POSITION                                0x1
#define _B1D2_B1D21_SIZE                                    0x1
#define _B1D2_B1D21_LENGTH                                  0x1
#define _B1D2_B1D21_MASK                                    0x2
#define _B1D2_B1D22_POSN                                    0x2
#define _B1D2_B1D22_POSITION                                0x2
#define _B1D2_B1D22_SIZE                                    0x1
#define _B1D2_B1D22_LENGTH                                  0x1
#define _B1D2_B1D22_MASK                                    0x4
#define _B1D2_B1D23_POSN                                    0x3
#define _B1D2_B1D23_POSITION                                0x3
#define _B1D2_B1D23_SIZE                                    0x1
#define _B1D2_B1D23_LENGTH                                  0x1
#define _B1D2_B1D23_MASK                                    0x8
#define _B1D2_B1D24_POSN                                    0x4
#define _B1D2_B1D24_POSITION                                0x4
#define _B1D2_B1D24_SIZE                                    0x1
#define _B1D2_B1D24_LENGTH                                  0x1
#define _B1D2_B1D24_MASK                                    0x10
#define _B1D2_B1D25_POSN                                    0x5
#define _B1D2_B1D25_POSITION                                0x5
#define _B1D2_B1D25_SIZE                                    0x1
#define _B1D2_B1D25_LENGTH                                  0x1
#define _B1D2_B1D25_MASK                                    0x20
#define _B1D2_B1D26_POSN                                    0x6
#define _B1D2_B1D26_POSITION                                0x6
#define _B1D2_B1D26_SIZE                                    0x1
#define _B1D2_B1D26_LENGTH                                  0x1
#define _B1D2_B1D26_MASK                                    0x40
#define _B1D2_B1D27_POSN                                    0x7
#define _B1D2_B1D27_POSITION                                0x7
#define _B1D2_B1D27_SIZE                                    0x1
#define _B1D2_B1D27_LENGTH                                  0x1
#define _B1D2_B1D27_MASK                                    0x80

// Register: B1D3
#define B1D3 B1D3
extern volatile unsigned char           B1D3                __at(0xE39);
#ifndef _LIB_BUILD
asm("B1D3 equ 0E39h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B1D30                  :1;
        unsigned B1D31                  :1;
        unsigned B1D32                  :1;
        unsigned B1D33                  :1;
        unsigned B1D34                  :1;
        unsigned B1D35                  :1;
        unsigned B1D36                  :1;
        unsigned B1D37                  :1;
    };
} B1D3bits_t;
extern volatile B1D3bits_t B1D3bits __at(0xE39);
// bitfield macros
#define _B1D3_B1D30_POSN                                    0x0
#define _B1D3_B1D30_POSITION                                0x0
#define _B1D3_B1D30_SIZE                                    0x1
#define _B1D3_B1D30_LENGTH                                  0x1
#define _B1D3_B1D30_MASK                                    0x1
#define _B1D3_B1D31_POSN                                    0x1
#define _B1D3_B1D31_POSITION                                0x1
#define _B1D3_B1D31_SIZE                                    0x1
#define _B1D3_B1D31_LENGTH                                  0x1
#define _B1D3_B1D31_MASK                                    0x2
#define _B1D3_B1D32_POSN                                    0x2
#define _B1D3_B1D32_POSITION                                0x2
#define _B1D3_B1D32_SIZE                                    0x1
#define _B1D3_B1D32_LENGTH                                  0x1
#define _B1D3_B1D32_MASK                                    0x4
#define _B1D3_B1D33_POSN                                    0x3
#define _B1D3_B1D33_POSITION                                0x3
#define _B1D3_B1D33_SIZE                                    0x1
#define _B1D3_B1D33_LENGTH                                  0x1
#define _B1D3_B1D33_MASK                                    0x8
#define _B1D3_B1D34_POSN                                    0x4
#define _B1D3_B1D34_POSITION                                0x4
#define _B1D3_B1D34_SIZE                                    0x1
#define _B1D3_B1D34_LENGTH                                  0x1
#define _B1D3_B1D34_MASK                                    0x10
#define _B1D3_B1D35_POSN                                    0x5
#define _B1D3_B1D35_POSITION                                0x5
#define _B1D3_B1D35_SIZE                                    0x1
#define _B1D3_B1D35_LENGTH                                  0x1
#define _B1D3_B1D35_MASK                                    0x20
#define _B1D3_B1D36_POSN                                    0x6
#define _B1D3_B1D36_POSITION                                0x6
#define _B1D3_B1D36_SIZE                                    0x1
#define _B1D3_B1D36_LENGTH                                  0x1
#define _B1D3_B1D36_MASK                                    0x40
#define _B1D3_B1D37_POSN                                    0x7
#define _B1D3_B1D37_POSITION                                0x7
#define _B1D3_B1D37_SIZE                                    0x1
#define _B1D3_B1D37_LENGTH                                  0x1
#define _B1D3_B1D37_MASK                                    0x80

// Register: B1D4
#define B1D4 B1D4
extern volatile unsigned char           B1D4                __at(0xE3A);
#ifndef _LIB_BUILD
asm("B1D4 equ 0E3Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B1D40                  :1;
        unsigned B1D41                  :1;
        unsigned B1D42                  :1;
        unsigned B1D43                  :1;
        unsigned B1D44                  :1;
        unsigned B1D45                  :1;
        unsigned B1D46                  :1;
        unsigned B1D47                  :1;
    };
} B1D4bits_t;
extern volatile B1D4bits_t B1D4bits __at(0xE3A);
// bitfield macros
#define _B1D4_B1D40_POSN                                    0x0
#define _B1D4_B1D40_POSITION                                0x0
#define _B1D4_B1D40_SIZE                                    0x1
#define _B1D4_B1D40_LENGTH                                  0x1
#define _B1D4_B1D40_MASK                                    0x1
#define _B1D4_B1D41_POSN                                    0x1
#define _B1D4_B1D41_POSITION                                0x1
#define _B1D4_B1D41_SIZE                                    0x1
#define _B1D4_B1D41_LENGTH                                  0x1
#define _B1D4_B1D41_MASK                                    0x2
#define _B1D4_B1D42_POSN                                    0x2
#define _B1D4_B1D42_POSITION                                0x2
#define _B1D4_B1D42_SIZE                                    0x1
#define _B1D4_B1D42_LENGTH                                  0x1
#define _B1D4_B1D42_MASK                                    0x4
#define _B1D4_B1D43_POSN                                    0x3
#define _B1D4_B1D43_POSITION                                0x3
#define _B1D4_B1D43_SIZE                                    0x1
#define _B1D4_B1D43_LENGTH                                  0x1
#define _B1D4_B1D43_MASK                                    0x8
#define _B1D4_B1D44_POSN                                    0x4
#define _B1D4_B1D44_POSITION                                0x4
#define _B1D4_B1D44_SIZE                                    0x1
#define _B1D4_B1D44_LENGTH                                  0x1
#define _B1D4_B1D44_MASK                                    0x10
#define _B1D4_B1D45_POSN                                    0x5
#define _B1D4_B1D45_POSITION                                0x5
#define _B1D4_B1D45_SIZE                                    0x1
#define _B1D4_B1D45_LENGTH                                  0x1
#define _B1D4_B1D45_MASK                                    0x20
#define _B1D4_B1D46_POSN                                    0x6
#define _B1D4_B1D46_POSITION                                0x6
#define _B1D4_B1D46_SIZE                                    0x1
#define _B1D4_B1D46_LENGTH                                  0x1
#define _B1D4_B1D46_MASK                                    0x40
#define _B1D4_B1D47_POSN                                    0x7
#define _B1D4_B1D47_POSITION                                0x7
#define _B1D4_B1D47_SIZE                                    0x1
#define _B1D4_B1D47_LENGTH                                  0x1
#define _B1D4_B1D47_MASK                                    0x80

// Register: B1D5
#define B1D5 B1D5
extern volatile unsigned char           B1D5                __at(0xE3B);
#ifndef _LIB_BUILD
asm("B1D5 equ 0E3Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B1D50                  :1;
        unsigned B1D51                  :1;
        unsigned B1D52                  :1;
        unsigned B1D53                  :1;
        unsigned B1D54                  :1;
        unsigned B1D55                  :1;
        unsigned B1D56                  :1;
        unsigned B1D57                  :1;
    };
} B1D5bits_t;
extern volatile B1D5bits_t B1D5bits __at(0xE3B);
// bitfield macros
#define _B1D5_B1D50_POSN                                    0x0
#define _B1D5_B1D50_POSITION                                0x0
#define _B1D5_B1D50_SIZE                                    0x1
#define _B1D5_B1D50_LENGTH                                  0x1
#define _B1D5_B1D50_MASK                                    0x1
#define _B1D5_B1D51_POSN                                    0x1
#define _B1D5_B1D51_POSITION                                0x1
#define _B1D5_B1D51_SIZE                                    0x1
#define _B1D5_B1D51_LENGTH                                  0x1
#define _B1D5_B1D51_MASK                                    0x2
#define _B1D5_B1D52_POSN                                    0x2
#define _B1D5_B1D52_POSITION                                0x2
#define _B1D5_B1D52_SIZE                                    0x1
#define _B1D5_B1D52_LENGTH                                  0x1
#define _B1D5_B1D52_MASK                                    0x4
#define _B1D5_B1D53_POSN                                    0x3
#define _B1D5_B1D53_POSITION                                0x3
#define _B1D5_B1D53_SIZE                                    0x1
#define _B1D5_B1D53_LENGTH                                  0x1
#define _B1D5_B1D53_MASK                                    0x8
#define _B1D5_B1D54_POSN                                    0x4
#define _B1D5_B1D54_POSITION                                0x4
#define _B1D5_B1D54_SIZE                                    0x1
#define _B1D5_B1D54_LENGTH                                  0x1
#define _B1D5_B1D54_MASK                                    0x10
#define _B1D5_B1D55_POSN                                    0x5
#define _B1D5_B1D55_POSITION                                0x5
#define _B1D5_B1D55_SIZE                                    0x1
#define _B1D5_B1D55_LENGTH                                  0x1
#define _B1D5_B1D55_MASK                                    0x20
#define _B1D5_B1D56_POSN                                    0x6
#define _B1D5_B1D56_POSITION                                0x6
#define _B1D5_B1D56_SIZE                                    0x1
#define _B1D5_B1D56_LENGTH                                  0x1
#define _B1D5_B1D56_MASK                                    0x40
#define _B1D5_B1D57_POSN                                    0x7
#define _B1D5_B1D57_POSITION                                0x7
#define _B1D5_B1D57_SIZE                                    0x1
#define _B1D5_B1D57_LENGTH                                  0x1
#define _B1D5_B1D57_MASK                                    0x80

// Register: B1D6
#define B1D6 B1D6
extern volatile unsigned char           B1D6                __at(0xE3C);
#ifndef _LIB_BUILD
asm("B1D6 equ 0E3Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B1D60                  :1;
        unsigned B1D61                  :1;
        unsigned B1D62                  :1;
        unsigned B1D63                  :1;
        unsigned B1D64                  :1;
        unsigned B1D65                  :1;
        unsigned B1D66                  :1;
        unsigned B1D67                  :1;
    };
} B1D6bits_t;
extern volatile B1D6bits_t B1D6bits __at(0xE3C);
// bitfield macros
#define _B1D6_B1D60_POSN                                    0x0
#define _B1D6_B1D60_POSITION                                0x0
#define _B1D6_B1D60_SIZE                                    0x1
#define _B1D6_B1D60_LENGTH                                  0x1
#define _B1D6_B1D60_MASK                                    0x1
#define _B1D6_B1D61_POSN                                    0x1
#define _B1D6_B1D61_POSITION                                0x1
#define _B1D6_B1D61_SIZE                                    0x1
#define _B1D6_B1D61_LENGTH                                  0x1
#define _B1D6_B1D61_MASK                                    0x2
#define _B1D6_B1D62_POSN                                    0x2
#define _B1D6_B1D62_POSITION                                0x2
#define _B1D6_B1D62_SIZE                                    0x1
#define _B1D6_B1D62_LENGTH                                  0x1
#define _B1D6_B1D62_MASK                                    0x4
#define _B1D6_B1D63_POSN                                    0x3
#define _B1D6_B1D63_POSITION                                0x3
#define _B1D6_B1D63_SIZE                                    0x1
#define _B1D6_B1D63_LENGTH                                  0x1
#define _B1D6_B1D63_MASK                                    0x8
#define _B1D6_B1D64_POSN                                    0x4
#define _B1D6_B1D64_POSITION                                0x4
#define _B1D6_B1D64_SIZE                                    0x1
#define _B1D6_B1D64_LENGTH                                  0x1
#define _B1D6_B1D64_MASK                                    0x10
#define _B1D6_B1D65_POSN                                    0x5
#define _B1D6_B1D65_POSITION                                0x5
#define _B1D6_B1D65_SIZE                                    0x1
#define _B1D6_B1D65_LENGTH                                  0x1
#define _B1D6_B1D65_MASK                                    0x20
#define _B1D6_B1D66_POSN                                    0x6
#define _B1D6_B1D66_POSITION                                0x6
#define _B1D6_B1D66_SIZE                                    0x1
#define _B1D6_B1D66_LENGTH                                  0x1
#define _B1D6_B1D66_MASK                                    0x40
#define _B1D6_B1D67_POSN                                    0x7
#define _B1D6_B1D67_POSITION                                0x7
#define _B1D6_B1D67_SIZE                                    0x1
#define _B1D6_B1D67_LENGTH                                  0x1
#define _B1D6_B1D67_MASK                                    0x80

// Register: B1D7
#define B1D7 B1D7
extern volatile unsigned char           B1D7                __at(0xE3D);
#ifndef _LIB_BUILD
asm("B1D7 equ 0E3Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B1D70                  :1;
        unsigned B1D71                  :1;
        unsigned B1D72                  :1;
        unsigned B1D73                  :1;
        unsigned B1D74                  :1;
        unsigned B1D75                  :1;
        unsigned B1D76                  :1;
        unsigned B1D77                  :1;
    };
} B1D7bits_t;
extern volatile B1D7bits_t B1D7bits __at(0xE3D);
// bitfield macros
#define _B1D7_B1D70_POSN                                    0x0
#define _B1D7_B1D70_POSITION                                0x0
#define _B1D7_B1D70_SIZE                                    0x1
#define _B1D7_B1D70_LENGTH                                  0x1
#define _B1D7_B1D70_MASK                                    0x1
#define _B1D7_B1D71_POSN                                    0x1
#define _B1D7_B1D71_POSITION                                0x1
#define _B1D7_B1D71_SIZE                                    0x1
#define _B1D7_B1D71_LENGTH                                  0x1
#define _B1D7_B1D71_MASK                                    0x2
#define _B1D7_B1D72_POSN                                    0x2
#define _B1D7_B1D72_POSITION                                0x2
#define _B1D7_B1D72_SIZE                                    0x1
#define _B1D7_B1D72_LENGTH                                  0x1
#define _B1D7_B1D72_MASK                                    0x4
#define _B1D7_B1D73_POSN                                    0x3
#define _B1D7_B1D73_POSITION                                0x3
#define _B1D7_B1D73_SIZE                                    0x1
#define _B1D7_B1D73_LENGTH                                  0x1
#define _B1D7_B1D73_MASK                                    0x8
#define _B1D7_B1D74_POSN                                    0x4
#define _B1D7_B1D74_POSITION                                0x4
#define _B1D7_B1D74_SIZE                                    0x1
#define _B1D7_B1D74_LENGTH                                  0x1
#define _B1D7_B1D74_MASK                                    0x10
#define _B1D7_B1D75_POSN                                    0x5
#define _B1D7_B1D75_POSITION                                0x5
#define _B1D7_B1D75_SIZE                                    0x1
#define _B1D7_B1D75_LENGTH                                  0x1
#define _B1D7_B1D75_MASK                                    0x20
#define _B1D7_B1D76_POSN                                    0x6
#define _B1D7_B1D76_POSITION                                0x6
#define _B1D7_B1D76_SIZE                                    0x1
#define _B1D7_B1D76_LENGTH                                  0x1
#define _B1D7_B1D76_MASK                                    0x40
#define _B1D7_B1D77_POSN                                    0x7
#define _B1D7_B1D77_POSITION                                0x7
#define _B1D7_B1D77_SIZE                                    0x1
#define _B1D7_B1D77_LENGTH                                  0x1
#define _B1D7_B1D77_MASK                                    0x80

// Register: CANSTAT_RO8
#define CANSTAT_RO8 CANSTAT_RO8
extern volatile unsigned char           CANSTAT_RO8         __at(0xE3E);
#ifndef _LIB_BUILD
asm("CANSTAT_RO8 equ 0E3Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EICODE0                :1;
        unsigned EICODE1_ICODE0         :1;
        unsigned EICODE2_ICODE1         :1;
        unsigned EICODE3_ICODE2         :1;
        unsigned EICODE4                :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTAT_RO8bits_t;
extern volatile CANSTAT_RO8bits_t CANSTAT_RO8bits __at(0xE3E);
// bitfield macros
#define _CANSTAT_RO8_EICODE0_POSN                           0x0
#define _CANSTAT_RO8_EICODE0_POSITION                       0x0
#define _CANSTAT_RO8_EICODE0_SIZE                           0x1
#define _CANSTAT_RO8_EICODE0_LENGTH                         0x1
#define _CANSTAT_RO8_EICODE0_MASK                           0x1
#define _CANSTAT_RO8_EICODE1_ICODE0_POSN                    0x1
#define _CANSTAT_RO8_EICODE1_ICODE0_POSITION                0x1
#define _CANSTAT_RO8_EICODE1_ICODE0_SIZE                    0x1
#define _CANSTAT_RO8_EICODE1_ICODE0_LENGTH                  0x1
#define _CANSTAT_RO8_EICODE1_ICODE0_MASK                    0x2
#define _CANSTAT_RO8_EICODE2_ICODE1_POSN                    0x2
#define _CANSTAT_RO8_EICODE2_ICODE1_POSITION                0x2
#define _CANSTAT_RO8_EICODE2_ICODE1_SIZE                    0x1
#define _CANSTAT_RO8_EICODE2_ICODE1_LENGTH                  0x1
#define _CANSTAT_RO8_EICODE2_ICODE1_MASK                    0x4
#define _CANSTAT_RO8_EICODE3_ICODE2_POSN                    0x3
#define _CANSTAT_RO8_EICODE3_ICODE2_POSITION                0x3
#define _CANSTAT_RO8_EICODE3_ICODE2_SIZE                    0x1
#define _CANSTAT_RO8_EICODE3_ICODE2_LENGTH                  0x1
#define _CANSTAT_RO8_EICODE3_ICODE2_MASK                    0x8
#define _CANSTAT_RO8_EICODE4_POSN                           0x4
#define _CANSTAT_RO8_EICODE4_POSITION                       0x4
#define _CANSTAT_RO8_EICODE4_SIZE                           0x1
#define _CANSTAT_RO8_EICODE4_LENGTH                         0x1
#define _CANSTAT_RO8_EICODE4_MASK                           0x10
#define _CANSTAT_RO8_OPMODE0_POSN                           0x5
#define _CANSTAT_RO8_OPMODE0_POSITION                       0x5
#define _CANSTAT_RO8_OPMODE0_SIZE                           0x1
#define _CANSTAT_RO8_OPMODE0_LENGTH                         0x1
#define _CANSTAT_RO8_OPMODE0_MASK                           0x20
#define _CANSTAT_RO8_OPMODE1_POSN                           0x6
#define _CANSTAT_RO8_OPMODE1_POSITION                       0x6
#define _CANSTAT_RO8_OPMODE1_SIZE                           0x1
#define _CANSTAT_RO8_OPMODE1_LENGTH                         0x1
#define _CANSTAT_RO8_OPMODE1_MASK                           0x40
#define _CANSTAT_RO8_OPMODE2_POSN                           0x7
#define _CANSTAT_RO8_OPMODE2_POSITION                       0x7
#define _CANSTAT_RO8_OPMODE2_SIZE                           0x1
#define _CANSTAT_RO8_OPMODE2_LENGTH                         0x1
#define _CANSTAT_RO8_OPMODE2_MASK                           0x80

// Register: CANCON_RO8
#define CANCON_RO8 CANCON_RO8
extern volatile unsigned char           CANCON_RO8          __at(0xE3F);
#ifndef _LIB_BUILD
asm("CANCON_RO8 equ 0E3Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FP0                    :1;
        unsigned WIN0_FP1               :1;
        unsigned WIN1_FP2               :1;
        unsigned WIN2_FP3               :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
} CANCON_RO8bits_t;
extern volatile CANCON_RO8bits_t CANCON_RO8bits __at(0xE3F);
// bitfield macros
#define _CANCON_RO8_FP0_POSN                                0x0
#define _CANCON_RO8_FP0_POSITION                            0x0
#define _CANCON_RO8_FP0_SIZE                                0x1
#define _CANCON_RO8_FP0_LENGTH                              0x1
#define _CANCON_RO8_FP0_MASK                                0x1
#define _CANCON_RO8_WIN0_FP1_POSN                           0x1
#define _CANCON_RO8_WIN0_FP1_POSITION                       0x1
#define _CANCON_RO8_WIN0_FP1_SIZE                           0x1
#define _CANCON_RO8_WIN0_FP1_LENGTH                         0x1
#define _CANCON_RO8_WIN0_FP1_MASK                           0x2
#define _CANCON_RO8_WIN1_FP2_POSN                           0x2
#define _CANCON_RO8_WIN1_FP2_POSITION                       0x2
#define _CANCON_RO8_WIN1_FP2_SIZE                           0x1
#define _CANCON_RO8_WIN1_FP2_LENGTH                         0x1
#define _CANCON_RO8_WIN1_FP2_MASK                           0x4
#define _CANCON_RO8_WIN2_FP3_POSN                           0x3
#define _CANCON_RO8_WIN2_FP3_POSITION                       0x3
#define _CANCON_RO8_WIN2_FP3_SIZE                           0x1
#define _CANCON_RO8_WIN2_FP3_LENGTH                         0x1
#define _CANCON_RO8_WIN2_FP3_MASK                           0x8
#define _CANCON_RO8_ABAT_POSN                               0x4
#define _CANCON_RO8_ABAT_POSITION                           0x4
#define _CANCON_RO8_ABAT_SIZE                               0x1
#define _CANCON_RO8_ABAT_LENGTH                             0x1
#define _CANCON_RO8_ABAT_MASK                               0x10
#define _CANCON_RO8_REQOP0_POSN                             0x5
#define _CANCON_RO8_REQOP0_POSITION                         0x5
#define _CANCON_RO8_REQOP0_SIZE                             0x1
#define _CANCON_RO8_REQOP0_LENGTH                           0x1
#define _CANCON_RO8_REQOP0_MASK                             0x20
#define _CANCON_RO8_REQOP1_POSN                             0x6
#define _CANCON_RO8_REQOP1_POSITION                         0x6
#define _CANCON_RO8_REQOP1_SIZE                             0x1
#define _CANCON_RO8_REQOP1_LENGTH                           0x1
#define _CANCON_RO8_REQOP1_MASK                             0x40
#define _CANCON_RO8_REQOP2_POSN                             0x7
#define _CANCON_RO8_REQOP2_POSITION                         0x7
#define _CANCON_RO8_REQOP2_SIZE                             0x1
#define _CANCON_RO8_REQOP2_LENGTH                           0x1
#define _CANCON_RO8_REQOP2_MASK                             0x80

// Register: B2CON
#define B2CON B2CON
extern volatile unsigned char           B2CON               __at(0xE40);
#ifndef _LIB_BUILD
asm("B2CON equ 0E40h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FILHIT0_TXPRI0         :1;
        unsigned FILHIT1_TXPRI1         :1;
        unsigned FILHIT2_RTREN          :1;
        unsigned FILHIT3_TXREQ          :1;
        unsigned FILHIT4_TXERR          :1;
        unsigned RTRRO_TXLARB           :1;
        unsigned RXM1_TXABT             :1;
        unsigned RXFUL_TXBIF            :1;
    };
    struct {
        unsigned FILHIT0                :1;
        unsigned FILHIT1                :1;
        unsigned FILHIT2                :1;
        unsigned FILHIT3                :1;
        unsigned FILHIT4                :1;
        unsigned RTRRO                  :1;
        unsigned RXM1                   :1;
        unsigned RXFUL                  :1;
    };
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned RTREN                  :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
        unsigned TXBIF                  :1;
    };
    struct {
        unsigned B2FILHIT0              :1;
        unsigned B2FILHIT1              :1;
        unsigned B2FILHIT2              :1;
        unsigned B2FILHIT3              :1;
        unsigned B2FILHIT4              :1;
        unsigned B2RTRRO                :1;
        unsigned B2RXM1                 :1;
        unsigned B2RXFUL                :1;
    };
    struct {
        unsigned B2TXPRI0               :1;
        unsigned B2TXPRI1               :1;
        unsigned B2RTREN                :1;
        unsigned B2TXREQ                :1;
        unsigned B2TXERR                :1;
        unsigned B2TXLARB               :1;
        unsigned B2TXABT                :1;
        unsigned B2TXB3IF               :1;
    };
} B2CONbits_t;
extern volatile B2CONbits_t B2CONbits __at(0xE40);
// bitfield macros
#define _B2CON_FILHIT0_TXPRI0_POSN                          0x0
#define _B2CON_FILHIT0_TXPRI0_POSITION                      0x0
#define _B2CON_FILHIT0_TXPRI0_SIZE                          0x1
#define _B2CON_FILHIT0_TXPRI0_LENGTH                        0x1
#define _B2CON_FILHIT0_TXPRI0_MASK                          0x1
#define _B2CON_FILHIT1_TXPRI1_POSN                          0x1
#define _B2CON_FILHIT1_TXPRI1_POSITION                      0x1
#define _B2CON_FILHIT1_TXPRI1_SIZE                          0x1
#define _B2CON_FILHIT1_TXPRI1_LENGTH                        0x1
#define _B2CON_FILHIT1_TXPRI1_MASK                          0x2
#define _B2CON_FILHIT2_RTREN_POSN                           0x2
#define _B2CON_FILHIT2_RTREN_POSITION                       0x2
#define _B2CON_FILHIT2_RTREN_SIZE                           0x1
#define _B2CON_FILHIT2_RTREN_LENGTH                         0x1
#define _B2CON_FILHIT2_RTREN_MASK                           0x4
#define _B2CON_FILHIT3_TXREQ_POSN                           0x3
#define _B2CON_FILHIT3_TXREQ_POSITION                       0x3
#define _B2CON_FILHIT3_TXREQ_SIZE                           0x1
#define _B2CON_FILHIT3_TXREQ_LENGTH                         0x1
#define _B2CON_FILHIT3_TXREQ_MASK                           0x8
#define _B2CON_FILHIT4_TXERR_POSN                           0x4
#define _B2CON_FILHIT4_TXERR_POSITION                       0x4
#define _B2CON_FILHIT4_TXERR_SIZE                           0x1
#define _B2CON_FILHIT4_TXERR_LENGTH                         0x1
#define _B2CON_FILHIT4_TXERR_MASK                           0x10
#define _B2CON_RTRRO_TXLARB_POSN                            0x5
#define _B2CON_RTRRO_TXLARB_POSITION                        0x5
#define _B2CON_RTRRO_TXLARB_SIZE                            0x1
#define _B2CON_RTRRO_TXLARB_LENGTH                          0x1
#define _B2CON_RTRRO_TXLARB_MASK                            0x20
#define _B2CON_RXM1_TXABT_POSN                              0x6
#define _B2CON_RXM1_TXABT_POSITION                          0x6
#define _B2CON_RXM1_TXABT_SIZE                              0x1
#define _B2CON_RXM1_TXABT_LENGTH                            0x1
#define _B2CON_RXM1_TXABT_MASK                              0x40
#define _B2CON_RXFUL_TXBIF_POSN                             0x7
#define _B2CON_RXFUL_TXBIF_POSITION                         0x7
#define _B2CON_RXFUL_TXBIF_SIZE                             0x1
#define _B2CON_RXFUL_TXBIF_LENGTH                           0x1
#define _B2CON_RXFUL_TXBIF_MASK                             0x80
#define _B2CON_FILHIT0_POSN                                 0x0
#define _B2CON_FILHIT0_POSITION                             0x0
#define _B2CON_FILHIT0_SIZE                                 0x1
#define _B2CON_FILHIT0_LENGTH                               0x1
#define _B2CON_FILHIT0_MASK                                 0x1
#define _B2CON_FILHIT1_POSN                                 0x1
#define _B2CON_FILHIT1_POSITION                             0x1
#define _B2CON_FILHIT1_SIZE                                 0x1
#define _B2CON_FILHIT1_LENGTH                               0x1
#define _B2CON_FILHIT1_MASK                                 0x2
#define _B2CON_FILHIT2_POSN                                 0x2
#define _B2CON_FILHIT2_POSITION                             0x2
#define _B2CON_FILHIT2_SIZE                                 0x1
#define _B2CON_FILHIT2_LENGTH                               0x1
#define _B2CON_FILHIT2_MASK                                 0x4
#define _B2CON_FILHIT3_POSN                                 0x3
#define _B2CON_FILHIT3_POSITION                             0x3
#define _B2CON_FILHIT3_SIZE                                 0x1
#define _B2CON_FILHIT3_LENGTH                               0x1
#define _B2CON_FILHIT3_MASK                                 0x8
#define _B2CON_FILHIT4_POSN                                 0x4
#define _B2CON_FILHIT4_POSITION                             0x4
#define _B2CON_FILHIT4_SIZE                                 0x1
#define _B2CON_FILHIT4_LENGTH                               0x1
#define _B2CON_FILHIT4_MASK                                 0x10
#define _B2CON_RTRRO_POSN                                   0x5
#define _B2CON_RTRRO_POSITION                               0x5
#define _B2CON_RTRRO_SIZE                                   0x1
#define _B2CON_RTRRO_LENGTH                                 0x1
#define _B2CON_RTRRO_MASK                                   0x20
#define _B2CON_RXM1_POSN                                    0x6
#define _B2CON_RXM1_POSITION                                0x6
#define _B2CON_RXM1_SIZE                                    0x1
#define _B2CON_RXM1_LENGTH                                  0x1
#define _B2CON_RXM1_MASK                                    0x40
#define _B2CON_RXFUL_POSN                                   0x7
#define _B2CON_RXFUL_POSITION                               0x7
#define _B2CON_RXFUL_SIZE                                   0x1
#define _B2CON_RXFUL_LENGTH                                 0x1
#define _B2CON_RXFUL_MASK                                   0x80
#define _B2CON_TXPRI0_POSN                                  0x0
#define _B2CON_TXPRI0_POSITION                              0x0
#define _B2CON_TXPRI0_SIZE                                  0x1
#define _B2CON_TXPRI0_LENGTH                                0x1
#define _B2CON_TXPRI0_MASK                                  0x1
#define _B2CON_TXPRI1_POSN                                  0x1
#define _B2CON_TXPRI1_POSITION                              0x1
#define _B2CON_TXPRI1_SIZE                                  0x1
#define _B2CON_TXPRI1_LENGTH                                0x1
#define _B2CON_TXPRI1_MASK                                  0x2
#define _B2CON_RTREN_POSN                                   0x2
#define _B2CON_RTREN_POSITION                               0x2
#define _B2CON_RTREN_SIZE                                   0x1
#define _B2CON_RTREN_LENGTH                                 0x1
#define _B2CON_RTREN_MASK                                   0x4
#define _B2CON_TXREQ_POSN                                   0x3
#define _B2CON_TXREQ_POSITION                               0x3
#define _B2CON_TXREQ_SIZE                                   0x1
#define _B2CON_TXREQ_LENGTH                                 0x1
#define _B2CON_TXREQ_MASK                                   0x8
#define _B2CON_TXERR_POSN                                   0x4
#define _B2CON_TXERR_POSITION                               0x4
#define _B2CON_TXERR_SIZE                                   0x1
#define _B2CON_TXERR_LENGTH                                 0x1
#define _B2CON_TXERR_MASK                                   0x10
#define _B2CON_TXLARB_POSN                                  0x5
#define _B2CON_TXLARB_POSITION                              0x5
#define _B2CON_TXLARB_SIZE                                  0x1
#define _B2CON_TXLARB_LENGTH                                0x1
#define _B2CON_TXLARB_MASK                                  0x20
#define _B2CON_TXABT_POSN                                   0x6
#define _B2CON_TXABT_POSITION                               0x6
#define _B2CON_TXABT_SIZE                                   0x1
#define _B2CON_TXABT_LENGTH                                 0x1
#define _B2CON_TXABT_MASK                                   0x40
#define _B2CON_TXBIF_POSN                                   0x7
#define _B2CON_TXBIF_POSITION                               0x7
#define _B2CON_TXBIF_SIZE                                   0x1
#define _B2CON_TXBIF_LENGTH                                 0x1
#define _B2CON_TXBIF_MASK                                   0x80
#define _B2CON_B2FILHIT0_POSN                               0x0
#define _B2CON_B2FILHIT0_POSITION                           0x0
#define _B2CON_B2FILHIT0_SIZE                               0x1
#define _B2CON_B2FILHIT0_LENGTH                             0x1
#define _B2CON_B2FILHIT0_MASK                               0x1
#define _B2CON_B2FILHIT1_POSN                               0x1
#define _B2CON_B2FILHIT1_POSITION                           0x1
#define _B2CON_B2FILHIT1_SIZE                               0x1
#define _B2CON_B2FILHIT1_LENGTH                             0x1
#define _B2CON_B2FILHIT1_MASK                               0x2
#define _B2CON_B2FILHIT2_POSN                               0x2
#define _B2CON_B2FILHIT2_POSITION                           0x2
#define _B2CON_B2FILHIT2_SIZE                               0x1
#define _B2CON_B2FILHIT2_LENGTH                             0x1
#define _B2CON_B2FILHIT2_MASK                               0x4
#define _B2CON_B2FILHIT3_POSN                               0x3
#define _B2CON_B2FILHIT3_POSITION                           0x3
#define _B2CON_B2FILHIT3_SIZE                               0x1
#define _B2CON_B2FILHIT3_LENGTH                             0x1
#define _B2CON_B2FILHIT3_MASK                               0x8
#define _B2CON_B2FILHIT4_POSN                               0x4
#define _B2CON_B2FILHIT4_POSITION                           0x4
#define _B2CON_B2FILHIT4_SIZE                               0x1
#define _B2CON_B2FILHIT4_LENGTH                             0x1
#define _B2CON_B2FILHIT4_MASK                               0x10
#define _B2CON_B2RTRRO_POSN                                 0x5
#define _B2CON_B2RTRRO_POSITION                             0x5
#define _B2CON_B2RTRRO_SIZE                                 0x1
#define _B2CON_B2RTRRO_LENGTH                               0x1
#define _B2CON_B2RTRRO_MASK                                 0x20
#define _B2CON_B2RXM1_POSN                                  0x6
#define _B2CON_B2RXM1_POSITION                              0x6
#define _B2CON_B2RXM1_SIZE                                  0x1
#define _B2CON_B2RXM1_LENGTH                                0x1
#define _B2CON_B2RXM1_MASK                                  0x40
#define _B2CON_B2RXFUL_POSN                                 0x7
#define _B2CON_B2RXFUL_POSITION                             0x7
#define _B2CON_B2RXFUL_SIZE                                 0x1
#define _B2CON_B2RXFUL_LENGTH                               0x1
#define _B2CON_B2RXFUL_MASK                                 0x80
#define _B2CON_B2TXPRI0_POSN                                0x0
#define _B2CON_B2TXPRI0_POSITION                            0x0
#define _B2CON_B2TXPRI0_SIZE                                0x1
#define _B2CON_B2TXPRI0_LENGTH                              0x1
#define _B2CON_B2TXPRI0_MASK                                0x1
#define _B2CON_B2TXPRI1_POSN                                0x1
#define _B2CON_B2TXPRI1_POSITION                            0x1
#define _B2CON_B2TXPRI1_SIZE                                0x1
#define _B2CON_B2TXPRI1_LENGTH                              0x1
#define _B2CON_B2TXPRI1_MASK                                0x2
#define _B2CON_B2RTREN_POSN                                 0x2
#define _B2CON_B2RTREN_POSITION                             0x2
#define _B2CON_B2RTREN_SIZE                                 0x1
#define _B2CON_B2RTREN_LENGTH                               0x1
#define _B2CON_B2RTREN_MASK                                 0x4
#define _B2CON_B2TXREQ_POSN                                 0x3
#define _B2CON_B2TXREQ_POSITION                             0x3
#define _B2CON_B2TXREQ_SIZE                                 0x1
#define _B2CON_B2TXREQ_LENGTH                               0x1
#define _B2CON_B2TXREQ_MASK                                 0x8
#define _B2CON_B2TXERR_POSN                                 0x4
#define _B2CON_B2TXERR_POSITION                             0x4
#define _B2CON_B2TXERR_SIZE                                 0x1
#define _B2CON_B2TXERR_LENGTH                               0x1
#define _B2CON_B2TXERR_MASK                                 0x10
#define _B2CON_B2TXLARB_POSN                                0x5
#define _B2CON_B2TXLARB_POSITION                            0x5
#define _B2CON_B2TXLARB_SIZE                                0x1
#define _B2CON_B2TXLARB_LENGTH                              0x1
#define _B2CON_B2TXLARB_MASK                                0x20
#define _B2CON_B2TXABT_POSN                                 0x6
#define _B2CON_B2TXABT_POSITION                             0x6
#define _B2CON_B2TXABT_SIZE                                 0x1
#define _B2CON_B2TXABT_LENGTH                               0x1
#define _B2CON_B2TXABT_MASK                                 0x40
#define _B2CON_B2TXB3IF_POSN                                0x7
#define _B2CON_B2TXB3IF_POSITION                            0x7
#define _B2CON_B2TXB3IF_SIZE                                0x1
#define _B2CON_B2TXB3IF_LENGTH                              0x1
#define _B2CON_B2TXB3IF_MASK                                0x80

// Register: B2SIDH
#define B2SIDH B2SIDH
extern volatile unsigned char           B2SIDH              __at(0xE41);
#ifndef _LIB_BUILD
asm("B2SIDH equ 0E41h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned B2SID3                 :1;
        unsigned B2SID4                 :1;
        unsigned B2SID5                 :1;
        unsigned B2SID6                 :1;
        unsigned B2SID7                 :1;
        unsigned B2SID8                 :1;
        unsigned B2SID9                 :1;
        unsigned B2SID10                :1;
    };
} B2SIDHbits_t;
extern volatile B2SIDHbits_t B2SIDHbits __at(0xE41);
// bitfield macros
#define _B2SIDH_SID3_POSN                                   0x0
#define _B2SIDH_SID3_POSITION                               0x0
#define _B2SIDH_SID3_SIZE                                   0x1
#define _B2SIDH_SID3_LENGTH                                 0x1
#define _B2SIDH_SID3_MASK                                   0x1
#define _B2SIDH_SID4_POSN                                   0x1
#define _B2SIDH_SID4_POSITION                               0x1
#define _B2SIDH_SID4_SIZE                                   0x1
#define _B2SIDH_SID4_LENGTH                                 0x1
#define _B2SIDH_SID4_MASK                                   0x2
#define _B2SIDH_SID5_POSN                                   0x2
#define _B2SIDH_SID5_POSITION                               0x2
#define _B2SIDH_SID5_SIZE                                   0x1
#define _B2SIDH_SID5_LENGTH                                 0x1
#define _B2SIDH_SID5_MASK                                   0x4
#define _B2SIDH_SID6_POSN                                   0x3
#define _B2SIDH_SID6_POSITION                               0x3
#define _B2SIDH_SID6_SIZE                                   0x1
#define _B2SIDH_SID6_LENGTH                                 0x1
#define _B2SIDH_SID6_MASK                                   0x8
#define _B2SIDH_SID7_POSN                                   0x4
#define _B2SIDH_SID7_POSITION                               0x4
#define _B2SIDH_SID7_SIZE                                   0x1
#define _B2SIDH_SID7_LENGTH                                 0x1
#define _B2SIDH_SID7_MASK                                   0x10
#define _B2SIDH_SID8_POSN                                   0x5
#define _B2SIDH_SID8_POSITION                               0x5
#define _B2SIDH_SID8_SIZE                                   0x1
#define _B2SIDH_SID8_LENGTH                                 0x1
#define _B2SIDH_SID8_MASK                                   0x20
#define _B2SIDH_SID9_POSN                                   0x6
#define _B2SIDH_SID9_POSITION                               0x6
#define _B2SIDH_SID9_SIZE                                   0x1
#define _B2SIDH_SID9_LENGTH                                 0x1
#define _B2SIDH_SID9_MASK                                   0x40
#define _B2SIDH_SID10_POSN                                  0x7
#define _B2SIDH_SID10_POSITION                              0x7
#define _B2SIDH_SID10_SIZE                                  0x1
#define _B2SIDH_SID10_LENGTH                                0x1
#define _B2SIDH_SID10_MASK                                  0x80
#define _B2SIDH_B2SID3_POSN                                 0x0
#define _B2SIDH_B2SID3_POSITION                             0x0
#define _B2SIDH_B2SID3_SIZE                                 0x1
#define _B2SIDH_B2SID3_LENGTH                               0x1
#define _B2SIDH_B2SID3_MASK                                 0x1
#define _B2SIDH_B2SID4_POSN                                 0x1
#define _B2SIDH_B2SID4_POSITION                             0x1
#define _B2SIDH_B2SID4_SIZE                                 0x1
#define _B2SIDH_B2SID4_LENGTH                               0x1
#define _B2SIDH_B2SID4_MASK                                 0x2
#define _B2SIDH_B2SID5_POSN                                 0x2
#define _B2SIDH_B2SID5_POSITION                             0x2
#define _B2SIDH_B2SID5_SIZE                                 0x1
#define _B2SIDH_B2SID5_LENGTH                               0x1
#define _B2SIDH_B2SID5_MASK                                 0x4
#define _B2SIDH_B2SID6_POSN                                 0x3
#define _B2SIDH_B2SID6_POSITION                             0x3
#define _B2SIDH_B2SID6_SIZE                                 0x1
#define _B2SIDH_B2SID6_LENGTH                               0x1
#define _B2SIDH_B2SID6_MASK                                 0x8
#define _B2SIDH_B2SID7_POSN                                 0x4
#define _B2SIDH_B2SID7_POSITION                             0x4
#define _B2SIDH_B2SID7_SIZE                                 0x1
#define _B2SIDH_B2SID7_LENGTH                               0x1
#define _B2SIDH_B2SID7_MASK                                 0x10
#define _B2SIDH_B2SID8_POSN                                 0x5
#define _B2SIDH_B2SID8_POSITION                             0x5
#define _B2SIDH_B2SID8_SIZE                                 0x1
#define _B2SIDH_B2SID8_LENGTH                               0x1
#define _B2SIDH_B2SID8_MASK                                 0x20
#define _B2SIDH_B2SID9_POSN                                 0x6
#define _B2SIDH_B2SID9_POSITION                             0x6
#define _B2SIDH_B2SID9_SIZE                                 0x1
#define _B2SIDH_B2SID9_LENGTH                               0x1
#define _B2SIDH_B2SID9_MASK                                 0x40
#define _B2SIDH_B2SID10_POSN                                0x7
#define _B2SIDH_B2SID10_POSITION                            0x7
#define _B2SIDH_B2SID10_SIZE                                0x1
#define _B2SIDH_B2SID10_LENGTH                              0x1
#define _B2SIDH_B2SID10_MASK                                0x80

// Register: B2SIDL
#define B2SIDL B2SIDL
extern volatile unsigned char           B2SIDL              __at(0xE42);
#ifndef _LIB_BUILD
asm("B2SIDL equ 0E42h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXID                   :1;
        unsigned SRR                    :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned B2EID16                :1;
        unsigned B2EID17                :1;
        unsigned                        :1;
        unsigned B2EXID                 :1;
        unsigned B2SRR                  :1;
        unsigned B2SID0                 :1;
        unsigned B2SID1                 :1;
        unsigned B2SID2                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned B2EXIDE                :1;
    };
} B2SIDLbits_t;
extern volatile B2SIDLbits_t B2SIDLbits __at(0xE42);
// bitfield macros
#define _B2SIDL_EID16_POSN                                  0x0
#define _B2SIDL_EID16_POSITION                              0x0
#define _B2SIDL_EID16_SIZE                                  0x1
#define _B2SIDL_EID16_LENGTH                                0x1
#define _B2SIDL_EID16_MASK                                  0x1
#define _B2SIDL_EID17_POSN                                  0x1
#define _B2SIDL_EID17_POSITION                              0x1
#define _B2SIDL_EID17_SIZE                                  0x1
#define _B2SIDL_EID17_LENGTH                                0x1
#define _B2SIDL_EID17_MASK                                  0x2
#define _B2SIDL_EXID_POSN                                   0x3
#define _B2SIDL_EXID_POSITION                               0x3
#define _B2SIDL_EXID_SIZE                                   0x1
#define _B2SIDL_EXID_LENGTH                                 0x1
#define _B2SIDL_EXID_MASK                                   0x8
#define _B2SIDL_SRR_POSN                                    0x4
#define _B2SIDL_SRR_POSITION                                0x4
#define _B2SIDL_SRR_SIZE                                    0x1
#define _B2SIDL_SRR_LENGTH                                  0x1
#define _B2SIDL_SRR_MASK                                    0x10
#define _B2SIDL_SID0_POSN                                   0x5
#define _B2SIDL_SID0_POSITION                               0x5
#define _B2SIDL_SID0_SIZE                                   0x1
#define _B2SIDL_SID0_LENGTH                                 0x1
#define _B2SIDL_SID0_MASK                                   0x20
#define _B2SIDL_SID1_POSN                                   0x6
#define _B2SIDL_SID1_POSITION                               0x6
#define _B2SIDL_SID1_SIZE                                   0x1
#define _B2SIDL_SID1_LENGTH                                 0x1
#define _B2SIDL_SID1_MASK                                   0x40
#define _B2SIDL_SID2_POSN                                   0x7
#define _B2SIDL_SID2_POSITION                               0x7
#define _B2SIDL_SID2_SIZE                                   0x1
#define _B2SIDL_SID2_LENGTH                                 0x1
#define _B2SIDL_SID2_MASK                                   0x80
#define _B2SIDL_EXIDE_POSN                                  0x3
#define _B2SIDL_EXIDE_POSITION                              0x3
#define _B2SIDL_EXIDE_SIZE                                  0x1
#define _B2SIDL_EXIDE_LENGTH                                0x1
#define _B2SIDL_EXIDE_MASK                                  0x8
#define _B2SIDL_B2EID16_POSN                                0x0
#define _B2SIDL_B2EID16_POSITION                            0x0
#define _B2SIDL_B2EID16_SIZE                                0x1
#define _B2SIDL_B2EID16_LENGTH                              0x1
#define _B2SIDL_B2EID16_MASK                                0x1
#define _B2SIDL_B2EID17_POSN                                0x1
#define _B2SIDL_B2EID17_POSITION                            0x1
#define _B2SIDL_B2EID17_SIZE                                0x1
#define _B2SIDL_B2EID17_LENGTH                              0x1
#define _B2SIDL_B2EID17_MASK                                0x2
#define _B2SIDL_B2EXID_POSN                                 0x3
#define _B2SIDL_B2EXID_POSITION                             0x3
#define _B2SIDL_B2EXID_SIZE                                 0x1
#define _B2SIDL_B2EXID_LENGTH                               0x1
#define _B2SIDL_B2EXID_MASK                                 0x8
#define _B2SIDL_B2SRR_POSN                                  0x4
#define _B2SIDL_B2SRR_POSITION                              0x4
#define _B2SIDL_B2SRR_SIZE                                  0x1
#define _B2SIDL_B2SRR_LENGTH                                0x1
#define _B2SIDL_B2SRR_MASK                                  0x10
#define _B2SIDL_B2SID0_POSN                                 0x5
#define _B2SIDL_B2SID0_POSITION                             0x5
#define _B2SIDL_B2SID0_SIZE                                 0x1
#define _B2SIDL_B2SID0_LENGTH                               0x1
#define _B2SIDL_B2SID0_MASK                                 0x20
#define _B2SIDL_B2SID1_POSN                                 0x6
#define _B2SIDL_B2SID1_POSITION                             0x6
#define _B2SIDL_B2SID1_SIZE                                 0x1
#define _B2SIDL_B2SID1_LENGTH                               0x1
#define _B2SIDL_B2SID1_MASK                                 0x40
#define _B2SIDL_B2SID2_POSN                                 0x7
#define _B2SIDL_B2SID2_POSITION                             0x7
#define _B2SIDL_B2SID2_SIZE                                 0x1
#define _B2SIDL_B2SID2_LENGTH                               0x1
#define _B2SIDL_B2SID2_MASK                                 0x80
#define _B2SIDL_B2EXIDE_POSN                                0x3
#define _B2SIDL_B2EXIDE_POSITION                            0x3
#define _B2SIDL_B2EXIDE_SIZE                                0x1
#define _B2SIDL_B2EXIDE_LENGTH                              0x1
#define _B2SIDL_B2EXIDE_MASK                                0x8

// Register: B2EIDH
#define B2EIDH B2EIDH
extern volatile unsigned char           B2EIDH              __at(0xE43);
#ifndef _LIB_BUILD
asm("B2EIDH equ 0E43h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned B2EID8                 :1;
        unsigned B2EID9                 :1;
        unsigned B2EID10                :1;
        unsigned B2EID11                :1;
        unsigned B2EID12                :1;
        unsigned B2EID13                :1;
        unsigned B2EID14                :1;
        unsigned B2EID15                :1;
    };
} B2EIDHbits_t;
extern volatile B2EIDHbits_t B2EIDHbits __at(0xE43);
// bitfield macros
#define _B2EIDH_EID8_POSN                                   0x0
#define _B2EIDH_EID8_POSITION                               0x0
#define _B2EIDH_EID8_SIZE                                   0x1
#define _B2EIDH_EID8_LENGTH                                 0x1
#define _B2EIDH_EID8_MASK                                   0x1
#define _B2EIDH_EID9_POSN                                   0x1
#define _B2EIDH_EID9_POSITION                               0x1
#define _B2EIDH_EID9_SIZE                                   0x1
#define _B2EIDH_EID9_LENGTH                                 0x1
#define _B2EIDH_EID9_MASK                                   0x2
#define _B2EIDH_EID10_POSN                                  0x2
#define _B2EIDH_EID10_POSITION                              0x2
#define _B2EIDH_EID10_SIZE                                  0x1
#define _B2EIDH_EID10_LENGTH                                0x1
#define _B2EIDH_EID10_MASK                                  0x4
#define _B2EIDH_EID11_POSN                                  0x3
#define _B2EIDH_EID11_POSITION                              0x3
#define _B2EIDH_EID11_SIZE                                  0x1
#define _B2EIDH_EID11_LENGTH                                0x1
#define _B2EIDH_EID11_MASK                                  0x8
#define _B2EIDH_EID12_POSN                                  0x4
#define _B2EIDH_EID12_POSITION                              0x4
#define _B2EIDH_EID12_SIZE                                  0x1
#define _B2EIDH_EID12_LENGTH                                0x1
#define _B2EIDH_EID12_MASK                                  0x10
#define _B2EIDH_EID13_POSN                                  0x5
#define _B2EIDH_EID13_POSITION                              0x5
#define _B2EIDH_EID13_SIZE                                  0x1
#define _B2EIDH_EID13_LENGTH                                0x1
#define _B2EIDH_EID13_MASK                                  0x20
#define _B2EIDH_EID14_POSN                                  0x6
#define _B2EIDH_EID14_POSITION                              0x6
#define _B2EIDH_EID14_SIZE                                  0x1
#define _B2EIDH_EID14_LENGTH                                0x1
#define _B2EIDH_EID14_MASK                                  0x40
#define _B2EIDH_EID15_POSN                                  0x7
#define _B2EIDH_EID15_POSITION                              0x7
#define _B2EIDH_EID15_SIZE                                  0x1
#define _B2EIDH_EID15_LENGTH                                0x1
#define _B2EIDH_EID15_MASK                                  0x80
#define _B2EIDH_B2EID8_POSN                                 0x0
#define _B2EIDH_B2EID8_POSITION                             0x0
#define _B2EIDH_B2EID8_SIZE                                 0x1
#define _B2EIDH_B2EID8_LENGTH                               0x1
#define _B2EIDH_B2EID8_MASK                                 0x1
#define _B2EIDH_B2EID9_POSN                                 0x1
#define _B2EIDH_B2EID9_POSITION                             0x1
#define _B2EIDH_B2EID9_SIZE                                 0x1
#define _B2EIDH_B2EID9_LENGTH                               0x1
#define _B2EIDH_B2EID9_MASK                                 0x2
#define _B2EIDH_B2EID10_POSN                                0x2
#define _B2EIDH_B2EID10_POSITION                            0x2
#define _B2EIDH_B2EID10_SIZE                                0x1
#define _B2EIDH_B2EID10_LENGTH                              0x1
#define _B2EIDH_B2EID10_MASK                                0x4
#define _B2EIDH_B2EID11_POSN                                0x3
#define _B2EIDH_B2EID11_POSITION                            0x3
#define _B2EIDH_B2EID11_SIZE                                0x1
#define _B2EIDH_B2EID11_LENGTH                              0x1
#define _B2EIDH_B2EID11_MASK                                0x8
#define _B2EIDH_B2EID12_POSN                                0x4
#define _B2EIDH_B2EID12_POSITION                            0x4
#define _B2EIDH_B2EID12_SIZE                                0x1
#define _B2EIDH_B2EID12_LENGTH                              0x1
#define _B2EIDH_B2EID12_MASK                                0x10
#define _B2EIDH_B2EID13_POSN                                0x5
#define _B2EIDH_B2EID13_POSITION                            0x5
#define _B2EIDH_B2EID13_SIZE                                0x1
#define _B2EIDH_B2EID13_LENGTH                              0x1
#define _B2EIDH_B2EID13_MASK                                0x20
#define _B2EIDH_B2EID14_POSN                                0x6
#define _B2EIDH_B2EID14_POSITION                            0x6
#define _B2EIDH_B2EID14_SIZE                                0x1
#define _B2EIDH_B2EID14_LENGTH                              0x1
#define _B2EIDH_B2EID14_MASK                                0x40
#define _B2EIDH_B2EID15_POSN                                0x7
#define _B2EIDH_B2EID15_POSITION                            0x7
#define _B2EIDH_B2EID15_SIZE                                0x1
#define _B2EIDH_B2EID15_LENGTH                              0x1
#define _B2EIDH_B2EID15_MASK                                0x80

// Register: B2EIDL
#define B2EIDL B2EIDL
extern volatile unsigned char           B2EIDL              __at(0xE44);
#ifndef _LIB_BUILD
asm("B2EIDL equ 0E44h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned B2EID0                 :1;
        unsigned B2EID1                 :1;
        unsigned B2EID2                 :1;
        unsigned B2EID3                 :1;
        unsigned B2EID4                 :1;
        unsigned B2EID5                 :1;
        unsigned B2EID6                 :1;
        unsigned B2EID7                 :1;
    };
} B2EIDLbits_t;
extern volatile B2EIDLbits_t B2EIDLbits __at(0xE44);
// bitfield macros
#define _B2EIDL_EID0_POSN                                   0x0
#define _B2EIDL_EID0_POSITION                               0x0
#define _B2EIDL_EID0_SIZE                                   0x1
#define _B2EIDL_EID0_LENGTH                                 0x1
#define _B2EIDL_EID0_MASK                                   0x1
#define _B2EIDL_EID1_POSN                                   0x1
#define _B2EIDL_EID1_POSITION                               0x1
#define _B2EIDL_EID1_SIZE                                   0x1
#define _B2EIDL_EID1_LENGTH                                 0x1
#define _B2EIDL_EID1_MASK                                   0x2
#define _B2EIDL_EID2_POSN                                   0x2
#define _B2EIDL_EID2_POSITION                               0x2
#define _B2EIDL_EID2_SIZE                                   0x1
#define _B2EIDL_EID2_LENGTH                                 0x1
#define _B2EIDL_EID2_MASK                                   0x4
#define _B2EIDL_EID3_POSN                                   0x3
#define _B2EIDL_EID3_POSITION                               0x3
#define _B2EIDL_EID3_SIZE                                   0x1
#define _B2EIDL_EID3_LENGTH                                 0x1
#define _B2EIDL_EID3_MASK                                   0x8
#define _B2EIDL_EID4_POSN                                   0x4
#define _B2EIDL_EID4_POSITION                               0x4
#define _B2EIDL_EID4_SIZE                                   0x1
#define _B2EIDL_EID4_LENGTH                                 0x1
#define _B2EIDL_EID4_MASK                                   0x10
#define _B2EIDL_EID5_POSN                                   0x5
#define _B2EIDL_EID5_POSITION                               0x5
#define _B2EIDL_EID5_SIZE                                   0x1
#define _B2EIDL_EID5_LENGTH                                 0x1
#define _B2EIDL_EID5_MASK                                   0x20
#define _B2EIDL_EID6_POSN                                   0x6
#define _B2EIDL_EID6_POSITION                               0x6
#define _B2EIDL_EID6_SIZE                                   0x1
#define _B2EIDL_EID6_LENGTH                                 0x1
#define _B2EIDL_EID6_MASK                                   0x40
#define _B2EIDL_EID7_POSN                                   0x7
#define _B2EIDL_EID7_POSITION                               0x7
#define _B2EIDL_EID7_SIZE                                   0x1
#define _B2EIDL_EID7_LENGTH                                 0x1
#define _B2EIDL_EID7_MASK                                   0x80
#define _B2EIDL_B2EID0_POSN                                 0x0
#define _B2EIDL_B2EID0_POSITION                             0x0
#define _B2EIDL_B2EID0_SIZE                                 0x1
#define _B2EIDL_B2EID0_LENGTH                               0x1
#define _B2EIDL_B2EID0_MASK                                 0x1
#define _B2EIDL_B2EID1_POSN                                 0x1
#define _B2EIDL_B2EID1_POSITION                             0x1
#define _B2EIDL_B2EID1_SIZE                                 0x1
#define _B2EIDL_B2EID1_LENGTH                               0x1
#define _B2EIDL_B2EID1_MASK                                 0x2
#define _B2EIDL_B2EID2_POSN                                 0x2
#define _B2EIDL_B2EID2_POSITION                             0x2
#define _B2EIDL_B2EID2_SIZE                                 0x1
#define _B2EIDL_B2EID2_LENGTH                               0x1
#define _B2EIDL_B2EID2_MASK                                 0x4
#define _B2EIDL_B2EID3_POSN                                 0x3
#define _B2EIDL_B2EID3_POSITION                             0x3
#define _B2EIDL_B2EID3_SIZE                                 0x1
#define _B2EIDL_B2EID3_LENGTH                               0x1
#define _B2EIDL_B2EID3_MASK                                 0x8
#define _B2EIDL_B2EID4_POSN                                 0x4
#define _B2EIDL_B2EID4_POSITION                             0x4
#define _B2EIDL_B2EID4_SIZE                                 0x1
#define _B2EIDL_B2EID4_LENGTH                               0x1
#define _B2EIDL_B2EID4_MASK                                 0x10
#define _B2EIDL_B2EID5_POSN                                 0x5
#define _B2EIDL_B2EID5_POSITION                             0x5
#define _B2EIDL_B2EID5_SIZE                                 0x1
#define _B2EIDL_B2EID5_LENGTH                               0x1
#define _B2EIDL_B2EID5_MASK                                 0x20
#define _B2EIDL_B2EID6_POSN                                 0x6
#define _B2EIDL_B2EID6_POSITION                             0x6
#define _B2EIDL_B2EID6_SIZE                                 0x1
#define _B2EIDL_B2EID6_LENGTH                               0x1
#define _B2EIDL_B2EID6_MASK                                 0x40
#define _B2EIDL_B2EID7_POSN                                 0x7
#define _B2EIDL_B2EID7_POSITION                             0x7
#define _B2EIDL_B2EID7_SIZE                                 0x1
#define _B2EIDL_B2EID7_LENGTH                               0x1
#define _B2EIDL_B2EID7_MASK                                 0x80

// Register: B2DLC
#define B2DLC B2DLC
extern volatile unsigned char           B2DLC               __at(0xE45);
#ifndef _LIB_BUILD
asm("B2DLC equ 0E45h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RXRTR                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned RESRB0                 :1;
        unsigned RESRB1                 :1;
        unsigned TXRTR                  :1;
    };
    struct {
        unsigned B2DLC0                 :1;
        unsigned B2DLC1                 :1;
        unsigned B2DLC2                 :1;
        unsigned B2DLC3                 :1;
        unsigned B2RB0                  :1;
        unsigned B2RB1                  :1;
        unsigned B2RXRTR                :1;
    };
} B2DLCbits_t;
extern volatile B2DLCbits_t B2DLCbits __at(0xE45);
// bitfield macros
#define _B2DLC_DLC0_POSN                                    0x0
#define _B2DLC_DLC0_POSITION                                0x0
#define _B2DLC_DLC0_SIZE                                    0x1
#define _B2DLC_DLC0_LENGTH                                  0x1
#define _B2DLC_DLC0_MASK                                    0x1
#define _B2DLC_DLC1_POSN                                    0x1
#define _B2DLC_DLC1_POSITION                                0x1
#define _B2DLC_DLC1_SIZE                                    0x1
#define _B2DLC_DLC1_LENGTH                                  0x1
#define _B2DLC_DLC1_MASK                                    0x2
#define _B2DLC_DLC2_POSN                                    0x2
#define _B2DLC_DLC2_POSITION                                0x2
#define _B2DLC_DLC2_SIZE                                    0x1
#define _B2DLC_DLC2_LENGTH                                  0x1
#define _B2DLC_DLC2_MASK                                    0x4
#define _B2DLC_DLC3_POSN                                    0x3
#define _B2DLC_DLC3_POSITION                                0x3
#define _B2DLC_DLC3_SIZE                                    0x1
#define _B2DLC_DLC3_LENGTH                                  0x1
#define _B2DLC_DLC3_MASK                                    0x8
#define _B2DLC_RB0_POSN                                     0x4
#define _B2DLC_RB0_POSITION                                 0x4
#define _B2DLC_RB0_SIZE                                     0x1
#define _B2DLC_RB0_LENGTH                                   0x1
#define _B2DLC_RB0_MASK                                     0x10
#define _B2DLC_RB1_POSN                                     0x5
#define _B2DLC_RB1_POSITION                                 0x5
#define _B2DLC_RB1_SIZE                                     0x1
#define _B2DLC_RB1_LENGTH                                   0x1
#define _B2DLC_RB1_MASK                                     0x20
#define _B2DLC_RXRTR_POSN                                   0x6
#define _B2DLC_RXRTR_POSITION                               0x6
#define _B2DLC_RXRTR_SIZE                                   0x1
#define _B2DLC_RXRTR_LENGTH                                 0x1
#define _B2DLC_RXRTR_MASK                                   0x40
#define _B2DLC_RESRB0_POSN                                  0x4
#define _B2DLC_RESRB0_POSITION                              0x4
#define _B2DLC_RESRB0_SIZE                                  0x1
#define _B2DLC_RESRB0_LENGTH                                0x1
#define _B2DLC_RESRB0_MASK                                  0x10
#define _B2DLC_RESRB1_POSN                                  0x5
#define _B2DLC_RESRB1_POSITION                              0x5
#define _B2DLC_RESRB1_SIZE                                  0x1
#define _B2DLC_RESRB1_LENGTH                                0x1
#define _B2DLC_RESRB1_MASK                                  0x20
#define _B2DLC_TXRTR_POSN                                   0x6
#define _B2DLC_TXRTR_POSITION                               0x6
#define _B2DLC_TXRTR_SIZE                                   0x1
#define _B2DLC_TXRTR_LENGTH                                 0x1
#define _B2DLC_TXRTR_MASK                                   0x40
#define _B2DLC_B2DLC0_POSN                                  0x0
#define _B2DLC_B2DLC0_POSITION                              0x0
#define _B2DLC_B2DLC0_SIZE                                  0x1
#define _B2DLC_B2DLC0_LENGTH                                0x1
#define _B2DLC_B2DLC0_MASK                                  0x1
#define _B2DLC_B2DLC1_POSN                                  0x1
#define _B2DLC_B2DLC1_POSITION                              0x1
#define _B2DLC_B2DLC1_SIZE                                  0x1
#define _B2DLC_B2DLC1_LENGTH                                0x1
#define _B2DLC_B2DLC1_MASK                                  0x2
#define _B2DLC_B2DLC2_POSN                                  0x2
#define _B2DLC_B2DLC2_POSITION                              0x2
#define _B2DLC_B2DLC2_SIZE                                  0x1
#define _B2DLC_B2DLC2_LENGTH                                0x1
#define _B2DLC_B2DLC2_MASK                                  0x4
#define _B2DLC_B2DLC3_POSN                                  0x3
#define _B2DLC_B2DLC3_POSITION                              0x3
#define _B2DLC_B2DLC3_SIZE                                  0x1
#define _B2DLC_B2DLC3_LENGTH                                0x1
#define _B2DLC_B2DLC3_MASK                                  0x8
#define _B2DLC_B2RB0_POSN                                   0x4
#define _B2DLC_B2RB0_POSITION                               0x4
#define _B2DLC_B2RB0_SIZE                                   0x1
#define _B2DLC_B2RB0_LENGTH                                 0x1
#define _B2DLC_B2RB0_MASK                                   0x10
#define _B2DLC_B2RB1_POSN                                   0x5
#define _B2DLC_B2RB1_POSITION                               0x5
#define _B2DLC_B2RB1_SIZE                                   0x1
#define _B2DLC_B2RB1_LENGTH                                 0x1
#define _B2DLC_B2RB1_MASK                                   0x20
#define _B2DLC_B2RXRTR_POSN                                 0x6
#define _B2DLC_B2RXRTR_POSITION                             0x6
#define _B2DLC_B2RXRTR_SIZE                                 0x1
#define _B2DLC_B2RXRTR_LENGTH                               0x1
#define _B2DLC_B2RXRTR_MASK                                 0x40

// Register: B2D0
#define B2D0 B2D0
extern volatile unsigned char           B2D0                __at(0xE46);
#ifndef _LIB_BUILD
asm("B2D0 equ 0E46h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B2D00                  :1;
        unsigned B2D01                  :1;
        unsigned B2D02                  :1;
        unsigned B2D03                  :1;
        unsigned B2D04                  :1;
        unsigned B2D05                  :1;
        unsigned B2D06                  :1;
        unsigned B2D07                  :1;
    };
} B2D0bits_t;
extern volatile B2D0bits_t B2D0bits __at(0xE46);
// bitfield macros
#define _B2D0_B2D00_POSN                                    0x0
#define _B2D0_B2D00_POSITION                                0x0
#define _B2D0_B2D00_SIZE                                    0x1
#define _B2D0_B2D00_LENGTH                                  0x1
#define _B2D0_B2D00_MASK                                    0x1
#define _B2D0_B2D01_POSN                                    0x1
#define _B2D0_B2D01_POSITION                                0x1
#define _B2D0_B2D01_SIZE                                    0x1
#define _B2D0_B2D01_LENGTH                                  0x1
#define _B2D0_B2D01_MASK                                    0x2
#define _B2D0_B2D02_POSN                                    0x2
#define _B2D0_B2D02_POSITION                                0x2
#define _B2D0_B2D02_SIZE                                    0x1
#define _B2D0_B2D02_LENGTH                                  0x1
#define _B2D0_B2D02_MASK                                    0x4
#define _B2D0_B2D03_POSN                                    0x3
#define _B2D0_B2D03_POSITION                                0x3
#define _B2D0_B2D03_SIZE                                    0x1
#define _B2D0_B2D03_LENGTH                                  0x1
#define _B2D0_B2D03_MASK                                    0x8
#define _B2D0_B2D04_POSN                                    0x4
#define _B2D0_B2D04_POSITION                                0x4
#define _B2D0_B2D04_SIZE                                    0x1
#define _B2D0_B2D04_LENGTH                                  0x1
#define _B2D0_B2D04_MASK                                    0x10
#define _B2D0_B2D05_POSN                                    0x5
#define _B2D0_B2D05_POSITION                                0x5
#define _B2D0_B2D05_SIZE                                    0x1
#define _B2D0_B2D05_LENGTH                                  0x1
#define _B2D0_B2D05_MASK                                    0x20
#define _B2D0_B2D06_POSN                                    0x6
#define _B2D0_B2D06_POSITION                                0x6
#define _B2D0_B2D06_SIZE                                    0x1
#define _B2D0_B2D06_LENGTH                                  0x1
#define _B2D0_B2D06_MASK                                    0x40
#define _B2D0_B2D07_POSN                                    0x7
#define _B2D0_B2D07_POSITION                                0x7
#define _B2D0_B2D07_SIZE                                    0x1
#define _B2D0_B2D07_LENGTH                                  0x1
#define _B2D0_B2D07_MASK                                    0x80

// Register: B2D1
#define B2D1 B2D1
extern volatile unsigned char           B2D1                __at(0xE47);
#ifndef _LIB_BUILD
asm("B2D1 equ 0E47h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B2D10                  :1;
        unsigned B2D11                  :1;
        unsigned B2D12                  :1;
        unsigned B2D13                  :1;
        unsigned B2D14                  :1;
        unsigned B2D15                  :1;
        unsigned B2D16                  :1;
        unsigned B2D17                  :1;
    };
} B2D1bits_t;
extern volatile B2D1bits_t B2D1bits __at(0xE47);
// bitfield macros
#define _B2D1_B2D10_POSN                                    0x0
#define _B2D1_B2D10_POSITION                                0x0
#define _B2D1_B2D10_SIZE                                    0x1
#define _B2D1_B2D10_LENGTH                                  0x1
#define _B2D1_B2D10_MASK                                    0x1
#define _B2D1_B2D11_POSN                                    0x1
#define _B2D1_B2D11_POSITION                                0x1
#define _B2D1_B2D11_SIZE                                    0x1
#define _B2D1_B2D11_LENGTH                                  0x1
#define _B2D1_B2D11_MASK                                    0x2
#define _B2D1_B2D12_POSN                                    0x2
#define _B2D1_B2D12_POSITION                                0x2
#define _B2D1_B2D12_SIZE                                    0x1
#define _B2D1_B2D12_LENGTH                                  0x1
#define _B2D1_B2D12_MASK                                    0x4
#define _B2D1_B2D13_POSN                                    0x3
#define _B2D1_B2D13_POSITION                                0x3
#define _B2D1_B2D13_SIZE                                    0x1
#define _B2D1_B2D13_LENGTH                                  0x1
#define _B2D1_B2D13_MASK                                    0x8
#define _B2D1_B2D14_POSN                                    0x4
#define _B2D1_B2D14_POSITION                                0x4
#define _B2D1_B2D14_SIZE                                    0x1
#define _B2D1_B2D14_LENGTH                                  0x1
#define _B2D1_B2D14_MASK                                    0x10
#define _B2D1_B2D15_POSN                                    0x5
#define _B2D1_B2D15_POSITION                                0x5
#define _B2D1_B2D15_SIZE                                    0x1
#define _B2D1_B2D15_LENGTH                                  0x1
#define _B2D1_B2D15_MASK                                    0x20
#define _B2D1_B2D16_POSN                                    0x6
#define _B2D1_B2D16_POSITION                                0x6
#define _B2D1_B2D16_SIZE                                    0x1
#define _B2D1_B2D16_LENGTH                                  0x1
#define _B2D1_B2D16_MASK                                    0x40
#define _B2D1_B2D17_POSN                                    0x7
#define _B2D1_B2D17_POSITION                                0x7
#define _B2D1_B2D17_SIZE                                    0x1
#define _B2D1_B2D17_LENGTH                                  0x1
#define _B2D1_B2D17_MASK                                    0x80

// Register: B2D2
#define B2D2 B2D2
extern volatile unsigned char           B2D2                __at(0xE48);
#ifndef _LIB_BUILD
asm("B2D2 equ 0E48h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B2D20                  :1;
        unsigned B2D21                  :1;
        unsigned B2D22                  :1;
        unsigned B2D23                  :1;
        unsigned B2D24                  :1;
        unsigned B2D25                  :1;
        unsigned B2D26                  :1;
        unsigned B2D27                  :1;
    };
} B2D2bits_t;
extern volatile B2D2bits_t B2D2bits __at(0xE48);
// bitfield macros
#define _B2D2_B2D20_POSN                                    0x0
#define _B2D2_B2D20_POSITION                                0x0
#define _B2D2_B2D20_SIZE                                    0x1
#define _B2D2_B2D20_LENGTH                                  0x1
#define _B2D2_B2D20_MASK                                    0x1
#define _B2D2_B2D21_POSN                                    0x1
#define _B2D2_B2D21_POSITION                                0x1
#define _B2D2_B2D21_SIZE                                    0x1
#define _B2D2_B2D21_LENGTH                                  0x1
#define _B2D2_B2D21_MASK                                    0x2
#define _B2D2_B2D22_POSN                                    0x2
#define _B2D2_B2D22_POSITION                                0x2
#define _B2D2_B2D22_SIZE                                    0x1
#define _B2D2_B2D22_LENGTH                                  0x1
#define _B2D2_B2D22_MASK                                    0x4
#define _B2D2_B2D23_POSN                                    0x3
#define _B2D2_B2D23_POSITION                                0x3
#define _B2D2_B2D23_SIZE                                    0x1
#define _B2D2_B2D23_LENGTH                                  0x1
#define _B2D2_B2D23_MASK                                    0x8
#define _B2D2_B2D24_POSN                                    0x4
#define _B2D2_B2D24_POSITION                                0x4
#define _B2D2_B2D24_SIZE                                    0x1
#define _B2D2_B2D24_LENGTH                                  0x1
#define _B2D2_B2D24_MASK                                    0x10
#define _B2D2_B2D25_POSN                                    0x5
#define _B2D2_B2D25_POSITION                                0x5
#define _B2D2_B2D25_SIZE                                    0x1
#define _B2D2_B2D25_LENGTH                                  0x1
#define _B2D2_B2D25_MASK                                    0x20
#define _B2D2_B2D26_POSN                                    0x6
#define _B2D2_B2D26_POSITION                                0x6
#define _B2D2_B2D26_SIZE                                    0x1
#define _B2D2_B2D26_LENGTH                                  0x1
#define _B2D2_B2D26_MASK                                    0x40
#define _B2D2_B2D27_POSN                                    0x7
#define _B2D2_B2D27_POSITION                                0x7
#define _B2D2_B2D27_SIZE                                    0x1
#define _B2D2_B2D27_LENGTH                                  0x1
#define _B2D2_B2D27_MASK                                    0x80

// Register: B2D3
#define B2D3 B2D3
extern volatile unsigned char           B2D3                __at(0xE49);
#ifndef _LIB_BUILD
asm("B2D3 equ 0E49h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B2D30                  :1;
        unsigned B2D31                  :1;
        unsigned B2D32                  :1;
        unsigned B2D33                  :1;
        unsigned B2D34                  :1;
        unsigned B2D35                  :1;
        unsigned B2D36                  :1;
        unsigned B2D37                  :1;
    };
} B2D3bits_t;
extern volatile B2D3bits_t B2D3bits __at(0xE49);
// bitfield macros
#define _B2D3_B2D30_POSN                                    0x0
#define _B2D3_B2D30_POSITION                                0x0
#define _B2D3_B2D30_SIZE                                    0x1
#define _B2D3_B2D30_LENGTH                                  0x1
#define _B2D3_B2D30_MASK                                    0x1
#define _B2D3_B2D31_POSN                                    0x1
#define _B2D3_B2D31_POSITION                                0x1
#define _B2D3_B2D31_SIZE                                    0x1
#define _B2D3_B2D31_LENGTH                                  0x1
#define _B2D3_B2D31_MASK                                    0x2
#define _B2D3_B2D32_POSN                                    0x2
#define _B2D3_B2D32_POSITION                                0x2
#define _B2D3_B2D32_SIZE                                    0x1
#define _B2D3_B2D32_LENGTH                                  0x1
#define _B2D3_B2D32_MASK                                    0x4
#define _B2D3_B2D33_POSN                                    0x3
#define _B2D3_B2D33_POSITION                                0x3
#define _B2D3_B2D33_SIZE                                    0x1
#define _B2D3_B2D33_LENGTH                                  0x1
#define _B2D3_B2D33_MASK                                    0x8
#define _B2D3_B2D34_POSN                                    0x4
#define _B2D3_B2D34_POSITION                                0x4
#define _B2D3_B2D34_SIZE                                    0x1
#define _B2D3_B2D34_LENGTH                                  0x1
#define _B2D3_B2D34_MASK                                    0x10
#define _B2D3_B2D35_POSN                                    0x5
#define _B2D3_B2D35_POSITION                                0x5
#define _B2D3_B2D35_SIZE                                    0x1
#define _B2D3_B2D35_LENGTH                                  0x1
#define _B2D3_B2D35_MASK                                    0x20
#define _B2D3_B2D36_POSN                                    0x6
#define _B2D3_B2D36_POSITION                                0x6
#define _B2D3_B2D36_SIZE                                    0x1
#define _B2D3_B2D36_LENGTH                                  0x1
#define _B2D3_B2D36_MASK                                    0x40
#define _B2D3_B2D37_POSN                                    0x7
#define _B2D3_B2D37_POSITION                                0x7
#define _B2D3_B2D37_SIZE                                    0x1
#define _B2D3_B2D37_LENGTH                                  0x1
#define _B2D3_B2D37_MASK                                    0x80

// Register: B2D4
#define B2D4 B2D4
extern volatile unsigned char           B2D4                __at(0xE4A);
#ifndef _LIB_BUILD
asm("B2D4 equ 0E4Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B2D40                  :1;
        unsigned B2D41                  :1;
        unsigned B2D42                  :1;
        unsigned B2D43                  :1;
        unsigned B2D44                  :1;
        unsigned B2D45                  :1;
        unsigned B2D46                  :1;
        unsigned B2D47                  :1;
    };
} B2D4bits_t;
extern volatile B2D4bits_t B2D4bits __at(0xE4A);
// bitfield macros
#define _B2D4_B2D40_POSN                                    0x0
#define _B2D4_B2D40_POSITION                                0x0
#define _B2D4_B2D40_SIZE                                    0x1
#define _B2D4_B2D40_LENGTH                                  0x1
#define _B2D4_B2D40_MASK                                    0x1
#define _B2D4_B2D41_POSN                                    0x1
#define _B2D4_B2D41_POSITION                                0x1
#define _B2D4_B2D41_SIZE                                    0x1
#define _B2D4_B2D41_LENGTH                                  0x1
#define _B2D4_B2D41_MASK                                    0x2
#define _B2D4_B2D42_POSN                                    0x2
#define _B2D4_B2D42_POSITION                                0x2
#define _B2D4_B2D42_SIZE                                    0x1
#define _B2D4_B2D42_LENGTH                                  0x1
#define _B2D4_B2D42_MASK                                    0x4
#define _B2D4_B2D43_POSN                                    0x3
#define _B2D4_B2D43_POSITION                                0x3
#define _B2D4_B2D43_SIZE                                    0x1
#define _B2D4_B2D43_LENGTH                                  0x1
#define _B2D4_B2D43_MASK                                    0x8
#define _B2D4_B2D44_POSN                                    0x4
#define _B2D4_B2D44_POSITION                                0x4
#define _B2D4_B2D44_SIZE                                    0x1
#define _B2D4_B2D44_LENGTH                                  0x1
#define _B2D4_B2D44_MASK                                    0x10
#define _B2D4_B2D45_POSN                                    0x5
#define _B2D4_B2D45_POSITION                                0x5
#define _B2D4_B2D45_SIZE                                    0x1
#define _B2D4_B2D45_LENGTH                                  0x1
#define _B2D4_B2D45_MASK                                    0x20
#define _B2D4_B2D46_POSN                                    0x6
#define _B2D4_B2D46_POSITION                                0x6
#define _B2D4_B2D46_SIZE                                    0x1
#define _B2D4_B2D46_LENGTH                                  0x1
#define _B2D4_B2D46_MASK                                    0x40
#define _B2D4_B2D47_POSN                                    0x7
#define _B2D4_B2D47_POSITION                                0x7
#define _B2D4_B2D47_SIZE                                    0x1
#define _B2D4_B2D47_LENGTH                                  0x1
#define _B2D4_B2D47_MASK                                    0x80

// Register: B2D5
#define B2D5 B2D5
extern volatile unsigned char           B2D5                __at(0xE4B);
#ifndef _LIB_BUILD
asm("B2D5 equ 0E4Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B2D50                  :1;
        unsigned B2D51                  :1;
        unsigned B2D52                  :1;
        unsigned B2D53                  :1;
        unsigned B2D54                  :1;
        unsigned B2D55                  :1;
        unsigned B2D56                  :1;
        unsigned B2D57                  :1;
    };
} B2D5bits_t;
extern volatile B2D5bits_t B2D5bits __at(0xE4B);
// bitfield macros
#define _B2D5_B2D50_POSN                                    0x0
#define _B2D5_B2D50_POSITION                                0x0
#define _B2D5_B2D50_SIZE                                    0x1
#define _B2D5_B2D50_LENGTH                                  0x1
#define _B2D5_B2D50_MASK                                    0x1
#define _B2D5_B2D51_POSN                                    0x1
#define _B2D5_B2D51_POSITION                                0x1
#define _B2D5_B2D51_SIZE                                    0x1
#define _B2D5_B2D51_LENGTH                                  0x1
#define _B2D5_B2D51_MASK                                    0x2
#define _B2D5_B2D52_POSN                                    0x2
#define _B2D5_B2D52_POSITION                                0x2
#define _B2D5_B2D52_SIZE                                    0x1
#define _B2D5_B2D52_LENGTH                                  0x1
#define _B2D5_B2D52_MASK                                    0x4
#define _B2D5_B2D53_POSN                                    0x3
#define _B2D5_B2D53_POSITION                                0x3
#define _B2D5_B2D53_SIZE                                    0x1
#define _B2D5_B2D53_LENGTH                                  0x1
#define _B2D5_B2D53_MASK                                    0x8
#define _B2D5_B2D54_POSN                                    0x4
#define _B2D5_B2D54_POSITION                                0x4
#define _B2D5_B2D54_SIZE                                    0x1
#define _B2D5_B2D54_LENGTH                                  0x1
#define _B2D5_B2D54_MASK                                    0x10
#define _B2D5_B2D55_POSN                                    0x5
#define _B2D5_B2D55_POSITION                                0x5
#define _B2D5_B2D55_SIZE                                    0x1
#define _B2D5_B2D55_LENGTH                                  0x1
#define _B2D5_B2D55_MASK                                    0x20
#define _B2D5_B2D56_POSN                                    0x6
#define _B2D5_B2D56_POSITION                                0x6
#define _B2D5_B2D56_SIZE                                    0x1
#define _B2D5_B2D56_LENGTH                                  0x1
#define _B2D5_B2D56_MASK                                    0x40
#define _B2D5_B2D57_POSN                                    0x7
#define _B2D5_B2D57_POSITION                                0x7
#define _B2D5_B2D57_SIZE                                    0x1
#define _B2D5_B2D57_LENGTH                                  0x1
#define _B2D5_B2D57_MASK                                    0x80

// Register: B2D6
#define B2D6 B2D6
extern volatile unsigned char           B2D6                __at(0xE4C);
#ifndef _LIB_BUILD
asm("B2D6 equ 0E4Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B2D60                  :1;
        unsigned B2D61                  :1;
        unsigned B2D62                  :1;
        unsigned B2D63                  :1;
        unsigned B2D64                  :1;
        unsigned B2D65                  :1;
        unsigned B2D66                  :1;
        unsigned B2D67                  :1;
    };
} B2D6bits_t;
extern volatile B2D6bits_t B2D6bits __at(0xE4C);
// bitfield macros
#define _B2D6_B2D60_POSN                                    0x0
#define _B2D6_B2D60_POSITION                                0x0
#define _B2D6_B2D60_SIZE                                    0x1
#define _B2D6_B2D60_LENGTH                                  0x1
#define _B2D6_B2D60_MASK                                    0x1
#define _B2D6_B2D61_POSN                                    0x1
#define _B2D6_B2D61_POSITION                                0x1
#define _B2D6_B2D61_SIZE                                    0x1
#define _B2D6_B2D61_LENGTH                                  0x1
#define _B2D6_B2D61_MASK                                    0x2
#define _B2D6_B2D62_POSN                                    0x2
#define _B2D6_B2D62_POSITION                                0x2
#define _B2D6_B2D62_SIZE                                    0x1
#define _B2D6_B2D62_LENGTH                                  0x1
#define _B2D6_B2D62_MASK                                    0x4
#define _B2D6_B2D63_POSN                                    0x3
#define _B2D6_B2D63_POSITION                                0x3
#define _B2D6_B2D63_SIZE                                    0x1
#define _B2D6_B2D63_LENGTH                                  0x1
#define _B2D6_B2D63_MASK                                    0x8
#define _B2D6_B2D64_POSN                                    0x4
#define _B2D6_B2D64_POSITION                                0x4
#define _B2D6_B2D64_SIZE                                    0x1
#define _B2D6_B2D64_LENGTH                                  0x1
#define _B2D6_B2D64_MASK                                    0x10
#define _B2D6_B2D65_POSN                                    0x5
#define _B2D6_B2D65_POSITION                                0x5
#define _B2D6_B2D65_SIZE                                    0x1
#define _B2D6_B2D65_LENGTH                                  0x1
#define _B2D6_B2D65_MASK                                    0x20
#define _B2D6_B2D66_POSN                                    0x6
#define _B2D6_B2D66_POSITION                                0x6
#define _B2D6_B2D66_SIZE                                    0x1
#define _B2D6_B2D66_LENGTH                                  0x1
#define _B2D6_B2D66_MASK                                    0x40
#define _B2D6_B2D67_POSN                                    0x7
#define _B2D6_B2D67_POSITION                                0x7
#define _B2D6_B2D67_SIZE                                    0x1
#define _B2D6_B2D67_LENGTH                                  0x1
#define _B2D6_B2D67_MASK                                    0x80

// Register: B2D7
#define B2D7 B2D7
extern volatile unsigned char           B2D7                __at(0xE4D);
#ifndef _LIB_BUILD
asm("B2D7 equ 0E4Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B2D70                  :1;
        unsigned B2D71                  :1;
        unsigned B2D72                  :1;
        unsigned B2D73                  :1;
        unsigned B2D74                  :1;
        unsigned B2D75                  :1;
        unsigned B2D76                  :1;
        unsigned B2D77                  :1;
    };
} B2D7bits_t;
extern volatile B2D7bits_t B2D7bits __at(0xE4D);
// bitfield macros
#define _B2D7_B2D70_POSN                                    0x0
#define _B2D7_B2D70_POSITION                                0x0
#define _B2D7_B2D70_SIZE                                    0x1
#define _B2D7_B2D70_LENGTH                                  0x1
#define _B2D7_B2D70_MASK                                    0x1
#define _B2D7_B2D71_POSN                                    0x1
#define _B2D7_B2D71_POSITION                                0x1
#define _B2D7_B2D71_SIZE                                    0x1
#define _B2D7_B2D71_LENGTH                                  0x1
#define _B2D7_B2D71_MASK                                    0x2
#define _B2D7_B2D72_POSN                                    0x2
#define _B2D7_B2D72_POSITION                                0x2
#define _B2D7_B2D72_SIZE                                    0x1
#define _B2D7_B2D72_LENGTH                                  0x1
#define _B2D7_B2D72_MASK                                    0x4
#define _B2D7_B2D73_POSN                                    0x3
#define _B2D7_B2D73_POSITION                                0x3
#define _B2D7_B2D73_SIZE                                    0x1
#define _B2D7_B2D73_LENGTH                                  0x1
#define _B2D7_B2D73_MASK                                    0x8
#define _B2D7_B2D74_POSN                                    0x4
#define _B2D7_B2D74_POSITION                                0x4
#define _B2D7_B2D74_SIZE                                    0x1
#define _B2D7_B2D74_LENGTH                                  0x1
#define _B2D7_B2D74_MASK                                    0x10
#define _B2D7_B2D75_POSN                                    0x5
#define _B2D7_B2D75_POSITION                                0x5
#define _B2D7_B2D75_SIZE                                    0x1
#define _B2D7_B2D75_LENGTH                                  0x1
#define _B2D7_B2D75_MASK                                    0x20
#define _B2D7_B2D76_POSN                                    0x6
#define _B2D7_B2D76_POSITION                                0x6
#define _B2D7_B2D76_SIZE                                    0x1
#define _B2D7_B2D76_LENGTH                                  0x1
#define _B2D7_B2D76_MASK                                    0x40
#define _B2D7_B2D77_POSN                                    0x7
#define _B2D7_B2D77_POSITION                                0x7
#define _B2D7_B2D77_SIZE                                    0x1
#define _B2D7_B2D77_LENGTH                                  0x1
#define _B2D7_B2D77_MASK                                    0x80

// Register: CANSTAT_RO7
#define CANSTAT_RO7 CANSTAT_RO7
extern volatile unsigned char           CANSTAT_RO7         __at(0xE4E);
#ifndef _LIB_BUILD
asm("CANSTAT_RO7 equ 0E4Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EICODE0                :1;
        unsigned EICODE1_ICODE0         :1;
        unsigned EICODE2_ICODE1         :1;
        unsigned EICODE3_ICODE2         :1;
        unsigned EICODE4                :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTAT_RO7bits_t;
extern volatile CANSTAT_RO7bits_t CANSTAT_RO7bits __at(0xE4E);
// bitfield macros
#define _CANSTAT_RO7_EICODE0_POSN                           0x0
#define _CANSTAT_RO7_EICODE0_POSITION                       0x0
#define _CANSTAT_RO7_EICODE0_SIZE                           0x1
#define _CANSTAT_RO7_EICODE0_LENGTH                         0x1
#define _CANSTAT_RO7_EICODE0_MASK                           0x1
#define _CANSTAT_RO7_EICODE1_ICODE0_POSN                    0x1
#define _CANSTAT_RO7_EICODE1_ICODE0_POSITION                0x1
#define _CANSTAT_RO7_EICODE1_ICODE0_SIZE                    0x1
#define _CANSTAT_RO7_EICODE1_ICODE0_LENGTH                  0x1
#define _CANSTAT_RO7_EICODE1_ICODE0_MASK                    0x2
#define _CANSTAT_RO7_EICODE2_ICODE1_POSN                    0x2
#define _CANSTAT_RO7_EICODE2_ICODE1_POSITION                0x2
#define _CANSTAT_RO7_EICODE2_ICODE1_SIZE                    0x1
#define _CANSTAT_RO7_EICODE2_ICODE1_LENGTH                  0x1
#define _CANSTAT_RO7_EICODE2_ICODE1_MASK                    0x4
#define _CANSTAT_RO7_EICODE3_ICODE2_POSN                    0x3
#define _CANSTAT_RO7_EICODE3_ICODE2_POSITION                0x3
#define _CANSTAT_RO7_EICODE3_ICODE2_SIZE                    0x1
#define _CANSTAT_RO7_EICODE3_ICODE2_LENGTH                  0x1
#define _CANSTAT_RO7_EICODE3_ICODE2_MASK                    0x8
#define _CANSTAT_RO7_EICODE4_POSN                           0x4
#define _CANSTAT_RO7_EICODE4_POSITION                       0x4
#define _CANSTAT_RO7_EICODE4_SIZE                           0x1
#define _CANSTAT_RO7_EICODE4_LENGTH                         0x1
#define _CANSTAT_RO7_EICODE4_MASK                           0x10
#define _CANSTAT_RO7_OPMODE0_POSN                           0x5
#define _CANSTAT_RO7_OPMODE0_POSITION                       0x5
#define _CANSTAT_RO7_OPMODE0_SIZE                           0x1
#define _CANSTAT_RO7_OPMODE0_LENGTH                         0x1
#define _CANSTAT_RO7_OPMODE0_MASK                           0x20
#define _CANSTAT_RO7_OPMODE1_POSN                           0x6
#define _CANSTAT_RO7_OPMODE1_POSITION                       0x6
#define _CANSTAT_RO7_OPMODE1_SIZE                           0x1
#define _CANSTAT_RO7_OPMODE1_LENGTH                         0x1
#define _CANSTAT_RO7_OPMODE1_MASK                           0x40
#define _CANSTAT_RO7_OPMODE2_POSN                           0x7
#define _CANSTAT_RO7_OPMODE2_POSITION                       0x7
#define _CANSTAT_RO7_OPMODE2_SIZE                           0x1
#define _CANSTAT_RO7_OPMODE2_LENGTH                         0x1
#define _CANSTAT_RO7_OPMODE2_MASK                           0x80

// Register: CANCON_RO7
#define CANCON_RO7 CANCON_RO7
extern volatile unsigned char           CANCON_RO7          __at(0xE4F);
#ifndef _LIB_BUILD
asm("CANCON_RO7 equ 0E4Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FP0                    :1;
        unsigned WIN0_FP1               :1;
        unsigned WIN1_FP2               :1;
        unsigned WIN2_FP3               :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
} CANCON_RO7bits_t;
extern volatile CANCON_RO7bits_t CANCON_RO7bits __at(0xE4F);
// bitfield macros
#define _CANCON_RO7_FP0_POSN                                0x0
#define _CANCON_RO7_FP0_POSITION                            0x0
#define _CANCON_RO7_FP0_SIZE                                0x1
#define _CANCON_RO7_FP0_LENGTH                              0x1
#define _CANCON_RO7_FP0_MASK                                0x1
#define _CANCON_RO7_WIN0_FP1_POSN                           0x1
#define _CANCON_RO7_WIN0_FP1_POSITION                       0x1
#define _CANCON_RO7_WIN0_FP1_SIZE                           0x1
#define _CANCON_RO7_WIN0_FP1_LENGTH                         0x1
#define _CANCON_RO7_WIN0_FP1_MASK                           0x2
#define _CANCON_RO7_WIN1_FP2_POSN                           0x2
#define _CANCON_RO7_WIN1_FP2_POSITION                       0x2
#define _CANCON_RO7_WIN1_FP2_SIZE                           0x1
#define _CANCON_RO7_WIN1_FP2_LENGTH                         0x1
#define _CANCON_RO7_WIN1_FP2_MASK                           0x4
#define _CANCON_RO7_WIN2_FP3_POSN                           0x3
#define _CANCON_RO7_WIN2_FP3_POSITION                       0x3
#define _CANCON_RO7_WIN2_FP3_SIZE                           0x1
#define _CANCON_RO7_WIN2_FP3_LENGTH                         0x1
#define _CANCON_RO7_WIN2_FP3_MASK                           0x8
#define _CANCON_RO7_ABAT_POSN                               0x4
#define _CANCON_RO7_ABAT_POSITION                           0x4
#define _CANCON_RO7_ABAT_SIZE                               0x1
#define _CANCON_RO7_ABAT_LENGTH                             0x1
#define _CANCON_RO7_ABAT_MASK                               0x10
#define _CANCON_RO7_REQOP0_POSN                             0x5
#define _CANCON_RO7_REQOP0_POSITION                         0x5
#define _CANCON_RO7_REQOP0_SIZE                             0x1
#define _CANCON_RO7_REQOP0_LENGTH                           0x1
#define _CANCON_RO7_REQOP0_MASK                             0x20
#define _CANCON_RO7_REQOP1_POSN                             0x6
#define _CANCON_RO7_REQOP1_POSITION                         0x6
#define _CANCON_RO7_REQOP1_SIZE                             0x1
#define _CANCON_RO7_REQOP1_LENGTH                           0x1
#define _CANCON_RO7_REQOP1_MASK                             0x40
#define _CANCON_RO7_REQOP2_POSN                             0x7
#define _CANCON_RO7_REQOP2_POSITION                         0x7
#define _CANCON_RO7_REQOP2_SIZE                             0x1
#define _CANCON_RO7_REQOP2_LENGTH                           0x1
#define _CANCON_RO7_REQOP2_MASK                             0x80

// Register: B3CON
#define B3CON B3CON
extern volatile unsigned char           B3CON               __at(0xE50);
#ifndef _LIB_BUILD
asm("B3CON equ 0E50h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FILHIT0_TXPRI0         :1;
        unsigned FILHIT1_TXPRI1         :1;
        unsigned FILHIT2_RTREN          :1;
        unsigned FILHIT3_TXREQ          :1;
        unsigned FILHIT4_TXERR          :1;
        unsigned RTRRO_TXLARB           :1;
        unsigned RXM1_TXABT             :1;
        unsigned RXFUL_TXBIF            :1;
    };
    struct {
        unsigned FILHIT0                :1;
        unsigned FILHIT1                :1;
        unsigned FILHIT2                :1;
        unsigned FILHIT3                :1;
        unsigned FILHIT4                :1;
        unsigned RTRRO                  :1;
        unsigned RXM1                   :1;
        unsigned RXFUL                  :1;
    };
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned RTREN                  :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
        unsigned TXBIF                  :1;
    };
    struct {
        unsigned B3FILHIT0              :1;
        unsigned B3FILHIT1              :1;
        unsigned B3FILHIT2              :1;
        unsigned B3FILHIT3              :1;
        unsigned B3FILHIT4              :1;
        unsigned B3RTRRO                :1;
        unsigned B3RXM1                 :1;
        unsigned B3RXFUL                :1;
    };
    struct {
        unsigned B3TXPRI0               :1;
        unsigned B3TXPRI1               :1;
        unsigned B3RTREN                :1;
        unsigned B3TXREQ                :1;
        unsigned B3TXERR                :1;
        unsigned B3TXLARB               :1;
        unsigned B3TXABT                :1;
        unsigned B3TXB3IF               :1;
    };
} B3CONbits_t;
extern volatile B3CONbits_t B3CONbits __at(0xE50);
// bitfield macros
#define _B3CON_FILHIT0_TXPRI0_POSN                          0x0
#define _B3CON_FILHIT0_TXPRI0_POSITION                      0x0
#define _B3CON_FILHIT0_TXPRI0_SIZE                          0x1
#define _B3CON_FILHIT0_TXPRI0_LENGTH                        0x1
#define _B3CON_FILHIT0_TXPRI0_MASK                          0x1
#define _B3CON_FILHIT1_TXPRI1_POSN                          0x1
#define _B3CON_FILHIT1_TXPRI1_POSITION                      0x1
#define _B3CON_FILHIT1_TXPRI1_SIZE                          0x1
#define _B3CON_FILHIT1_TXPRI1_LENGTH                        0x1
#define _B3CON_FILHIT1_TXPRI1_MASK                          0x2
#define _B3CON_FILHIT2_RTREN_POSN                           0x2
#define _B3CON_FILHIT2_RTREN_POSITION                       0x2
#define _B3CON_FILHIT2_RTREN_SIZE                           0x1
#define _B3CON_FILHIT2_RTREN_LENGTH                         0x1
#define _B3CON_FILHIT2_RTREN_MASK                           0x4
#define _B3CON_FILHIT3_TXREQ_POSN                           0x3
#define _B3CON_FILHIT3_TXREQ_POSITION                       0x3
#define _B3CON_FILHIT3_TXREQ_SIZE                           0x1
#define _B3CON_FILHIT3_TXREQ_LENGTH                         0x1
#define _B3CON_FILHIT3_TXREQ_MASK                           0x8
#define _B3CON_FILHIT4_TXERR_POSN                           0x4
#define _B3CON_FILHIT4_TXERR_POSITION                       0x4
#define _B3CON_FILHIT4_TXERR_SIZE                           0x1
#define _B3CON_FILHIT4_TXERR_LENGTH                         0x1
#define _B3CON_FILHIT4_TXERR_MASK                           0x10
#define _B3CON_RTRRO_TXLARB_POSN                            0x5
#define _B3CON_RTRRO_TXLARB_POSITION                        0x5
#define _B3CON_RTRRO_TXLARB_SIZE                            0x1
#define _B3CON_RTRRO_TXLARB_LENGTH                          0x1
#define _B3CON_RTRRO_TXLARB_MASK                            0x20
#define _B3CON_RXM1_TXABT_POSN                              0x6
#define _B3CON_RXM1_TXABT_POSITION                          0x6
#define _B3CON_RXM1_TXABT_SIZE                              0x1
#define _B3CON_RXM1_TXABT_LENGTH                            0x1
#define _B3CON_RXM1_TXABT_MASK                              0x40
#define _B3CON_RXFUL_TXBIF_POSN                             0x7
#define _B3CON_RXFUL_TXBIF_POSITION                         0x7
#define _B3CON_RXFUL_TXBIF_SIZE                             0x1
#define _B3CON_RXFUL_TXBIF_LENGTH                           0x1
#define _B3CON_RXFUL_TXBIF_MASK                             0x80
#define _B3CON_FILHIT0_POSN                                 0x0
#define _B3CON_FILHIT0_POSITION                             0x0
#define _B3CON_FILHIT0_SIZE                                 0x1
#define _B3CON_FILHIT0_LENGTH                               0x1
#define _B3CON_FILHIT0_MASK                                 0x1
#define _B3CON_FILHIT1_POSN                                 0x1
#define _B3CON_FILHIT1_POSITION                             0x1
#define _B3CON_FILHIT1_SIZE                                 0x1
#define _B3CON_FILHIT1_LENGTH                               0x1
#define _B3CON_FILHIT1_MASK                                 0x2
#define _B3CON_FILHIT2_POSN                                 0x2
#define _B3CON_FILHIT2_POSITION                             0x2
#define _B3CON_FILHIT2_SIZE                                 0x1
#define _B3CON_FILHIT2_LENGTH                               0x1
#define _B3CON_FILHIT2_MASK                                 0x4
#define _B3CON_FILHIT3_POSN                                 0x3
#define _B3CON_FILHIT3_POSITION                             0x3
#define _B3CON_FILHIT3_SIZE                                 0x1
#define _B3CON_FILHIT3_LENGTH                               0x1
#define _B3CON_FILHIT3_MASK                                 0x8
#define _B3CON_FILHIT4_POSN                                 0x4
#define _B3CON_FILHIT4_POSITION                             0x4
#define _B3CON_FILHIT4_SIZE                                 0x1
#define _B3CON_FILHIT4_LENGTH                               0x1
#define _B3CON_FILHIT4_MASK                                 0x10
#define _B3CON_RTRRO_POSN                                   0x5
#define _B3CON_RTRRO_POSITION                               0x5
#define _B3CON_RTRRO_SIZE                                   0x1
#define _B3CON_RTRRO_LENGTH                                 0x1
#define _B3CON_RTRRO_MASK                                   0x20
#define _B3CON_RXM1_POSN                                    0x6
#define _B3CON_RXM1_POSITION                                0x6
#define _B3CON_RXM1_SIZE                                    0x1
#define _B3CON_RXM1_LENGTH                                  0x1
#define _B3CON_RXM1_MASK                                    0x40
#define _B3CON_RXFUL_POSN                                   0x7
#define _B3CON_RXFUL_POSITION                               0x7
#define _B3CON_RXFUL_SIZE                                   0x1
#define _B3CON_RXFUL_LENGTH                                 0x1
#define _B3CON_RXFUL_MASK                                   0x80
#define _B3CON_TXPRI0_POSN                                  0x0
#define _B3CON_TXPRI0_POSITION                              0x0
#define _B3CON_TXPRI0_SIZE                                  0x1
#define _B3CON_TXPRI0_LENGTH                                0x1
#define _B3CON_TXPRI0_MASK                                  0x1
#define _B3CON_TXPRI1_POSN                                  0x1
#define _B3CON_TXPRI1_POSITION                              0x1
#define _B3CON_TXPRI1_SIZE                                  0x1
#define _B3CON_TXPRI1_LENGTH                                0x1
#define _B3CON_TXPRI1_MASK                                  0x2
#define _B3CON_RTREN_POSN                                   0x2
#define _B3CON_RTREN_POSITION                               0x2
#define _B3CON_RTREN_SIZE                                   0x1
#define _B3CON_RTREN_LENGTH                                 0x1
#define _B3CON_RTREN_MASK                                   0x4
#define _B3CON_TXREQ_POSN                                   0x3
#define _B3CON_TXREQ_POSITION                               0x3
#define _B3CON_TXREQ_SIZE                                   0x1
#define _B3CON_TXREQ_LENGTH                                 0x1
#define _B3CON_TXREQ_MASK                                   0x8
#define _B3CON_TXERR_POSN                                   0x4
#define _B3CON_TXERR_POSITION                               0x4
#define _B3CON_TXERR_SIZE                                   0x1
#define _B3CON_TXERR_LENGTH                                 0x1
#define _B3CON_TXERR_MASK                                   0x10
#define _B3CON_TXLARB_POSN                                  0x5
#define _B3CON_TXLARB_POSITION                              0x5
#define _B3CON_TXLARB_SIZE                                  0x1
#define _B3CON_TXLARB_LENGTH                                0x1
#define _B3CON_TXLARB_MASK                                  0x20
#define _B3CON_TXABT_POSN                                   0x6
#define _B3CON_TXABT_POSITION                               0x6
#define _B3CON_TXABT_SIZE                                   0x1
#define _B3CON_TXABT_LENGTH                                 0x1
#define _B3CON_TXABT_MASK                                   0x40
#define _B3CON_TXBIF_POSN                                   0x7
#define _B3CON_TXBIF_POSITION                               0x7
#define _B3CON_TXBIF_SIZE                                   0x1
#define _B3CON_TXBIF_LENGTH                                 0x1
#define _B3CON_TXBIF_MASK                                   0x80
#define _B3CON_B3FILHIT0_POSN                               0x0
#define _B3CON_B3FILHIT0_POSITION                           0x0
#define _B3CON_B3FILHIT0_SIZE                               0x1
#define _B3CON_B3FILHIT0_LENGTH                             0x1
#define _B3CON_B3FILHIT0_MASK                               0x1
#define _B3CON_B3FILHIT1_POSN                               0x1
#define _B3CON_B3FILHIT1_POSITION                           0x1
#define _B3CON_B3FILHIT1_SIZE                               0x1
#define _B3CON_B3FILHIT1_LENGTH                             0x1
#define _B3CON_B3FILHIT1_MASK                               0x2
#define _B3CON_B3FILHIT2_POSN                               0x2
#define _B3CON_B3FILHIT2_POSITION                           0x2
#define _B3CON_B3FILHIT2_SIZE                               0x1
#define _B3CON_B3FILHIT2_LENGTH                             0x1
#define _B3CON_B3FILHIT2_MASK                               0x4
#define _B3CON_B3FILHIT3_POSN                               0x3
#define _B3CON_B3FILHIT3_POSITION                           0x3
#define _B3CON_B3FILHIT3_SIZE                               0x1
#define _B3CON_B3FILHIT3_LENGTH                             0x1
#define _B3CON_B3FILHIT3_MASK                               0x8
#define _B3CON_B3FILHIT4_POSN                               0x4
#define _B3CON_B3FILHIT4_POSITION                           0x4
#define _B3CON_B3FILHIT4_SIZE                               0x1
#define _B3CON_B3FILHIT4_LENGTH                             0x1
#define _B3CON_B3FILHIT4_MASK                               0x10
#define _B3CON_B3RTRRO_POSN                                 0x5
#define _B3CON_B3RTRRO_POSITION                             0x5
#define _B3CON_B3RTRRO_SIZE                                 0x1
#define _B3CON_B3RTRRO_LENGTH                               0x1
#define _B3CON_B3RTRRO_MASK                                 0x20
#define _B3CON_B3RXM1_POSN                                  0x6
#define _B3CON_B3RXM1_POSITION                              0x6
#define _B3CON_B3RXM1_SIZE                                  0x1
#define _B3CON_B3RXM1_LENGTH                                0x1
#define _B3CON_B3RXM1_MASK                                  0x40
#define _B3CON_B3RXFUL_POSN                                 0x7
#define _B3CON_B3RXFUL_POSITION                             0x7
#define _B3CON_B3RXFUL_SIZE                                 0x1
#define _B3CON_B3RXFUL_LENGTH                               0x1
#define _B3CON_B3RXFUL_MASK                                 0x80
#define _B3CON_B3TXPRI0_POSN                                0x0
#define _B3CON_B3TXPRI0_POSITION                            0x0
#define _B3CON_B3TXPRI0_SIZE                                0x1
#define _B3CON_B3TXPRI0_LENGTH                              0x1
#define _B3CON_B3TXPRI0_MASK                                0x1
#define _B3CON_B3TXPRI1_POSN                                0x1
#define _B3CON_B3TXPRI1_POSITION                            0x1
#define _B3CON_B3TXPRI1_SIZE                                0x1
#define _B3CON_B3TXPRI1_LENGTH                              0x1
#define _B3CON_B3TXPRI1_MASK                                0x2
#define _B3CON_B3RTREN_POSN                                 0x2
#define _B3CON_B3RTREN_POSITION                             0x2
#define _B3CON_B3RTREN_SIZE                                 0x1
#define _B3CON_B3RTREN_LENGTH                               0x1
#define _B3CON_B3RTREN_MASK                                 0x4
#define _B3CON_B3TXREQ_POSN                                 0x3
#define _B3CON_B3TXREQ_POSITION                             0x3
#define _B3CON_B3TXREQ_SIZE                                 0x1
#define _B3CON_B3TXREQ_LENGTH                               0x1
#define _B3CON_B3TXREQ_MASK                                 0x8
#define _B3CON_B3TXERR_POSN                                 0x4
#define _B3CON_B3TXERR_POSITION                             0x4
#define _B3CON_B3TXERR_SIZE                                 0x1
#define _B3CON_B3TXERR_LENGTH                               0x1
#define _B3CON_B3TXERR_MASK                                 0x10
#define _B3CON_B3TXLARB_POSN                                0x5
#define _B3CON_B3TXLARB_POSITION                            0x5
#define _B3CON_B3TXLARB_SIZE                                0x1
#define _B3CON_B3TXLARB_LENGTH                              0x1
#define _B3CON_B3TXLARB_MASK                                0x20
#define _B3CON_B3TXABT_POSN                                 0x6
#define _B3CON_B3TXABT_POSITION                             0x6
#define _B3CON_B3TXABT_SIZE                                 0x1
#define _B3CON_B3TXABT_LENGTH                               0x1
#define _B3CON_B3TXABT_MASK                                 0x40
#define _B3CON_B3TXB3IF_POSN                                0x7
#define _B3CON_B3TXB3IF_POSITION                            0x7
#define _B3CON_B3TXB3IF_SIZE                                0x1
#define _B3CON_B3TXB3IF_LENGTH                              0x1
#define _B3CON_B3TXB3IF_MASK                                0x80

// Register: B3SIDH
#define B3SIDH B3SIDH
extern volatile unsigned char           B3SIDH              __at(0xE51);
#ifndef _LIB_BUILD
asm("B3SIDH equ 0E51h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned B3SID3                 :1;
        unsigned B3SID4                 :1;
        unsigned B3SID5                 :1;
        unsigned B3SID6                 :1;
        unsigned B3SID7                 :1;
        unsigned B3SID8                 :1;
        unsigned B3SID9                 :1;
        unsigned B3SID10                :1;
    };
} B3SIDHbits_t;
extern volatile B3SIDHbits_t B3SIDHbits __at(0xE51);
// bitfield macros
#define _B3SIDH_SID3_POSN                                   0x0
#define _B3SIDH_SID3_POSITION                               0x0
#define _B3SIDH_SID3_SIZE                                   0x1
#define _B3SIDH_SID3_LENGTH                                 0x1
#define _B3SIDH_SID3_MASK                                   0x1
#define _B3SIDH_SID4_POSN                                   0x1
#define _B3SIDH_SID4_POSITION                               0x1
#define _B3SIDH_SID4_SIZE                                   0x1
#define _B3SIDH_SID4_LENGTH                                 0x1
#define _B3SIDH_SID4_MASK                                   0x2
#define _B3SIDH_SID5_POSN                                   0x2
#define _B3SIDH_SID5_POSITION                               0x2
#define _B3SIDH_SID5_SIZE                                   0x1
#define _B3SIDH_SID5_LENGTH                                 0x1
#define _B3SIDH_SID5_MASK                                   0x4
#define _B3SIDH_SID6_POSN                                   0x3
#define _B3SIDH_SID6_POSITION                               0x3
#define _B3SIDH_SID6_SIZE                                   0x1
#define _B3SIDH_SID6_LENGTH                                 0x1
#define _B3SIDH_SID6_MASK                                   0x8
#define _B3SIDH_SID7_POSN                                   0x4
#define _B3SIDH_SID7_POSITION                               0x4
#define _B3SIDH_SID7_SIZE                                   0x1
#define _B3SIDH_SID7_LENGTH                                 0x1
#define _B3SIDH_SID7_MASK                                   0x10
#define _B3SIDH_SID8_POSN                                   0x5
#define _B3SIDH_SID8_POSITION                               0x5
#define _B3SIDH_SID8_SIZE                                   0x1
#define _B3SIDH_SID8_LENGTH                                 0x1
#define _B3SIDH_SID8_MASK                                   0x20
#define _B3SIDH_SID9_POSN                                   0x6
#define _B3SIDH_SID9_POSITION                               0x6
#define _B3SIDH_SID9_SIZE                                   0x1
#define _B3SIDH_SID9_LENGTH                                 0x1
#define _B3SIDH_SID9_MASK                                   0x40
#define _B3SIDH_SID10_POSN                                  0x7
#define _B3SIDH_SID10_POSITION                              0x7
#define _B3SIDH_SID10_SIZE                                  0x1
#define _B3SIDH_SID10_LENGTH                                0x1
#define _B3SIDH_SID10_MASK                                  0x80
#define _B3SIDH_B3SID3_POSN                                 0x0
#define _B3SIDH_B3SID3_POSITION                             0x0
#define _B3SIDH_B3SID3_SIZE                                 0x1
#define _B3SIDH_B3SID3_LENGTH                               0x1
#define _B3SIDH_B3SID3_MASK                                 0x1
#define _B3SIDH_B3SID4_POSN                                 0x1
#define _B3SIDH_B3SID4_POSITION                             0x1
#define _B3SIDH_B3SID4_SIZE                                 0x1
#define _B3SIDH_B3SID4_LENGTH                               0x1
#define _B3SIDH_B3SID4_MASK                                 0x2
#define _B3SIDH_B3SID5_POSN                                 0x2
#define _B3SIDH_B3SID5_POSITION                             0x2
#define _B3SIDH_B3SID5_SIZE                                 0x1
#define _B3SIDH_B3SID5_LENGTH                               0x1
#define _B3SIDH_B3SID5_MASK                                 0x4
#define _B3SIDH_B3SID6_POSN                                 0x3
#define _B3SIDH_B3SID6_POSITION                             0x3
#define _B3SIDH_B3SID6_SIZE                                 0x1
#define _B3SIDH_B3SID6_LENGTH                               0x1
#define _B3SIDH_B3SID6_MASK                                 0x8
#define _B3SIDH_B3SID7_POSN                                 0x4
#define _B3SIDH_B3SID7_POSITION                             0x4
#define _B3SIDH_B3SID7_SIZE                                 0x1
#define _B3SIDH_B3SID7_LENGTH                               0x1
#define _B3SIDH_B3SID7_MASK                                 0x10
#define _B3SIDH_B3SID8_POSN                                 0x5
#define _B3SIDH_B3SID8_POSITION                             0x5
#define _B3SIDH_B3SID8_SIZE                                 0x1
#define _B3SIDH_B3SID8_LENGTH                               0x1
#define _B3SIDH_B3SID8_MASK                                 0x20
#define _B3SIDH_B3SID9_POSN                                 0x6
#define _B3SIDH_B3SID9_POSITION                             0x6
#define _B3SIDH_B3SID9_SIZE                                 0x1
#define _B3SIDH_B3SID9_LENGTH                               0x1
#define _B3SIDH_B3SID9_MASK                                 0x40
#define _B3SIDH_B3SID10_POSN                                0x7
#define _B3SIDH_B3SID10_POSITION                            0x7
#define _B3SIDH_B3SID10_SIZE                                0x1
#define _B3SIDH_B3SID10_LENGTH                              0x1
#define _B3SIDH_B3SID10_MASK                                0x80

// Register: B3SIDL
#define B3SIDL B3SIDL
extern volatile unsigned char           B3SIDL              __at(0xE52);
#ifndef _LIB_BUILD
asm("B3SIDL equ 0E52h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXID                   :1;
        unsigned SRR                    :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned B3EID16                :1;
        unsigned B3EID17                :1;
        unsigned                        :1;
        unsigned B3EXID                 :1;
        unsigned B3SRR                  :1;
        unsigned B3SID0                 :1;
        unsigned B3SID1                 :1;
        unsigned B3SID2                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned B3EXIDE                :1;
    };
} B3SIDLbits_t;
extern volatile B3SIDLbits_t B3SIDLbits __at(0xE52);
// bitfield macros
#define _B3SIDL_EID16_POSN                                  0x0
#define _B3SIDL_EID16_POSITION                              0x0
#define _B3SIDL_EID16_SIZE                                  0x1
#define _B3SIDL_EID16_LENGTH                                0x1
#define _B3SIDL_EID16_MASK                                  0x1
#define _B3SIDL_EID17_POSN                                  0x1
#define _B3SIDL_EID17_POSITION                              0x1
#define _B3SIDL_EID17_SIZE                                  0x1
#define _B3SIDL_EID17_LENGTH                                0x1
#define _B3SIDL_EID17_MASK                                  0x2
#define _B3SIDL_EXID_POSN                                   0x3
#define _B3SIDL_EXID_POSITION                               0x3
#define _B3SIDL_EXID_SIZE                                   0x1
#define _B3SIDL_EXID_LENGTH                                 0x1
#define _B3SIDL_EXID_MASK                                   0x8
#define _B3SIDL_SRR_POSN                                    0x4
#define _B3SIDL_SRR_POSITION                                0x4
#define _B3SIDL_SRR_SIZE                                    0x1
#define _B3SIDL_SRR_LENGTH                                  0x1
#define _B3SIDL_SRR_MASK                                    0x10
#define _B3SIDL_SID0_POSN                                   0x5
#define _B3SIDL_SID0_POSITION                               0x5
#define _B3SIDL_SID0_SIZE                                   0x1
#define _B3SIDL_SID0_LENGTH                                 0x1
#define _B3SIDL_SID0_MASK                                   0x20
#define _B3SIDL_SID1_POSN                                   0x6
#define _B3SIDL_SID1_POSITION                               0x6
#define _B3SIDL_SID1_SIZE                                   0x1
#define _B3SIDL_SID1_LENGTH                                 0x1
#define _B3SIDL_SID1_MASK                                   0x40
#define _B3SIDL_SID2_POSN                                   0x7
#define _B3SIDL_SID2_POSITION                               0x7
#define _B3SIDL_SID2_SIZE                                   0x1
#define _B3SIDL_SID2_LENGTH                                 0x1
#define _B3SIDL_SID2_MASK                                   0x80
#define _B3SIDL_EXIDE_POSN                                  0x3
#define _B3SIDL_EXIDE_POSITION                              0x3
#define _B3SIDL_EXIDE_SIZE                                  0x1
#define _B3SIDL_EXIDE_LENGTH                                0x1
#define _B3SIDL_EXIDE_MASK                                  0x8
#define _B3SIDL_B3EID16_POSN                                0x0
#define _B3SIDL_B3EID16_POSITION                            0x0
#define _B3SIDL_B3EID16_SIZE                                0x1
#define _B3SIDL_B3EID16_LENGTH                              0x1
#define _B3SIDL_B3EID16_MASK                                0x1
#define _B3SIDL_B3EID17_POSN                                0x1
#define _B3SIDL_B3EID17_POSITION                            0x1
#define _B3SIDL_B3EID17_SIZE                                0x1
#define _B3SIDL_B3EID17_LENGTH                              0x1
#define _B3SIDL_B3EID17_MASK                                0x2
#define _B3SIDL_B3EXID_POSN                                 0x3
#define _B3SIDL_B3EXID_POSITION                             0x3
#define _B3SIDL_B3EXID_SIZE                                 0x1
#define _B3SIDL_B3EXID_LENGTH                               0x1
#define _B3SIDL_B3EXID_MASK                                 0x8
#define _B3SIDL_B3SRR_POSN                                  0x4
#define _B3SIDL_B3SRR_POSITION                              0x4
#define _B3SIDL_B3SRR_SIZE                                  0x1
#define _B3SIDL_B3SRR_LENGTH                                0x1
#define _B3SIDL_B3SRR_MASK                                  0x10
#define _B3SIDL_B3SID0_POSN                                 0x5
#define _B3SIDL_B3SID0_POSITION                             0x5
#define _B3SIDL_B3SID0_SIZE                                 0x1
#define _B3SIDL_B3SID0_LENGTH                               0x1
#define _B3SIDL_B3SID0_MASK                                 0x20
#define _B3SIDL_B3SID1_POSN                                 0x6
#define _B3SIDL_B3SID1_POSITION                             0x6
#define _B3SIDL_B3SID1_SIZE                                 0x1
#define _B3SIDL_B3SID1_LENGTH                               0x1
#define _B3SIDL_B3SID1_MASK                                 0x40
#define _B3SIDL_B3SID2_POSN                                 0x7
#define _B3SIDL_B3SID2_POSITION                             0x7
#define _B3SIDL_B3SID2_SIZE                                 0x1
#define _B3SIDL_B3SID2_LENGTH                               0x1
#define _B3SIDL_B3SID2_MASK                                 0x80
#define _B3SIDL_B3EXIDE_POSN                                0x3
#define _B3SIDL_B3EXIDE_POSITION                            0x3
#define _B3SIDL_B3EXIDE_SIZE                                0x1
#define _B3SIDL_B3EXIDE_LENGTH                              0x1
#define _B3SIDL_B3EXIDE_MASK                                0x8

// Register: B3EIDH
#define B3EIDH B3EIDH
extern volatile unsigned char           B3EIDH              __at(0xE53);
#ifndef _LIB_BUILD
asm("B3EIDH equ 0E53h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned B3EID8                 :1;
        unsigned B3EID9                 :1;
        unsigned B3EID10                :1;
        unsigned B3EID11                :1;
        unsigned B3EID12                :1;
        unsigned B3EID13                :1;
        unsigned B3EID14                :1;
        unsigned B3EID15                :1;
    };
} B3EIDHbits_t;
extern volatile B3EIDHbits_t B3EIDHbits __at(0xE53);
// bitfield macros
#define _B3EIDH_EID8_POSN                                   0x0
#define _B3EIDH_EID8_POSITION                               0x0
#define _B3EIDH_EID8_SIZE                                   0x1
#define _B3EIDH_EID8_LENGTH                                 0x1
#define _B3EIDH_EID8_MASK                                   0x1
#define _B3EIDH_EID9_POSN                                   0x1
#define _B3EIDH_EID9_POSITION                               0x1
#define _B3EIDH_EID9_SIZE                                   0x1
#define _B3EIDH_EID9_LENGTH                                 0x1
#define _B3EIDH_EID9_MASK                                   0x2
#define _B3EIDH_EID10_POSN                                  0x2
#define _B3EIDH_EID10_POSITION                              0x2
#define _B3EIDH_EID10_SIZE                                  0x1
#define _B3EIDH_EID10_LENGTH                                0x1
#define _B3EIDH_EID10_MASK                                  0x4
#define _B3EIDH_EID11_POSN                                  0x3
#define _B3EIDH_EID11_POSITION                              0x3
#define _B3EIDH_EID11_SIZE                                  0x1
#define _B3EIDH_EID11_LENGTH                                0x1
#define _B3EIDH_EID11_MASK                                  0x8
#define _B3EIDH_EID12_POSN                                  0x4
#define _B3EIDH_EID12_POSITION                              0x4
#define _B3EIDH_EID12_SIZE                                  0x1
#define _B3EIDH_EID12_LENGTH                                0x1
#define _B3EIDH_EID12_MASK                                  0x10
#define _B3EIDH_EID13_POSN                                  0x5
#define _B3EIDH_EID13_POSITION                              0x5
#define _B3EIDH_EID13_SIZE                                  0x1
#define _B3EIDH_EID13_LENGTH                                0x1
#define _B3EIDH_EID13_MASK                                  0x20
#define _B3EIDH_EID14_POSN                                  0x6
#define _B3EIDH_EID14_POSITION                              0x6
#define _B3EIDH_EID14_SIZE                                  0x1
#define _B3EIDH_EID14_LENGTH                                0x1
#define _B3EIDH_EID14_MASK                                  0x40
#define _B3EIDH_EID15_POSN                                  0x7
#define _B3EIDH_EID15_POSITION                              0x7
#define _B3EIDH_EID15_SIZE                                  0x1
#define _B3EIDH_EID15_LENGTH                                0x1
#define _B3EIDH_EID15_MASK                                  0x80
#define _B3EIDH_B3EID8_POSN                                 0x0
#define _B3EIDH_B3EID8_POSITION                             0x0
#define _B3EIDH_B3EID8_SIZE                                 0x1
#define _B3EIDH_B3EID8_LENGTH                               0x1
#define _B3EIDH_B3EID8_MASK                                 0x1
#define _B3EIDH_B3EID9_POSN                                 0x1
#define _B3EIDH_B3EID9_POSITION                             0x1
#define _B3EIDH_B3EID9_SIZE                                 0x1
#define _B3EIDH_B3EID9_LENGTH                               0x1
#define _B3EIDH_B3EID9_MASK                                 0x2
#define _B3EIDH_B3EID10_POSN                                0x2
#define _B3EIDH_B3EID10_POSITION                            0x2
#define _B3EIDH_B3EID10_SIZE                                0x1
#define _B3EIDH_B3EID10_LENGTH                              0x1
#define _B3EIDH_B3EID10_MASK                                0x4
#define _B3EIDH_B3EID11_POSN                                0x3
#define _B3EIDH_B3EID11_POSITION                            0x3
#define _B3EIDH_B3EID11_SIZE                                0x1
#define _B3EIDH_B3EID11_LENGTH                              0x1
#define _B3EIDH_B3EID11_MASK                                0x8
#define _B3EIDH_B3EID12_POSN                                0x4
#define _B3EIDH_B3EID12_POSITION                            0x4
#define _B3EIDH_B3EID12_SIZE                                0x1
#define _B3EIDH_B3EID12_LENGTH                              0x1
#define _B3EIDH_B3EID12_MASK                                0x10
#define _B3EIDH_B3EID13_POSN                                0x5
#define _B3EIDH_B3EID13_POSITION                            0x5
#define _B3EIDH_B3EID13_SIZE                                0x1
#define _B3EIDH_B3EID13_LENGTH                              0x1
#define _B3EIDH_B3EID13_MASK                                0x20
#define _B3EIDH_B3EID14_POSN                                0x6
#define _B3EIDH_B3EID14_POSITION                            0x6
#define _B3EIDH_B3EID14_SIZE                                0x1
#define _B3EIDH_B3EID14_LENGTH                              0x1
#define _B3EIDH_B3EID14_MASK                                0x40
#define _B3EIDH_B3EID15_POSN                                0x7
#define _B3EIDH_B3EID15_POSITION                            0x7
#define _B3EIDH_B3EID15_SIZE                                0x1
#define _B3EIDH_B3EID15_LENGTH                              0x1
#define _B3EIDH_B3EID15_MASK                                0x80

// Register: B3EIDL
#define B3EIDL B3EIDL
extern volatile unsigned char           B3EIDL              __at(0xE54);
#ifndef _LIB_BUILD
asm("B3EIDL equ 0E54h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned B3EID0                 :1;
        unsigned B3EID1                 :1;
        unsigned B3EID2                 :1;
        unsigned B3EID3                 :1;
        unsigned B3EID4                 :1;
        unsigned B3EID5                 :1;
        unsigned B3EID6                 :1;
        unsigned B3EID7                 :1;
    };
} B3EIDLbits_t;
extern volatile B3EIDLbits_t B3EIDLbits __at(0xE54);
// bitfield macros
#define _B3EIDL_EID0_POSN                                   0x0
#define _B3EIDL_EID0_POSITION                               0x0
#define _B3EIDL_EID0_SIZE                                   0x1
#define _B3EIDL_EID0_LENGTH                                 0x1
#define _B3EIDL_EID0_MASK                                   0x1
#define _B3EIDL_EID1_POSN                                   0x1
#define _B3EIDL_EID1_POSITION                               0x1
#define _B3EIDL_EID1_SIZE                                   0x1
#define _B3EIDL_EID1_LENGTH                                 0x1
#define _B3EIDL_EID1_MASK                                   0x2
#define _B3EIDL_EID2_POSN                                   0x2
#define _B3EIDL_EID2_POSITION                               0x2
#define _B3EIDL_EID2_SIZE                                   0x1
#define _B3EIDL_EID2_LENGTH                                 0x1
#define _B3EIDL_EID2_MASK                                   0x4
#define _B3EIDL_EID3_POSN                                   0x3
#define _B3EIDL_EID3_POSITION                               0x3
#define _B3EIDL_EID3_SIZE                                   0x1
#define _B3EIDL_EID3_LENGTH                                 0x1
#define _B3EIDL_EID3_MASK                                   0x8
#define _B3EIDL_EID4_POSN                                   0x4
#define _B3EIDL_EID4_POSITION                               0x4
#define _B3EIDL_EID4_SIZE                                   0x1
#define _B3EIDL_EID4_LENGTH                                 0x1
#define _B3EIDL_EID4_MASK                                   0x10
#define _B3EIDL_EID5_POSN                                   0x5
#define _B3EIDL_EID5_POSITION                               0x5
#define _B3EIDL_EID5_SIZE                                   0x1
#define _B3EIDL_EID5_LENGTH                                 0x1
#define _B3EIDL_EID5_MASK                                   0x20
#define _B3EIDL_EID6_POSN                                   0x6
#define _B3EIDL_EID6_POSITION                               0x6
#define _B3EIDL_EID6_SIZE                                   0x1
#define _B3EIDL_EID6_LENGTH                                 0x1
#define _B3EIDL_EID6_MASK                                   0x40
#define _B3EIDL_EID7_POSN                                   0x7
#define _B3EIDL_EID7_POSITION                               0x7
#define _B3EIDL_EID7_SIZE                                   0x1
#define _B3EIDL_EID7_LENGTH                                 0x1
#define _B3EIDL_EID7_MASK                                   0x80
#define _B3EIDL_B3EID0_POSN                                 0x0
#define _B3EIDL_B3EID0_POSITION                             0x0
#define _B3EIDL_B3EID0_SIZE                                 0x1
#define _B3EIDL_B3EID0_LENGTH                               0x1
#define _B3EIDL_B3EID0_MASK                                 0x1
#define _B3EIDL_B3EID1_POSN                                 0x1
#define _B3EIDL_B3EID1_POSITION                             0x1
#define _B3EIDL_B3EID1_SIZE                                 0x1
#define _B3EIDL_B3EID1_LENGTH                               0x1
#define _B3EIDL_B3EID1_MASK                                 0x2
#define _B3EIDL_B3EID2_POSN                                 0x2
#define _B3EIDL_B3EID2_POSITION                             0x2
#define _B3EIDL_B3EID2_SIZE                                 0x1
#define _B3EIDL_B3EID2_LENGTH                               0x1
#define _B3EIDL_B3EID2_MASK                                 0x4
#define _B3EIDL_B3EID3_POSN                                 0x3
#define _B3EIDL_B3EID3_POSITION                             0x3
#define _B3EIDL_B3EID3_SIZE                                 0x1
#define _B3EIDL_B3EID3_LENGTH                               0x1
#define _B3EIDL_B3EID3_MASK                                 0x8
#define _B3EIDL_B3EID4_POSN                                 0x4
#define _B3EIDL_B3EID4_POSITION                             0x4
#define _B3EIDL_B3EID4_SIZE                                 0x1
#define _B3EIDL_B3EID4_LENGTH                               0x1
#define _B3EIDL_B3EID4_MASK                                 0x10
#define _B3EIDL_B3EID5_POSN                                 0x5
#define _B3EIDL_B3EID5_POSITION                             0x5
#define _B3EIDL_B3EID5_SIZE                                 0x1
#define _B3EIDL_B3EID5_LENGTH                               0x1
#define _B3EIDL_B3EID5_MASK                                 0x20
#define _B3EIDL_B3EID6_POSN                                 0x6
#define _B3EIDL_B3EID6_POSITION                             0x6
#define _B3EIDL_B3EID6_SIZE                                 0x1
#define _B3EIDL_B3EID6_LENGTH                               0x1
#define _B3EIDL_B3EID6_MASK                                 0x40
#define _B3EIDL_B3EID7_POSN                                 0x7
#define _B3EIDL_B3EID7_POSITION                             0x7
#define _B3EIDL_B3EID7_SIZE                                 0x1
#define _B3EIDL_B3EID7_LENGTH                               0x1
#define _B3EIDL_B3EID7_MASK                                 0x80

// Register: B3DLC
#define B3DLC B3DLC
extern volatile unsigned char           B3DLC               __at(0xE55);
#ifndef _LIB_BUILD
asm("B3DLC equ 0E55h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RXRTR                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned RESRB0                 :1;
        unsigned RESRB1                 :1;
        unsigned TXRTR                  :1;
    };
    struct {
        unsigned B3DLC0                 :1;
        unsigned B3DLC1                 :1;
        unsigned B3DLC2                 :1;
        unsigned B3DLC3                 :1;
        unsigned B3RB0                  :1;
        unsigned B3RB1                  :1;
        unsigned B3RXRTR                :1;
    };
} B3DLCbits_t;
extern volatile B3DLCbits_t B3DLCbits __at(0xE55);
// bitfield macros
#define _B3DLC_DLC0_POSN                                    0x0
#define _B3DLC_DLC0_POSITION                                0x0
#define _B3DLC_DLC0_SIZE                                    0x1
#define _B3DLC_DLC0_LENGTH                                  0x1
#define _B3DLC_DLC0_MASK                                    0x1
#define _B3DLC_DLC1_POSN                                    0x1
#define _B3DLC_DLC1_POSITION                                0x1
#define _B3DLC_DLC1_SIZE                                    0x1
#define _B3DLC_DLC1_LENGTH                                  0x1
#define _B3DLC_DLC1_MASK                                    0x2
#define _B3DLC_DLC2_POSN                                    0x2
#define _B3DLC_DLC2_POSITION                                0x2
#define _B3DLC_DLC2_SIZE                                    0x1
#define _B3DLC_DLC2_LENGTH                                  0x1
#define _B3DLC_DLC2_MASK                                    0x4
#define _B3DLC_DLC3_POSN                                    0x3
#define _B3DLC_DLC3_POSITION                                0x3
#define _B3DLC_DLC3_SIZE                                    0x1
#define _B3DLC_DLC3_LENGTH                                  0x1
#define _B3DLC_DLC3_MASK                                    0x8
#define _B3DLC_RB0_POSN                                     0x4
#define _B3DLC_RB0_POSITION                                 0x4
#define _B3DLC_RB0_SIZE                                     0x1
#define _B3DLC_RB0_LENGTH                                   0x1
#define _B3DLC_RB0_MASK                                     0x10
#define _B3DLC_RB1_POSN                                     0x5
#define _B3DLC_RB1_POSITION                                 0x5
#define _B3DLC_RB1_SIZE                                     0x1
#define _B3DLC_RB1_LENGTH                                   0x1
#define _B3DLC_RB1_MASK                                     0x20
#define _B3DLC_RXRTR_POSN                                   0x6
#define _B3DLC_RXRTR_POSITION                               0x6
#define _B3DLC_RXRTR_SIZE                                   0x1
#define _B3DLC_RXRTR_LENGTH                                 0x1
#define _B3DLC_RXRTR_MASK                                   0x40
#define _B3DLC_RESRB0_POSN                                  0x4
#define _B3DLC_RESRB0_POSITION                              0x4
#define _B3DLC_RESRB0_SIZE                                  0x1
#define _B3DLC_RESRB0_LENGTH                                0x1
#define _B3DLC_RESRB0_MASK                                  0x10
#define _B3DLC_RESRB1_POSN                                  0x5
#define _B3DLC_RESRB1_POSITION                              0x5
#define _B3DLC_RESRB1_SIZE                                  0x1
#define _B3DLC_RESRB1_LENGTH                                0x1
#define _B3DLC_RESRB1_MASK                                  0x20
#define _B3DLC_TXRTR_POSN                                   0x6
#define _B3DLC_TXRTR_POSITION                               0x6
#define _B3DLC_TXRTR_SIZE                                   0x1
#define _B3DLC_TXRTR_LENGTH                                 0x1
#define _B3DLC_TXRTR_MASK                                   0x40
#define _B3DLC_B3DLC0_POSN                                  0x0
#define _B3DLC_B3DLC0_POSITION                              0x0
#define _B3DLC_B3DLC0_SIZE                                  0x1
#define _B3DLC_B3DLC0_LENGTH                                0x1
#define _B3DLC_B3DLC0_MASK                                  0x1
#define _B3DLC_B3DLC1_POSN                                  0x1
#define _B3DLC_B3DLC1_POSITION                              0x1
#define _B3DLC_B3DLC1_SIZE                                  0x1
#define _B3DLC_B3DLC1_LENGTH                                0x1
#define _B3DLC_B3DLC1_MASK                                  0x2
#define _B3DLC_B3DLC2_POSN                                  0x2
#define _B3DLC_B3DLC2_POSITION                              0x2
#define _B3DLC_B3DLC2_SIZE                                  0x1
#define _B3DLC_B3DLC2_LENGTH                                0x1
#define _B3DLC_B3DLC2_MASK                                  0x4
#define _B3DLC_B3DLC3_POSN                                  0x3
#define _B3DLC_B3DLC3_POSITION                              0x3
#define _B3DLC_B3DLC3_SIZE                                  0x1
#define _B3DLC_B3DLC3_LENGTH                                0x1
#define _B3DLC_B3DLC3_MASK                                  0x8
#define _B3DLC_B3RB0_POSN                                   0x4
#define _B3DLC_B3RB0_POSITION                               0x4
#define _B3DLC_B3RB0_SIZE                                   0x1
#define _B3DLC_B3RB0_LENGTH                                 0x1
#define _B3DLC_B3RB0_MASK                                   0x10
#define _B3DLC_B3RB1_POSN                                   0x5
#define _B3DLC_B3RB1_POSITION                               0x5
#define _B3DLC_B3RB1_SIZE                                   0x1
#define _B3DLC_B3RB1_LENGTH                                 0x1
#define _B3DLC_B3RB1_MASK                                   0x20
#define _B3DLC_B3RXRTR_POSN                                 0x6
#define _B3DLC_B3RXRTR_POSITION                             0x6
#define _B3DLC_B3RXRTR_SIZE                                 0x1
#define _B3DLC_B3RXRTR_LENGTH                               0x1
#define _B3DLC_B3RXRTR_MASK                                 0x40

// Register: B3D0
#define B3D0 B3D0
extern volatile unsigned char           B3D0                __at(0xE56);
#ifndef _LIB_BUILD
asm("B3D0 equ 0E56h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B3D00                  :1;
        unsigned B3D01                  :1;
        unsigned B3D02                  :1;
        unsigned B3D03                  :1;
        unsigned B3D04                  :1;
        unsigned B3D05                  :1;
        unsigned B3D06                  :1;
        unsigned B3D07                  :1;
    };
} B3D0bits_t;
extern volatile B3D0bits_t B3D0bits __at(0xE56);
// bitfield macros
#define _B3D0_B3D00_POSN                                    0x0
#define _B3D0_B3D00_POSITION                                0x0
#define _B3D0_B3D00_SIZE                                    0x1
#define _B3D0_B3D00_LENGTH                                  0x1
#define _B3D0_B3D00_MASK                                    0x1
#define _B3D0_B3D01_POSN                                    0x1
#define _B3D0_B3D01_POSITION                                0x1
#define _B3D0_B3D01_SIZE                                    0x1
#define _B3D0_B3D01_LENGTH                                  0x1
#define _B3D0_B3D01_MASK                                    0x2
#define _B3D0_B3D02_POSN                                    0x2
#define _B3D0_B3D02_POSITION                                0x2
#define _B3D0_B3D02_SIZE                                    0x1
#define _B3D0_B3D02_LENGTH                                  0x1
#define _B3D0_B3D02_MASK                                    0x4
#define _B3D0_B3D03_POSN                                    0x3
#define _B3D0_B3D03_POSITION                                0x3
#define _B3D0_B3D03_SIZE                                    0x1
#define _B3D0_B3D03_LENGTH                                  0x1
#define _B3D0_B3D03_MASK                                    0x8
#define _B3D0_B3D04_POSN                                    0x4
#define _B3D0_B3D04_POSITION                                0x4
#define _B3D0_B3D04_SIZE                                    0x1
#define _B3D0_B3D04_LENGTH                                  0x1
#define _B3D0_B3D04_MASK                                    0x10
#define _B3D0_B3D05_POSN                                    0x5
#define _B3D0_B3D05_POSITION                                0x5
#define _B3D0_B3D05_SIZE                                    0x1
#define _B3D0_B3D05_LENGTH                                  0x1
#define _B3D0_B3D05_MASK                                    0x20
#define _B3D0_B3D06_POSN                                    0x6
#define _B3D0_B3D06_POSITION                                0x6
#define _B3D0_B3D06_SIZE                                    0x1
#define _B3D0_B3D06_LENGTH                                  0x1
#define _B3D0_B3D06_MASK                                    0x40
#define _B3D0_B3D07_POSN                                    0x7
#define _B3D0_B3D07_POSITION                                0x7
#define _B3D0_B3D07_SIZE                                    0x1
#define _B3D0_B3D07_LENGTH                                  0x1
#define _B3D0_B3D07_MASK                                    0x80

// Register: B3D1
#define B3D1 B3D1
extern volatile unsigned char           B3D1                __at(0xE57);
#ifndef _LIB_BUILD
asm("B3D1 equ 0E57h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B3D10                  :1;
        unsigned B3D11                  :1;
        unsigned B3D12                  :1;
        unsigned B3D13                  :1;
        unsigned B3D14                  :1;
        unsigned B3D15                  :1;
        unsigned B3D16                  :1;
        unsigned B3D17                  :1;
    };
} B3D1bits_t;
extern volatile B3D1bits_t B3D1bits __at(0xE57);
// bitfield macros
#define _B3D1_B3D10_POSN                                    0x0
#define _B3D1_B3D10_POSITION                                0x0
#define _B3D1_B3D10_SIZE                                    0x1
#define _B3D1_B3D10_LENGTH                                  0x1
#define _B3D1_B3D10_MASK                                    0x1
#define _B3D1_B3D11_POSN                                    0x1
#define _B3D1_B3D11_POSITION                                0x1
#define _B3D1_B3D11_SIZE                                    0x1
#define _B3D1_B3D11_LENGTH                                  0x1
#define _B3D1_B3D11_MASK                                    0x2
#define _B3D1_B3D12_POSN                                    0x2
#define _B3D1_B3D12_POSITION                                0x2
#define _B3D1_B3D12_SIZE                                    0x1
#define _B3D1_B3D12_LENGTH                                  0x1
#define _B3D1_B3D12_MASK                                    0x4
#define _B3D1_B3D13_POSN                                    0x3
#define _B3D1_B3D13_POSITION                                0x3
#define _B3D1_B3D13_SIZE                                    0x1
#define _B3D1_B3D13_LENGTH                                  0x1
#define _B3D1_B3D13_MASK                                    0x8
#define _B3D1_B3D14_POSN                                    0x4
#define _B3D1_B3D14_POSITION                                0x4
#define _B3D1_B3D14_SIZE                                    0x1
#define _B3D1_B3D14_LENGTH                                  0x1
#define _B3D1_B3D14_MASK                                    0x10
#define _B3D1_B3D15_POSN                                    0x5
#define _B3D1_B3D15_POSITION                                0x5
#define _B3D1_B3D15_SIZE                                    0x1
#define _B3D1_B3D15_LENGTH                                  0x1
#define _B3D1_B3D15_MASK                                    0x20
#define _B3D1_B3D16_POSN                                    0x6
#define _B3D1_B3D16_POSITION                                0x6
#define _B3D1_B3D16_SIZE                                    0x1
#define _B3D1_B3D16_LENGTH                                  0x1
#define _B3D1_B3D16_MASK                                    0x40
#define _B3D1_B3D17_POSN                                    0x7
#define _B3D1_B3D17_POSITION                                0x7
#define _B3D1_B3D17_SIZE                                    0x1
#define _B3D1_B3D17_LENGTH                                  0x1
#define _B3D1_B3D17_MASK                                    0x80

// Register: B3D2
#define B3D2 B3D2
extern volatile unsigned char           B3D2                __at(0xE58);
#ifndef _LIB_BUILD
asm("B3D2 equ 0E58h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B3D20                  :1;
        unsigned B3D21                  :1;
        unsigned B3D22                  :1;
        unsigned B3D23                  :1;
        unsigned B3D24                  :1;
        unsigned B3D25                  :1;
        unsigned B3D26                  :1;
        unsigned B3D27                  :1;
    };
} B3D2bits_t;
extern volatile B3D2bits_t B3D2bits __at(0xE58);
// bitfield macros
#define _B3D2_B3D20_POSN                                    0x0
#define _B3D2_B3D20_POSITION                                0x0
#define _B3D2_B3D20_SIZE                                    0x1
#define _B3D2_B3D20_LENGTH                                  0x1
#define _B3D2_B3D20_MASK                                    0x1
#define _B3D2_B3D21_POSN                                    0x1
#define _B3D2_B3D21_POSITION                                0x1
#define _B3D2_B3D21_SIZE                                    0x1
#define _B3D2_B3D21_LENGTH                                  0x1
#define _B3D2_B3D21_MASK                                    0x2
#define _B3D2_B3D22_POSN                                    0x2
#define _B3D2_B3D22_POSITION                                0x2
#define _B3D2_B3D22_SIZE                                    0x1
#define _B3D2_B3D22_LENGTH                                  0x1
#define _B3D2_B3D22_MASK                                    0x4
#define _B3D2_B3D23_POSN                                    0x3
#define _B3D2_B3D23_POSITION                                0x3
#define _B3D2_B3D23_SIZE                                    0x1
#define _B3D2_B3D23_LENGTH                                  0x1
#define _B3D2_B3D23_MASK                                    0x8
#define _B3D2_B3D24_POSN                                    0x4
#define _B3D2_B3D24_POSITION                                0x4
#define _B3D2_B3D24_SIZE                                    0x1
#define _B3D2_B3D24_LENGTH                                  0x1
#define _B3D2_B3D24_MASK                                    0x10
#define _B3D2_B3D25_POSN                                    0x5
#define _B3D2_B3D25_POSITION                                0x5
#define _B3D2_B3D25_SIZE                                    0x1
#define _B3D2_B3D25_LENGTH                                  0x1
#define _B3D2_B3D25_MASK                                    0x20
#define _B3D2_B3D26_POSN                                    0x6
#define _B3D2_B3D26_POSITION                                0x6
#define _B3D2_B3D26_SIZE                                    0x1
#define _B3D2_B3D26_LENGTH                                  0x1
#define _B3D2_B3D26_MASK                                    0x40
#define _B3D2_B3D27_POSN                                    0x7
#define _B3D2_B3D27_POSITION                                0x7
#define _B3D2_B3D27_SIZE                                    0x1
#define _B3D2_B3D27_LENGTH                                  0x1
#define _B3D2_B3D27_MASK                                    0x80

// Register: B3D3
#define B3D3 B3D3
extern volatile unsigned char           B3D3                __at(0xE59);
#ifndef _LIB_BUILD
asm("B3D3 equ 0E59h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B3D30                  :1;
        unsigned B3D31                  :1;
        unsigned B3D32                  :1;
        unsigned B3D33                  :1;
        unsigned B3D34                  :1;
        unsigned B3D35                  :1;
        unsigned B3D36                  :1;
        unsigned B3D37                  :1;
    };
} B3D3bits_t;
extern volatile B3D3bits_t B3D3bits __at(0xE59);
// bitfield macros
#define _B3D3_B3D30_POSN                                    0x0
#define _B3D3_B3D30_POSITION                                0x0
#define _B3D3_B3D30_SIZE                                    0x1
#define _B3D3_B3D30_LENGTH                                  0x1
#define _B3D3_B3D30_MASK                                    0x1
#define _B3D3_B3D31_POSN                                    0x1
#define _B3D3_B3D31_POSITION                                0x1
#define _B3D3_B3D31_SIZE                                    0x1
#define _B3D3_B3D31_LENGTH                                  0x1
#define _B3D3_B3D31_MASK                                    0x2
#define _B3D3_B3D32_POSN                                    0x2
#define _B3D3_B3D32_POSITION                                0x2
#define _B3D3_B3D32_SIZE                                    0x1
#define _B3D3_B3D32_LENGTH                                  0x1
#define _B3D3_B3D32_MASK                                    0x4
#define _B3D3_B3D33_POSN                                    0x3
#define _B3D3_B3D33_POSITION                                0x3
#define _B3D3_B3D33_SIZE                                    0x1
#define _B3D3_B3D33_LENGTH                                  0x1
#define _B3D3_B3D33_MASK                                    0x8
#define _B3D3_B3D34_POSN                                    0x4
#define _B3D3_B3D34_POSITION                                0x4
#define _B3D3_B3D34_SIZE                                    0x1
#define _B3D3_B3D34_LENGTH                                  0x1
#define _B3D3_B3D34_MASK                                    0x10
#define _B3D3_B3D35_POSN                                    0x5
#define _B3D3_B3D35_POSITION                                0x5
#define _B3D3_B3D35_SIZE                                    0x1
#define _B3D3_B3D35_LENGTH                                  0x1
#define _B3D3_B3D35_MASK                                    0x20
#define _B3D3_B3D36_POSN                                    0x6
#define _B3D3_B3D36_POSITION                                0x6
#define _B3D3_B3D36_SIZE                                    0x1
#define _B3D3_B3D36_LENGTH                                  0x1
#define _B3D3_B3D36_MASK                                    0x40
#define _B3D3_B3D37_POSN                                    0x7
#define _B3D3_B3D37_POSITION                                0x7
#define _B3D3_B3D37_SIZE                                    0x1
#define _B3D3_B3D37_LENGTH                                  0x1
#define _B3D3_B3D37_MASK                                    0x80

// Register: B3D4
#define B3D4 B3D4
extern volatile unsigned char           B3D4                __at(0xE5A);
#ifndef _LIB_BUILD
asm("B3D4 equ 0E5Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B3D40                  :1;
        unsigned B3D41                  :1;
        unsigned B3D42                  :1;
        unsigned B3D43                  :1;
        unsigned B3D44                  :1;
        unsigned B3D45                  :1;
        unsigned B3D46                  :1;
        unsigned B3D47                  :1;
    };
} B3D4bits_t;
extern volatile B3D4bits_t B3D4bits __at(0xE5A);
// bitfield macros
#define _B3D4_B3D40_POSN                                    0x0
#define _B3D4_B3D40_POSITION                                0x0
#define _B3D4_B3D40_SIZE                                    0x1
#define _B3D4_B3D40_LENGTH                                  0x1
#define _B3D4_B3D40_MASK                                    0x1
#define _B3D4_B3D41_POSN                                    0x1
#define _B3D4_B3D41_POSITION                                0x1
#define _B3D4_B3D41_SIZE                                    0x1
#define _B3D4_B3D41_LENGTH                                  0x1
#define _B3D4_B3D41_MASK                                    0x2
#define _B3D4_B3D42_POSN                                    0x2
#define _B3D4_B3D42_POSITION                                0x2
#define _B3D4_B3D42_SIZE                                    0x1
#define _B3D4_B3D42_LENGTH                                  0x1
#define _B3D4_B3D42_MASK                                    0x4
#define _B3D4_B3D43_POSN                                    0x3
#define _B3D4_B3D43_POSITION                                0x3
#define _B3D4_B3D43_SIZE                                    0x1
#define _B3D4_B3D43_LENGTH                                  0x1
#define _B3D4_B3D43_MASK                                    0x8
#define _B3D4_B3D44_POSN                                    0x4
#define _B3D4_B3D44_POSITION                                0x4
#define _B3D4_B3D44_SIZE                                    0x1
#define _B3D4_B3D44_LENGTH                                  0x1
#define _B3D4_B3D44_MASK                                    0x10
#define _B3D4_B3D45_POSN                                    0x5
#define _B3D4_B3D45_POSITION                                0x5
#define _B3D4_B3D45_SIZE                                    0x1
#define _B3D4_B3D45_LENGTH                                  0x1
#define _B3D4_B3D45_MASK                                    0x20
#define _B3D4_B3D46_POSN                                    0x6
#define _B3D4_B3D46_POSITION                                0x6
#define _B3D4_B3D46_SIZE                                    0x1
#define _B3D4_B3D46_LENGTH                                  0x1
#define _B3D4_B3D46_MASK                                    0x40
#define _B3D4_B3D47_POSN                                    0x7
#define _B3D4_B3D47_POSITION                                0x7
#define _B3D4_B3D47_SIZE                                    0x1
#define _B3D4_B3D47_LENGTH                                  0x1
#define _B3D4_B3D47_MASK                                    0x80

// Register: B3D5
#define B3D5 B3D5
extern volatile unsigned char           B3D5                __at(0xE5B);
#ifndef _LIB_BUILD
asm("B3D5 equ 0E5Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B3D50                  :1;
        unsigned B3D51                  :1;
        unsigned B3D52                  :1;
        unsigned B3D53                  :1;
        unsigned B3D54                  :1;
        unsigned B3D55                  :1;
        unsigned B3D56                  :1;
        unsigned B3D57                  :1;
    };
} B3D5bits_t;
extern volatile B3D5bits_t B3D5bits __at(0xE5B);
// bitfield macros
#define _B3D5_B3D50_POSN                                    0x0
#define _B3D5_B3D50_POSITION                                0x0
#define _B3D5_B3D50_SIZE                                    0x1
#define _B3D5_B3D50_LENGTH                                  0x1
#define _B3D5_B3D50_MASK                                    0x1
#define _B3D5_B3D51_POSN                                    0x1
#define _B3D5_B3D51_POSITION                                0x1
#define _B3D5_B3D51_SIZE                                    0x1
#define _B3D5_B3D51_LENGTH                                  0x1
#define _B3D5_B3D51_MASK                                    0x2
#define _B3D5_B3D52_POSN                                    0x2
#define _B3D5_B3D52_POSITION                                0x2
#define _B3D5_B3D52_SIZE                                    0x1
#define _B3D5_B3D52_LENGTH                                  0x1
#define _B3D5_B3D52_MASK                                    0x4
#define _B3D5_B3D53_POSN                                    0x3
#define _B3D5_B3D53_POSITION                                0x3
#define _B3D5_B3D53_SIZE                                    0x1
#define _B3D5_B3D53_LENGTH                                  0x1
#define _B3D5_B3D53_MASK                                    0x8
#define _B3D5_B3D54_POSN                                    0x4
#define _B3D5_B3D54_POSITION                                0x4
#define _B3D5_B3D54_SIZE                                    0x1
#define _B3D5_B3D54_LENGTH                                  0x1
#define _B3D5_B3D54_MASK                                    0x10
#define _B3D5_B3D55_POSN                                    0x5
#define _B3D5_B3D55_POSITION                                0x5
#define _B3D5_B3D55_SIZE                                    0x1
#define _B3D5_B3D55_LENGTH                                  0x1
#define _B3D5_B3D55_MASK                                    0x20
#define _B3D5_B3D56_POSN                                    0x6
#define _B3D5_B3D56_POSITION                                0x6
#define _B3D5_B3D56_SIZE                                    0x1
#define _B3D5_B3D56_LENGTH                                  0x1
#define _B3D5_B3D56_MASK                                    0x40
#define _B3D5_B3D57_POSN                                    0x7
#define _B3D5_B3D57_POSITION                                0x7
#define _B3D5_B3D57_SIZE                                    0x1
#define _B3D5_B3D57_LENGTH                                  0x1
#define _B3D5_B3D57_MASK                                    0x80

// Register: B3D6
#define B3D6 B3D6
extern volatile unsigned char           B3D6                __at(0xE5C);
#ifndef _LIB_BUILD
asm("B3D6 equ 0E5Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B3D60                  :1;
        unsigned B3D61                  :1;
        unsigned B3D62                  :1;
        unsigned B3D63                  :1;
        unsigned B3D64                  :1;
        unsigned B3D65                  :1;
        unsigned B3D66                  :1;
        unsigned B3D67                  :1;
    };
} B3D6bits_t;
extern volatile B3D6bits_t B3D6bits __at(0xE5C);
// bitfield macros
#define _B3D6_B3D60_POSN                                    0x0
#define _B3D6_B3D60_POSITION                                0x0
#define _B3D6_B3D60_SIZE                                    0x1
#define _B3D6_B3D60_LENGTH                                  0x1
#define _B3D6_B3D60_MASK                                    0x1
#define _B3D6_B3D61_POSN                                    0x1
#define _B3D6_B3D61_POSITION                                0x1
#define _B3D6_B3D61_SIZE                                    0x1
#define _B3D6_B3D61_LENGTH                                  0x1
#define _B3D6_B3D61_MASK                                    0x2
#define _B3D6_B3D62_POSN                                    0x2
#define _B3D6_B3D62_POSITION                                0x2
#define _B3D6_B3D62_SIZE                                    0x1
#define _B3D6_B3D62_LENGTH                                  0x1
#define _B3D6_B3D62_MASK                                    0x4
#define _B3D6_B3D63_POSN                                    0x3
#define _B3D6_B3D63_POSITION                                0x3
#define _B3D6_B3D63_SIZE                                    0x1
#define _B3D6_B3D63_LENGTH                                  0x1
#define _B3D6_B3D63_MASK                                    0x8
#define _B3D6_B3D64_POSN                                    0x4
#define _B3D6_B3D64_POSITION                                0x4
#define _B3D6_B3D64_SIZE                                    0x1
#define _B3D6_B3D64_LENGTH                                  0x1
#define _B3D6_B3D64_MASK                                    0x10
#define _B3D6_B3D65_POSN                                    0x5
#define _B3D6_B3D65_POSITION                                0x5
#define _B3D6_B3D65_SIZE                                    0x1
#define _B3D6_B3D65_LENGTH                                  0x1
#define _B3D6_B3D65_MASK                                    0x20
#define _B3D6_B3D66_POSN                                    0x6
#define _B3D6_B3D66_POSITION                                0x6
#define _B3D6_B3D66_SIZE                                    0x1
#define _B3D6_B3D66_LENGTH                                  0x1
#define _B3D6_B3D66_MASK                                    0x40
#define _B3D6_B3D67_POSN                                    0x7
#define _B3D6_B3D67_POSITION                                0x7
#define _B3D6_B3D67_SIZE                                    0x1
#define _B3D6_B3D67_LENGTH                                  0x1
#define _B3D6_B3D67_MASK                                    0x80

// Register: B3D7
#define B3D7 B3D7
extern volatile unsigned char           B3D7                __at(0xE5D);
#ifndef _LIB_BUILD
asm("B3D7 equ 0E5Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B3D70                  :1;
        unsigned B3D71                  :1;
        unsigned B3D72                  :1;
        unsigned B3D73                  :1;
        unsigned B3D74                  :1;
        unsigned B3D75                  :1;
        unsigned B3D76                  :1;
        unsigned B3D77                  :1;
    };
} B3D7bits_t;
extern volatile B3D7bits_t B3D7bits __at(0xE5D);
// bitfield macros
#define _B3D7_B3D70_POSN                                    0x0
#define _B3D7_B3D70_POSITION                                0x0
#define _B3D7_B3D70_SIZE                                    0x1
#define _B3D7_B3D70_LENGTH                                  0x1
#define _B3D7_B3D70_MASK                                    0x1
#define _B3D7_B3D71_POSN                                    0x1
#define _B3D7_B3D71_POSITION                                0x1
#define _B3D7_B3D71_SIZE                                    0x1
#define _B3D7_B3D71_LENGTH                                  0x1
#define _B3D7_B3D71_MASK                                    0x2
#define _B3D7_B3D72_POSN                                    0x2
#define _B3D7_B3D72_POSITION                                0x2
#define _B3D7_B3D72_SIZE                                    0x1
#define _B3D7_B3D72_LENGTH                                  0x1
#define _B3D7_B3D72_MASK                                    0x4
#define _B3D7_B3D73_POSN                                    0x3
#define _B3D7_B3D73_POSITION                                0x3
#define _B3D7_B3D73_SIZE                                    0x1
#define _B3D7_B3D73_LENGTH                                  0x1
#define _B3D7_B3D73_MASK                                    0x8
#define _B3D7_B3D74_POSN                                    0x4
#define _B3D7_B3D74_POSITION                                0x4
#define _B3D7_B3D74_SIZE                                    0x1
#define _B3D7_B3D74_LENGTH                                  0x1
#define _B3D7_B3D74_MASK                                    0x10
#define _B3D7_B3D75_POSN                                    0x5
#define _B3D7_B3D75_POSITION                                0x5
#define _B3D7_B3D75_SIZE                                    0x1
#define _B3D7_B3D75_LENGTH                                  0x1
#define _B3D7_B3D75_MASK                                    0x20
#define _B3D7_B3D76_POSN                                    0x6
#define _B3D7_B3D76_POSITION                                0x6
#define _B3D7_B3D76_SIZE                                    0x1
#define _B3D7_B3D76_LENGTH                                  0x1
#define _B3D7_B3D76_MASK                                    0x40
#define _B3D7_B3D77_POSN                                    0x7
#define _B3D7_B3D77_POSITION                                0x7
#define _B3D7_B3D77_SIZE                                    0x1
#define _B3D7_B3D77_LENGTH                                  0x1
#define _B3D7_B3D77_MASK                                    0x80

// Register: CANSTAT_RO6
#define CANSTAT_RO6 CANSTAT_RO6
extern volatile unsigned char           CANSTAT_RO6         __at(0xE5E);
#ifndef _LIB_BUILD
asm("CANSTAT_RO6 equ 0E5Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EICODE0                :1;
        unsigned EICODE1_ICODE0         :1;
        unsigned EICODE2_ICODE1         :1;
        unsigned EICODE3_ICODE2         :1;
        unsigned EICODE4                :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTAT_RO6bits_t;
extern volatile CANSTAT_RO6bits_t CANSTAT_RO6bits __at(0xE5E);
// bitfield macros
#define _CANSTAT_RO6_EICODE0_POSN                           0x0
#define _CANSTAT_RO6_EICODE0_POSITION                       0x0
#define _CANSTAT_RO6_EICODE0_SIZE                           0x1
#define _CANSTAT_RO6_EICODE0_LENGTH                         0x1
#define _CANSTAT_RO6_EICODE0_MASK                           0x1
#define _CANSTAT_RO6_EICODE1_ICODE0_POSN                    0x1
#define _CANSTAT_RO6_EICODE1_ICODE0_POSITION                0x1
#define _CANSTAT_RO6_EICODE1_ICODE0_SIZE                    0x1
#define _CANSTAT_RO6_EICODE1_ICODE0_LENGTH                  0x1
#define _CANSTAT_RO6_EICODE1_ICODE0_MASK                    0x2
#define _CANSTAT_RO6_EICODE2_ICODE1_POSN                    0x2
#define _CANSTAT_RO6_EICODE2_ICODE1_POSITION                0x2
#define _CANSTAT_RO6_EICODE2_ICODE1_SIZE                    0x1
#define _CANSTAT_RO6_EICODE2_ICODE1_LENGTH                  0x1
#define _CANSTAT_RO6_EICODE2_ICODE1_MASK                    0x4
#define _CANSTAT_RO6_EICODE3_ICODE2_POSN                    0x3
#define _CANSTAT_RO6_EICODE3_ICODE2_POSITION                0x3
#define _CANSTAT_RO6_EICODE3_ICODE2_SIZE                    0x1
#define _CANSTAT_RO6_EICODE3_ICODE2_LENGTH                  0x1
#define _CANSTAT_RO6_EICODE3_ICODE2_MASK                    0x8
#define _CANSTAT_RO6_EICODE4_POSN                           0x4
#define _CANSTAT_RO6_EICODE4_POSITION                       0x4
#define _CANSTAT_RO6_EICODE4_SIZE                           0x1
#define _CANSTAT_RO6_EICODE4_LENGTH                         0x1
#define _CANSTAT_RO6_EICODE4_MASK                           0x10
#define _CANSTAT_RO6_OPMODE0_POSN                           0x5
#define _CANSTAT_RO6_OPMODE0_POSITION                       0x5
#define _CANSTAT_RO6_OPMODE0_SIZE                           0x1
#define _CANSTAT_RO6_OPMODE0_LENGTH                         0x1
#define _CANSTAT_RO6_OPMODE0_MASK                           0x20
#define _CANSTAT_RO6_OPMODE1_POSN                           0x6
#define _CANSTAT_RO6_OPMODE1_POSITION                       0x6
#define _CANSTAT_RO6_OPMODE1_SIZE                           0x1
#define _CANSTAT_RO6_OPMODE1_LENGTH                         0x1
#define _CANSTAT_RO6_OPMODE1_MASK                           0x40
#define _CANSTAT_RO6_OPMODE2_POSN                           0x7
#define _CANSTAT_RO6_OPMODE2_POSITION                       0x7
#define _CANSTAT_RO6_OPMODE2_SIZE                           0x1
#define _CANSTAT_RO6_OPMODE2_LENGTH                         0x1
#define _CANSTAT_RO6_OPMODE2_MASK                           0x80

// Register: CANCON_RO6
#define CANCON_RO6 CANCON_RO6
extern volatile unsigned char           CANCON_RO6          __at(0xE5F);
#ifndef _LIB_BUILD
asm("CANCON_RO6 equ 0E5Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FP0                    :1;
        unsigned WIN0_FP1               :1;
        unsigned WIN1_FP2               :1;
        unsigned WIN2_FP3               :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
} CANCON_RO6bits_t;
extern volatile CANCON_RO6bits_t CANCON_RO6bits __at(0xE5F);
// bitfield macros
#define _CANCON_RO6_FP0_POSN                                0x0
#define _CANCON_RO6_FP0_POSITION                            0x0
#define _CANCON_RO6_FP0_SIZE                                0x1
#define _CANCON_RO6_FP0_LENGTH                              0x1
#define _CANCON_RO6_FP0_MASK                                0x1
#define _CANCON_RO6_WIN0_FP1_POSN                           0x1
#define _CANCON_RO6_WIN0_FP1_POSITION                       0x1
#define _CANCON_RO6_WIN0_FP1_SIZE                           0x1
#define _CANCON_RO6_WIN0_FP1_LENGTH                         0x1
#define _CANCON_RO6_WIN0_FP1_MASK                           0x2
#define _CANCON_RO6_WIN1_FP2_POSN                           0x2
#define _CANCON_RO6_WIN1_FP2_POSITION                       0x2
#define _CANCON_RO6_WIN1_FP2_SIZE                           0x1
#define _CANCON_RO6_WIN1_FP2_LENGTH                         0x1
#define _CANCON_RO6_WIN1_FP2_MASK                           0x4
#define _CANCON_RO6_WIN2_FP3_POSN                           0x3
#define _CANCON_RO6_WIN2_FP3_POSITION                       0x3
#define _CANCON_RO6_WIN2_FP3_SIZE                           0x1
#define _CANCON_RO6_WIN2_FP3_LENGTH                         0x1
#define _CANCON_RO6_WIN2_FP3_MASK                           0x8
#define _CANCON_RO6_ABAT_POSN                               0x4
#define _CANCON_RO6_ABAT_POSITION                           0x4
#define _CANCON_RO6_ABAT_SIZE                               0x1
#define _CANCON_RO6_ABAT_LENGTH                             0x1
#define _CANCON_RO6_ABAT_MASK                               0x10
#define _CANCON_RO6_REQOP0_POSN                             0x5
#define _CANCON_RO6_REQOP0_POSITION                         0x5
#define _CANCON_RO6_REQOP0_SIZE                             0x1
#define _CANCON_RO6_REQOP0_LENGTH                           0x1
#define _CANCON_RO6_REQOP0_MASK                             0x20
#define _CANCON_RO6_REQOP1_POSN                             0x6
#define _CANCON_RO6_REQOP1_POSITION                         0x6
#define _CANCON_RO6_REQOP1_SIZE                             0x1
#define _CANCON_RO6_REQOP1_LENGTH                           0x1
#define _CANCON_RO6_REQOP1_MASK                             0x40
#define _CANCON_RO6_REQOP2_POSN                             0x7
#define _CANCON_RO6_REQOP2_POSITION                         0x7
#define _CANCON_RO6_REQOP2_SIZE                             0x1
#define _CANCON_RO6_REQOP2_LENGTH                           0x1
#define _CANCON_RO6_REQOP2_MASK                             0x80

// Register: B4CON
#define B4CON B4CON
extern volatile unsigned char           B4CON               __at(0xE60);
#ifndef _LIB_BUILD
asm("B4CON equ 0E60h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FILHIT0_TXPRI0         :1;
        unsigned FILHIT1_TXPRI1         :1;
        unsigned FILHIT2_RTREN          :1;
        unsigned FILHIT3_TXREQ          :1;
        unsigned FILHIT4_TXERR          :1;
        unsigned RTRRO_TXLARB           :1;
        unsigned RXM1_TXABT             :1;
        unsigned RXFUL_TXBIF            :1;
    };
    struct {
        unsigned FILHIT0                :1;
        unsigned FILHIT1                :1;
        unsigned FILHIT2                :1;
        unsigned FILHIT3                :1;
        unsigned FILHIT4                :1;
        unsigned RTRRO                  :1;
        unsigned RXM1                   :1;
        unsigned RXFUL                  :1;
    };
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned RTREN                  :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
        unsigned TXBIF                  :1;
    };
    struct {
        unsigned B4FILHIT0              :1;
        unsigned B4FILHIT1              :1;
        unsigned B4FILHIT2              :1;
        unsigned B4FILHIT3              :1;
        unsigned B4FILHIT4              :1;
        unsigned B4RTRRO                :1;
        unsigned B4RXM1                 :1;
        unsigned B4RXFUL                :1;
    };
    struct {
        unsigned B4TXPRI0               :1;
        unsigned B4TXPRI1               :1;
        unsigned B4RTREN                :1;
        unsigned B4TXREQ                :1;
        unsigned B4TXERR                :1;
        unsigned B4TXLARB               :1;
        unsigned B4TXABT                :1;
        unsigned B4TXB3IF               :1;
    };
} B4CONbits_t;
extern volatile B4CONbits_t B4CONbits __at(0xE60);
// bitfield macros
#define _B4CON_FILHIT0_TXPRI0_POSN                          0x0
#define _B4CON_FILHIT0_TXPRI0_POSITION                      0x0
#define _B4CON_FILHIT0_TXPRI0_SIZE                          0x1
#define _B4CON_FILHIT0_TXPRI0_LENGTH                        0x1
#define _B4CON_FILHIT0_TXPRI0_MASK                          0x1
#define _B4CON_FILHIT1_TXPRI1_POSN                          0x1
#define _B4CON_FILHIT1_TXPRI1_POSITION                      0x1
#define _B4CON_FILHIT1_TXPRI1_SIZE                          0x1
#define _B4CON_FILHIT1_TXPRI1_LENGTH                        0x1
#define _B4CON_FILHIT1_TXPRI1_MASK                          0x2
#define _B4CON_FILHIT2_RTREN_POSN                           0x2
#define _B4CON_FILHIT2_RTREN_POSITION                       0x2
#define _B4CON_FILHIT2_RTREN_SIZE                           0x1
#define _B4CON_FILHIT2_RTREN_LENGTH                         0x1
#define _B4CON_FILHIT2_RTREN_MASK                           0x4
#define _B4CON_FILHIT3_TXREQ_POSN                           0x3
#define _B4CON_FILHIT3_TXREQ_POSITION                       0x3
#define _B4CON_FILHIT3_TXREQ_SIZE                           0x1
#define _B4CON_FILHIT3_TXREQ_LENGTH                         0x1
#define _B4CON_FILHIT3_TXREQ_MASK                           0x8
#define _B4CON_FILHIT4_TXERR_POSN                           0x4
#define _B4CON_FILHIT4_TXERR_POSITION                       0x4
#define _B4CON_FILHIT4_TXERR_SIZE                           0x1
#define _B4CON_FILHIT4_TXERR_LENGTH                         0x1
#define _B4CON_FILHIT4_TXERR_MASK                           0x10
#define _B4CON_RTRRO_TXLARB_POSN                            0x5
#define _B4CON_RTRRO_TXLARB_POSITION                        0x5
#define _B4CON_RTRRO_TXLARB_SIZE                            0x1
#define _B4CON_RTRRO_TXLARB_LENGTH                          0x1
#define _B4CON_RTRRO_TXLARB_MASK                            0x20
#define _B4CON_RXM1_TXABT_POSN                              0x6
#define _B4CON_RXM1_TXABT_POSITION                          0x6
#define _B4CON_RXM1_TXABT_SIZE                              0x1
#define _B4CON_RXM1_TXABT_LENGTH                            0x1
#define _B4CON_RXM1_TXABT_MASK                              0x40
#define _B4CON_RXFUL_TXBIF_POSN                             0x7
#define _B4CON_RXFUL_TXBIF_POSITION                         0x7
#define _B4CON_RXFUL_TXBIF_SIZE                             0x1
#define _B4CON_RXFUL_TXBIF_LENGTH                           0x1
#define _B4CON_RXFUL_TXBIF_MASK                             0x80
#define _B4CON_FILHIT0_POSN                                 0x0
#define _B4CON_FILHIT0_POSITION                             0x0
#define _B4CON_FILHIT0_SIZE                                 0x1
#define _B4CON_FILHIT0_LENGTH                               0x1
#define _B4CON_FILHIT0_MASK                                 0x1
#define _B4CON_FILHIT1_POSN                                 0x1
#define _B4CON_FILHIT1_POSITION                             0x1
#define _B4CON_FILHIT1_SIZE                                 0x1
#define _B4CON_FILHIT1_LENGTH                               0x1
#define _B4CON_FILHIT1_MASK                                 0x2
#define _B4CON_FILHIT2_POSN                                 0x2
#define _B4CON_FILHIT2_POSITION                             0x2
#define _B4CON_FILHIT2_SIZE                                 0x1
#define _B4CON_FILHIT2_LENGTH                               0x1
#define _B4CON_FILHIT2_MASK                                 0x4
#define _B4CON_FILHIT3_POSN                                 0x3
#define _B4CON_FILHIT3_POSITION                             0x3
#define _B4CON_FILHIT3_SIZE                                 0x1
#define _B4CON_FILHIT3_LENGTH                               0x1
#define _B4CON_FILHIT3_MASK                                 0x8
#define _B4CON_FILHIT4_POSN                                 0x4
#define _B4CON_FILHIT4_POSITION                             0x4
#define _B4CON_FILHIT4_SIZE                                 0x1
#define _B4CON_FILHIT4_LENGTH                               0x1
#define _B4CON_FILHIT4_MASK                                 0x10
#define _B4CON_RTRRO_POSN                                   0x5
#define _B4CON_RTRRO_POSITION                               0x5
#define _B4CON_RTRRO_SIZE                                   0x1
#define _B4CON_RTRRO_LENGTH                                 0x1
#define _B4CON_RTRRO_MASK                                   0x20
#define _B4CON_RXM1_POSN                                    0x6
#define _B4CON_RXM1_POSITION                                0x6
#define _B4CON_RXM1_SIZE                                    0x1
#define _B4CON_RXM1_LENGTH                                  0x1
#define _B4CON_RXM1_MASK                                    0x40
#define _B4CON_RXFUL_POSN                                   0x7
#define _B4CON_RXFUL_POSITION                               0x7
#define _B4CON_RXFUL_SIZE                                   0x1
#define _B4CON_RXFUL_LENGTH                                 0x1
#define _B4CON_RXFUL_MASK                                   0x80
#define _B4CON_TXPRI0_POSN                                  0x0
#define _B4CON_TXPRI0_POSITION                              0x0
#define _B4CON_TXPRI0_SIZE                                  0x1
#define _B4CON_TXPRI0_LENGTH                                0x1
#define _B4CON_TXPRI0_MASK                                  0x1
#define _B4CON_TXPRI1_POSN                                  0x1
#define _B4CON_TXPRI1_POSITION                              0x1
#define _B4CON_TXPRI1_SIZE                                  0x1
#define _B4CON_TXPRI1_LENGTH                                0x1
#define _B4CON_TXPRI1_MASK                                  0x2
#define _B4CON_RTREN_POSN                                   0x2
#define _B4CON_RTREN_POSITION                               0x2
#define _B4CON_RTREN_SIZE                                   0x1
#define _B4CON_RTREN_LENGTH                                 0x1
#define _B4CON_RTREN_MASK                                   0x4
#define _B4CON_TXREQ_POSN                                   0x3
#define _B4CON_TXREQ_POSITION                               0x3
#define _B4CON_TXREQ_SIZE                                   0x1
#define _B4CON_TXREQ_LENGTH                                 0x1
#define _B4CON_TXREQ_MASK                                   0x8
#define _B4CON_TXERR_POSN                                   0x4
#define _B4CON_TXERR_POSITION                               0x4
#define _B4CON_TXERR_SIZE                                   0x1
#define _B4CON_TXERR_LENGTH                                 0x1
#define _B4CON_TXERR_MASK                                   0x10
#define _B4CON_TXLARB_POSN                                  0x5
#define _B4CON_TXLARB_POSITION                              0x5
#define _B4CON_TXLARB_SIZE                                  0x1
#define _B4CON_TXLARB_LENGTH                                0x1
#define _B4CON_TXLARB_MASK                                  0x20
#define _B4CON_TXABT_POSN                                   0x6
#define _B4CON_TXABT_POSITION                               0x6
#define _B4CON_TXABT_SIZE                                   0x1
#define _B4CON_TXABT_LENGTH                                 0x1
#define _B4CON_TXABT_MASK                                   0x40
#define _B4CON_TXBIF_POSN                                   0x7
#define _B4CON_TXBIF_POSITION                               0x7
#define _B4CON_TXBIF_SIZE                                   0x1
#define _B4CON_TXBIF_LENGTH                                 0x1
#define _B4CON_TXBIF_MASK                                   0x80
#define _B4CON_B4FILHIT0_POSN                               0x0
#define _B4CON_B4FILHIT0_POSITION                           0x0
#define _B4CON_B4FILHIT0_SIZE                               0x1
#define _B4CON_B4FILHIT0_LENGTH                             0x1
#define _B4CON_B4FILHIT0_MASK                               0x1
#define _B4CON_B4FILHIT1_POSN                               0x1
#define _B4CON_B4FILHIT1_POSITION                           0x1
#define _B4CON_B4FILHIT1_SIZE                               0x1
#define _B4CON_B4FILHIT1_LENGTH                             0x1
#define _B4CON_B4FILHIT1_MASK                               0x2
#define _B4CON_B4FILHIT2_POSN                               0x2
#define _B4CON_B4FILHIT2_POSITION                           0x2
#define _B4CON_B4FILHIT2_SIZE                               0x1
#define _B4CON_B4FILHIT2_LENGTH                             0x1
#define _B4CON_B4FILHIT2_MASK                               0x4
#define _B4CON_B4FILHIT3_POSN                               0x3
#define _B4CON_B4FILHIT3_POSITION                           0x3
#define _B4CON_B4FILHIT3_SIZE                               0x1
#define _B4CON_B4FILHIT3_LENGTH                             0x1
#define _B4CON_B4FILHIT3_MASK                               0x8
#define _B4CON_B4FILHIT4_POSN                               0x4
#define _B4CON_B4FILHIT4_POSITION                           0x4
#define _B4CON_B4FILHIT4_SIZE                               0x1
#define _B4CON_B4FILHIT4_LENGTH                             0x1
#define _B4CON_B4FILHIT4_MASK                               0x10
#define _B4CON_B4RTRRO_POSN                                 0x5
#define _B4CON_B4RTRRO_POSITION                             0x5
#define _B4CON_B4RTRRO_SIZE                                 0x1
#define _B4CON_B4RTRRO_LENGTH                               0x1
#define _B4CON_B4RTRRO_MASK                                 0x20
#define _B4CON_B4RXM1_POSN                                  0x6
#define _B4CON_B4RXM1_POSITION                              0x6
#define _B4CON_B4RXM1_SIZE                                  0x1
#define _B4CON_B4RXM1_LENGTH                                0x1
#define _B4CON_B4RXM1_MASK                                  0x40
#define _B4CON_B4RXFUL_POSN                                 0x7
#define _B4CON_B4RXFUL_POSITION                             0x7
#define _B4CON_B4RXFUL_SIZE                                 0x1
#define _B4CON_B4RXFUL_LENGTH                               0x1
#define _B4CON_B4RXFUL_MASK                                 0x80
#define _B4CON_B4TXPRI0_POSN                                0x0
#define _B4CON_B4TXPRI0_POSITION                            0x0
#define _B4CON_B4TXPRI0_SIZE                                0x1
#define _B4CON_B4TXPRI0_LENGTH                              0x1
#define _B4CON_B4TXPRI0_MASK                                0x1
#define _B4CON_B4TXPRI1_POSN                                0x1
#define _B4CON_B4TXPRI1_POSITION                            0x1
#define _B4CON_B4TXPRI1_SIZE                                0x1
#define _B4CON_B4TXPRI1_LENGTH                              0x1
#define _B4CON_B4TXPRI1_MASK                                0x2
#define _B4CON_B4RTREN_POSN                                 0x2
#define _B4CON_B4RTREN_POSITION                             0x2
#define _B4CON_B4RTREN_SIZE                                 0x1
#define _B4CON_B4RTREN_LENGTH                               0x1
#define _B4CON_B4RTREN_MASK                                 0x4
#define _B4CON_B4TXREQ_POSN                                 0x3
#define _B4CON_B4TXREQ_POSITION                             0x3
#define _B4CON_B4TXREQ_SIZE                                 0x1
#define _B4CON_B4TXREQ_LENGTH                               0x1
#define _B4CON_B4TXREQ_MASK                                 0x8
#define _B4CON_B4TXERR_POSN                                 0x4
#define _B4CON_B4TXERR_POSITION                             0x4
#define _B4CON_B4TXERR_SIZE                                 0x1
#define _B4CON_B4TXERR_LENGTH                               0x1
#define _B4CON_B4TXERR_MASK                                 0x10
#define _B4CON_B4TXLARB_POSN                                0x5
#define _B4CON_B4TXLARB_POSITION                            0x5
#define _B4CON_B4TXLARB_SIZE                                0x1
#define _B4CON_B4TXLARB_LENGTH                              0x1
#define _B4CON_B4TXLARB_MASK                                0x20
#define _B4CON_B4TXABT_POSN                                 0x6
#define _B4CON_B4TXABT_POSITION                             0x6
#define _B4CON_B4TXABT_SIZE                                 0x1
#define _B4CON_B4TXABT_LENGTH                               0x1
#define _B4CON_B4TXABT_MASK                                 0x40
#define _B4CON_B4TXB3IF_POSN                                0x7
#define _B4CON_B4TXB3IF_POSITION                            0x7
#define _B4CON_B4TXB3IF_SIZE                                0x1
#define _B4CON_B4TXB3IF_LENGTH                              0x1
#define _B4CON_B4TXB3IF_MASK                                0x80

// Register: B4SIDH
#define B4SIDH B4SIDH
extern volatile unsigned char           B4SIDH              __at(0xE61);
#ifndef _LIB_BUILD
asm("B4SIDH equ 0E61h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned B4SID3                 :1;
        unsigned B4SID4                 :1;
        unsigned B4SID5                 :1;
        unsigned B4SID6                 :1;
        unsigned B4SID7                 :1;
        unsigned B4SID8                 :1;
        unsigned B4SID9                 :1;
        unsigned B4SID10                :1;
    };
} B4SIDHbits_t;
extern volatile B4SIDHbits_t B4SIDHbits __at(0xE61);
// bitfield macros
#define _B4SIDH_SID3_POSN                                   0x0
#define _B4SIDH_SID3_POSITION                               0x0
#define _B4SIDH_SID3_SIZE                                   0x1
#define _B4SIDH_SID3_LENGTH                                 0x1
#define _B4SIDH_SID3_MASK                                   0x1
#define _B4SIDH_SID4_POSN                                   0x1
#define _B4SIDH_SID4_POSITION                               0x1
#define _B4SIDH_SID4_SIZE                                   0x1
#define _B4SIDH_SID4_LENGTH                                 0x1
#define _B4SIDH_SID4_MASK                                   0x2
#define _B4SIDH_SID5_POSN                                   0x2
#define _B4SIDH_SID5_POSITION                               0x2
#define _B4SIDH_SID5_SIZE                                   0x1
#define _B4SIDH_SID5_LENGTH                                 0x1
#define _B4SIDH_SID5_MASK                                   0x4
#define _B4SIDH_SID6_POSN                                   0x3
#define _B4SIDH_SID6_POSITION                               0x3
#define _B4SIDH_SID6_SIZE                                   0x1
#define _B4SIDH_SID6_LENGTH                                 0x1
#define _B4SIDH_SID6_MASK                                   0x8
#define _B4SIDH_SID7_POSN                                   0x4
#define _B4SIDH_SID7_POSITION                               0x4
#define _B4SIDH_SID7_SIZE                                   0x1
#define _B4SIDH_SID7_LENGTH                                 0x1
#define _B4SIDH_SID7_MASK                                   0x10
#define _B4SIDH_SID8_POSN                                   0x5
#define _B4SIDH_SID8_POSITION                               0x5
#define _B4SIDH_SID8_SIZE                                   0x1
#define _B4SIDH_SID8_LENGTH                                 0x1
#define _B4SIDH_SID8_MASK                                   0x20
#define _B4SIDH_SID9_POSN                                   0x6
#define _B4SIDH_SID9_POSITION                               0x6
#define _B4SIDH_SID9_SIZE                                   0x1
#define _B4SIDH_SID9_LENGTH                                 0x1
#define _B4SIDH_SID9_MASK                                   0x40
#define _B4SIDH_SID10_POSN                                  0x7
#define _B4SIDH_SID10_POSITION                              0x7
#define _B4SIDH_SID10_SIZE                                  0x1
#define _B4SIDH_SID10_LENGTH                                0x1
#define _B4SIDH_SID10_MASK                                  0x80
#define _B4SIDH_B4SID3_POSN                                 0x0
#define _B4SIDH_B4SID3_POSITION                             0x0
#define _B4SIDH_B4SID3_SIZE                                 0x1
#define _B4SIDH_B4SID3_LENGTH                               0x1
#define _B4SIDH_B4SID3_MASK                                 0x1
#define _B4SIDH_B4SID4_POSN                                 0x1
#define _B4SIDH_B4SID4_POSITION                             0x1
#define _B4SIDH_B4SID4_SIZE                                 0x1
#define _B4SIDH_B4SID4_LENGTH                               0x1
#define _B4SIDH_B4SID4_MASK                                 0x2
#define _B4SIDH_B4SID5_POSN                                 0x2
#define _B4SIDH_B4SID5_POSITION                             0x2
#define _B4SIDH_B4SID5_SIZE                                 0x1
#define _B4SIDH_B4SID5_LENGTH                               0x1
#define _B4SIDH_B4SID5_MASK                                 0x4
#define _B4SIDH_B4SID6_POSN                                 0x3
#define _B4SIDH_B4SID6_POSITION                             0x3
#define _B4SIDH_B4SID6_SIZE                                 0x1
#define _B4SIDH_B4SID6_LENGTH                               0x1
#define _B4SIDH_B4SID6_MASK                                 0x8
#define _B4SIDH_B4SID7_POSN                                 0x4
#define _B4SIDH_B4SID7_POSITION                             0x4
#define _B4SIDH_B4SID7_SIZE                                 0x1
#define _B4SIDH_B4SID7_LENGTH                               0x1
#define _B4SIDH_B4SID7_MASK                                 0x10
#define _B4SIDH_B4SID8_POSN                                 0x5
#define _B4SIDH_B4SID8_POSITION                             0x5
#define _B4SIDH_B4SID8_SIZE                                 0x1
#define _B4SIDH_B4SID8_LENGTH                               0x1
#define _B4SIDH_B4SID8_MASK                                 0x20
#define _B4SIDH_B4SID9_POSN                                 0x6
#define _B4SIDH_B4SID9_POSITION                             0x6
#define _B4SIDH_B4SID9_SIZE                                 0x1
#define _B4SIDH_B4SID9_LENGTH                               0x1
#define _B4SIDH_B4SID9_MASK                                 0x40
#define _B4SIDH_B4SID10_POSN                                0x7
#define _B4SIDH_B4SID10_POSITION                            0x7
#define _B4SIDH_B4SID10_SIZE                                0x1
#define _B4SIDH_B4SID10_LENGTH                              0x1
#define _B4SIDH_B4SID10_MASK                                0x80

// Register: B4SIDL
#define B4SIDL B4SIDL
extern volatile unsigned char           B4SIDL              __at(0xE62);
#ifndef _LIB_BUILD
asm("B4SIDL equ 0E62h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXID                   :1;
        unsigned SRR                    :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned B4EID16                :1;
        unsigned B4EID17                :1;
        unsigned                        :1;
        unsigned B4EXID                 :1;
        unsigned B4SRR                  :1;
        unsigned B4SID0                 :1;
        unsigned B4SID1                 :1;
        unsigned B4SID2                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned B4EXIDE                :1;
    };
} B4SIDLbits_t;
extern volatile B4SIDLbits_t B4SIDLbits __at(0xE62);
// bitfield macros
#define _B4SIDL_EID16_POSN                                  0x0
#define _B4SIDL_EID16_POSITION                              0x0
#define _B4SIDL_EID16_SIZE                                  0x1
#define _B4SIDL_EID16_LENGTH                                0x1
#define _B4SIDL_EID16_MASK                                  0x1
#define _B4SIDL_EID17_POSN                                  0x1
#define _B4SIDL_EID17_POSITION                              0x1
#define _B4SIDL_EID17_SIZE                                  0x1
#define _B4SIDL_EID17_LENGTH                                0x1
#define _B4SIDL_EID17_MASK                                  0x2
#define _B4SIDL_EXID_POSN                                   0x3
#define _B4SIDL_EXID_POSITION                               0x3
#define _B4SIDL_EXID_SIZE                                   0x1
#define _B4SIDL_EXID_LENGTH                                 0x1
#define _B4SIDL_EXID_MASK                                   0x8
#define _B4SIDL_SRR_POSN                                    0x4
#define _B4SIDL_SRR_POSITION                                0x4
#define _B4SIDL_SRR_SIZE                                    0x1
#define _B4SIDL_SRR_LENGTH                                  0x1
#define _B4SIDL_SRR_MASK                                    0x10
#define _B4SIDL_SID0_POSN                                   0x5
#define _B4SIDL_SID0_POSITION                               0x5
#define _B4SIDL_SID0_SIZE                                   0x1
#define _B4SIDL_SID0_LENGTH                                 0x1
#define _B4SIDL_SID0_MASK                                   0x20
#define _B4SIDL_SID1_POSN                                   0x6
#define _B4SIDL_SID1_POSITION                               0x6
#define _B4SIDL_SID1_SIZE                                   0x1
#define _B4SIDL_SID1_LENGTH                                 0x1
#define _B4SIDL_SID1_MASK                                   0x40
#define _B4SIDL_SID2_POSN                                   0x7
#define _B4SIDL_SID2_POSITION                               0x7
#define _B4SIDL_SID2_SIZE                                   0x1
#define _B4SIDL_SID2_LENGTH                                 0x1
#define _B4SIDL_SID2_MASK                                   0x80
#define _B4SIDL_EXIDE_POSN                                  0x3
#define _B4SIDL_EXIDE_POSITION                              0x3
#define _B4SIDL_EXIDE_SIZE                                  0x1
#define _B4SIDL_EXIDE_LENGTH                                0x1
#define _B4SIDL_EXIDE_MASK                                  0x8
#define _B4SIDL_B4EID16_POSN                                0x0
#define _B4SIDL_B4EID16_POSITION                            0x0
#define _B4SIDL_B4EID16_SIZE                                0x1
#define _B4SIDL_B4EID16_LENGTH                              0x1
#define _B4SIDL_B4EID16_MASK                                0x1
#define _B4SIDL_B4EID17_POSN                                0x1
#define _B4SIDL_B4EID17_POSITION                            0x1
#define _B4SIDL_B4EID17_SIZE                                0x1
#define _B4SIDL_B4EID17_LENGTH                              0x1
#define _B4SIDL_B4EID17_MASK                                0x2
#define _B4SIDL_B4EXID_POSN                                 0x3
#define _B4SIDL_B4EXID_POSITION                             0x3
#define _B4SIDL_B4EXID_SIZE                                 0x1
#define _B4SIDL_B4EXID_LENGTH                               0x1
#define _B4SIDL_B4EXID_MASK                                 0x8
#define _B4SIDL_B4SRR_POSN                                  0x4
#define _B4SIDL_B4SRR_POSITION                              0x4
#define _B4SIDL_B4SRR_SIZE                                  0x1
#define _B4SIDL_B4SRR_LENGTH                                0x1
#define _B4SIDL_B4SRR_MASK                                  0x10
#define _B4SIDL_B4SID0_POSN                                 0x5
#define _B4SIDL_B4SID0_POSITION                             0x5
#define _B4SIDL_B4SID0_SIZE                                 0x1
#define _B4SIDL_B4SID0_LENGTH                               0x1
#define _B4SIDL_B4SID0_MASK                                 0x20
#define _B4SIDL_B4SID1_POSN                                 0x6
#define _B4SIDL_B4SID1_POSITION                             0x6
#define _B4SIDL_B4SID1_SIZE                                 0x1
#define _B4SIDL_B4SID1_LENGTH                               0x1
#define _B4SIDL_B4SID1_MASK                                 0x40
#define _B4SIDL_B4SID2_POSN                                 0x7
#define _B4SIDL_B4SID2_POSITION                             0x7
#define _B4SIDL_B4SID2_SIZE                                 0x1
#define _B4SIDL_B4SID2_LENGTH                               0x1
#define _B4SIDL_B4SID2_MASK                                 0x80
#define _B4SIDL_B4EXIDE_POSN                                0x3
#define _B4SIDL_B4EXIDE_POSITION                            0x3
#define _B4SIDL_B4EXIDE_SIZE                                0x1
#define _B4SIDL_B4EXIDE_LENGTH                              0x1
#define _B4SIDL_B4EXIDE_MASK                                0x8

// Register: B4EIDH
#define B4EIDH B4EIDH
extern volatile unsigned char           B4EIDH              __at(0xE63);
#ifndef _LIB_BUILD
asm("B4EIDH equ 0E63h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned B4EID8                 :1;
        unsigned B4EID9                 :1;
        unsigned B4EID10                :1;
        unsigned B4EID11                :1;
        unsigned B4EID12                :1;
        unsigned B4EID13                :1;
        unsigned B4EID14                :1;
        unsigned B4EID15                :1;
    };
} B4EIDHbits_t;
extern volatile B4EIDHbits_t B4EIDHbits __at(0xE63);
// bitfield macros
#define _B4EIDH_EID8_POSN                                   0x0
#define _B4EIDH_EID8_POSITION                               0x0
#define _B4EIDH_EID8_SIZE                                   0x1
#define _B4EIDH_EID8_LENGTH                                 0x1
#define _B4EIDH_EID8_MASK                                   0x1
#define _B4EIDH_EID9_POSN                                   0x1
#define _B4EIDH_EID9_POSITION                               0x1
#define _B4EIDH_EID9_SIZE                                   0x1
#define _B4EIDH_EID9_LENGTH                                 0x1
#define _B4EIDH_EID9_MASK                                   0x2
#define _B4EIDH_EID10_POSN                                  0x2
#define _B4EIDH_EID10_POSITION                              0x2
#define _B4EIDH_EID10_SIZE                                  0x1
#define _B4EIDH_EID10_LENGTH                                0x1
#define _B4EIDH_EID10_MASK                                  0x4
#define _B4EIDH_EID11_POSN                                  0x3
#define _B4EIDH_EID11_POSITION                              0x3
#define _B4EIDH_EID11_SIZE                                  0x1
#define _B4EIDH_EID11_LENGTH                                0x1
#define _B4EIDH_EID11_MASK                                  0x8
#define _B4EIDH_EID12_POSN                                  0x4
#define _B4EIDH_EID12_POSITION                              0x4
#define _B4EIDH_EID12_SIZE                                  0x1
#define _B4EIDH_EID12_LENGTH                                0x1
#define _B4EIDH_EID12_MASK                                  0x10
#define _B4EIDH_EID13_POSN                                  0x5
#define _B4EIDH_EID13_POSITION                              0x5
#define _B4EIDH_EID13_SIZE                                  0x1
#define _B4EIDH_EID13_LENGTH                                0x1
#define _B4EIDH_EID13_MASK                                  0x20
#define _B4EIDH_EID14_POSN                                  0x6
#define _B4EIDH_EID14_POSITION                              0x6
#define _B4EIDH_EID14_SIZE                                  0x1
#define _B4EIDH_EID14_LENGTH                                0x1
#define _B4EIDH_EID14_MASK                                  0x40
#define _B4EIDH_EID15_POSN                                  0x7
#define _B4EIDH_EID15_POSITION                              0x7
#define _B4EIDH_EID15_SIZE                                  0x1
#define _B4EIDH_EID15_LENGTH                                0x1
#define _B4EIDH_EID15_MASK                                  0x80
#define _B4EIDH_B4EID8_POSN                                 0x0
#define _B4EIDH_B4EID8_POSITION                             0x0
#define _B4EIDH_B4EID8_SIZE                                 0x1
#define _B4EIDH_B4EID8_LENGTH                               0x1
#define _B4EIDH_B4EID8_MASK                                 0x1
#define _B4EIDH_B4EID9_POSN                                 0x1
#define _B4EIDH_B4EID9_POSITION                             0x1
#define _B4EIDH_B4EID9_SIZE                                 0x1
#define _B4EIDH_B4EID9_LENGTH                               0x1
#define _B4EIDH_B4EID9_MASK                                 0x2
#define _B4EIDH_B4EID10_POSN                                0x2
#define _B4EIDH_B4EID10_POSITION                            0x2
#define _B4EIDH_B4EID10_SIZE                                0x1
#define _B4EIDH_B4EID10_LENGTH                              0x1
#define _B4EIDH_B4EID10_MASK                                0x4
#define _B4EIDH_B4EID11_POSN                                0x3
#define _B4EIDH_B4EID11_POSITION                            0x3
#define _B4EIDH_B4EID11_SIZE                                0x1
#define _B4EIDH_B4EID11_LENGTH                              0x1
#define _B4EIDH_B4EID11_MASK                                0x8
#define _B4EIDH_B4EID12_POSN                                0x4
#define _B4EIDH_B4EID12_POSITION                            0x4
#define _B4EIDH_B4EID12_SIZE                                0x1
#define _B4EIDH_B4EID12_LENGTH                              0x1
#define _B4EIDH_B4EID12_MASK                                0x10
#define _B4EIDH_B4EID13_POSN                                0x5
#define _B4EIDH_B4EID13_POSITION                            0x5
#define _B4EIDH_B4EID13_SIZE                                0x1
#define _B4EIDH_B4EID13_LENGTH                              0x1
#define _B4EIDH_B4EID13_MASK                                0x20
#define _B4EIDH_B4EID14_POSN                                0x6
#define _B4EIDH_B4EID14_POSITION                            0x6
#define _B4EIDH_B4EID14_SIZE                                0x1
#define _B4EIDH_B4EID14_LENGTH                              0x1
#define _B4EIDH_B4EID14_MASK                                0x40
#define _B4EIDH_B4EID15_POSN                                0x7
#define _B4EIDH_B4EID15_POSITION                            0x7
#define _B4EIDH_B4EID15_SIZE                                0x1
#define _B4EIDH_B4EID15_LENGTH                              0x1
#define _B4EIDH_B4EID15_MASK                                0x80

// Register: B4EIDL
#define B4EIDL B4EIDL
extern volatile unsigned char           B4EIDL              __at(0xE64);
#ifndef _LIB_BUILD
asm("B4EIDL equ 0E64h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned B4EID0                 :1;
        unsigned B4EID1                 :1;
        unsigned B4EID2                 :1;
        unsigned B4EID3                 :1;
        unsigned B4EID4                 :1;
        unsigned B4EID5                 :1;
        unsigned B4EID6                 :1;
        unsigned B4EID7                 :1;
    };
} B4EIDLbits_t;
extern volatile B4EIDLbits_t B4EIDLbits __at(0xE64);
// bitfield macros
#define _B4EIDL_EID0_POSN                                   0x0
#define _B4EIDL_EID0_POSITION                               0x0
#define _B4EIDL_EID0_SIZE                                   0x1
#define _B4EIDL_EID0_LENGTH                                 0x1
#define _B4EIDL_EID0_MASK                                   0x1
#define _B4EIDL_EID1_POSN                                   0x1
#define _B4EIDL_EID1_POSITION                               0x1
#define _B4EIDL_EID1_SIZE                                   0x1
#define _B4EIDL_EID1_LENGTH                                 0x1
#define _B4EIDL_EID1_MASK                                   0x2
#define _B4EIDL_EID2_POSN                                   0x2
#define _B4EIDL_EID2_POSITION                               0x2
#define _B4EIDL_EID2_SIZE                                   0x1
#define _B4EIDL_EID2_LENGTH                                 0x1
#define _B4EIDL_EID2_MASK                                   0x4
#define _B4EIDL_EID3_POSN                                   0x3
#define _B4EIDL_EID3_POSITION                               0x3
#define _B4EIDL_EID3_SIZE                                   0x1
#define _B4EIDL_EID3_LENGTH                                 0x1
#define _B4EIDL_EID3_MASK                                   0x8
#define _B4EIDL_EID4_POSN                                   0x4
#define _B4EIDL_EID4_POSITION                               0x4
#define _B4EIDL_EID4_SIZE                                   0x1
#define _B4EIDL_EID4_LENGTH                                 0x1
#define _B4EIDL_EID4_MASK                                   0x10
#define _B4EIDL_EID5_POSN                                   0x5
#define _B4EIDL_EID5_POSITION                               0x5
#define _B4EIDL_EID5_SIZE                                   0x1
#define _B4EIDL_EID5_LENGTH                                 0x1
#define _B4EIDL_EID5_MASK                                   0x20
#define _B4EIDL_EID6_POSN                                   0x6
#define _B4EIDL_EID6_POSITION                               0x6
#define _B4EIDL_EID6_SIZE                                   0x1
#define _B4EIDL_EID6_LENGTH                                 0x1
#define _B4EIDL_EID6_MASK                                   0x40
#define _B4EIDL_EID7_POSN                                   0x7
#define _B4EIDL_EID7_POSITION                               0x7
#define _B4EIDL_EID7_SIZE                                   0x1
#define _B4EIDL_EID7_LENGTH                                 0x1
#define _B4EIDL_EID7_MASK                                   0x80
#define _B4EIDL_B4EID0_POSN                                 0x0
#define _B4EIDL_B4EID0_POSITION                             0x0
#define _B4EIDL_B4EID0_SIZE                                 0x1
#define _B4EIDL_B4EID0_LENGTH                               0x1
#define _B4EIDL_B4EID0_MASK                                 0x1
#define _B4EIDL_B4EID1_POSN                                 0x1
#define _B4EIDL_B4EID1_POSITION                             0x1
#define _B4EIDL_B4EID1_SIZE                                 0x1
#define _B4EIDL_B4EID1_LENGTH                               0x1
#define _B4EIDL_B4EID1_MASK                                 0x2
#define _B4EIDL_B4EID2_POSN                                 0x2
#define _B4EIDL_B4EID2_POSITION                             0x2
#define _B4EIDL_B4EID2_SIZE                                 0x1
#define _B4EIDL_B4EID2_LENGTH                               0x1
#define _B4EIDL_B4EID2_MASK                                 0x4
#define _B4EIDL_B4EID3_POSN                                 0x3
#define _B4EIDL_B4EID3_POSITION                             0x3
#define _B4EIDL_B4EID3_SIZE                                 0x1
#define _B4EIDL_B4EID3_LENGTH                               0x1
#define _B4EIDL_B4EID3_MASK                                 0x8
#define _B4EIDL_B4EID4_POSN                                 0x4
#define _B4EIDL_B4EID4_POSITION                             0x4
#define _B4EIDL_B4EID4_SIZE                                 0x1
#define _B4EIDL_B4EID4_LENGTH                               0x1
#define _B4EIDL_B4EID4_MASK                                 0x10
#define _B4EIDL_B4EID5_POSN                                 0x5
#define _B4EIDL_B4EID5_POSITION                             0x5
#define _B4EIDL_B4EID5_SIZE                                 0x1
#define _B4EIDL_B4EID5_LENGTH                               0x1
#define _B4EIDL_B4EID5_MASK                                 0x20
#define _B4EIDL_B4EID6_POSN                                 0x6
#define _B4EIDL_B4EID6_POSITION                             0x6
#define _B4EIDL_B4EID6_SIZE                                 0x1
#define _B4EIDL_B4EID6_LENGTH                               0x1
#define _B4EIDL_B4EID6_MASK                                 0x40
#define _B4EIDL_B4EID7_POSN                                 0x7
#define _B4EIDL_B4EID7_POSITION                             0x7
#define _B4EIDL_B4EID7_SIZE                                 0x1
#define _B4EIDL_B4EID7_LENGTH                               0x1
#define _B4EIDL_B4EID7_MASK                                 0x80

// Register: B4DLC
#define B4DLC B4DLC
extern volatile unsigned char           B4DLC               __at(0xE65);
#ifndef _LIB_BUILD
asm("B4DLC equ 0E65h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RXRTR                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned RESRB0                 :1;
        unsigned RESRB1                 :1;
        unsigned TXRTR                  :1;
    };
    struct {
        unsigned B4DLC0                 :1;
        unsigned B4DLC1                 :1;
        unsigned B4DLC2                 :1;
        unsigned B4DLC3                 :1;
        unsigned B4RB0                  :1;
        unsigned B4RB1                  :1;
        unsigned B4RXRTR                :1;
    };
} B4DLCbits_t;
extern volatile B4DLCbits_t B4DLCbits __at(0xE65);
// bitfield macros
#define _B4DLC_DLC0_POSN                                    0x0
#define _B4DLC_DLC0_POSITION                                0x0
#define _B4DLC_DLC0_SIZE                                    0x1
#define _B4DLC_DLC0_LENGTH                                  0x1
#define _B4DLC_DLC0_MASK                                    0x1
#define _B4DLC_DLC1_POSN                                    0x1
#define _B4DLC_DLC1_POSITION                                0x1
#define _B4DLC_DLC1_SIZE                                    0x1
#define _B4DLC_DLC1_LENGTH                                  0x1
#define _B4DLC_DLC1_MASK                                    0x2
#define _B4DLC_DLC2_POSN                                    0x2
#define _B4DLC_DLC2_POSITION                                0x2
#define _B4DLC_DLC2_SIZE                                    0x1
#define _B4DLC_DLC2_LENGTH                                  0x1
#define _B4DLC_DLC2_MASK                                    0x4
#define _B4DLC_DLC3_POSN                                    0x3
#define _B4DLC_DLC3_POSITION                                0x3
#define _B4DLC_DLC3_SIZE                                    0x1
#define _B4DLC_DLC3_LENGTH                                  0x1
#define _B4DLC_DLC3_MASK                                    0x8
#define _B4DLC_RB0_POSN                                     0x4
#define _B4DLC_RB0_POSITION                                 0x4
#define _B4DLC_RB0_SIZE                                     0x1
#define _B4DLC_RB0_LENGTH                                   0x1
#define _B4DLC_RB0_MASK                                     0x10
#define _B4DLC_RB1_POSN                                     0x5
#define _B4DLC_RB1_POSITION                                 0x5
#define _B4DLC_RB1_SIZE                                     0x1
#define _B4DLC_RB1_LENGTH                                   0x1
#define _B4DLC_RB1_MASK                                     0x20
#define _B4DLC_RXRTR_POSN                                   0x6
#define _B4DLC_RXRTR_POSITION                               0x6
#define _B4DLC_RXRTR_SIZE                                   0x1
#define _B4DLC_RXRTR_LENGTH                                 0x1
#define _B4DLC_RXRTR_MASK                                   0x40
#define _B4DLC_RESRB0_POSN                                  0x4
#define _B4DLC_RESRB0_POSITION                              0x4
#define _B4DLC_RESRB0_SIZE                                  0x1
#define _B4DLC_RESRB0_LENGTH                                0x1
#define _B4DLC_RESRB0_MASK                                  0x10
#define _B4DLC_RESRB1_POSN                                  0x5
#define _B4DLC_RESRB1_POSITION                              0x5
#define _B4DLC_RESRB1_SIZE                                  0x1
#define _B4DLC_RESRB1_LENGTH                                0x1
#define _B4DLC_RESRB1_MASK                                  0x20
#define _B4DLC_TXRTR_POSN                                   0x6
#define _B4DLC_TXRTR_POSITION                               0x6
#define _B4DLC_TXRTR_SIZE                                   0x1
#define _B4DLC_TXRTR_LENGTH                                 0x1
#define _B4DLC_TXRTR_MASK                                   0x40
#define _B4DLC_B4DLC0_POSN                                  0x0
#define _B4DLC_B4DLC0_POSITION                              0x0
#define _B4DLC_B4DLC0_SIZE                                  0x1
#define _B4DLC_B4DLC0_LENGTH                                0x1
#define _B4DLC_B4DLC0_MASK                                  0x1
#define _B4DLC_B4DLC1_POSN                                  0x1
#define _B4DLC_B4DLC1_POSITION                              0x1
#define _B4DLC_B4DLC1_SIZE                                  0x1
#define _B4DLC_B4DLC1_LENGTH                                0x1
#define _B4DLC_B4DLC1_MASK                                  0x2
#define _B4DLC_B4DLC2_POSN                                  0x2
#define _B4DLC_B4DLC2_POSITION                              0x2
#define _B4DLC_B4DLC2_SIZE                                  0x1
#define _B4DLC_B4DLC2_LENGTH                                0x1
#define _B4DLC_B4DLC2_MASK                                  0x4
#define _B4DLC_B4DLC3_POSN                                  0x3
#define _B4DLC_B4DLC3_POSITION                              0x3
#define _B4DLC_B4DLC3_SIZE                                  0x1
#define _B4DLC_B4DLC3_LENGTH                                0x1
#define _B4DLC_B4DLC3_MASK                                  0x8
#define _B4DLC_B4RB0_POSN                                   0x4
#define _B4DLC_B4RB0_POSITION                               0x4
#define _B4DLC_B4RB0_SIZE                                   0x1
#define _B4DLC_B4RB0_LENGTH                                 0x1
#define _B4DLC_B4RB0_MASK                                   0x10
#define _B4DLC_B4RB1_POSN                                   0x5
#define _B4DLC_B4RB1_POSITION                               0x5
#define _B4DLC_B4RB1_SIZE                                   0x1
#define _B4DLC_B4RB1_LENGTH                                 0x1
#define _B4DLC_B4RB1_MASK                                   0x20
#define _B4DLC_B4RXRTR_POSN                                 0x6
#define _B4DLC_B4RXRTR_POSITION                             0x6
#define _B4DLC_B4RXRTR_SIZE                                 0x1
#define _B4DLC_B4RXRTR_LENGTH                               0x1
#define _B4DLC_B4RXRTR_MASK                                 0x40

// Register: B4D0
#define B4D0 B4D0
extern volatile unsigned char           B4D0                __at(0xE66);
#ifndef _LIB_BUILD
asm("B4D0 equ 0E66h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B4D00                  :1;
        unsigned B4D01                  :1;
        unsigned B4D02                  :1;
        unsigned B4D03                  :1;
        unsigned B4D04                  :1;
        unsigned B4D05                  :1;
        unsigned B4D06                  :1;
        unsigned B4D07                  :1;
    };
} B4D0bits_t;
extern volatile B4D0bits_t B4D0bits __at(0xE66);
// bitfield macros
#define _B4D0_B4D00_POSN                                    0x0
#define _B4D0_B4D00_POSITION                                0x0
#define _B4D0_B4D00_SIZE                                    0x1
#define _B4D0_B4D00_LENGTH                                  0x1
#define _B4D0_B4D00_MASK                                    0x1
#define _B4D0_B4D01_POSN                                    0x1
#define _B4D0_B4D01_POSITION                                0x1
#define _B4D0_B4D01_SIZE                                    0x1
#define _B4D0_B4D01_LENGTH                                  0x1
#define _B4D0_B4D01_MASK                                    0x2
#define _B4D0_B4D02_POSN                                    0x2
#define _B4D0_B4D02_POSITION                                0x2
#define _B4D0_B4D02_SIZE                                    0x1
#define _B4D0_B4D02_LENGTH                                  0x1
#define _B4D0_B4D02_MASK                                    0x4
#define _B4D0_B4D03_POSN                                    0x3
#define _B4D0_B4D03_POSITION                                0x3
#define _B4D0_B4D03_SIZE                                    0x1
#define _B4D0_B4D03_LENGTH                                  0x1
#define _B4D0_B4D03_MASK                                    0x8
#define _B4D0_B4D04_POSN                                    0x4
#define _B4D0_B4D04_POSITION                                0x4
#define _B4D0_B4D04_SIZE                                    0x1
#define _B4D0_B4D04_LENGTH                                  0x1
#define _B4D0_B4D04_MASK                                    0x10
#define _B4D0_B4D05_POSN                                    0x5
#define _B4D0_B4D05_POSITION                                0x5
#define _B4D0_B4D05_SIZE                                    0x1
#define _B4D0_B4D05_LENGTH                                  0x1
#define _B4D0_B4D05_MASK                                    0x20
#define _B4D0_B4D06_POSN                                    0x6
#define _B4D0_B4D06_POSITION                                0x6
#define _B4D0_B4D06_SIZE                                    0x1
#define _B4D0_B4D06_LENGTH                                  0x1
#define _B4D0_B4D06_MASK                                    0x40
#define _B4D0_B4D07_POSN                                    0x7
#define _B4D0_B4D07_POSITION                                0x7
#define _B4D0_B4D07_SIZE                                    0x1
#define _B4D0_B4D07_LENGTH                                  0x1
#define _B4D0_B4D07_MASK                                    0x80

// Register: B4D1
#define B4D1 B4D1
extern volatile unsigned char           B4D1                __at(0xE67);
#ifndef _LIB_BUILD
asm("B4D1 equ 0E67h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B4D10                  :1;
        unsigned B4D11                  :1;
        unsigned B4D12                  :1;
        unsigned B4D13                  :1;
        unsigned B4D14                  :1;
        unsigned B4D15                  :1;
        unsigned B4D16                  :1;
        unsigned B4D17                  :1;
    };
} B4D1bits_t;
extern volatile B4D1bits_t B4D1bits __at(0xE67);
// bitfield macros
#define _B4D1_B4D10_POSN                                    0x0
#define _B4D1_B4D10_POSITION                                0x0
#define _B4D1_B4D10_SIZE                                    0x1
#define _B4D1_B4D10_LENGTH                                  0x1
#define _B4D1_B4D10_MASK                                    0x1
#define _B4D1_B4D11_POSN                                    0x1
#define _B4D1_B4D11_POSITION                                0x1
#define _B4D1_B4D11_SIZE                                    0x1
#define _B4D1_B4D11_LENGTH                                  0x1
#define _B4D1_B4D11_MASK                                    0x2
#define _B4D1_B4D12_POSN                                    0x2
#define _B4D1_B4D12_POSITION                                0x2
#define _B4D1_B4D12_SIZE                                    0x1
#define _B4D1_B4D12_LENGTH                                  0x1
#define _B4D1_B4D12_MASK                                    0x4
#define _B4D1_B4D13_POSN                                    0x3
#define _B4D1_B4D13_POSITION                                0x3
#define _B4D1_B4D13_SIZE                                    0x1
#define _B4D1_B4D13_LENGTH                                  0x1
#define _B4D1_B4D13_MASK                                    0x8
#define _B4D1_B4D14_POSN                                    0x4
#define _B4D1_B4D14_POSITION                                0x4
#define _B4D1_B4D14_SIZE                                    0x1
#define _B4D1_B4D14_LENGTH                                  0x1
#define _B4D1_B4D14_MASK                                    0x10
#define _B4D1_B4D15_POSN                                    0x5
#define _B4D1_B4D15_POSITION                                0x5
#define _B4D1_B4D15_SIZE                                    0x1
#define _B4D1_B4D15_LENGTH                                  0x1
#define _B4D1_B4D15_MASK                                    0x20
#define _B4D1_B4D16_POSN                                    0x6
#define _B4D1_B4D16_POSITION                                0x6
#define _B4D1_B4D16_SIZE                                    0x1
#define _B4D1_B4D16_LENGTH                                  0x1
#define _B4D1_B4D16_MASK                                    0x40
#define _B4D1_B4D17_POSN                                    0x7
#define _B4D1_B4D17_POSITION                                0x7
#define _B4D1_B4D17_SIZE                                    0x1
#define _B4D1_B4D17_LENGTH                                  0x1
#define _B4D1_B4D17_MASK                                    0x80

// Register: B4D2
#define B4D2 B4D2
extern volatile unsigned char           B4D2                __at(0xE68);
#ifndef _LIB_BUILD
asm("B4D2 equ 0E68h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B4D20                  :1;
        unsigned B4D21                  :1;
        unsigned B4D22                  :1;
        unsigned B4D23                  :1;
        unsigned B4D24                  :1;
        unsigned B4D25                  :1;
        unsigned B4D26                  :1;
        unsigned B4D27                  :1;
    };
} B4D2bits_t;
extern volatile B4D2bits_t B4D2bits __at(0xE68);
// bitfield macros
#define _B4D2_B4D20_POSN                                    0x0
#define _B4D2_B4D20_POSITION                                0x0
#define _B4D2_B4D20_SIZE                                    0x1
#define _B4D2_B4D20_LENGTH                                  0x1
#define _B4D2_B4D20_MASK                                    0x1
#define _B4D2_B4D21_POSN                                    0x1
#define _B4D2_B4D21_POSITION                                0x1
#define _B4D2_B4D21_SIZE                                    0x1
#define _B4D2_B4D21_LENGTH                                  0x1
#define _B4D2_B4D21_MASK                                    0x2
#define _B4D2_B4D22_POSN                                    0x2
#define _B4D2_B4D22_POSITION                                0x2
#define _B4D2_B4D22_SIZE                                    0x1
#define _B4D2_B4D22_LENGTH                                  0x1
#define _B4D2_B4D22_MASK                                    0x4
#define _B4D2_B4D23_POSN                                    0x3
#define _B4D2_B4D23_POSITION                                0x3
#define _B4D2_B4D23_SIZE                                    0x1
#define _B4D2_B4D23_LENGTH                                  0x1
#define _B4D2_B4D23_MASK                                    0x8
#define _B4D2_B4D24_POSN                                    0x4
#define _B4D2_B4D24_POSITION                                0x4
#define _B4D2_B4D24_SIZE                                    0x1
#define _B4D2_B4D24_LENGTH                                  0x1
#define _B4D2_B4D24_MASK                                    0x10
#define _B4D2_B4D25_POSN                                    0x5
#define _B4D2_B4D25_POSITION                                0x5
#define _B4D2_B4D25_SIZE                                    0x1
#define _B4D2_B4D25_LENGTH                                  0x1
#define _B4D2_B4D25_MASK                                    0x20
#define _B4D2_B4D26_POSN                                    0x6
#define _B4D2_B4D26_POSITION                                0x6
#define _B4D2_B4D26_SIZE                                    0x1
#define _B4D2_B4D26_LENGTH                                  0x1
#define _B4D2_B4D26_MASK                                    0x40
#define _B4D2_B4D27_POSN                                    0x7
#define _B4D2_B4D27_POSITION                                0x7
#define _B4D2_B4D27_SIZE                                    0x1
#define _B4D2_B4D27_LENGTH                                  0x1
#define _B4D2_B4D27_MASK                                    0x80

// Register: B4D3
#define B4D3 B4D3
extern volatile unsigned char           B4D3                __at(0xE69);
#ifndef _LIB_BUILD
asm("B4D3 equ 0E69h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B4D30                  :1;
        unsigned B4D31                  :1;
        unsigned B4D32                  :1;
        unsigned B4D33                  :1;
        unsigned B4D34                  :1;
        unsigned B4D35                  :1;
        unsigned B4D36                  :1;
        unsigned B4D37                  :1;
    };
} B4D3bits_t;
extern volatile B4D3bits_t B4D3bits __at(0xE69);
// bitfield macros
#define _B4D3_B4D30_POSN                                    0x0
#define _B4D3_B4D30_POSITION                                0x0
#define _B4D3_B4D30_SIZE                                    0x1
#define _B4D3_B4D30_LENGTH                                  0x1
#define _B4D3_B4D30_MASK                                    0x1
#define _B4D3_B4D31_POSN                                    0x1
#define _B4D3_B4D31_POSITION                                0x1
#define _B4D3_B4D31_SIZE                                    0x1
#define _B4D3_B4D31_LENGTH                                  0x1
#define _B4D3_B4D31_MASK                                    0x2
#define _B4D3_B4D32_POSN                                    0x2
#define _B4D3_B4D32_POSITION                                0x2
#define _B4D3_B4D32_SIZE                                    0x1
#define _B4D3_B4D32_LENGTH                                  0x1
#define _B4D3_B4D32_MASK                                    0x4
#define _B4D3_B4D33_POSN                                    0x3
#define _B4D3_B4D33_POSITION                                0x3
#define _B4D3_B4D33_SIZE                                    0x1
#define _B4D3_B4D33_LENGTH                                  0x1
#define _B4D3_B4D33_MASK                                    0x8
#define _B4D3_B4D34_POSN                                    0x4
#define _B4D3_B4D34_POSITION                                0x4
#define _B4D3_B4D34_SIZE                                    0x1
#define _B4D3_B4D34_LENGTH                                  0x1
#define _B4D3_B4D34_MASK                                    0x10
#define _B4D3_B4D35_POSN                                    0x5
#define _B4D3_B4D35_POSITION                                0x5
#define _B4D3_B4D35_SIZE                                    0x1
#define _B4D3_B4D35_LENGTH                                  0x1
#define _B4D3_B4D35_MASK                                    0x20
#define _B4D3_B4D36_POSN                                    0x6
#define _B4D3_B4D36_POSITION                                0x6
#define _B4D3_B4D36_SIZE                                    0x1
#define _B4D3_B4D36_LENGTH                                  0x1
#define _B4D3_B4D36_MASK                                    0x40
#define _B4D3_B4D37_POSN                                    0x7
#define _B4D3_B4D37_POSITION                                0x7
#define _B4D3_B4D37_SIZE                                    0x1
#define _B4D3_B4D37_LENGTH                                  0x1
#define _B4D3_B4D37_MASK                                    0x80

// Register: B4D4
#define B4D4 B4D4
extern volatile unsigned char           B4D4                __at(0xE6A);
#ifndef _LIB_BUILD
asm("B4D4 equ 0E6Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B4D40                  :1;
        unsigned B4D41                  :1;
        unsigned B4D42                  :1;
        unsigned B4D43                  :1;
        unsigned B4D44                  :1;
        unsigned B4D45                  :1;
        unsigned B4D46                  :1;
        unsigned B4D47                  :1;
    };
} B4D4bits_t;
extern volatile B4D4bits_t B4D4bits __at(0xE6A);
// bitfield macros
#define _B4D4_B4D40_POSN                                    0x0
#define _B4D4_B4D40_POSITION                                0x0
#define _B4D4_B4D40_SIZE                                    0x1
#define _B4D4_B4D40_LENGTH                                  0x1
#define _B4D4_B4D40_MASK                                    0x1
#define _B4D4_B4D41_POSN                                    0x1
#define _B4D4_B4D41_POSITION                                0x1
#define _B4D4_B4D41_SIZE                                    0x1
#define _B4D4_B4D41_LENGTH                                  0x1
#define _B4D4_B4D41_MASK                                    0x2
#define _B4D4_B4D42_POSN                                    0x2
#define _B4D4_B4D42_POSITION                                0x2
#define _B4D4_B4D42_SIZE                                    0x1
#define _B4D4_B4D42_LENGTH                                  0x1
#define _B4D4_B4D42_MASK                                    0x4
#define _B4D4_B4D43_POSN                                    0x3
#define _B4D4_B4D43_POSITION                                0x3
#define _B4D4_B4D43_SIZE                                    0x1
#define _B4D4_B4D43_LENGTH                                  0x1
#define _B4D4_B4D43_MASK                                    0x8
#define _B4D4_B4D44_POSN                                    0x4
#define _B4D4_B4D44_POSITION                                0x4
#define _B4D4_B4D44_SIZE                                    0x1
#define _B4D4_B4D44_LENGTH                                  0x1
#define _B4D4_B4D44_MASK                                    0x10
#define _B4D4_B4D45_POSN                                    0x5
#define _B4D4_B4D45_POSITION                                0x5
#define _B4D4_B4D45_SIZE                                    0x1
#define _B4D4_B4D45_LENGTH                                  0x1
#define _B4D4_B4D45_MASK                                    0x20
#define _B4D4_B4D46_POSN                                    0x6
#define _B4D4_B4D46_POSITION                                0x6
#define _B4D4_B4D46_SIZE                                    0x1
#define _B4D4_B4D46_LENGTH                                  0x1
#define _B4D4_B4D46_MASK                                    0x40
#define _B4D4_B4D47_POSN                                    0x7
#define _B4D4_B4D47_POSITION                                0x7
#define _B4D4_B4D47_SIZE                                    0x1
#define _B4D4_B4D47_LENGTH                                  0x1
#define _B4D4_B4D47_MASK                                    0x80

// Register: B4D5
#define B4D5 B4D5
extern volatile unsigned char           B4D5                __at(0xE6B);
#ifndef _LIB_BUILD
asm("B4D5 equ 0E6Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B4D50                  :1;
        unsigned B4D51                  :1;
        unsigned B4D52                  :1;
        unsigned B4D53                  :1;
        unsigned B4D54                  :1;
        unsigned B4D55                  :1;
        unsigned B4D56                  :1;
        unsigned B4D57                  :1;
    };
} B4D5bits_t;
extern volatile B4D5bits_t B4D5bits __at(0xE6B);
// bitfield macros
#define _B4D5_B4D50_POSN                                    0x0
#define _B4D5_B4D50_POSITION                                0x0
#define _B4D5_B4D50_SIZE                                    0x1
#define _B4D5_B4D50_LENGTH                                  0x1
#define _B4D5_B4D50_MASK                                    0x1
#define _B4D5_B4D51_POSN                                    0x1
#define _B4D5_B4D51_POSITION                                0x1
#define _B4D5_B4D51_SIZE                                    0x1
#define _B4D5_B4D51_LENGTH                                  0x1
#define _B4D5_B4D51_MASK                                    0x2
#define _B4D5_B4D52_POSN                                    0x2
#define _B4D5_B4D52_POSITION                                0x2
#define _B4D5_B4D52_SIZE                                    0x1
#define _B4D5_B4D52_LENGTH                                  0x1
#define _B4D5_B4D52_MASK                                    0x4
#define _B4D5_B4D53_POSN                                    0x3
#define _B4D5_B4D53_POSITION                                0x3
#define _B4D5_B4D53_SIZE                                    0x1
#define _B4D5_B4D53_LENGTH                                  0x1
#define _B4D5_B4D53_MASK                                    0x8
#define _B4D5_B4D54_POSN                                    0x4
#define _B4D5_B4D54_POSITION                                0x4
#define _B4D5_B4D54_SIZE                                    0x1
#define _B4D5_B4D54_LENGTH                                  0x1
#define _B4D5_B4D54_MASK                                    0x10
#define _B4D5_B4D55_POSN                                    0x5
#define _B4D5_B4D55_POSITION                                0x5
#define _B4D5_B4D55_SIZE                                    0x1
#define _B4D5_B4D55_LENGTH                                  0x1
#define _B4D5_B4D55_MASK                                    0x20
#define _B4D5_B4D56_POSN                                    0x6
#define _B4D5_B4D56_POSITION                                0x6
#define _B4D5_B4D56_SIZE                                    0x1
#define _B4D5_B4D56_LENGTH                                  0x1
#define _B4D5_B4D56_MASK                                    0x40
#define _B4D5_B4D57_POSN                                    0x7
#define _B4D5_B4D57_POSITION                                0x7
#define _B4D5_B4D57_SIZE                                    0x1
#define _B4D5_B4D57_LENGTH                                  0x1
#define _B4D5_B4D57_MASK                                    0x80

// Register: B4D6
#define B4D6 B4D6
extern volatile unsigned char           B4D6                __at(0xE6C);
#ifndef _LIB_BUILD
asm("B4D6 equ 0E6Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B4D60                  :1;
        unsigned B4D61                  :1;
        unsigned B4D62                  :1;
        unsigned B4D63                  :1;
        unsigned B4D64                  :1;
        unsigned B4D65                  :1;
        unsigned B4D66                  :1;
        unsigned B4D67                  :1;
    };
} B4D6bits_t;
extern volatile B4D6bits_t B4D6bits __at(0xE6C);
// bitfield macros
#define _B4D6_B4D60_POSN                                    0x0
#define _B4D6_B4D60_POSITION                                0x0
#define _B4D6_B4D60_SIZE                                    0x1
#define _B4D6_B4D60_LENGTH                                  0x1
#define _B4D6_B4D60_MASK                                    0x1
#define _B4D6_B4D61_POSN                                    0x1
#define _B4D6_B4D61_POSITION                                0x1
#define _B4D6_B4D61_SIZE                                    0x1
#define _B4D6_B4D61_LENGTH                                  0x1
#define _B4D6_B4D61_MASK                                    0x2
#define _B4D6_B4D62_POSN                                    0x2
#define _B4D6_B4D62_POSITION                                0x2
#define _B4D6_B4D62_SIZE                                    0x1
#define _B4D6_B4D62_LENGTH                                  0x1
#define _B4D6_B4D62_MASK                                    0x4
#define _B4D6_B4D63_POSN                                    0x3
#define _B4D6_B4D63_POSITION                                0x3
#define _B4D6_B4D63_SIZE                                    0x1
#define _B4D6_B4D63_LENGTH                                  0x1
#define _B4D6_B4D63_MASK                                    0x8
#define _B4D6_B4D64_POSN                                    0x4
#define _B4D6_B4D64_POSITION                                0x4
#define _B4D6_B4D64_SIZE                                    0x1
#define _B4D6_B4D64_LENGTH                                  0x1
#define _B4D6_B4D64_MASK                                    0x10
#define _B4D6_B4D65_POSN                                    0x5
#define _B4D6_B4D65_POSITION                                0x5
#define _B4D6_B4D65_SIZE                                    0x1
#define _B4D6_B4D65_LENGTH                                  0x1
#define _B4D6_B4D65_MASK                                    0x20
#define _B4D6_B4D66_POSN                                    0x6
#define _B4D6_B4D66_POSITION                                0x6
#define _B4D6_B4D66_SIZE                                    0x1
#define _B4D6_B4D66_LENGTH                                  0x1
#define _B4D6_B4D66_MASK                                    0x40
#define _B4D6_B4D67_POSN                                    0x7
#define _B4D6_B4D67_POSITION                                0x7
#define _B4D6_B4D67_SIZE                                    0x1
#define _B4D6_B4D67_LENGTH                                  0x1
#define _B4D6_B4D67_MASK                                    0x80

// Register: B4D7
#define B4D7 B4D7
extern volatile unsigned char           B4D7                __at(0xE6D);
#ifndef _LIB_BUILD
asm("B4D7 equ 0E6Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B4D70                  :1;
        unsigned B4D71                  :1;
        unsigned B4D72                  :1;
        unsigned B4D73                  :1;
        unsigned B4D74                  :1;
        unsigned B4D75                  :1;
        unsigned B4D76                  :1;
        unsigned B4D77                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned B46D77                 :1;
    };
} B4D7bits_t;
extern volatile B4D7bits_t B4D7bits __at(0xE6D);
// bitfield macros
#define _B4D7_B4D70_POSN                                    0x0
#define _B4D7_B4D70_POSITION                                0x0
#define _B4D7_B4D70_SIZE                                    0x1
#define _B4D7_B4D70_LENGTH                                  0x1
#define _B4D7_B4D70_MASK                                    0x1
#define _B4D7_B4D71_POSN                                    0x1
#define _B4D7_B4D71_POSITION                                0x1
#define _B4D7_B4D71_SIZE                                    0x1
#define _B4D7_B4D71_LENGTH                                  0x1
#define _B4D7_B4D71_MASK                                    0x2
#define _B4D7_B4D72_POSN                                    0x2
#define _B4D7_B4D72_POSITION                                0x2
#define _B4D7_B4D72_SIZE                                    0x1
#define _B4D7_B4D72_LENGTH                                  0x1
#define _B4D7_B4D72_MASK                                    0x4
#define _B4D7_B4D73_POSN                                    0x3
#define _B4D7_B4D73_POSITION                                0x3
#define _B4D7_B4D73_SIZE                                    0x1
#define _B4D7_B4D73_LENGTH                                  0x1
#define _B4D7_B4D73_MASK                                    0x8
#define _B4D7_B4D74_POSN                                    0x4
#define _B4D7_B4D74_POSITION                                0x4
#define _B4D7_B4D74_SIZE                                    0x1
#define _B4D7_B4D74_LENGTH                                  0x1
#define _B4D7_B4D74_MASK                                    0x10
#define _B4D7_B4D75_POSN                                    0x5
#define _B4D7_B4D75_POSITION                                0x5
#define _B4D7_B4D75_SIZE                                    0x1
#define _B4D7_B4D75_LENGTH                                  0x1
#define _B4D7_B4D75_MASK                                    0x20
#define _B4D7_B4D76_POSN                                    0x6
#define _B4D7_B4D76_POSITION                                0x6
#define _B4D7_B4D76_SIZE                                    0x1
#define _B4D7_B4D76_LENGTH                                  0x1
#define _B4D7_B4D76_MASK                                    0x40
#define _B4D7_B4D77_POSN                                    0x7
#define _B4D7_B4D77_POSITION                                0x7
#define _B4D7_B4D77_SIZE                                    0x1
#define _B4D7_B4D77_LENGTH                                  0x1
#define _B4D7_B4D77_MASK                                    0x80
#define _B4D7_B46D77_POSN                                   0x7
#define _B4D7_B46D77_POSITION                               0x7
#define _B4D7_B46D77_SIZE                                   0x1
#define _B4D7_B46D77_LENGTH                                 0x1
#define _B4D7_B46D77_MASK                                   0x80

// Register: CANSTAT_RO5
#define CANSTAT_RO5 CANSTAT_RO5
extern volatile unsigned char           CANSTAT_RO5         __at(0xE6E);
#ifndef _LIB_BUILD
asm("CANSTAT_RO5 equ 0E6Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EICODE0                :1;
        unsigned EICODE1_ICODE0         :1;
        unsigned EICODE2_ICODE1         :1;
        unsigned EICODE3_ICODE2         :1;
        unsigned EICODE4                :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTAT_RO5bits_t;
extern volatile CANSTAT_RO5bits_t CANSTAT_RO5bits __at(0xE6E);
// bitfield macros
#define _CANSTAT_RO5_EICODE0_POSN                           0x0
#define _CANSTAT_RO5_EICODE0_POSITION                       0x0
#define _CANSTAT_RO5_EICODE0_SIZE                           0x1
#define _CANSTAT_RO5_EICODE0_LENGTH                         0x1
#define _CANSTAT_RO5_EICODE0_MASK                           0x1
#define _CANSTAT_RO5_EICODE1_ICODE0_POSN                    0x1
#define _CANSTAT_RO5_EICODE1_ICODE0_POSITION                0x1
#define _CANSTAT_RO5_EICODE1_ICODE0_SIZE                    0x1
#define _CANSTAT_RO5_EICODE1_ICODE0_LENGTH                  0x1
#define _CANSTAT_RO5_EICODE1_ICODE0_MASK                    0x2
#define _CANSTAT_RO5_EICODE2_ICODE1_POSN                    0x2
#define _CANSTAT_RO5_EICODE2_ICODE1_POSITION                0x2
#define _CANSTAT_RO5_EICODE2_ICODE1_SIZE                    0x1
#define _CANSTAT_RO5_EICODE2_ICODE1_LENGTH                  0x1
#define _CANSTAT_RO5_EICODE2_ICODE1_MASK                    0x4
#define _CANSTAT_RO5_EICODE3_ICODE2_POSN                    0x3
#define _CANSTAT_RO5_EICODE3_ICODE2_POSITION                0x3
#define _CANSTAT_RO5_EICODE3_ICODE2_SIZE                    0x1
#define _CANSTAT_RO5_EICODE3_ICODE2_LENGTH                  0x1
#define _CANSTAT_RO5_EICODE3_ICODE2_MASK                    0x8
#define _CANSTAT_RO5_EICODE4_POSN                           0x4
#define _CANSTAT_RO5_EICODE4_POSITION                       0x4
#define _CANSTAT_RO5_EICODE4_SIZE                           0x1
#define _CANSTAT_RO5_EICODE4_LENGTH                         0x1
#define _CANSTAT_RO5_EICODE4_MASK                           0x10
#define _CANSTAT_RO5_OPMODE0_POSN                           0x5
#define _CANSTAT_RO5_OPMODE0_POSITION                       0x5
#define _CANSTAT_RO5_OPMODE0_SIZE                           0x1
#define _CANSTAT_RO5_OPMODE0_LENGTH                         0x1
#define _CANSTAT_RO5_OPMODE0_MASK                           0x20
#define _CANSTAT_RO5_OPMODE1_POSN                           0x6
#define _CANSTAT_RO5_OPMODE1_POSITION                       0x6
#define _CANSTAT_RO5_OPMODE1_SIZE                           0x1
#define _CANSTAT_RO5_OPMODE1_LENGTH                         0x1
#define _CANSTAT_RO5_OPMODE1_MASK                           0x40
#define _CANSTAT_RO5_OPMODE2_POSN                           0x7
#define _CANSTAT_RO5_OPMODE2_POSITION                       0x7
#define _CANSTAT_RO5_OPMODE2_SIZE                           0x1
#define _CANSTAT_RO5_OPMODE2_LENGTH                         0x1
#define _CANSTAT_RO5_OPMODE2_MASK                           0x80

// Register: CANCON_RO5
#define CANCON_RO5 CANCON_RO5
extern volatile unsigned char           CANCON_RO5          __at(0xE6F);
#ifndef _LIB_BUILD
asm("CANCON_RO5 equ 0E6Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FP0                    :1;
        unsigned WIN0_FP1               :1;
        unsigned WIN1_FP2               :1;
        unsigned WIN2_FP3               :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
} CANCON_RO5bits_t;
extern volatile CANCON_RO5bits_t CANCON_RO5bits __at(0xE6F);
// bitfield macros
#define _CANCON_RO5_FP0_POSN                                0x0
#define _CANCON_RO5_FP0_POSITION                            0x0
#define _CANCON_RO5_FP0_SIZE                                0x1
#define _CANCON_RO5_FP0_LENGTH                              0x1
#define _CANCON_RO5_FP0_MASK                                0x1
#define _CANCON_RO5_WIN0_FP1_POSN                           0x1
#define _CANCON_RO5_WIN0_FP1_POSITION                       0x1
#define _CANCON_RO5_WIN0_FP1_SIZE                           0x1
#define _CANCON_RO5_WIN0_FP1_LENGTH                         0x1
#define _CANCON_RO5_WIN0_FP1_MASK                           0x2
#define _CANCON_RO5_WIN1_FP2_POSN                           0x2
#define _CANCON_RO5_WIN1_FP2_POSITION                       0x2
#define _CANCON_RO5_WIN1_FP2_SIZE                           0x1
#define _CANCON_RO5_WIN1_FP2_LENGTH                         0x1
#define _CANCON_RO5_WIN1_FP2_MASK                           0x4
#define _CANCON_RO5_WIN2_FP3_POSN                           0x3
#define _CANCON_RO5_WIN2_FP3_POSITION                       0x3
#define _CANCON_RO5_WIN2_FP3_SIZE                           0x1
#define _CANCON_RO5_WIN2_FP3_LENGTH                         0x1
#define _CANCON_RO5_WIN2_FP3_MASK                           0x8
#define _CANCON_RO5_ABAT_POSN                               0x4
#define _CANCON_RO5_ABAT_POSITION                           0x4
#define _CANCON_RO5_ABAT_SIZE                               0x1
#define _CANCON_RO5_ABAT_LENGTH                             0x1
#define _CANCON_RO5_ABAT_MASK                               0x10
#define _CANCON_RO5_REQOP0_POSN                             0x5
#define _CANCON_RO5_REQOP0_POSITION                         0x5
#define _CANCON_RO5_REQOP0_SIZE                             0x1
#define _CANCON_RO5_REQOP0_LENGTH                           0x1
#define _CANCON_RO5_REQOP0_MASK                             0x20
#define _CANCON_RO5_REQOP1_POSN                             0x6
#define _CANCON_RO5_REQOP1_POSITION                         0x6
#define _CANCON_RO5_REQOP1_SIZE                             0x1
#define _CANCON_RO5_REQOP1_LENGTH                           0x1
#define _CANCON_RO5_REQOP1_MASK                             0x40
#define _CANCON_RO5_REQOP2_POSN                             0x7
#define _CANCON_RO5_REQOP2_POSITION                         0x7
#define _CANCON_RO5_REQOP2_SIZE                             0x1
#define _CANCON_RO5_REQOP2_LENGTH                           0x1
#define _CANCON_RO5_REQOP2_MASK                             0x80

// Register: B5CON
#define B5CON B5CON
extern volatile unsigned char           B5CON               __at(0xE70);
#ifndef _LIB_BUILD
asm("B5CON equ 0E70h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FILHIT0_TXPRI0         :1;
        unsigned FILHIT1_TXPRI1         :1;
        unsigned FILHIT2_RTREN          :1;
        unsigned FILHIT3_TXREQ          :1;
        unsigned FILHIT4_TXERR          :1;
        unsigned RTRRO_TXLARB           :1;
        unsigned RXM1_TXABT             :1;
        unsigned RXFUL_TXBIF            :1;
    };
    struct {
        unsigned FILHIT0                :1;
        unsigned FILHIT1                :1;
        unsigned FILHIT2                :1;
        unsigned FILHIT3                :1;
        unsigned FILHIT4                :1;
        unsigned RTRRO                  :1;
        unsigned RXM1                   :1;
        unsigned RXFUL                  :1;
    };
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned RTREN                  :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
        unsigned TXBIF                  :1;
    };
    struct {
        unsigned B5FILHIT0              :1;
        unsigned B5FILHIT1              :1;
        unsigned B5FILHIT2              :1;
        unsigned B5FILHIT3              :1;
        unsigned B5FILHIT4              :1;
        unsigned B5RTRRO                :1;
        unsigned B5RXM1                 :1;
        unsigned B5RXFUL                :1;
    };
    struct {
        unsigned B5TXPRI0               :1;
        unsigned B5TXPRI1               :1;
        unsigned B5RTREN                :1;
        unsigned B5TXREQ                :1;
        unsigned B5TXERR                :1;
        unsigned B5TXLARB               :1;
        unsigned B5TXABT                :1;
        unsigned B5TXBIF                :1;
    };
} B5CONbits_t;
extern volatile B5CONbits_t B5CONbits __at(0xE70);
// bitfield macros
#define _B5CON_FILHIT0_TXPRI0_POSN                          0x0
#define _B5CON_FILHIT0_TXPRI0_POSITION                      0x0
#define _B5CON_FILHIT0_TXPRI0_SIZE                          0x1
#define _B5CON_FILHIT0_TXPRI0_LENGTH                        0x1
#define _B5CON_FILHIT0_TXPRI0_MASK                          0x1
#define _B5CON_FILHIT1_TXPRI1_POSN                          0x1
#define _B5CON_FILHIT1_TXPRI1_POSITION                      0x1
#define _B5CON_FILHIT1_TXPRI1_SIZE                          0x1
#define _B5CON_FILHIT1_TXPRI1_LENGTH                        0x1
#define _B5CON_FILHIT1_TXPRI1_MASK                          0x2
#define _B5CON_FILHIT2_RTREN_POSN                           0x2
#define _B5CON_FILHIT2_RTREN_POSITION                       0x2
#define _B5CON_FILHIT2_RTREN_SIZE                           0x1
#define _B5CON_FILHIT2_RTREN_LENGTH                         0x1
#define _B5CON_FILHIT2_RTREN_MASK                           0x4
#define _B5CON_FILHIT3_TXREQ_POSN                           0x3
#define _B5CON_FILHIT3_TXREQ_POSITION                       0x3
#define _B5CON_FILHIT3_TXREQ_SIZE                           0x1
#define _B5CON_FILHIT3_TXREQ_LENGTH                         0x1
#define _B5CON_FILHIT3_TXREQ_MASK                           0x8
#define _B5CON_FILHIT4_TXERR_POSN                           0x4
#define _B5CON_FILHIT4_TXERR_POSITION                       0x4
#define _B5CON_FILHIT4_TXERR_SIZE                           0x1
#define _B5CON_FILHIT4_TXERR_LENGTH                         0x1
#define _B5CON_FILHIT4_TXERR_MASK                           0x10
#define _B5CON_RTRRO_TXLARB_POSN                            0x5
#define _B5CON_RTRRO_TXLARB_POSITION                        0x5
#define _B5CON_RTRRO_TXLARB_SIZE                            0x1
#define _B5CON_RTRRO_TXLARB_LENGTH                          0x1
#define _B5CON_RTRRO_TXLARB_MASK                            0x20
#define _B5CON_RXM1_TXABT_POSN                              0x6
#define _B5CON_RXM1_TXABT_POSITION                          0x6
#define _B5CON_RXM1_TXABT_SIZE                              0x1
#define _B5CON_RXM1_TXABT_LENGTH                            0x1
#define _B5CON_RXM1_TXABT_MASK                              0x40
#define _B5CON_RXFUL_TXBIF_POSN                             0x7
#define _B5CON_RXFUL_TXBIF_POSITION                         0x7
#define _B5CON_RXFUL_TXBIF_SIZE                             0x1
#define _B5CON_RXFUL_TXBIF_LENGTH                           0x1
#define _B5CON_RXFUL_TXBIF_MASK                             0x80
#define _B5CON_FILHIT0_POSN                                 0x0
#define _B5CON_FILHIT0_POSITION                             0x0
#define _B5CON_FILHIT0_SIZE                                 0x1
#define _B5CON_FILHIT0_LENGTH                               0x1
#define _B5CON_FILHIT0_MASK                                 0x1
#define _B5CON_FILHIT1_POSN                                 0x1
#define _B5CON_FILHIT1_POSITION                             0x1
#define _B5CON_FILHIT1_SIZE                                 0x1
#define _B5CON_FILHIT1_LENGTH                               0x1
#define _B5CON_FILHIT1_MASK                                 0x2
#define _B5CON_FILHIT2_POSN                                 0x2
#define _B5CON_FILHIT2_POSITION                             0x2
#define _B5CON_FILHIT2_SIZE                                 0x1
#define _B5CON_FILHIT2_LENGTH                               0x1
#define _B5CON_FILHIT2_MASK                                 0x4
#define _B5CON_FILHIT3_POSN                                 0x3
#define _B5CON_FILHIT3_POSITION                             0x3
#define _B5CON_FILHIT3_SIZE                                 0x1
#define _B5CON_FILHIT3_LENGTH                               0x1
#define _B5CON_FILHIT3_MASK                                 0x8
#define _B5CON_FILHIT4_POSN                                 0x4
#define _B5CON_FILHIT4_POSITION                             0x4
#define _B5CON_FILHIT4_SIZE                                 0x1
#define _B5CON_FILHIT4_LENGTH                               0x1
#define _B5CON_FILHIT4_MASK                                 0x10
#define _B5CON_RTRRO_POSN                                   0x5
#define _B5CON_RTRRO_POSITION                               0x5
#define _B5CON_RTRRO_SIZE                                   0x1
#define _B5CON_RTRRO_LENGTH                                 0x1
#define _B5CON_RTRRO_MASK                                   0x20
#define _B5CON_RXM1_POSN                                    0x6
#define _B5CON_RXM1_POSITION                                0x6
#define _B5CON_RXM1_SIZE                                    0x1
#define _B5CON_RXM1_LENGTH                                  0x1
#define _B5CON_RXM1_MASK                                    0x40
#define _B5CON_RXFUL_POSN                                   0x7
#define _B5CON_RXFUL_POSITION                               0x7
#define _B5CON_RXFUL_SIZE                                   0x1
#define _B5CON_RXFUL_LENGTH                                 0x1
#define _B5CON_RXFUL_MASK                                   0x80
#define _B5CON_TXPRI0_POSN                                  0x0
#define _B5CON_TXPRI0_POSITION                              0x0
#define _B5CON_TXPRI0_SIZE                                  0x1
#define _B5CON_TXPRI0_LENGTH                                0x1
#define _B5CON_TXPRI0_MASK                                  0x1
#define _B5CON_TXPRI1_POSN                                  0x1
#define _B5CON_TXPRI1_POSITION                              0x1
#define _B5CON_TXPRI1_SIZE                                  0x1
#define _B5CON_TXPRI1_LENGTH                                0x1
#define _B5CON_TXPRI1_MASK                                  0x2
#define _B5CON_RTREN_POSN                                   0x2
#define _B5CON_RTREN_POSITION                               0x2
#define _B5CON_RTREN_SIZE                                   0x1
#define _B5CON_RTREN_LENGTH                                 0x1
#define _B5CON_RTREN_MASK                                   0x4
#define _B5CON_TXREQ_POSN                                   0x3
#define _B5CON_TXREQ_POSITION                               0x3
#define _B5CON_TXREQ_SIZE                                   0x1
#define _B5CON_TXREQ_LENGTH                                 0x1
#define _B5CON_TXREQ_MASK                                   0x8
#define _B5CON_TXERR_POSN                                   0x4
#define _B5CON_TXERR_POSITION                               0x4
#define _B5CON_TXERR_SIZE                                   0x1
#define _B5CON_TXERR_LENGTH                                 0x1
#define _B5CON_TXERR_MASK                                   0x10
#define _B5CON_TXLARB_POSN                                  0x5
#define _B5CON_TXLARB_POSITION                              0x5
#define _B5CON_TXLARB_SIZE                                  0x1
#define _B5CON_TXLARB_LENGTH                                0x1
#define _B5CON_TXLARB_MASK                                  0x20
#define _B5CON_TXABT_POSN                                   0x6
#define _B5CON_TXABT_POSITION                               0x6
#define _B5CON_TXABT_SIZE                                   0x1
#define _B5CON_TXABT_LENGTH                                 0x1
#define _B5CON_TXABT_MASK                                   0x40
#define _B5CON_TXBIF_POSN                                   0x7
#define _B5CON_TXBIF_POSITION                               0x7
#define _B5CON_TXBIF_SIZE                                   0x1
#define _B5CON_TXBIF_LENGTH                                 0x1
#define _B5CON_TXBIF_MASK                                   0x80
#define _B5CON_B5FILHIT0_POSN                               0x0
#define _B5CON_B5FILHIT0_POSITION                           0x0
#define _B5CON_B5FILHIT0_SIZE                               0x1
#define _B5CON_B5FILHIT0_LENGTH                             0x1
#define _B5CON_B5FILHIT0_MASK                               0x1
#define _B5CON_B5FILHIT1_POSN                               0x1
#define _B5CON_B5FILHIT1_POSITION                           0x1
#define _B5CON_B5FILHIT1_SIZE                               0x1
#define _B5CON_B5FILHIT1_LENGTH                             0x1
#define _B5CON_B5FILHIT1_MASK                               0x2
#define _B5CON_B5FILHIT2_POSN                               0x2
#define _B5CON_B5FILHIT2_POSITION                           0x2
#define _B5CON_B5FILHIT2_SIZE                               0x1
#define _B5CON_B5FILHIT2_LENGTH                             0x1
#define _B5CON_B5FILHIT2_MASK                               0x4
#define _B5CON_B5FILHIT3_POSN                               0x3
#define _B5CON_B5FILHIT3_POSITION                           0x3
#define _B5CON_B5FILHIT3_SIZE                               0x1
#define _B5CON_B5FILHIT3_LENGTH                             0x1
#define _B5CON_B5FILHIT3_MASK                               0x8
#define _B5CON_B5FILHIT4_POSN                               0x4
#define _B5CON_B5FILHIT4_POSITION                           0x4
#define _B5CON_B5FILHIT4_SIZE                               0x1
#define _B5CON_B5FILHIT4_LENGTH                             0x1
#define _B5CON_B5FILHIT4_MASK                               0x10
#define _B5CON_B5RTRRO_POSN                                 0x5
#define _B5CON_B5RTRRO_POSITION                             0x5
#define _B5CON_B5RTRRO_SIZE                                 0x1
#define _B5CON_B5RTRRO_LENGTH                               0x1
#define _B5CON_B5RTRRO_MASK                                 0x20
#define _B5CON_B5RXM1_POSN                                  0x6
#define _B5CON_B5RXM1_POSITION                              0x6
#define _B5CON_B5RXM1_SIZE                                  0x1
#define _B5CON_B5RXM1_LENGTH                                0x1
#define _B5CON_B5RXM1_MASK                                  0x40
#define _B5CON_B5RXFUL_POSN                                 0x7
#define _B5CON_B5RXFUL_POSITION                             0x7
#define _B5CON_B5RXFUL_SIZE                                 0x1
#define _B5CON_B5RXFUL_LENGTH                               0x1
#define _B5CON_B5RXFUL_MASK                                 0x80
#define _B5CON_B5TXPRI0_POSN                                0x0
#define _B5CON_B5TXPRI0_POSITION                            0x0
#define _B5CON_B5TXPRI0_SIZE                                0x1
#define _B5CON_B5TXPRI0_LENGTH                              0x1
#define _B5CON_B5TXPRI0_MASK                                0x1
#define _B5CON_B5TXPRI1_POSN                                0x1
#define _B5CON_B5TXPRI1_POSITION                            0x1
#define _B5CON_B5TXPRI1_SIZE                                0x1
#define _B5CON_B5TXPRI1_LENGTH                              0x1
#define _B5CON_B5TXPRI1_MASK                                0x2
#define _B5CON_B5RTREN_POSN                                 0x2
#define _B5CON_B5RTREN_POSITION                             0x2
#define _B5CON_B5RTREN_SIZE                                 0x1
#define _B5CON_B5RTREN_LENGTH                               0x1
#define _B5CON_B5RTREN_MASK                                 0x4
#define _B5CON_B5TXREQ_POSN                                 0x3
#define _B5CON_B5TXREQ_POSITION                             0x3
#define _B5CON_B5TXREQ_SIZE                                 0x1
#define _B5CON_B5TXREQ_LENGTH                               0x1
#define _B5CON_B5TXREQ_MASK                                 0x8
#define _B5CON_B5TXERR_POSN                                 0x4
#define _B5CON_B5TXERR_POSITION                             0x4
#define _B5CON_B5TXERR_SIZE                                 0x1
#define _B5CON_B5TXERR_LENGTH                               0x1
#define _B5CON_B5TXERR_MASK                                 0x10
#define _B5CON_B5TXLARB_POSN                                0x5
#define _B5CON_B5TXLARB_POSITION                            0x5
#define _B5CON_B5TXLARB_SIZE                                0x1
#define _B5CON_B5TXLARB_LENGTH                              0x1
#define _B5CON_B5TXLARB_MASK                                0x20
#define _B5CON_B5TXABT_POSN                                 0x6
#define _B5CON_B5TXABT_POSITION                             0x6
#define _B5CON_B5TXABT_SIZE                                 0x1
#define _B5CON_B5TXABT_LENGTH                               0x1
#define _B5CON_B5TXABT_MASK                                 0x40
#define _B5CON_B5TXBIF_POSN                                 0x7
#define _B5CON_B5TXBIF_POSITION                             0x7
#define _B5CON_B5TXBIF_SIZE                                 0x1
#define _B5CON_B5TXBIF_LENGTH                               0x1
#define _B5CON_B5TXBIF_MASK                                 0x80

// Register: B5SIDH
#define B5SIDH B5SIDH
extern volatile unsigned char           B5SIDH              __at(0xE71);
#ifndef _LIB_BUILD
asm("B5SIDH equ 0E71h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned B5SID3                 :1;
        unsigned B5SID4                 :1;
        unsigned B5SID5                 :1;
        unsigned B5SID6                 :1;
        unsigned B5SID7                 :1;
        unsigned B5SID8                 :1;
        unsigned B5SID9                 :1;
        unsigned B5SID10                :1;
    };
} B5SIDHbits_t;
extern volatile B5SIDHbits_t B5SIDHbits __at(0xE71);
// bitfield macros
#define _B5SIDH_SID3_POSN                                   0x0
#define _B5SIDH_SID3_POSITION                               0x0
#define _B5SIDH_SID3_SIZE                                   0x1
#define _B5SIDH_SID3_LENGTH                                 0x1
#define _B5SIDH_SID3_MASK                                   0x1
#define _B5SIDH_SID4_POSN                                   0x1
#define _B5SIDH_SID4_POSITION                               0x1
#define _B5SIDH_SID4_SIZE                                   0x1
#define _B5SIDH_SID4_LENGTH                                 0x1
#define _B5SIDH_SID4_MASK                                   0x2
#define _B5SIDH_SID5_POSN                                   0x2
#define _B5SIDH_SID5_POSITION                               0x2
#define _B5SIDH_SID5_SIZE                                   0x1
#define _B5SIDH_SID5_LENGTH                                 0x1
#define _B5SIDH_SID5_MASK                                   0x4
#define _B5SIDH_SID6_POSN                                   0x3
#define _B5SIDH_SID6_POSITION                               0x3
#define _B5SIDH_SID6_SIZE                                   0x1
#define _B5SIDH_SID6_LENGTH                                 0x1
#define _B5SIDH_SID6_MASK                                   0x8
#define _B5SIDH_SID7_POSN                                   0x4
#define _B5SIDH_SID7_POSITION                               0x4
#define _B5SIDH_SID7_SIZE                                   0x1
#define _B5SIDH_SID7_LENGTH                                 0x1
#define _B5SIDH_SID7_MASK                                   0x10
#define _B5SIDH_SID8_POSN                                   0x5
#define _B5SIDH_SID8_POSITION                               0x5
#define _B5SIDH_SID8_SIZE                                   0x1
#define _B5SIDH_SID8_LENGTH                                 0x1
#define _B5SIDH_SID8_MASK                                   0x20
#define _B5SIDH_SID9_POSN                                   0x6
#define _B5SIDH_SID9_POSITION                               0x6
#define _B5SIDH_SID9_SIZE                                   0x1
#define _B5SIDH_SID9_LENGTH                                 0x1
#define _B5SIDH_SID9_MASK                                   0x40
#define _B5SIDH_SID10_POSN                                  0x7
#define _B5SIDH_SID10_POSITION                              0x7
#define _B5SIDH_SID10_SIZE                                  0x1
#define _B5SIDH_SID10_LENGTH                                0x1
#define _B5SIDH_SID10_MASK                                  0x80
#define _B5SIDH_B5SID3_POSN                                 0x0
#define _B5SIDH_B5SID3_POSITION                             0x0
#define _B5SIDH_B5SID3_SIZE                                 0x1
#define _B5SIDH_B5SID3_LENGTH                               0x1
#define _B5SIDH_B5SID3_MASK                                 0x1
#define _B5SIDH_B5SID4_POSN                                 0x1
#define _B5SIDH_B5SID4_POSITION                             0x1
#define _B5SIDH_B5SID4_SIZE                                 0x1
#define _B5SIDH_B5SID4_LENGTH                               0x1
#define _B5SIDH_B5SID4_MASK                                 0x2
#define _B5SIDH_B5SID5_POSN                                 0x2
#define _B5SIDH_B5SID5_POSITION                             0x2
#define _B5SIDH_B5SID5_SIZE                                 0x1
#define _B5SIDH_B5SID5_LENGTH                               0x1
#define _B5SIDH_B5SID5_MASK                                 0x4
#define _B5SIDH_B5SID6_POSN                                 0x3
#define _B5SIDH_B5SID6_POSITION                             0x3
#define _B5SIDH_B5SID6_SIZE                                 0x1
#define _B5SIDH_B5SID6_LENGTH                               0x1
#define _B5SIDH_B5SID6_MASK                                 0x8
#define _B5SIDH_B5SID7_POSN                                 0x4
#define _B5SIDH_B5SID7_POSITION                             0x4
#define _B5SIDH_B5SID7_SIZE                                 0x1
#define _B5SIDH_B5SID7_LENGTH                               0x1
#define _B5SIDH_B5SID7_MASK                                 0x10
#define _B5SIDH_B5SID8_POSN                                 0x5
#define _B5SIDH_B5SID8_POSITION                             0x5
#define _B5SIDH_B5SID8_SIZE                                 0x1
#define _B5SIDH_B5SID8_LENGTH                               0x1
#define _B5SIDH_B5SID8_MASK                                 0x20
#define _B5SIDH_B5SID9_POSN                                 0x6
#define _B5SIDH_B5SID9_POSITION                             0x6
#define _B5SIDH_B5SID9_SIZE                                 0x1
#define _B5SIDH_B5SID9_LENGTH                               0x1
#define _B5SIDH_B5SID9_MASK                                 0x40
#define _B5SIDH_B5SID10_POSN                                0x7
#define _B5SIDH_B5SID10_POSITION                            0x7
#define _B5SIDH_B5SID10_SIZE                                0x1
#define _B5SIDH_B5SID10_LENGTH                              0x1
#define _B5SIDH_B5SID10_MASK                                0x80

// Register: B5SIDL
#define B5SIDL B5SIDL
extern volatile unsigned char           B5SIDL              __at(0xE72);
#ifndef _LIB_BUILD
asm("B5SIDL equ 0E72h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXID                   :1;
        unsigned SRR                    :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned B5EID16                :1;
        unsigned B5EID17                :1;
        unsigned                        :1;
        unsigned B5EXID                 :1;
        unsigned B5SRR                  :1;
        unsigned B5SID0                 :1;
        unsigned B5SID1                 :1;
        unsigned B5SID2                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned B5EXIDE                :1;
    };
} B5SIDLbits_t;
extern volatile B5SIDLbits_t B5SIDLbits __at(0xE72);
// bitfield macros
#define _B5SIDL_EID16_POSN                                  0x0
#define _B5SIDL_EID16_POSITION                              0x0
#define _B5SIDL_EID16_SIZE                                  0x1
#define _B5SIDL_EID16_LENGTH                                0x1
#define _B5SIDL_EID16_MASK                                  0x1
#define _B5SIDL_EID17_POSN                                  0x1
#define _B5SIDL_EID17_POSITION                              0x1
#define _B5SIDL_EID17_SIZE                                  0x1
#define _B5SIDL_EID17_LENGTH                                0x1
#define _B5SIDL_EID17_MASK                                  0x2
#define _B5SIDL_EXID_POSN                                   0x3
#define _B5SIDL_EXID_POSITION                               0x3
#define _B5SIDL_EXID_SIZE                                   0x1
#define _B5SIDL_EXID_LENGTH                                 0x1
#define _B5SIDL_EXID_MASK                                   0x8
#define _B5SIDL_SRR_POSN                                    0x4
#define _B5SIDL_SRR_POSITION                                0x4
#define _B5SIDL_SRR_SIZE                                    0x1
#define _B5SIDL_SRR_LENGTH                                  0x1
#define _B5SIDL_SRR_MASK                                    0x10
#define _B5SIDL_SID0_POSN                                   0x5
#define _B5SIDL_SID0_POSITION                               0x5
#define _B5SIDL_SID0_SIZE                                   0x1
#define _B5SIDL_SID0_LENGTH                                 0x1
#define _B5SIDL_SID0_MASK                                   0x20
#define _B5SIDL_SID1_POSN                                   0x6
#define _B5SIDL_SID1_POSITION                               0x6
#define _B5SIDL_SID1_SIZE                                   0x1
#define _B5SIDL_SID1_LENGTH                                 0x1
#define _B5SIDL_SID1_MASK                                   0x40
#define _B5SIDL_SID2_POSN                                   0x7
#define _B5SIDL_SID2_POSITION                               0x7
#define _B5SIDL_SID2_SIZE                                   0x1
#define _B5SIDL_SID2_LENGTH                                 0x1
#define _B5SIDL_SID2_MASK                                   0x80
#define _B5SIDL_EXIDE_POSN                                  0x3
#define _B5SIDL_EXIDE_POSITION                              0x3
#define _B5SIDL_EXIDE_SIZE                                  0x1
#define _B5SIDL_EXIDE_LENGTH                                0x1
#define _B5SIDL_EXIDE_MASK                                  0x8
#define _B5SIDL_B5EID16_POSN                                0x0
#define _B5SIDL_B5EID16_POSITION                            0x0
#define _B5SIDL_B5EID16_SIZE                                0x1
#define _B5SIDL_B5EID16_LENGTH                              0x1
#define _B5SIDL_B5EID16_MASK                                0x1
#define _B5SIDL_B5EID17_POSN                                0x1
#define _B5SIDL_B5EID17_POSITION                            0x1
#define _B5SIDL_B5EID17_SIZE                                0x1
#define _B5SIDL_B5EID17_LENGTH                              0x1
#define _B5SIDL_B5EID17_MASK                                0x2
#define _B5SIDL_B5EXID_POSN                                 0x3
#define _B5SIDL_B5EXID_POSITION                             0x3
#define _B5SIDL_B5EXID_SIZE                                 0x1
#define _B5SIDL_B5EXID_LENGTH                               0x1
#define _B5SIDL_B5EXID_MASK                                 0x8
#define _B5SIDL_B5SRR_POSN                                  0x4
#define _B5SIDL_B5SRR_POSITION                              0x4
#define _B5SIDL_B5SRR_SIZE                                  0x1
#define _B5SIDL_B5SRR_LENGTH                                0x1
#define _B5SIDL_B5SRR_MASK                                  0x10
#define _B5SIDL_B5SID0_POSN                                 0x5
#define _B5SIDL_B5SID0_POSITION                             0x5
#define _B5SIDL_B5SID0_SIZE                                 0x1
#define _B5SIDL_B5SID0_LENGTH                               0x1
#define _B5SIDL_B5SID0_MASK                                 0x20
#define _B5SIDL_B5SID1_POSN                                 0x6
#define _B5SIDL_B5SID1_POSITION                             0x6
#define _B5SIDL_B5SID1_SIZE                                 0x1
#define _B5SIDL_B5SID1_LENGTH                               0x1
#define _B5SIDL_B5SID1_MASK                                 0x40
#define _B5SIDL_B5SID2_POSN                                 0x7
#define _B5SIDL_B5SID2_POSITION                             0x7
#define _B5SIDL_B5SID2_SIZE                                 0x1
#define _B5SIDL_B5SID2_LENGTH                               0x1
#define _B5SIDL_B5SID2_MASK                                 0x80
#define _B5SIDL_B5EXIDE_POSN                                0x3
#define _B5SIDL_B5EXIDE_POSITION                            0x3
#define _B5SIDL_B5EXIDE_SIZE                                0x1
#define _B5SIDL_B5EXIDE_LENGTH                              0x1
#define _B5SIDL_B5EXIDE_MASK                                0x8

// Register: B5EIDH
#define B5EIDH B5EIDH
extern volatile unsigned char           B5EIDH              __at(0xE73);
#ifndef _LIB_BUILD
asm("B5EIDH equ 0E73h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned B5EID8                 :1;
        unsigned B5EID9                 :1;
        unsigned B5EID10                :1;
        unsigned B5EID11                :1;
        unsigned B5EID12                :1;
        unsigned B5EID13                :1;
        unsigned B5EID14                :1;
        unsigned B5EID15                :1;
    };
} B5EIDHbits_t;
extern volatile B5EIDHbits_t B5EIDHbits __at(0xE73);
// bitfield macros
#define _B5EIDH_EID8_POSN                                   0x0
#define _B5EIDH_EID8_POSITION                               0x0
#define _B5EIDH_EID8_SIZE                                   0x1
#define _B5EIDH_EID8_LENGTH                                 0x1
#define _B5EIDH_EID8_MASK                                   0x1
#define _B5EIDH_EID9_POSN                                   0x1
#define _B5EIDH_EID9_POSITION                               0x1
#define _B5EIDH_EID9_SIZE                                   0x1
#define _B5EIDH_EID9_LENGTH                                 0x1
#define _B5EIDH_EID9_MASK                                   0x2
#define _B5EIDH_EID10_POSN                                  0x2
#define _B5EIDH_EID10_POSITION                              0x2
#define _B5EIDH_EID10_SIZE                                  0x1
#define _B5EIDH_EID10_LENGTH                                0x1
#define _B5EIDH_EID10_MASK                                  0x4
#define _B5EIDH_EID11_POSN                                  0x3
#define _B5EIDH_EID11_POSITION                              0x3
#define _B5EIDH_EID11_SIZE                                  0x1
#define _B5EIDH_EID11_LENGTH                                0x1
#define _B5EIDH_EID11_MASK                                  0x8
#define _B5EIDH_EID12_POSN                                  0x4
#define _B5EIDH_EID12_POSITION                              0x4
#define _B5EIDH_EID12_SIZE                                  0x1
#define _B5EIDH_EID12_LENGTH                                0x1
#define _B5EIDH_EID12_MASK                                  0x10
#define _B5EIDH_EID13_POSN                                  0x5
#define _B5EIDH_EID13_POSITION                              0x5
#define _B5EIDH_EID13_SIZE                                  0x1
#define _B5EIDH_EID13_LENGTH                                0x1
#define _B5EIDH_EID13_MASK                                  0x20
#define _B5EIDH_EID14_POSN                                  0x6
#define _B5EIDH_EID14_POSITION                              0x6
#define _B5EIDH_EID14_SIZE                                  0x1
#define _B5EIDH_EID14_LENGTH                                0x1
#define _B5EIDH_EID14_MASK                                  0x40
#define _B5EIDH_EID15_POSN                                  0x7
#define _B5EIDH_EID15_POSITION                              0x7
#define _B5EIDH_EID15_SIZE                                  0x1
#define _B5EIDH_EID15_LENGTH                                0x1
#define _B5EIDH_EID15_MASK                                  0x80
#define _B5EIDH_B5EID8_POSN                                 0x0
#define _B5EIDH_B5EID8_POSITION                             0x0
#define _B5EIDH_B5EID8_SIZE                                 0x1
#define _B5EIDH_B5EID8_LENGTH                               0x1
#define _B5EIDH_B5EID8_MASK                                 0x1
#define _B5EIDH_B5EID9_POSN                                 0x1
#define _B5EIDH_B5EID9_POSITION                             0x1
#define _B5EIDH_B5EID9_SIZE                                 0x1
#define _B5EIDH_B5EID9_LENGTH                               0x1
#define _B5EIDH_B5EID9_MASK                                 0x2
#define _B5EIDH_B5EID10_POSN                                0x2
#define _B5EIDH_B5EID10_POSITION                            0x2
#define _B5EIDH_B5EID10_SIZE                                0x1
#define _B5EIDH_B5EID10_LENGTH                              0x1
#define _B5EIDH_B5EID10_MASK                                0x4
#define _B5EIDH_B5EID11_POSN                                0x3
#define _B5EIDH_B5EID11_POSITION                            0x3
#define _B5EIDH_B5EID11_SIZE                                0x1
#define _B5EIDH_B5EID11_LENGTH                              0x1
#define _B5EIDH_B5EID11_MASK                                0x8
#define _B5EIDH_B5EID12_POSN                                0x4
#define _B5EIDH_B5EID12_POSITION                            0x4
#define _B5EIDH_B5EID12_SIZE                                0x1
#define _B5EIDH_B5EID12_LENGTH                              0x1
#define _B5EIDH_B5EID12_MASK                                0x10
#define _B5EIDH_B5EID13_POSN                                0x5
#define _B5EIDH_B5EID13_POSITION                            0x5
#define _B5EIDH_B5EID13_SIZE                                0x1
#define _B5EIDH_B5EID13_LENGTH                              0x1
#define _B5EIDH_B5EID13_MASK                                0x20
#define _B5EIDH_B5EID14_POSN                                0x6
#define _B5EIDH_B5EID14_POSITION                            0x6
#define _B5EIDH_B5EID14_SIZE                                0x1
#define _B5EIDH_B5EID14_LENGTH                              0x1
#define _B5EIDH_B5EID14_MASK                                0x40
#define _B5EIDH_B5EID15_POSN                                0x7
#define _B5EIDH_B5EID15_POSITION                            0x7
#define _B5EIDH_B5EID15_SIZE                                0x1
#define _B5EIDH_B5EID15_LENGTH                              0x1
#define _B5EIDH_B5EID15_MASK                                0x80

// Register: B5EIDL
#define B5EIDL B5EIDL
extern volatile unsigned char           B5EIDL              __at(0xE74);
#ifndef _LIB_BUILD
asm("B5EIDL equ 0E74h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned B5EID0                 :1;
        unsigned B5EID1                 :1;
        unsigned B5EID2                 :1;
        unsigned B5EID3                 :1;
        unsigned B5EID4                 :1;
        unsigned B5EID5                 :1;
        unsigned B5EID6                 :1;
        unsigned B5EID7                 :1;
    };
} B5EIDLbits_t;
extern volatile B5EIDLbits_t B5EIDLbits __at(0xE74);
// bitfield macros
#define _B5EIDL_EID0_POSN                                   0x0
#define _B5EIDL_EID0_POSITION                               0x0
#define _B5EIDL_EID0_SIZE                                   0x1
#define _B5EIDL_EID0_LENGTH                                 0x1
#define _B5EIDL_EID0_MASK                                   0x1
#define _B5EIDL_EID1_POSN                                   0x1
#define _B5EIDL_EID1_POSITION                               0x1
#define _B5EIDL_EID1_SIZE                                   0x1
#define _B5EIDL_EID1_LENGTH                                 0x1
#define _B5EIDL_EID1_MASK                                   0x2
#define _B5EIDL_EID2_POSN                                   0x2
#define _B5EIDL_EID2_POSITION                               0x2
#define _B5EIDL_EID2_SIZE                                   0x1
#define _B5EIDL_EID2_LENGTH                                 0x1
#define _B5EIDL_EID2_MASK                                   0x4
#define _B5EIDL_EID3_POSN                                   0x3
#define _B5EIDL_EID3_POSITION                               0x3
#define _B5EIDL_EID3_SIZE                                   0x1
#define _B5EIDL_EID3_LENGTH                                 0x1
#define _B5EIDL_EID3_MASK                                   0x8
#define _B5EIDL_EID4_POSN                                   0x4
#define _B5EIDL_EID4_POSITION                               0x4
#define _B5EIDL_EID4_SIZE                                   0x1
#define _B5EIDL_EID4_LENGTH                                 0x1
#define _B5EIDL_EID4_MASK                                   0x10
#define _B5EIDL_EID5_POSN                                   0x5
#define _B5EIDL_EID5_POSITION                               0x5
#define _B5EIDL_EID5_SIZE                                   0x1
#define _B5EIDL_EID5_LENGTH                                 0x1
#define _B5EIDL_EID5_MASK                                   0x20
#define _B5EIDL_EID6_POSN                                   0x6
#define _B5EIDL_EID6_POSITION                               0x6
#define _B5EIDL_EID6_SIZE                                   0x1
#define _B5EIDL_EID6_LENGTH                                 0x1
#define _B5EIDL_EID6_MASK                                   0x40
#define _B5EIDL_EID7_POSN                                   0x7
#define _B5EIDL_EID7_POSITION                               0x7
#define _B5EIDL_EID7_SIZE                                   0x1
#define _B5EIDL_EID7_LENGTH                                 0x1
#define _B5EIDL_EID7_MASK                                   0x80
#define _B5EIDL_B5EID0_POSN                                 0x0
#define _B5EIDL_B5EID0_POSITION                             0x0
#define _B5EIDL_B5EID0_SIZE                                 0x1
#define _B5EIDL_B5EID0_LENGTH                               0x1
#define _B5EIDL_B5EID0_MASK                                 0x1
#define _B5EIDL_B5EID1_POSN                                 0x1
#define _B5EIDL_B5EID1_POSITION                             0x1
#define _B5EIDL_B5EID1_SIZE                                 0x1
#define _B5EIDL_B5EID1_LENGTH                               0x1
#define _B5EIDL_B5EID1_MASK                                 0x2
#define _B5EIDL_B5EID2_POSN                                 0x2
#define _B5EIDL_B5EID2_POSITION                             0x2
#define _B5EIDL_B5EID2_SIZE                                 0x1
#define _B5EIDL_B5EID2_LENGTH                               0x1
#define _B5EIDL_B5EID2_MASK                                 0x4
#define _B5EIDL_B5EID3_POSN                                 0x3
#define _B5EIDL_B5EID3_POSITION                             0x3
#define _B5EIDL_B5EID3_SIZE                                 0x1
#define _B5EIDL_B5EID3_LENGTH                               0x1
#define _B5EIDL_B5EID3_MASK                                 0x8
#define _B5EIDL_B5EID4_POSN                                 0x4
#define _B5EIDL_B5EID4_POSITION                             0x4
#define _B5EIDL_B5EID4_SIZE                                 0x1
#define _B5EIDL_B5EID4_LENGTH                               0x1
#define _B5EIDL_B5EID4_MASK                                 0x10
#define _B5EIDL_B5EID5_POSN                                 0x5
#define _B5EIDL_B5EID5_POSITION                             0x5
#define _B5EIDL_B5EID5_SIZE                                 0x1
#define _B5EIDL_B5EID5_LENGTH                               0x1
#define _B5EIDL_B5EID5_MASK                                 0x20
#define _B5EIDL_B5EID6_POSN                                 0x6
#define _B5EIDL_B5EID6_POSITION                             0x6
#define _B5EIDL_B5EID6_SIZE                                 0x1
#define _B5EIDL_B5EID6_LENGTH                               0x1
#define _B5EIDL_B5EID6_MASK                                 0x40
#define _B5EIDL_B5EID7_POSN                                 0x7
#define _B5EIDL_B5EID7_POSITION                             0x7
#define _B5EIDL_B5EID7_SIZE                                 0x1
#define _B5EIDL_B5EID7_LENGTH                               0x1
#define _B5EIDL_B5EID7_MASK                                 0x80

// Register: B5DLC
#define B5DLC B5DLC
extern volatile unsigned char           B5DLC               __at(0xE75);
#ifndef _LIB_BUILD
asm("B5DLC equ 0E75h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RXRTR                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned RESRB0                 :1;
        unsigned RESRB1                 :1;
    };
    struct {
        unsigned B5DLC0                 :1;
        unsigned B5DLC1                 :1;
        unsigned B5DLC2                 :1;
        unsigned B5DLC3                 :1;
        unsigned B5RB0                  :1;
        unsigned B5RB1                  :1;
        unsigned B5RXRTR                :1;
    };
} B5DLCbits_t;
extern volatile B5DLCbits_t B5DLCbits __at(0xE75);
// bitfield macros
#define _B5DLC_DLC0_POSN                                    0x0
#define _B5DLC_DLC0_POSITION                                0x0
#define _B5DLC_DLC0_SIZE                                    0x1
#define _B5DLC_DLC0_LENGTH                                  0x1
#define _B5DLC_DLC0_MASK                                    0x1
#define _B5DLC_DLC1_POSN                                    0x1
#define _B5DLC_DLC1_POSITION                                0x1
#define _B5DLC_DLC1_SIZE                                    0x1
#define _B5DLC_DLC1_LENGTH                                  0x1
#define _B5DLC_DLC1_MASK                                    0x2
#define _B5DLC_DLC2_POSN                                    0x2
#define _B5DLC_DLC2_POSITION                                0x2
#define _B5DLC_DLC2_SIZE                                    0x1
#define _B5DLC_DLC2_LENGTH                                  0x1
#define _B5DLC_DLC2_MASK                                    0x4
#define _B5DLC_DLC3_POSN                                    0x3
#define _B5DLC_DLC3_POSITION                                0x3
#define _B5DLC_DLC3_SIZE                                    0x1
#define _B5DLC_DLC3_LENGTH                                  0x1
#define _B5DLC_DLC3_MASK                                    0x8
#define _B5DLC_RB0_POSN                                     0x4
#define _B5DLC_RB0_POSITION                                 0x4
#define _B5DLC_RB0_SIZE                                     0x1
#define _B5DLC_RB0_LENGTH                                   0x1
#define _B5DLC_RB0_MASK                                     0x10
#define _B5DLC_RB1_POSN                                     0x5
#define _B5DLC_RB1_POSITION                                 0x5
#define _B5DLC_RB1_SIZE                                     0x1
#define _B5DLC_RB1_LENGTH                                   0x1
#define _B5DLC_RB1_MASK                                     0x20
#define _B5DLC_RXRTR_POSN                                   0x6
#define _B5DLC_RXRTR_POSITION                               0x6
#define _B5DLC_RXRTR_SIZE                                   0x1
#define _B5DLC_RXRTR_LENGTH                                 0x1
#define _B5DLC_RXRTR_MASK                                   0x40
#define _B5DLC_RESRB0_POSN                                  0x4
#define _B5DLC_RESRB0_POSITION                              0x4
#define _B5DLC_RESRB0_SIZE                                  0x1
#define _B5DLC_RESRB0_LENGTH                                0x1
#define _B5DLC_RESRB0_MASK                                  0x10
#define _B5DLC_RESRB1_POSN                                  0x5
#define _B5DLC_RESRB1_POSITION                              0x5
#define _B5DLC_RESRB1_SIZE                                  0x1
#define _B5DLC_RESRB1_LENGTH                                0x1
#define _B5DLC_RESRB1_MASK                                  0x20
#define _B5DLC_B5DLC0_POSN                                  0x0
#define _B5DLC_B5DLC0_POSITION                              0x0
#define _B5DLC_B5DLC0_SIZE                                  0x1
#define _B5DLC_B5DLC0_LENGTH                                0x1
#define _B5DLC_B5DLC0_MASK                                  0x1
#define _B5DLC_B5DLC1_POSN                                  0x1
#define _B5DLC_B5DLC1_POSITION                              0x1
#define _B5DLC_B5DLC1_SIZE                                  0x1
#define _B5DLC_B5DLC1_LENGTH                                0x1
#define _B5DLC_B5DLC1_MASK                                  0x2
#define _B5DLC_B5DLC2_POSN                                  0x2
#define _B5DLC_B5DLC2_POSITION                              0x2
#define _B5DLC_B5DLC2_SIZE                                  0x1
#define _B5DLC_B5DLC2_LENGTH                                0x1
#define _B5DLC_B5DLC2_MASK                                  0x4
#define _B5DLC_B5DLC3_POSN                                  0x3
#define _B5DLC_B5DLC3_POSITION                              0x3
#define _B5DLC_B5DLC3_SIZE                                  0x1
#define _B5DLC_B5DLC3_LENGTH                                0x1
#define _B5DLC_B5DLC3_MASK                                  0x8
#define _B5DLC_B5RB0_POSN                                   0x4
#define _B5DLC_B5RB0_POSITION                               0x4
#define _B5DLC_B5RB0_SIZE                                   0x1
#define _B5DLC_B5RB0_LENGTH                                 0x1
#define _B5DLC_B5RB0_MASK                                   0x10
#define _B5DLC_B5RB1_POSN                                   0x5
#define _B5DLC_B5RB1_POSITION                               0x5
#define _B5DLC_B5RB1_SIZE                                   0x1
#define _B5DLC_B5RB1_LENGTH                                 0x1
#define _B5DLC_B5RB1_MASK                                   0x20
#define _B5DLC_B5RXRTR_POSN                                 0x6
#define _B5DLC_B5RXRTR_POSITION                             0x6
#define _B5DLC_B5RXRTR_SIZE                                 0x1
#define _B5DLC_B5RXRTR_LENGTH                               0x1
#define _B5DLC_B5RXRTR_MASK                                 0x40

// Register: B5D0
#define B5D0 B5D0
extern volatile unsigned char           B5D0                __at(0xE76);
#ifndef _LIB_BUILD
asm("B5D0 equ 0E76h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B5D00                  :1;
        unsigned B5D01                  :1;
        unsigned B5D02                  :1;
        unsigned B5D03                  :1;
        unsigned B5D04                  :1;
        unsigned B5D05                  :1;
        unsigned B5D06                  :1;
        unsigned B5D07                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned B57D07                 :1;
    };
} B5D0bits_t;
extern volatile B5D0bits_t B5D0bits __at(0xE76);
// bitfield macros
#define _B5D0_B5D00_POSN                                    0x0
#define _B5D0_B5D00_POSITION                                0x0
#define _B5D0_B5D00_SIZE                                    0x1
#define _B5D0_B5D00_LENGTH                                  0x1
#define _B5D0_B5D00_MASK                                    0x1
#define _B5D0_B5D01_POSN                                    0x1
#define _B5D0_B5D01_POSITION                                0x1
#define _B5D0_B5D01_SIZE                                    0x1
#define _B5D0_B5D01_LENGTH                                  0x1
#define _B5D0_B5D01_MASK                                    0x2
#define _B5D0_B5D02_POSN                                    0x2
#define _B5D0_B5D02_POSITION                                0x2
#define _B5D0_B5D02_SIZE                                    0x1
#define _B5D0_B5D02_LENGTH                                  0x1
#define _B5D0_B5D02_MASK                                    0x4
#define _B5D0_B5D03_POSN                                    0x3
#define _B5D0_B5D03_POSITION                                0x3
#define _B5D0_B5D03_SIZE                                    0x1
#define _B5D0_B5D03_LENGTH                                  0x1
#define _B5D0_B5D03_MASK                                    0x8
#define _B5D0_B5D04_POSN                                    0x4
#define _B5D0_B5D04_POSITION                                0x4
#define _B5D0_B5D04_SIZE                                    0x1
#define _B5D0_B5D04_LENGTH                                  0x1
#define _B5D0_B5D04_MASK                                    0x10
#define _B5D0_B5D05_POSN                                    0x5
#define _B5D0_B5D05_POSITION                                0x5
#define _B5D0_B5D05_SIZE                                    0x1
#define _B5D0_B5D05_LENGTH                                  0x1
#define _B5D0_B5D05_MASK                                    0x20
#define _B5D0_B5D06_POSN                                    0x6
#define _B5D0_B5D06_POSITION                                0x6
#define _B5D0_B5D06_SIZE                                    0x1
#define _B5D0_B5D06_LENGTH                                  0x1
#define _B5D0_B5D06_MASK                                    0x40
#define _B5D0_B5D07_POSN                                    0x7
#define _B5D0_B5D07_POSITION                                0x7
#define _B5D0_B5D07_SIZE                                    0x1
#define _B5D0_B5D07_LENGTH                                  0x1
#define _B5D0_B5D07_MASK                                    0x80
#define _B5D0_B57D07_POSN                                   0x7
#define _B5D0_B57D07_POSITION                               0x7
#define _B5D0_B57D07_SIZE                                   0x1
#define _B5D0_B57D07_LENGTH                                 0x1
#define _B5D0_B57D07_MASK                                   0x80

// Register: B5D1
#define B5D1 B5D1
extern volatile unsigned char           B5D1                __at(0xE77);
#ifndef _LIB_BUILD
asm("B5D1 equ 0E77h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B5D10                  :1;
        unsigned B5D11                  :1;
        unsigned B5D12                  :1;
        unsigned B5D13                  :1;
        unsigned B5D14                  :1;
        unsigned B5D15                  :1;
        unsigned B5D16                  :1;
        unsigned B5D17                  :1;
    };
} B5D1bits_t;
extern volatile B5D1bits_t B5D1bits __at(0xE77);
// bitfield macros
#define _B5D1_B5D10_POSN                                    0x0
#define _B5D1_B5D10_POSITION                                0x0
#define _B5D1_B5D10_SIZE                                    0x1
#define _B5D1_B5D10_LENGTH                                  0x1
#define _B5D1_B5D10_MASK                                    0x1
#define _B5D1_B5D11_POSN                                    0x1
#define _B5D1_B5D11_POSITION                                0x1
#define _B5D1_B5D11_SIZE                                    0x1
#define _B5D1_B5D11_LENGTH                                  0x1
#define _B5D1_B5D11_MASK                                    0x2
#define _B5D1_B5D12_POSN                                    0x2
#define _B5D1_B5D12_POSITION                                0x2
#define _B5D1_B5D12_SIZE                                    0x1
#define _B5D1_B5D12_LENGTH                                  0x1
#define _B5D1_B5D12_MASK                                    0x4
#define _B5D1_B5D13_POSN                                    0x3
#define _B5D1_B5D13_POSITION                                0x3
#define _B5D1_B5D13_SIZE                                    0x1
#define _B5D1_B5D13_LENGTH                                  0x1
#define _B5D1_B5D13_MASK                                    0x8
#define _B5D1_B5D14_POSN                                    0x4
#define _B5D1_B5D14_POSITION                                0x4
#define _B5D1_B5D14_SIZE                                    0x1
#define _B5D1_B5D14_LENGTH                                  0x1
#define _B5D1_B5D14_MASK                                    0x10
#define _B5D1_B5D15_POSN                                    0x5
#define _B5D1_B5D15_POSITION                                0x5
#define _B5D1_B5D15_SIZE                                    0x1
#define _B5D1_B5D15_LENGTH                                  0x1
#define _B5D1_B5D15_MASK                                    0x20
#define _B5D1_B5D16_POSN                                    0x6
#define _B5D1_B5D16_POSITION                                0x6
#define _B5D1_B5D16_SIZE                                    0x1
#define _B5D1_B5D16_LENGTH                                  0x1
#define _B5D1_B5D16_MASK                                    0x40
#define _B5D1_B5D17_POSN                                    0x7
#define _B5D1_B5D17_POSITION                                0x7
#define _B5D1_B5D17_SIZE                                    0x1
#define _B5D1_B5D17_LENGTH                                  0x1
#define _B5D1_B5D17_MASK                                    0x80

// Register: B5D2
#define B5D2 B5D2
extern volatile unsigned char           B5D2                __at(0xE78);
#ifndef _LIB_BUILD
asm("B5D2 equ 0E78h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B5D20                  :1;
        unsigned B5D21                  :1;
        unsigned B5D22                  :1;
        unsigned B5D23                  :1;
        unsigned B5D24                  :1;
        unsigned B5D25                  :1;
        unsigned B5D26                  :1;
        unsigned B5D27                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned B57D23                 :1;
    };
} B5D2bits_t;
extern volatile B5D2bits_t B5D2bits __at(0xE78);
// bitfield macros
#define _B5D2_B5D20_POSN                                    0x0
#define _B5D2_B5D20_POSITION                                0x0
#define _B5D2_B5D20_SIZE                                    0x1
#define _B5D2_B5D20_LENGTH                                  0x1
#define _B5D2_B5D20_MASK                                    0x1
#define _B5D2_B5D21_POSN                                    0x1
#define _B5D2_B5D21_POSITION                                0x1
#define _B5D2_B5D21_SIZE                                    0x1
#define _B5D2_B5D21_LENGTH                                  0x1
#define _B5D2_B5D21_MASK                                    0x2
#define _B5D2_B5D22_POSN                                    0x2
#define _B5D2_B5D22_POSITION                                0x2
#define _B5D2_B5D22_SIZE                                    0x1
#define _B5D2_B5D22_LENGTH                                  0x1
#define _B5D2_B5D22_MASK                                    0x4
#define _B5D2_B5D23_POSN                                    0x3
#define _B5D2_B5D23_POSITION                                0x3
#define _B5D2_B5D23_SIZE                                    0x1
#define _B5D2_B5D23_LENGTH                                  0x1
#define _B5D2_B5D23_MASK                                    0x8
#define _B5D2_B5D24_POSN                                    0x4
#define _B5D2_B5D24_POSITION                                0x4
#define _B5D2_B5D24_SIZE                                    0x1
#define _B5D2_B5D24_LENGTH                                  0x1
#define _B5D2_B5D24_MASK                                    0x10
#define _B5D2_B5D25_POSN                                    0x5
#define _B5D2_B5D25_POSITION                                0x5
#define _B5D2_B5D25_SIZE                                    0x1
#define _B5D2_B5D25_LENGTH                                  0x1
#define _B5D2_B5D25_MASK                                    0x20
#define _B5D2_B5D26_POSN                                    0x6
#define _B5D2_B5D26_POSITION                                0x6
#define _B5D2_B5D26_SIZE                                    0x1
#define _B5D2_B5D26_LENGTH                                  0x1
#define _B5D2_B5D26_MASK                                    0x40
#define _B5D2_B5D27_POSN                                    0x7
#define _B5D2_B5D27_POSITION                                0x7
#define _B5D2_B5D27_SIZE                                    0x1
#define _B5D2_B5D27_LENGTH                                  0x1
#define _B5D2_B5D27_MASK                                    0x80
#define _B5D2_B57D23_POSN                                   0x3
#define _B5D2_B57D23_POSITION                               0x3
#define _B5D2_B57D23_SIZE                                   0x1
#define _B5D2_B57D23_LENGTH                                 0x1
#define _B5D2_B57D23_MASK                                   0x8

// Register: B5D3
#define B5D3 B5D3
extern volatile unsigned char           B5D3                __at(0xE79);
#ifndef _LIB_BUILD
asm("B5D3 equ 0E79h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B5D30                  :1;
        unsigned B5D31                  :1;
        unsigned B5D32                  :1;
        unsigned B5D33                  :1;
        unsigned B5D34                  :1;
        unsigned B5D35                  :1;
        unsigned B5D36                  :1;
        unsigned B5D37                  :1;
    };
} B5D3bits_t;
extern volatile B5D3bits_t B5D3bits __at(0xE79);
// bitfield macros
#define _B5D3_B5D30_POSN                                    0x0
#define _B5D3_B5D30_POSITION                                0x0
#define _B5D3_B5D30_SIZE                                    0x1
#define _B5D3_B5D30_LENGTH                                  0x1
#define _B5D3_B5D30_MASK                                    0x1
#define _B5D3_B5D31_POSN                                    0x1
#define _B5D3_B5D31_POSITION                                0x1
#define _B5D3_B5D31_SIZE                                    0x1
#define _B5D3_B5D31_LENGTH                                  0x1
#define _B5D3_B5D31_MASK                                    0x2
#define _B5D3_B5D32_POSN                                    0x2
#define _B5D3_B5D32_POSITION                                0x2
#define _B5D3_B5D32_SIZE                                    0x1
#define _B5D3_B5D32_LENGTH                                  0x1
#define _B5D3_B5D32_MASK                                    0x4
#define _B5D3_B5D33_POSN                                    0x3
#define _B5D3_B5D33_POSITION                                0x3
#define _B5D3_B5D33_SIZE                                    0x1
#define _B5D3_B5D33_LENGTH                                  0x1
#define _B5D3_B5D33_MASK                                    0x8
#define _B5D3_B5D34_POSN                                    0x4
#define _B5D3_B5D34_POSITION                                0x4
#define _B5D3_B5D34_SIZE                                    0x1
#define _B5D3_B5D34_LENGTH                                  0x1
#define _B5D3_B5D34_MASK                                    0x10
#define _B5D3_B5D35_POSN                                    0x5
#define _B5D3_B5D35_POSITION                                0x5
#define _B5D3_B5D35_SIZE                                    0x1
#define _B5D3_B5D35_LENGTH                                  0x1
#define _B5D3_B5D35_MASK                                    0x20
#define _B5D3_B5D36_POSN                                    0x6
#define _B5D3_B5D36_POSITION                                0x6
#define _B5D3_B5D36_SIZE                                    0x1
#define _B5D3_B5D36_LENGTH                                  0x1
#define _B5D3_B5D36_MASK                                    0x40
#define _B5D3_B5D37_POSN                                    0x7
#define _B5D3_B5D37_POSITION                                0x7
#define _B5D3_B5D37_SIZE                                    0x1
#define _B5D3_B5D37_LENGTH                                  0x1
#define _B5D3_B5D37_MASK                                    0x80

// Register: B5D4
#define B5D4 B5D4
extern volatile unsigned char           B5D4                __at(0xE7A);
#ifndef _LIB_BUILD
asm("B5D4 equ 0E7Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B5D40                  :1;
        unsigned B5D41                  :1;
        unsigned B5D42                  :1;
        unsigned B5D43                  :1;
        unsigned B5D44                  :1;
        unsigned B5D45                  :1;
        unsigned B5D46                  :1;
        unsigned B5D47                  :1;
    };
} B5D4bits_t;
extern volatile B5D4bits_t B5D4bits __at(0xE7A);
// bitfield macros
#define _B5D4_B5D40_POSN                                    0x0
#define _B5D4_B5D40_POSITION                                0x0
#define _B5D4_B5D40_SIZE                                    0x1
#define _B5D4_B5D40_LENGTH                                  0x1
#define _B5D4_B5D40_MASK                                    0x1
#define _B5D4_B5D41_POSN                                    0x1
#define _B5D4_B5D41_POSITION                                0x1
#define _B5D4_B5D41_SIZE                                    0x1
#define _B5D4_B5D41_LENGTH                                  0x1
#define _B5D4_B5D41_MASK                                    0x2
#define _B5D4_B5D42_POSN                                    0x2
#define _B5D4_B5D42_POSITION                                0x2
#define _B5D4_B5D42_SIZE                                    0x1
#define _B5D4_B5D42_LENGTH                                  0x1
#define _B5D4_B5D42_MASK                                    0x4
#define _B5D4_B5D43_POSN                                    0x3
#define _B5D4_B5D43_POSITION                                0x3
#define _B5D4_B5D43_SIZE                                    0x1
#define _B5D4_B5D43_LENGTH                                  0x1
#define _B5D4_B5D43_MASK                                    0x8
#define _B5D4_B5D44_POSN                                    0x4
#define _B5D4_B5D44_POSITION                                0x4
#define _B5D4_B5D44_SIZE                                    0x1
#define _B5D4_B5D44_LENGTH                                  0x1
#define _B5D4_B5D44_MASK                                    0x10
#define _B5D4_B5D45_POSN                                    0x5
#define _B5D4_B5D45_POSITION                                0x5
#define _B5D4_B5D45_SIZE                                    0x1
#define _B5D4_B5D45_LENGTH                                  0x1
#define _B5D4_B5D45_MASK                                    0x20
#define _B5D4_B5D46_POSN                                    0x6
#define _B5D4_B5D46_POSITION                                0x6
#define _B5D4_B5D46_SIZE                                    0x1
#define _B5D4_B5D46_LENGTH                                  0x1
#define _B5D4_B5D46_MASK                                    0x40
#define _B5D4_B5D47_POSN                                    0x7
#define _B5D4_B5D47_POSITION                                0x7
#define _B5D4_B5D47_SIZE                                    0x1
#define _B5D4_B5D47_LENGTH                                  0x1
#define _B5D4_B5D47_MASK                                    0x80

// Register: B5D5
#define B5D5 B5D5
extern volatile unsigned char           B5D5                __at(0xE7B);
#ifndef _LIB_BUILD
asm("B5D5 equ 0E7Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B5D50                  :1;
        unsigned B5D51                  :1;
        unsigned B5D52                  :1;
        unsigned B5D53                  :1;
        unsigned B5D54                  :1;
        unsigned B5D55                  :1;
        unsigned B5D56                  :1;
        unsigned B5D57                  :1;
    };
} B5D5bits_t;
extern volatile B5D5bits_t B5D5bits __at(0xE7B);
// bitfield macros
#define _B5D5_B5D50_POSN                                    0x0
#define _B5D5_B5D50_POSITION                                0x0
#define _B5D5_B5D50_SIZE                                    0x1
#define _B5D5_B5D50_LENGTH                                  0x1
#define _B5D5_B5D50_MASK                                    0x1
#define _B5D5_B5D51_POSN                                    0x1
#define _B5D5_B5D51_POSITION                                0x1
#define _B5D5_B5D51_SIZE                                    0x1
#define _B5D5_B5D51_LENGTH                                  0x1
#define _B5D5_B5D51_MASK                                    0x2
#define _B5D5_B5D52_POSN                                    0x2
#define _B5D5_B5D52_POSITION                                0x2
#define _B5D5_B5D52_SIZE                                    0x1
#define _B5D5_B5D52_LENGTH                                  0x1
#define _B5D5_B5D52_MASK                                    0x4
#define _B5D5_B5D53_POSN                                    0x3
#define _B5D5_B5D53_POSITION                                0x3
#define _B5D5_B5D53_SIZE                                    0x1
#define _B5D5_B5D53_LENGTH                                  0x1
#define _B5D5_B5D53_MASK                                    0x8
#define _B5D5_B5D54_POSN                                    0x4
#define _B5D5_B5D54_POSITION                                0x4
#define _B5D5_B5D54_SIZE                                    0x1
#define _B5D5_B5D54_LENGTH                                  0x1
#define _B5D5_B5D54_MASK                                    0x10
#define _B5D5_B5D55_POSN                                    0x5
#define _B5D5_B5D55_POSITION                                0x5
#define _B5D5_B5D55_SIZE                                    0x1
#define _B5D5_B5D55_LENGTH                                  0x1
#define _B5D5_B5D55_MASK                                    0x20
#define _B5D5_B5D56_POSN                                    0x6
#define _B5D5_B5D56_POSITION                                0x6
#define _B5D5_B5D56_SIZE                                    0x1
#define _B5D5_B5D56_LENGTH                                  0x1
#define _B5D5_B5D56_MASK                                    0x40
#define _B5D5_B5D57_POSN                                    0x7
#define _B5D5_B5D57_POSITION                                0x7
#define _B5D5_B5D57_SIZE                                    0x1
#define _B5D5_B5D57_LENGTH                                  0x1
#define _B5D5_B5D57_MASK                                    0x80

// Register: B5D6
#define B5D6 B5D6
extern volatile unsigned char           B5D6                __at(0xE7C);
#ifndef _LIB_BUILD
asm("B5D6 equ 0E7Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B5D60                  :1;
        unsigned B5D61                  :1;
        unsigned B5D62                  :1;
        unsigned B5D63                  :1;
        unsigned B5D64                  :1;
        unsigned B5D65                  :1;
        unsigned B5D66                  :1;
        unsigned B5D67                  :1;
    };
} B5D6bits_t;
extern volatile B5D6bits_t B5D6bits __at(0xE7C);
// bitfield macros
#define _B5D6_B5D60_POSN                                    0x0
#define _B5D6_B5D60_POSITION                                0x0
#define _B5D6_B5D60_SIZE                                    0x1
#define _B5D6_B5D60_LENGTH                                  0x1
#define _B5D6_B5D60_MASK                                    0x1
#define _B5D6_B5D61_POSN                                    0x1
#define _B5D6_B5D61_POSITION                                0x1
#define _B5D6_B5D61_SIZE                                    0x1
#define _B5D6_B5D61_LENGTH                                  0x1
#define _B5D6_B5D61_MASK                                    0x2
#define _B5D6_B5D62_POSN                                    0x2
#define _B5D6_B5D62_POSITION                                0x2
#define _B5D6_B5D62_SIZE                                    0x1
#define _B5D6_B5D62_LENGTH                                  0x1
#define _B5D6_B5D62_MASK                                    0x4
#define _B5D6_B5D63_POSN                                    0x3
#define _B5D6_B5D63_POSITION                                0x3
#define _B5D6_B5D63_SIZE                                    0x1
#define _B5D6_B5D63_LENGTH                                  0x1
#define _B5D6_B5D63_MASK                                    0x8
#define _B5D6_B5D64_POSN                                    0x4
#define _B5D6_B5D64_POSITION                                0x4
#define _B5D6_B5D64_SIZE                                    0x1
#define _B5D6_B5D64_LENGTH                                  0x1
#define _B5D6_B5D64_MASK                                    0x10
#define _B5D6_B5D65_POSN                                    0x5
#define _B5D6_B5D65_POSITION                                0x5
#define _B5D6_B5D65_SIZE                                    0x1
#define _B5D6_B5D65_LENGTH                                  0x1
#define _B5D6_B5D65_MASK                                    0x20
#define _B5D6_B5D66_POSN                                    0x6
#define _B5D6_B5D66_POSITION                                0x6
#define _B5D6_B5D66_SIZE                                    0x1
#define _B5D6_B5D66_LENGTH                                  0x1
#define _B5D6_B5D66_MASK                                    0x40
#define _B5D6_B5D67_POSN                                    0x7
#define _B5D6_B5D67_POSITION                                0x7
#define _B5D6_B5D67_SIZE                                    0x1
#define _B5D6_B5D67_LENGTH                                  0x1
#define _B5D6_B5D67_MASK                                    0x80

// Register: B5D7
#define B5D7 B5D7
extern volatile unsigned char           B5D7                __at(0xE7D);
#ifndef _LIB_BUILD
asm("B5D7 equ 0E7Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned B5D70                  :1;
        unsigned B5D71                  :1;
        unsigned B5D72                  :1;
        unsigned B5D73                  :1;
        unsigned B5D74                  :1;
        unsigned B5D75                  :1;
        unsigned B5D76                  :1;
        unsigned B5D77                  :1;
    };
} B5D7bits_t;
extern volatile B5D7bits_t B5D7bits __at(0xE7D);
// bitfield macros
#define _B5D7_B5D70_POSN                                    0x0
#define _B5D7_B5D70_POSITION                                0x0
#define _B5D7_B5D70_SIZE                                    0x1
#define _B5D7_B5D70_LENGTH                                  0x1
#define _B5D7_B5D70_MASK                                    0x1
#define _B5D7_B5D71_POSN                                    0x1
#define _B5D7_B5D71_POSITION                                0x1
#define _B5D7_B5D71_SIZE                                    0x1
#define _B5D7_B5D71_LENGTH                                  0x1
#define _B5D7_B5D71_MASK                                    0x2
#define _B5D7_B5D72_POSN                                    0x2
#define _B5D7_B5D72_POSITION                                0x2
#define _B5D7_B5D72_SIZE                                    0x1
#define _B5D7_B5D72_LENGTH                                  0x1
#define _B5D7_B5D72_MASK                                    0x4
#define _B5D7_B5D73_POSN                                    0x3
#define _B5D7_B5D73_POSITION                                0x3
#define _B5D7_B5D73_SIZE                                    0x1
#define _B5D7_B5D73_LENGTH                                  0x1
#define _B5D7_B5D73_MASK                                    0x8
#define _B5D7_B5D74_POSN                                    0x4
#define _B5D7_B5D74_POSITION                                0x4
#define _B5D7_B5D74_SIZE                                    0x1
#define _B5D7_B5D74_LENGTH                                  0x1
#define _B5D7_B5D74_MASK                                    0x10
#define _B5D7_B5D75_POSN                                    0x5
#define _B5D7_B5D75_POSITION                                0x5
#define _B5D7_B5D75_SIZE                                    0x1
#define _B5D7_B5D75_LENGTH                                  0x1
#define _B5D7_B5D75_MASK                                    0x20
#define _B5D7_B5D76_POSN                                    0x6
#define _B5D7_B5D76_POSITION                                0x6
#define _B5D7_B5D76_SIZE                                    0x1
#define _B5D7_B5D76_LENGTH                                  0x1
#define _B5D7_B5D76_MASK                                    0x40
#define _B5D7_B5D77_POSN                                    0x7
#define _B5D7_B5D77_POSITION                                0x7
#define _B5D7_B5D77_SIZE                                    0x1
#define _B5D7_B5D77_LENGTH                                  0x1
#define _B5D7_B5D77_MASK                                    0x80

// Register: CANSTAT_RO4
#define CANSTAT_RO4 CANSTAT_RO4
extern volatile unsigned char           CANSTAT_RO4         __at(0xE7E);
#ifndef _LIB_BUILD
asm("CANSTAT_RO4 equ 0E7Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EICODE0                :1;
        unsigned EICODE1_ICODE0         :1;
        unsigned EICODE2_ICODE1         :1;
        unsigned EICODE3_ICODE2         :1;
        unsigned EICODE4                :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTAT_RO4bits_t;
extern volatile CANSTAT_RO4bits_t CANSTAT_RO4bits __at(0xE7E);
// bitfield macros
#define _CANSTAT_RO4_EICODE0_POSN                           0x0
#define _CANSTAT_RO4_EICODE0_POSITION                       0x0
#define _CANSTAT_RO4_EICODE0_SIZE                           0x1
#define _CANSTAT_RO4_EICODE0_LENGTH                         0x1
#define _CANSTAT_RO4_EICODE0_MASK                           0x1
#define _CANSTAT_RO4_EICODE1_ICODE0_POSN                    0x1
#define _CANSTAT_RO4_EICODE1_ICODE0_POSITION                0x1
#define _CANSTAT_RO4_EICODE1_ICODE0_SIZE                    0x1
#define _CANSTAT_RO4_EICODE1_ICODE0_LENGTH                  0x1
#define _CANSTAT_RO4_EICODE1_ICODE0_MASK                    0x2
#define _CANSTAT_RO4_EICODE2_ICODE1_POSN                    0x2
#define _CANSTAT_RO4_EICODE2_ICODE1_POSITION                0x2
#define _CANSTAT_RO4_EICODE2_ICODE1_SIZE                    0x1
#define _CANSTAT_RO4_EICODE2_ICODE1_LENGTH                  0x1
#define _CANSTAT_RO4_EICODE2_ICODE1_MASK                    0x4
#define _CANSTAT_RO4_EICODE3_ICODE2_POSN                    0x3
#define _CANSTAT_RO4_EICODE3_ICODE2_POSITION                0x3
#define _CANSTAT_RO4_EICODE3_ICODE2_SIZE                    0x1
#define _CANSTAT_RO4_EICODE3_ICODE2_LENGTH                  0x1
#define _CANSTAT_RO4_EICODE3_ICODE2_MASK                    0x8
#define _CANSTAT_RO4_EICODE4_POSN                           0x4
#define _CANSTAT_RO4_EICODE4_POSITION                       0x4
#define _CANSTAT_RO4_EICODE4_SIZE                           0x1
#define _CANSTAT_RO4_EICODE4_LENGTH                         0x1
#define _CANSTAT_RO4_EICODE4_MASK                           0x10
#define _CANSTAT_RO4_OPMODE0_POSN                           0x5
#define _CANSTAT_RO4_OPMODE0_POSITION                       0x5
#define _CANSTAT_RO4_OPMODE0_SIZE                           0x1
#define _CANSTAT_RO4_OPMODE0_LENGTH                         0x1
#define _CANSTAT_RO4_OPMODE0_MASK                           0x20
#define _CANSTAT_RO4_OPMODE1_POSN                           0x6
#define _CANSTAT_RO4_OPMODE1_POSITION                       0x6
#define _CANSTAT_RO4_OPMODE1_SIZE                           0x1
#define _CANSTAT_RO4_OPMODE1_LENGTH                         0x1
#define _CANSTAT_RO4_OPMODE1_MASK                           0x40
#define _CANSTAT_RO4_OPMODE2_POSN                           0x7
#define _CANSTAT_RO4_OPMODE2_POSITION                       0x7
#define _CANSTAT_RO4_OPMODE2_SIZE                           0x1
#define _CANSTAT_RO4_OPMODE2_LENGTH                         0x1
#define _CANSTAT_RO4_OPMODE2_MASK                           0x80

// Register: CANCON_RO4
#define CANCON_RO4 CANCON_RO4
extern volatile unsigned char           CANCON_RO4          __at(0xE7F);
#ifndef _LIB_BUILD
asm("CANCON_RO4 equ 0E7Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FP0                    :1;
        unsigned WIN0_FP1               :1;
        unsigned WIN1_FP2               :1;
        unsigned WIN2_FP3               :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
} CANCON_RO4bits_t;
extern volatile CANCON_RO4bits_t CANCON_RO4bits __at(0xE7F);
// bitfield macros
#define _CANCON_RO4_FP0_POSN                                0x0
#define _CANCON_RO4_FP0_POSITION                            0x0
#define _CANCON_RO4_FP0_SIZE                                0x1
#define _CANCON_RO4_FP0_LENGTH                              0x1
#define _CANCON_RO4_FP0_MASK                                0x1
#define _CANCON_RO4_WIN0_FP1_POSN                           0x1
#define _CANCON_RO4_WIN0_FP1_POSITION                       0x1
#define _CANCON_RO4_WIN0_FP1_SIZE                           0x1
#define _CANCON_RO4_WIN0_FP1_LENGTH                         0x1
#define _CANCON_RO4_WIN0_FP1_MASK                           0x2
#define _CANCON_RO4_WIN1_FP2_POSN                           0x2
#define _CANCON_RO4_WIN1_FP2_POSITION                       0x2
#define _CANCON_RO4_WIN1_FP2_SIZE                           0x1
#define _CANCON_RO4_WIN1_FP2_LENGTH                         0x1
#define _CANCON_RO4_WIN1_FP2_MASK                           0x4
#define _CANCON_RO4_WIN2_FP3_POSN                           0x3
#define _CANCON_RO4_WIN2_FP3_POSITION                       0x3
#define _CANCON_RO4_WIN2_FP3_SIZE                           0x1
#define _CANCON_RO4_WIN2_FP3_LENGTH                         0x1
#define _CANCON_RO4_WIN2_FP3_MASK                           0x8
#define _CANCON_RO4_ABAT_POSN                               0x4
#define _CANCON_RO4_ABAT_POSITION                           0x4
#define _CANCON_RO4_ABAT_SIZE                               0x1
#define _CANCON_RO4_ABAT_LENGTH                             0x1
#define _CANCON_RO4_ABAT_MASK                               0x10
#define _CANCON_RO4_REQOP0_POSN                             0x5
#define _CANCON_RO4_REQOP0_POSITION                         0x5
#define _CANCON_RO4_REQOP0_SIZE                             0x1
#define _CANCON_RO4_REQOP0_LENGTH                           0x1
#define _CANCON_RO4_REQOP0_MASK                             0x20
#define _CANCON_RO4_REQOP1_POSN                             0x6
#define _CANCON_RO4_REQOP1_POSITION                         0x6
#define _CANCON_RO4_REQOP1_SIZE                             0x1
#define _CANCON_RO4_REQOP1_LENGTH                           0x1
#define _CANCON_RO4_REQOP1_MASK                             0x40
#define _CANCON_RO4_REQOP2_POSN                             0x7
#define _CANCON_RO4_REQOP2_POSITION                         0x7
#define _CANCON_RO4_REQOP2_SIZE                             0x1
#define _CANCON_RO4_REQOP2_LENGTH                           0x1
#define _CANCON_RO4_REQOP2_MASK                             0x80

// Register: RXF0SIDH
#define RXF0SIDH RXF0SIDH
extern volatile unsigned char           RXF0SIDH            __at(0xF00);
#ifndef _LIB_BUILD
asm("RXF0SIDH equ 0F00h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF0SID3               :1;
        unsigned RXF0SID4               :1;
        unsigned RXF0SID5               :1;
        unsigned RXF0SID6               :1;
        unsigned RXF0SID7               :1;
        unsigned RXF0SID8               :1;
        unsigned RXF0SID9               :1;
        unsigned RXF0SID10              :1;
    };
} RXF0SIDHbits_t;
extern volatile RXF0SIDHbits_t RXF0SIDHbits __at(0xF00);
// bitfield macros
#define _RXF0SIDH_SID3_POSN                                 0x0
#define _RXF0SIDH_SID3_POSITION                             0x0
#define _RXF0SIDH_SID3_SIZE                                 0x1
#define _RXF0SIDH_SID3_LENGTH                               0x1
#define _RXF0SIDH_SID3_MASK                                 0x1
#define _RXF0SIDH_SID4_POSN                                 0x1
#define _RXF0SIDH_SID4_POSITION                             0x1
#define _RXF0SIDH_SID4_SIZE                                 0x1
#define _RXF0SIDH_SID4_LENGTH                               0x1
#define _RXF0SIDH_SID4_MASK                                 0x2
#define _RXF0SIDH_SID5_POSN                                 0x2
#define _RXF0SIDH_SID5_POSITION                             0x2
#define _RXF0SIDH_SID5_SIZE                                 0x1
#define _RXF0SIDH_SID5_LENGTH                               0x1
#define _RXF0SIDH_SID5_MASK                                 0x4
#define _RXF0SIDH_SID6_POSN                                 0x3
#define _RXF0SIDH_SID6_POSITION                             0x3
#define _RXF0SIDH_SID6_SIZE                                 0x1
#define _RXF0SIDH_SID6_LENGTH                               0x1
#define _RXF0SIDH_SID6_MASK                                 0x8
#define _RXF0SIDH_SID7_POSN                                 0x4
#define _RXF0SIDH_SID7_POSITION                             0x4
#define _RXF0SIDH_SID7_SIZE                                 0x1
#define _RXF0SIDH_SID7_LENGTH                               0x1
#define _RXF0SIDH_SID7_MASK                                 0x10
#define _RXF0SIDH_SID8_POSN                                 0x5
#define _RXF0SIDH_SID8_POSITION                             0x5
#define _RXF0SIDH_SID8_SIZE                                 0x1
#define _RXF0SIDH_SID8_LENGTH                               0x1
#define _RXF0SIDH_SID8_MASK                                 0x20
#define _RXF0SIDH_SID9_POSN                                 0x6
#define _RXF0SIDH_SID9_POSITION                             0x6
#define _RXF0SIDH_SID9_SIZE                                 0x1
#define _RXF0SIDH_SID9_LENGTH                               0x1
#define _RXF0SIDH_SID9_MASK                                 0x40
#define _RXF0SIDH_SID10_POSN                                0x7
#define _RXF0SIDH_SID10_POSITION                            0x7
#define _RXF0SIDH_SID10_SIZE                                0x1
#define _RXF0SIDH_SID10_LENGTH                              0x1
#define _RXF0SIDH_SID10_MASK                                0x80
#define _RXF0SIDH_RXF0SID3_POSN                             0x0
#define _RXF0SIDH_RXF0SID3_POSITION                         0x0
#define _RXF0SIDH_RXF0SID3_SIZE                             0x1
#define _RXF0SIDH_RXF0SID3_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID3_MASK                             0x1
#define _RXF0SIDH_RXF0SID4_POSN                             0x1
#define _RXF0SIDH_RXF0SID4_POSITION                         0x1
#define _RXF0SIDH_RXF0SID4_SIZE                             0x1
#define _RXF0SIDH_RXF0SID4_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID4_MASK                             0x2
#define _RXF0SIDH_RXF0SID5_POSN                             0x2
#define _RXF0SIDH_RXF0SID5_POSITION                         0x2
#define _RXF0SIDH_RXF0SID5_SIZE                             0x1
#define _RXF0SIDH_RXF0SID5_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID5_MASK                             0x4
#define _RXF0SIDH_RXF0SID6_POSN                             0x3
#define _RXF0SIDH_RXF0SID6_POSITION                         0x3
#define _RXF0SIDH_RXF0SID6_SIZE                             0x1
#define _RXF0SIDH_RXF0SID6_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID6_MASK                             0x8
#define _RXF0SIDH_RXF0SID7_POSN                             0x4
#define _RXF0SIDH_RXF0SID7_POSITION                         0x4
#define _RXF0SIDH_RXF0SID7_SIZE                             0x1
#define _RXF0SIDH_RXF0SID7_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID7_MASK                             0x10
#define _RXF0SIDH_RXF0SID8_POSN                             0x5
#define _RXF0SIDH_RXF0SID8_POSITION                         0x5
#define _RXF0SIDH_RXF0SID8_SIZE                             0x1
#define _RXF0SIDH_RXF0SID8_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID8_MASK                             0x20
#define _RXF0SIDH_RXF0SID9_POSN                             0x6
#define _RXF0SIDH_RXF0SID9_POSITION                         0x6
#define _RXF0SIDH_RXF0SID9_SIZE                             0x1
#define _RXF0SIDH_RXF0SID9_LENGTH                           0x1
#define _RXF0SIDH_RXF0SID9_MASK                             0x40
#define _RXF0SIDH_RXF0SID10_POSN                            0x7
#define _RXF0SIDH_RXF0SID10_POSITION                        0x7
#define _RXF0SIDH_RXF0SID10_SIZE                            0x1
#define _RXF0SIDH_RXF0SID10_LENGTH                          0x1
#define _RXF0SIDH_RXF0SID10_MASK                            0x80

// Register: RXF0SIDL
#define RXF0SIDL RXF0SIDL
extern volatile unsigned char           RXF0SIDL            __at(0xF01);
#ifndef _LIB_BUILD
asm("RXF0SIDL equ 0F01h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF0EID16              :1;
        unsigned RXF0EID17              :1;
        unsigned                        :1;
        unsigned RXF0EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF0SID0               :1;
        unsigned RXF0SID1               :1;
        unsigned RXF0SID2               :1;
    };
} RXF0SIDLbits_t;
extern volatile RXF0SIDLbits_t RXF0SIDLbits __at(0xF01);
// bitfield macros
#define _RXF0SIDL_EID16_POSN                                0x0
#define _RXF0SIDL_EID16_POSITION                            0x0
#define _RXF0SIDL_EID16_SIZE                                0x1
#define _RXF0SIDL_EID16_LENGTH                              0x1
#define _RXF0SIDL_EID16_MASK                                0x1
#define _RXF0SIDL_EID17_POSN                                0x1
#define _RXF0SIDL_EID17_POSITION                            0x1
#define _RXF0SIDL_EID17_SIZE                                0x1
#define _RXF0SIDL_EID17_LENGTH                              0x1
#define _RXF0SIDL_EID17_MASK                                0x2
#define _RXF0SIDL_EXIDEN_POSN                               0x3
#define _RXF0SIDL_EXIDEN_POSITION                           0x3
#define _RXF0SIDL_EXIDEN_SIZE                               0x1
#define _RXF0SIDL_EXIDEN_LENGTH                             0x1
#define _RXF0SIDL_EXIDEN_MASK                               0x8
#define _RXF0SIDL_SID0_POSN                                 0x5
#define _RXF0SIDL_SID0_POSITION                             0x5
#define _RXF0SIDL_SID0_SIZE                                 0x1
#define _RXF0SIDL_SID0_LENGTH                               0x1
#define _RXF0SIDL_SID0_MASK                                 0x20
#define _RXF0SIDL_SID1_POSN                                 0x6
#define _RXF0SIDL_SID1_POSITION                             0x6
#define _RXF0SIDL_SID1_SIZE                                 0x1
#define _RXF0SIDL_SID1_LENGTH                               0x1
#define _RXF0SIDL_SID1_MASK                                 0x40
#define _RXF0SIDL_SID2_POSN                                 0x7
#define _RXF0SIDL_SID2_POSITION                             0x7
#define _RXF0SIDL_SID2_SIZE                                 0x1
#define _RXF0SIDL_SID2_LENGTH                               0x1
#define _RXF0SIDL_SID2_MASK                                 0x80
#define _RXF0SIDL_EXIDE_POSN                                0x3
#define _RXF0SIDL_EXIDE_POSITION                            0x3
#define _RXF0SIDL_EXIDE_SIZE                                0x1
#define _RXF0SIDL_EXIDE_LENGTH                              0x1
#define _RXF0SIDL_EXIDE_MASK                                0x8
#define _RXF0SIDL_RXF0EID16_POSN                            0x0
#define _RXF0SIDL_RXF0EID16_POSITION                        0x0
#define _RXF0SIDL_RXF0EID16_SIZE                            0x1
#define _RXF0SIDL_RXF0EID16_LENGTH                          0x1
#define _RXF0SIDL_RXF0EID16_MASK                            0x1
#define _RXF0SIDL_RXF0EID17_POSN                            0x1
#define _RXF0SIDL_RXF0EID17_POSITION                        0x1
#define _RXF0SIDL_RXF0EID17_SIZE                            0x1
#define _RXF0SIDL_RXF0EID17_LENGTH                          0x1
#define _RXF0SIDL_RXF0EID17_MASK                            0x2
#define _RXF0SIDL_RXF0EXIDEN_POSN                           0x3
#define _RXF0SIDL_RXF0EXIDEN_POSITION                       0x3
#define _RXF0SIDL_RXF0EXIDEN_SIZE                           0x1
#define _RXF0SIDL_RXF0EXIDEN_LENGTH                         0x1
#define _RXF0SIDL_RXF0EXIDEN_MASK                           0x8
#define _RXF0SIDL_RXF0SID0_POSN                             0x5
#define _RXF0SIDL_RXF0SID0_POSITION                         0x5
#define _RXF0SIDL_RXF0SID0_SIZE                             0x1
#define _RXF0SIDL_RXF0SID0_LENGTH                           0x1
#define _RXF0SIDL_RXF0SID0_MASK                             0x20
#define _RXF0SIDL_RXF0SID1_POSN                             0x6
#define _RXF0SIDL_RXF0SID1_POSITION                         0x6
#define _RXF0SIDL_RXF0SID1_SIZE                             0x1
#define _RXF0SIDL_RXF0SID1_LENGTH                           0x1
#define _RXF0SIDL_RXF0SID1_MASK                             0x40
#define _RXF0SIDL_RXF0SID2_POSN                             0x7
#define _RXF0SIDL_RXF0SID2_POSITION                         0x7
#define _RXF0SIDL_RXF0SID2_SIZE                             0x1
#define _RXF0SIDL_RXF0SID2_LENGTH                           0x1
#define _RXF0SIDL_RXF0SID2_MASK                             0x80

// Register: RXF0EIDH
#define RXF0EIDH RXF0EIDH
extern volatile unsigned char           RXF0EIDH            __at(0xF02);
#ifndef _LIB_BUILD
asm("RXF0EIDH equ 0F02h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF0EID8               :1;
        unsigned RXF0EID9               :1;
        unsigned RXF0EID10              :1;
        unsigned RXF0EID11              :1;
        unsigned RXF0EID12              :1;
        unsigned RXF0EID13              :1;
        unsigned RXF0EID14              :1;
        unsigned RXF0EID15              :1;
    };
} RXF0EIDHbits_t;
extern volatile RXF0EIDHbits_t RXF0EIDHbits __at(0xF02);
// bitfield macros
#define _RXF0EIDH_EID8_POSN                                 0x0
#define _RXF0EIDH_EID8_POSITION                             0x0
#define _RXF0EIDH_EID8_SIZE                                 0x1
#define _RXF0EIDH_EID8_LENGTH                               0x1
#define _RXF0EIDH_EID8_MASK                                 0x1
#define _RXF0EIDH_EID9_POSN                                 0x1
#define _RXF0EIDH_EID9_POSITION                             0x1
#define _RXF0EIDH_EID9_SIZE                                 0x1
#define _RXF0EIDH_EID9_LENGTH                               0x1
#define _RXF0EIDH_EID9_MASK                                 0x2
#define _RXF0EIDH_EID10_POSN                                0x2
#define _RXF0EIDH_EID10_POSITION                            0x2
#define _RXF0EIDH_EID10_SIZE                                0x1
#define _RXF0EIDH_EID10_LENGTH                              0x1
#define _RXF0EIDH_EID10_MASK                                0x4
#define _RXF0EIDH_EID11_POSN                                0x3
#define _RXF0EIDH_EID11_POSITION                            0x3
#define _RXF0EIDH_EID11_SIZE                                0x1
#define _RXF0EIDH_EID11_LENGTH                              0x1
#define _RXF0EIDH_EID11_MASK                                0x8
#define _RXF0EIDH_EID12_POSN                                0x4
#define _RXF0EIDH_EID12_POSITION                            0x4
#define _RXF0EIDH_EID12_SIZE                                0x1
#define _RXF0EIDH_EID12_LENGTH                              0x1
#define _RXF0EIDH_EID12_MASK                                0x10
#define _RXF0EIDH_EID13_POSN                                0x5
#define _RXF0EIDH_EID13_POSITION                            0x5
#define _RXF0EIDH_EID13_SIZE                                0x1
#define _RXF0EIDH_EID13_LENGTH                              0x1
#define _RXF0EIDH_EID13_MASK                                0x20
#define _RXF0EIDH_EID14_POSN                                0x6
#define _RXF0EIDH_EID14_POSITION                            0x6
#define _RXF0EIDH_EID14_SIZE                                0x1
#define _RXF0EIDH_EID14_LENGTH                              0x1
#define _RXF0EIDH_EID14_MASK                                0x40
#define _RXF0EIDH_EID15_POSN                                0x7
#define _RXF0EIDH_EID15_POSITION                            0x7
#define _RXF0EIDH_EID15_SIZE                                0x1
#define _RXF0EIDH_EID15_LENGTH                              0x1
#define _RXF0EIDH_EID15_MASK                                0x80
#define _RXF0EIDH_RXF0EID8_POSN                             0x0
#define _RXF0EIDH_RXF0EID8_POSITION                         0x0
#define _RXF0EIDH_RXF0EID8_SIZE                             0x1
#define _RXF0EIDH_RXF0EID8_LENGTH                           0x1
#define _RXF0EIDH_RXF0EID8_MASK                             0x1
#define _RXF0EIDH_RXF0EID9_POSN                             0x1
#define _RXF0EIDH_RXF0EID9_POSITION                         0x1
#define _RXF0EIDH_RXF0EID9_SIZE                             0x1
#define _RXF0EIDH_RXF0EID9_LENGTH                           0x1
#define _RXF0EIDH_RXF0EID9_MASK                             0x2
#define _RXF0EIDH_RXF0EID10_POSN                            0x2
#define _RXF0EIDH_RXF0EID10_POSITION                        0x2
#define _RXF0EIDH_RXF0EID10_SIZE                            0x1
#define _RXF0EIDH_RXF0EID10_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID10_MASK                            0x4
#define _RXF0EIDH_RXF0EID11_POSN                            0x3
#define _RXF0EIDH_RXF0EID11_POSITION                        0x3
#define _RXF0EIDH_RXF0EID11_SIZE                            0x1
#define _RXF0EIDH_RXF0EID11_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID11_MASK                            0x8
#define _RXF0EIDH_RXF0EID12_POSN                            0x4
#define _RXF0EIDH_RXF0EID12_POSITION                        0x4
#define _RXF0EIDH_RXF0EID12_SIZE                            0x1
#define _RXF0EIDH_RXF0EID12_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID12_MASK                            0x10
#define _RXF0EIDH_RXF0EID13_POSN                            0x5
#define _RXF0EIDH_RXF0EID13_POSITION                        0x5
#define _RXF0EIDH_RXF0EID13_SIZE                            0x1
#define _RXF0EIDH_RXF0EID13_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID13_MASK                            0x20
#define _RXF0EIDH_RXF0EID14_POSN                            0x6
#define _RXF0EIDH_RXF0EID14_POSITION                        0x6
#define _RXF0EIDH_RXF0EID14_SIZE                            0x1
#define _RXF0EIDH_RXF0EID14_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID14_MASK                            0x40
#define _RXF0EIDH_RXF0EID15_POSN                            0x7
#define _RXF0EIDH_RXF0EID15_POSITION                        0x7
#define _RXF0EIDH_RXF0EID15_SIZE                            0x1
#define _RXF0EIDH_RXF0EID15_LENGTH                          0x1
#define _RXF0EIDH_RXF0EID15_MASK                            0x80

// Register: RXF0EIDL
#define RXF0EIDL RXF0EIDL
extern volatile unsigned char           RXF0EIDL            __at(0xF03);
#ifndef _LIB_BUILD
asm("RXF0EIDL equ 0F03h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF0EID0               :1;
        unsigned RXF0EID1               :1;
        unsigned RXF0EID2               :1;
        unsigned RXF0EID3               :1;
        unsigned RXF0EID4               :1;
        unsigned RXF0EID5               :1;
        unsigned RXF0EID6               :1;
        unsigned RXF0EID7               :1;
    };
} RXF0EIDLbits_t;
extern volatile RXF0EIDLbits_t RXF0EIDLbits __at(0xF03);
// bitfield macros
#define _RXF0EIDL_EID0_POSN                                 0x0
#define _RXF0EIDL_EID0_POSITION                             0x0
#define _RXF0EIDL_EID0_SIZE                                 0x1
#define _RXF0EIDL_EID0_LENGTH                               0x1
#define _RXF0EIDL_EID0_MASK                                 0x1
#define _RXF0EIDL_EID1_POSN                                 0x1
#define _RXF0EIDL_EID1_POSITION                             0x1
#define _RXF0EIDL_EID1_SIZE                                 0x1
#define _RXF0EIDL_EID1_LENGTH                               0x1
#define _RXF0EIDL_EID1_MASK                                 0x2
#define _RXF0EIDL_EID2_POSN                                 0x2
#define _RXF0EIDL_EID2_POSITION                             0x2
#define _RXF0EIDL_EID2_SIZE                                 0x1
#define _RXF0EIDL_EID2_LENGTH                               0x1
#define _RXF0EIDL_EID2_MASK                                 0x4
#define _RXF0EIDL_EID3_POSN                                 0x3
#define _RXF0EIDL_EID3_POSITION                             0x3
#define _RXF0EIDL_EID3_SIZE                                 0x1
#define _RXF0EIDL_EID3_LENGTH                               0x1
#define _RXF0EIDL_EID3_MASK                                 0x8
#define _RXF0EIDL_EID4_POSN                                 0x4
#define _RXF0EIDL_EID4_POSITION                             0x4
#define _RXF0EIDL_EID4_SIZE                                 0x1
#define _RXF0EIDL_EID4_LENGTH                               0x1
#define _RXF0EIDL_EID4_MASK                                 0x10
#define _RXF0EIDL_EID5_POSN                                 0x5
#define _RXF0EIDL_EID5_POSITION                             0x5
#define _RXF0EIDL_EID5_SIZE                                 0x1
#define _RXF0EIDL_EID5_LENGTH                               0x1
#define _RXF0EIDL_EID5_MASK                                 0x20
#define _RXF0EIDL_EID6_POSN                                 0x6
#define _RXF0EIDL_EID6_POSITION                             0x6
#define _RXF0EIDL_EID6_SIZE                                 0x1
#define _RXF0EIDL_EID6_LENGTH                               0x1
#define _RXF0EIDL_EID6_MASK                                 0x40
#define _RXF0EIDL_EID7_POSN                                 0x7
#define _RXF0EIDL_EID7_POSITION                             0x7
#define _RXF0EIDL_EID7_SIZE                                 0x1
#define _RXF0EIDL_EID7_LENGTH                               0x1
#define _RXF0EIDL_EID7_MASK                                 0x80
#define _RXF0EIDL_RXF0EID0_POSN                             0x0
#define _RXF0EIDL_RXF0EID0_POSITION                         0x0
#define _RXF0EIDL_RXF0EID0_SIZE                             0x1
#define _RXF0EIDL_RXF0EID0_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID0_MASK                             0x1
#define _RXF0EIDL_RXF0EID1_POSN                             0x1
#define _RXF0EIDL_RXF0EID1_POSITION                         0x1
#define _RXF0EIDL_RXF0EID1_SIZE                             0x1
#define _RXF0EIDL_RXF0EID1_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID1_MASK                             0x2
#define _RXF0EIDL_RXF0EID2_POSN                             0x2
#define _RXF0EIDL_RXF0EID2_POSITION                         0x2
#define _RXF0EIDL_RXF0EID2_SIZE                             0x1
#define _RXF0EIDL_RXF0EID2_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID2_MASK                             0x4
#define _RXF0EIDL_RXF0EID3_POSN                             0x3
#define _RXF0EIDL_RXF0EID3_POSITION                         0x3
#define _RXF0EIDL_RXF0EID3_SIZE                             0x1
#define _RXF0EIDL_RXF0EID3_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID3_MASK                             0x8
#define _RXF0EIDL_RXF0EID4_POSN                             0x4
#define _RXF0EIDL_RXF0EID4_POSITION                         0x4
#define _RXF0EIDL_RXF0EID4_SIZE                             0x1
#define _RXF0EIDL_RXF0EID4_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID4_MASK                             0x10
#define _RXF0EIDL_RXF0EID5_POSN                             0x5
#define _RXF0EIDL_RXF0EID5_POSITION                         0x5
#define _RXF0EIDL_RXF0EID5_SIZE                             0x1
#define _RXF0EIDL_RXF0EID5_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID5_MASK                             0x20
#define _RXF0EIDL_RXF0EID6_POSN                             0x6
#define _RXF0EIDL_RXF0EID6_POSITION                         0x6
#define _RXF0EIDL_RXF0EID6_SIZE                             0x1
#define _RXF0EIDL_RXF0EID6_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID6_MASK                             0x40
#define _RXF0EIDL_RXF0EID7_POSN                             0x7
#define _RXF0EIDL_RXF0EID7_POSITION                         0x7
#define _RXF0EIDL_RXF0EID7_SIZE                             0x1
#define _RXF0EIDL_RXF0EID7_LENGTH                           0x1
#define _RXF0EIDL_RXF0EID7_MASK                             0x80

// Register: RXF1SIDH
#define RXF1SIDH RXF1SIDH
extern volatile unsigned char           RXF1SIDH            __at(0xF04);
#ifndef _LIB_BUILD
asm("RXF1SIDH equ 0F04h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF1SID3               :1;
        unsigned RXF1SID4               :1;
        unsigned RXF1SID5               :1;
        unsigned RXF1SID6               :1;
        unsigned RXF1SID7               :1;
        unsigned RXF1SID8               :1;
        unsigned RXF1SID9               :1;
        unsigned RXF1SID10              :1;
    };
} RXF1SIDHbits_t;
extern volatile RXF1SIDHbits_t RXF1SIDHbits __at(0xF04);
// bitfield macros
#define _RXF1SIDH_SID3_POSN                                 0x0
#define _RXF1SIDH_SID3_POSITION                             0x0
#define _RXF1SIDH_SID3_SIZE                                 0x1
#define _RXF1SIDH_SID3_LENGTH                               0x1
#define _RXF1SIDH_SID3_MASK                                 0x1
#define _RXF1SIDH_SID4_POSN                                 0x1
#define _RXF1SIDH_SID4_POSITION                             0x1
#define _RXF1SIDH_SID4_SIZE                                 0x1
#define _RXF1SIDH_SID4_LENGTH                               0x1
#define _RXF1SIDH_SID4_MASK                                 0x2
#define _RXF1SIDH_SID5_POSN                                 0x2
#define _RXF1SIDH_SID5_POSITION                             0x2
#define _RXF1SIDH_SID5_SIZE                                 0x1
#define _RXF1SIDH_SID5_LENGTH                               0x1
#define _RXF1SIDH_SID5_MASK                                 0x4
#define _RXF1SIDH_SID6_POSN                                 0x3
#define _RXF1SIDH_SID6_POSITION                             0x3
#define _RXF1SIDH_SID6_SIZE                                 0x1
#define _RXF1SIDH_SID6_LENGTH                               0x1
#define _RXF1SIDH_SID6_MASK                                 0x8
#define _RXF1SIDH_SID7_POSN                                 0x4
#define _RXF1SIDH_SID7_POSITION                             0x4
#define _RXF1SIDH_SID7_SIZE                                 0x1
#define _RXF1SIDH_SID7_LENGTH                               0x1
#define _RXF1SIDH_SID7_MASK                                 0x10
#define _RXF1SIDH_SID8_POSN                                 0x5
#define _RXF1SIDH_SID8_POSITION                             0x5
#define _RXF1SIDH_SID8_SIZE                                 0x1
#define _RXF1SIDH_SID8_LENGTH                               0x1
#define _RXF1SIDH_SID8_MASK                                 0x20
#define _RXF1SIDH_SID9_POSN                                 0x6
#define _RXF1SIDH_SID9_POSITION                             0x6
#define _RXF1SIDH_SID9_SIZE                                 0x1
#define _RXF1SIDH_SID9_LENGTH                               0x1
#define _RXF1SIDH_SID9_MASK                                 0x40
#define _RXF1SIDH_SID10_POSN                                0x7
#define _RXF1SIDH_SID10_POSITION                            0x7
#define _RXF1SIDH_SID10_SIZE                                0x1
#define _RXF1SIDH_SID10_LENGTH                              0x1
#define _RXF1SIDH_SID10_MASK                                0x80
#define _RXF1SIDH_RXF1SID3_POSN                             0x0
#define _RXF1SIDH_RXF1SID3_POSITION                         0x0
#define _RXF1SIDH_RXF1SID3_SIZE                             0x1
#define _RXF1SIDH_RXF1SID3_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID3_MASK                             0x1
#define _RXF1SIDH_RXF1SID4_POSN                             0x1
#define _RXF1SIDH_RXF1SID4_POSITION                         0x1
#define _RXF1SIDH_RXF1SID4_SIZE                             0x1
#define _RXF1SIDH_RXF1SID4_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID4_MASK                             0x2
#define _RXF1SIDH_RXF1SID5_POSN                             0x2
#define _RXF1SIDH_RXF1SID5_POSITION                         0x2
#define _RXF1SIDH_RXF1SID5_SIZE                             0x1
#define _RXF1SIDH_RXF1SID5_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID5_MASK                             0x4
#define _RXF1SIDH_RXF1SID6_POSN                             0x3
#define _RXF1SIDH_RXF1SID6_POSITION                         0x3
#define _RXF1SIDH_RXF1SID6_SIZE                             0x1
#define _RXF1SIDH_RXF1SID6_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID6_MASK                             0x8
#define _RXF1SIDH_RXF1SID7_POSN                             0x4
#define _RXF1SIDH_RXF1SID7_POSITION                         0x4
#define _RXF1SIDH_RXF1SID7_SIZE                             0x1
#define _RXF1SIDH_RXF1SID7_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID7_MASK                             0x10
#define _RXF1SIDH_RXF1SID8_POSN                             0x5
#define _RXF1SIDH_RXF1SID8_POSITION                         0x5
#define _RXF1SIDH_RXF1SID8_SIZE                             0x1
#define _RXF1SIDH_RXF1SID8_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID8_MASK                             0x20
#define _RXF1SIDH_RXF1SID9_POSN                             0x6
#define _RXF1SIDH_RXF1SID9_POSITION                         0x6
#define _RXF1SIDH_RXF1SID9_SIZE                             0x1
#define _RXF1SIDH_RXF1SID9_LENGTH                           0x1
#define _RXF1SIDH_RXF1SID9_MASK                             0x40
#define _RXF1SIDH_RXF1SID10_POSN                            0x7
#define _RXF1SIDH_RXF1SID10_POSITION                        0x7
#define _RXF1SIDH_RXF1SID10_SIZE                            0x1
#define _RXF1SIDH_RXF1SID10_LENGTH                          0x1
#define _RXF1SIDH_RXF1SID10_MASK                            0x80

// Register: RXF1SIDL
#define RXF1SIDL RXF1SIDL
extern volatile unsigned char           RXF1SIDL            __at(0xF05);
#ifndef _LIB_BUILD
asm("RXF1SIDL equ 0F05h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF1EID16              :1;
        unsigned RXF1EID17              :1;
        unsigned                        :1;
        unsigned RXF1EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF1SID0               :1;
        unsigned RXF1SID1               :1;
        unsigned RXF1SID2               :1;
    };
} RXF1SIDLbits_t;
extern volatile RXF1SIDLbits_t RXF1SIDLbits __at(0xF05);
// bitfield macros
#define _RXF1SIDL_EID16_POSN                                0x0
#define _RXF1SIDL_EID16_POSITION                            0x0
#define _RXF1SIDL_EID16_SIZE                                0x1
#define _RXF1SIDL_EID16_LENGTH                              0x1
#define _RXF1SIDL_EID16_MASK                                0x1
#define _RXF1SIDL_EID17_POSN                                0x1
#define _RXF1SIDL_EID17_POSITION                            0x1
#define _RXF1SIDL_EID17_SIZE                                0x1
#define _RXF1SIDL_EID17_LENGTH                              0x1
#define _RXF1SIDL_EID17_MASK                                0x2
#define _RXF1SIDL_EXIDEN_POSN                               0x3
#define _RXF1SIDL_EXIDEN_POSITION                           0x3
#define _RXF1SIDL_EXIDEN_SIZE                               0x1
#define _RXF1SIDL_EXIDEN_LENGTH                             0x1
#define _RXF1SIDL_EXIDEN_MASK                               0x8
#define _RXF1SIDL_SID0_POSN                                 0x5
#define _RXF1SIDL_SID0_POSITION                             0x5
#define _RXF1SIDL_SID0_SIZE                                 0x1
#define _RXF1SIDL_SID0_LENGTH                               0x1
#define _RXF1SIDL_SID0_MASK                                 0x20
#define _RXF1SIDL_SID1_POSN                                 0x6
#define _RXF1SIDL_SID1_POSITION                             0x6
#define _RXF1SIDL_SID1_SIZE                                 0x1
#define _RXF1SIDL_SID1_LENGTH                               0x1
#define _RXF1SIDL_SID1_MASK                                 0x40
#define _RXF1SIDL_SID2_POSN                                 0x7
#define _RXF1SIDL_SID2_POSITION                             0x7
#define _RXF1SIDL_SID2_SIZE                                 0x1
#define _RXF1SIDL_SID2_LENGTH                               0x1
#define _RXF1SIDL_SID2_MASK                                 0x80
#define _RXF1SIDL_EXIDE_POSN                                0x3
#define _RXF1SIDL_EXIDE_POSITION                            0x3
#define _RXF1SIDL_EXIDE_SIZE                                0x1
#define _RXF1SIDL_EXIDE_LENGTH                              0x1
#define _RXF1SIDL_EXIDE_MASK                                0x8
#define _RXF1SIDL_RXF1EID16_POSN                            0x0
#define _RXF1SIDL_RXF1EID16_POSITION                        0x0
#define _RXF1SIDL_RXF1EID16_SIZE                            0x1
#define _RXF1SIDL_RXF1EID16_LENGTH                          0x1
#define _RXF1SIDL_RXF1EID16_MASK                            0x1
#define _RXF1SIDL_RXF1EID17_POSN                            0x1
#define _RXF1SIDL_RXF1EID17_POSITION                        0x1
#define _RXF1SIDL_RXF1EID17_SIZE                            0x1
#define _RXF1SIDL_RXF1EID17_LENGTH                          0x1
#define _RXF1SIDL_RXF1EID17_MASK                            0x2
#define _RXF1SIDL_RXF1EXIDEN_POSN                           0x3
#define _RXF1SIDL_RXF1EXIDEN_POSITION                       0x3
#define _RXF1SIDL_RXF1EXIDEN_SIZE                           0x1
#define _RXF1SIDL_RXF1EXIDEN_LENGTH                         0x1
#define _RXF1SIDL_RXF1EXIDEN_MASK                           0x8
#define _RXF1SIDL_RXF1SID0_POSN                             0x5
#define _RXF1SIDL_RXF1SID0_POSITION                         0x5
#define _RXF1SIDL_RXF1SID0_SIZE                             0x1
#define _RXF1SIDL_RXF1SID0_LENGTH                           0x1
#define _RXF1SIDL_RXF1SID0_MASK                             0x20
#define _RXF1SIDL_RXF1SID1_POSN                             0x6
#define _RXF1SIDL_RXF1SID1_POSITION                         0x6
#define _RXF1SIDL_RXF1SID1_SIZE                             0x1
#define _RXF1SIDL_RXF1SID1_LENGTH                           0x1
#define _RXF1SIDL_RXF1SID1_MASK                             0x40
#define _RXF1SIDL_RXF1SID2_POSN                             0x7
#define _RXF1SIDL_RXF1SID2_POSITION                         0x7
#define _RXF1SIDL_RXF1SID2_SIZE                             0x1
#define _RXF1SIDL_RXF1SID2_LENGTH                           0x1
#define _RXF1SIDL_RXF1SID2_MASK                             0x80

// Register: RXF1EIDH
#define RXF1EIDH RXF1EIDH
extern volatile unsigned char           RXF1EIDH            __at(0xF06);
#ifndef _LIB_BUILD
asm("RXF1EIDH equ 0F06h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF1EID8               :1;
        unsigned RXF1EID9               :1;
        unsigned RXF1EID10              :1;
        unsigned RXF1EID11              :1;
        unsigned RXF1EID12              :1;
        unsigned RXF1EID13              :1;
        unsigned RXF1EID14              :1;
        unsigned RXF1EID15              :1;
    };
} RXF1EIDHbits_t;
extern volatile RXF1EIDHbits_t RXF1EIDHbits __at(0xF06);
// bitfield macros
#define _RXF1EIDH_EID8_POSN                                 0x0
#define _RXF1EIDH_EID8_POSITION                             0x0
#define _RXF1EIDH_EID8_SIZE                                 0x1
#define _RXF1EIDH_EID8_LENGTH                               0x1
#define _RXF1EIDH_EID8_MASK                                 0x1
#define _RXF1EIDH_EID9_POSN                                 0x1
#define _RXF1EIDH_EID9_POSITION                             0x1
#define _RXF1EIDH_EID9_SIZE                                 0x1
#define _RXF1EIDH_EID9_LENGTH                               0x1
#define _RXF1EIDH_EID9_MASK                                 0x2
#define _RXF1EIDH_EID10_POSN                                0x2
#define _RXF1EIDH_EID10_POSITION                            0x2
#define _RXF1EIDH_EID10_SIZE                                0x1
#define _RXF1EIDH_EID10_LENGTH                              0x1
#define _RXF1EIDH_EID10_MASK                                0x4
#define _RXF1EIDH_EID11_POSN                                0x3
#define _RXF1EIDH_EID11_POSITION                            0x3
#define _RXF1EIDH_EID11_SIZE                                0x1
#define _RXF1EIDH_EID11_LENGTH                              0x1
#define _RXF1EIDH_EID11_MASK                                0x8
#define _RXF1EIDH_EID12_POSN                                0x4
#define _RXF1EIDH_EID12_POSITION                            0x4
#define _RXF1EIDH_EID12_SIZE                                0x1
#define _RXF1EIDH_EID12_LENGTH                              0x1
#define _RXF1EIDH_EID12_MASK                                0x10
#define _RXF1EIDH_EID13_POSN                                0x5
#define _RXF1EIDH_EID13_POSITION                            0x5
#define _RXF1EIDH_EID13_SIZE                                0x1
#define _RXF1EIDH_EID13_LENGTH                              0x1
#define _RXF1EIDH_EID13_MASK                                0x20
#define _RXF1EIDH_EID14_POSN                                0x6
#define _RXF1EIDH_EID14_POSITION                            0x6
#define _RXF1EIDH_EID14_SIZE                                0x1
#define _RXF1EIDH_EID14_LENGTH                              0x1
#define _RXF1EIDH_EID14_MASK                                0x40
#define _RXF1EIDH_EID15_POSN                                0x7
#define _RXF1EIDH_EID15_POSITION                            0x7
#define _RXF1EIDH_EID15_SIZE                                0x1
#define _RXF1EIDH_EID15_LENGTH                              0x1
#define _RXF1EIDH_EID15_MASK                                0x80
#define _RXF1EIDH_RXF1EID8_POSN                             0x0
#define _RXF1EIDH_RXF1EID8_POSITION                         0x0
#define _RXF1EIDH_RXF1EID8_SIZE                             0x1
#define _RXF1EIDH_RXF1EID8_LENGTH                           0x1
#define _RXF1EIDH_RXF1EID8_MASK                             0x1
#define _RXF1EIDH_RXF1EID9_POSN                             0x1
#define _RXF1EIDH_RXF1EID9_POSITION                         0x1
#define _RXF1EIDH_RXF1EID9_SIZE                             0x1
#define _RXF1EIDH_RXF1EID9_LENGTH                           0x1
#define _RXF1EIDH_RXF1EID9_MASK                             0x2
#define _RXF1EIDH_RXF1EID10_POSN                            0x2
#define _RXF1EIDH_RXF1EID10_POSITION                        0x2
#define _RXF1EIDH_RXF1EID10_SIZE                            0x1
#define _RXF1EIDH_RXF1EID10_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID10_MASK                            0x4
#define _RXF1EIDH_RXF1EID11_POSN                            0x3
#define _RXF1EIDH_RXF1EID11_POSITION                        0x3
#define _RXF1EIDH_RXF1EID11_SIZE                            0x1
#define _RXF1EIDH_RXF1EID11_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID11_MASK                            0x8
#define _RXF1EIDH_RXF1EID12_POSN                            0x4
#define _RXF1EIDH_RXF1EID12_POSITION                        0x4
#define _RXF1EIDH_RXF1EID12_SIZE                            0x1
#define _RXF1EIDH_RXF1EID12_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID12_MASK                            0x10
#define _RXF1EIDH_RXF1EID13_POSN                            0x5
#define _RXF1EIDH_RXF1EID13_POSITION                        0x5
#define _RXF1EIDH_RXF1EID13_SIZE                            0x1
#define _RXF1EIDH_RXF1EID13_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID13_MASK                            0x20
#define _RXF1EIDH_RXF1EID14_POSN                            0x6
#define _RXF1EIDH_RXF1EID14_POSITION                        0x6
#define _RXF1EIDH_RXF1EID14_SIZE                            0x1
#define _RXF1EIDH_RXF1EID14_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID14_MASK                            0x40
#define _RXF1EIDH_RXF1EID15_POSN                            0x7
#define _RXF1EIDH_RXF1EID15_POSITION                        0x7
#define _RXF1EIDH_RXF1EID15_SIZE                            0x1
#define _RXF1EIDH_RXF1EID15_LENGTH                          0x1
#define _RXF1EIDH_RXF1EID15_MASK                            0x80

// Register: RXF1EIDL
#define RXF1EIDL RXF1EIDL
extern volatile unsigned char           RXF1EIDL            __at(0xF07);
#ifndef _LIB_BUILD
asm("RXF1EIDL equ 0F07h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF1EID0               :1;
        unsigned RXF1EID1               :1;
        unsigned RXF1EID2               :1;
        unsigned RXF1EID3               :1;
        unsigned RXF1EID4               :1;
        unsigned RXF1EID5               :1;
        unsigned RXF1EID6               :1;
        unsigned RXF1EID7               :1;
    };
} RXF1EIDLbits_t;
extern volatile RXF1EIDLbits_t RXF1EIDLbits __at(0xF07);
// bitfield macros
#define _RXF1EIDL_EID0_POSN                                 0x0
#define _RXF1EIDL_EID0_POSITION                             0x0
#define _RXF1EIDL_EID0_SIZE                                 0x1
#define _RXF1EIDL_EID0_LENGTH                               0x1
#define _RXF1EIDL_EID0_MASK                                 0x1
#define _RXF1EIDL_EID1_POSN                                 0x1
#define _RXF1EIDL_EID1_POSITION                             0x1
#define _RXF1EIDL_EID1_SIZE                                 0x1
#define _RXF1EIDL_EID1_LENGTH                               0x1
#define _RXF1EIDL_EID1_MASK                                 0x2
#define _RXF1EIDL_EID2_POSN                                 0x2
#define _RXF1EIDL_EID2_POSITION                             0x2
#define _RXF1EIDL_EID2_SIZE                                 0x1
#define _RXF1EIDL_EID2_LENGTH                               0x1
#define _RXF1EIDL_EID2_MASK                                 0x4
#define _RXF1EIDL_EID3_POSN                                 0x3
#define _RXF1EIDL_EID3_POSITION                             0x3
#define _RXF1EIDL_EID3_SIZE                                 0x1
#define _RXF1EIDL_EID3_LENGTH                               0x1
#define _RXF1EIDL_EID3_MASK                                 0x8
#define _RXF1EIDL_EID4_POSN                                 0x4
#define _RXF1EIDL_EID4_POSITION                             0x4
#define _RXF1EIDL_EID4_SIZE                                 0x1
#define _RXF1EIDL_EID4_LENGTH                               0x1
#define _RXF1EIDL_EID4_MASK                                 0x10
#define _RXF1EIDL_EID5_POSN                                 0x5
#define _RXF1EIDL_EID5_POSITION                             0x5
#define _RXF1EIDL_EID5_SIZE                                 0x1
#define _RXF1EIDL_EID5_LENGTH                               0x1
#define _RXF1EIDL_EID5_MASK                                 0x20
#define _RXF1EIDL_EID6_POSN                                 0x6
#define _RXF1EIDL_EID6_POSITION                             0x6
#define _RXF1EIDL_EID6_SIZE                                 0x1
#define _RXF1EIDL_EID6_LENGTH                               0x1
#define _RXF1EIDL_EID6_MASK                                 0x40
#define _RXF1EIDL_EID7_POSN                                 0x7
#define _RXF1EIDL_EID7_POSITION                             0x7
#define _RXF1EIDL_EID7_SIZE                                 0x1
#define _RXF1EIDL_EID7_LENGTH                               0x1
#define _RXF1EIDL_EID7_MASK                                 0x80
#define _RXF1EIDL_RXF1EID0_POSN                             0x0
#define _RXF1EIDL_RXF1EID0_POSITION                         0x0
#define _RXF1EIDL_RXF1EID0_SIZE                             0x1
#define _RXF1EIDL_RXF1EID0_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID0_MASK                             0x1
#define _RXF1EIDL_RXF1EID1_POSN                             0x1
#define _RXF1EIDL_RXF1EID1_POSITION                         0x1
#define _RXF1EIDL_RXF1EID1_SIZE                             0x1
#define _RXF1EIDL_RXF1EID1_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID1_MASK                             0x2
#define _RXF1EIDL_RXF1EID2_POSN                             0x2
#define _RXF1EIDL_RXF1EID2_POSITION                         0x2
#define _RXF1EIDL_RXF1EID2_SIZE                             0x1
#define _RXF1EIDL_RXF1EID2_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID2_MASK                             0x4
#define _RXF1EIDL_RXF1EID3_POSN                             0x3
#define _RXF1EIDL_RXF1EID3_POSITION                         0x3
#define _RXF1EIDL_RXF1EID3_SIZE                             0x1
#define _RXF1EIDL_RXF1EID3_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID3_MASK                             0x8
#define _RXF1EIDL_RXF1EID4_POSN                             0x4
#define _RXF1EIDL_RXF1EID4_POSITION                         0x4
#define _RXF1EIDL_RXF1EID4_SIZE                             0x1
#define _RXF1EIDL_RXF1EID4_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID4_MASK                             0x10
#define _RXF1EIDL_RXF1EID5_POSN                             0x5
#define _RXF1EIDL_RXF1EID5_POSITION                         0x5
#define _RXF1EIDL_RXF1EID5_SIZE                             0x1
#define _RXF1EIDL_RXF1EID5_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID5_MASK                             0x20
#define _RXF1EIDL_RXF1EID6_POSN                             0x6
#define _RXF1EIDL_RXF1EID6_POSITION                         0x6
#define _RXF1EIDL_RXF1EID6_SIZE                             0x1
#define _RXF1EIDL_RXF1EID6_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID6_MASK                             0x40
#define _RXF1EIDL_RXF1EID7_POSN                             0x7
#define _RXF1EIDL_RXF1EID7_POSITION                         0x7
#define _RXF1EIDL_RXF1EID7_SIZE                             0x1
#define _RXF1EIDL_RXF1EID7_LENGTH                           0x1
#define _RXF1EIDL_RXF1EID7_MASK                             0x80

// Register: RXF2SIDH
#define RXF2SIDH RXF2SIDH
extern volatile unsigned char           RXF2SIDH            __at(0xF08);
#ifndef _LIB_BUILD
asm("RXF2SIDH equ 0F08h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF2SID3               :1;
        unsigned RXF2SID4               :1;
        unsigned RXF2SID5               :1;
        unsigned RXF2SID6               :1;
        unsigned RXF2SID7               :1;
        unsigned RXF2SID8               :1;
        unsigned RXF2SID9               :1;
        unsigned RXF2SID10              :1;
    };
} RXF2SIDHbits_t;
extern volatile RXF2SIDHbits_t RXF2SIDHbits __at(0xF08);
// bitfield macros
#define _RXF2SIDH_SID3_POSN                                 0x0
#define _RXF2SIDH_SID3_POSITION                             0x0
#define _RXF2SIDH_SID3_SIZE                                 0x1
#define _RXF2SIDH_SID3_LENGTH                               0x1
#define _RXF2SIDH_SID3_MASK                                 0x1
#define _RXF2SIDH_SID4_POSN                                 0x1
#define _RXF2SIDH_SID4_POSITION                             0x1
#define _RXF2SIDH_SID4_SIZE                                 0x1
#define _RXF2SIDH_SID4_LENGTH                               0x1
#define _RXF2SIDH_SID4_MASK                                 0x2
#define _RXF2SIDH_SID5_POSN                                 0x2
#define _RXF2SIDH_SID5_POSITION                             0x2
#define _RXF2SIDH_SID5_SIZE                                 0x1
#define _RXF2SIDH_SID5_LENGTH                               0x1
#define _RXF2SIDH_SID5_MASK                                 0x4
#define _RXF2SIDH_SID6_POSN                                 0x3
#define _RXF2SIDH_SID6_POSITION                             0x3
#define _RXF2SIDH_SID6_SIZE                                 0x1
#define _RXF2SIDH_SID6_LENGTH                               0x1
#define _RXF2SIDH_SID6_MASK                                 0x8
#define _RXF2SIDH_SID7_POSN                                 0x4
#define _RXF2SIDH_SID7_POSITION                             0x4
#define _RXF2SIDH_SID7_SIZE                                 0x1
#define _RXF2SIDH_SID7_LENGTH                               0x1
#define _RXF2SIDH_SID7_MASK                                 0x10
#define _RXF2SIDH_SID8_POSN                                 0x5
#define _RXF2SIDH_SID8_POSITION                             0x5
#define _RXF2SIDH_SID8_SIZE                                 0x1
#define _RXF2SIDH_SID8_LENGTH                               0x1
#define _RXF2SIDH_SID8_MASK                                 0x20
#define _RXF2SIDH_SID9_POSN                                 0x6
#define _RXF2SIDH_SID9_POSITION                             0x6
#define _RXF2SIDH_SID9_SIZE                                 0x1
#define _RXF2SIDH_SID9_LENGTH                               0x1
#define _RXF2SIDH_SID9_MASK                                 0x40
#define _RXF2SIDH_SID10_POSN                                0x7
#define _RXF2SIDH_SID10_POSITION                            0x7
#define _RXF2SIDH_SID10_SIZE                                0x1
#define _RXF2SIDH_SID10_LENGTH                              0x1
#define _RXF2SIDH_SID10_MASK                                0x80
#define _RXF2SIDH_RXF2SID3_POSN                             0x0
#define _RXF2SIDH_RXF2SID3_POSITION                         0x0
#define _RXF2SIDH_RXF2SID3_SIZE                             0x1
#define _RXF2SIDH_RXF2SID3_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID3_MASK                             0x1
#define _RXF2SIDH_RXF2SID4_POSN                             0x1
#define _RXF2SIDH_RXF2SID4_POSITION                         0x1
#define _RXF2SIDH_RXF2SID4_SIZE                             0x1
#define _RXF2SIDH_RXF2SID4_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID4_MASK                             0x2
#define _RXF2SIDH_RXF2SID5_POSN                             0x2
#define _RXF2SIDH_RXF2SID5_POSITION                         0x2
#define _RXF2SIDH_RXF2SID5_SIZE                             0x1
#define _RXF2SIDH_RXF2SID5_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID5_MASK                             0x4
#define _RXF2SIDH_RXF2SID6_POSN                             0x3
#define _RXF2SIDH_RXF2SID6_POSITION                         0x3
#define _RXF2SIDH_RXF2SID6_SIZE                             0x1
#define _RXF2SIDH_RXF2SID6_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID6_MASK                             0x8
#define _RXF2SIDH_RXF2SID7_POSN                             0x4
#define _RXF2SIDH_RXF2SID7_POSITION                         0x4
#define _RXF2SIDH_RXF2SID7_SIZE                             0x1
#define _RXF2SIDH_RXF2SID7_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID7_MASK                             0x10
#define _RXF2SIDH_RXF2SID8_POSN                             0x5
#define _RXF2SIDH_RXF2SID8_POSITION                         0x5
#define _RXF2SIDH_RXF2SID8_SIZE                             0x1
#define _RXF2SIDH_RXF2SID8_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID8_MASK                             0x20
#define _RXF2SIDH_RXF2SID9_POSN                             0x6
#define _RXF2SIDH_RXF2SID9_POSITION                         0x6
#define _RXF2SIDH_RXF2SID9_SIZE                             0x1
#define _RXF2SIDH_RXF2SID9_LENGTH                           0x1
#define _RXF2SIDH_RXF2SID9_MASK                             0x40
#define _RXF2SIDH_RXF2SID10_POSN                            0x7
#define _RXF2SIDH_RXF2SID10_POSITION                        0x7
#define _RXF2SIDH_RXF2SID10_SIZE                            0x1
#define _RXF2SIDH_RXF2SID10_LENGTH                          0x1
#define _RXF2SIDH_RXF2SID10_MASK                            0x80

// Register: RXF2SIDL
#define RXF2SIDL RXF2SIDL
extern volatile unsigned char           RXF2SIDL            __at(0xF09);
#ifndef _LIB_BUILD
asm("RXF2SIDL equ 0F09h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF2EID16              :1;
        unsigned RXF2EID17              :1;
        unsigned                        :1;
        unsigned RXF2EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF2SID0               :1;
        unsigned RXF2SID1               :1;
        unsigned RXF2SID2               :1;
    };
} RXF2SIDLbits_t;
extern volatile RXF2SIDLbits_t RXF2SIDLbits __at(0xF09);
// bitfield macros
#define _RXF2SIDL_EID16_POSN                                0x0
#define _RXF2SIDL_EID16_POSITION                            0x0
#define _RXF2SIDL_EID16_SIZE                                0x1
#define _RXF2SIDL_EID16_LENGTH                              0x1
#define _RXF2SIDL_EID16_MASK                                0x1
#define _RXF2SIDL_EID17_POSN                                0x1
#define _RXF2SIDL_EID17_POSITION                            0x1
#define _RXF2SIDL_EID17_SIZE                                0x1
#define _RXF2SIDL_EID17_LENGTH                              0x1
#define _RXF2SIDL_EID17_MASK                                0x2
#define _RXF2SIDL_EXIDEN_POSN                               0x3
#define _RXF2SIDL_EXIDEN_POSITION                           0x3
#define _RXF2SIDL_EXIDEN_SIZE                               0x1
#define _RXF2SIDL_EXIDEN_LENGTH                             0x1
#define _RXF2SIDL_EXIDEN_MASK                               0x8
#define _RXF2SIDL_SID0_POSN                                 0x5
#define _RXF2SIDL_SID0_POSITION                             0x5
#define _RXF2SIDL_SID0_SIZE                                 0x1
#define _RXF2SIDL_SID0_LENGTH                               0x1
#define _RXF2SIDL_SID0_MASK                                 0x20
#define _RXF2SIDL_SID1_POSN                                 0x6
#define _RXF2SIDL_SID1_POSITION                             0x6
#define _RXF2SIDL_SID1_SIZE                                 0x1
#define _RXF2SIDL_SID1_LENGTH                               0x1
#define _RXF2SIDL_SID1_MASK                                 0x40
#define _RXF2SIDL_SID2_POSN                                 0x7
#define _RXF2SIDL_SID2_POSITION                             0x7
#define _RXF2SIDL_SID2_SIZE                                 0x1
#define _RXF2SIDL_SID2_LENGTH                               0x1
#define _RXF2SIDL_SID2_MASK                                 0x80
#define _RXF2SIDL_EXIDE_POSN                                0x3
#define _RXF2SIDL_EXIDE_POSITION                            0x3
#define _RXF2SIDL_EXIDE_SIZE                                0x1
#define _RXF2SIDL_EXIDE_LENGTH                              0x1
#define _RXF2SIDL_EXIDE_MASK                                0x8
#define _RXF2SIDL_RXF2EID16_POSN                            0x0
#define _RXF2SIDL_RXF2EID16_POSITION                        0x0
#define _RXF2SIDL_RXF2EID16_SIZE                            0x1
#define _RXF2SIDL_RXF2EID16_LENGTH                          0x1
#define _RXF2SIDL_RXF2EID16_MASK                            0x1
#define _RXF2SIDL_RXF2EID17_POSN                            0x1
#define _RXF2SIDL_RXF2EID17_POSITION                        0x1
#define _RXF2SIDL_RXF2EID17_SIZE                            0x1
#define _RXF2SIDL_RXF2EID17_LENGTH                          0x1
#define _RXF2SIDL_RXF2EID17_MASK                            0x2
#define _RXF2SIDL_RXF2EXIDEN_POSN                           0x3
#define _RXF2SIDL_RXF2EXIDEN_POSITION                       0x3
#define _RXF2SIDL_RXF2EXIDEN_SIZE                           0x1
#define _RXF2SIDL_RXF2EXIDEN_LENGTH                         0x1
#define _RXF2SIDL_RXF2EXIDEN_MASK                           0x8
#define _RXF2SIDL_RXF2SID0_POSN                             0x5
#define _RXF2SIDL_RXF2SID0_POSITION                         0x5
#define _RXF2SIDL_RXF2SID0_SIZE                             0x1
#define _RXF2SIDL_RXF2SID0_LENGTH                           0x1
#define _RXF2SIDL_RXF2SID0_MASK                             0x20
#define _RXF2SIDL_RXF2SID1_POSN                             0x6
#define _RXF2SIDL_RXF2SID1_POSITION                         0x6
#define _RXF2SIDL_RXF2SID1_SIZE                             0x1
#define _RXF2SIDL_RXF2SID1_LENGTH                           0x1
#define _RXF2SIDL_RXF2SID1_MASK                             0x40
#define _RXF2SIDL_RXF2SID2_POSN                             0x7
#define _RXF2SIDL_RXF2SID2_POSITION                         0x7
#define _RXF2SIDL_RXF2SID2_SIZE                             0x1
#define _RXF2SIDL_RXF2SID2_LENGTH                           0x1
#define _RXF2SIDL_RXF2SID2_MASK                             0x80

// Register: RXF2EIDH
#define RXF2EIDH RXF2EIDH
extern volatile unsigned char           RXF2EIDH            __at(0xF0A);
#ifndef _LIB_BUILD
asm("RXF2EIDH equ 0F0Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF2EID8               :1;
        unsigned RXF2EID9               :1;
        unsigned RXF2EID10              :1;
        unsigned RXF2EID11              :1;
        unsigned RXF2EID12              :1;
        unsigned RXF2EID13              :1;
        unsigned RXF2EID14              :1;
        unsigned RXF2EID15              :1;
    };
} RXF2EIDHbits_t;
extern volatile RXF2EIDHbits_t RXF2EIDHbits __at(0xF0A);
// bitfield macros
#define _RXF2EIDH_EID8_POSN                                 0x0
#define _RXF2EIDH_EID8_POSITION                             0x0
#define _RXF2EIDH_EID8_SIZE                                 0x1
#define _RXF2EIDH_EID8_LENGTH                               0x1
#define _RXF2EIDH_EID8_MASK                                 0x1
#define _RXF2EIDH_EID9_POSN                                 0x1
#define _RXF2EIDH_EID9_POSITION                             0x1
#define _RXF2EIDH_EID9_SIZE                                 0x1
#define _RXF2EIDH_EID9_LENGTH                               0x1
#define _RXF2EIDH_EID9_MASK                                 0x2
#define _RXF2EIDH_EID10_POSN                                0x2
#define _RXF2EIDH_EID10_POSITION                            0x2
#define _RXF2EIDH_EID10_SIZE                                0x1
#define _RXF2EIDH_EID10_LENGTH                              0x1
#define _RXF2EIDH_EID10_MASK                                0x4
#define _RXF2EIDH_EID11_POSN                                0x3
#define _RXF2EIDH_EID11_POSITION                            0x3
#define _RXF2EIDH_EID11_SIZE                                0x1
#define _RXF2EIDH_EID11_LENGTH                              0x1
#define _RXF2EIDH_EID11_MASK                                0x8
#define _RXF2EIDH_EID12_POSN                                0x4
#define _RXF2EIDH_EID12_POSITION                            0x4
#define _RXF2EIDH_EID12_SIZE                                0x1
#define _RXF2EIDH_EID12_LENGTH                              0x1
#define _RXF2EIDH_EID12_MASK                                0x10
#define _RXF2EIDH_EID13_POSN                                0x5
#define _RXF2EIDH_EID13_POSITION                            0x5
#define _RXF2EIDH_EID13_SIZE                                0x1
#define _RXF2EIDH_EID13_LENGTH                              0x1
#define _RXF2EIDH_EID13_MASK                                0x20
#define _RXF2EIDH_EID14_POSN                                0x6
#define _RXF2EIDH_EID14_POSITION                            0x6
#define _RXF2EIDH_EID14_SIZE                                0x1
#define _RXF2EIDH_EID14_LENGTH                              0x1
#define _RXF2EIDH_EID14_MASK                                0x40
#define _RXF2EIDH_EID15_POSN                                0x7
#define _RXF2EIDH_EID15_POSITION                            0x7
#define _RXF2EIDH_EID15_SIZE                                0x1
#define _RXF2EIDH_EID15_LENGTH                              0x1
#define _RXF2EIDH_EID15_MASK                                0x80
#define _RXF2EIDH_RXF2EID8_POSN                             0x0
#define _RXF2EIDH_RXF2EID8_POSITION                         0x0
#define _RXF2EIDH_RXF2EID8_SIZE                             0x1
#define _RXF2EIDH_RXF2EID8_LENGTH                           0x1
#define _RXF2EIDH_RXF2EID8_MASK                             0x1
#define _RXF2EIDH_RXF2EID9_POSN                             0x1
#define _RXF2EIDH_RXF2EID9_POSITION                         0x1
#define _RXF2EIDH_RXF2EID9_SIZE                             0x1
#define _RXF2EIDH_RXF2EID9_LENGTH                           0x1
#define _RXF2EIDH_RXF2EID9_MASK                             0x2
#define _RXF2EIDH_RXF2EID10_POSN                            0x2
#define _RXF2EIDH_RXF2EID10_POSITION                        0x2
#define _RXF2EIDH_RXF2EID10_SIZE                            0x1
#define _RXF2EIDH_RXF2EID10_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID10_MASK                            0x4
#define _RXF2EIDH_RXF2EID11_POSN                            0x3
#define _RXF2EIDH_RXF2EID11_POSITION                        0x3
#define _RXF2EIDH_RXF2EID11_SIZE                            0x1
#define _RXF2EIDH_RXF2EID11_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID11_MASK                            0x8
#define _RXF2EIDH_RXF2EID12_POSN                            0x4
#define _RXF2EIDH_RXF2EID12_POSITION                        0x4
#define _RXF2EIDH_RXF2EID12_SIZE                            0x1
#define _RXF2EIDH_RXF2EID12_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID12_MASK                            0x10
#define _RXF2EIDH_RXF2EID13_POSN                            0x5
#define _RXF2EIDH_RXF2EID13_POSITION                        0x5
#define _RXF2EIDH_RXF2EID13_SIZE                            0x1
#define _RXF2EIDH_RXF2EID13_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID13_MASK                            0x20
#define _RXF2EIDH_RXF2EID14_POSN                            0x6
#define _RXF2EIDH_RXF2EID14_POSITION                        0x6
#define _RXF2EIDH_RXF2EID14_SIZE                            0x1
#define _RXF2EIDH_RXF2EID14_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID14_MASK                            0x40
#define _RXF2EIDH_RXF2EID15_POSN                            0x7
#define _RXF2EIDH_RXF2EID15_POSITION                        0x7
#define _RXF2EIDH_RXF2EID15_SIZE                            0x1
#define _RXF2EIDH_RXF2EID15_LENGTH                          0x1
#define _RXF2EIDH_RXF2EID15_MASK                            0x80

// Register: RXF2EIDL
#define RXF2EIDL RXF2EIDL
extern volatile unsigned char           RXF2EIDL            __at(0xF0B);
#ifndef _LIB_BUILD
asm("RXF2EIDL equ 0F0Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF2EID0               :1;
        unsigned RXF2EID1               :1;
        unsigned RXF2EID2               :1;
        unsigned RXF2EID3               :1;
        unsigned RXF2EID4               :1;
        unsigned RXF2EID5               :1;
        unsigned RXF2EID6               :1;
        unsigned RXF2EID7               :1;
    };
} RXF2EIDLbits_t;
extern volatile RXF2EIDLbits_t RXF2EIDLbits __at(0xF0B);
// bitfield macros
#define _RXF2EIDL_EID0_POSN                                 0x0
#define _RXF2EIDL_EID0_POSITION                             0x0
#define _RXF2EIDL_EID0_SIZE                                 0x1
#define _RXF2EIDL_EID0_LENGTH                               0x1
#define _RXF2EIDL_EID0_MASK                                 0x1
#define _RXF2EIDL_EID1_POSN                                 0x1
#define _RXF2EIDL_EID1_POSITION                             0x1
#define _RXF2EIDL_EID1_SIZE                                 0x1
#define _RXF2EIDL_EID1_LENGTH                               0x1
#define _RXF2EIDL_EID1_MASK                                 0x2
#define _RXF2EIDL_EID2_POSN                                 0x2
#define _RXF2EIDL_EID2_POSITION                             0x2
#define _RXF2EIDL_EID2_SIZE                                 0x1
#define _RXF2EIDL_EID2_LENGTH                               0x1
#define _RXF2EIDL_EID2_MASK                                 0x4
#define _RXF2EIDL_EID3_POSN                                 0x3
#define _RXF2EIDL_EID3_POSITION                             0x3
#define _RXF2EIDL_EID3_SIZE                                 0x1
#define _RXF2EIDL_EID3_LENGTH                               0x1
#define _RXF2EIDL_EID3_MASK                                 0x8
#define _RXF2EIDL_EID4_POSN                                 0x4
#define _RXF2EIDL_EID4_POSITION                             0x4
#define _RXF2EIDL_EID4_SIZE                                 0x1
#define _RXF2EIDL_EID4_LENGTH                               0x1
#define _RXF2EIDL_EID4_MASK                                 0x10
#define _RXF2EIDL_EID5_POSN                                 0x5
#define _RXF2EIDL_EID5_POSITION                             0x5
#define _RXF2EIDL_EID5_SIZE                                 0x1
#define _RXF2EIDL_EID5_LENGTH                               0x1
#define _RXF2EIDL_EID5_MASK                                 0x20
#define _RXF2EIDL_EID6_POSN                                 0x6
#define _RXF2EIDL_EID6_POSITION                             0x6
#define _RXF2EIDL_EID6_SIZE                                 0x1
#define _RXF2EIDL_EID6_LENGTH                               0x1
#define _RXF2EIDL_EID6_MASK                                 0x40
#define _RXF2EIDL_EID7_POSN                                 0x7
#define _RXF2EIDL_EID7_POSITION                             0x7
#define _RXF2EIDL_EID7_SIZE                                 0x1
#define _RXF2EIDL_EID7_LENGTH                               0x1
#define _RXF2EIDL_EID7_MASK                                 0x80
#define _RXF2EIDL_RXF2EID0_POSN                             0x0
#define _RXF2EIDL_RXF2EID0_POSITION                         0x0
#define _RXF2EIDL_RXF2EID0_SIZE                             0x1
#define _RXF2EIDL_RXF2EID0_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID0_MASK                             0x1
#define _RXF2EIDL_RXF2EID1_POSN                             0x1
#define _RXF2EIDL_RXF2EID1_POSITION                         0x1
#define _RXF2EIDL_RXF2EID1_SIZE                             0x1
#define _RXF2EIDL_RXF2EID1_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID1_MASK                             0x2
#define _RXF2EIDL_RXF2EID2_POSN                             0x2
#define _RXF2EIDL_RXF2EID2_POSITION                         0x2
#define _RXF2EIDL_RXF2EID2_SIZE                             0x1
#define _RXF2EIDL_RXF2EID2_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID2_MASK                             0x4
#define _RXF2EIDL_RXF2EID3_POSN                             0x3
#define _RXF2EIDL_RXF2EID3_POSITION                         0x3
#define _RXF2EIDL_RXF2EID3_SIZE                             0x1
#define _RXF2EIDL_RXF2EID3_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID3_MASK                             0x8
#define _RXF2EIDL_RXF2EID4_POSN                             0x4
#define _RXF2EIDL_RXF2EID4_POSITION                         0x4
#define _RXF2EIDL_RXF2EID4_SIZE                             0x1
#define _RXF2EIDL_RXF2EID4_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID4_MASK                             0x10
#define _RXF2EIDL_RXF2EID5_POSN                             0x5
#define _RXF2EIDL_RXF2EID5_POSITION                         0x5
#define _RXF2EIDL_RXF2EID5_SIZE                             0x1
#define _RXF2EIDL_RXF2EID5_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID5_MASK                             0x20
#define _RXF2EIDL_RXF2EID6_POSN                             0x6
#define _RXF2EIDL_RXF2EID6_POSITION                         0x6
#define _RXF2EIDL_RXF2EID6_SIZE                             0x1
#define _RXF2EIDL_RXF2EID6_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID6_MASK                             0x40
#define _RXF2EIDL_RXF2EID7_POSN                             0x7
#define _RXF2EIDL_RXF2EID7_POSITION                         0x7
#define _RXF2EIDL_RXF2EID7_SIZE                             0x1
#define _RXF2EIDL_RXF2EID7_LENGTH                           0x1
#define _RXF2EIDL_RXF2EID7_MASK                             0x80

// Register: RXF3SIDH
#define RXF3SIDH RXF3SIDH
extern volatile unsigned char           RXF3SIDH            __at(0xF0C);
#ifndef _LIB_BUILD
asm("RXF3SIDH equ 0F0Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF3SID3               :1;
        unsigned RXF3SID4               :1;
        unsigned RXF3SID5               :1;
        unsigned RXF3SID6               :1;
        unsigned RXF3SID7               :1;
        unsigned RXF3SID8               :1;
        unsigned RXF3SID9               :1;
        unsigned RXF3SID10              :1;
    };
} RXF3SIDHbits_t;
extern volatile RXF3SIDHbits_t RXF3SIDHbits __at(0xF0C);
// bitfield macros
#define _RXF3SIDH_SID3_POSN                                 0x0
#define _RXF3SIDH_SID3_POSITION                             0x0
#define _RXF3SIDH_SID3_SIZE                                 0x1
#define _RXF3SIDH_SID3_LENGTH                               0x1
#define _RXF3SIDH_SID3_MASK                                 0x1
#define _RXF3SIDH_SID4_POSN                                 0x1
#define _RXF3SIDH_SID4_POSITION                             0x1
#define _RXF3SIDH_SID4_SIZE                                 0x1
#define _RXF3SIDH_SID4_LENGTH                               0x1
#define _RXF3SIDH_SID4_MASK                                 0x2
#define _RXF3SIDH_SID5_POSN                                 0x2
#define _RXF3SIDH_SID5_POSITION                             0x2
#define _RXF3SIDH_SID5_SIZE                                 0x1
#define _RXF3SIDH_SID5_LENGTH                               0x1
#define _RXF3SIDH_SID5_MASK                                 0x4
#define _RXF3SIDH_SID6_POSN                                 0x3
#define _RXF3SIDH_SID6_POSITION                             0x3
#define _RXF3SIDH_SID6_SIZE                                 0x1
#define _RXF3SIDH_SID6_LENGTH                               0x1
#define _RXF3SIDH_SID6_MASK                                 0x8
#define _RXF3SIDH_SID7_POSN                                 0x4
#define _RXF3SIDH_SID7_POSITION                             0x4
#define _RXF3SIDH_SID7_SIZE                                 0x1
#define _RXF3SIDH_SID7_LENGTH                               0x1
#define _RXF3SIDH_SID7_MASK                                 0x10
#define _RXF3SIDH_SID8_POSN                                 0x5
#define _RXF3SIDH_SID8_POSITION                             0x5
#define _RXF3SIDH_SID8_SIZE                                 0x1
#define _RXF3SIDH_SID8_LENGTH                               0x1
#define _RXF3SIDH_SID8_MASK                                 0x20
#define _RXF3SIDH_SID9_POSN                                 0x6
#define _RXF3SIDH_SID9_POSITION                             0x6
#define _RXF3SIDH_SID9_SIZE                                 0x1
#define _RXF3SIDH_SID9_LENGTH                               0x1
#define _RXF3SIDH_SID9_MASK                                 0x40
#define _RXF3SIDH_SID10_POSN                                0x7
#define _RXF3SIDH_SID10_POSITION                            0x7
#define _RXF3SIDH_SID10_SIZE                                0x1
#define _RXF3SIDH_SID10_LENGTH                              0x1
#define _RXF3SIDH_SID10_MASK                                0x80
#define _RXF3SIDH_RXF3SID3_POSN                             0x0
#define _RXF3SIDH_RXF3SID3_POSITION                         0x0
#define _RXF3SIDH_RXF3SID3_SIZE                             0x1
#define _RXF3SIDH_RXF3SID3_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID3_MASK                             0x1
#define _RXF3SIDH_RXF3SID4_POSN                             0x1
#define _RXF3SIDH_RXF3SID4_POSITION                         0x1
#define _RXF3SIDH_RXF3SID4_SIZE                             0x1
#define _RXF3SIDH_RXF3SID4_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID4_MASK                             0x2
#define _RXF3SIDH_RXF3SID5_POSN                             0x2
#define _RXF3SIDH_RXF3SID5_POSITION                         0x2
#define _RXF3SIDH_RXF3SID5_SIZE                             0x1
#define _RXF3SIDH_RXF3SID5_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID5_MASK                             0x4
#define _RXF3SIDH_RXF3SID6_POSN                             0x3
#define _RXF3SIDH_RXF3SID6_POSITION                         0x3
#define _RXF3SIDH_RXF3SID6_SIZE                             0x1
#define _RXF3SIDH_RXF3SID6_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID6_MASK                             0x8
#define _RXF3SIDH_RXF3SID7_POSN                             0x4
#define _RXF3SIDH_RXF3SID7_POSITION                         0x4
#define _RXF3SIDH_RXF3SID7_SIZE                             0x1
#define _RXF3SIDH_RXF3SID7_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID7_MASK                             0x10
#define _RXF3SIDH_RXF3SID8_POSN                             0x5
#define _RXF3SIDH_RXF3SID8_POSITION                         0x5
#define _RXF3SIDH_RXF3SID8_SIZE                             0x1
#define _RXF3SIDH_RXF3SID8_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID8_MASK                             0x20
#define _RXF3SIDH_RXF3SID9_POSN                             0x6
#define _RXF3SIDH_RXF3SID9_POSITION                         0x6
#define _RXF3SIDH_RXF3SID9_SIZE                             0x1
#define _RXF3SIDH_RXF3SID9_LENGTH                           0x1
#define _RXF3SIDH_RXF3SID9_MASK                             0x40
#define _RXF3SIDH_RXF3SID10_POSN                            0x7
#define _RXF3SIDH_RXF3SID10_POSITION                        0x7
#define _RXF3SIDH_RXF3SID10_SIZE                            0x1
#define _RXF3SIDH_RXF3SID10_LENGTH                          0x1
#define _RXF3SIDH_RXF3SID10_MASK                            0x80

// Register: RXF3SIDL
#define RXF3SIDL RXF3SIDL
extern volatile unsigned char           RXF3SIDL            __at(0xF0D);
#ifndef _LIB_BUILD
asm("RXF3SIDL equ 0F0Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF3EID16              :1;
        unsigned RXF3EID17              :1;
        unsigned                        :1;
        unsigned RXF3EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF3SID0               :1;
        unsigned RXF3SID1               :1;
        unsigned RXF3SID2               :1;
    };
} RXF3SIDLbits_t;
extern volatile RXF3SIDLbits_t RXF3SIDLbits __at(0xF0D);
// bitfield macros
#define _RXF3SIDL_EID16_POSN                                0x0
#define _RXF3SIDL_EID16_POSITION                            0x0
#define _RXF3SIDL_EID16_SIZE                                0x1
#define _RXF3SIDL_EID16_LENGTH                              0x1
#define _RXF3SIDL_EID16_MASK                                0x1
#define _RXF3SIDL_EID17_POSN                                0x1
#define _RXF3SIDL_EID17_POSITION                            0x1
#define _RXF3SIDL_EID17_SIZE                                0x1
#define _RXF3SIDL_EID17_LENGTH                              0x1
#define _RXF3SIDL_EID17_MASK                                0x2
#define _RXF3SIDL_EXIDEN_POSN                               0x3
#define _RXF3SIDL_EXIDEN_POSITION                           0x3
#define _RXF3SIDL_EXIDEN_SIZE                               0x1
#define _RXF3SIDL_EXIDEN_LENGTH                             0x1
#define _RXF3SIDL_EXIDEN_MASK                               0x8
#define _RXF3SIDL_SID0_POSN                                 0x5
#define _RXF3SIDL_SID0_POSITION                             0x5
#define _RXF3SIDL_SID0_SIZE                                 0x1
#define _RXF3SIDL_SID0_LENGTH                               0x1
#define _RXF3SIDL_SID0_MASK                                 0x20
#define _RXF3SIDL_SID1_POSN                                 0x6
#define _RXF3SIDL_SID1_POSITION                             0x6
#define _RXF3SIDL_SID1_SIZE                                 0x1
#define _RXF3SIDL_SID1_LENGTH                               0x1
#define _RXF3SIDL_SID1_MASK                                 0x40
#define _RXF3SIDL_SID2_POSN                                 0x7
#define _RXF3SIDL_SID2_POSITION                             0x7
#define _RXF3SIDL_SID2_SIZE                                 0x1
#define _RXF3SIDL_SID2_LENGTH                               0x1
#define _RXF3SIDL_SID2_MASK                                 0x80
#define _RXF3SIDL_EXIDE_POSN                                0x3
#define _RXF3SIDL_EXIDE_POSITION                            0x3
#define _RXF3SIDL_EXIDE_SIZE                                0x1
#define _RXF3SIDL_EXIDE_LENGTH                              0x1
#define _RXF3SIDL_EXIDE_MASK                                0x8
#define _RXF3SIDL_RXF3EID16_POSN                            0x0
#define _RXF3SIDL_RXF3EID16_POSITION                        0x0
#define _RXF3SIDL_RXF3EID16_SIZE                            0x1
#define _RXF3SIDL_RXF3EID16_LENGTH                          0x1
#define _RXF3SIDL_RXF3EID16_MASK                            0x1
#define _RXF3SIDL_RXF3EID17_POSN                            0x1
#define _RXF3SIDL_RXF3EID17_POSITION                        0x1
#define _RXF3SIDL_RXF3EID17_SIZE                            0x1
#define _RXF3SIDL_RXF3EID17_LENGTH                          0x1
#define _RXF3SIDL_RXF3EID17_MASK                            0x2
#define _RXF3SIDL_RXF3EXIDEN_POSN                           0x3
#define _RXF3SIDL_RXF3EXIDEN_POSITION                       0x3
#define _RXF3SIDL_RXF3EXIDEN_SIZE                           0x1
#define _RXF3SIDL_RXF3EXIDEN_LENGTH                         0x1
#define _RXF3SIDL_RXF3EXIDEN_MASK                           0x8
#define _RXF3SIDL_RXF3SID0_POSN                             0x5
#define _RXF3SIDL_RXF3SID0_POSITION                         0x5
#define _RXF3SIDL_RXF3SID0_SIZE                             0x1
#define _RXF3SIDL_RXF3SID0_LENGTH                           0x1
#define _RXF3SIDL_RXF3SID0_MASK                             0x20
#define _RXF3SIDL_RXF3SID1_POSN                             0x6
#define _RXF3SIDL_RXF3SID1_POSITION                         0x6
#define _RXF3SIDL_RXF3SID1_SIZE                             0x1
#define _RXF3SIDL_RXF3SID1_LENGTH                           0x1
#define _RXF3SIDL_RXF3SID1_MASK                             0x40
#define _RXF3SIDL_RXF3SID2_POSN                             0x7
#define _RXF3SIDL_RXF3SID2_POSITION                         0x7
#define _RXF3SIDL_RXF3SID2_SIZE                             0x1
#define _RXF3SIDL_RXF3SID2_LENGTH                           0x1
#define _RXF3SIDL_RXF3SID2_MASK                             0x80

// Register: RXF3EIDH
#define RXF3EIDH RXF3EIDH
extern volatile unsigned char           RXF3EIDH            __at(0xF0E);
#ifndef _LIB_BUILD
asm("RXF3EIDH equ 0F0Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF3EID8               :1;
        unsigned RXF3EID9               :1;
        unsigned RXF3EID10              :1;
        unsigned RXF3EID11              :1;
        unsigned RXF3EID12              :1;
        unsigned RXF3EID13              :1;
        unsigned RXF3EID14              :1;
        unsigned RXF3EID15              :1;
    };
} RXF3EIDHbits_t;
extern volatile RXF3EIDHbits_t RXF3EIDHbits __at(0xF0E);
// bitfield macros
#define _RXF3EIDH_EID8_POSN                                 0x0
#define _RXF3EIDH_EID8_POSITION                             0x0
#define _RXF3EIDH_EID8_SIZE                                 0x1
#define _RXF3EIDH_EID8_LENGTH                               0x1
#define _RXF3EIDH_EID8_MASK                                 0x1
#define _RXF3EIDH_EID9_POSN                                 0x1
#define _RXF3EIDH_EID9_POSITION                             0x1
#define _RXF3EIDH_EID9_SIZE                                 0x1
#define _RXF3EIDH_EID9_LENGTH                               0x1
#define _RXF3EIDH_EID9_MASK                                 0x2
#define _RXF3EIDH_EID10_POSN                                0x2
#define _RXF3EIDH_EID10_POSITION                            0x2
#define _RXF3EIDH_EID10_SIZE                                0x1
#define _RXF3EIDH_EID10_LENGTH                              0x1
#define _RXF3EIDH_EID10_MASK                                0x4
#define _RXF3EIDH_EID11_POSN                                0x3
#define _RXF3EIDH_EID11_POSITION                            0x3
#define _RXF3EIDH_EID11_SIZE                                0x1
#define _RXF3EIDH_EID11_LENGTH                              0x1
#define _RXF3EIDH_EID11_MASK                                0x8
#define _RXF3EIDH_EID12_POSN                                0x4
#define _RXF3EIDH_EID12_POSITION                            0x4
#define _RXF3EIDH_EID12_SIZE                                0x1
#define _RXF3EIDH_EID12_LENGTH                              0x1
#define _RXF3EIDH_EID12_MASK                                0x10
#define _RXF3EIDH_EID13_POSN                                0x5
#define _RXF3EIDH_EID13_POSITION                            0x5
#define _RXF3EIDH_EID13_SIZE                                0x1
#define _RXF3EIDH_EID13_LENGTH                              0x1
#define _RXF3EIDH_EID13_MASK                                0x20
#define _RXF3EIDH_EID14_POSN                                0x6
#define _RXF3EIDH_EID14_POSITION                            0x6
#define _RXF3EIDH_EID14_SIZE                                0x1
#define _RXF3EIDH_EID14_LENGTH                              0x1
#define _RXF3EIDH_EID14_MASK                                0x40
#define _RXF3EIDH_EID15_POSN                                0x7
#define _RXF3EIDH_EID15_POSITION                            0x7
#define _RXF3EIDH_EID15_SIZE                                0x1
#define _RXF3EIDH_EID15_LENGTH                              0x1
#define _RXF3EIDH_EID15_MASK                                0x80
#define _RXF3EIDH_RXF3EID8_POSN                             0x0
#define _RXF3EIDH_RXF3EID8_POSITION                         0x0
#define _RXF3EIDH_RXF3EID8_SIZE                             0x1
#define _RXF3EIDH_RXF3EID8_LENGTH                           0x1
#define _RXF3EIDH_RXF3EID8_MASK                             0x1
#define _RXF3EIDH_RXF3EID9_POSN                             0x1
#define _RXF3EIDH_RXF3EID9_POSITION                         0x1
#define _RXF3EIDH_RXF3EID9_SIZE                             0x1
#define _RXF3EIDH_RXF3EID9_LENGTH                           0x1
#define _RXF3EIDH_RXF3EID9_MASK                             0x2
#define _RXF3EIDH_RXF3EID10_POSN                            0x2
#define _RXF3EIDH_RXF3EID10_POSITION                        0x2
#define _RXF3EIDH_RXF3EID10_SIZE                            0x1
#define _RXF3EIDH_RXF3EID10_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID10_MASK                            0x4
#define _RXF3EIDH_RXF3EID11_POSN                            0x3
#define _RXF3EIDH_RXF3EID11_POSITION                        0x3
#define _RXF3EIDH_RXF3EID11_SIZE                            0x1
#define _RXF3EIDH_RXF3EID11_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID11_MASK                            0x8
#define _RXF3EIDH_RXF3EID12_POSN                            0x4
#define _RXF3EIDH_RXF3EID12_POSITION                        0x4
#define _RXF3EIDH_RXF3EID12_SIZE                            0x1
#define _RXF3EIDH_RXF3EID12_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID12_MASK                            0x10
#define _RXF3EIDH_RXF3EID13_POSN                            0x5
#define _RXF3EIDH_RXF3EID13_POSITION                        0x5
#define _RXF3EIDH_RXF3EID13_SIZE                            0x1
#define _RXF3EIDH_RXF3EID13_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID13_MASK                            0x20
#define _RXF3EIDH_RXF3EID14_POSN                            0x6
#define _RXF3EIDH_RXF3EID14_POSITION                        0x6
#define _RXF3EIDH_RXF3EID14_SIZE                            0x1
#define _RXF3EIDH_RXF3EID14_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID14_MASK                            0x40
#define _RXF3EIDH_RXF3EID15_POSN                            0x7
#define _RXF3EIDH_RXF3EID15_POSITION                        0x7
#define _RXF3EIDH_RXF3EID15_SIZE                            0x1
#define _RXF3EIDH_RXF3EID15_LENGTH                          0x1
#define _RXF3EIDH_RXF3EID15_MASK                            0x80

// Register: RXF3EIDL
#define RXF3EIDL RXF3EIDL
extern volatile unsigned char           RXF3EIDL            __at(0xF0F);
#ifndef _LIB_BUILD
asm("RXF3EIDL equ 0F0Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF3EID0               :1;
        unsigned RXF3EID1               :1;
        unsigned RXF3EID2               :1;
        unsigned RXF3EID3               :1;
        unsigned RXF3EID4               :1;
        unsigned RXF3EID5               :1;
        unsigned RXF3EID6               :1;
        unsigned RXF3EID7               :1;
    };
} RXF3EIDLbits_t;
extern volatile RXF3EIDLbits_t RXF3EIDLbits __at(0xF0F);
// bitfield macros
#define _RXF3EIDL_EID0_POSN                                 0x0
#define _RXF3EIDL_EID0_POSITION                             0x0
#define _RXF3EIDL_EID0_SIZE                                 0x1
#define _RXF3EIDL_EID0_LENGTH                               0x1
#define _RXF3EIDL_EID0_MASK                                 0x1
#define _RXF3EIDL_EID1_POSN                                 0x1
#define _RXF3EIDL_EID1_POSITION                             0x1
#define _RXF3EIDL_EID1_SIZE                                 0x1
#define _RXF3EIDL_EID1_LENGTH                               0x1
#define _RXF3EIDL_EID1_MASK                                 0x2
#define _RXF3EIDL_EID2_POSN                                 0x2
#define _RXF3EIDL_EID2_POSITION                             0x2
#define _RXF3EIDL_EID2_SIZE                                 0x1
#define _RXF3EIDL_EID2_LENGTH                               0x1
#define _RXF3EIDL_EID2_MASK                                 0x4
#define _RXF3EIDL_EID3_POSN                                 0x3
#define _RXF3EIDL_EID3_POSITION                             0x3
#define _RXF3EIDL_EID3_SIZE                                 0x1
#define _RXF3EIDL_EID3_LENGTH                               0x1
#define _RXF3EIDL_EID3_MASK                                 0x8
#define _RXF3EIDL_EID4_POSN                                 0x4
#define _RXF3EIDL_EID4_POSITION                             0x4
#define _RXF3EIDL_EID4_SIZE                                 0x1
#define _RXF3EIDL_EID4_LENGTH                               0x1
#define _RXF3EIDL_EID4_MASK                                 0x10
#define _RXF3EIDL_EID5_POSN                                 0x5
#define _RXF3EIDL_EID5_POSITION                             0x5
#define _RXF3EIDL_EID5_SIZE                                 0x1
#define _RXF3EIDL_EID5_LENGTH                               0x1
#define _RXF3EIDL_EID5_MASK                                 0x20
#define _RXF3EIDL_EID6_POSN                                 0x6
#define _RXF3EIDL_EID6_POSITION                             0x6
#define _RXF3EIDL_EID6_SIZE                                 0x1
#define _RXF3EIDL_EID6_LENGTH                               0x1
#define _RXF3EIDL_EID6_MASK                                 0x40
#define _RXF3EIDL_EID7_POSN                                 0x7
#define _RXF3EIDL_EID7_POSITION                             0x7
#define _RXF3EIDL_EID7_SIZE                                 0x1
#define _RXF3EIDL_EID7_LENGTH                               0x1
#define _RXF3EIDL_EID7_MASK                                 0x80
#define _RXF3EIDL_RXF3EID0_POSN                             0x0
#define _RXF3EIDL_RXF3EID0_POSITION                         0x0
#define _RXF3EIDL_RXF3EID0_SIZE                             0x1
#define _RXF3EIDL_RXF3EID0_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID0_MASK                             0x1
#define _RXF3EIDL_RXF3EID1_POSN                             0x1
#define _RXF3EIDL_RXF3EID1_POSITION                         0x1
#define _RXF3EIDL_RXF3EID1_SIZE                             0x1
#define _RXF3EIDL_RXF3EID1_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID1_MASK                             0x2
#define _RXF3EIDL_RXF3EID2_POSN                             0x2
#define _RXF3EIDL_RXF3EID2_POSITION                         0x2
#define _RXF3EIDL_RXF3EID2_SIZE                             0x1
#define _RXF3EIDL_RXF3EID2_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID2_MASK                             0x4
#define _RXF3EIDL_RXF3EID3_POSN                             0x3
#define _RXF3EIDL_RXF3EID3_POSITION                         0x3
#define _RXF3EIDL_RXF3EID3_SIZE                             0x1
#define _RXF3EIDL_RXF3EID3_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID3_MASK                             0x8
#define _RXF3EIDL_RXF3EID4_POSN                             0x4
#define _RXF3EIDL_RXF3EID4_POSITION                         0x4
#define _RXF3EIDL_RXF3EID4_SIZE                             0x1
#define _RXF3EIDL_RXF3EID4_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID4_MASK                             0x10
#define _RXF3EIDL_RXF3EID5_POSN                             0x5
#define _RXF3EIDL_RXF3EID5_POSITION                         0x5
#define _RXF3EIDL_RXF3EID5_SIZE                             0x1
#define _RXF3EIDL_RXF3EID5_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID5_MASK                             0x20
#define _RXF3EIDL_RXF3EID6_POSN                             0x6
#define _RXF3EIDL_RXF3EID6_POSITION                         0x6
#define _RXF3EIDL_RXF3EID6_SIZE                             0x1
#define _RXF3EIDL_RXF3EID6_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID6_MASK                             0x40
#define _RXF3EIDL_RXF3EID7_POSN                             0x7
#define _RXF3EIDL_RXF3EID7_POSITION                         0x7
#define _RXF3EIDL_RXF3EID7_SIZE                             0x1
#define _RXF3EIDL_RXF3EID7_LENGTH                           0x1
#define _RXF3EIDL_RXF3EID7_MASK                             0x80

// Register: RXF4SIDH
#define RXF4SIDH RXF4SIDH
extern volatile unsigned char           RXF4SIDH            __at(0xF10);
#ifndef _LIB_BUILD
asm("RXF4SIDH equ 0F10h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF4SID3               :1;
        unsigned RXF4SID4               :1;
        unsigned RXF4SID5               :1;
        unsigned RXF4SID6               :1;
        unsigned RXF4SID7               :1;
        unsigned RXF4SID8               :1;
        unsigned RXF4SID9               :1;
        unsigned RXF4SID10              :1;
    };
} RXF4SIDHbits_t;
extern volatile RXF4SIDHbits_t RXF4SIDHbits __at(0xF10);
// bitfield macros
#define _RXF4SIDH_SID3_POSN                                 0x0
#define _RXF4SIDH_SID3_POSITION                             0x0
#define _RXF4SIDH_SID3_SIZE                                 0x1
#define _RXF4SIDH_SID3_LENGTH                               0x1
#define _RXF4SIDH_SID3_MASK                                 0x1
#define _RXF4SIDH_SID4_POSN                                 0x1
#define _RXF4SIDH_SID4_POSITION                             0x1
#define _RXF4SIDH_SID4_SIZE                                 0x1
#define _RXF4SIDH_SID4_LENGTH                               0x1
#define _RXF4SIDH_SID4_MASK                                 0x2
#define _RXF4SIDH_SID5_POSN                                 0x2
#define _RXF4SIDH_SID5_POSITION                             0x2
#define _RXF4SIDH_SID5_SIZE                                 0x1
#define _RXF4SIDH_SID5_LENGTH                               0x1
#define _RXF4SIDH_SID5_MASK                                 0x4
#define _RXF4SIDH_SID6_POSN                                 0x3
#define _RXF4SIDH_SID6_POSITION                             0x3
#define _RXF4SIDH_SID6_SIZE                                 0x1
#define _RXF4SIDH_SID6_LENGTH                               0x1
#define _RXF4SIDH_SID6_MASK                                 0x8
#define _RXF4SIDH_SID7_POSN                                 0x4
#define _RXF4SIDH_SID7_POSITION                             0x4
#define _RXF4SIDH_SID7_SIZE                                 0x1
#define _RXF4SIDH_SID7_LENGTH                               0x1
#define _RXF4SIDH_SID7_MASK                                 0x10
#define _RXF4SIDH_SID8_POSN                                 0x5
#define _RXF4SIDH_SID8_POSITION                             0x5
#define _RXF4SIDH_SID8_SIZE                                 0x1
#define _RXF4SIDH_SID8_LENGTH                               0x1
#define _RXF4SIDH_SID8_MASK                                 0x20
#define _RXF4SIDH_SID9_POSN                                 0x6
#define _RXF4SIDH_SID9_POSITION                             0x6
#define _RXF4SIDH_SID9_SIZE                                 0x1
#define _RXF4SIDH_SID9_LENGTH                               0x1
#define _RXF4SIDH_SID9_MASK                                 0x40
#define _RXF4SIDH_SID10_POSN                                0x7
#define _RXF4SIDH_SID10_POSITION                            0x7
#define _RXF4SIDH_SID10_SIZE                                0x1
#define _RXF4SIDH_SID10_LENGTH                              0x1
#define _RXF4SIDH_SID10_MASK                                0x80
#define _RXF4SIDH_RXF4SID3_POSN                             0x0
#define _RXF4SIDH_RXF4SID3_POSITION                         0x0
#define _RXF4SIDH_RXF4SID3_SIZE                             0x1
#define _RXF4SIDH_RXF4SID3_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID3_MASK                             0x1
#define _RXF4SIDH_RXF4SID4_POSN                             0x1
#define _RXF4SIDH_RXF4SID4_POSITION                         0x1
#define _RXF4SIDH_RXF4SID4_SIZE                             0x1
#define _RXF4SIDH_RXF4SID4_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID4_MASK                             0x2
#define _RXF4SIDH_RXF4SID5_POSN                             0x2
#define _RXF4SIDH_RXF4SID5_POSITION                         0x2
#define _RXF4SIDH_RXF4SID5_SIZE                             0x1
#define _RXF4SIDH_RXF4SID5_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID5_MASK                             0x4
#define _RXF4SIDH_RXF4SID6_POSN                             0x3
#define _RXF4SIDH_RXF4SID6_POSITION                         0x3
#define _RXF4SIDH_RXF4SID6_SIZE                             0x1
#define _RXF4SIDH_RXF4SID6_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID6_MASK                             0x8
#define _RXF4SIDH_RXF4SID7_POSN                             0x4
#define _RXF4SIDH_RXF4SID7_POSITION                         0x4
#define _RXF4SIDH_RXF4SID7_SIZE                             0x1
#define _RXF4SIDH_RXF4SID7_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID7_MASK                             0x10
#define _RXF4SIDH_RXF4SID8_POSN                             0x5
#define _RXF4SIDH_RXF4SID8_POSITION                         0x5
#define _RXF4SIDH_RXF4SID8_SIZE                             0x1
#define _RXF4SIDH_RXF4SID8_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID8_MASK                             0x20
#define _RXF4SIDH_RXF4SID9_POSN                             0x6
#define _RXF4SIDH_RXF4SID9_POSITION                         0x6
#define _RXF4SIDH_RXF4SID9_SIZE                             0x1
#define _RXF4SIDH_RXF4SID9_LENGTH                           0x1
#define _RXF4SIDH_RXF4SID9_MASK                             0x40
#define _RXF4SIDH_RXF4SID10_POSN                            0x7
#define _RXF4SIDH_RXF4SID10_POSITION                        0x7
#define _RXF4SIDH_RXF4SID10_SIZE                            0x1
#define _RXF4SIDH_RXF4SID10_LENGTH                          0x1
#define _RXF4SIDH_RXF4SID10_MASK                            0x80

// Register: RXF4SIDL
#define RXF4SIDL RXF4SIDL
extern volatile unsigned char           RXF4SIDL            __at(0xF11);
#ifndef _LIB_BUILD
asm("RXF4SIDL equ 0F11h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF4EID16              :1;
        unsigned RXF4EID17              :1;
        unsigned                        :1;
        unsigned RXF4EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF4SID0               :1;
        unsigned RXF4SID1               :1;
        unsigned RXF4SID2               :1;
    };
} RXF4SIDLbits_t;
extern volatile RXF4SIDLbits_t RXF4SIDLbits __at(0xF11);
// bitfield macros
#define _RXF4SIDL_EID16_POSN                                0x0
#define _RXF4SIDL_EID16_POSITION                            0x0
#define _RXF4SIDL_EID16_SIZE                                0x1
#define _RXF4SIDL_EID16_LENGTH                              0x1
#define _RXF4SIDL_EID16_MASK                                0x1
#define _RXF4SIDL_EID17_POSN                                0x1
#define _RXF4SIDL_EID17_POSITION                            0x1
#define _RXF4SIDL_EID17_SIZE                                0x1
#define _RXF4SIDL_EID17_LENGTH                              0x1
#define _RXF4SIDL_EID17_MASK                                0x2
#define _RXF4SIDL_EXIDEN_POSN                               0x3
#define _RXF4SIDL_EXIDEN_POSITION                           0x3
#define _RXF4SIDL_EXIDEN_SIZE                               0x1
#define _RXF4SIDL_EXIDEN_LENGTH                             0x1
#define _RXF4SIDL_EXIDEN_MASK                               0x8
#define _RXF4SIDL_SID0_POSN                                 0x5
#define _RXF4SIDL_SID0_POSITION                             0x5
#define _RXF4SIDL_SID0_SIZE                                 0x1
#define _RXF4SIDL_SID0_LENGTH                               0x1
#define _RXF4SIDL_SID0_MASK                                 0x20
#define _RXF4SIDL_SID1_POSN                                 0x6
#define _RXF4SIDL_SID1_POSITION                             0x6
#define _RXF4SIDL_SID1_SIZE                                 0x1
#define _RXF4SIDL_SID1_LENGTH                               0x1
#define _RXF4SIDL_SID1_MASK                                 0x40
#define _RXF4SIDL_SID2_POSN                                 0x7
#define _RXF4SIDL_SID2_POSITION                             0x7
#define _RXF4SIDL_SID2_SIZE                                 0x1
#define _RXF4SIDL_SID2_LENGTH                               0x1
#define _RXF4SIDL_SID2_MASK                                 0x80
#define _RXF4SIDL_EXIDE_POSN                                0x3
#define _RXF4SIDL_EXIDE_POSITION                            0x3
#define _RXF4SIDL_EXIDE_SIZE                                0x1
#define _RXF4SIDL_EXIDE_LENGTH                              0x1
#define _RXF4SIDL_EXIDE_MASK                                0x8
#define _RXF4SIDL_RXF4EID16_POSN                            0x0
#define _RXF4SIDL_RXF4EID16_POSITION                        0x0
#define _RXF4SIDL_RXF4EID16_SIZE                            0x1
#define _RXF4SIDL_RXF4EID16_LENGTH                          0x1
#define _RXF4SIDL_RXF4EID16_MASK                            0x1
#define _RXF4SIDL_RXF4EID17_POSN                            0x1
#define _RXF4SIDL_RXF4EID17_POSITION                        0x1
#define _RXF4SIDL_RXF4EID17_SIZE                            0x1
#define _RXF4SIDL_RXF4EID17_LENGTH                          0x1
#define _RXF4SIDL_RXF4EID17_MASK                            0x2
#define _RXF4SIDL_RXF4EXIDEN_POSN                           0x3
#define _RXF4SIDL_RXF4EXIDEN_POSITION                       0x3
#define _RXF4SIDL_RXF4EXIDEN_SIZE                           0x1
#define _RXF4SIDL_RXF4EXIDEN_LENGTH                         0x1
#define _RXF4SIDL_RXF4EXIDEN_MASK                           0x8
#define _RXF4SIDL_RXF4SID0_POSN                             0x5
#define _RXF4SIDL_RXF4SID0_POSITION                         0x5
#define _RXF4SIDL_RXF4SID0_SIZE                             0x1
#define _RXF4SIDL_RXF4SID0_LENGTH                           0x1
#define _RXF4SIDL_RXF4SID0_MASK                             0x20
#define _RXF4SIDL_RXF4SID1_POSN                             0x6
#define _RXF4SIDL_RXF4SID1_POSITION                         0x6
#define _RXF4SIDL_RXF4SID1_SIZE                             0x1
#define _RXF4SIDL_RXF4SID1_LENGTH                           0x1
#define _RXF4SIDL_RXF4SID1_MASK                             0x40
#define _RXF4SIDL_RXF4SID2_POSN                             0x7
#define _RXF4SIDL_RXF4SID2_POSITION                         0x7
#define _RXF4SIDL_RXF4SID2_SIZE                             0x1
#define _RXF4SIDL_RXF4SID2_LENGTH                           0x1
#define _RXF4SIDL_RXF4SID2_MASK                             0x80

// Register: RXF4EIDH
#define RXF4EIDH RXF4EIDH
extern volatile unsigned char           RXF4EIDH            __at(0xF12);
#ifndef _LIB_BUILD
asm("RXF4EIDH equ 0F12h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF4EID8               :1;
        unsigned RXF4EID9               :1;
        unsigned RXF4EID10              :1;
        unsigned RXF4EID11              :1;
        unsigned RXF4EID12              :1;
        unsigned RXF4EID13              :1;
        unsigned RXF4EID14              :1;
        unsigned RXF4EID15              :1;
    };
} RXF4EIDHbits_t;
extern volatile RXF4EIDHbits_t RXF4EIDHbits __at(0xF12);
// bitfield macros
#define _RXF4EIDH_EID8_POSN                                 0x0
#define _RXF4EIDH_EID8_POSITION                             0x0
#define _RXF4EIDH_EID8_SIZE                                 0x1
#define _RXF4EIDH_EID8_LENGTH                               0x1
#define _RXF4EIDH_EID8_MASK                                 0x1
#define _RXF4EIDH_EID9_POSN                                 0x1
#define _RXF4EIDH_EID9_POSITION                             0x1
#define _RXF4EIDH_EID9_SIZE                                 0x1
#define _RXF4EIDH_EID9_LENGTH                               0x1
#define _RXF4EIDH_EID9_MASK                                 0x2
#define _RXF4EIDH_EID10_POSN                                0x2
#define _RXF4EIDH_EID10_POSITION                            0x2
#define _RXF4EIDH_EID10_SIZE                                0x1
#define _RXF4EIDH_EID10_LENGTH                              0x1
#define _RXF4EIDH_EID10_MASK                                0x4
#define _RXF4EIDH_EID11_POSN                                0x3
#define _RXF4EIDH_EID11_POSITION                            0x3
#define _RXF4EIDH_EID11_SIZE                                0x1
#define _RXF4EIDH_EID11_LENGTH                              0x1
#define _RXF4EIDH_EID11_MASK                                0x8
#define _RXF4EIDH_EID12_POSN                                0x4
#define _RXF4EIDH_EID12_POSITION                            0x4
#define _RXF4EIDH_EID12_SIZE                                0x1
#define _RXF4EIDH_EID12_LENGTH                              0x1
#define _RXF4EIDH_EID12_MASK                                0x10
#define _RXF4EIDH_EID13_POSN                                0x5
#define _RXF4EIDH_EID13_POSITION                            0x5
#define _RXF4EIDH_EID13_SIZE                                0x1
#define _RXF4EIDH_EID13_LENGTH                              0x1
#define _RXF4EIDH_EID13_MASK                                0x20
#define _RXF4EIDH_EID14_POSN                                0x6
#define _RXF4EIDH_EID14_POSITION                            0x6
#define _RXF4EIDH_EID14_SIZE                                0x1
#define _RXF4EIDH_EID14_LENGTH                              0x1
#define _RXF4EIDH_EID14_MASK                                0x40
#define _RXF4EIDH_EID15_POSN                                0x7
#define _RXF4EIDH_EID15_POSITION                            0x7
#define _RXF4EIDH_EID15_SIZE                                0x1
#define _RXF4EIDH_EID15_LENGTH                              0x1
#define _RXF4EIDH_EID15_MASK                                0x80
#define _RXF4EIDH_RXF4EID8_POSN                             0x0
#define _RXF4EIDH_RXF4EID8_POSITION                         0x0
#define _RXF4EIDH_RXF4EID8_SIZE                             0x1
#define _RXF4EIDH_RXF4EID8_LENGTH                           0x1
#define _RXF4EIDH_RXF4EID8_MASK                             0x1
#define _RXF4EIDH_RXF4EID9_POSN                             0x1
#define _RXF4EIDH_RXF4EID9_POSITION                         0x1
#define _RXF4EIDH_RXF4EID9_SIZE                             0x1
#define _RXF4EIDH_RXF4EID9_LENGTH                           0x1
#define _RXF4EIDH_RXF4EID9_MASK                             0x2
#define _RXF4EIDH_RXF4EID10_POSN                            0x2
#define _RXF4EIDH_RXF4EID10_POSITION                        0x2
#define _RXF4EIDH_RXF4EID10_SIZE                            0x1
#define _RXF4EIDH_RXF4EID10_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID10_MASK                            0x4
#define _RXF4EIDH_RXF4EID11_POSN                            0x3
#define _RXF4EIDH_RXF4EID11_POSITION                        0x3
#define _RXF4EIDH_RXF4EID11_SIZE                            0x1
#define _RXF4EIDH_RXF4EID11_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID11_MASK                            0x8
#define _RXF4EIDH_RXF4EID12_POSN                            0x4
#define _RXF4EIDH_RXF4EID12_POSITION                        0x4
#define _RXF4EIDH_RXF4EID12_SIZE                            0x1
#define _RXF4EIDH_RXF4EID12_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID12_MASK                            0x10
#define _RXF4EIDH_RXF4EID13_POSN                            0x5
#define _RXF4EIDH_RXF4EID13_POSITION                        0x5
#define _RXF4EIDH_RXF4EID13_SIZE                            0x1
#define _RXF4EIDH_RXF4EID13_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID13_MASK                            0x20
#define _RXF4EIDH_RXF4EID14_POSN                            0x6
#define _RXF4EIDH_RXF4EID14_POSITION                        0x6
#define _RXF4EIDH_RXF4EID14_SIZE                            0x1
#define _RXF4EIDH_RXF4EID14_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID14_MASK                            0x40
#define _RXF4EIDH_RXF4EID15_POSN                            0x7
#define _RXF4EIDH_RXF4EID15_POSITION                        0x7
#define _RXF4EIDH_RXF4EID15_SIZE                            0x1
#define _RXF4EIDH_RXF4EID15_LENGTH                          0x1
#define _RXF4EIDH_RXF4EID15_MASK                            0x80

// Register: RXF4EIDL
#define RXF4EIDL RXF4EIDL
extern volatile unsigned char           RXF4EIDL            __at(0xF13);
#ifndef _LIB_BUILD
asm("RXF4EIDL equ 0F13h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF4EID0               :1;
        unsigned RXF4EID1               :1;
        unsigned RXF4EID2               :1;
        unsigned RXF4EID3               :1;
        unsigned RXF4EID4               :1;
        unsigned RXF4EID5               :1;
        unsigned RXF4EID6               :1;
        unsigned RXF4EID7               :1;
    };
} RXF4EIDLbits_t;
extern volatile RXF4EIDLbits_t RXF4EIDLbits __at(0xF13);
// bitfield macros
#define _RXF4EIDL_EID0_POSN                                 0x0
#define _RXF4EIDL_EID0_POSITION                             0x0
#define _RXF4EIDL_EID0_SIZE                                 0x1
#define _RXF4EIDL_EID0_LENGTH                               0x1
#define _RXF4EIDL_EID0_MASK                                 0x1
#define _RXF4EIDL_EID1_POSN                                 0x1
#define _RXF4EIDL_EID1_POSITION                             0x1
#define _RXF4EIDL_EID1_SIZE                                 0x1
#define _RXF4EIDL_EID1_LENGTH                               0x1
#define _RXF4EIDL_EID1_MASK                                 0x2
#define _RXF4EIDL_EID2_POSN                                 0x2
#define _RXF4EIDL_EID2_POSITION                             0x2
#define _RXF4EIDL_EID2_SIZE                                 0x1
#define _RXF4EIDL_EID2_LENGTH                               0x1
#define _RXF4EIDL_EID2_MASK                                 0x4
#define _RXF4EIDL_EID3_POSN                                 0x3
#define _RXF4EIDL_EID3_POSITION                             0x3
#define _RXF4EIDL_EID3_SIZE                                 0x1
#define _RXF4EIDL_EID3_LENGTH                               0x1
#define _RXF4EIDL_EID3_MASK                                 0x8
#define _RXF4EIDL_EID4_POSN                                 0x4
#define _RXF4EIDL_EID4_POSITION                             0x4
#define _RXF4EIDL_EID4_SIZE                                 0x1
#define _RXF4EIDL_EID4_LENGTH                               0x1
#define _RXF4EIDL_EID4_MASK                                 0x10
#define _RXF4EIDL_EID5_POSN                                 0x5
#define _RXF4EIDL_EID5_POSITION                             0x5
#define _RXF4EIDL_EID5_SIZE                                 0x1
#define _RXF4EIDL_EID5_LENGTH                               0x1
#define _RXF4EIDL_EID5_MASK                                 0x20
#define _RXF4EIDL_EID6_POSN                                 0x6
#define _RXF4EIDL_EID6_POSITION                             0x6
#define _RXF4EIDL_EID6_SIZE                                 0x1
#define _RXF4EIDL_EID6_LENGTH                               0x1
#define _RXF4EIDL_EID6_MASK                                 0x40
#define _RXF4EIDL_EID7_POSN                                 0x7
#define _RXF4EIDL_EID7_POSITION                             0x7
#define _RXF4EIDL_EID7_SIZE                                 0x1
#define _RXF4EIDL_EID7_LENGTH                               0x1
#define _RXF4EIDL_EID7_MASK                                 0x80
#define _RXF4EIDL_RXF4EID0_POSN                             0x0
#define _RXF4EIDL_RXF4EID0_POSITION                         0x0
#define _RXF4EIDL_RXF4EID0_SIZE                             0x1
#define _RXF4EIDL_RXF4EID0_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID0_MASK                             0x1
#define _RXF4EIDL_RXF4EID1_POSN                             0x1
#define _RXF4EIDL_RXF4EID1_POSITION                         0x1
#define _RXF4EIDL_RXF4EID1_SIZE                             0x1
#define _RXF4EIDL_RXF4EID1_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID1_MASK                             0x2
#define _RXF4EIDL_RXF4EID2_POSN                             0x2
#define _RXF4EIDL_RXF4EID2_POSITION                         0x2
#define _RXF4EIDL_RXF4EID2_SIZE                             0x1
#define _RXF4EIDL_RXF4EID2_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID2_MASK                             0x4
#define _RXF4EIDL_RXF4EID3_POSN                             0x3
#define _RXF4EIDL_RXF4EID3_POSITION                         0x3
#define _RXF4EIDL_RXF4EID3_SIZE                             0x1
#define _RXF4EIDL_RXF4EID3_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID3_MASK                             0x8
#define _RXF4EIDL_RXF4EID4_POSN                             0x4
#define _RXF4EIDL_RXF4EID4_POSITION                         0x4
#define _RXF4EIDL_RXF4EID4_SIZE                             0x1
#define _RXF4EIDL_RXF4EID4_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID4_MASK                             0x10
#define _RXF4EIDL_RXF4EID5_POSN                             0x5
#define _RXF4EIDL_RXF4EID5_POSITION                         0x5
#define _RXF4EIDL_RXF4EID5_SIZE                             0x1
#define _RXF4EIDL_RXF4EID5_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID5_MASK                             0x20
#define _RXF4EIDL_RXF4EID6_POSN                             0x6
#define _RXF4EIDL_RXF4EID6_POSITION                         0x6
#define _RXF4EIDL_RXF4EID6_SIZE                             0x1
#define _RXF4EIDL_RXF4EID6_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID6_MASK                             0x40
#define _RXF4EIDL_RXF4EID7_POSN                             0x7
#define _RXF4EIDL_RXF4EID7_POSITION                         0x7
#define _RXF4EIDL_RXF4EID7_SIZE                             0x1
#define _RXF4EIDL_RXF4EID7_LENGTH                           0x1
#define _RXF4EIDL_RXF4EID7_MASK                             0x80

// Register: RXF5SIDH
#define RXF5SIDH RXF5SIDH
extern volatile unsigned char           RXF5SIDH            __at(0xF14);
#ifndef _LIB_BUILD
asm("RXF5SIDH equ 0F14h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXF5SID3               :1;
        unsigned RXF5SID4               :1;
        unsigned RXF5SID5               :1;
        unsigned RXF5SID6               :1;
        unsigned RXF5SID7               :1;
        unsigned RXF5SID8               :1;
        unsigned RXF5SID9               :1;
        unsigned RXF5SID10              :1;
    };
} RXF5SIDHbits_t;
extern volatile RXF5SIDHbits_t RXF5SIDHbits __at(0xF14);
// bitfield macros
#define _RXF5SIDH_SID3_POSN                                 0x0
#define _RXF5SIDH_SID3_POSITION                             0x0
#define _RXF5SIDH_SID3_SIZE                                 0x1
#define _RXF5SIDH_SID3_LENGTH                               0x1
#define _RXF5SIDH_SID3_MASK                                 0x1
#define _RXF5SIDH_SID4_POSN                                 0x1
#define _RXF5SIDH_SID4_POSITION                             0x1
#define _RXF5SIDH_SID4_SIZE                                 0x1
#define _RXF5SIDH_SID4_LENGTH                               0x1
#define _RXF5SIDH_SID4_MASK                                 0x2
#define _RXF5SIDH_SID5_POSN                                 0x2
#define _RXF5SIDH_SID5_POSITION                             0x2
#define _RXF5SIDH_SID5_SIZE                                 0x1
#define _RXF5SIDH_SID5_LENGTH                               0x1
#define _RXF5SIDH_SID5_MASK                                 0x4
#define _RXF5SIDH_SID6_POSN                                 0x3
#define _RXF5SIDH_SID6_POSITION                             0x3
#define _RXF5SIDH_SID6_SIZE                                 0x1
#define _RXF5SIDH_SID6_LENGTH                               0x1
#define _RXF5SIDH_SID6_MASK                                 0x8
#define _RXF5SIDH_SID7_POSN                                 0x4
#define _RXF5SIDH_SID7_POSITION                             0x4
#define _RXF5SIDH_SID7_SIZE                                 0x1
#define _RXF5SIDH_SID7_LENGTH                               0x1
#define _RXF5SIDH_SID7_MASK                                 0x10
#define _RXF5SIDH_SID8_POSN                                 0x5
#define _RXF5SIDH_SID8_POSITION                             0x5
#define _RXF5SIDH_SID8_SIZE                                 0x1
#define _RXF5SIDH_SID8_LENGTH                               0x1
#define _RXF5SIDH_SID8_MASK                                 0x20
#define _RXF5SIDH_SID9_POSN                                 0x6
#define _RXF5SIDH_SID9_POSITION                             0x6
#define _RXF5SIDH_SID9_SIZE                                 0x1
#define _RXF5SIDH_SID9_LENGTH                               0x1
#define _RXF5SIDH_SID9_MASK                                 0x40
#define _RXF5SIDH_SID10_POSN                                0x7
#define _RXF5SIDH_SID10_POSITION                            0x7
#define _RXF5SIDH_SID10_SIZE                                0x1
#define _RXF5SIDH_SID10_LENGTH                              0x1
#define _RXF5SIDH_SID10_MASK                                0x80
#define _RXF5SIDH_RXF5SID3_POSN                             0x0
#define _RXF5SIDH_RXF5SID3_POSITION                         0x0
#define _RXF5SIDH_RXF5SID3_SIZE                             0x1
#define _RXF5SIDH_RXF5SID3_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID3_MASK                             0x1
#define _RXF5SIDH_RXF5SID4_POSN                             0x1
#define _RXF5SIDH_RXF5SID4_POSITION                         0x1
#define _RXF5SIDH_RXF5SID4_SIZE                             0x1
#define _RXF5SIDH_RXF5SID4_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID4_MASK                             0x2
#define _RXF5SIDH_RXF5SID5_POSN                             0x2
#define _RXF5SIDH_RXF5SID5_POSITION                         0x2
#define _RXF5SIDH_RXF5SID5_SIZE                             0x1
#define _RXF5SIDH_RXF5SID5_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID5_MASK                             0x4
#define _RXF5SIDH_RXF5SID6_POSN                             0x3
#define _RXF5SIDH_RXF5SID6_POSITION                         0x3
#define _RXF5SIDH_RXF5SID6_SIZE                             0x1
#define _RXF5SIDH_RXF5SID6_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID6_MASK                             0x8
#define _RXF5SIDH_RXF5SID7_POSN                             0x4
#define _RXF5SIDH_RXF5SID7_POSITION                         0x4
#define _RXF5SIDH_RXF5SID7_SIZE                             0x1
#define _RXF5SIDH_RXF5SID7_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID7_MASK                             0x10
#define _RXF5SIDH_RXF5SID8_POSN                             0x5
#define _RXF5SIDH_RXF5SID8_POSITION                         0x5
#define _RXF5SIDH_RXF5SID8_SIZE                             0x1
#define _RXF5SIDH_RXF5SID8_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID8_MASK                             0x20
#define _RXF5SIDH_RXF5SID9_POSN                             0x6
#define _RXF5SIDH_RXF5SID9_POSITION                         0x6
#define _RXF5SIDH_RXF5SID9_SIZE                             0x1
#define _RXF5SIDH_RXF5SID9_LENGTH                           0x1
#define _RXF5SIDH_RXF5SID9_MASK                             0x40
#define _RXF5SIDH_RXF5SID10_POSN                            0x7
#define _RXF5SIDH_RXF5SID10_POSITION                        0x7
#define _RXF5SIDH_RXF5SID10_SIZE                            0x1
#define _RXF5SIDH_RXF5SID10_LENGTH                          0x1
#define _RXF5SIDH_RXF5SID10_MASK                            0x80

// Register: RXF5SIDL
#define RXF5SIDL RXF5SIDL
extern volatile unsigned char           RXF5SIDL            __at(0xF15);
#ifndef _LIB_BUILD
asm("RXF5SIDL equ 0F15h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDE                  :1;
    };
    struct {
        unsigned RXF5EID16              :1;
        unsigned RXF5EID17              :1;
        unsigned                        :1;
        unsigned RXF5EXIDEN             :1;
        unsigned                        :1;
        unsigned RXF5SID0               :1;
        unsigned RXF5SID1               :1;
        unsigned RXF5SID2               :1;
    };
} RXF5SIDLbits_t;
extern volatile RXF5SIDLbits_t RXF5SIDLbits __at(0xF15);
// bitfield macros
#define _RXF5SIDL_EID16_POSN                                0x0
#define _RXF5SIDL_EID16_POSITION                            0x0
#define _RXF5SIDL_EID16_SIZE                                0x1
#define _RXF5SIDL_EID16_LENGTH                              0x1
#define _RXF5SIDL_EID16_MASK                                0x1
#define _RXF5SIDL_EID17_POSN                                0x1
#define _RXF5SIDL_EID17_POSITION                            0x1
#define _RXF5SIDL_EID17_SIZE                                0x1
#define _RXF5SIDL_EID17_LENGTH                              0x1
#define _RXF5SIDL_EID17_MASK                                0x2
#define _RXF5SIDL_EXIDEN_POSN                               0x3
#define _RXF5SIDL_EXIDEN_POSITION                           0x3
#define _RXF5SIDL_EXIDEN_SIZE                               0x1
#define _RXF5SIDL_EXIDEN_LENGTH                             0x1
#define _RXF5SIDL_EXIDEN_MASK                               0x8
#define _RXF5SIDL_SID0_POSN                                 0x5
#define _RXF5SIDL_SID0_POSITION                             0x5
#define _RXF5SIDL_SID0_SIZE                                 0x1
#define _RXF5SIDL_SID0_LENGTH                               0x1
#define _RXF5SIDL_SID0_MASK                                 0x20
#define _RXF5SIDL_SID1_POSN                                 0x6
#define _RXF5SIDL_SID1_POSITION                             0x6
#define _RXF5SIDL_SID1_SIZE                                 0x1
#define _RXF5SIDL_SID1_LENGTH                               0x1
#define _RXF5SIDL_SID1_MASK                                 0x40
#define _RXF5SIDL_SID2_POSN                                 0x7
#define _RXF5SIDL_SID2_POSITION                             0x7
#define _RXF5SIDL_SID2_SIZE                                 0x1
#define _RXF5SIDL_SID2_LENGTH                               0x1
#define _RXF5SIDL_SID2_MASK                                 0x80
#define _RXF5SIDL_EXIDE_POSN                                0x3
#define _RXF5SIDL_EXIDE_POSITION                            0x3
#define _RXF5SIDL_EXIDE_SIZE                                0x1
#define _RXF5SIDL_EXIDE_LENGTH                              0x1
#define _RXF5SIDL_EXIDE_MASK                                0x8
#define _RXF5SIDL_RXF5EID16_POSN                            0x0
#define _RXF5SIDL_RXF5EID16_POSITION                        0x0
#define _RXF5SIDL_RXF5EID16_SIZE                            0x1
#define _RXF5SIDL_RXF5EID16_LENGTH                          0x1
#define _RXF5SIDL_RXF5EID16_MASK                            0x1
#define _RXF5SIDL_RXF5EID17_POSN                            0x1
#define _RXF5SIDL_RXF5EID17_POSITION                        0x1
#define _RXF5SIDL_RXF5EID17_SIZE                            0x1
#define _RXF5SIDL_RXF5EID17_LENGTH                          0x1
#define _RXF5SIDL_RXF5EID17_MASK                            0x2
#define _RXF5SIDL_RXF5EXIDEN_POSN                           0x3
#define _RXF5SIDL_RXF5EXIDEN_POSITION                       0x3
#define _RXF5SIDL_RXF5EXIDEN_SIZE                           0x1
#define _RXF5SIDL_RXF5EXIDEN_LENGTH                         0x1
#define _RXF5SIDL_RXF5EXIDEN_MASK                           0x8
#define _RXF5SIDL_RXF5SID0_POSN                             0x5
#define _RXF5SIDL_RXF5SID0_POSITION                         0x5
#define _RXF5SIDL_RXF5SID0_SIZE                             0x1
#define _RXF5SIDL_RXF5SID0_LENGTH                           0x1
#define _RXF5SIDL_RXF5SID0_MASK                             0x20
#define _RXF5SIDL_RXF5SID1_POSN                             0x6
#define _RXF5SIDL_RXF5SID1_POSITION                         0x6
#define _RXF5SIDL_RXF5SID1_SIZE                             0x1
#define _RXF5SIDL_RXF5SID1_LENGTH                           0x1
#define _RXF5SIDL_RXF5SID1_MASK                             0x40
#define _RXF5SIDL_RXF5SID2_POSN                             0x7
#define _RXF5SIDL_RXF5SID2_POSITION                         0x7
#define _RXF5SIDL_RXF5SID2_SIZE                             0x1
#define _RXF5SIDL_RXF5SID2_LENGTH                           0x1
#define _RXF5SIDL_RXF5SID2_MASK                             0x80

// Register: RXF5EIDH
#define RXF5EIDH RXF5EIDH
extern volatile unsigned char           RXF5EIDH            __at(0xF16);
#ifndef _LIB_BUILD
asm("RXF5EIDH equ 0F16h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXF5EID8               :1;
        unsigned RXF5EID9               :1;
        unsigned RXF5EID10              :1;
        unsigned RXF5EID11              :1;
        unsigned RXF5EID12              :1;
        unsigned RXF5EID13              :1;
        unsigned RXF5EID14              :1;
        unsigned RXF5EID15              :1;
    };
} RXF5EIDHbits_t;
extern volatile RXF5EIDHbits_t RXF5EIDHbits __at(0xF16);
// bitfield macros
#define _RXF5EIDH_EID8_POSN                                 0x0
#define _RXF5EIDH_EID8_POSITION                             0x0
#define _RXF5EIDH_EID8_SIZE                                 0x1
#define _RXF5EIDH_EID8_LENGTH                               0x1
#define _RXF5EIDH_EID8_MASK                                 0x1
#define _RXF5EIDH_EID9_POSN                                 0x1
#define _RXF5EIDH_EID9_POSITION                             0x1
#define _RXF5EIDH_EID9_SIZE                                 0x1
#define _RXF5EIDH_EID9_LENGTH                               0x1
#define _RXF5EIDH_EID9_MASK                                 0x2
#define _RXF5EIDH_EID10_POSN                                0x2
#define _RXF5EIDH_EID10_POSITION                            0x2
#define _RXF5EIDH_EID10_SIZE                                0x1
#define _RXF5EIDH_EID10_LENGTH                              0x1
#define _RXF5EIDH_EID10_MASK                                0x4
#define _RXF5EIDH_EID11_POSN                                0x3
#define _RXF5EIDH_EID11_POSITION                            0x3
#define _RXF5EIDH_EID11_SIZE                                0x1
#define _RXF5EIDH_EID11_LENGTH                              0x1
#define _RXF5EIDH_EID11_MASK                                0x8
#define _RXF5EIDH_EID12_POSN                                0x4
#define _RXF5EIDH_EID12_POSITION                            0x4
#define _RXF5EIDH_EID12_SIZE                                0x1
#define _RXF5EIDH_EID12_LENGTH                              0x1
#define _RXF5EIDH_EID12_MASK                                0x10
#define _RXF5EIDH_EID13_POSN                                0x5
#define _RXF5EIDH_EID13_POSITION                            0x5
#define _RXF5EIDH_EID13_SIZE                                0x1
#define _RXF5EIDH_EID13_LENGTH                              0x1
#define _RXF5EIDH_EID13_MASK                                0x20
#define _RXF5EIDH_EID14_POSN                                0x6
#define _RXF5EIDH_EID14_POSITION                            0x6
#define _RXF5EIDH_EID14_SIZE                                0x1
#define _RXF5EIDH_EID14_LENGTH                              0x1
#define _RXF5EIDH_EID14_MASK                                0x40
#define _RXF5EIDH_EID15_POSN                                0x7
#define _RXF5EIDH_EID15_POSITION                            0x7
#define _RXF5EIDH_EID15_SIZE                                0x1
#define _RXF5EIDH_EID15_LENGTH                              0x1
#define _RXF5EIDH_EID15_MASK                                0x80
#define _RXF5EIDH_RXF5EID8_POSN                             0x0
#define _RXF5EIDH_RXF5EID8_POSITION                         0x0
#define _RXF5EIDH_RXF5EID8_SIZE                             0x1
#define _RXF5EIDH_RXF5EID8_LENGTH                           0x1
#define _RXF5EIDH_RXF5EID8_MASK                             0x1
#define _RXF5EIDH_RXF5EID9_POSN                             0x1
#define _RXF5EIDH_RXF5EID9_POSITION                         0x1
#define _RXF5EIDH_RXF5EID9_SIZE                             0x1
#define _RXF5EIDH_RXF5EID9_LENGTH                           0x1
#define _RXF5EIDH_RXF5EID9_MASK                             0x2
#define _RXF5EIDH_RXF5EID10_POSN                            0x2
#define _RXF5EIDH_RXF5EID10_POSITION                        0x2
#define _RXF5EIDH_RXF5EID10_SIZE                            0x1
#define _RXF5EIDH_RXF5EID10_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID10_MASK                            0x4
#define _RXF5EIDH_RXF5EID11_POSN                            0x3
#define _RXF5EIDH_RXF5EID11_POSITION                        0x3
#define _RXF5EIDH_RXF5EID11_SIZE                            0x1
#define _RXF5EIDH_RXF5EID11_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID11_MASK                            0x8
#define _RXF5EIDH_RXF5EID12_POSN                            0x4
#define _RXF5EIDH_RXF5EID12_POSITION                        0x4
#define _RXF5EIDH_RXF5EID12_SIZE                            0x1
#define _RXF5EIDH_RXF5EID12_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID12_MASK                            0x10
#define _RXF5EIDH_RXF5EID13_POSN                            0x5
#define _RXF5EIDH_RXF5EID13_POSITION                        0x5
#define _RXF5EIDH_RXF5EID13_SIZE                            0x1
#define _RXF5EIDH_RXF5EID13_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID13_MASK                            0x20
#define _RXF5EIDH_RXF5EID14_POSN                            0x6
#define _RXF5EIDH_RXF5EID14_POSITION                        0x6
#define _RXF5EIDH_RXF5EID14_SIZE                            0x1
#define _RXF5EIDH_RXF5EID14_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID14_MASK                            0x40
#define _RXF5EIDH_RXF5EID15_POSN                            0x7
#define _RXF5EIDH_RXF5EID15_POSITION                        0x7
#define _RXF5EIDH_RXF5EID15_SIZE                            0x1
#define _RXF5EIDH_RXF5EID15_LENGTH                          0x1
#define _RXF5EIDH_RXF5EID15_MASK                            0x80

// Register: RXF5EIDL
#define RXF5EIDL RXF5EIDL
extern volatile unsigned char           RXF5EIDL            __at(0xF17);
#ifndef _LIB_BUILD
asm("RXF5EIDL equ 0F17h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXF5EID0               :1;
        unsigned RXF5EID1               :1;
        unsigned RXF5EID2               :1;
        unsigned RXF5EID3               :1;
        unsigned RXF5EID4               :1;
        unsigned RXF5EID5               :1;
        unsigned RXF5EID6               :1;
        unsigned RXF5EID7               :1;
    };
} RXF5EIDLbits_t;
extern volatile RXF5EIDLbits_t RXF5EIDLbits __at(0xF17);
// bitfield macros
#define _RXF5EIDL_EID0_POSN                                 0x0
#define _RXF5EIDL_EID0_POSITION                             0x0
#define _RXF5EIDL_EID0_SIZE                                 0x1
#define _RXF5EIDL_EID0_LENGTH                               0x1
#define _RXF5EIDL_EID0_MASK                                 0x1
#define _RXF5EIDL_EID1_POSN                                 0x1
#define _RXF5EIDL_EID1_POSITION                             0x1
#define _RXF5EIDL_EID1_SIZE                                 0x1
#define _RXF5EIDL_EID1_LENGTH                               0x1
#define _RXF5EIDL_EID1_MASK                                 0x2
#define _RXF5EIDL_EID2_POSN                                 0x2
#define _RXF5EIDL_EID2_POSITION                             0x2
#define _RXF5EIDL_EID2_SIZE                                 0x1
#define _RXF5EIDL_EID2_LENGTH                               0x1
#define _RXF5EIDL_EID2_MASK                                 0x4
#define _RXF5EIDL_EID3_POSN                                 0x3
#define _RXF5EIDL_EID3_POSITION                             0x3
#define _RXF5EIDL_EID3_SIZE                                 0x1
#define _RXF5EIDL_EID3_LENGTH                               0x1
#define _RXF5EIDL_EID3_MASK                                 0x8
#define _RXF5EIDL_EID4_POSN                                 0x4
#define _RXF5EIDL_EID4_POSITION                             0x4
#define _RXF5EIDL_EID4_SIZE                                 0x1
#define _RXF5EIDL_EID4_LENGTH                               0x1
#define _RXF5EIDL_EID4_MASK                                 0x10
#define _RXF5EIDL_EID5_POSN                                 0x5
#define _RXF5EIDL_EID5_POSITION                             0x5
#define _RXF5EIDL_EID5_SIZE                                 0x1
#define _RXF5EIDL_EID5_LENGTH                               0x1
#define _RXF5EIDL_EID5_MASK                                 0x20
#define _RXF5EIDL_EID6_POSN                                 0x6
#define _RXF5EIDL_EID6_POSITION                             0x6
#define _RXF5EIDL_EID6_SIZE                                 0x1
#define _RXF5EIDL_EID6_LENGTH                               0x1
#define _RXF5EIDL_EID6_MASK                                 0x40
#define _RXF5EIDL_EID7_POSN                                 0x7
#define _RXF5EIDL_EID7_POSITION                             0x7
#define _RXF5EIDL_EID7_SIZE                                 0x1
#define _RXF5EIDL_EID7_LENGTH                               0x1
#define _RXF5EIDL_EID7_MASK                                 0x80
#define _RXF5EIDL_RXF5EID0_POSN                             0x0
#define _RXF5EIDL_RXF5EID0_POSITION                         0x0
#define _RXF5EIDL_RXF5EID0_SIZE                             0x1
#define _RXF5EIDL_RXF5EID0_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID0_MASK                             0x1
#define _RXF5EIDL_RXF5EID1_POSN                             0x1
#define _RXF5EIDL_RXF5EID1_POSITION                         0x1
#define _RXF5EIDL_RXF5EID1_SIZE                             0x1
#define _RXF5EIDL_RXF5EID1_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID1_MASK                             0x2
#define _RXF5EIDL_RXF5EID2_POSN                             0x2
#define _RXF5EIDL_RXF5EID2_POSITION                         0x2
#define _RXF5EIDL_RXF5EID2_SIZE                             0x1
#define _RXF5EIDL_RXF5EID2_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID2_MASK                             0x4
#define _RXF5EIDL_RXF5EID3_POSN                             0x3
#define _RXF5EIDL_RXF5EID3_POSITION                         0x3
#define _RXF5EIDL_RXF5EID3_SIZE                             0x1
#define _RXF5EIDL_RXF5EID3_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID3_MASK                             0x8
#define _RXF5EIDL_RXF5EID4_POSN                             0x4
#define _RXF5EIDL_RXF5EID4_POSITION                         0x4
#define _RXF5EIDL_RXF5EID4_SIZE                             0x1
#define _RXF5EIDL_RXF5EID4_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID4_MASK                             0x10
#define _RXF5EIDL_RXF5EID5_POSN                             0x5
#define _RXF5EIDL_RXF5EID5_POSITION                         0x5
#define _RXF5EIDL_RXF5EID5_SIZE                             0x1
#define _RXF5EIDL_RXF5EID5_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID5_MASK                             0x20
#define _RXF5EIDL_RXF5EID6_POSN                             0x6
#define _RXF5EIDL_RXF5EID6_POSITION                         0x6
#define _RXF5EIDL_RXF5EID6_SIZE                             0x1
#define _RXF5EIDL_RXF5EID6_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID6_MASK                             0x40
#define _RXF5EIDL_RXF5EID7_POSN                             0x7
#define _RXF5EIDL_RXF5EID7_POSITION                         0x7
#define _RXF5EIDL_RXF5EID7_SIZE                             0x1
#define _RXF5EIDL_RXF5EID7_LENGTH                           0x1
#define _RXF5EIDL_RXF5EID7_MASK                             0x80

// Register: RXM0SIDH
#define RXM0SIDH RXM0SIDH
extern volatile unsigned char           RXM0SIDH            __at(0xF18);
#ifndef _LIB_BUILD
asm("RXM0SIDH equ 0F18h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXM0SID3               :1;
        unsigned RXM0SID4               :1;
        unsigned RXM0SID5               :1;
        unsigned RXM0SID6               :1;
        unsigned RXM0SID7               :1;
        unsigned RXM0SID8               :1;
        unsigned RXM0SID9               :1;
        unsigned RXM0SID10              :1;
    };
} RXM0SIDHbits_t;
extern volatile RXM0SIDHbits_t RXM0SIDHbits __at(0xF18);
// bitfield macros
#define _RXM0SIDH_SID3_POSN                                 0x0
#define _RXM0SIDH_SID3_POSITION                             0x0
#define _RXM0SIDH_SID3_SIZE                                 0x1
#define _RXM0SIDH_SID3_LENGTH                               0x1
#define _RXM0SIDH_SID3_MASK                                 0x1
#define _RXM0SIDH_SID4_POSN                                 0x1
#define _RXM0SIDH_SID4_POSITION                             0x1
#define _RXM0SIDH_SID4_SIZE                                 0x1
#define _RXM0SIDH_SID4_LENGTH                               0x1
#define _RXM0SIDH_SID4_MASK                                 0x2
#define _RXM0SIDH_SID5_POSN                                 0x2
#define _RXM0SIDH_SID5_POSITION                             0x2
#define _RXM0SIDH_SID5_SIZE                                 0x1
#define _RXM0SIDH_SID5_LENGTH                               0x1
#define _RXM0SIDH_SID5_MASK                                 0x4
#define _RXM0SIDH_SID6_POSN                                 0x3
#define _RXM0SIDH_SID6_POSITION                             0x3
#define _RXM0SIDH_SID6_SIZE                                 0x1
#define _RXM0SIDH_SID6_LENGTH                               0x1
#define _RXM0SIDH_SID6_MASK                                 0x8
#define _RXM0SIDH_SID7_POSN                                 0x4
#define _RXM0SIDH_SID7_POSITION                             0x4
#define _RXM0SIDH_SID7_SIZE                                 0x1
#define _RXM0SIDH_SID7_LENGTH                               0x1
#define _RXM0SIDH_SID7_MASK                                 0x10
#define _RXM0SIDH_SID8_POSN                                 0x5
#define _RXM0SIDH_SID8_POSITION                             0x5
#define _RXM0SIDH_SID8_SIZE                                 0x1
#define _RXM0SIDH_SID8_LENGTH                               0x1
#define _RXM0SIDH_SID8_MASK                                 0x20
#define _RXM0SIDH_SID9_POSN                                 0x6
#define _RXM0SIDH_SID9_POSITION                             0x6
#define _RXM0SIDH_SID9_SIZE                                 0x1
#define _RXM0SIDH_SID9_LENGTH                               0x1
#define _RXM0SIDH_SID9_MASK                                 0x40
#define _RXM0SIDH_SID10_POSN                                0x7
#define _RXM0SIDH_SID10_POSITION                            0x7
#define _RXM0SIDH_SID10_SIZE                                0x1
#define _RXM0SIDH_SID10_LENGTH                              0x1
#define _RXM0SIDH_SID10_MASK                                0x80
#define _RXM0SIDH_RXM0SID3_POSN                             0x0
#define _RXM0SIDH_RXM0SID3_POSITION                         0x0
#define _RXM0SIDH_RXM0SID3_SIZE                             0x1
#define _RXM0SIDH_RXM0SID3_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID3_MASK                             0x1
#define _RXM0SIDH_RXM0SID4_POSN                             0x1
#define _RXM0SIDH_RXM0SID4_POSITION                         0x1
#define _RXM0SIDH_RXM0SID4_SIZE                             0x1
#define _RXM0SIDH_RXM0SID4_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID4_MASK                             0x2
#define _RXM0SIDH_RXM0SID5_POSN                             0x2
#define _RXM0SIDH_RXM0SID5_POSITION                         0x2
#define _RXM0SIDH_RXM0SID5_SIZE                             0x1
#define _RXM0SIDH_RXM0SID5_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID5_MASK                             0x4
#define _RXM0SIDH_RXM0SID6_POSN                             0x3
#define _RXM0SIDH_RXM0SID6_POSITION                         0x3
#define _RXM0SIDH_RXM0SID6_SIZE                             0x1
#define _RXM0SIDH_RXM0SID6_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID6_MASK                             0x8
#define _RXM0SIDH_RXM0SID7_POSN                             0x4
#define _RXM0SIDH_RXM0SID7_POSITION                         0x4
#define _RXM0SIDH_RXM0SID7_SIZE                             0x1
#define _RXM0SIDH_RXM0SID7_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID7_MASK                             0x10
#define _RXM0SIDH_RXM0SID8_POSN                             0x5
#define _RXM0SIDH_RXM0SID8_POSITION                         0x5
#define _RXM0SIDH_RXM0SID8_SIZE                             0x1
#define _RXM0SIDH_RXM0SID8_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID8_MASK                             0x20
#define _RXM0SIDH_RXM0SID9_POSN                             0x6
#define _RXM0SIDH_RXM0SID9_POSITION                         0x6
#define _RXM0SIDH_RXM0SID9_SIZE                             0x1
#define _RXM0SIDH_RXM0SID9_LENGTH                           0x1
#define _RXM0SIDH_RXM0SID9_MASK                             0x40
#define _RXM0SIDH_RXM0SID10_POSN                            0x7
#define _RXM0SIDH_RXM0SID10_POSITION                        0x7
#define _RXM0SIDH_RXM0SID10_SIZE                            0x1
#define _RXM0SIDH_RXM0SID10_LENGTH                          0x1
#define _RXM0SIDH_RXM0SID10_MASK                            0x80

// Register: RXM0SIDL
#define RXM0SIDL RXM0SIDL
extern volatile unsigned char           RXM0SIDL            __at(0xF19);
#ifndef _LIB_BUILD
asm("RXM0SIDL equ 0F19h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDM                  :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned EXIDEN                 :1;
    };
    struct {
        unsigned RXM0EID16              :1;
        unsigned RXM0EID17              :1;
        unsigned                        :1;
        unsigned RXM0EXIDM              :1;
        unsigned                        :1;
        unsigned RXM0SID0               :1;
        unsigned RXM0SID1               :1;
        unsigned RXM0SID2               :1;
    };
} RXM0SIDLbits_t;
extern volatile RXM0SIDLbits_t RXM0SIDLbits __at(0xF19);
// bitfield macros
#define _RXM0SIDL_EID16_POSN                                0x0
#define _RXM0SIDL_EID16_POSITION                            0x0
#define _RXM0SIDL_EID16_SIZE                                0x1
#define _RXM0SIDL_EID16_LENGTH                              0x1
#define _RXM0SIDL_EID16_MASK                                0x1
#define _RXM0SIDL_EID17_POSN                                0x1
#define _RXM0SIDL_EID17_POSITION                            0x1
#define _RXM0SIDL_EID17_SIZE                                0x1
#define _RXM0SIDL_EID17_LENGTH                              0x1
#define _RXM0SIDL_EID17_MASK                                0x2
#define _RXM0SIDL_EXIDM_POSN                                0x3
#define _RXM0SIDL_EXIDM_POSITION                            0x3
#define _RXM0SIDL_EXIDM_SIZE                                0x1
#define _RXM0SIDL_EXIDM_LENGTH                              0x1
#define _RXM0SIDL_EXIDM_MASK                                0x8
#define _RXM0SIDL_SID0_POSN                                 0x5
#define _RXM0SIDL_SID0_POSITION                             0x5
#define _RXM0SIDL_SID0_SIZE                                 0x1
#define _RXM0SIDL_SID0_LENGTH                               0x1
#define _RXM0SIDL_SID0_MASK                                 0x20
#define _RXM0SIDL_SID1_POSN                                 0x6
#define _RXM0SIDL_SID1_POSITION                             0x6
#define _RXM0SIDL_SID1_SIZE                                 0x1
#define _RXM0SIDL_SID1_LENGTH                               0x1
#define _RXM0SIDL_SID1_MASK                                 0x40
#define _RXM0SIDL_SID2_POSN                                 0x7
#define _RXM0SIDL_SID2_POSITION                             0x7
#define _RXM0SIDL_SID2_SIZE                                 0x1
#define _RXM0SIDL_SID2_LENGTH                               0x1
#define _RXM0SIDL_SID2_MASK                                 0x80
#define _RXM0SIDL_EXIDEN_POSN                               0x3
#define _RXM0SIDL_EXIDEN_POSITION                           0x3
#define _RXM0SIDL_EXIDEN_SIZE                               0x1
#define _RXM0SIDL_EXIDEN_LENGTH                             0x1
#define _RXM0SIDL_EXIDEN_MASK                               0x8
#define _RXM0SIDL_RXM0EID16_POSN                            0x0
#define _RXM0SIDL_RXM0EID16_POSITION                        0x0
#define _RXM0SIDL_RXM0EID16_SIZE                            0x1
#define _RXM0SIDL_RXM0EID16_LENGTH                          0x1
#define _RXM0SIDL_RXM0EID16_MASK                            0x1
#define _RXM0SIDL_RXM0EID17_POSN                            0x1
#define _RXM0SIDL_RXM0EID17_POSITION                        0x1
#define _RXM0SIDL_RXM0EID17_SIZE                            0x1
#define _RXM0SIDL_RXM0EID17_LENGTH                          0x1
#define _RXM0SIDL_RXM0EID17_MASK                            0x2
#define _RXM0SIDL_RXM0EXIDM_POSN                            0x3
#define _RXM0SIDL_RXM0EXIDM_POSITION                        0x3
#define _RXM0SIDL_RXM0EXIDM_SIZE                            0x1
#define _RXM0SIDL_RXM0EXIDM_LENGTH                          0x1
#define _RXM0SIDL_RXM0EXIDM_MASK                            0x8
#define _RXM0SIDL_RXM0SID0_POSN                             0x5
#define _RXM0SIDL_RXM0SID0_POSITION                         0x5
#define _RXM0SIDL_RXM0SID0_SIZE                             0x1
#define _RXM0SIDL_RXM0SID0_LENGTH                           0x1
#define _RXM0SIDL_RXM0SID0_MASK                             0x20
#define _RXM0SIDL_RXM0SID1_POSN                             0x6
#define _RXM0SIDL_RXM0SID1_POSITION                         0x6
#define _RXM0SIDL_RXM0SID1_SIZE                             0x1
#define _RXM0SIDL_RXM0SID1_LENGTH                           0x1
#define _RXM0SIDL_RXM0SID1_MASK                             0x40
#define _RXM0SIDL_RXM0SID2_POSN                             0x7
#define _RXM0SIDL_RXM0SID2_POSITION                         0x7
#define _RXM0SIDL_RXM0SID2_SIZE                             0x1
#define _RXM0SIDL_RXM0SID2_LENGTH                           0x1
#define _RXM0SIDL_RXM0SID2_MASK                             0x80

// Register: RXM0EIDH
#define RXM0EIDH RXM0EIDH
extern volatile unsigned char           RXM0EIDH            __at(0xF1A);
#ifndef _LIB_BUILD
asm("RXM0EIDH equ 0F1Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXM0EID8               :1;
        unsigned RXM0EID9               :1;
        unsigned RXM0EID10              :1;
        unsigned RXM0EID11              :1;
        unsigned RXM0EID12              :1;
        unsigned RXM0EID13              :1;
        unsigned RXM0EID14              :1;
        unsigned RXM0EID15              :1;
    };
} RXM0EIDHbits_t;
extern volatile RXM0EIDHbits_t RXM0EIDHbits __at(0xF1A);
// bitfield macros
#define _RXM0EIDH_EID8_POSN                                 0x0
#define _RXM0EIDH_EID8_POSITION                             0x0
#define _RXM0EIDH_EID8_SIZE                                 0x1
#define _RXM0EIDH_EID8_LENGTH                               0x1
#define _RXM0EIDH_EID8_MASK                                 0x1
#define _RXM0EIDH_EID9_POSN                                 0x1
#define _RXM0EIDH_EID9_POSITION                             0x1
#define _RXM0EIDH_EID9_SIZE                                 0x1
#define _RXM0EIDH_EID9_LENGTH                               0x1
#define _RXM0EIDH_EID9_MASK                                 0x2
#define _RXM0EIDH_EID10_POSN                                0x2
#define _RXM0EIDH_EID10_POSITION                            0x2
#define _RXM0EIDH_EID10_SIZE                                0x1
#define _RXM0EIDH_EID10_LENGTH                              0x1
#define _RXM0EIDH_EID10_MASK                                0x4
#define _RXM0EIDH_EID11_POSN                                0x3
#define _RXM0EIDH_EID11_POSITION                            0x3
#define _RXM0EIDH_EID11_SIZE                                0x1
#define _RXM0EIDH_EID11_LENGTH                              0x1
#define _RXM0EIDH_EID11_MASK                                0x8
#define _RXM0EIDH_EID12_POSN                                0x4
#define _RXM0EIDH_EID12_POSITION                            0x4
#define _RXM0EIDH_EID12_SIZE                                0x1
#define _RXM0EIDH_EID12_LENGTH                              0x1
#define _RXM0EIDH_EID12_MASK                                0x10
#define _RXM0EIDH_EID13_POSN                                0x5
#define _RXM0EIDH_EID13_POSITION                            0x5
#define _RXM0EIDH_EID13_SIZE                                0x1
#define _RXM0EIDH_EID13_LENGTH                              0x1
#define _RXM0EIDH_EID13_MASK                                0x20
#define _RXM0EIDH_EID14_POSN                                0x6
#define _RXM0EIDH_EID14_POSITION                            0x6
#define _RXM0EIDH_EID14_SIZE                                0x1
#define _RXM0EIDH_EID14_LENGTH                              0x1
#define _RXM0EIDH_EID14_MASK                                0x40
#define _RXM0EIDH_EID15_POSN                                0x7
#define _RXM0EIDH_EID15_POSITION                            0x7
#define _RXM0EIDH_EID15_SIZE                                0x1
#define _RXM0EIDH_EID15_LENGTH                              0x1
#define _RXM0EIDH_EID15_MASK                                0x80
#define _RXM0EIDH_RXM0EID8_POSN                             0x0
#define _RXM0EIDH_RXM0EID8_POSITION                         0x0
#define _RXM0EIDH_RXM0EID8_SIZE                             0x1
#define _RXM0EIDH_RXM0EID8_LENGTH                           0x1
#define _RXM0EIDH_RXM0EID8_MASK                             0x1
#define _RXM0EIDH_RXM0EID9_POSN                             0x1
#define _RXM0EIDH_RXM0EID9_POSITION                         0x1
#define _RXM0EIDH_RXM0EID9_SIZE                             0x1
#define _RXM0EIDH_RXM0EID9_LENGTH                           0x1
#define _RXM0EIDH_RXM0EID9_MASK                             0x2
#define _RXM0EIDH_RXM0EID10_POSN                            0x2
#define _RXM0EIDH_RXM0EID10_POSITION                        0x2
#define _RXM0EIDH_RXM0EID10_SIZE                            0x1
#define _RXM0EIDH_RXM0EID10_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID10_MASK                            0x4
#define _RXM0EIDH_RXM0EID11_POSN                            0x3
#define _RXM0EIDH_RXM0EID11_POSITION                        0x3
#define _RXM0EIDH_RXM0EID11_SIZE                            0x1
#define _RXM0EIDH_RXM0EID11_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID11_MASK                            0x8
#define _RXM0EIDH_RXM0EID12_POSN                            0x4
#define _RXM0EIDH_RXM0EID12_POSITION                        0x4
#define _RXM0EIDH_RXM0EID12_SIZE                            0x1
#define _RXM0EIDH_RXM0EID12_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID12_MASK                            0x10
#define _RXM0EIDH_RXM0EID13_POSN                            0x5
#define _RXM0EIDH_RXM0EID13_POSITION                        0x5
#define _RXM0EIDH_RXM0EID13_SIZE                            0x1
#define _RXM0EIDH_RXM0EID13_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID13_MASK                            0x20
#define _RXM0EIDH_RXM0EID14_POSN                            0x6
#define _RXM0EIDH_RXM0EID14_POSITION                        0x6
#define _RXM0EIDH_RXM0EID14_SIZE                            0x1
#define _RXM0EIDH_RXM0EID14_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID14_MASK                            0x40
#define _RXM0EIDH_RXM0EID15_POSN                            0x7
#define _RXM0EIDH_RXM0EID15_POSITION                        0x7
#define _RXM0EIDH_RXM0EID15_SIZE                            0x1
#define _RXM0EIDH_RXM0EID15_LENGTH                          0x1
#define _RXM0EIDH_RXM0EID15_MASK                            0x80

// Register: RXM0EIDL
#define RXM0EIDL RXM0EIDL
extern volatile unsigned char           RXM0EIDL            __at(0xF1B);
#ifndef _LIB_BUILD
asm("RXM0EIDL equ 0F1Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXM0EID0               :1;
        unsigned RXM0EID1               :1;
        unsigned RXM0EID2               :1;
        unsigned RXM0EID3               :1;
        unsigned RXM0EID4               :1;
        unsigned RXM0EID5               :1;
        unsigned RXM0EID6               :1;
        unsigned RXM0EID7               :1;
    };
} RXM0EIDLbits_t;
extern volatile RXM0EIDLbits_t RXM0EIDLbits __at(0xF1B);
// bitfield macros
#define _RXM0EIDL_EID0_POSN                                 0x0
#define _RXM0EIDL_EID0_POSITION                             0x0
#define _RXM0EIDL_EID0_SIZE                                 0x1
#define _RXM0EIDL_EID0_LENGTH                               0x1
#define _RXM0EIDL_EID0_MASK                                 0x1
#define _RXM0EIDL_EID1_POSN                                 0x1
#define _RXM0EIDL_EID1_POSITION                             0x1
#define _RXM0EIDL_EID1_SIZE                                 0x1
#define _RXM0EIDL_EID1_LENGTH                               0x1
#define _RXM0EIDL_EID1_MASK                                 0x2
#define _RXM0EIDL_EID2_POSN                                 0x2
#define _RXM0EIDL_EID2_POSITION                             0x2
#define _RXM0EIDL_EID2_SIZE                                 0x1
#define _RXM0EIDL_EID2_LENGTH                               0x1
#define _RXM0EIDL_EID2_MASK                                 0x4
#define _RXM0EIDL_EID3_POSN                                 0x3
#define _RXM0EIDL_EID3_POSITION                             0x3
#define _RXM0EIDL_EID3_SIZE                                 0x1
#define _RXM0EIDL_EID3_LENGTH                               0x1
#define _RXM0EIDL_EID3_MASK                                 0x8
#define _RXM0EIDL_EID4_POSN                                 0x4
#define _RXM0EIDL_EID4_POSITION                             0x4
#define _RXM0EIDL_EID4_SIZE                                 0x1
#define _RXM0EIDL_EID4_LENGTH                               0x1
#define _RXM0EIDL_EID4_MASK                                 0x10
#define _RXM0EIDL_EID5_POSN                                 0x5
#define _RXM0EIDL_EID5_POSITION                             0x5
#define _RXM0EIDL_EID5_SIZE                                 0x1
#define _RXM0EIDL_EID5_LENGTH                               0x1
#define _RXM0EIDL_EID5_MASK                                 0x20
#define _RXM0EIDL_EID6_POSN                                 0x6
#define _RXM0EIDL_EID6_POSITION                             0x6
#define _RXM0EIDL_EID6_SIZE                                 0x1
#define _RXM0EIDL_EID6_LENGTH                               0x1
#define _RXM0EIDL_EID6_MASK                                 0x40
#define _RXM0EIDL_EID7_POSN                                 0x7
#define _RXM0EIDL_EID7_POSITION                             0x7
#define _RXM0EIDL_EID7_SIZE                                 0x1
#define _RXM0EIDL_EID7_LENGTH                               0x1
#define _RXM0EIDL_EID7_MASK                                 0x80
#define _RXM0EIDL_RXM0EID0_POSN                             0x0
#define _RXM0EIDL_RXM0EID0_POSITION                         0x0
#define _RXM0EIDL_RXM0EID0_SIZE                             0x1
#define _RXM0EIDL_RXM0EID0_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID0_MASK                             0x1
#define _RXM0EIDL_RXM0EID1_POSN                             0x1
#define _RXM0EIDL_RXM0EID1_POSITION                         0x1
#define _RXM0EIDL_RXM0EID1_SIZE                             0x1
#define _RXM0EIDL_RXM0EID1_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID1_MASK                             0x2
#define _RXM0EIDL_RXM0EID2_POSN                             0x2
#define _RXM0EIDL_RXM0EID2_POSITION                         0x2
#define _RXM0EIDL_RXM0EID2_SIZE                             0x1
#define _RXM0EIDL_RXM0EID2_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID2_MASK                             0x4
#define _RXM0EIDL_RXM0EID3_POSN                             0x3
#define _RXM0EIDL_RXM0EID3_POSITION                         0x3
#define _RXM0EIDL_RXM0EID3_SIZE                             0x1
#define _RXM0EIDL_RXM0EID3_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID3_MASK                             0x8
#define _RXM0EIDL_RXM0EID4_POSN                             0x4
#define _RXM0EIDL_RXM0EID4_POSITION                         0x4
#define _RXM0EIDL_RXM0EID4_SIZE                             0x1
#define _RXM0EIDL_RXM0EID4_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID4_MASK                             0x10
#define _RXM0EIDL_RXM0EID5_POSN                             0x5
#define _RXM0EIDL_RXM0EID5_POSITION                         0x5
#define _RXM0EIDL_RXM0EID5_SIZE                             0x1
#define _RXM0EIDL_RXM0EID5_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID5_MASK                             0x20
#define _RXM0EIDL_RXM0EID6_POSN                             0x6
#define _RXM0EIDL_RXM0EID6_POSITION                         0x6
#define _RXM0EIDL_RXM0EID6_SIZE                             0x1
#define _RXM0EIDL_RXM0EID6_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID6_MASK                             0x40
#define _RXM0EIDL_RXM0EID7_POSN                             0x7
#define _RXM0EIDL_RXM0EID7_POSITION                         0x7
#define _RXM0EIDL_RXM0EID7_SIZE                             0x1
#define _RXM0EIDL_RXM0EID7_LENGTH                           0x1
#define _RXM0EIDL_RXM0EID7_MASK                             0x80

// Register: RXM1SIDH
#define RXM1SIDH RXM1SIDH
extern volatile unsigned char           RXM1SIDH            __at(0xF1C);
#ifndef _LIB_BUILD
asm("RXM1SIDH equ 0F1Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXM1SID3               :1;
        unsigned RXM1SID4               :1;
        unsigned RXM1SID5               :1;
        unsigned RXM1SID6               :1;
        unsigned RXM1SID7               :1;
        unsigned RXM1SID8               :1;
        unsigned RXM1SID9               :1;
        unsigned RXM1SID10              :1;
    };
} RXM1SIDHbits_t;
extern volatile RXM1SIDHbits_t RXM1SIDHbits __at(0xF1C);
// bitfield macros
#define _RXM1SIDH_SID3_POSN                                 0x0
#define _RXM1SIDH_SID3_POSITION                             0x0
#define _RXM1SIDH_SID3_SIZE                                 0x1
#define _RXM1SIDH_SID3_LENGTH                               0x1
#define _RXM1SIDH_SID3_MASK                                 0x1
#define _RXM1SIDH_SID4_POSN                                 0x1
#define _RXM1SIDH_SID4_POSITION                             0x1
#define _RXM1SIDH_SID4_SIZE                                 0x1
#define _RXM1SIDH_SID4_LENGTH                               0x1
#define _RXM1SIDH_SID4_MASK                                 0x2
#define _RXM1SIDH_SID5_POSN                                 0x2
#define _RXM1SIDH_SID5_POSITION                             0x2
#define _RXM1SIDH_SID5_SIZE                                 0x1
#define _RXM1SIDH_SID5_LENGTH                               0x1
#define _RXM1SIDH_SID5_MASK                                 0x4
#define _RXM1SIDH_SID6_POSN                                 0x3
#define _RXM1SIDH_SID6_POSITION                             0x3
#define _RXM1SIDH_SID6_SIZE                                 0x1
#define _RXM1SIDH_SID6_LENGTH                               0x1
#define _RXM1SIDH_SID6_MASK                                 0x8
#define _RXM1SIDH_SID7_POSN                                 0x4
#define _RXM1SIDH_SID7_POSITION                             0x4
#define _RXM1SIDH_SID7_SIZE                                 0x1
#define _RXM1SIDH_SID7_LENGTH                               0x1
#define _RXM1SIDH_SID7_MASK                                 0x10
#define _RXM1SIDH_SID8_POSN                                 0x5
#define _RXM1SIDH_SID8_POSITION                             0x5
#define _RXM1SIDH_SID8_SIZE                                 0x1
#define _RXM1SIDH_SID8_LENGTH                               0x1
#define _RXM1SIDH_SID8_MASK                                 0x20
#define _RXM1SIDH_SID9_POSN                                 0x6
#define _RXM1SIDH_SID9_POSITION                             0x6
#define _RXM1SIDH_SID9_SIZE                                 0x1
#define _RXM1SIDH_SID9_LENGTH                               0x1
#define _RXM1SIDH_SID9_MASK                                 0x40
#define _RXM1SIDH_SID10_POSN                                0x7
#define _RXM1SIDH_SID10_POSITION                            0x7
#define _RXM1SIDH_SID10_SIZE                                0x1
#define _RXM1SIDH_SID10_LENGTH                              0x1
#define _RXM1SIDH_SID10_MASK                                0x80
#define _RXM1SIDH_RXM1SID3_POSN                             0x0
#define _RXM1SIDH_RXM1SID3_POSITION                         0x0
#define _RXM1SIDH_RXM1SID3_SIZE                             0x1
#define _RXM1SIDH_RXM1SID3_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID3_MASK                             0x1
#define _RXM1SIDH_RXM1SID4_POSN                             0x1
#define _RXM1SIDH_RXM1SID4_POSITION                         0x1
#define _RXM1SIDH_RXM1SID4_SIZE                             0x1
#define _RXM1SIDH_RXM1SID4_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID4_MASK                             0x2
#define _RXM1SIDH_RXM1SID5_POSN                             0x2
#define _RXM1SIDH_RXM1SID5_POSITION                         0x2
#define _RXM1SIDH_RXM1SID5_SIZE                             0x1
#define _RXM1SIDH_RXM1SID5_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID5_MASK                             0x4
#define _RXM1SIDH_RXM1SID6_POSN                             0x3
#define _RXM1SIDH_RXM1SID6_POSITION                         0x3
#define _RXM1SIDH_RXM1SID6_SIZE                             0x1
#define _RXM1SIDH_RXM1SID6_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID6_MASK                             0x8
#define _RXM1SIDH_RXM1SID7_POSN                             0x4
#define _RXM1SIDH_RXM1SID7_POSITION                         0x4
#define _RXM1SIDH_RXM1SID7_SIZE                             0x1
#define _RXM1SIDH_RXM1SID7_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID7_MASK                             0x10
#define _RXM1SIDH_RXM1SID8_POSN                             0x5
#define _RXM1SIDH_RXM1SID8_POSITION                         0x5
#define _RXM1SIDH_RXM1SID8_SIZE                             0x1
#define _RXM1SIDH_RXM1SID8_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID8_MASK                             0x20
#define _RXM1SIDH_RXM1SID9_POSN                             0x6
#define _RXM1SIDH_RXM1SID9_POSITION                         0x6
#define _RXM1SIDH_RXM1SID9_SIZE                             0x1
#define _RXM1SIDH_RXM1SID9_LENGTH                           0x1
#define _RXM1SIDH_RXM1SID9_MASK                             0x40
#define _RXM1SIDH_RXM1SID10_POSN                            0x7
#define _RXM1SIDH_RXM1SID10_POSITION                        0x7
#define _RXM1SIDH_RXM1SID10_SIZE                            0x1
#define _RXM1SIDH_RXM1SID10_LENGTH                          0x1
#define _RXM1SIDH_RXM1SID10_MASK                            0x80

// Register: RXM1SIDL
#define RXM1SIDL RXM1SIDL
extern volatile unsigned char           RXM1SIDL            __at(0xF1D);
#ifndef _LIB_BUILD
asm("RXM1SIDL equ 0F1Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDEN                 :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXM1EID16              :1;
        unsigned RXM1EID17              :1;
        unsigned                        :1;
        unsigned RXM1EXIDEN             :1;
        unsigned                        :1;
        unsigned RXM1SID0               :1;
        unsigned RXM1SID1               :1;
        unsigned RXM1SID2               :1;
    };
} RXM1SIDLbits_t;
extern volatile RXM1SIDLbits_t RXM1SIDLbits __at(0xF1D);
// bitfield macros
#define _RXM1SIDL_EID16_POSN                                0x0
#define _RXM1SIDL_EID16_POSITION                            0x0
#define _RXM1SIDL_EID16_SIZE                                0x1
#define _RXM1SIDL_EID16_LENGTH                              0x1
#define _RXM1SIDL_EID16_MASK                                0x1
#define _RXM1SIDL_EID17_POSN                                0x1
#define _RXM1SIDL_EID17_POSITION                            0x1
#define _RXM1SIDL_EID17_SIZE                                0x1
#define _RXM1SIDL_EID17_LENGTH                              0x1
#define _RXM1SIDL_EID17_MASK                                0x2
#define _RXM1SIDL_EXIDEN_POSN                               0x3
#define _RXM1SIDL_EXIDEN_POSITION                           0x3
#define _RXM1SIDL_EXIDEN_SIZE                               0x1
#define _RXM1SIDL_EXIDEN_LENGTH                             0x1
#define _RXM1SIDL_EXIDEN_MASK                               0x8
#define _RXM1SIDL_SID0_POSN                                 0x5
#define _RXM1SIDL_SID0_POSITION                             0x5
#define _RXM1SIDL_SID0_SIZE                                 0x1
#define _RXM1SIDL_SID0_LENGTH                               0x1
#define _RXM1SIDL_SID0_MASK                                 0x20
#define _RXM1SIDL_SID1_POSN                                 0x6
#define _RXM1SIDL_SID1_POSITION                             0x6
#define _RXM1SIDL_SID1_SIZE                                 0x1
#define _RXM1SIDL_SID1_LENGTH                               0x1
#define _RXM1SIDL_SID1_MASK                                 0x40
#define _RXM1SIDL_SID2_POSN                                 0x7
#define _RXM1SIDL_SID2_POSITION                             0x7
#define _RXM1SIDL_SID2_SIZE                                 0x1
#define _RXM1SIDL_SID2_LENGTH                               0x1
#define _RXM1SIDL_SID2_MASK                                 0x80
#define _RXM1SIDL_RXM1EID16_POSN                            0x0
#define _RXM1SIDL_RXM1EID16_POSITION                        0x0
#define _RXM1SIDL_RXM1EID16_SIZE                            0x1
#define _RXM1SIDL_RXM1EID16_LENGTH                          0x1
#define _RXM1SIDL_RXM1EID16_MASK                            0x1
#define _RXM1SIDL_RXM1EID17_POSN                            0x1
#define _RXM1SIDL_RXM1EID17_POSITION                        0x1
#define _RXM1SIDL_RXM1EID17_SIZE                            0x1
#define _RXM1SIDL_RXM1EID17_LENGTH                          0x1
#define _RXM1SIDL_RXM1EID17_MASK                            0x2
#define _RXM1SIDL_RXM1EXIDEN_POSN                           0x3
#define _RXM1SIDL_RXM1EXIDEN_POSITION                       0x3
#define _RXM1SIDL_RXM1EXIDEN_SIZE                           0x1
#define _RXM1SIDL_RXM1EXIDEN_LENGTH                         0x1
#define _RXM1SIDL_RXM1EXIDEN_MASK                           0x8
#define _RXM1SIDL_RXM1SID0_POSN                             0x5
#define _RXM1SIDL_RXM1SID0_POSITION                         0x5
#define _RXM1SIDL_RXM1SID0_SIZE                             0x1
#define _RXM1SIDL_RXM1SID0_LENGTH                           0x1
#define _RXM1SIDL_RXM1SID0_MASK                             0x20
#define _RXM1SIDL_RXM1SID1_POSN                             0x6
#define _RXM1SIDL_RXM1SID1_POSITION                         0x6
#define _RXM1SIDL_RXM1SID1_SIZE                             0x1
#define _RXM1SIDL_RXM1SID1_LENGTH                           0x1
#define _RXM1SIDL_RXM1SID1_MASK                             0x40
#define _RXM1SIDL_RXM1SID2_POSN                             0x7
#define _RXM1SIDL_RXM1SID2_POSITION                         0x7
#define _RXM1SIDL_RXM1SID2_SIZE                             0x1
#define _RXM1SIDL_RXM1SID2_LENGTH                           0x1
#define _RXM1SIDL_RXM1SID2_MASK                             0x80

// Register: RXM1EIDH
#define RXM1EIDH RXM1EIDH
extern volatile unsigned char           RXM1EIDH            __at(0xF1E);
#ifndef _LIB_BUILD
asm("RXM1EIDH equ 0F1Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXM1EID8               :1;
        unsigned RXM1EID9               :1;
        unsigned RXM1EID10              :1;
        unsigned RXM1EID11              :1;
        unsigned RXM1EID12              :1;
        unsigned RXM1EID13              :1;
        unsigned RXM1EID14              :1;
        unsigned RXM1EID15              :1;
    };
} RXM1EIDHbits_t;
extern volatile RXM1EIDHbits_t RXM1EIDHbits __at(0xF1E);
// bitfield macros
#define _RXM1EIDH_EID8_POSN                                 0x0
#define _RXM1EIDH_EID8_POSITION                             0x0
#define _RXM1EIDH_EID8_SIZE                                 0x1
#define _RXM1EIDH_EID8_LENGTH                               0x1
#define _RXM1EIDH_EID8_MASK                                 0x1
#define _RXM1EIDH_EID9_POSN                                 0x1
#define _RXM1EIDH_EID9_POSITION                             0x1
#define _RXM1EIDH_EID9_SIZE                                 0x1
#define _RXM1EIDH_EID9_LENGTH                               0x1
#define _RXM1EIDH_EID9_MASK                                 0x2
#define _RXM1EIDH_EID10_POSN                                0x2
#define _RXM1EIDH_EID10_POSITION                            0x2
#define _RXM1EIDH_EID10_SIZE                                0x1
#define _RXM1EIDH_EID10_LENGTH                              0x1
#define _RXM1EIDH_EID10_MASK                                0x4
#define _RXM1EIDH_EID11_POSN                                0x3
#define _RXM1EIDH_EID11_POSITION                            0x3
#define _RXM1EIDH_EID11_SIZE                                0x1
#define _RXM1EIDH_EID11_LENGTH                              0x1
#define _RXM1EIDH_EID11_MASK                                0x8
#define _RXM1EIDH_EID12_POSN                                0x4
#define _RXM1EIDH_EID12_POSITION                            0x4
#define _RXM1EIDH_EID12_SIZE                                0x1
#define _RXM1EIDH_EID12_LENGTH                              0x1
#define _RXM1EIDH_EID12_MASK                                0x10
#define _RXM1EIDH_EID13_POSN                                0x5
#define _RXM1EIDH_EID13_POSITION                            0x5
#define _RXM1EIDH_EID13_SIZE                                0x1
#define _RXM1EIDH_EID13_LENGTH                              0x1
#define _RXM1EIDH_EID13_MASK                                0x20
#define _RXM1EIDH_EID14_POSN                                0x6
#define _RXM1EIDH_EID14_POSITION                            0x6
#define _RXM1EIDH_EID14_SIZE                                0x1
#define _RXM1EIDH_EID14_LENGTH                              0x1
#define _RXM1EIDH_EID14_MASK                                0x40
#define _RXM1EIDH_EID15_POSN                                0x7
#define _RXM1EIDH_EID15_POSITION                            0x7
#define _RXM1EIDH_EID15_SIZE                                0x1
#define _RXM1EIDH_EID15_LENGTH                              0x1
#define _RXM1EIDH_EID15_MASK                                0x80
#define _RXM1EIDH_RXM1EID8_POSN                             0x0
#define _RXM1EIDH_RXM1EID8_POSITION                         0x0
#define _RXM1EIDH_RXM1EID8_SIZE                             0x1
#define _RXM1EIDH_RXM1EID8_LENGTH                           0x1
#define _RXM1EIDH_RXM1EID8_MASK                             0x1
#define _RXM1EIDH_RXM1EID9_POSN                             0x1
#define _RXM1EIDH_RXM1EID9_POSITION                         0x1
#define _RXM1EIDH_RXM1EID9_SIZE                             0x1
#define _RXM1EIDH_RXM1EID9_LENGTH                           0x1
#define _RXM1EIDH_RXM1EID9_MASK                             0x2
#define _RXM1EIDH_RXM1EID10_POSN                            0x2
#define _RXM1EIDH_RXM1EID10_POSITION                        0x2
#define _RXM1EIDH_RXM1EID10_SIZE                            0x1
#define _RXM1EIDH_RXM1EID10_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID10_MASK                            0x4
#define _RXM1EIDH_RXM1EID11_POSN                            0x3
#define _RXM1EIDH_RXM1EID11_POSITION                        0x3
#define _RXM1EIDH_RXM1EID11_SIZE                            0x1
#define _RXM1EIDH_RXM1EID11_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID11_MASK                            0x8
#define _RXM1EIDH_RXM1EID12_POSN                            0x4
#define _RXM1EIDH_RXM1EID12_POSITION                        0x4
#define _RXM1EIDH_RXM1EID12_SIZE                            0x1
#define _RXM1EIDH_RXM1EID12_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID12_MASK                            0x10
#define _RXM1EIDH_RXM1EID13_POSN                            0x5
#define _RXM1EIDH_RXM1EID13_POSITION                        0x5
#define _RXM1EIDH_RXM1EID13_SIZE                            0x1
#define _RXM1EIDH_RXM1EID13_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID13_MASK                            0x20
#define _RXM1EIDH_RXM1EID14_POSN                            0x6
#define _RXM1EIDH_RXM1EID14_POSITION                        0x6
#define _RXM1EIDH_RXM1EID14_SIZE                            0x1
#define _RXM1EIDH_RXM1EID14_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID14_MASK                            0x40
#define _RXM1EIDH_RXM1EID15_POSN                            0x7
#define _RXM1EIDH_RXM1EID15_POSITION                        0x7
#define _RXM1EIDH_RXM1EID15_SIZE                            0x1
#define _RXM1EIDH_RXM1EID15_LENGTH                          0x1
#define _RXM1EIDH_RXM1EID15_MASK                            0x80

// Register: RXM1EIDL
#define RXM1EIDL RXM1EIDL
extern volatile unsigned char           RXM1EIDL            __at(0xF1F);
#ifndef _LIB_BUILD
asm("RXM1EIDL equ 0F1Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXM1EID0               :1;
        unsigned RXM1EID1               :1;
        unsigned RXM1EID2               :1;
        unsigned RXM1EID3               :1;
        unsigned RXM1EID4               :1;
        unsigned RXM1EID5               :1;
        unsigned RXM1EID6               :1;
        unsigned RXM1EID7               :1;
    };
} RXM1EIDLbits_t;
extern volatile RXM1EIDLbits_t RXM1EIDLbits __at(0xF1F);
// bitfield macros
#define _RXM1EIDL_EID0_POSN                                 0x0
#define _RXM1EIDL_EID0_POSITION                             0x0
#define _RXM1EIDL_EID0_SIZE                                 0x1
#define _RXM1EIDL_EID0_LENGTH                               0x1
#define _RXM1EIDL_EID0_MASK                                 0x1
#define _RXM1EIDL_EID1_POSN                                 0x1
#define _RXM1EIDL_EID1_POSITION                             0x1
#define _RXM1EIDL_EID1_SIZE                                 0x1
#define _RXM1EIDL_EID1_LENGTH                               0x1
#define _RXM1EIDL_EID1_MASK                                 0x2
#define _RXM1EIDL_EID2_POSN                                 0x2
#define _RXM1EIDL_EID2_POSITION                             0x2
#define _RXM1EIDL_EID2_SIZE                                 0x1
#define _RXM1EIDL_EID2_LENGTH                               0x1
#define _RXM1EIDL_EID2_MASK                                 0x4
#define _RXM1EIDL_EID3_POSN                                 0x3
#define _RXM1EIDL_EID3_POSITION                             0x3
#define _RXM1EIDL_EID3_SIZE                                 0x1
#define _RXM1EIDL_EID3_LENGTH                               0x1
#define _RXM1EIDL_EID3_MASK                                 0x8
#define _RXM1EIDL_EID4_POSN                                 0x4
#define _RXM1EIDL_EID4_POSITION                             0x4
#define _RXM1EIDL_EID4_SIZE                                 0x1
#define _RXM1EIDL_EID4_LENGTH                               0x1
#define _RXM1EIDL_EID4_MASK                                 0x10
#define _RXM1EIDL_EID5_POSN                                 0x5
#define _RXM1EIDL_EID5_POSITION                             0x5
#define _RXM1EIDL_EID5_SIZE                                 0x1
#define _RXM1EIDL_EID5_LENGTH                               0x1
#define _RXM1EIDL_EID5_MASK                                 0x20
#define _RXM1EIDL_EID6_POSN                                 0x6
#define _RXM1EIDL_EID6_POSITION                             0x6
#define _RXM1EIDL_EID6_SIZE                                 0x1
#define _RXM1EIDL_EID6_LENGTH                               0x1
#define _RXM1EIDL_EID6_MASK                                 0x40
#define _RXM1EIDL_EID7_POSN                                 0x7
#define _RXM1EIDL_EID7_POSITION                             0x7
#define _RXM1EIDL_EID7_SIZE                                 0x1
#define _RXM1EIDL_EID7_LENGTH                               0x1
#define _RXM1EIDL_EID7_MASK                                 0x80
#define _RXM1EIDL_RXM1EID0_POSN                             0x0
#define _RXM1EIDL_RXM1EID0_POSITION                         0x0
#define _RXM1EIDL_RXM1EID0_SIZE                             0x1
#define _RXM1EIDL_RXM1EID0_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID0_MASK                             0x1
#define _RXM1EIDL_RXM1EID1_POSN                             0x1
#define _RXM1EIDL_RXM1EID1_POSITION                         0x1
#define _RXM1EIDL_RXM1EID1_SIZE                             0x1
#define _RXM1EIDL_RXM1EID1_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID1_MASK                             0x2
#define _RXM1EIDL_RXM1EID2_POSN                             0x2
#define _RXM1EIDL_RXM1EID2_POSITION                         0x2
#define _RXM1EIDL_RXM1EID2_SIZE                             0x1
#define _RXM1EIDL_RXM1EID2_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID2_MASK                             0x4
#define _RXM1EIDL_RXM1EID3_POSN                             0x3
#define _RXM1EIDL_RXM1EID3_POSITION                         0x3
#define _RXM1EIDL_RXM1EID3_SIZE                             0x1
#define _RXM1EIDL_RXM1EID3_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID3_MASK                             0x8
#define _RXM1EIDL_RXM1EID4_POSN                             0x4
#define _RXM1EIDL_RXM1EID4_POSITION                         0x4
#define _RXM1EIDL_RXM1EID4_SIZE                             0x1
#define _RXM1EIDL_RXM1EID4_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID4_MASK                             0x10
#define _RXM1EIDL_RXM1EID5_POSN                             0x5
#define _RXM1EIDL_RXM1EID5_POSITION                         0x5
#define _RXM1EIDL_RXM1EID5_SIZE                             0x1
#define _RXM1EIDL_RXM1EID5_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID5_MASK                             0x20
#define _RXM1EIDL_RXM1EID6_POSN                             0x6
#define _RXM1EIDL_RXM1EID6_POSITION                         0x6
#define _RXM1EIDL_RXM1EID6_SIZE                             0x1
#define _RXM1EIDL_RXM1EID6_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID6_MASK                             0x40
#define _RXM1EIDL_RXM1EID7_POSN                             0x7
#define _RXM1EIDL_RXM1EID7_POSITION                         0x7
#define _RXM1EIDL_RXM1EID7_SIZE                             0x1
#define _RXM1EIDL_RXM1EID7_LENGTH                           0x1
#define _RXM1EIDL_RXM1EID7_MASK                             0x80

// Register: TXB2CON
#define TXB2CON TXB2CON
extern volatile unsigned char           TXB2CON             __at(0xF20);
#ifndef _LIB_BUILD
asm("TXB2CON equ 0F20h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned                        :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
        unsigned TXBIF                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned TXBIFBXB2CON           :1;
    };
    struct {
        unsigned TXB2PRI0               :1;
        unsigned TXB2PRI1               :1;
        unsigned                        :1;
        unsigned TXB2REQ                :1;
        unsigned TXB2ERR                :1;
        unsigned TXB2LARB               :1;
        unsigned TXB2ABT                :1;
        unsigned TX2IF                  :1;
    };
} TXB2CONbits_t;
extern volatile TXB2CONbits_t TXB2CONbits __at(0xF20);
// bitfield macros
#define _TXB2CON_TXPRI0_POSN                                0x0
#define _TXB2CON_TXPRI0_POSITION                            0x0
#define _TXB2CON_TXPRI0_SIZE                                0x1
#define _TXB2CON_TXPRI0_LENGTH                              0x1
#define _TXB2CON_TXPRI0_MASK                                0x1
#define _TXB2CON_TXPRI1_POSN                                0x1
#define _TXB2CON_TXPRI1_POSITION                            0x1
#define _TXB2CON_TXPRI1_SIZE                                0x1
#define _TXB2CON_TXPRI1_LENGTH                              0x1
#define _TXB2CON_TXPRI1_MASK                                0x2
#define _TXB2CON_TXREQ_POSN                                 0x3
#define _TXB2CON_TXREQ_POSITION                             0x3
#define _TXB2CON_TXREQ_SIZE                                 0x1
#define _TXB2CON_TXREQ_LENGTH                               0x1
#define _TXB2CON_TXREQ_MASK                                 0x8
#define _TXB2CON_TXERR_POSN                                 0x4
#define _TXB2CON_TXERR_POSITION                             0x4
#define _TXB2CON_TXERR_SIZE                                 0x1
#define _TXB2CON_TXERR_LENGTH                               0x1
#define _TXB2CON_TXERR_MASK                                 0x10
#define _TXB2CON_TXLARB_POSN                                0x5
#define _TXB2CON_TXLARB_POSITION                            0x5
#define _TXB2CON_TXLARB_SIZE                                0x1
#define _TXB2CON_TXLARB_LENGTH                              0x1
#define _TXB2CON_TXLARB_MASK                                0x20
#define _TXB2CON_TXABT_POSN                                 0x6
#define _TXB2CON_TXABT_POSITION                             0x6
#define _TXB2CON_TXABT_SIZE                                 0x1
#define _TXB2CON_TXABT_LENGTH                               0x1
#define _TXB2CON_TXABT_MASK                                 0x40
#define _TXB2CON_TXBIF_POSN                                 0x7
#define _TXB2CON_TXBIF_POSITION                             0x7
#define _TXB2CON_TXBIF_SIZE                                 0x1
#define _TXB2CON_TXBIF_LENGTH                               0x1
#define _TXB2CON_TXBIF_MASK                                 0x80
#define _TXB2CON_TXBIFBXB2CON_POSN                          0x7
#define _TXB2CON_TXBIFBXB2CON_POSITION                      0x7
#define _TXB2CON_TXBIFBXB2CON_SIZE                          0x1
#define _TXB2CON_TXBIFBXB2CON_LENGTH                        0x1
#define _TXB2CON_TXBIFBXB2CON_MASK                          0x80
#define _TXB2CON_TXB2PRI0_POSN                              0x0
#define _TXB2CON_TXB2PRI0_POSITION                          0x0
#define _TXB2CON_TXB2PRI0_SIZE                              0x1
#define _TXB2CON_TXB2PRI0_LENGTH                            0x1
#define _TXB2CON_TXB2PRI0_MASK                              0x1
#define _TXB2CON_TXB2PRI1_POSN                              0x1
#define _TXB2CON_TXB2PRI1_POSITION                          0x1
#define _TXB2CON_TXB2PRI1_SIZE                              0x1
#define _TXB2CON_TXB2PRI1_LENGTH                            0x1
#define _TXB2CON_TXB2PRI1_MASK                              0x2
#define _TXB2CON_TXB2REQ_POSN                               0x3
#define _TXB2CON_TXB2REQ_POSITION                           0x3
#define _TXB2CON_TXB2REQ_SIZE                               0x1
#define _TXB2CON_TXB2REQ_LENGTH                             0x1
#define _TXB2CON_TXB2REQ_MASK                               0x8
#define _TXB2CON_TXB2ERR_POSN                               0x4
#define _TXB2CON_TXB2ERR_POSITION                           0x4
#define _TXB2CON_TXB2ERR_SIZE                               0x1
#define _TXB2CON_TXB2ERR_LENGTH                             0x1
#define _TXB2CON_TXB2ERR_MASK                               0x10
#define _TXB2CON_TXB2LARB_POSN                              0x5
#define _TXB2CON_TXB2LARB_POSITION                          0x5
#define _TXB2CON_TXB2LARB_SIZE                              0x1
#define _TXB2CON_TXB2LARB_LENGTH                            0x1
#define _TXB2CON_TXB2LARB_MASK                              0x20
#define _TXB2CON_TXB2ABT_POSN                               0x6
#define _TXB2CON_TXB2ABT_POSITION                           0x6
#define _TXB2CON_TXB2ABT_SIZE                               0x1
#define _TXB2CON_TXB2ABT_LENGTH                             0x1
#define _TXB2CON_TXB2ABT_MASK                               0x40
#define _TXB2CON_TX2IF_POSN                                 0x7
#define _TXB2CON_TX2IF_POSITION                             0x7
#define _TXB2CON_TX2IF_SIZE                                 0x1
#define _TXB2CON_TX2IF_LENGTH                               0x1
#define _TXB2CON_TX2IF_MASK                                 0x80

// Register: TXB2SIDH
#define TXB2SIDH TXB2SIDH
extern volatile unsigned char           TXB2SIDH            __at(0xF21);
#ifndef _LIB_BUILD
asm("TXB2SIDH equ 0F21h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned TXB2SID3               :1;
        unsigned TXB2SID4               :1;
        unsigned TXB2SID5               :1;
        unsigned TXB2SID6               :1;
        unsigned TXB2SID7               :1;
        unsigned TXB2SID8               :1;
        unsigned TXB2SID9               :1;
        unsigned TXB2SID10              :1;
    };
} TXB2SIDHbits_t;
extern volatile TXB2SIDHbits_t TXB2SIDHbits __at(0xF21);
// bitfield macros
#define _TXB2SIDH_SID3_POSN                                 0x0
#define _TXB2SIDH_SID3_POSITION                             0x0
#define _TXB2SIDH_SID3_SIZE                                 0x1
#define _TXB2SIDH_SID3_LENGTH                               0x1
#define _TXB2SIDH_SID3_MASK                                 0x1
#define _TXB2SIDH_SID4_POSN                                 0x1
#define _TXB2SIDH_SID4_POSITION                             0x1
#define _TXB2SIDH_SID4_SIZE                                 0x1
#define _TXB2SIDH_SID4_LENGTH                               0x1
#define _TXB2SIDH_SID4_MASK                                 0x2
#define _TXB2SIDH_SID5_POSN                                 0x2
#define _TXB2SIDH_SID5_POSITION                             0x2
#define _TXB2SIDH_SID5_SIZE                                 0x1
#define _TXB2SIDH_SID5_LENGTH                               0x1
#define _TXB2SIDH_SID5_MASK                                 0x4
#define _TXB2SIDH_SID6_POSN                                 0x3
#define _TXB2SIDH_SID6_POSITION                             0x3
#define _TXB2SIDH_SID6_SIZE                                 0x1
#define _TXB2SIDH_SID6_LENGTH                               0x1
#define _TXB2SIDH_SID6_MASK                                 0x8
#define _TXB2SIDH_SID7_POSN                                 0x4
#define _TXB2SIDH_SID7_POSITION                             0x4
#define _TXB2SIDH_SID7_SIZE                                 0x1
#define _TXB2SIDH_SID7_LENGTH                               0x1
#define _TXB2SIDH_SID7_MASK                                 0x10
#define _TXB2SIDH_SID8_POSN                                 0x5
#define _TXB2SIDH_SID8_POSITION                             0x5
#define _TXB2SIDH_SID8_SIZE                                 0x1
#define _TXB2SIDH_SID8_LENGTH                               0x1
#define _TXB2SIDH_SID8_MASK                                 0x20
#define _TXB2SIDH_SID9_POSN                                 0x6
#define _TXB2SIDH_SID9_POSITION                             0x6
#define _TXB2SIDH_SID9_SIZE                                 0x1
#define _TXB2SIDH_SID9_LENGTH                               0x1
#define _TXB2SIDH_SID9_MASK                                 0x40
#define _TXB2SIDH_SID10_POSN                                0x7
#define _TXB2SIDH_SID10_POSITION                            0x7
#define _TXB2SIDH_SID10_SIZE                                0x1
#define _TXB2SIDH_SID10_LENGTH                              0x1
#define _TXB2SIDH_SID10_MASK                                0x80
#define _TXB2SIDH_TXB2SID3_POSN                             0x0
#define _TXB2SIDH_TXB2SID3_POSITION                         0x0
#define _TXB2SIDH_TXB2SID3_SIZE                             0x1
#define _TXB2SIDH_TXB2SID3_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID3_MASK                             0x1
#define _TXB2SIDH_TXB2SID4_POSN                             0x1
#define _TXB2SIDH_TXB2SID4_POSITION                         0x1
#define _TXB2SIDH_TXB2SID4_SIZE                             0x1
#define _TXB2SIDH_TXB2SID4_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID4_MASK                             0x2
#define _TXB2SIDH_TXB2SID5_POSN                             0x2
#define _TXB2SIDH_TXB2SID5_POSITION                         0x2
#define _TXB2SIDH_TXB2SID5_SIZE                             0x1
#define _TXB2SIDH_TXB2SID5_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID5_MASK                             0x4
#define _TXB2SIDH_TXB2SID6_POSN                             0x3
#define _TXB2SIDH_TXB2SID6_POSITION                         0x3
#define _TXB2SIDH_TXB2SID6_SIZE                             0x1
#define _TXB2SIDH_TXB2SID6_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID6_MASK                             0x8
#define _TXB2SIDH_TXB2SID7_POSN                             0x4
#define _TXB2SIDH_TXB2SID7_POSITION                         0x4
#define _TXB2SIDH_TXB2SID7_SIZE                             0x1
#define _TXB2SIDH_TXB2SID7_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID7_MASK                             0x10
#define _TXB2SIDH_TXB2SID8_POSN                             0x5
#define _TXB2SIDH_TXB2SID8_POSITION                         0x5
#define _TXB2SIDH_TXB2SID8_SIZE                             0x1
#define _TXB2SIDH_TXB2SID8_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID8_MASK                             0x20
#define _TXB2SIDH_TXB2SID9_POSN                             0x6
#define _TXB2SIDH_TXB2SID9_POSITION                         0x6
#define _TXB2SIDH_TXB2SID9_SIZE                             0x1
#define _TXB2SIDH_TXB2SID9_LENGTH                           0x1
#define _TXB2SIDH_TXB2SID9_MASK                             0x40
#define _TXB2SIDH_TXB2SID10_POSN                            0x7
#define _TXB2SIDH_TXB2SID10_POSITION                        0x7
#define _TXB2SIDH_TXB2SID10_SIZE                            0x1
#define _TXB2SIDH_TXB2SID10_LENGTH                          0x1
#define _TXB2SIDH_TXB2SID10_MASK                            0x80

// Register: TXB2SIDL
#define TXB2SIDL TXB2SIDL
extern volatile unsigned char           TXB2SIDL            __at(0xF22);
#ifndef _LIB_BUILD
asm("TXB2SIDL equ 0F22h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDE                  :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned TXB2EID16              :1;
        unsigned TXB2EID17              :1;
        unsigned                        :1;
        unsigned TXB2EXIDE              :1;
        unsigned                        :1;
        unsigned TXB2SID0               :1;
        unsigned TXB2SID1               :1;
        unsigned TXB2SID2               :1;
    };
} TXB2SIDLbits_t;
extern volatile TXB2SIDLbits_t TXB2SIDLbits __at(0xF22);
// bitfield macros
#define _TXB2SIDL_EID16_POSN                                0x0
#define _TXB2SIDL_EID16_POSITION                            0x0
#define _TXB2SIDL_EID16_SIZE                                0x1
#define _TXB2SIDL_EID16_LENGTH                              0x1
#define _TXB2SIDL_EID16_MASK                                0x1
#define _TXB2SIDL_EID17_POSN                                0x1
#define _TXB2SIDL_EID17_POSITION                            0x1
#define _TXB2SIDL_EID17_SIZE                                0x1
#define _TXB2SIDL_EID17_LENGTH                              0x1
#define _TXB2SIDL_EID17_MASK                                0x2
#define _TXB2SIDL_EXIDE_POSN                                0x3
#define _TXB2SIDL_EXIDE_POSITION                            0x3
#define _TXB2SIDL_EXIDE_SIZE                                0x1
#define _TXB2SIDL_EXIDE_LENGTH                              0x1
#define _TXB2SIDL_EXIDE_MASK                                0x8
#define _TXB2SIDL_SID0_POSN                                 0x5
#define _TXB2SIDL_SID0_POSITION                             0x5
#define _TXB2SIDL_SID0_SIZE                                 0x1
#define _TXB2SIDL_SID0_LENGTH                               0x1
#define _TXB2SIDL_SID0_MASK                                 0x20
#define _TXB2SIDL_SID1_POSN                                 0x6
#define _TXB2SIDL_SID1_POSITION                             0x6
#define _TXB2SIDL_SID1_SIZE                                 0x1
#define _TXB2SIDL_SID1_LENGTH                               0x1
#define _TXB2SIDL_SID1_MASK                                 0x40
#define _TXB2SIDL_SID2_POSN                                 0x7
#define _TXB2SIDL_SID2_POSITION                             0x7
#define _TXB2SIDL_SID2_SIZE                                 0x1
#define _TXB2SIDL_SID2_LENGTH                               0x1
#define _TXB2SIDL_SID2_MASK                                 0x80
#define _TXB2SIDL_TXB2EID16_POSN                            0x0
#define _TXB2SIDL_TXB2EID16_POSITION                        0x0
#define _TXB2SIDL_TXB2EID16_SIZE                            0x1
#define _TXB2SIDL_TXB2EID16_LENGTH                          0x1
#define _TXB2SIDL_TXB2EID16_MASK                            0x1
#define _TXB2SIDL_TXB2EID17_POSN                            0x1
#define _TXB2SIDL_TXB2EID17_POSITION                        0x1
#define _TXB2SIDL_TXB2EID17_SIZE                            0x1
#define _TXB2SIDL_TXB2EID17_LENGTH                          0x1
#define _TXB2SIDL_TXB2EID17_MASK                            0x2
#define _TXB2SIDL_TXB2EXIDE_POSN                            0x3
#define _TXB2SIDL_TXB2EXIDE_POSITION                        0x3
#define _TXB2SIDL_TXB2EXIDE_SIZE                            0x1
#define _TXB2SIDL_TXB2EXIDE_LENGTH                          0x1
#define _TXB2SIDL_TXB2EXIDE_MASK                            0x8
#define _TXB2SIDL_TXB2SID0_POSN                             0x5
#define _TXB2SIDL_TXB2SID0_POSITION                         0x5
#define _TXB2SIDL_TXB2SID0_SIZE                             0x1
#define _TXB2SIDL_TXB2SID0_LENGTH                           0x1
#define _TXB2SIDL_TXB2SID0_MASK                             0x20
#define _TXB2SIDL_TXB2SID1_POSN                             0x6
#define _TXB2SIDL_TXB2SID1_POSITION                         0x6
#define _TXB2SIDL_TXB2SID1_SIZE                             0x1
#define _TXB2SIDL_TXB2SID1_LENGTH                           0x1
#define _TXB2SIDL_TXB2SID1_MASK                             0x40
#define _TXB2SIDL_TXB2SID2_POSN                             0x7
#define _TXB2SIDL_TXB2SID2_POSITION                         0x7
#define _TXB2SIDL_TXB2SID2_SIZE                             0x1
#define _TXB2SIDL_TXB2SID2_LENGTH                           0x1
#define _TXB2SIDL_TXB2SID2_MASK                             0x80

// Register: TXB2EIDH
#define TXB2EIDH TXB2EIDH
extern volatile unsigned char           TXB2EIDH            __at(0xF23);
#ifndef _LIB_BUILD
asm("TXB2EIDH equ 0F23h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned TXB2EID8               :1;
        unsigned TXB2EID9               :1;
        unsigned TXB2EID10              :1;
        unsigned TXB2EID11              :1;
        unsigned TXB2EID12              :1;
        unsigned TXB2EID13              :1;
        unsigned TXB2EID14              :1;
        unsigned TXB2EID15              :1;
    };
} TXB2EIDHbits_t;
extern volatile TXB2EIDHbits_t TXB2EIDHbits __at(0xF23);
// bitfield macros
#define _TXB2EIDH_EID8_POSN                                 0x0
#define _TXB2EIDH_EID8_POSITION                             0x0
#define _TXB2EIDH_EID8_SIZE                                 0x1
#define _TXB2EIDH_EID8_LENGTH                               0x1
#define _TXB2EIDH_EID8_MASK                                 0x1
#define _TXB2EIDH_EID9_POSN                                 0x1
#define _TXB2EIDH_EID9_POSITION                             0x1
#define _TXB2EIDH_EID9_SIZE                                 0x1
#define _TXB2EIDH_EID9_LENGTH                               0x1
#define _TXB2EIDH_EID9_MASK                                 0x2
#define _TXB2EIDH_EID10_POSN                                0x2
#define _TXB2EIDH_EID10_POSITION                            0x2
#define _TXB2EIDH_EID10_SIZE                                0x1
#define _TXB2EIDH_EID10_LENGTH                              0x1
#define _TXB2EIDH_EID10_MASK                                0x4
#define _TXB2EIDH_EID11_POSN                                0x3
#define _TXB2EIDH_EID11_POSITION                            0x3
#define _TXB2EIDH_EID11_SIZE                                0x1
#define _TXB2EIDH_EID11_LENGTH                              0x1
#define _TXB2EIDH_EID11_MASK                                0x8
#define _TXB2EIDH_EID12_POSN                                0x4
#define _TXB2EIDH_EID12_POSITION                            0x4
#define _TXB2EIDH_EID12_SIZE                                0x1
#define _TXB2EIDH_EID12_LENGTH                              0x1
#define _TXB2EIDH_EID12_MASK                                0x10
#define _TXB2EIDH_EID13_POSN                                0x5
#define _TXB2EIDH_EID13_POSITION                            0x5
#define _TXB2EIDH_EID13_SIZE                                0x1
#define _TXB2EIDH_EID13_LENGTH                              0x1
#define _TXB2EIDH_EID13_MASK                                0x20
#define _TXB2EIDH_EID14_POSN                                0x6
#define _TXB2EIDH_EID14_POSITION                            0x6
#define _TXB2EIDH_EID14_SIZE                                0x1
#define _TXB2EIDH_EID14_LENGTH                              0x1
#define _TXB2EIDH_EID14_MASK                                0x40
#define _TXB2EIDH_EID15_POSN                                0x7
#define _TXB2EIDH_EID15_POSITION                            0x7
#define _TXB2EIDH_EID15_SIZE                                0x1
#define _TXB2EIDH_EID15_LENGTH                              0x1
#define _TXB2EIDH_EID15_MASK                                0x80
#define _TXB2EIDH_TXB2EID8_POSN                             0x0
#define _TXB2EIDH_TXB2EID8_POSITION                         0x0
#define _TXB2EIDH_TXB2EID8_SIZE                             0x1
#define _TXB2EIDH_TXB2EID8_LENGTH                           0x1
#define _TXB2EIDH_TXB2EID8_MASK                             0x1
#define _TXB2EIDH_TXB2EID9_POSN                             0x1
#define _TXB2EIDH_TXB2EID9_POSITION                         0x1
#define _TXB2EIDH_TXB2EID9_SIZE                             0x1
#define _TXB2EIDH_TXB2EID9_LENGTH                           0x1
#define _TXB2EIDH_TXB2EID9_MASK                             0x2
#define _TXB2EIDH_TXB2EID10_POSN                            0x2
#define _TXB2EIDH_TXB2EID10_POSITION                        0x2
#define _TXB2EIDH_TXB2EID10_SIZE                            0x1
#define _TXB2EIDH_TXB2EID10_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID10_MASK                            0x4
#define _TXB2EIDH_TXB2EID11_POSN                            0x3
#define _TXB2EIDH_TXB2EID11_POSITION                        0x3
#define _TXB2EIDH_TXB2EID11_SIZE                            0x1
#define _TXB2EIDH_TXB2EID11_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID11_MASK                            0x8
#define _TXB2EIDH_TXB2EID12_POSN                            0x4
#define _TXB2EIDH_TXB2EID12_POSITION                        0x4
#define _TXB2EIDH_TXB2EID12_SIZE                            0x1
#define _TXB2EIDH_TXB2EID12_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID12_MASK                            0x10
#define _TXB2EIDH_TXB2EID13_POSN                            0x5
#define _TXB2EIDH_TXB2EID13_POSITION                        0x5
#define _TXB2EIDH_TXB2EID13_SIZE                            0x1
#define _TXB2EIDH_TXB2EID13_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID13_MASK                            0x20
#define _TXB2EIDH_TXB2EID14_POSN                            0x6
#define _TXB2EIDH_TXB2EID14_POSITION                        0x6
#define _TXB2EIDH_TXB2EID14_SIZE                            0x1
#define _TXB2EIDH_TXB2EID14_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID14_MASK                            0x40
#define _TXB2EIDH_TXB2EID15_POSN                            0x7
#define _TXB2EIDH_TXB2EID15_POSITION                        0x7
#define _TXB2EIDH_TXB2EID15_SIZE                            0x1
#define _TXB2EIDH_TXB2EID15_LENGTH                          0x1
#define _TXB2EIDH_TXB2EID15_MASK                            0x80

// Register: TXB2EIDL
#define TXB2EIDL TXB2EIDL
extern volatile unsigned char           TXB2EIDL            __at(0xF24);
#ifndef _LIB_BUILD
asm("TXB2EIDL equ 0F24h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned TXB2EID0               :1;
        unsigned TXB2EID1               :1;
        unsigned TXB2EID2               :1;
        unsigned TXB2EID3               :1;
        unsigned TXB2EID4               :1;
        unsigned TXB2EID5               :1;
        unsigned TXB2EID6               :1;
        unsigned TXB2EID7               :1;
    };
} TXB2EIDLbits_t;
extern volatile TXB2EIDLbits_t TXB2EIDLbits __at(0xF24);
// bitfield macros
#define _TXB2EIDL_EID0_POSN                                 0x0
#define _TXB2EIDL_EID0_POSITION                             0x0
#define _TXB2EIDL_EID0_SIZE                                 0x1
#define _TXB2EIDL_EID0_LENGTH                               0x1
#define _TXB2EIDL_EID0_MASK                                 0x1
#define _TXB2EIDL_EID1_POSN                                 0x1
#define _TXB2EIDL_EID1_POSITION                             0x1
#define _TXB2EIDL_EID1_SIZE                                 0x1
#define _TXB2EIDL_EID1_LENGTH                               0x1
#define _TXB2EIDL_EID1_MASK                                 0x2
#define _TXB2EIDL_EID2_POSN                                 0x2
#define _TXB2EIDL_EID2_POSITION                             0x2
#define _TXB2EIDL_EID2_SIZE                                 0x1
#define _TXB2EIDL_EID2_LENGTH                               0x1
#define _TXB2EIDL_EID2_MASK                                 0x4
#define _TXB2EIDL_EID3_POSN                                 0x3
#define _TXB2EIDL_EID3_POSITION                             0x3
#define _TXB2EIDL_EID3_SIZE                                 0x1
#define _TXB2EIDL_EID3_LENGTH                               0x1
#define _TXB2EIDL_EID3_MASK                                 0x8
#define _TXB2EIDL_EID4_POSN                                 0x4
#define _TXB2EIDL_EID4_POSITION                             0x4
#define _TXB2EIDL_EID4_SIZE                                 0x1
#define _TXB2EIDL_EID4_LENGTH                               0x1
#define _TXB2EIDL_EID4_MASK                                 0x10
#define _TXB2EIDL_EID5_POSN                                 0x5
#define _TXB2EIDL_EID5_POSITION                             0x5
#define _TXB2EIDL_EID5_SIZE                                 0x1
#define _TXB2EIDL_EID5_LENGTH                               0x1
#define _TXB2EIDL_EID5_MASK                                 0x20
#define _TXB2EIDL_EID6_POSN                                 0x6
#define _TXB2EIDL_EID6_POSITION                             0x6
#define _TXB2EIDL_EID6_SIZE                                 0x1
#define _TXB2EIDL_EID6_LENGTH                               0x1
#define _TXB2EIDL_EID6_MASK                                 0x40
#define _TXB2EIDL_EID7_POSN                                 0x7
#define _TXB2EIDL_EID7_POSITION                             0x7
#define _TXB2EIDL_EID7_SIZE                                 0x1
#define _TXB2EIDL_EID7_LENGTH                               0x1
#define _TXB2EIDL_EID7_MASK                                 0x80
#define _TXB2EIDL_TXB2EID0_POSN                             0x0
#define _TXB2EIDL_TXB2EID0_POSITION                         0x0
#define _TXB2EIDL_TXB2EID0_SIZE                             0x1
#define _TXB2EIDL_TXB2EID0_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID0_MASK                             0x1
#define _TXB2EIDL_TXB2EID1_POSN                             0x1
#define _TXB2EIDL_TXB2EID1_POSITION                         0x1
#define _TXB2EIDL_TXB2EID1_SIZE                             0x1
#define _TXB2EIDL_TXB2EID1_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID1_MASK                             0x2
#define _TXB2EIDL_TXB2EID2_POSN                             0x2
#define _TXB2EIDL_TXB2EID2_POSITION                         0x2
#define _TXB2EIDL_TXB2EID2_SIZE                             0x1
#define _TXB2EIDL_TXB2EID2_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID2_MASK                             0x4
#define _TXB2EIDL_TXB2EID3_POSN                             0x3
#define _TXB2EIDL_TXB2EID3_POSITION                         0x3
#define _TXB2EIDL_TXB2EID3_SIZE                             0x1
#define _TXB2EIDL_TXB2EID3_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID3_MASK                             0x8
#define _TXB2EIDL_TXB2EID4_POSN                             0x4
#define _TXB2EIDL_TXB2EID4_POSITION                         0x4
#define _TXB2EIDL_TXB2EID4_SIZE                             0x1
#define _TXB2EIDL_TXB2EID4_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID4_MASK                             0x10
#define _TXB2EIDL_TXB2EID5_POSN                             0x5
#define _TXB2EIDL_TXB2EID5_POSITION                         0x5
#define _TXB2EIDL_TXB2EID5_SIZE                             0x1
#define _TXB2EIDL_TXB2EID5_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID5_MASK                             0x20
#define _TXB2EIDL_TXB2EID6_POSN                             0x6
#define _TXB2EIDL_TXB2EID6_POSITION                         0x6
#define _TXB2EIDL_TXB2EID6_SIZE                             0x1
#define _TXB2EIDL_TXB2EID6_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID6_MASK                             0x40
#define _TXB2EIDL_TXB2EID7_POSN                             0x7
#define _TXB2EIDL_TXB2EID7_POSITION                         0x7
#define _TXB2EIDL_TXB2EID7_SIZE                             0x1
#define _TXB2EIDL_TXB2EID7_LENGTH                           0x1
#define _TXB2EIDL_TXB2EID7_MASK                             0x80

// Register: TXB2DLC
#define TXB2DLC TXB2DLC
extern volatile unsigned char           TXB2DLC             __at(0xF25);
#ifndef _LIB_BUILD
asm("TXB2DLC equ 0F25h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned                        :2;
        unsigned TXRTR                  :1;
    };
    struct {
        unsigned TXB2DLC0               :1;
        unsigned TXB2DLC1               :1;
        unsigned TXB2DLC2               :1;
        unsigned TXB2DLC3               :1;
        unsigned                        :2;
        unsigned TXB2RTR                :1;
    };
} TXB2DLCbits_t;
extern volatile TXB2DLCbits_t TXB2DLCbits __at(0xF25);
// bitfield macros
#define _TXB2DLC_DLC0_POSN                                  0x0
#define _TXB2DLC_DLC0_POSITION                              0x0
#define _TXB2DLC_DLC0_SIZE                                  0x1
#define _TXB2DLC_DLC0_LENGTH                                0x1
#define _TXB2DLC_DLC0_MASK                                  0x1
#define _TXB2DLC_DLC1_POSN                                  0x1
#define _TXB2DLC_DLC1_POSITION                              0x1
#define _TXB2DLC_DLC1_SIZE                                  0x1
#define _TXB2DLC_DLC1_LENGTH                                0x1
#define _TXB2DLC_DLC1_MASK                                  0x2
#define _TXB2DLC_DLC2_POSN                                  0x2
#define _TXB2DLC_DLC2_POSITION                              0x2
#define _TXB2DLC_DLC2_SIZE                                  0x1
#define _TXB2DLC_DLC2_LENGTH                                0x1
#define _TXB2DLC_DLC2_MASK                                  0x4
#define _TXB2DLC_DLC3_POSN                                  0x3
#define _TXB2DLC_DLC3_POSITION                              0x3
#define _TXB2DLC_DLC3_SIZE                                  0x1
#define _TXB2DLC_DLC3_LENGTH                                0x1
#define _TXB2DLC_DLC3_MASK                                  0x8
#define _TXB2DLC_TXRTR_POSN                                 0x6
#define _TXB2DLC_TXRTR_POSITION                             0x6
#define _TXB2DLC_TXRTR_SIZE                                 0x1
#define _TXB2DLC_TXRTR_LENGTH                               0x1
#define _TXB2DLC_TXRTR_MASK                                 0x40
#define _TXB2DLC_TXB2DLC0_POSN                              0x0
#define _TXB2DLC_TXB2DLC0_POSITION                          0x0
#define _TXB2DLC_TXB2DLC0_SIZE                              0x1
#define _TXB2DLC_TXB2DLC0_LENGTH                            0x1
#define _TXB2DLC_TXB2DLC0_MASK                              0x1
#define _TXB2DLC_TXB2DLC1_POSN                              0x1
#define _TXB2DLC_TXB2DLC1_POSITION                          0x1
#define _TXB2DLC_TXB2DLC1_SIZE                              0x1
#define _TXB2DLC_TXB2DLC1_LENGTH                            0x1
#define _TXB2DLC_TXB2DLC1_MASK                              0x2
#define _TXB2DLC_TXB2DLC2_POSN                              0x2
#define _TXB2DLC_TXB2DLC2_POSITION                          0x2
#define _TXB2DLC_TXB2DLC2_SIZE                              0x1
#define _TXB2DLC_TXB2DLC2_LENGTH                            0x1
#define _TXB2DLC_TXB2DLC2_MASK                              0x4
#define _TXB2DLC_TXB2DLC3_POSN                              0x3
#define _TXB2DLC_TXB2DLC3_POSITION                          0x3
#define _TXB2DLC_TXB2DLC3_SIZE                              0x1
#define _TXB2DLC_TXB2DLC3_LENGTH                            0x1
#define _TXB2DLC_TXB2DLC3_MASK                              0x8
#define _TXB2DLC_TXB2RTR_POSN                               0x6
#define _TXB2DLC_TXB2RTR_POSITION                           0x6
#define _TXB2DLC_TXB2RTR_SIZE                               0x1
#define _TXB2DLC_TXB2RTR_LENGTH                             0x1
#define _TXB2DLC_TXB2RTR_MASK                               0x40

// Register: TXB2D0
#define TXB2D0 TXB2D0
extern volatile unsigned char           TXB2D0              __at(0xF26);
#ifndef _LIB_BUILD
asm("TXB2D0 equ 0F26h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D00                :1;
        unsigned TXB2D01                :1;
        unsigned TXB2D02                :1;
        unsigned TXB2D03                :1;
        unsigned TXB2D04                :1;
        unsigned TXB2D05                :1;
        unsigned TXB2D06                :1;
        unsigned TXB2D07                :1;
    };
} TXB2D0bits_t;
extern volatile TXB2D0bits_t TXB2D0bits __at(0xF26);
// bitfield macros
#define _TXB2D0_TXB2D00_POSN                                0x0
#define _TXB2D0_TXB2D00_POSITION                            0x0
#define _TXB2D0_TXB2D00_SIZE                                0x1
#define _TXB2D0_TXB2D00_LENGTH                              0x1
#define _TXB2D0_TXB2D00_MASK                                0x1
#define _TXB2D0_TXB2D01_POSN                                0x1
#define _TXB2D0_TXB2D01_POSITION                            0x1
#define _TXB2D0_TXB2D01_SIZE                                0x1
#define _TXB2D0_TXB2D01_LENGTH                              0x1
#define _TXB2D0_TXB2D01_MASK                                0x2
#define _TXB2D0_TXB2D02_POSN                                0x2
#define _TXB2D0_TXB2D02_POSITION                            0x2
#define _TXB2D0_TXB2D02_SIZE                                0x1
#define _TXB2D0_TXB2D02_LENGTH                              0x1
#define _TXB2D0_TXB2D02_MASK                                0x4
#define _TXB2D0_TXB2D03_POSN                                0x3
#define _TXB2D0_TXB2D03_POSITION                            0x3
#define _TXB2D0_TXB2D03_SIZE                                0x1
#define _TXB2D0_TXB2D03_LENGTH                              0x1
#define _TXB2D0_TXB2D03_MASK                                0x8
#define _TXB2D0_TXB2D04_POSN                                0x4
#define _TXB2D0_TXB2D04_POSITION                            0x4
#define _TXB2D0_TXB2D04_SIZE                                0x1
#define _TXB2D0_TXB2D04_LENGTH                              0x1
#define _TXB2D0_TXB2D04_MASK                                0x10
#define _TXB2D0_TXB2D05_POSN                                0x5
#define _TXB2D0_TXB2D05_POSITION                            0x5
#define _TXB2D0_TXB2D05_SIZE                                0x1
#define _TXB2D0_TXB2D05_LENGTH                              0x1
#define _TXB2D0_TXB2D05_MASK                                0x20
#define _TXB2D0_TXB2D06_POSN                                0x6
#define _TXB2D0_TXB2D06_POSITION                            0x6
#define _TXB2D0_TXB2D06_SIZE                                0x1
#define _TXB2D0_TXB2D06_LENGTH                              0x1
#define _TXB2D0_TXB2D06_MASK                                0x40
#define _TXB2D0_TXB2D07_POSN                                0x7
#define _TXB2D0_TXB2D07_POSITION                            0x7
#define _TXB2D0_TXB2D07_SIZE                                0x1
#define _TXB2D0_TXB2D07_LENGTH                              0x1
#define _TXB2D0_TXB2D07_MASK                                0x80

// Register: TXB2D1
#define TXB2D1 TXB2D1
extern volatile unsigned char           TXB2D1              __at(0xF27);
#ifndef _LIB_BUILD
asm("TXB2D1 equ 0F27h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D10                :1;
        unsigned TXB2D11                :1;
        unsigned TXB2D12                :1;
        unsigned TXB2D13                :1;
        unsigned TXB2D14                :1;
        unsigned TXB2D15                :1;
        unsigned TXB2D16                :1;
        unsigned TXB2D17                :1;
    };
} TXB2D1bits_t;
extern volatile TXB2D1bits_t TXB2D1bits __at(0xF27);
// bitfield macros
#define _TXB2D1_TXB2D10_POSN                                0x0
#define _TXB2D1_TXB2D10_POSITION                            0x0
#define _TXB2D1_TXB2D10_SIZE                                0x1
#define _TXB2D1_TXB2D10_LENGTH                              0x1
#define _TXB2D1_TXB2D10_MASK                                0x1
#define _TXB2D1_TXB2D11_POSN                                0x1
#define _TXB2D1_TXB2D11_POSITION                            0x1
#define _TXB2D1_TXB2D11_SIZE                                0x1
#define _TXB2D1_TXB2D11_LENGTH                              0x1
#define _TXB2D1_TXB2D11_MASK                                0x2
#define _TXB2D1_TXB2D12_POSN                                0x2
#define _TXB2D1_TXB2D12_POSITION                            0x2
#define _TXB2D1_TXB2D12_SIZE                                0x1
#define _TXB2D1_TXB2D12_LENGTH                              0x1
#define _TXB2D1_TXB2D12_MASK                                0x4
#define _TXB2D1_TXB2D13_POSN                                0x3
#define _TXB2D1_TXB2D13_POSITION                            0x3
#define _TXB2D1_TXB2D13_SIZE                                0x1
#define _TXB2D1_TXB2D13_LENGTH                              0x1
#define _TXB2D1_TXB2D13_MASK                                0x8
#define _TXB2D1_TXB2D14_POSN                                0x4
#define _TXB2D1_TXB2D14_POSITION                            0x4
#define _TXB2D1_TXB2D14_SIZE                                0x1
#define _TXB2D1_TXB2D14_LENGTH                              0x1
#define _TXB2D1_TXB2D14_MASK                                0x10
#define _TXB2D1_TXB2D15_POSN                                0x5
#define _TXB2D1_TXB2D15_POSITION                            0x5
#define _TXB2D1_TXB2D15_SIZE                                0x1
#define _TXB2D1_TXB2D15_LENGTH                              0x1
#define _TXB2D1_TXB2D15_MASK                                0x20
#define _TXB2D1_TXB2D16_POSN                                0x6
#define _TXB2D1_TXB2D16_POSITION                            0x6
#define _TXB2D1_TXB2D16_SIZE                                0x1
#define _TXB2D1_TXB2D16_LENGTH                              0x1
#define _TXB2D1_TXB2D16_MASK                                0x40
#define _TXB2D1_TXB2D17_POSN                                0x7
#define _TXB2D1_TXB2D17_POSITION                            0x7
#define _TXB2D1_TXB2D17_SIZE                                0x1
#define _TXB2D1_TXB2D17_LENGTH                              0x1
#define _TXB2D1_TXB2D17_MASK                                0x80

// Register: TXB2D2
#define TXB2D2 TXB2D2
extern volatile unsigned char           TXB2D2              __at(0xF28);
#ifndef _LIB_BUILD
asm("TXB2D2 equ 0F28h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D20                :1;
        unsigned TXB2D21                :1;
        unsigned TXB2D22                :1;
        unsigned TXB2D23                :1;
        unsigned TXB2D24                :1;
        unsigned TXB2D25                :1;
        unsigned TXB2D26                :1;
        unsigned TXB2D27                :1;
    };
} TXB2D2bits_t;
extern volatile TXB2D2bits_t TXB2D2bits __at(0xF28);
// bitfield macros
#define _TXB2D2_TXB2D20_POSN                                0x0
#define _TXB2D2_TXB2D20_POSITION                            0x0
#define _TXB2D2_TXB2D20_SIZE                                0x1
#define _TXB2D2_TXB2D20_LENGTH                              0x1
#define _TXB2D2_TXB2D20_MASK                                0x1
#define _TXB2D2_TXB2D21_POSN                                0x1
#define _TXB2D2_TXB2D21_POSITION                            0x1
#define _TXB2D2_TXB2D21_SIZE                                0x1
#define _TXB2D2_TXB2D21_LENGTH                              0x1
#define _TXB2D2_TXB2D21_MASK                                0x2
#define _TXB2D2_TXB2D22_POSN                                0x2
#define _TXB2D2_TXB2D22_POSITION                            0x2
#define _TXB2D2_TXB2D22_SIZE                                0x1
#define _TXB2D2_TXB2D22_LENGTH                              0x1
#define _TXB2D2_TXB2D22_MASK                                0x4
#define _TXB2D2_TXB2D23_POSN                                0x3
#define _TXB2D2_TXB2D23_POSITION                            0x3
#define _TXB2D2_TXB2D23_SIZE                                0x1
#define _TXB2D2_TXB2D23_LENGTH                              0x1
#define _TXB2D2_TXB2D23_MASK                                0x8
#define _TXB2D2_TXB2D24_POSN                                0x4
#define _TXB2D2_TXB2D24_POSITION                            0x4
#define _TXB2D2_TXB2D24_SIZE                                0x1
#define _TXB2D2_TXB2D24_LENGTH                              0x1
#define _TXB2D2_TXB2D24_MASK                                0x10
#define _TXB2D2_TXB2D25_POSN                                0x5
#define _TXB2D2_TXB2D25_POSITION                            0x5
#define _TXB2D2_TXB2D25_SIZE                                0x1
#define _TXB2D2_TXB2D25_LENGTH                              0x1
#define _TXB2D2_TXB2D25_MASK                                0x20
#define _TXB2D2_TXB2D26_POSN                                0x6
#define _TXB2D2_TXB2D26_POSITION                            0x6
#define _TXB2D2_TXB2D26_SIZE                                0x1
#define _TXB2D2_TXB2D26_LENGTH                              0x1
#define _TXB2D2_TXB2D26_MASK                                0x40
#define _TXB2D2_TXB2D27_POSN                                0x7
#define _TXB2D2_TXB2D27_POSITION                            0x7
#define _TXB2D2_TXB2D27_SIZE                                0x1
#define _TXB2D2_TXB2D27_LENGTH                              0x1
#define _TXB2D2_TXB2D27_MASK                                0x80

// Register: TXB2D3
#define TXB2D3 TXB2D3
extern volatile unsigned char           TXB2D3              __at(0xF29);
#ifndef _LIB_BUILD
asm("TXB2D3 equ 0F29h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D30                :1;
        unsigned TXB2D31                :1;
        unsigned TXB2D32                :1;
        unsigned TXB2D33                :1;
        unsigned TXB2D34                :1;
        unsigned TXB2D35                :1;
        unsigned TXB2D36                :1;
        unsigned TXB2D37                :1;
    };
} TXB2D3bits_t;
extern volatile TXB2D3bits_t TXB2D3bits __at(0xF29);
// bitfield macros
#define _TXB2D3_TXB2D30_POSN                                0x0
#define _TXB2D3_TXB2D30_POSITION                            0x0
#define _TXB2D3_TXB2D30_SIZE                                0x1
#define _TXB2D3_TXB2D30_LENGTH                              0x1
#define _TXB2D3_TXB2D30_MASK                                0x1
#define _TXB2D3_TXB2D31_POSN                                0x1
#define _TXB2D3_TXB2D31_POSITION                            0x1
#define _TXB2D3_TXB2D31_SIZE                                0x1
#define _TXB2D3_TXB2D31_LENGTH                              0x1
#define _TXB2D3_TXB2D31_MASK                                0x2
#define _TXB2D3_TXB2D32_POSN                                0x2
#define _TXB2D3_TXB2D32_POSITION                            0x2
#define _TXB2D3_TXB2D32_SIZE                                0x1
#define _TXB2D3_TXB2D32_LENGTH                              0x1
#define _TXB2D3_TXB2D32_MASK                                0x4
#define _TXB2D3_TXB2D33_POSN                                0x3
#define _TXB2D3_TXB2D33_POSITION                            0x3
#define _TXB2D3_TXB2D33_SIZE                                0x1
#define _TXB2D3_TXB2D33_LENGTH                              0x1
#define _TXB2D3_TXB2D33_MASK                                0x8
#define _TXB2D3_TXB2D34_POSN                                0x4
#define _TXB2D3_TXB2D34_POSITION                            0x4
#define _TXB2D3_TXB2D34_SIZE                                0x1
#define _TXB2D3_TXB2D34_LENGTH                              0x1
#define _TXB2D3_TXB2D34_MASK                                0x10
#define _TXB2D3_TXB2D35_POSN                                0x5
#define _TXB2D3_TXB2D35_POSITION                            0x5
#define _TXB2D3_TXB2D35_SIZE                                0x1
#define _TXB2D3_TXB2D35_LENGTH                              0x1
#define _TXB2D3_TXB2D35_MASK                                0x20
#define _TXB2D3_TXB2D36_POSN                                0x6
#define _TXB2D3_TXB2D36_POSITION                            0x6
#define _TXB2D3_TXB2D36_SIZE                                0x1
#define _TXB2D3_TXB2D36_LENGTH                              0x1
#define _TXB2D3_TXB2D36_MASK                                0x40
#define _TXB2D3_TXB2D37_POSN                                0x7
#define _TXB2D3_TXB2D37_POSITION                            0x7
#define _TXB2D3_TXB2D37_SIZE                                0x1
#define _TXB2D3_TXB2D37_LENGTH                              0x1
#define _TXB2D3_TXB2D37_MASK                                0x80

// Register: TXB2D4
#define TXB2D4 TXB2D4
extern volatile unsigned char           TXB2D4              __at(0xF2A);
#ifndef _LIB_BUILD
asm("TXB2D4 equ 0F2Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D40                :1;
        unsigned TXB2D41                :1;
        unsigned TXB2D42                :1;
        unsigned TXB2D43                :1;
        unsigned TXB2D44                :1;
        unsigned TXB2D45                :1;
        unsigned TXB2D46                :1;
        unsigned TXB2D47                :1;
    };
} TXB2D4bits_t;
extern volatile TXB2D4bits_t TXB2D4bits __at(0xF2A);
// bitfield macros
#define _TXB2D4_TXB2D40_POSN                                0x0
#define _TXB2D4_TXB2D40_POSITION                            0x0
#define _TXB2D4_TXB2D40_SIZE                                0x1
#define _TXB2D4_TXB2D40_LENGTH                              0x1
#define _TXB2D4_TXB2D40_MASK                                0x1
#define _TXB2D4_TXB2D41_POSN                                0x1
#define _TXB2D4_TXB2D41_POSITION                            0x1
#define _TXB2D4_TXB2D41_SIZE                                0x1
#define _TXB2D4_TXB2D41_LENGTH                              0x1
#define _TXB2D4_TXB2D41_MASK                                0x2
#define _TXB2D4_TXB2D42_POSN                                0x2
#define _TXB2D4_TXB2D42_POSITION                            0x2
#define _TXB2D4_TXB2D42_SIZE                                0x1
#define _TXB2D4_TXB2D42_LENGTH                              0x1
#define _TXB2D4_TXB2D42_MASK                                0x4
#define _TXB2D4_TXB2D43_POSN                                0x3
#define _TXB2D4_TXB2D43_POSITION                            0x3
#define _TXB2D4_TXB2D43_SIZE                                0x1
#define _TXB2D4_TXB2D43_LENGTH                              0x1
#define _TXB2D4_TXB2D43_MASK                                0x8
#define _TXB2D4_TXB2D44_POSN                                0x4
#define _TXB2D4_TXB2D44_POSITION                            0x4
#define _TXB2D4_TXB2D44_SIZE                                0x1
#define _TXB2D4_TXB2D44_LENGTH                              0x1
#define _TXB2D4_TXB2D44_MASK                                0x10
#define _TXB2D4_TXB2D45_POSN                                0x5
#define _TXB2D4_TXB2D45_POSITION                            0x5
#define _TXB2D4_TXB2D45_SIZE                                0x1
#define _TXB2D4_TXB2D45_LENGTH                              0x1
#define _TXB2D4_TXB2D45_MASK                                0x20
#define _TXB2D4_TXB2D46_POSN                                0x6
#define _TXB2D4_TXB2D46_POSITION                            0x6
#define _TXB2D4_TXB2D46_SIZE                                0x1
#define _TXB2D4_TXB2D46_LENGTH                              0x1
#define _TXB2D4_TXB2D46_MASK                                0x40
#define _TXB2D4_TXB2D47_POSN                                0x7
#define _TXB2D4_TXB2D47_POSITION                            0x7
#define _TXB2D4_TXB2D47_SIZE                                0x1
#define _TXB2D4_TXB2D47_LENGTH                              0x1
#define _TXB2D4_TXB2D47_MASK                                0x80

// Register: TXB2D5
#define TXB2D5 TXB2D5
extern volatile unsigned char           TXB2D5              __at(0xF2B);
#ifndef _LIB_BUILD
asm("TXB2D5 equ 0F2Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D50                :1;
        unsigned TXB2D51                :1;
        unsigned TXB2D52                :1;
        unsigned TXB2D53                :1;
        unsigned TXB2D54                :1;
        unsigned TXB2D55                :1;
        unsigned TXB2D56                :1;
        unsigned TXB2D57                :1;
    };
} TXB2D5bits_t;
extern volatile TXB2D5bits_t TXB2D5bits __at(0xF2B);
// bitfield macros
#define _TXB2D5_TXB2D50_POSN                                0x0
#define _TXB2D5_TXB2D50_POSITION                            0x0
#define _TXB2D5_TXB2D50_SIZE                                0x1
#define _TXB2D5_TXB2D50_LENGTH                              0x1
#define _TXB2D5_TXB2D50_MASK                                0x1
#define _TXB2D5_TXB2D51_POSN                                0x1
#define _TXB2D5_TXB2D51_POSITION                            0x1
#define _TXB2D5_TXB2D51_SIZE                                0x1
#define _TXB2D5_TXB2D51_LENGTH                              0x1
#define _TXB2D5_TXB2D51_MASK                                0x2
#define _TXB2D5_TXB2D52_POSN                                0x2
#define _TXB2D5_TXB2D52_POSITION                            0x2
#define _TXB2D5_TXB2D52_SIZE                                0x1
#define _TXB2D5_TXB2D52_LENGTH                              0x1
#define _TXB2D5_TXB2D52_MASK                                0x4
#define _TXB2D5_TXB2D53_POSN                                0x3
#define _TXB2D5_TXB2D53_POSITION                            0x3
#define _TXB2D5_TXB2D53_SIZE                                0x1
#define _TXB2D5_TXB2D53_LENGTH                              0x1
#define _TXB2D5_TXB2D53_MASK                                0x8
#define _TXB2D5_TXB2D54_POSN                                0x4
#define _TXB2D5_TXB2D54_POSITION                            0x4
#define _TXB2D5_TXB2D54_SIZE                                0x1
#define _TXB2D5_TXB2D54_LENGTH                              0x1
#define _TXB2D5_TXB2D54_MASK                                0x10
#define _TXB2D5_TXB2D55_POSN                                0x5
#define _TXB2D5_TXB2D55_POSITION                            0x5
#define _TXB2D5_TXB2D55_SIZE                                0x1
#define _TXB2D5_TXB2D55_LENGTH                              0x1
#define _TXB2D5_TXB2D55_MASK                                0x20
#define _TXB2D5_TXB2D56_POSN                                0x6
#define _TXB2D5_TXB2D56_POSITION                            0x6
#define _TXB2D5_TXB2D56_SIZE                                0x1
#define _TXB2D5_TXB2D56_LENGTH                              0x1
#define _TXB2D5_TXB2D56_MASK                                0x40
#define _TXB2D5_TXB2D57_POSN                                0x7
#define _TXB2D5_TXB2D57_POSITION                            0x7
#define _TXB2D5_TXB2D57_SIZE                                0x1
#define _TXB2D5_TXB2D57_LENGTH                              0x1
#define _TXB2D5_TXB2D57_MASK                                0x80

// Register: TXB2D6
#define TXB2D6 TXB2D6
extern volatile unsigned char           TXB2D6              __at(0xF2C);
#ifndef _LIB_BUILD
asm("TXB2D6 equ 0F2Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D60                :1;
        unsigned TXB2D61                :1;
        unsigned TXB2D62                :1;
        unsigned TXB2D63                :1;
        unsigned TXB2D64                :1;
        unsigned TXB2D65                :1;
        unsigned TXB2D66                :1;
        unsigned TXB2D67                :1;
    };
} TXB2D6bits_t;
extern volatile TXB2D6bits_t TXB2D6bits __at(0xF2C);
// bitfield macros
#define _TXB2D6_TXB2D60_POSN                                0x0
#define _TXB2D6_TXB2D60_POSITION                            0x0
#define _TXB2D6_TXB2D60_SIZE                                0x1
#define _TXB2D6_TXB2D60_LENGTH                              0x1
#define _TXB2D6_TXB2D60_MASK                                0x1
#define _TXB2D6_TXB2D61_POSN                                0x1
#define _TXB2D6_TXB2D61_POSITION                            0x1
#define _TXB2D6_TXB2D61_SIZE                                0x1
#define _TXB2D6_TXB2D61_LENGTH                              0x1
#define _TXB2D6_TXB2D61_MASK                                0x2
#define _TXB2D6_TXB2D62_POSN                                0x2
#define _TXB2D6_TXB2D62_POSITION                            0x2
#define _TXB2D6_TXB2D62_SIZE                                0x1
#define _TXB2D6_TXB2D62_LENGTH                              0x1
#define _TXB2D6_TXB2D62_MASK                                0x4
#define _TXB2D6_TXB2D63_POSN                                0x3
#define _TXB2D6_TXB2D63_POSITION                            0x3
#define _TXB2D6_TXB2D63_SIZE                                0x1
#define _TXB2D6_TXB2D63_LENGTH                              0x1
#define _TXB2D6_TXB2D63_MASK                                0x8
#define _TXB2D6_TXB2D64_POSN                                0x4
#define _TXB2D6_TXB2D64_POSITION                            0x4
#define _TXB2D6_TXB2D64_SIZE                                0x1
#define _TXB2D6_TXB2D64_LENGTH                              0x1
#define _TXB2D6_TXB2D64_MASK                                0x10
#define _TXB2D6_TXB2D65_POSN                                0x5
#define _TXB2D6_TXB2D65_POSITION                            0x5
#define _TXB2D6_TXB2D65_SIZE                                0x1
#define _TXB2D6_TXB2D65_LENGTH                              0x1
#define _TXB2D6_TXB2D65_MASK                                0x20
#define _TXB2D6_TXB2D66_POSN                                0x6
#define _TXB2D6_TXB2D66_POSITION                            0x6
#define _TXB2D6_TXB2D66_SIZE                                0x1
#define _TXB2D6_TXB2D66_LENGTH                              0x1
#define _TXB2D6_TXB2D66_MASK                                0x40
#define _TXB2D6_TXB2D67_POSN                                0x7
#define _TXB2D6_TXB2D67_POSITION                            0x7
#define _TXB2D6_TXB2D67_SIZE                                0x1
#define _TXB2D6_TXB2D67_LENGTH                              0x1
#define _TXB2D6_TXB2D67_MASK                                0x80

// Register: TXB2D7
#define TXB2D7 TXB2D7
extern volatile unsigned char           TXB2D7              __at(0xF2D);
#ifndef _LIB_BUILD
asm("TXB2D7 equ 0F2Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB2D70                :1;
        unsigned TXB2D71                :1;
        unsigned TXB2D72                :1;
        unsigned TXB2D73                :1;
        unsigned TXB2D74                :1;
        unsigned TXB2D75                :1;
        unsigned TXB2D76                :1;
        unsigned TXB2D77                :1;
    };
} TXB2D7bits_t;
extern volatile TXB2D7bits_t TXB2D7bits __at(0xF2D);
// bitfield macros
#define _TXB2D7_TXB2D70_POSN                                0x0
#define _TXB2D7_TXB2D70_POSITION                            0x0
#define _TXB2D7_TXB2D70_SIZE                                0x1
#define _TXB2D7_TXB2D70_LENGTH                              0x1
#define _TXB2D7_TXB2D70_MASK                                0x1
#define _TXB2D7_TXB2D71_POSN                                0x1
#define _TXB2D7_TXB2D71_POSITION                            0x1
#define _TXB2D7_TXB2D71_SIZE                                0x1
#define _TXB2D7_TXB2D71_LENGTH                              0x1
#define _TXB2D7_TXB2D71_MASK                                0x2
#define _TXB2D7_TXB2D72_POSN                                0x2
#define _TXB2D7_TXB2D72_POSITION                            0x2
#define _TXB2D7_TXB2D72_SIZE                                0x1
#define _TXB2D7_TXB2D72_LENGTH                              0x1
#define _TXB2D7_TXB2D72_MASK                                0x4
#define _TXB2D7_TXB2D73_POSN                                0x3
#define _TXB2D7_TXB2D73_POSITION                            0x3
#define _TXB2D7_TXB2D73_SIZE                                0x1
#define _TXB2D7_TXB2D73_LENGTH                              0x1
#define _TXB2D7_TXB2D73_MASK                                0x8
#define _TXB2D7_TXB2D74_POSN                                0x4
#define _TXB2D7_TXB2D74_POSITION                            0x4
#define _TXB2D7_TXB2D74_SIZE                                0x1
#define _TXB2D7_TXB2D74_LENGTH                              0x1
#define _TXB2D7_TXB2D74_MASK                                0x10
#define _TXB2D7_TXB2D75_POSN                                0x5
#define _TXB2D7_TXB2D75_POSITION                            0x5
#define _TXB2D7_TXB2D75_SIZE                                0x1
#define _TXB2D7_TXB2D75_LENGTH                              0x1
#define _TXB2D7_TXB2D75_MASK                                0x20
#define _TXB2D7_TXB2D76_POSN                                0x6
#define _TXB2D7_TXB2D76_POSITION                            0x6
#define _TXB2D7_TXB2D76_SIZE                                0x1
#define _TXB2D7_TXB2D76_LENGTH                              0x1
#define _TXB2D7_TXB2D76_MASK                                0x40
#define _TXB2D7_TXB2D77_POSN                                0x7
#define _TXB2D7_TXB2D77_POSITION                            0x7
#define _TXB2D7_TXB2D77_SIZE                                0x1
#define _TXB2D7_TXB2D77_LENGTH                              0x1
#define _TXB2D7_TXB2D77_MASK                                0x80

// Register: CANSTAT_RO3
#define CANSTAT_RO3 CANSTAT_RO3
extern volatile unsigned char           CANSTAT_RO3         __at(0xF2E);
#ifndef _LIB_BUILD
asm("CANSTAT_RO3 equ 0F2Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EICODE0                :1;
        unsigned EICODE1_ICODE0         :1;
        unsigned EICODE2_ICODE1         :1;
        unsigned EICODE3_ICODE2         :1;
        unsigned EICODE4                :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTAT_RO3bits_t;
extern volatile CANSTAT_RO3bits_t CANSTAT_RO3bits __at(0xF2E);
// bitfield macros
#define _CANSTAT_RO3_EICODE0_POSN                           0x0
#define _CANSTAT_RO3_EICODE0_POSITION                       0x0
#define _CANSTAT_RO3_EICODE0_SIZE                           0x1
#define _CANSTAT_RO3_EICODE0_LENGTH                         0x1
#define _CANSTAT_RO3_EICODE0_MASK                           0x1
#define _CANSTAT_RO3_EICODE1_ICODE0_POSN                    0x1
#define _CANSTAT_RO3_EICODE1_ICODE0_POSITION                0x1
#define _CANSTAT_RO3_EICODE1_ICODE0_SIZE                    0x1
#define _CANSTAT_RO3_EICODE1_ICODE0_LENGTH                  0x1
#define _CANSTAT_RO3_EICODE1_ICODE0_MASK                    0x2
#define _CANSTAT_RO3_EICODE2_ICODE1_POSN                    0x2
#define _CANSTAT_RO3_EICODE2_ICODE1_POSITION                0x2
#define _CANSTAT_RO3_EICODE2_ICODE1_SIZE                    0x1
#define _CANSTAT_RO3_EICODE2_ICODE1_LENGTH                  0x1
#define _CANSTAT_RO3_EICODE2_ICODE1_MASK                    0x4
#define _CANSTAT_RO3_EICODE3_ICODE2_POSN                    0x3
#define _CANSTAT_RO3_EICODE3_ICODE2_POSITION                0x3
#define _CANSTAT_RO3_EICODE3_ICODE2_SIZE                    0x1
#define _CANSTAT_RO3_EICODE3_ICODE2_LENGTH                  0x1
#define _CANSTAT_RO3_EICODE3_ICODE2_MASK                    0x8
#define _CANSTAT_RO3_EICODE4_POSN                           0x4
#define _CANSTAT_RO3_EICODE4_POSITION                       0x4
#define _CANSTAT_RO3_EICODE4_SIZE                           0x1
#define _CANSTAT_RO3_EICODE4_LENGTH                         0x1
#define _CANSTAT_RO3_EICODE4_MASK                           0x10
#define _CANSTAT_RO3_OPMODE0_POSN                           0x5
#define _CANSTAT_RO3_OPMODE0_POSITION                       0x5
#define _CANSTAT_RO3_OPMODE0_SIZE                           0x1
#define _CANSTAT_RO3_OPMODE0_LENGTH                         0x1
#define _CANSTAT_RO3_OPMODE0_MASK                           0x20
#define _CANSTAT_RO3_OPMODE1_POSN                           0x6
#define _CANSTAT_RO3_OPMODE1_POSITION                       0x6
#define _CANSTAT_RO3_OPMODE1_SIZE                           0x1
#define _CANSTAT_RO3_OPMODE1_LENGTH                         0x1
#define _CANSTAT_RO3_OPMODE1_MASK                           0x40
#define _CANSTAT_RO3_OPMODE2_POSN                           0x7
#define _CANSTAT_RO3_OPMODE2_POSITION                       0x7
#define _CANSTAT_RO3_OPMODE2_SIZE                           0x1
#define _CANSTAT_RO3_OPMODE2_LENGTH                         0x1
#define _CANSTAT_RO3_OPMODE2_MASK                           0x80

// Register: CANCON_RO3
#define CANCON_RO3 CANCON_RO3
extern volatile unsigned char           CANCON_RO3          __at(0xF2F);
#ifndef _LIB_BUILD
asm("CANCON_RO3 equ 0F2Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FP0                    :1;
        unsigned WIN0_FP1               :1;
        unsigned WIN1_FP2               :1;
        unsigned WIN2_FP3               :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
} CANCON_RO3bits_t;
extern volatile CANCON_RO3bits_t CANCON_RO3bits __at(0xF2F);
// bitfield macros
#define _CANCON_RO3_FP0_POSN                                0x0
#define _CANCON_RO3_FP0_POSITION                            0x0
#define _CANCON_RO3_FP0_SIZE                                0x1
#define _CANCON_RO3_FP0_LENGTH                              0x1
#define _CANCON_RO3_FP0_MASK                                0x1
#define _CANCON_RO3_WIN0_FP1_POSN                           0x1
#define _CANCON_RO3_WIN0_FP1_POSITION                       0x1
#define _CANCON_RO3_WIN0_FP1_SIZE                           0x1
#define _CANCON_RO3_WIN0_FP1_LENGTH                         0x1
#define _CANCON_RO3_WIN0_FP1_MASK                           0x2
#define _CANCON_RO3_WIN1_FP2_POSN                           0x2
#define _CANCON_RO3_WIN1_FP2_POSITION                       0x2
#define _CANCON_RO3_WIN1_FP2_SIZE                           0x1
#define _CANCON_RO3_WIN1_FP2_LENGTH                         0x1
#define _CANCON_RO3_WIN1_FP2_MASK                           0x4
#define _CANCON_RO3_WIN2_FP3_POSN                           0x3
#define _CANCON_RO3_WIN2_FP3_POSITION                       0x3
#define _CANCON_RO3_WIN2_FP3_SIZE                           0x1
#define _CANCON_RO3_WIN2_FP3_LENGTH                         0x1
#define _CANCON_RO3_WIN2_FP3_MASK                           0x8
#define _CANCON_RO3_ABAT_POSN                               0x4
#define _CANCON_RO3_ABAT_POSITION                           0x4
#define _CANCON_RO3_ABAT_SIZE                               0x1
#define _CANCON_RO3_ABAT_LENGTH                             0x1
#define _CANCON_RO3_ABAT_MASK                               0x10
#define _CANCON_RO3_REQOP0_POSN                             0x5
#define _CANCON_RO3_REQOP0_POSITION                         0x5
#define _CANCON_RO3_REQOP0_SIZE                             0x1
#define _CANCON_RO3_REQOP0_LENGTH                           0x1
#define _CANCON_RO3_REQOP0_MASK                             0x20
#define _CANCON_RO3_REQOP1_POSN                             0x6
#define _CANCON_RO3_REQOP1_POSITION                         0x6
#define _CANCON_RO3_REQOP1_SIZE                             0x1
#define _CANCON_RO3_REQOP1_LENGTH                           0x1
#define _CANCON_RO3_REQOP1_MASK                             0x40
#define _CANCON_RO3_REQOP2_POSN                             0x7
#define _CANCON_RO3_REQOP2_POSITION                         0x7
#define _CANCON_RO3_REQOP2_SIZE                             0x1
#define _CANCON_RO3_REQOP2_LENGTH                           0x1
#define _CANCON_RO3_REQOP2_MASK                             0x80

// Register: TXB1CON
#define TXB1CON TXB1CON
extern volatile unsigned char           TXB1CON             __at(0xF30);
#ifndef _LIB_BUILD
asm("TXB1CON equ 0F30h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned                        :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
        unsigned TXBIF                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned TXBIFTXB1CON           :1;
    };
    struct {
        unsigned TXB1PRI0               :1;
        unsigned TXB1PRI1               :1;
        unsigned                        :1;
        unsigned TXB1REQ                :1;
        unsigned TXB1ERR                :1;
        unsigned TXB1LARB               :1;
        unsigned TXB1ABT                :1;
        unsigned TX1IF                  :1;
    };
} TXB1CONbits_t;
extern volatile TXB1CONbits_t TXB1CONbits __at(0xF30);
// bitfield macros
#define _TXB1CON_TXPRI0_POSN                                0x0
#define _TXB1CON_TXPRI0_POSITION                            0x0
#define _TXB1CON_TXPRI0_SIZE                                0x1
#define _TXB1CON_TXPRI0_LENGTH                              0x1
#define _TXB1CON_TXPRI0_MASK                                0x1
#define _TXB1CON_TXPRI1_POSN                                0x1
#define _TXB1CON_TXPRI1_POSITION                            0x1
#define _TXB1CON_TXPRI1_SIZE                                0x1
#define _TXB1CON_TXPRI1_LENGTH                              0x1
#define _TXB1CON_TXPRI1_MASK                                0x2
#define _TXB1CON_TXREQ_POSN                                 0x3
#define _TXB1CON_TXREQ_POSITION                             0x3
#define _TXB1CON_TXREQ_SIZE                                 0x1
#define _TXB1CON_TXREQ_LENGTH                               0x1
#define _TXB1CON_TXREQ_MASK                                 0x8
#define _TXB1CON_TXERR_POSN                                 0x4
#define _TXB1CON_TXERR_POSITION                             0x4
#define _TXB1CON_TXERR_SIZE                                 0x1
#define _TXB1CON_TXERR_LENGTH                               0x1
#define _TXB1CON_TXERR_MASK                                 0x10
#define _TXB1CON_TXLARB_POSN                                0x5
#define _TXB1CON_TXLARB_POSITION                            0x5
#define _TXB1CON_TXLARB_SIZE                                0x1
#define _TXB1CON_TXLARB_LENGTH                              0x1
#define _TXB1CON_TXLARB_MASK                                0x20
#define _TXB1CON_TXABT_POSN                                 0x6
#define _TXB1CON_TXABT_POSITION                             0x6
#define _TXB1CON_TXABT_SIZE                                 0x1
#define _TXB1CON_TXABT_LENGTH                               0x1
#define _TXB1CON_TXABT_MASK                                 0x40
#define _TXB1CON_TXBIF_POSN                                 0x7
#define _TXB1CON_TXBIF_POSITION                             0x7
#define _TXB1CON_TXBIF_SIZE                                 0x1
#define _TXB1CON_TXBIF_LENGTH                               0x1
#define _TXB1CON_TXBIF_MASK                                 0x80
#define _TXB1CON_TXBIFTXB1CON_POSN                          0x7
#define _TXB1CON_TXBIFTXB1CON_POSITION                      0x7
#define _TXB1CON_TXBIFTXB1CON_SIZE                          0x1
#define _TXB1CON_TXBIFTXB1CON_LENGTH                        0x1
#define _TXB1CON_TXBIFTXB1CON_MASK                          0x80
#define _TXB1CON_TXB1PRI0_POSN                              0x0
#define _TXB1CON_TXB1PRI0_POSITION                          0x0
#define _TXB1CON_TXB1PRI0_SIZE                              0x1
#define _TXB1CON_TXB1PRI0_LENGTH                            0x1
#define _TXB1CON_TXB1PRI0_MASK                              0x1
#define _TXB1CON_TXB1PRI1_POSN                              0x1
#define _TXB1CON_TXB1PRI1_POSITION                          0x1
#define _TXB1CON_TXB1PRI1_SIZE                              0x1
#define _TXB1CON_TXB1PRI1_LENGTH                            0x1
#define _TXB1CON_TXB1PRI1_MASK                              0x2
#define _TXB1CON_TXB1REQ_POSN                               0x3
#define _TXB1CON_TXB1REQ_POSITION                           0x3
#define _TXB1CON_TXB1REQ_SIZE                               0x1
#define _TXB1CON_TXB1REQ_LENGTH                             0x1
#define _TXB1CON_TXB1REQ_MASK                               0x8
#define _TXB1CON_TXB1ERR_POSN                               0x4
#define _TXB1CON_TXB1ERR_POSITION                           0x4
#define _TXB1CON_TXB1ERR_SIZE                               0x1
#define _TXB1CON_TXB1ERR_LENGTH                             0x1
#define _TXB1CON_TXB1ERR_MASK                               0x10
#define _TXB1CON_TXB1LARB_POSN                              0x5
#define _TXB1CON_TXB1LARB_POSITION                          0x5
#define _TXB1CON_TXB1LARB_SIZE                              0x1
#define _TXB1CON_TXB1LARB_LENGTH                            0x1
#define _TXB1CON_TXB1LARB_MASK                              0x20
#define _TXB1CON_TXB1ABT_POSN                               0x6
#define _TXB1CON_TXB1ABT_POSITION                           0x6
#define _TXB1CON_TXB1ABT_SIZE                               0x1
#define _TXB1CON_TXB1ABT_LENGTH                             0x1
#define _TXB1CON_TXB1ABT_MASK                               0x40
#define _TXB1CON_TX1IF_POSN                                 0x7
#define _TXB1CON_TX1IF_POSITION                             0x7
#define _TXB1CON_TX1IF_SIZE                                 0x1
#define _TXB1CON_TX1IF_LENGTH                               0x1
#define _TXB1CON_TX1IF_MASK                                 0x80

// Register: TXB1SIDH
#define TXB1SIDH TXB1SIDH
extern volatile unsigned char           TXB1SIDH            __at(0xF31);
#ifndef _LIB_BUILD
asm("TXB1SIDH equ 0F31h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned TXB1SID3               :1;
        unsigned TXB1SID4               :1;
        unsigned TXB1SID5               :1;
        unsigned TXB1SID6               :1;
        unsigned TXB1SID7               :1;
        unsigned TXB1SID8               :1;
        unsigned TXB1SID9               :1;
        unsigned TXB1SID10              :1;
    };
} TXB1SIDHbits_t;
extern volatile TXB1SIDHbits_t TXB1SIDHbits __at(0xF31);
// bitfield macros
#define _TXB1SIDH_SID3_POSN                                 0x0
#define _TXB1SIDH_SID3_POSITION                             0x0
#define _TXB1SIDH_SID3_SIZE                                 0x1
#define _TXB1SIDH_SID3_LENGTH                               0x1
#define _TXB1SIDH_SID3_MASK                                 0x1
#define _TXB1SIDH_SID4_POSN                                 0x1
#define _TXB1SIDH_SID4_POSITION                             0x1
#define _TXB1SIDH_SID4_SIZE                                 0x1
#define _TXB1SIDH_SID4_LENGTH                               0x1
#define _TXB1SIDH_SID4_MASK                                 0x2
#define _TXB1SIDH_SID5_POSN                                 0x2
#define _TXB1SIDH_SID5_POSITION                             0x2
#define _TXB1SIDH_SID5_SIZE                                 0x1
#define _TXB1SIDH_SID5_LENGTH                               0x1
#define _TXB1SIDH_SID5_MASK                                 0x4
#define _TXB1SIDH_SID6_POSN                                 0x3
#define _TXB1SIDH_SID6_POSITION                             0x3
#define _TXB1SIDH_SID6_SIZE                                 0x1
#define _TXB1SIDH_SID6_LENGTH                               0x1
#define _TXB1SIDH_SID6_MASK                                 0x8
#define _TXB1SIDH_SID7_POSN                                 0x4
#define _TXB1SIDH_SID7_POSITION                             0x4
#define _TXB1SIDH_SID7_SIZE                                 0x1
#define _TXB1SIDH_SID7_LENGTH                               0x1
#define _TXB1SIDH_SID7_MASK                                 0x10
#define _TXB1SIDH_SID8_POSN                                 0x5
#define _TXB1SIDH_SID8_POSITION                             0x5
#define _TXB1SIDH_SID8_SIZE                                 0x1
#define _TXB1SIDH_SID8_LENGTH                               0x1
#define _TXB1SIDH_SID8_MASK                                 0x20
#define _TXB1SIDH_SID9_POSN                                 0x6
#define _TXB1SIDH_SID9_POSITION                             0x6
#define _TXB1SIDH_SID9_SIZE                                 0x1
#define _TXB1SIDH_SID9_LENGTH                               0x1
#define _TXB1SIDH_SID9_MASK                                 0x40
#define _TXB1SIDH_SID10_POSN                                0x7
#define _TXB1SIDH_SID10_POSITION                            0x7
#define _TXB1SIDH_SID10_SIZE                                0x1
#define _TXB1SIDH_SID10_LENGTH                              0x1
#define _TXB1SIDH_SID10_MASK                                0x80
#define _TXB1SIDH_TXB1SID3_POSN                             0x0
#define _TXB1SIDH_TXB1SID3_POSITION                         0x0
#define _TXB1SIDH_TXB1SID3_SIZE                             0x1
#define _TXB1SIDH_TXB1SID3_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID3_MASK                             0x1
#define _TXB1SIDH_TXB1SID4_POSN                             0x1
#define _TXB1SIDH_TXB1SID4_POSITION                         0x1
#define _TXB1SIDH_TXB1SID4_SIZE                             0x1
#define _TXB1SIDH_TXB1SID4_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID4_MASK                             0x2
#define _TXB1SIDH_TXB1SID5_POSN                             0x2
#define _TXB1SIDH_TXB1SID5_POSITION                         0x2
#define _TXB1SIDH_TXB1SID5_SIZE                             0x1
#define _TXB1SIDH_TXB1SID5_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID5_MASK                             0x4
#define _TXB1SIDH_TXB1SID6_POSN                             0x3
#define _TXB1SIDH_TXB1SID6_POSITION                         0x3
#define _TXB1SIDH_TXB1SID6_SIZE                             0x1
#define _TXB1SIDH_TXB1SID6_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID6_MASK                             0x8
#define _TXB1SIDH_TXB1SID7_POSN                             0x4
#define _TXB1SIDH_TXB1SID7_POSITION                         0x4
#define _TXB1SIDH_TXB1SID7_SIZE                             0x1
#define _TXB1SIDH_TXB1SID7_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID7_MASK                             0x10
#define _TXB1SIDH_TXB1SID8_POSN                             0x5
#define _TXB1SIDH_TXB1SID8_POSITION                         0x5
#define _TXB1SIDH_TXB1SID8_SIZE                             0x1
#define _TXB1SIDH_TXB1SID8_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID8_MASK                             0x20
#define _TXB1SIDH_TXB1SID9_POSN                             0x6
#define _TXB1SIDH_TXB1SID9_POSITION                         0x6
#define _TXB1SIDH_TXB1SID9_SIZE                             0x1
#define _TXB1SIDH_TXB1SID9_LENGTH                           0x1
#define _TXB1SIDH_TXB1SID9_MASK                             0x40
#define _TXB1SIDH_TXB1SID10_POSN                            0x7
#define _TXB1SIDH_TXB1SID10_POSITION                        0x7
#define _TXB1SIDH_TXB1SID10_SIZE                            0x1
#define _TXB1SIDH_TXB1SID10_LENGTH                          0x1
#define _TXB1SIDH_TXB1SID10_MASK                            0x80

// Register: TXB1SIDL
#define TXB1SIDL TXB1SIDL
extern volatile unsigned char           TXB1SIDL            __at(0xF32);
#ifndef _LIB_BUILD
asm("TXB1SIDL equ 0F32h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDE                  :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned TXB1EID16              :1;
        unsigned TXB1EID17              :1;
        unsigned                        :1;
        unsigned TXB1EXIDE              :1;
        unsigned                        :1;
        unsigned TXB1SID0               :1;
        unsigned TXB1SID1               :1;
        unsigned TXB1SID2               :1;
    };
} TXB1SIDLbits_t;
extern volatile TXB1SIDLbits_t TXB1SIDLbits __at(0xF32);
// bitfield macros
#define _TXB1SIDL_EID16_POSN                                0x0
#define _TXB1SIDL_EID16_POSITION                            0x0
#define _TXB1SIDL_EID16_SIZE                                0x1
#define _TXB1SIDL_EID16_LENGTH                              0x1
#define _TXB1SIDL_EID16_MASK                                0x1
#define _TXB1SIDL_EID17_POSN                                0x1
#define _TXB1SIDL_EID17_POSITION                            0x1
#define _TXB1SIDL_EID17_SIZE                                0x1
#define _TXB1SIDL_EID17_LENGTH                              0x1
#define _TXB1SIDL_EID17_MASK                                0x2
#define _TXB1SIDL_EXIDE_POSN                                0x3
#define _TXB1SIDL_EXIDE_POSITION                            0x3
#define _TXB1SIDL_EXIDE_SIZE                                0x1
#define _TXB1SIDL_EXIDE_LENGTH                              0x1
#define _TXB1SIDL_EXIDE_MASK                                0x8
#define _TXB1SIDL_SID0_POSN                                 0x5
#define _TXB1SIDL_SID0_POSITION                             0x5
#define _TXB1SIDL_SID0_SIZE                                 0x1
#define _TXB1SIDL_SID0_LENGTH                               0x1
#define _TXB1SIDL_SID0_MASK                                 0x20
#define _TXB1SIDL_SID1_POSN                                 0x6
#define _TXB1SIDL_SID1_POSITION                             0x6
#define _TXB1SIDL_SID1_SIZE                                 0x1
#define _TXB1SIDL_SID1_LENGTH                               0x1
#define _TXB1SIDL_SID1_MASK                                 0x40
#define _TXB1SIDL_SID2_POSN                                 0x7
#define _TXB1SIDL_SID2_POSITION                             0x7
#define _TXB1SIDL_SID2_SIZE                                 0x1
#define _TXB1SIDL_SID2_LENGTH                               0x1
#define _TXB1SIDL_SID2_MASK                                 0x80
#define _TXB1SIDL_TXB1EID16_POSN                            0x0
#define _TXB1SIDL_TXB1EID16_POSITION                        0x0
#define _TXB1SIDL_TXB1EID16_SIZE                            0x1
#define _TXB1SIDL_TXB1EID16_LENGTH                          0x1
#define _TXB1SIDL_TXB1EID16_MASK                            0x1
#define _TXB1SIDL_TXB1EID17_POSN                            0x1
#define _TXB1SIDL_TXB1EID17_POSITION                        0x1
#define _TXB1SIDL_TXB1EID17_SIZE                            0x1
#define _TXB1SIDL_TXB1EID17_LENGTH                          0x1
#define _TXB1SIDL_TXB1EID17_MASK                            0x2
#define _TXB1SIDL_TXB1EXIDE_POSN                            0x3
#define _TXB1SIDL_TXB1EXIDE_POSITION                        0x3
#define _TXB1SIDL_TXB1EXIDE_SIZE                            0x1
#define _TXB1SIDL_TXB1EXIDE_LENGTH                          0x1
#define _TXB1SIDL_TXB1EXIDE_MASK                            0x8
#define _TXB1SIDL_TXB1SID0_POSN                             0x5
#define _TXB1SIDL_TXB1SID0_POSITION                         0x5
#define _TXB1SIDL_TXB1SID0_SIZE                             0x1
#define _TXB1SIDL_TXB1SID0_LENGTH                           0x1
#define _TXB1SIDL_TXB1SID0_MASK                             0x20
#define _TXB1SIDL_TXB1SID1_POSN                             0x6
#define _TXB1SIDL_TXB1SID1_POSITION                         0x6
#define _TXB1SIDL_TXB1SID1_SIZE                             0x1
#define _TXB1SIDL_TXB1SID1_LENGTH                           0x1
#define _TXB1SIDL_TXB1SID1_MASK                             0x40
#define _TXB1SIDL_TXB1SID2_POSN                             0x7
#define _TXB1SIDL_TXB1SID2_POSITION                         0x7
#define _TXB1SIDL_TXB1SID2_SIZE                             0x1
#define _TXB1SIDL_TXB1SID2_LENGTH                           0x1
#define _TXB1SIDL_TXB1SID2_MASK                             0x80

// Register: TXB1EIDH
#define TXB1EIDH TXB1EIDH
extern volatile unsigned char           TXB1EIDH            __at(0xF33);
#ifndef _LIB_BUILD
asm("TXB1EIDH equ 0F33h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned TXB1EID8               :1;
        unsigned TXB1EID9               :1;
        unsigned TXB1EID10              :1;
        unsigned TXB1EID11              :1;
        unsigned TXB1EID12              :1;
        unsigned TXB1EID13              :1;
        unsigned TXB1EID14              :1;
        unsigned TXB1EID15              :1;
    };
} TXB1EIDHbits_t;
extern volatile TXB1EIDHbits_t TXB1EIDHbits __at(0xF33);
// bitfield macros
#define _TXB1EIDH_EID8_POSN                                 0x0
#define _TXB1EIDH_EID8_POSITION                             0x0
#define _TXB1EIDH_EID8_SIZE                                 0x1
#define _TXB1EIDH_EID8_LENGTH                               0x1
#define _TXB1EIDH_EID8_MASK                                 0x1
#define _TXB1EIDH_EID9_POSN                                 0x1
#define _TXB1EIDH_EID9_POSITION                             0x1
#define _TXB1EIDH_EID9_SIZE                                 0x1
#define _TXB1EIDH_EID9_LENGTH                               0x1
#define _TXB1EIDH_EID9_MASK                                 0x2
#define _TXB1EIDH_EID10_POSN                                0x2
#define _TXB1EIDH_EID10_POSITION                            0x2
#define _TXB1EIDH_EID10_SIZE                                0x1
#define _TXB1EIDH_EID10_LENGTH                              0x1
#define _TXB1EIDH_EID10_MASK                                0x4
#define _TXB1EIDH_EID11_POSN                                0x3
#define _TXB1EIDH_EID11_POSITION                            0x3
#define _TXB1EIDH_EID11_SIZE                                0x1
#define _TXB1EIDH_EID11_LENGTH                              0x1
#define _TXB1EIDH_EID11_MASK                                0x8
#define _TXB1EIDH_EID12_POSN                                0x4
#define _TXB1EIDH_EID12_POSITION                            0x4
#define _TXB1EIDH_EID12_SIZE                                0x1
#define _TXB1EIDH_EID12_LENGTH                              0x1
#define _TXB1EIDH_EID12_MASK                                0x10
#define _TXB1EIDH_EID13_POSN                                0x5
#define _TXB1EIDH_EID13_POSITION                            0x5
#define _TXB1EIDH_EID13_SIZE                                0x1
#define _TXB1EIDH_EID13_LENGTH                              0x1
#define _TXB1EIDH_EID13_MASK                                0x20
#define _TXB1EIDH_EID14_POSN                                0x6
#define _TXB1EIDH_EID14_POSITION                            0x6
#define _TXB1EIDH_EID14_SIZE                                0x1
#define _TXB1EIDH_EID14_LENGTH                              0x1
#define _TXB1EIDH_EID14_MASK                                0x40
#define _TXB1EIDH_EID15_POSN                                0x7
#define _TXB1EIDH_EID15_POSITION                            0x7
#define _TXB1EIDH_EID15_SIZE                                0x1
#define _TXB1EIDH_EID15_LENGTH                              0x1
#define _TXB1EIDH_EID15_MASK                                0x80
#define _TXB1EIDH_TXB1EID8_POSN                             0x0
#define _TXB1EIDH_TXB1EID8_POSITION                         0x0
#define _TXB1EIDH_TXB1EID8_SIZE                             0x1
#define _TXB1EIDH_TXB1EID8_LENGTH                           0x1
#define _TXB1EIDH_TXB1EID8_MASK                             0x1
#define _TXB1EIDH_TXB1EID9_POSN                             0x1
#define _TXB1EIDH_TXB1EID9_POSITION                         0x1
#define _TXB1EIDH_TXB1EID9_SIZE                             0x1
#define _TXB1EIDH_TXB1EID9_LENGTH                           0x1
#define _TXB1EIDH_TXB1EID9_MASK                             0x2
#define _TXB1EIDH_TXB1EID10_POSN                            0x2
#define _TXB1EIDH_TXB1EID10_POSITION                        0x2
#define _TXB1EIDH_TXB1EID10_SIZE                            0x1
#define _TXB1EIDH_TXB1EID10_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID10_MASK                            0x4
#define _TXB1EIDH_TXB1EID11_POSN                            0x3
#define _TXB1EIDH_TXB1EID11_POSITION                        0x3
#define _TXB1EIDH_TXB1EID11_SIZE                            0x1
#define _TXB1EIDH_TXB1EID11_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID11_MASK                            0x8
#define _TXB1EIDH_TXB1EID12_POSN                            0x4
#define _TXB1EIDH_TXB1EID12_POSITION                        0x4
#define _TXB1EIDH_TXB1EID12_SIZE                            0x1
#define _TXB1EIDH_TXB1EID12_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID12_MASK                            0x10
#define _TXB1EIDH_TXB1EID13_POSN                            0x5
#define _TXB1EIDH_TXB1EID13_POSITION                        0x5
#define _TXB1EIDH_TXB1EID13_SIZE                            0x1
#define _TXB1EIDH_TXB1EID13_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID13_MASK                            0x20
#define _TXB1EIDH_TXB1EID14_POSN                            0x6
#define _TXB1EIDH_TXB1EID14_POSITION                        0x6
#define _TXB1EIDH_TXB1EID14_SIZE                            0x1
#define _TXB1EIDH_TXB1EID14_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID14_MASK                            0x40
#define _TXB1EIDH_TXB1EID15_POSN                            0x7
#define _TXB1EIDH_TXB1EID15_POSITION                        0x7
#define _TXB1EIDH_TXB1EID15_SIZE                            0x1
#define _TXB1EIDH_TXB1EID15_LENGTH                          0x1
#define _TXB1EIDH_TXB1EID15_MASK                            0x80

// Register: TXB1EIDL
#define TXB1EIDL TXB1EIDL
extern volatile unsigned char           TXB1EIDL            __at(0xF34);
#ifndef _LIB_BUILD
asm("TXB1EIDL equ 0F34h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned TXB1EID0               :1;
        unsigned TXB1EID1               :1;
        unsigned TXB1EID2               :1;
        unsigned TXB1EID3               :1;
        unsigned TXB1EID4               :1;
        unsigned TXB1EID5               :1;
        unsigned TXB1EID6               :1;
        unsigned TXB1EID7               :1;
    };
} TXB1EIDLbits_t;
extern volatile TXB1EIDLbits_t TXB1EIDLbits __at(0xF34);
// bitfield macros
#define _TXB1EIDL_EID0_POSN                                 0x0
#define _TXB1EIDL_EID0_POSITION                             0x0
#define _TXB1EIDL_EID0_SIZE                                 0x1
#define _TXB1EIDL_EID0_LENGTH                               0x1
#define _TXB1EIDL_EID0_MASK                                 0x1
#define _TXB1EIDL_EID1_POSN                                 0x1
#define _TXB1EIDL_EID1_POSITION                             0x1
#define _TXB1EIDL_EID1_SIZE                                 0x1
#define _TXB1EIDL_EID1_LENGTH                               0x1
#define _TXB1EIDL_EID1_MASK                                 0x2
#define _TXB1EIDL_EID2_POSN                                 0x2
#define _TXB1EIDL_EID2_POSITION                             0x2
#define _TXB1EIDL_EID2_SIZE                                 0x1
#define _TXB1EIDL_EID2_LENGTH                               0x1
#define _TXB1EIDL_EID2_MASK                                 0x4
#define _TXB1EIDL_EID3_POSN                                 0x3
#define _TXB1EIDL_EID3_POSITION                             0x3
#define _TXB1EIDL_EID3_SIZE                                 0x1
#define _TXB1EIDL_EID3_LENGTH                               0x1
#define _TXB1EIDL_EID3_MASK                                 0x8
#define _TXB1EIDL_EID4_POSN                                 0x4
#define _TXB1EIDL_EID4_POSITION                             0x4
#define _TXB1EIDL_EID4_SIZE                                 0x1
#define _TXB1EIDL_EID4_LENGTH                               0x1
#define _TXB1EIDL_EID4_MASK                                 0x10
#define _TXB1EIDL_EID5_POSN                                 0x5
#define _TXB1EIDL_EID5_POSITION                             0x5
#define _TXB1EIDL_EID5_SIZE                                 0x1
#define _TXB1EIDL_EID5_LENGTH                               0x1
#define _TXB1EIDL_EID5_MASK                                 0x20
#define _TXB1EIDL_EID6_POSN                                 0x6
#define _TXB1EIDL_EID6_POSITION                             0x6
#define _TXB1EIDL_EID6_SIZE                                 0x1
#define _TXB1EIDL_EID6_LENGTH                               0x1
#define _TXB1EIDL_EID6_MASK                                 0x40
#define _TXB1EIDL_EID7_POSN                                 0x7
#define _TXB1EIDL_EID7_POSITION                             0x7
#define _TXB1EIDL_EID7_SIZE                                 0x1
#define _TXB1EIDL_EID7_LENGTH                               0x1
#define _TXB1EIDL_EID7_MASK                                 0x80
#define _TXB1EIDL_TXB1EID0_POSN                             0x0
#define _TXB1EIDL_TXB1EID0_POSITION                         0x0
#define _TXB1EIDL_TXB1EID0_SIZE                             0x1
#define _TXB1EIDL_TXB1EID0_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID0_MASK                             0x1
#define _TXB1EIDL_TXB1EID1_POSN                             0x1
#define _TXB1EIDL_TXB1EID1_POSITION                         0x1
#define _TXB1EIDL_TXB1EID1_SIZE                             0x1
#define _TXB1EIDL_TXB1EID1_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID1_MASK                             0x2
#define _TXB1EIDL_TXB1EID2_POSN                             0x2
#define _TXB1EIDL_TXB1EID2_POSITION                         0x2
#define _TXB1EIDL_TXB1EID2_SIZE                             0x1
#define _TXB1EIDL_TXB1EID2_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID2_MASK                             0x4
#define _TXB1EIDL_TXB1EID3_POSN                             0x3
#define _TXB1EIDL_TXB1EID3_POSITION                         0x3
#define _TXB1EIDL_TXB1EID3_SIZE                             0x1
#define _TXB1EIDL_TXB1EID3_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID3_MASK                             0x8
#define _TXB1EIDL_TXB1EID4_POSN                             0x4
#define _TXB1EIDL_TXB1EID4_POSITION                         0x4
#define _TXB1EIDL_TXB1EID4_SIZE                             0x1
#define _TXB1EIDL_TXB1EID4_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID4_MASK                             0x10
#define _TXB1EIDL_TXB1EID5_POSN                             0x5
#define _TXB1EIDL_TXB1EID5_POSITION                         0x5
#define _TXB1EIDL_TXB1EID5_SIZE                             0x1
#define _TXB1EIDL_TXB1EID5_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID5_MASK                             0x20
#define _TXB1EIDL_TXB1EID6_POSN                             0x6
#define _TXB1EIDL_TXB1EID6_POSITION                         0x6
#define _TXB1EIDL_TXB1EID6_SIZE                             0x1
#define _TXB1EIDL_TXB1EID6_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID6_MASK                             0x40
#define _TXB1EIDL_TXB1EID7_POSN                             0x7
#define _TXB1EIDL_TXB1EID7_POSITION                         0x7
#define _TXB1EIDL_TXB1EID7_SIZE                             0x1
#define _TXB1EIDL_TXB1EID7_LENGTH                           0x1
#define _TXB1EIDL_TXB1EID7_MASK                             0x80

// Register: TXB1DLC
#define TXB1DLC TXB1DLC
extern volatile unsigned char           TXB1DLC             __at(0xF35);
#ifndef _LIB_BUILD
asm("TXB1DLC equ 0F35h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned                        :2;
        unsigned TXRTR                  :1;
    };
    struct {
        unsigned TXB1DLC0               :1;
        unsigned TXB1DLC1               :1;
        unsigned TXB1DLC2               :1;
        unsigned TXB1DLC3               :1;
        unsigned                        :2;
        unsigned TXB1RTR                :1;
    };
} TXB1DLCbits_t;
extern volatile TXB1DLCbits_t TXB1DLCbits __at(0xF35);
// bitfield macros
#define _TXB1DLC_DLC0_POSN                                  0x0
#define _TXB1DLC_DLC0_POSITION                              0x0
#define _TXB1DLC_DLC0_SIZE                                  0x1
#define _TXB1DLC_DLC0_LENGTH                                0x1
#define _TXB1DLC_DLC0_MASK                                  0x1
#define _TXB1DLC_DLC1_POSN                                  0x1
#define _TXB1DLC_DLC1_POSITION                              0x1
#define _TXB1DLC_DLC1_SIZE                                  0x1
#define _TXB1DLC_DLC1_LENGTH                                0x1
#define _TXB1DLC_DLC1_MASK                                  0x2
#define _TXB1DLC_DLC2_POSN                                  0x2
#define _TXB1DLC_DLC2_POSITION                              0x2
#define _TXB1DLC_DLC2_SIZE                                  0x1
#define _TXB1DLC_DLC2_LENGTH                                0x1
#define _TXB1DLC_DLC2_MASK                                  0x4
#define _TXB1DLC_DLC3_POSN                                  0x3
#define _TXB1DLC_DLC3_POSITION                              0x3
#define _TXB1DLC_DLC3_SIZE                                  0x1
#define _TXB1DLC_DLC3_LENGTH                                0x1
#define _TXB1DLC_DLC3_MASK                                  0x8
#define _TXB1DLC_TXRTR_POSN                                 0x6
#define _TXB1DLC_TXRTR_POSITION                             0x6
#define _TXB1DLC_TXRTR_SIZE                                 0x1
#define _TXB1DLC_TXRTR_LENGTH                               0x1
#define _TXB1DLC_TXRTR_MASK                                 0x40
#define _TXB1DLC_TXB1DLC0_POSN                              0x0
#define _TXB1DLC_TXB1DLC0_POSITION                          0x0
#define _TXB1DLC_TXB1DLC0_SIZE                              0x1
#define _TXB1DLC_TXB1DLC0_LENGTH                            0x1
#define _TXB1DLC_TXB1DLC0_MASK                              0x1
#define _TXB1DLC_TXB1DLC1_POSN                              0x1
#define _TXB1DLC_TXB1DLC1_POSITION                          0x1
#define _TXB1DLC_TXB1DLC1_SIZE                              0x1
#define _TXB1DLC_TXB1DLC1_LENGTH                            0x1
#define _TXB1DLC_TXB1DLC1_MASK                              0x2
#define _TXB1DLC_TXB1DLC2_POSN                              0x2
#define _TXB1DLC_TXB1DLC2_POSITION                          0x2
#define _TXB1DLC_TXB1DLC2_SIZE                              0x1
#define _TXB1DLC_TXB1DLC2_LENGTH                            0x1
#define _TXB1DLC_TXB1DLC2_MASK                              0x4
#define _TXB1DLC_TXB1DLC3_POSN                              0x3
#define _TXB1DLC_TXB1DLC3_POSITION                          0x3
#define _TXB1DLC_TXB1DLC3_SIZE                              0x1
#define _TXB1DLC_TXB1DLC3_LENGTH                            0x1
#define _TXB1DLC_TXB1DLC3_MASK                              0x8
#define _TXB1DLC_TXB1RTR_POSN                               0x6
#define _TXB1DLC_TXB1RTR_POSITION                           0x6
#define _TXB1DLC_TXB1RTR_SIZE                               0x1
#define _TXB1DLC_TXB1RTR_LENGTH                             0x1
#define _TXB1DLC_TXB1RTR_MASK                               0x40

// Register: TXB1D0
#define TXB1D0 TXB1D0
extern volatile unsigned char           TXB1D0              __at(0xF36);
#ifndef _LIB_BUILD
asm("TXB1D0 equ 0F36h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D00                :1;
        unsigned TXB1D01                :1;
        unsigned TXB1D02                :1;
        unsigned TXB1D03                :1;
        unsigned TXB1D04                :1;
        unsigned TXB1D05                :1;
        unsigned TXB1D06                :1;
        unsigned TXB1D07                :1;
    };
} TXB1D0bits_t;
extern volatile TXB1D0bits_t TXB1D0bits __at(0xF36);
// bitfield macros
#define _TXB1D0_TXB1D00_POSN                                0x0
#define _TXB1D0_TXB1D00_POSITION                            0x0
#define _TXB1D0_TXB1D00_SIZE                                0x1
#define _TXB1D0_TXB1D00_LENGTH                              0x1
#define _TXB1D0_TXB1D00_MASK                                0x1
#define _TXB1D0_TXB1D01_POSN                                0x1
#define _TXB1D0_TXB1D01_POSITION                            0x1
#define _TXB1D0_TXB1D01_SIZE                                0x1
#define _TXB1D0_TXB1D01_LENGTH                              0x1
#define _TXB1D0_TXB1D01_MASK                                0x2
#define _TXB1D0_TXB1D02_POSN                                0x2
#define _TXB1D0_TXB1D02_POSITION                            0x2
#define _TXB1D0_TXB1D02_SIZE                                0x1
#define _TXB1D0_TXB1D02_LENGTH                              0x1
#define _TXB1D0_TXB1D02_MASK                                0x4
#define _TXB1D0_TXB1D03_POSN                                0x3
#define _TXB1D0_TXB1D03_POSITION                            0x3
#define _TXB1D0_TXB1D03_SIZE                                0x1
#define _TXB1D0_TXB1D03_LENGTH                              0x1
#define _TXB1D0_TXB1D03_MASK                                0x8
#define _TXB1D0_TXB1D04_POSN                                0x4
#define _TXB1D0_TXB1D04_POSITION                            0x4
#define _TXB1D0_TXB1D04_SIZE                                0x1
#define _TXB1D0_TXB1D04_LENGTH                              0x1
#define _TXB1D0_TXB1D04_MASK                                0x10
#define _TXB1D0_TXB1D05_POSN                                0x5
#define _TXB1D0_TXB1D05_POSITION                            0x5
#define _TXB1D0_TXB1D05_SIZE                                0x1
#define _TXB1D0_TXB1D05_LENGTH                              0x1
#define _TXB1D0_TXB1D05_MASK                                0x20
#define _TXB1D0_TXB1D06_POSN                                0x6
#define _TXB1D0_TXB1D06_POSITION                            0x6
#define _TXB1D0_TXB1D06_SIZE                                0x1
#define _TXB1D0_TXB1D06_LENGTH                              0x1
#define _TXB1D0_TXB1D06_MASK                                0x40
#define _TXB1D0_TXB1D07_POSN                                0x7
#define _TXB1D0_TXB1D07_POSITION                            0x7
#define _TXB1D0_TXB1D07_SIZE                                0x1
#define _TXB1D0_TXB1D07_LENGTH                              0x1
#define _TXB1D0_TXB1D07_MASK                                0x80

// Register: TXB1D1
#define TXB1D1 TXB1D1
extern volatile unsigned char           TXB1D1              __at(0xF37);
#ifndef _LIB_BUILD
asm("TXB1D1 equ 0F37h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D10                :1;
        unsigned TXB1D11                :1;
        unsigned TXB1D12                :1;
        unsigned TXB1D13                :1;
        unsigned TXB1D14                :1;
        unsigned TXB1D15                :1;
        unsigned TXB1D16                :1;
        unsigned TXB1D17                :1;
    };
} TXB1D1bits_t;
extern volatile TXB1D1bits_t TXB1D1bits __at(0xF37);
// bitfield macros
#define _TXB1D1_TXB1D10_POSN                                0x0
#define _TXB1D1_TXB1D10_POSITION                            0x0
#define _TXB1D1_TXB1D10_SIZE                                0x1
#define _TXB1D1_TXB1D10_LENGTH                              0x1
#define _TXB1D1_TXB1D10_MASK                                0x1
#define _TXB1D1_TXB1D11_POSN                                0x1
#define _TXB1D1_TXB1D11_POSITION                            0x1
#define _TXB1D1_TXB1D11_SIZE                                0x1
#define _TXB1D1_TXB1D11_LENGTH                              0x1
#define _TXB1D1_TXB1D11_MASK                                0x2
#define _TXB1D1_TXB1D12_POSN                                0x2
#define _TXB1D1_TXB1D12_POSITION                            0x2
#define _TXB1D1_TXB1D12_SIZE                                0x1
#define _TXB1D1_TXB1D12_LENGTH                              0x1
#define _TXB1D1_TXB1D12_MASK                                0x4
#define _TXB1D1_TXB1D13_POSN                                0x3
#define _TXB1D1_TXB1D13_POSITION                            0x3
#define _TXB1D1_TXB1D13_SIZE                                0x1
#define _TXB1D1_TXB1D13_LENGTH                              0x1
#define _TXB1D1_TXB1D13_MASK                                0x8
#define _TXB1D1_TXB1D14_POSN                                0x4
#define _TXB1D1_TXB1D14_POSITION                            0x4
#define _TXB1D1_TXB1D14_SIZE                                0x1
#define _TXB1D1_TXB1D14_LENGTH                              0x1
#define _TXB1D1_TXB1D14_MASK                                0x10
#define _TXB1D1_TXB1D15_POSN                                0x5
#define _TXB1D1_TXB1D15_POSITION                            0x5
#define _TXB1D1_TXB1D15_SIZE                                0x1
#define _TXB1D1_TXB1D15_LENGTH                              0x1
#define _TXB1D1_TXB1D15_MASK                                0x20
#define _TXB1D1_TXB1D16_POSN                                0x6
#define _TXB1D1_TXB1D16_POSITION                            0x6
#define _TXB1D1_TXB1D16_SIZE                                0x1
#define _TXB1D1_TXB1D16_LENGTH                              0x1
#define _TXB1D1_TXB1D16_MASK                                0x40
#define _TXB1D1_TXB1D17_POSN                                0x7
#define _TXB1D1_TXB1D17_POSITION                            0x7
#define _TXB1D1_TXB1D17_SIZE                                0x1
#define _TXB1D1_TXB1D17_LENGTH                              0x1
#define _TXB1D1_TXB1D17_MASK                                0x80

// Register: TXB1D2
#define TXB1D2 TXB1D2
extern volatile unsigned char           TXB1D2              __at(0xF38);
#ifndef _LIB_BUILD
asm("TXB1D2 equ 0F38h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D20                :1;
        unsigned TXB1D21                :1;
        unsigned TXB1D22                :1;
        unsigned TXB1D23                :1;
        unsigned TXB1D24                :1;
        unsigned TXB1D25                :1;
        unsigned TXB1D26                :1;
        unsigned TXB1D27                :1;
    };
} TXB1D2bits_t;
extern volatile TXB1D2bits_t TXB1D2bits __at(0xF38);
// bitfield macros
#define _TXB1D2_TXB1D20_POSN                                0x0
#define _TXB1D2_TXB1D20_POSITION                            0x0
#define _TXB1D2_TXB1D20_SIZE                                0x1
#define _TXB1D2_TXB1D20_LENGTH                              0x1
#define _TXB1D2_TXB1D20_MASK                                0x1
#define _TXB1D2_TXB1D21_POSN                                0x1
#define _TXB1D2_TXB1D21_POSITION                            0x1
#define _TXB1D2_TXB1D21_SIZE                                0x1
#define _TXB1D2_TXB1D21_LENGTH                              0x1
#define _TXB1D2_TXB1D21_MASK                                0x2
#define _TXB1D2_TXB1D22_POSN                                0x2
#define _TXB1D2_TXB1D22_POSITION                            0x2
#define _TXB1D2_TXB1D22_SIZE                                0x1
#define _TXB1D2_TXB1D22_LENGTH                              0x1
#define _TXB1D2_TXB1D22_MASK                                0x4
#define _TXB1D2_TXB1D23_POSN                                0x3
#define _TXB1D2_TXB1D23_POSITION                            0x3
#define _TXB1D2_TXB1D23_SIZE                                0x1
#define _TXB1D2_TXB1D23_LENGTH                              0x1
#define _TXB1D2_TXB1D23_MASK                                0x8
#define _TXB1D2_TXB1D24_POSN                                0x4
#define _TXB1D2_TXB1D24_POSITION                            0x4
#define _TXB1D2_TXB1D24_SIZE                                0x1
#define _TXB1D2_TXB1D24_LENGTH                              0x1
#define _TXB1D2_TXB1D24_MASK                                0x10
#define _TXB1D2_TXB1D25_POSN                                0x5
#define _TXB1D2_TXB1D25_POSITION                            0x5
#define _TXB1D2_TXB1D25_SIZE                                0x1
#define _TXB1D2_TXB1D25_LENGTH                              0x1
#define _TXB1D2_TXB1D25_MASK                                0x20
#define _TXB1D2_TXB1D26_POSN                                0x6
#define _TXB1D2_TXB1D26_POSITION                            0x6
#define _TXB1D2_TXB1D26_SIZE                                0x1
#define _TXB1D2_TXB1D26_LENGTH                              0x1
#define _TXB1D2_TXB1D26_MASK                                0x40
#define _TXB1D2_TXB1D27_POSN                                0x7
#define _TXB1D2_TXB1D27_POSITION                            0x7
#define _TXB1D2_TXB1D27_SIZE                                0x1
#define _TXB1D2_TXB1D27_LENGTH                              0x1
#define _TXB1D2_TXB1D27_MASK                                0x80

// Register: TXB1D3
#define TXB1D3 TXB1D3
extern volatile unsigned char           TXB1D3              __at(0xF39);
#ifndef _LIB_BUILD
asm("TXB1D3 equ 0F39h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D30                :1;
        unsigned TXB1D31                :1;
        unsigned TXB1D32                :1;
        unsigned TXB1D33                :1;
        unsigned TXB1D34                :1;
        unsigned TXB1D35                :1;
        unsigned TXB1D36                :1;
        unsigned TXB1D37                :1;
    };
} TXB1D3bits_t;
extern volatile TXB1D3bits_t TXB1D3bits __at(0xF39);
// bitfield macros
#define _TXB1D3_TXB1D30_POSN                                0x0
#define _TXB1D3_TXB1D30_POSITION                            0x0
#define _TXB1D3_TXB1D30_SIZE                                0x1
#define _TXB1D3_TXB1D30_LENGTH                              0x1
#define _TXB1D3_TXB1D30_MASK                                0x1
#define _TXB1D3_TXB1D31_POSN                                0x1
#define _TXB1D3_TXB1D31_POSITION                            0x1
#define _TXB1D3_TXB1D31_SIZE                                0x1
#define _TXB1D3_TXB1D31_LENGTH                              0x1
#define _TXB1D3_TXB1D31_MASK                                0x2
#define _TXB1D3_TXB1D32_POSN                                0x2
#define _TXB1D3_TXB1D32_POSITION                            0x2
#define _TXB1D3_TXB1D32_SIZE                                0x1
#define _TXB1D3_TXB1D32_LENGTH                              0x1
#define _TXB1D3_TXB1D32_MASK                                0x4
#define _TXB1D3_TXB1D33_POSN                                0x3
#define _TXB1D3_TXB1D33_POSITION                            0x3
#define _TXB1D3_TXB1D33_SIZE                                0x1
#define _TXB1D3_TXB1D33_LENGTH                              0x1
#define _TXB1D3_TXB1D33_MASK                                0x8
#define _TXB1D3_TXB1D34_POSN                                0x4
#define _TXB1D3_TXB1D34_POSITION                            0x4
#define _TXB1D3_TXB1D34_SIZE                                0x1
#define _TXB1D3_TXB1D34_LENGTH                              0x1
#define _TXB1D3_TXB1D34_MASK                                0x10
#define _TXB1D3_TXB1D35_POSN                                0x5
#define _TXB1D3_TXB1D35_POSITION                            0x5
#define _TXB1D3_TXB1D35_SIZE                                0x1
#define _TXB1D3_TXB1D35_LENGTH                              0x1
#define _TXB1D3_TXB1D35_MASK                                0x20
#define _TXB1D3_TXB1D36_POSN                                0x6
#define _TXB1D3_TXB1D36_POSITION                            0x6
#define _TXB1D3_TXB1D36_SIZE                                0x1
#define _TXB1D3_TXB1D36_LENGTH                              0x1
#define _TXB1D3_TXB1D36_MASK                                0x40
#define _TXB1D3_TXB1D37_POSN                                0x7
#define _TXB1D3_TXB1D37_POSITION                            0x7
#define _TXB1D3_TXB1D37_SIZE                                0x1
#define _TXB1D3_TXB1D37_LENGTH                              0x1
#define _TXB1D3_TXB1D37_MASK                                0x80

// Register: TXB1D4
#define TXB1D4 TXB1D4
extern volatile unsigned char           TXB1D4              __at(0xF3A);
#ifndef _LIB_BUILD
asm("TXB1D4 equ 0F3Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D40                :1;
        unsigned TXB1D41                :1;
        unsigned TXB1D42                :1;
        unsigned TXB1D43                :1;
        unsigned TXB1D44                :1;
        unsigned TXB1D45                :1;
        unsigned TXB1D46                :1;
        unsigned TXB1D47                :1;
    };
} TXB1D4bits_t;
extern volatile TXB1D4bits_t TXB1D4bits __at(0xF3A);
// bitfield macros
#define _TXB1D4_TXB1D40_POSN                                0x0
#define _TXB1D4_TXB1D40_POSITION                            0x0
#define _TXB1D4_TXB1D40_SIZE                                0x1
#define _TXB1D4_TXB1D40_LENGTH                              0x1
#define _TXB1D4_TXB1D40_MASK                                0x1
#define _TXB1D4_TXB1D41_POSN                                0x1
#define _TXB1D4_TXB1D41_POSITION                            0x1
#define _TXB1D4_TXB1D41_SIZE                                0x1
#define _TXB1D4_TXB1D41_LENGTH                              0x1
#define _TXB1D4_TXB1D41_MASK                                0x2
#define _TXB1D4_TXB1D42_POSN                                0x2
#define _TXB1D4_TXB1D42_POSITION                            0x2
#define _TXB1D4_TXB1D42_SIZE                                0x1
#define _TXB1D4_TXB1D42_LENGTH                              0x1
#define _TXB1D4_TXB1D42_MASK                                0x4
#define _TXB1D4_TXB1D43_POSN                                0x3
#define _TXB1D4_TXB1D43_POSITION                            0x3
#define _TXB1D4_TXB1D43_SIZE                                0x1
#define _TXB1D4_TXB1D43_LENGTH                              0x1
#define _TXB1D4_TXB1D43_MASK                                0x8
#define _TXB1D4_TXB1D44_POSN                                0x4
#define _TXB1D4_TXB1D44_POSITION                            0x4
#define _TXB1D4_TXB1D44_SIZE                                0x1
#define _TXB1D4_TXB1D44_LENGTH                              0x1
#define _TXB1D4_TXB1D44_MASK                                0x10
#define _TXB1D4_TXB1D45_POSN                                0x5
#define _TXB1D4_TXB1D45_POSITION                            0x5
#define _TXB1D4_TXB1D45_SIZE                                0x1
#define _TXB1D4_TXB1D45_LENGTH                              0x1
#define _TXB1D4_TXB1D45_MASK                                0x20
#define _TXB1D4_TXB1D46_POSN                                0x6
#define _TXB1D4_TXB1D46_POSITION                            0x6
#define _TXB1D4_TXB1D46_SIZE                                0x1
#define _TXB1D4_TXB1D46_LENGTH                              0x1
#define _TXB1D4_TXB1D46_MASK                                0x40
#define _TXB1D4_TXB1D47_POSN                                0x7
#define _TXB1D4_TXB1D47_POSITION                            0x7
#define _TXB1D4_TXB1D47_SIZE                                0x1
#define _TXB1D4_TXB1D47_LENGTH                              0x1
#define _TXB1D4_TXB1D47_MASK                                0x80

// Register: TXB1D5
#define TXB1D5 TXB1D5
extern volatile unsigned char           TXB1D5              __at(0xF3B);
#ifndef _LIB_BUILD
asm("TXB1D5 equ 0F3Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D50                :1;
        unsigned TXB1D51                :1;
        unsigned TXB1D52                :1;
        unsigned TXB1D53                :1;
        unsigned TXB1D54                :1;
        unsigned TXB1D55                :1;
        unsigned TXB1D56                :1;
        unsigned TXB1D57                :1;
    };
} TXB1D5bits_t;
extern volatile TXB1D5bits_t TXB1D5bits __at(0xF3B);
// bitfield macros
#define _TXB1D5_TXB1D50_POSN                                0x0
#define _TXB1D5_TXB1D50_POSITION                            0x0
#define _TXB1D5_TXB1D50_SIZE                                0x1
#define _TXB1D5_TXB1D50_LENGTH                              0x1
#define _TXB1D5_TXB1D50_MASK                                0x1
#define _TXB1D5_TXB1D51_POSN                                0x1
#define _TXB1D5_TXB1D51_POSITION                            0x1
#define _TXB1D5_TXB1D51_SIZE                                0x1
#define _TXB1D5_TXB1D51_LENGTH                              0x1
#define _TXB1D5_TXB1D51_MASK                                0x2
#define _TXB1D5_TXB1D52_POSN                                0x2
#define _TXB1D5_TXB1D52_POSITION                            0x2
#define _TXB1D5_TXB1D52_SIZE                                0x1
#define _TXB1D5_TXB1D52_LENGTH                              0x1
#define _TXB1D5_TXB1D52_MASK                                0x4
#define _TXB1D5_TXB1D53_POSN                                0x3
#define _TXB1D5_TXB1D53_POSITION                            0x3
#define _TXB1D5_TXB1D53_SIZE                                0x1
#define _TXB1D5_TXB1D53_LENGTH                              0x1
#define _TXB1D5_TXB1D53_MASK                                0x8
#define _TXB1D5_TXB1D54_POSN                                0x4
#define _TXB1D5_TXB1D54_POSITION                            0x4
#define _TXB1D5_TXB1D54_SIZE                                0x1
#define _TXB1D5_TXB1D54_LENGTH                              0x1
#define _TXB1D5_TXB1D54_MASK                                0x10
#define _TXB1D5_TXB1D55_POSN                                0x5
#define _TXB1D5_TXB1D55_POSITION                            0x5
#define _TXB1D5_TXB1D55_SIZE                                0x1
#define _TXB1D5_TXB1D55_LENGTH                              0x1
#define _TXB1D5_TXB1D55_MASK                                0x20
#define _TXB1D5_TXB1D56_POSN                                0x6
#define _TXB1D5_TXB1D56_POSITION                            0x6
#define _TXB1D5_TXB1D56_SIZE                                0x1
#define _TXB1D5_TXB1D56_LENGTH                              0x1
#define _TXB1D5_TXB1D56_MASK                                0x40
#define _TXB1D5_TXB1D57_POSN                                0x7
#define _TXB1D5_TXB1D57_POSITION                            0x7
#define _TXB1D5_TXB1D57_SIZE                                0x1
#define _TXB1D5_TXB1D57_LENGTH                              0x1
#define _TXB1D5_TXB1D57_MASK                                0x80

// Register: TXB1D6
#define TXB1D6 TXB1D6
extern volatile unsigned char           TXB1D6              __at(0xF3C);
#ifndef _LIB_BUILD
asm("TXB1D6 equ 0F3Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D60                :1;
        unsigned TXB1D61                :1;
        unsigned TXB1D62                :1;
        unsigned TXB1D63                :1;
        unsigned TXB1D64                :1;
        unsigned TXB1D65                :1;
        unsigned TXB1D66                :1;
        unsigned TXB1D67                :1;
    };
} TXB1D6bits_t;
extern volatile TXB1D6bits_t TXB1D6bits __at(0xF3C);
// bitfield macros
#define _TXB1D6_TXB1D60_POSN                                0x0
#define _TXB1D6_TXB1D60_POSITION                            0x0
#define _TXB1D6_TXB1D60_SIZE                                0x1
#define _TXB1D6_TXB1D60_LENGTH                              0x1
#define _TXB1D6_TXB1D60_MASK                                0x1
#define _TXB1D6_TXB1D61_POSN                                0x1
#define _TXB1D6_TXB1D61_POSITION                            0x1
#define _TXB1D6_TXB1D61_SIZE                                0x1
#define _TXB1D6_TXB1D61_LENGTH                              0x1
#define _TXB1D6_TXB1D61_MASK                                0x2
#define _TXB1D6_TXB1D62_POSN                                0x2
#define _TXB1D6_TXB1D62_POSITION                            0x2
#define _TXB1D6_TXB1D62_SIZE                                0x1
#define _TXB1D6_TXB1D62_LENGTH                              0x1
#define _TXB1D6_TXB1D62_MASK                                0x4
#define _TXB1D6_TXB1D63_POSN                                0x3
#define _TXB1D6_TXB1D63_POSITION                            0x3
#define _TXB1D6_TXB1D63_SIZE                                0x1
#define _TXB1D6_TXB1D63_LENGTH                              0x1
#define _TXB1D6_TXB1D63_MASK                                0x8
#define _TXB1D6_TXB1D64_POSN                                0x4
#define _TXB1D6_TXB1D64_POSITION                            0x4
#define _TXB1D6_TXB1D64_SIZE                                0x1
#define _TXB1D6_TXB1D64_LENGTH                              0x1
#define _TXB1D6_TXB1D64_MASK                                0x10
#define _TXB1D6_TXB1D65_POSN                                0x5
#define _TXB1D6_TXB1D65_POSITION                            0x5
#define _TXB1D6_TXB1D65_SIZE                                0x1
#define _TXB1D6_TXB1D65_LENGTH                              0x1
#define _TXB1D6_TXB1D65_MASK                                0x20
#define _TXB1D6_TXB1D66_POSN                                0x6
#define _TXB1D6_TXB1D66_POSITION                            0x6
#define _TXB1D6_TXB1D66_SIZE                                0x1
#define _TXB1D6_TXB1D66_LENGTH                              0x1
#define _TXB1D6_TXB1D66_MASK                                0x40
#define _TXB1D6_TXB1D67_POSN                                0x7
#define _TXB1D6_TXB1D67_POSITION                            0x7
#define _TXB1D6_TXB1D67_SIZE                                0x1
#define _TXB1D6_TXB1D67_LENGTH                              0x1
#define _TXB1D6_TXB1D67_MASK                                0x80

// Register: TXB1D7
#define TXB1D7 TXB1D7
extern volatile unsigned char           TXB1D7              __at(0xF3D);
#ifndef _LIB_BUILD
asm("TXB1D7 equ 0F3Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB1D70                :1;
        unsigned TXB1D71                :1;
        unsigned TXB1D72                :1;
        unsigned TXB1D73                :1;
        unsigned TXB1D74                :1;
        unsigned TXB1D75                :1;
        unsigned TXB1D76                :1;
        unsigned TXB1D77                :1;
    };
} TXB1D7bits_t;
extern volatile TXB1D7bits_t TXB1D7bits __at(0xF3D);
// bitfield macros
#define _TXB1D7_TXB1D70_POSN                                0x0
#define _TXB1D7_TXB1D70_POSITION                            0x0
#define _TXB1D7_TXB1D70_SIZE                                0x1
#define _TXB1D7_TXB1D70_LENGTH                              0x1
#define _TXB1D7_TXB1D70_MASK                                0x1
#define _TXB1D7_TXB1D71_POSN                                0x1
#define _TXB1D7_TXB1D71_POSITION                            0x1
#define _TXB1D7_TXB1D71_SIZE                                0x1
#define _TXB1D7_TXB1D71_LENGTH                              0x1
#define _TXB1D7_TXB1D71_MASK                                0x2
#define _TXB1D7_TXB1D72_POSN                                0x2
#define _TXB1D7_TXB1D72_POSITION                            0x2
#define _TXB1D7_TXB1D72_SIZE                                0x1
#define _TXB1D7_TXB1D72_LENGTH                              0x1
#define _TXB1D7_TXB1D72_MASK                                0x4
#define _TXB1D7_TXB1D73_POSN                                0x3
#define _TXB1D7_TXB1D73_POSITION                            0x3
#define _TXB1D7_TXB1D73_SIZE                                0x1
#define _TXB1D7_TXB1D73_LENGTH                              0x1
#define _TXB1D7_TXB1D73_MASK                                0x8
#define _TXB1D7_TXB1D74_POSN                                0x4
#define _TXB1D7_TXB1D74_POSITION                            0x4
#define _TXB1D7_TXB1D74_SIZE                                0x1
#define _TXB1D7_TXB1D74_LENGTH                              0x1
#define _TXB1D7_TXB1D74_MASK                                0x10
#define _TXB1D7_TXB1D75_POSN                                0x5
#define _TXB1D7_TXB1D75_POSITION                            0x5
#define _TXB1D7_TXB1D75_SIZE                                0x1
#define _TXB1D7_TXB1D75_LENGTH                              0x1
#define _TXB1D7_TXB1D75_MASK                                0x20
#define _TXB1D7_TXB1D76_POSN                                0x6
#define _TXB1D7_TXB1D76_POSITION                            0x6
#define _TXB1D7_TXB1D76_SIZE                                0x1
#define _TXB1D7_TXB1D76_LENGTH                              0x1
#define _TXB1D7_TXB1D76_MASK                                0x40
#define _TXB1D7_TXB1D77_POSN                                0x7
#define _TXB1D7_TXB1D77_POSITION                            0x7
#define _TXB1D7_TXB1D77_SIZE                                0x1
#define _TXB1D7_TXB1D77_LENGTH                              0x1
#define _TXB1D7_TXB1D77_MASK                                0x80

// Register: CANSTAT_RO2
#define CANSTAT_RO2 CANSTAT_RO2
extern volatile unsigned char           CANSTAT_RO2         __at(0xF3E);
#ifndef _LIB_BUILD
asm("CANSTAT_RO2 equ 0F3Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EICODE0                :1;
        unsigned EICODE1_ICODE0         :1;
        unsigned EICODE2_ICODE1         :1;
        unsigned EICODE3_ICODE2         :1;
        unsigned EICODE4                :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTAT_RO2bits_t;
extern volatile CANSTAT_RO2bits_t CANSTAT_RO2bits __at(0xF3E);
// bitfield macros
#define _CANSTAT_RO2_EICODE0_POSN                           0x0
#define _CANSTAT_RO2_EICODE0_POSITION                       0x0
#define _CANSTAT_RO2_EICODE0_SIZE                           0x1
#define _CANSTAT_RO2_EICODE0_LENGTH                         0x1
#define _CANSTAT_RO2_EICODE0_MASK                           0x1
#define _CANSTAT_RO2_EICODE1_ICODE0_POSN                    0x1
#define _CANSTAT_RO2_EICODE1_ICODE0_POSITION                0x1
#define _CANSTAT_RO2_EICODE1_ICODE0_SIZE                    0x1
#define _CANSTAT_RO2_EICODE1_ICODE0_LENGTH                  0x1
#define _CANSTAT_RO2_EICODE1_ICODE0_MASK                    0x2
#define _CANSTAT_RO2_EICODE2_ICODE1_POSN                    0x2
#define _CANSTAT_RO2_EICODE2_ICODE1_POSITION                0x2
#define _CANSTAT_RO2_EICODE2_ICODE1_SIZE                    0x1
#define _CANSTAT_RO2_EICODE2_ICODE1_LENGTH                  0x1
#define _CANSTAT_RO2_EICODE2_ICODE1_MASK                    0x4
#define _CANSTAT_RO2_EICODE3_ICODE2_POSN                    0x3
#define _CANSTAT_RO2_EICODE3_ICODE2_POSITION                0x3
#define _CANSTAT_RO2_EICODE3_ICODE2_SIZE                    0x1
#define _CANSTAT_RO2_EICODE3_ICODE2_LENGTH                  0x1
#define _CANSTAT_RO2_EICODE3_ICODE2_MASK                    0x8
#define _CANSTAT_RO2_EICODE4_POSN                           0x4
#define _CANSTAT_RO2_EICODE4_POSITION                       0x4
#define _CANSTAT_RO2_EICODE4_SIZE                           0x1
#define _CANSTAT_RO2_EICODE4_LENGTH                         0x1
#define _CANSTAT_RO2_EICODE4_MASK                           0x10
#define _CANSTAT_RO2_OPMODE0_POSN                           0x5
#define _CANSTAT_RO2_OPMODE0_POSITION                       0x5
#define _CANSTAT_RO2_OPMODE0_SIZE                           0x1
#define _CANSTAT_RO2_OPMODE0_LENGTH                         0x1
#define _CANSTAT_RO2_OPMODE0_MASK                           0x20
#define _CANSTAT_RO2_OPMODE1_POSN                           0x6
#define _CANSTAT_RO2_OPMODE1_POSITION                       0x6
#define _CANSTAT_RO2_OPMODE1_SIZE                           0x1
#define _CANSTAT_RO2_OPMODE1_LENGTH                         0x1
#define _CANSTAT_RO2_OPMODE1_MASK                           0x40
#define _CANSTAT_RO2_OPMODE2_POSN                           0x7
#define _CANSTAT_RO2_OPMODE2_POSITION                       0x7
#define _CANSTAT_RO2_OPMODE2_SIZE                           0x1
#define _CANSTAT_RO2_OPMODE2_LENGTH                         0x1
#define _CANSTAT_RO2_OPMODE2_MASK                           0x80

// Register: CANCON_RO2
#define CANCON_RO2 CANCON_RO2
extern volatile unsigned char           CANCON_RO2          __at(0xF3F);
#ifndef _LIB_BUILD
asm("CANCON_RO2 equ 0F3Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FP0                    :1;
        unsigned WIN0_FP1               :1;
        unsigned WIN1_FP2               :1;
        unsigned WIN2_FP3               :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
} CANCON_RO2bits_t;
extern volatile CANCON_RO2bits_t CANCON_RO2bits __at(0xF3F);
// bitfield macros
#define _CANCON_RO2_FP0_POSN                                0x0
#define _CANCON_RO2_FP0_POSITION                            0x0
#define _CANCON_RO2_FP0_SIZE                                0x1
#define _CANCON_RO2_FP0_LENGTH                              0x1
#define _CANCON_RO2_FP0_MASK                                0x1
#define _CANCON_RO2_WIN0_FP1_POSN                           0x1
#define _CANCON_RO2_WIN0_FP1_POSITION                       0x1
#define _CANCON_RO2_WIN0_FP1_SIZE                           0x1
#define _CANCON_RO2_WIN0_FP1_LENGTH                         0x1
#define _CANCON_RO2_WIN0_FP1_MASK                           0x2
#define _CANCON_RO2_WIN1_FP2_POSN                           0x2
#define _CANCON_RO2_WIN1_FP2_POSITION                       0x2
#define _CANCON_RO2_WIN1_FP2_SIZE                           0x1
#define _CANCON_RO2_WIN1_FP2_LENGTH                         0x1
#define _CANCON_RO2_WIN1_FP2_MASK                           0x4
#define _CANCON_RO2_WIN2_FP3_POSN                           0x3
#define _CANCON_RO2_WIN2_FP3_POSITION                       0x3
#define _CANCON_RO2_WIN2_FP3_SIZE                           0x1
#define _CANCON_RO2_WIN2_FP3_LENGTH                         0x1
#define _CANCON_RO2_WIN2_FP3_MASK                           0x8
#define _CANCON_RO2_ABAT_POSN                               0x4
#define _CANCON_RO2_ABAT_POSITION                           0x4
#define _CANCON_RO2_ABAT_SIZE                               0x1
#define _CANCON_RO2_ABAT_LENGTH                             0x1
#define _CANCON_RO2_ABAT_MASK                               0x10
#define _CANCON_RO2_REQOP0_POSN                             0x5
#define _CANCON_RO2_REQOP0_POSITION                         0x5
#define _CANCON_RO2_REQOP0_SIZE                             0x1
#define _CANCON_RO2_REQOP0_LENGTH                           0x1
#define _CANCON_RO2_REQOP0_MASK                             0x20
#define _CANCON_RO2_REQOP1_POSN                             0x6
#define _CANCON_RO2_REQOP1_POSITION                         0x6
#define _CANCON_RO2_REQOP1_SIZE                             0x1
#define _CANCON_RO2_REQOP1_LENGTH                           0x1
#define _CANCON_RO2_REQOP1_MASK                             0x40
#define _CANCON_RO2_REQOP2_POSN                             0x7
#define _CANCON_RO2_REQOP2_POSITION                         0x7
#define _CANCON_RO2_REQOP2_SIZE                             0x1
#define _CANCON_RO2_REQOP2_LENGTH                           0x1
#define _CANCON_RO2_REQOP2_MASK                             0x80

// Register: TXB0CON
#define TXB0CON TXB0CON
extern volatile unsigned char           TXB0CON             __at(0xF40);
#ifndef _LIB_BUILD
asm("TXB0CON equ 0F40h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXPRI0                 :1;
        unsigned TXPRI1                 :1;
        unsigned                        :1;
        unsigned TXREQ                  :1;
        unsigned TXERR                  :1;
        unsigned TXLARB                 :1;
        unsigned TXABT                  :1;
        unsigned TXBIF                  :1;
    };
    struct {
        unsigned TXB0PRI0               :1;
        unsigned TXB0PRI1               :1;
        unsigned                        :1;
        unsigned TXB0REQ                :1;
        unsigned TXB0ERR                :1;
        unsigned TXB0LARB               :1;
        unsigned TXB0ABT                :1;
        unsigned TX0IF                  :1;
    };
} TXB0CONbits_t;
extern volatile TXB0CONbits_t TXB0CONbits __at(0xF40);
// bitfield macros
#define _TXB0CON_TXPRI0_POSN                                0x0
#define _TXB0CON_TXPRI0_POSITION                            0x0
#define _TXB0CON_TXPRI0_SIZE                                0x1
#define _TXB0CON_TXPRI0_LENGTH                              0x1
#define _TXB0CON_TXPRI0_MASK                                0x1
#define _TXB0CON_TXPRI1_POSN                                0x1
#define _TXB0CON_TXPRI1_POSITION                            0x1
#define _TXB0CON_TXPRI1_SIZE                                0x1
#define _TXB0CON_TXPRI1_LENGTH                              0x1
#define _TXB0CON_TXPRI1_MASK                                0x2
#define _TXB0CON_TXREQ_POSN                                 0x3
#define _TXB0CON_TXREQ_POSITION                             0x3
#define _TXB0CON_TXREQ_SIZE                                 0x1
#define _TXB0CON_TXREQ_LENGTH                               0x1
#define _TXB0CON_TXREQ_MASK                                 0x8
#define _TXB0CON_TXERR_POSN                                 0x4
#define _TXB0CON_TXERR_POSITION                             0x4
#define _TXB0CON_TXERR_SIZE                                 0x1
#define _TXB0CON_TXERR_LENGTH                               0x1
#define _TXB0CON_TXERR_MASK                                 0x10
#define _TXB0CON_TXLARB_POSN                                0x5
#define _TXB0CON_TXLARB_POSITION                            0x5
#define _TXB0CON_TXLARB_SIZE                                0x1
#define _TXB0CON_TXLARB_LENGTH                              0x1
#define _TXB0CON_TXLARB_MASK                                0x20
#define _TXB0CON_TXABT_POSN                                 0x6
#define _TXB0CON_TXABT_POSITION                             0x6
#define _TXB0CON_TXABT_SIZE                                 0x1
#define _TXB0CON_TXABT_LENGTH                               0x1
#define _TXB0CON_TXABT_MASK                                 0x40
#define _TXB0CON_TXBIF_POSN                                 0x7
#define _TXB0CON_TXBIF_POSITION                             0x7
#define _TXB0CON_TXBIF_SIZE                                 0x1
#define _TXB0CON_TXBIF_LENGTH                               0x1
#define _TXB0CON_TXBIF_MASK                                 0x80
#define _TXB0CON_TXB0PRI0_POSN                              0x0
#define _TXB0CON_TXB0PRI0_POSITION                          0x0
#define _TXB0CON_TXB0PRI0_SIZE                              0x1
#define _TXB0CON_TXB0PRI0_LENGTH                            0x1
#define _TXB0CON_TXB0PRI0_MASK                              0x1
#define _TXB0CON_TXB0PRI1_POSN                              0x1
#define _TXB0CON_TXB0PRI1_POSITION                          0x1
#define _TXB0CON_TXB0PRI1_SIZE                              0x1
#define _TXB0CON_TXB0PRI1_LENGTH                            0x1
#define _TXB0CON_TXB0PRI1_MASK                              0x2
#define _TXB0CON_TXB0REQ_POSN                               0x3
#define _TXB0CON_TXB0REQ_POSITION                           0x3
#define _TXB0CON_TXB0REQ_SIZE                               0x1
#define _TXB0CON_TXB0REQ_LENGTH                             0x1
#define _TXB0CON_TXB0REQ_MASK                               0x8
#define _TXB0CON_TXB0ERR_POSN                               0x4
#define _TXB0CON_TXB0ERR_POSITION                           0x4
#define _TXB0CON_TXB0ERR_SIZE                               0x1
#define _TXB0CON_TXB0ERR_LENGTH                             0x1
#define _TXB0CON_TXB0ERR_MASK                               0x10
#define _TXB0CON_TXB0LARB_POSN                              0x5
#define _TXB0CON_TXB0LARB_POSITION                          0x5
#define _TXB0CON_TXB0LARB_SIZE                              0x1
#define _TXB0CON_TXB0LARB_LENGTH                            0x1
#define _TXB0CON_TXB0LARB_MASK                              0x20
#define _TXB0CON_TXB0ABT_POSN                               0x6
#define _TXB0CON_TXB0ABT_POSITION                           0x6
#define _TXB0CON_TXB0ABT_SIZE                               0x1
#define _TXB0CON_TXB0ABT_LENGTH                             0x1
#define _TXB0CON_TXB0ABT_MASK                               0x40
#define _TXB0CON_TX0IF_POSN                                 0x7
#define _TXB0CON_TX0IF_POSITION                             0x7
#define _TXB0CON_TX0IF_SIZE                                 0x1
#define _TXB0CON_TX0IF_LENGTH                               0x1
#define _TXB0CON_TX0IF_MASK                                 0x80

// Register: TXB0SIDH
#define TXB0SIDH TXB0SIDH
extern volatile unsigned char           TXB0SIDH            __at(0xF41);
#ifndef _LIB_BUILD
asm("TXB0SIDH equ 0F41h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned TXB0SID3               :1;
        unsigned TXB0SID4               :1;
        unsigned TXB0SID5               :1;
        unsigned TXB0SID6               :1;
        unsigned TXB0SID7               :1;
        unsigned TXB0SID8               :1;
        unsigned TXB0SID9               :1;
        unsigned TXB0SID10              :1;
    };
} TXB0SIDHbits_t;
extern volatile TXB0SIDHbits_t TXB0SIDHbits __at(0xF41);
// bitfield macros
#define _TXB0SIDH_SID3_POSN                                 0x0
#define _TXB0SIDH_SID3_POSITION                             0x0
#define _TXB0SIDH_SID3_SIZE                                 0x1
#define _TXB0SIDH_SID3_LENGTH                               0x1
#define _TXB0SIDH_SID3_MASK                                 0x1
#define _TXB0SIDH_SID4_POSN                                 0x1
#define _TXB0SIDH_SID4_POSITION                             0x1
#define _TXB0SIDH_SID4_SIZE                                 0x1
#define _TXB0SIDH_SID4_LENGTH                               0x1
#define _TXB0SIDH_SID4_MASK                                 0x2
#define _TXB0SIDH_SID5_POSN                                 0x2
#define _TXB0SIDH_SID5_POSITION                             0x2
#define _TXB0SIDH_SID5_SIZE                                 0x1
#define _TXB0SIDH_SID5_LENGTH                               0x1
#define _TXB0SIDH_SID5_MASK                                 0x4
#define _TXB0SIDH_SID6_POSN                                 0x3
#define _TXB0SIDH_SID6_POSITION                             0x3
#define _TXB0SIDH_SID6_SIZE                                 0x1
#define _TXB0SIDH_SID6_LENGTH                               0x1
#define _TXB0SIDH_SID6_MASK                                 0x8
#define _TXB0SIDH_SID7_POSN                                 0x4
#define _TXB0SIDH_SID7_POSITION                             0x4
#define _TXB0SIDH_SID7_SIZE                                 0x1
#define _TXB0SIDH_SID7_LENGTH                               0x1
#define _TXB0SIDH_SID7_MASK                                 0x10
#define _TXB0SIDH_SID8_POSN                                 0x5
#define _TXB0SIDH_SID8_POSITION                             0x5
#define _TXB0SIDH_SID8_SIZE                                 0x1
#define _TXB0SIDH_SID8_LENGTH                               0x1
#define _TXB0SIDH_SID8_MASK                                 0x20
#define _TXB0SIDH_SID9_POSN                                 0x6
#define _TXB0SIDH_SID9_POSITION                             0x6
#define _TXB0SIDH_SID9_SIZE                                 0x1
#define _TXB0SIDH_SID9_LENGTH                               0x1
#define _TXB0SIDH_SID9_MASK                                 0x40
#define _TXB0SIDH_SID10_POSN                                0x7
#define _TXB0SIDH_SID10_POSITION                            0x7
#define _TXB0SIDH_SID10_SIZE                                0x1
#define _TXB0SIDH_SID10_LENGTH                              0x1
#define _TXB0SIDH_SID10_MASK                                0x80
#define _TXB0SIDH_TXB0SID3_POSN                             0x0
#define _TXB0SIDH_TXB0SID3_POSITION                         0x0
#define _TXB0SIDH_TXB0SID3_SIZE                             0x1
#define _TXB0SIDH_TXB0SID3_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID3_MASK                             0x1
#define _TXB0SIDH_TXB0SID4_POSN                             0x1
#define _TXB0SIDH_TXB0SID4_POSITION                         0x1
#define _TXB0SIDH_TXB0SID4_SIZE                             0x1
#define _TXB0SIDH_TXB0SID4_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID4_MASK                             0x2
#define _TXB0SIDH_TXB0SID5_POSN                             0x2
#define _TXB0SIDH_TXB0SID5_POSITION                         0x2
#define _TXB0SIDH_TXB0SID5_SIZE                             0x1
#define _TXB0SIDH_TXB0SID5_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID5_MASK                             0x4
#define _TXB0SIDH_TXB0SID6_POSN                             0x3
#define _TXB0SIDH_TXB0SID6_POSITION                         0x3
#define _TXB0SIDH_TXB0SID6_SIZE                             0x1
#define _TXB0SIDH_TXB0SID6_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID6_MASK                             0x8
#define _TXB0SIDH_TXB0SID7_POSN                             0x4
#define _TXB0SIDH_TXB0SID7_POSITION                         0x4
#define _TXB0SIDH_TXB0SID7_SIZE                             0x1
#define _TXB0SIDH_TXB0SID7_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID7_MASK                             0x10
#define _TXB0SIDH_TXB0SID8_POSN                             0x5
#define _TXB0SIDH_TXB0SID8_POSITION                         0x5
#define _TXB0SIDH_TXB0SID8_SIZE                             0x1
#define _TXB0SIDH_TXB0SID8_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID8_MASK                             0x20
#define _TXB0SIDH_TXB0SID9_POSN                             0x6
#define _TXB0SIDH_TXB0SID9_POSITION                         0x6
#define _TXB0SIDH_TXB0SID9_SIZE                             0x1
#define _TXB0SIDH_TXB0SID9_LENGTH                           0x1
#define _TXB0SIDH_TXB0SID9_MASK                             0x40
#define _TXB0SIDH_TXB0SID10_POSN                            0x7
#define _TXB0SIDH_TXB0SID10_POSITION                        0x7
#define _TXB0SIDH_TXB0SID10_SIZE                            0x1
#define _TXB0SIDH_TXB0SID10_LENGTH                          0x1
#define _TXB0SIDH_TXB0SID10_MASK                            0x80

// Register: TXB0SIDL
#define TXB0SIDL TXB0SIDL
extern volatile unsigned char           TXB0SIDL            __at(0xF42);
#ifndef _LIB_BUILD
asm("TXB0SIDL equ 0F42h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXIDE                  :1;
        unsigned                        :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned TXB0EID16              :1;
        unsigned TXB0EID17              :1;
        unsigned                        :1;
        unsigned TXB0EXIDE              :1;
        unsigned                        :1;
        unsigned TXB0SID0               :1;
        unsigned TXB0SID1               :1;
        unsigned TXB0SID2               :1;
    };
} TXB0SIDLbits_t;
extern volatile TXB0SIDLbits_t TXB0SIDLbits __at(0xF42);
// bitfield macros
#define _TXB0SIDL_EID16_POSN                                0x0
#define _TXB0SIDL_EID16_POSITION                            0x0
#define _TXB0SIDL_EID16_SIZE                                0x1
#define _TXB0SIDL_EID16_LENGTH                              0x1
#define _TXB0SIDL_EID16_MASK                                0x1
#define _TXB0SIDL_EID17_POSN                                0x1
#define _TXB0SIDL_EID17_POSITION                            0x1
#define _TXB0SIDL_EID17_SIZE                                0x1
#define _TXB0SIDL_EID17_LENGTH                              0x1
#define _TXB0SIDL_EID17_MASK                                0x2
#define _TXB0SIDL_EXIDE_POSN                                0x3
#define _TXB0SIDL_EXIDE_POSITION                            0x3
#define _TXB0SIDL_EXIDE_SIZE                                0x1
#define _TXB0SIDL_EXIDE_LENGTH                              0x1
#define _TXB0SIDL_EXIDE_MASK                                0x8
#define _TXB0SIDL_SID0_POSN                                 0x5
#define _TXB0SIDL_SID0_POSITION                             0x5
#define _TXB0SIDL_SID0_SIZE                                 0x1
#define _TXB0SIDL_SID0_LENGTH                               0x1
#define _TXB0SIDL_SID0_MASK                                 0x20
#define _TXB0SIDL_SID1_POSN                                 0x6
#define _TXB0SIDL_SID1_POSITION                             0x6
#define _TXB0SIDL_SID1_SIZE                                 0x1
#define _TXB0SIDL_SID1_LENGTH                               0x1
#define _TXB0SIDL_SID1_MASK                                 0x40
#define _TXB0SIDL_SID2_POSN                                 0x7
#define _TXB0SIDL_SID2_POSITION                             0x7
#define _TXB0SIDL_SID2_SIZE                                 0x1
#define _TXB0SIDL_SID2_LENGTH                               0x1
#define _TXB0SIDL_SID2_MASK                                 0x80
#define _TXB0SIDL_TXB0EID16_POSN                            0x0
#define _TXB0SIDL_TXB0EID16_POSITION                        0x0
#define _TXB0SIDL_TXB0EID16_SIZE                            0x1
#define _TXB0SIDL_TXB0EID16_LENGTH                          0x1
#define _TXB0SIDL_TXB0EID16_MASK                            0x1
#define _TXB0SIDL_TXB0EID17_POSN                            0x1
#define _TXB0SIDL_TXB0EID17_POSITION                        0x1
#define _TXB0SIDL_TXB0EID17_SIZE                            0x1
#define _TXB0SIDL_TXB0EID17_LENGTH                          0x1
#define _TXB0SIDL_TXB0EID17_MASK                            0x2
#define _TXB0SIDL_TXB0EXIDE_POSN                            0x3
#define _TXB0SIDL_TXB0EXIDE_POSITION                        0x3
#define _TXB0SIDL_TXB0EXIDE_SIZE                            0x1
#define _TXB0SIDL_TXB0EXIDE_LENGTH                          0x1
#define _TXB0SIDL_TXB0EXIDE_MASK                            0x8
#define _TXB0SIDL_TXB0SID0_POSN                             0x5
#define _TXB0SIDL_TXB0SID0_POSITION                         0x5
#define _TXB0SIDL_TXB0SID0_SIZE                             0x1
#define _TXB0SIDL_TXB0SID0_LENGTH                           0x1
#define _TXB0SIDL_TXB0SID0_MASK                             0x20
#define _TXB0SIDL_TXB0SID1_POSN                             0x6
#define _TXB0SIDL_TXB0SID1_POSITION                         0x6
#define _TXB0SIDL_TXB0SID1_SIZE                             0x1
#define _TXB0SIDL_TXB0SID1_LENGTH                           0x1
#define _TXB0SIDL_TXB0SID1_MASK                             0x40
#define _TXB0SIDL_TXB0SID2_POSN                             0x7
#define _TXB0SIDL_TXB0SID2_POSITION                         0x7
#define _TXB0SIDL_TXB0SID2_SIZE                             0x1
#define _TXB0SIDL_TXB0SID2_LENGTH                           0x1
#define _TXB0SIDL_TXB0SID2_MASK                             0x80

// Register: TXB0EIDH
#define TXB0EIDH TXB0EIDH
extern volatile unsigned char           TXB0EIDH            __at(0xF43);
#ifndef _LIB_BUILD
asm("TXB0EIDH equ 0F43h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned TXB0EID8               :1;
        unsigned TXB0EID9               :1;
        unsigned TXB0EID10              :1;
        unsigned TXB0EID11              :1;
        unsigned TXB0EID12              :1;
        unsigned TXB0EID13              :1;
        unsigned TXB0EID14              :1;
        unsigned TXB0EID15              :1;
    };
} TXB0EIDHbits_t;
extern volatile TXB0EIDHbits_t TXB0EIDHbits __at(0xF43);
// bitfield macros
#define _TXB0EIDH_EID8_POSN                                 0x0
#define _TXB0EIDH_EID8_POSITION                             0x0
#define _TXB0EIDH_EID8_SIZE                                 0x1
#define _TXB0EIDH_EID8_LENGTH                               0x1
#define _TXB0EIDH_EID8_MASK                                 0x1
#define _TXB0EIDH_EID9_POSN                                 0x1
#define _TXB0EIDH_EID9_POSITION                             0x1
#define _TXB0EIDH_EID9_SIZE                                 0x1
#define _TXB0EIDH_EID9_LENGTH                               0x1
#define _TXB0EIDH_EID9_MASK                                 0x2
#define _TXB0EIDH_EID10_POSN                                0x2
#define _TXB0EIDH_EID10_POSITION                            0x2
#define _TXB0EIDH_EID10_SIZE                                0x1
#define _TXB0EIDH_EID10_LENGTH                              0x1
#define _TXB0EIDH_EID10_MASK                                0x4
#define _TXB0EIDH_EID11_POSN                                0x3
#define _TXB0EIDH_EID11_POSITION                            0x3
#define _TXB0EIDH_EID11_SIZE                                0x1
#define _TXB0EIDH_EID11_LENGTH                              0x1
#define _TXB0EIDH_EID11_MASK                                0x8
#define _TXB0EIDH_EID12_POSN                                0x4
#define _TXB0EIDH_EID12_POSITION                            0x4
#define _TXB0EIDH_EID12_SIZE                                0x1
#define _TXB0EIDH_EID12_LENGTH                              0x1
#define _TXB0EIDH_EID12_MASK                                0x10
#define _TXB0EIDH_EID13_POSN                                0x5
#define _TXB0EIDH_EID13_POSITION                            0x5
#define _TXB0EIDH_EID13_SIZE                                0x1
#define _TXB0EIDH_EID13_LENGTH                              0x1
#define _TXB0EIDH_EID13_MASK                                0x20
#define _TXB0EIDH_EID14_POSN                                0x6
#define _TXB0EIDH_EID14_POSITION                            0x6
#define _TXB0EIDH_EID14_SIZE                                0x1
#define _TXB0EIDH_EID14_LENGTH                              0x1
#define _TXB0EIDH_EID14_MASK                                0x40
#define _TXB0EIDH_EID15_POSN                                0x7
#define _TXB0EIDH_EID15_POSITION                            0x7
#define _TXB0EIDH_EID15_SIZE                                0x1
#define _TXB0EIDH_EID15_LENGTH                              0x1
#define _TXB0EIDH_EID15_MASK                                0x80
#define _TXB0EIDH_TXB0EID8_POSN                             0x0
#define _TXB0EIDH_TXB0EID8_POSITION                         0x0
#define _TXB0EIDH_TXB0EID8_SIZE                             0x1
#define _TXB0EIDH_TXB0EID8_LENGTH                           0x1
#define _TXB0EIDH_TXB0EID8_MASK                             0x1
#define _TXB0EIDH_TXB0EID9_POSN                             0x1
#define _TXB0EIDH_TXB0EID9_POSITION                         0x1
#define _TXB0EIDH_TXB0EID9_SIZE                             0x1
#define _TXB0EIDH_TXB0EID9_LENGTH                           0x1
#define _TXB0EIDH_TXB0EID9_MASK                             0x2
#define _TXB0EIDH_TXB0EID10_POSN                            0x2
#define _TXB0EIDH_TXB0EID10_POSITION                        0x2
#define _TXB0EIDH_TXB0EID10_SIZE                            0x1
#define _TXB0EIDH_TXB0EID10_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID10_MASK                            0x4
#define _TXB0EIDH_TXB0EID11_POSN                            0x3
#define _TXB0EIDH_TXB0EID11_POSITION                        0x3
#define _TXB0EIDH_TXB0EID11_SIZE                            0x1
#define _TXB0EIDH_TXB0EID11_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID11_MASK                            0x8
#define _TXB0EIDH_TXB0EID12_POSN                            0x4
#define _TXB0EIDH_TXB0EID12_POSITION                        0x4
#define _TXB0EIDH_TXB0EID12_SIZE                            0x1
#define _TXB0EIDH_TXB0EID12_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID12_MASK                            0x10
#define _TXB0EIDH_TXB0EID13_POSN                            0x5
#define _TXB0EIDH_TXB0EID13_POSITION                        0x5
#define _TXB0EIDH_TXB0EID13_SIZE                            0x1
#define _TXB0EIDH_TXB0EID13_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID13_MASK                            0x20
#define _TXB0EIDH_TXB0EID14_POSN                            0x6
#define _TXB0EIDH_TXB0EID14_POSITION                        0x6
#define _TXB0EIDH_TXB0EID14_SIZE                            0x1
#define _TXB0EIDH_TXB0EID14_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID14_MASK                            0x40
#define _TXB0EIDH_TXB0EID15_POSN                            0x7
#define _TXB0EIDH_TXB0EID15_POSITION                        0x7
#define _TXB0EIDH_TXB0EID15_SIZE                            0x1
#define _TXB0EIDH_TXB0EID15_LENGTH                          0x1
#define _TXB0EIDH_TXB0EID15_MASK                            0x80

// Register: TXB0EIDL
#define TXB0EIDL TXB0EIDL
extern volatile unsigned char           TXB0EIDL            __at(0xF44);
#ifndef _LIB_BUILD
asm("TXB0EIDL equ 0F44h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned TXB0EID0               :1;
        unsigned TXB0EID1               :1;
        unsigned TXB0EID2               :1;
        unsigned TXB0EID3               :1;
        unsigned TXB0EID4               :1;
        unsigned TXB0EID5               :1;
        unsigned TXB0EID6               :1;
        unsigned TXB0EID7               :1;
    };
} TXB0EIDLbits_t;
extern volatile TXB0EIDLbits_t TXB0EIDLbits __at(0xF44);
// bitfield macros
#define _TXB0EIDL_EID0_POSN                                 0x0
#define _TXB0EIDL_EID0_POSITION                             0x0
#define _TXB0EIDL_EID0_SIZE                                 0x1
#define _TXB0EIDL_EID0_LENGTH                               0x1
#define _TXB0EIDL_EID0_MASK                                 0x1
#define _TXB0EIDL_EID1_POSN                                 0x1
#define _TXB0EIDL_EID1_POSITION                             0x1
#define _TXB0EIDL_EID1_SIZE                                 0x1
#define _TXB0EIDL_EID1_LENGTH                               0x1
#define _TXB0EIDL_EID1_MASK                                 0x2
#define _TXB0EIDL_EID2_POSN                                 0x2
#define _TXB0EIDL_EID2_POSITION                             0x2
#define _TXB0EIDL_EID2_SIZE                                 0x1
#define _TXB0EIDL_EID2_LENGTH                               0x1
#define _TXB0EIDL_EID2_MASK                                 0x4
#define _TXB0EIDL_EID3_POSN                                 0x3
#define _TXB0EIDL_EID3_POSITION                             0x3
#define _TXB0EIDL_EID3_SIZE                                 0x1
#define _TXB0EIDL_EID3_LENGTH                               0x1
#define _TXB0EIDL_EID3_MASK                                 0x8
#define _TXB0EIDL_EID4_POSN                                 0x4
#define _TXB0EIDL_EID4_POSITION                             0x4
#define _TXB0EIDL_EID4_SIZE                                 0x1
#define _TXB0EIDL_EID4_LENGTH                               0x1
#define _TXB0EIDL_EID4_MASK                                 0x10
#define _TXB0EIDL_EID5_POSN                                 0x5
#define _TXB0EIDL_EID5_POSITION                             0x5
#define _TXB0EIDL_EID5_SIZE                                 0x1
#define _TXB0EIDL_EID5_LENGTH                               0x1
#define _TXB0EIDL_EID5_MASK                                 0x20
#define _TXB0EIDL_EID6_POSN                                 0x6
#define _TXB0EIDL_EID6_POSITION                             0x6
#define _TXB0EIDL_EID6_SIZE                                 0x1
#define _TXB0EIDL_EID6_LENGTH                               0x1
#define _TXB0EIDL_EID6_MASK                                 0x40
#define _TXB0EIDL_EID7_POSN                                 0x7
#define _TXB0EIDL_EID7_POSITION                             0x7
#define _TXB0EIDL_EID7_SIZE                                 0x1
#define _TXB0EIDL_EID7_LENGTH                               0x1
#define _TXB0EIDL_EID7_MASK                                 0x80
#define _TXB0EIDL_TXB0EID0_POSN                             0x0
#define _TXB0EIDL_TXB0EID0_POSITION                         0x0
#define _TXB0EIDL_TXB0EID0_SIZE                             0x1
#define _TXB0EIDL_TXB0EID0_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID0_MASK                             0x1
#define _TXB0EIDL_TXB0EID1_POSN                             0x1
#define _TXB0EIDL_TXB0EID1_POSITION                         0x1
#define _TXB0EIDL_TXB0EID1_SIZE                             0x1
#define _TXB0EIDL_TXB0EID1_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID1_MASK                             0x2
#define _TXB0EIDL_TXB0EID2_POSN                             0x2
#define _TXB0EIDL_TXB0EID2_POSITION                         0x2
#define _TXB0EIDL_TXB0EID2_SIZE                             0x1
#define _TXB0EIDL_TXB0EID2_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID2_MASK                             0x4
#define _TXB0EIDL_TXB0EID3_POSN                             0x3
#define _TXB0EIDL_TXB0EID3_POSITION                         0x3
#define _TXB0EIDL_TXB0EID3_SIZE                             0x1
#define _TXB0EIDL_TXB0EID3_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID3_MASK                             0x8
#define _TXB0EIDL_TXB0EID4_POSN                             0x4
#define _TXB0EIDL_TXB0EID4_POSITION                         0x4
#define _TXB0EIDL_TXB0EID4_SIZE                             0x1
#define _TXB0EIDL_TXB0EID4_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID4_MASK                             0x10
#define _TXB0EIDL_TXB0EID5_POSN                             0x5
#define _TXB0EIDL_TXB0EID5_POSITION                         0x5
#define _TXB0EIDL_TXB0EID5_SIZE                             0x1
#define _TXB0EIDL_TXB0EID5_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID5_MASK                             0x20
#define _TXB0EIDL_TXB0EID6_POSN                             0x6
#define _TXB0EIDL_TXB0EID6_POSITION                         0x6
#define _TXB0EIDL_TXB0EID6_SIZE                             0x1
#define _TXB0EIDL_TXB0EID6_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID6_MASK                             0x40
#define _TXB0EIDL_TXB0EID7_POSN                             0x7
#define _TXB0EIDL_TXB0EID7_POSITION                         0x7
#define _TXB0EIDL_TXB0EID7_SIZE                             0x1
#define _TXB0EIDL_TXB0EID7_LENGTH                           0x1
#define _TXB0EIDL_TXB0EID7_MASK                             0x80

// Register: TXB0DLC
#define TXB0DLC TXB0DLC
extern volatile unsigned char           TXB0DLC             __at(0xF45);
#ifndef _LIB_BUILD
asm("TXB0DLC equ 0F45h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned                        :2;
        unsigned TXRTR                  :1;
    };
    struct {
        unsigned TXB0DLC0               :1;
        unsigned TXB0DLC1               :1;
        unsigned TXB0DLC2               :1;
        unsigned TXB0DLC3               :1;
        unsigned                        :2;
        unsigned TXB0RTR                :1;
    };
} TXB0DLCbits_t;
extern volatile TXB0DLCbits_t TXB0DLCbits __at(0xF45);
// bitfield macros
#define _TXB0DLC_DLC0_POSN                                  0x0
#define _TXB0DLC_DLC0_POSITION                              0x0
#define _TXB0DLC_DLC0_SIZE                                  0x1
#define _TXB0DLC_DLC0_LENGTH                                0x1
#define _TXB0DLC_DLC0_MASK                                  0x1
#define _TXB0DLC_DLC1_POSN                                  0x1
#define _TXB0DLC_DLC1_POSITION                              0x1
#define _TXB0DLC_DLC1_SIZE                                  0x1
#define _TXB0DLC_DLC1_LENGTH                                0x1
#define _TXB0DLC_DLC1_MASK                                  0x2
#define _TXB0DLC_DLC2_POSN                                  0x2
#define _TXB0DLC_DLC2_POSITION                              0x2
#define _TXB0DLC_DLC2_SIZE                                  0x1
#define _TXB0DLC_DLC2_LENGTH                                0x1
#define _TXB0DLC_DLC2_MASK                                  0x4
#define _TXB0DLC_DLC3_POSN                                  0x3
#define _TXB0DLC_DLC3_POSITION                              0x3
#define _TXB0DLC_DLC3_SIZE                                  0x1
#define _TXB0DLC_DLC3_LENGTH                                0x1
#define _TXB0DLC_DLC3_MASK                                  0x8
#define _TXB0DLC_TXRTR_POSN                                 0x6
#define _TXB0DLC_TXRTR_POSITION                             0x6
#define _TXB0DLC_TXRTR_SIZE                                 0x1
#define _TXB0DLC_TXRTR_LENGTH                               0x1
#define _TXB0DLC_TXRTR_MASK                                 0x40
#define _TXB0DLC_TXB0DLC0_POSN                              0x0
#define _TXB0DLC_TXB0DLC0_POSITION                          0x0
#define _TXB0DLC_TXB0DLC0_SIZE                              0x1
#define _TXB0DLC_TXB0DLC0_LENGTH                            0x1
#define _TXB0DLC_TXB0DLC0_MASK                              0x1
#define _TXB0DLC_TXB0DLC1_POSN                              0x1
#define _TXB0DLC_TXB0DLC1_POSITION                          0x1
#define _TXB0DLC_TXB0DLC1_SIZE                              0x1
#define _TXB0DLC_TXB0DLC1_LENGTH                            0x1
#define _TXB0DLC_TXB0DLC1_MASK                              0x2
#define _TXB0DLC_TXB0DLC2_POSN                              0x2
#define _TXB0DLC_TXB0DLC2_POSITION                          0x2
#define _TXB0DLC_TXB0DLC2_SIZE                              0x1
#define _TXB0DLC_TXB0DLC2_LENGTH                            0x1
#define _TXB0DLC_TXB0DLC2_MASK                              0x4
#define _TXB0DLC_TXB0DLC3_POSN                              0x3
#define _TXB0DLC_TXB0DLC3_POSITION                          0x3
#define _TXB0DLC_TXB0DLC3_SIZE                              0x1
#define _TXB0DLC_TXB0DLC3_LENGTH                            0x1
#define _TXB0DLC_TXB0DLC3_MASK                              0x8
#define _TXB0DLC_TXB0RTR_POSN                               0x6
#define _TXB0DLC_TXB0RTR_POSITION                           0x6
#define _TXB0DLC_TXB0RTR_SIZE                               0x1
#define _TXB0DLC_TXB0RTR_LENGTH                             0x1
#define _TXB0DLC_TXB0RTR_MASK                               0x40

// Register: TXB0D0
#define TXB0D0 TXB0D0
extern volatile unsigned char           TXB0D0              __at(0xF46);
#ifndef _LIB_BUILD
asm("TXB0D0 equ 0F46h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D00                :1;
        unsigned TXB0D01                :1;
        unsigned TXB0D02                :1;
        unsigned TXB0D03                :1;
        unsigned TXB0D04                :1;
        unsigned TXB0D05                :1;
        unsigned TXB0D06                :1;
        unsigned TXB0D07                :1;
    };
} TXB0D0bits_t;
extern volatile TXB0D0bits_t TXB0D0bits __at(0xF46);
// bitfield macros
#define _TXB0D0_TXB0D00_POSN                                0x0
#define _TXB0D0_TXB0D00_POSITION                            0x0
#define _TXB0D0_TXB0D00_SIZE                                0x1
#define _TXB0D0_TXB0D00_LENGTH                              0x1
#define _TXB0D0_TXB0D00_MASK                                0x1
#define _TXB0D0_TXB0D01_POSN                                0x1
#define _TXB0D0_TXB0D01_POSITION                            0x1
#define _TXB0D0_TXB0D01_SIZE                                0x1
#define _TXB0D0_TXB0D01_LENGTH                              0x1
#define _TXB0D0_TXB0D01_MASK                                0x2
#define _TXB0D0_TXB0D02_POSN                                0x2
#define _TXB0D0_TXB0D02_POSITION                            0x2
#define _TXB0D0_TXB0D02_SIZE                                0x1
#define _TXB0D0_TXB0D02_LENGTH                              0x1
#define _TXB0D0_TXB0D02_MASK                                0x4
#define _TXB0D0_TXB0D03_POSN                                0x3
#define _TXB0D0_TXB0D03_POSITION                            0x3
#define _TXB0D0_TXB0D03_SIZE                                0x1
#define _TXB0D0_TXB0D03_LENGTH                              0x1
#define _TXB0D0_TXB0D03_MASK                                0x8
#define _TXB0D0_TXB0D04_POSN                                0x4
#define _TXB0D0_TXB0D04_POSITION                            0x4
#define _TXB0D0_TXB0D04_SIZE                                0x1
#define _TXB0D0_TXB0D04_LENGTH                              0x1
#define _TXB0D0_TXB0D04_MASK                                0x10
#define _TXB0D0_TXB0D05_POSN                                0x5
#define _TXB0D0_TXB0D05_POSITION                            0x5
#define _TXB0D0_TXB0D05_SIZE                                0x1
#define _TXB0D0_TXB0D05_LENGTH                              0x1
#define _TXB0D0_TXB0D05_MASK                                0x20
#define _TXB0D0_TXB0D06_POSN                                0x6
#define _TXB0D0_TXB0D06_POSITION                            0x6
#define _TXB0D0_TXB0D06_SIZE                                0x1
#define _TXB0D0_TXB0D06_LENGTH                              0x1
#define _TXB0D0_TXB0D06_MASK                                0x40
#define _TXB0D0_TXB0D07_POSN                                0x7
#define _TXB0D0_TXB0D07_POSITION                            0x7
#define _TXB0D0_TXB0D07_SIZE                                0x1
#define _TXB0D0_TXB0D07_LENGTH                              0x1
#define _TXB0D0_TXB0D07_MASK                                0x80

// Register: TXB0D1
#define TXB0D1 TXB0D1
extern volatile unsigned char           TXB0D1              __at(0xF47);
#ifndef _LIB_BUILD
asm("TXB0D1 equ 0F47h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D10                :1;
        unsigned TXB0D11                :1;
        unsigned TXB0D12                :1;
        unsigned TXB0D13                :1;
        unsigned TXB0D14                :1;
        unsigned TXB0D15                :1;
        unsigned TXB0D16                :1;
        unsigned TXB0D17                :1;
    };
} TXB0D1bits_t;
extern volatile TXB0D1bits_t TXB0D1bits __at(0xF47);
// bitfield macros
#define _TXB0D1_TXB0D10_POSN                                0x0
#define _TXB0D1_TXB0D10_POSITION                            0x0
#define _TXB0D1_TXB0D10_SIZE                                0x1
#define _TXB0D1_TXB0D10_LENGTH                              0x1
#define _TXB0D1_TXB0D10_MASK                                0x1
#define _TXB0D1_TXB0D11_POSN                                0x1
#define _TXB0D1_TXB0D11_POSITION                            0x1
#define _TXB0D1_TXB0D11_SIZE                                0x1
#define _TXB0D1_TXB0D11_LENGTH                              0x1
#define _TXB0D1_TXB0D11_MASK                                0x2
#define _TXB0D1_TXB0D12_POSN                                0x2
#define _TXB0D1_TXB0D12_POSITION                            0x2
#define _TXB0D1_TXB0D12_SIZE                                0x1
#define _TXB0D1_TXB0D12_LENGTH                              0x1
#define _TXB0D1_TXB0D12_MASK                                0x4
#define _TXB0D1_TXB0D13_POSN                                0x3
#define _TXB0D1_TXB0D13_POSITION                            0x3
#define _TXB0D1_TXB0D13_SIZE                                0x1
#define _TXB0D1_TXB0D13_LENGTH                              0x1
#define _TXB0D1_TXB0D13_MASK                                0x8
#define _TXB0D1_TXB0D14_POSN                                0x4
#define _TXB0D1_TXB0D14_POSITION                            0x4
#define _TXB0D1_TXB0D14_SIZE                                0x1
#define _TXB0D1_TXB0D14_LENGTH                              0x1
#define _TXB0D1_TXB0D14_MASK                                0x10
#define _TXB0D1_TXB0D15_POSN                                0x5
#define _TXB0D1_TXB0D15_POSITION                            0x5
#define _TXB0D1_TXB0D15_SIZE                                0x1
#define _TXB0D1_TXB0D15_LENGTH                              0x1
#define _TXB0D1_TXB0D15_MASK                                0x20
#define _TXB0D1_TXB0D16_POSN                                0x6
#define _TXB0D1_TXB0D16_POSITION                            0x6
#define _TXB0D1_TXB0D16_SIZE                                0x1
#define _TXB0D1_TXB0D16_LENGTH                              0x1
#define _TXB0D1_TXB0D16_MASK                                0x40
#define _TXB0D1_TXB0D17_POSN                                0x7
#define _TXB0D1_TXB0D17_POSITION                            0x7
#define _TXB0D1_TXB0D17_SIZE                                0x1
#define _TXB0D1_TXB0D17_LENGTH                              0x1
#define _TXB0D1_TXB0D17_MASK                                0x80

// Register: TXB0D2
#define TXB0D2 TXB0D2
extern volatile unsigned char           TXB0D2              __at(0xF48);
#ifndef _LIB_BUILD
asm("TXB0D2 equ 0F48h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D20                :1;
        unsigned TXB0D21                :1;
        unsigned TXB0D22                :1;
        unsigned TXB0D23                :1;
        unsigned TXB0D24                :1;
        unsigned TXB0D25                :1;
        unsigned TXB0D26                :1;
        unsigned TXB0D27                :1;
    };
} TXB0D2bits_t;
extern volatile TXB0D2bits_t TXB0D2bits __at(0xF48);
// bitfield macros
#define _TXB0D2_TXB0D20_POSN                                0x0
#define _TXB0D2_TXB0D20_POSITION                            0x0
#define _TXB0D2_TXB0D20_SIZE                                0x1
#define _TXB0D2_TXB0D20_LENGTH                              0x1
#define _TXB0D2_TXB0D20_MASK                                0x1
#define _TXB0D2_TXB0D21_POSN                                0x1
#define _TXB0D2_TXB0D21_POSITION                            0x1
#define _TXB0D2_TXB0D21_SIZE                                0x1
#define _TXB0D2_TXB0D21_LENGTH                              0x1
#define _TXB0D2_TXB0D21_MASK                                0x2
#define _TXB0D2_TXB0D22_POSN                                0x2
#define _TXB0D2_TXB0D22_POSITION                            0x2
#define _TXB0D2_TXB0D22_SIZE                                0x1
#define _TXB0D2_TXB0D22_LENGTH                              0x1
#define _TXB0D2_TXB0D22_MASK                                0x4
#define _TXB0D2_TXB0D23_POSN                                0x3
#define _TXB0D2_TXB0D23_POSITION                            0x3
#define _TXB0D2_TXB0D23_SIZE                                0x1
#define _TXB0D2_TXB0D23_LENGTH                              0x1
#define _TXB0D2_TXB0D23_MASK                                0x8
#define _TXB0D2_TXB0D24_POSN                                0x4
#define _TXB0D2_TXB0D24_POSITION                            0x4
#define _TXB0D2_TXB0D24_SIZE                                0x1
#define _TXB0D2_TXB0D24_LENGTH                              0x1
#define _TXB0D2_TXB0D24_MASK                                0x10
#define _TXB0D2_TXB0D25_POSN                                0x5
#define _TXB0D2_TXB0D25_POSITION                            0x5
#define _TXB0D2_TXB0D25_SIZE                                0x1
#define _TXB0D2_TXB0D25_LENGTH                              0x1
#define _TXB0D2_TXB0D25_MASK                                0x20
#define _TXB0D2_TXB0D26_POSN                                0x6
#define _TXB0D2_TXB0D26_POSITION                            0x6
#define _TXB0D2_TXB0D26_SIZE                                0x1
#define _TXB0D2_TXB0D26_LENGTH                              0x1
#define _TXB0D2_TXB0D26_MASK                                0x40
#define _TXB0D2_TXB0D27_POSN                                0x7
#define _TXB0D2_TXB0D27_POSITION                            0x7
#define _TXB0D2_TXB0D27_SIZE                                0x1
#define _TXB0D2_TXB0D27_LENGTH                              0x1
#define _TXB0D2_TXB0D27_MASK                                0x80

// Register: TXB0D3
#define TXB0D3 TXB0D3
extern volatile unsigned char           TXB0D3              __at(0xF49);
#ifndef _LIB_BUILD
asm("TXB0D3 equ 0F49h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D30                :1;
        unsigned TXB0D31                :1;
        unsigned TXB0D32                :1;
        unsigned TXB0D33                :1;
        unsigned TXB0D34                :1;
        unsigned TXB0D35                :1;
        unsigned TXB0D36                :1;
        unsigned TXB0D37                :1;
    };
} TXB0D3bits_t;
extern volatile TXB0D3bits_t TXB0D3bits __at(0xF49);
// bitfield macros
#define _TXB0D3_TXB0D30_POSN                                0x0
#define _TXB0D3_TXB0D30_POSITION                            0x0
#define _TXB0D3_TXB0D30_SIZE                                0x1
#define _TXB0D3_TXB0D30_LENGTH                              0x1
#define _TXB0D3_TXB0D30_MASK                                0x1
#define _TXB0D3_TXB0D31_POSN                                0x1
#define _TXB0D3_TXB0D31_POSITION                            0x1
#define _TXB0D3_TXB0D31_SIZE                                0x1
#define _TXB0D3_TXB0D31_LENGTH                              0x1
#define _TXB0D3_TXB0D31_MASK                                0x2
#define _TXB0D3_TXB0D32_POSN                                0x2
#define _TXB0D3_TXB0D32_POSITION                            0x2
#define _TXB0D3_TXB0D32_SIZE                                0x1
#define _TXB0D3_TXB0D32_LENGTH                              0x1
#define _TXB0D3_TXB0D32_MASK                                0x4
#define _TXB0D3_TXB0D33_POSN                                0x3
#define _TXB0D3_TXB0D33_POSITION                            0x3
#define _TXB0D3_TXB0D33_SIZE                                0x1
#define _TXB0D3_TXB0D33_LENGTH                              0x1
#define _TXB0D3_TXB0D33_MASK                                0x8
#define _TXB0D3_TXB0D34_POSN                                0x4
#define _TXB0D3_TXB0D34_POSITION                            0x4
#define _TXB0D3_TXB0D34_SIZE                                0x1
#define _TXB0D3_TXB0D34_LENGTH                              0x1
#define _TXB0D3_TXB0D34_MASK                                0x10
#define _TXB0D3_TXB0D35_POSN                                0x5
#define _TXB0D3_TXB0D35_POSITION                            0x5
#define _TXB0D3_TXB0D35_SIZE                                0x1
#define _TXB0D3_TXB0D35_LENGTH                              0x1
#define _TXB0D3_TXB0D35_MASK                                0x20
#define _TXB0D3_TXB0D36_POSN                                0x6
#define _TXB0D3_TXB0D36_POSITION                            0x6
#define _TXB0D3_TXB0D36_SIZE                                0x1
#define _TXB0D3_TXB0D36_LENGTH                              0x1
#define _TXB0D3_TXB0D36_MASK                                0x40
#define _TXB0D3_TXB0D37_POSN                                0x7
#define _TXB0D3_TXB0D37_POSITION                            0x7
#define _TXB0D3_TXB0D37_SIZE                                0x1
#define _TXB0D3_TXB0D37_LENGTH                              0x1
#define _TXB0D3_TXB0D37_MASK                                0x80

// Register: TXB0D4
#define TXB0D4 TXB0D4
extern volatile unsigned char           TXB0D4              __at(0xF4A);
#ifndef _LIB_BUILD
asm("TXB0D4 equ 0F4Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D40                :1;
        unsigned TXB0D41                :1;
        unsigned TXB0D42                :1;
        unsigned TXB0D43                :1;
        unsigned TXB0D44                :1;
        unsigned TXB0D45                :1;
        unsigned TXB0D46                :1;
        unsigned TXB0D47                :1;
    };
} TXB0D4bits_t;
extern volatile TXB0D4bits_t TXB0D4bits __at(0xF4A);
// bitfield macros
#define _TXB0D4_TXB0D40_POSN                                0x0
#define _TXB0D4_TXB0D40_POSITION                            0x0
#define _TXB0D4_TXB0D40_SIZE                                0x1
#define _TXB0D4_TXB0D40_LENGTH                              0x1
#define _TXB0D4_TXB0D40_MASK                                0x1
#define _TXB0D4_TXB0D41_POSN                                0x1
#define _TXB0D4_TXB0D41_POSITION                            0x1
#define _TXB0D4_TXB0D41_SIZE                                0x1
#define _TXB0D4_TXB0D41_LENGTH                              0x1
#define _TXB0D4_TXB0D41_MASK                                0x2
#define _TXB0D4_TXB0D42_POSN                                0x2
#define _TXB0D4_TXB0D42_POSITION                            0x2
#define _TXB0D4_TXB0D42_SIZE                                0x1
#define _TXB0D4_TXB0D42_LENGTH                              0x1
#define _TXB0D4_TXB0D42_MASK                                0x4
#define _TXB0D4_TXB0D43_POSN                                0x3
#define _TXB0D4_TXB0D43_POSITION                            0x3
#define _TXB0D4_TXB0D43_SIZE                                0x1
#define _TXB0D4_TXB0D43_LENGTH                              0x1
#define _TXB0D4_TXB0D43_MASK                                0x8
#define _TXB0D4_TXB0D44_POSN                                0x4
#define _TXB0D4_TXB0D44_POSITION                            0x4
#define _TXB0D4_TXB0D44_SIZE                                0x1
#define _TXB0D4_TXB0D44_LENGTH                              0x1
#define _TXB0D4_TXB0D44_MASK                                0x10
#define _TXB0D4_TXB0D45_POSN                                0x5
#define _TXB0D4_TXB0D45_POSITION                            0x5
#define _TXB0D4_TXB0D45_SIZE                                0x1
#define _TXB0D4_TXB0D45_LENGTH                              0x1
#define _TXB0D4_TXB0D45_MASK                                0x20
#define _TXB0D4_TXB0D46_POSN                                0x6
#define _TXB0D4_TXB0D46_POSITION                            0x6
#define _TXB0D4_TXB0D46_SIZE                                0x1
#define _TXB0D4_TXB0D46_LENGTH                              0x1
#define _TXB0D4_TXB0D46_MASK                                0x40
#define _TXB0D4_TXB0D47_POSN                                0x7
#define _TXB0D4_TXB0D47_POSITION                            0x7
#define _TXB0D4_TXB0D47_SIZE                                0x1
#define _TXB0D4_TXB0D47_LENGTH                              0x1
#define _TXB0D4_TXB0D47_MASK                                0x80

// Register: TXB0D5
#define TXB0D5 TXB0D5
extern volatile unsigned char           TXB0D5              __at(0xF4B);
#ifndef _LIB_BUILD
asm("TXB0D5 equ 0F4Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D50                :1;
        unsigned TXB0D51                :1;
        unsigned TXB0D52                :1;
        unsigned TXB0D53                :1;
        unsigned TXB0D54                :1;
        unsigned TXB0D55                :1;
        unsigned TXB0D56                :1;
        unsigned TXB0D57                :1;
    };
} TXB0D5bits_t;
extern volatile TXB0D5bits_t TXB0D5bits __at(0xF4B);
// bitfield macros
#define _TXB0D5_TXB0D50_POSN                                0x0
#define _TXB0D5_TXB0D50_POSITION                            0x0
#define _TXB0D5_TXB0D50_SIZE                                0x1
#define _TXB0D5_TXB0D50_LENGTH                              0x1
#define _TXB0D5_TXB0D50_MASK                                0x1
#define _TXB0D5_TXB0D51_POSN                                0x1
#define _TXB0D5_TXB0D51_POSITION                            0x1
#define _TXB0D5_TXB0D51_SIZE                                0x1
#define _TXB0D5_TXB0D51_LENGTH                              0x1
#define _TXB0D5_TXB0D51_MASK                                0x2
#define _TXB0D5_TXB0D52_POSN                                0x2
#define _TXB0D5_TXB0D52_POSITION                            0x2
#define _TXB0D5_TXB0D52_SIZE                                0x1
#define _TXB0D5_TXB0D52_LENGTH                              0x1
#define _TXB0D5_TXB0D52_MASK                                0x4
#define _TXB0D5_TXB0D53_POSN                                0x3
#define _TXB0D5_TXB0D53_POSITION                            0x3
#define _TXB0D5_TXB0D53_SIZE                                0x1
#define _TXB0D5_TXB0D53_LENGTH                              0x1
#define _TXB0D5_TXB0D53_MASK                                0x8
#define _TXB0D5_TXB0D54_POSN                                0x4
#define _TXB0D5_TXB0D54_POSITION                            0x4
#define _TXB0D5_TXB0D54_SIZE                                0x1
#define _TXB0D5_TXB0D54_LENGTH                              0x1
#define _TXB0D5_TXB0D54_MASK                                0x10
#define _TXB0D5_TXB0D55_POSN                                0x5
#define _TXB0D5_TXB0D55_POSITION                            0x5
#define _TXB0D5_TXB0D55_SIZE                                0x1
#define _TXB0D5_TXB0D55_LENGTH                              0x1
#define _TXB0D5_TXB0D55_MASK                                0x20
#define _TXB0D5_TXB0D56_POSN                                0x6
#define _TXB0D5_TXB0D56_POSITION                            0x6
#define _TXB0D5_TXB0D56_SIZE                                0x1
#define _TXB0D5_TXB0D56_LENGTH                              0x1
#define _TXB0D5_TXB0D56_MASK                                0x40
#define _TXB0D5_TXB0D57_POSN                                0x7
#define _TXB0D5_TXB0D57_POSITION                            0x7
#define _TXB0D5_TXB0D57_SIZE                                0x1
#define _TXB0D5_TXB0D57_LENGTH                              0x1
#define _TXB0D5_TXB0D57_MASK                                0x80

// Register: TXB0D6
#define TXB0D6 TXB0D6
extern volatile unsigned char           TXB0D6              __at(0xF4C);
#ifndef _LIB_BUILD
asm("TXB0D6 equ 0F4Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D60                :1;
        unsigned TXB0D61                :1;
        unsigned TXB0D62                :1;
        unsigned TXB0D63                :1;
        unsigned TXB0D64                :1;
        unsigned TXB0D65                :1;
        unsigned TXB0D66                :1;
        unsigned TXB0D67                :1;
    };
} TXB0D6bits_t;
extern volatile TXB0D6bits_t TXB0D6bits __at(0xF4C);
// bitfield macros
#define _TXB0D6_TXB0D60_POSN                                0x0
#define _TXB0D6_TXB0D60_POSITION                            0x0
#define _TXB0D6_TXB0D60_SIZE                                0x1
#define _TXB0D6_TXB0D60_LENGTH                              0x1
#define _TXB0D6_TXB0D60_MASK                                0x1
#define _TXB0D6_TXB0D61_POSN                                0x1
#define _TXB0D6_TXB0D61_POSITION                            0x1
#define _TXB0D6_TXB0D61_SIZE                                0x1
#define _TXB0D6_TXB0D61_LENGTH                              0x1
#define _TXB0D6_TXB0D61_MASK                                0x2
#define _TXB0D6_TXB0D62_POSN                                0x2
#define _TXB0D6_TXB0D62_POSITION                            0x2
#define _TXB0D6_TXB0D62_SIZE                                0x1
#define _TXB0D6_TXB0D62_LENGTH                              0x1
#define _TXB0D6_TXB0D62_MASK                                0x4
#define _TXB0D6_TXB0D63_POSN                                0x3
#define _TXB0D6_TXB0D63_POSITION                            0x3
#define _TXB0D6_TXB0D63_SIZE                                0x1
#define _TXB0D6_TXB0D63_LENGTH                              0x1
#define _TXB0D6_TXB0D63_MASK                                0x8
#define _TXB0D6_TXB0D64_POSN                                0x4
#define _TXB0D6_TXB0D64_POSITION                            0x4
#define _TXB0D6_TXB0D64_SIZE                                0x1
#define _TXB0D6_TXB0D64_LENGTH                              0x1
#define _TXB0D6_TXB0D64_MASK                                0x10
#define _TXB0D6_TXB0D65_POSN                                0x5
#define _TXB0D6_TXB0D65_POSITION                            0x5
#define _TXB0D6_TXB0D65_SIZE                                0x1
#define _TXB0D6_TXB0D65_LENGTH                              0x1
#define _TXB0D6_TXB0D65_MASK                                0x20
#define _TXB0D6_TXB0D66_POSN                                0x6
#define _TXB0D6_TXB0D66_POSITION                            0x6
#define _TXB0D6_TXB0D66_SIZE                                0x1
#define _TXB0D6_TXB0D66_LENGTH                              0x1
#define _TXB0D6_TXB0D66_MASK                                0x40
#define _TXB0D6_TXB0D67_POSN                                0x7
#define _TXB0D6_TXB0D67_POSITION                            0x7
#define _TXB0D6_TXB0D67_SIZE                                0x1
#define _TXB0D6_TXB0D67_LENGTH                              0x1
#define _TXB0D6_TXB0D67_MASK                                0x80

// Register: TXB0D7
#define TXB0D7 TXB0D7
extern volatile unsigned char           TXB0D7              __at(0xF4D);
#ifndef _LIB_BUILD
asm("TXB0D7 equ 0F4Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXB0D70                :1;
        unsigned TXB0D71                :1;
        unsigned TXB0D72                :1;
        unsigned TXB0D73                :1;
        unsigned TXB0D74                :1;
        unsigned TXB0D75                :1;
        unsigned TXB0D76                :1;
        unsigned TXB0D77                :1;
    };
} TXB0D7bits_t;
extern volatile TXB0D7bits_t TXB0D7bits __at(0xF4D);
// bitfield macros
#define _TXB0D7_TXB0D70_POSN                                0x0
#define _TXB0D7_TXB0D70_POSITION                            0x0
#define _TXB0D7_TXB0D70_SIZE                                0x1
#define _TXB0D7_TXB0D70_LENGTH                              0x1
#define _TXB0D7_TXB0D70_MASK                                0x1
#define _TXB0D7_TXB0D71_POSN                                0x1
#define _TXB0D7_TXB0D71_POSITION                            0x1
#define _TXB0D7_TXB0D71_SIZE                                0x1
#define _TXB0D7_TXB0D71_LENGTH                              0x1
#define _TXB0D7_TXB0D71_MASK                                0x2
#define _TXB0D7_TXB0D72_POSN                                0x2
#define _TXB0D7_TXB0D72_POSITION                            0x2
#define _TXB0D7_TXB0D72_SIZE                                0x1
#define _TXB0D7_TXB0D72_LENGTH                              0x1
#define _TXB0D7_TXB0D72_MASK                                0x4
#define _TXB0D7_TXB0D73_POSN                                0x3
#define _TXB0D7_TXB0D73_POSITION                            0x3
#define _TXB0D7_TXB0D73_SIZE                                0x1
#define _TXB0D7_TXB0D73_LENGTH                              0x1
#define _TXB0D7_TXB0D73_MASK                                0x8
#define _TXB0D7_TXB0D74_POSN                                0x4
#define _TXB0D7_TXB0D74_POSITION                            0x4
#define _TXB0D7_TXB0D74_SIZE                                0x1
#define _TXB0D7_TXB0D74_LENGTH                              0x1
#define _TXB0D7_TXB0D74_MASK                                0x10
#define _TXB0D7_TXB0D75_POSN                                0x5
#define _TXB0D7_TXB0D75_POSITION                            0x5
#define _TXB0D7_TXB0D75_SIZE                                0x1
#define _TXB0D7_TXB0D75_LENGTH                              0x1
#define _TXB0D7_TXB0D75_MASK                                0x20
#define _TXB0D7_TXB0D76_POSN                                0x6
#define _TXB0D7_TXB0D76_POSITION                            0x6
#define _TXB0D7_TXB0D76_SIZE                                0x1
#define _TXB0D7_TXB0D76_LENGTH                              0x1
#define _TXB0D7_TXB0D76_MASK                                0x40
#define _TXB0D7_TXB0D77_POSN                                0x7
#define _TXB0D7_TXB0D77_POSITION                            0x7
#define _TXB0D7_TXB0D77_SIZE                                0x1
#define _TXB0D7_TXB0D77_LENGTH                              0x1
#define _TXB0D7_TXB0D77_MASK                                0x80

// Register: CANSTAT_RO1
#define CANSTAT_RO1 CANSTAT_RO1
extern volatile unsigned char           CANSTAT_RO1         __at(0xF4E);
#ifndef _LIB_BUILD
asm("CANSTAT_RO1 equ 0F4Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EICODE0                :1;
        unsigned EICODE1_ICODE0         :1;
        unsigned EICODE2_ICODE1         :1;
        unsigned EICODE3_ICODE2         :1;
        unsigned EICODE4                :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTAT_RO1bits_t;
extern volatile CANSTAT_RO1bits_t CANSTAT_RO1bits __at(0xF4E);
// bitfield macros
#define _CANSTAT_RO1_EICODE0_POSN                           0x0
#define _CANSTAT_RO1_EICODE0_POSITION                       0x0
#define _CANSTAT_RO1_EICODE0_SIZE                           0x1
#define _CANSTAT_RO1_EICODE0_LENGTH                         0x1
#define _CANSTAT_RO1_EICODE0_MASK                           0x1
#define _CANSTAT_RO1_EICODE1_ICODE0_POSN                    0x1
#define _CANSTAT_RO1_EICODE1_ICODE0_POSITION                0x1
#define _CANSTAT_RO1_EICODE1_ICODE0_SIZE                    0x1
#define _CANSTAT_RO1_EICODE1_ICODE0_LENGTH                  0x1
#define _CANSTAT_RO1_EICODE1_ICODE0_MASK                    0x2
#define _CANSTAT_RO1_EICODE2_ICODE1_POSN                    0x2
#define _CANSTAT_RO1_EICODE2_ICODE1_POSITION                0x2
#define _CANSTAT_RO1_EICODE2_ICODE1_SIZE                    0x1
#define _CANSTAT_RO1_EICODE2_ICODE1_LENGTH                  0x1
#define _CANSTAT_RO1_EICODE2_ICODE1_MASK                    0x4
#define _CANSTAT_RO1_EICODE3_ICODE2_POSN                    0x3
#define _CANSTAT_RO1_EICODE3_ICODE2_POSITION                0x3
#define _CANSTAT_RO1_EICODE3_ICODE2_SIZE                    0x1
#define _CANSTAT_RO1_EICODE3_ICODE2_LENGTH                  0x1
#define _CANSTAT_RO1_EICODE3_ICODE2_MASK                    0x8
#define _CANSTAT_RO1_EICODE4_POSN                           0x4
#define _CANSTAT_RO1_EICODE4_POSITION                       0x4
#define _CANSTAT_RO1_EICODE4_SIZE                           0x1
#define _CANSTAT_RO1_EICODE4_LENGTH                         0x1
#define _CANSTAT_RO1_EICODE4_MASK                           0x10
#define _CANSTAT_RO1_OPMODE0_POSN                           0x5
#define _CANSTAT_RO1_OPMODE0_POSITION                       0x5
#define _CANSTAT_RO1_OPMODE0_SIZE                           0x1
#define _CANSTAT_RO1_OPMODE0_LENGTH                         0x1
#define _CANSTAT_RO1_OPMODE0_MASK                           0x20
#define _CANSTAT_RO1_OPMODE1_POSN                           0x6
#define _CANSTAT_RO1_OPMODE1_POSITION                       0x6
#define _CANSTAT_RO1_OPMODE1_SIZE                           0x1
#define _CANSTAT_RO1_OPMODE1_LENGTH                         0x1
#define _CANSTAT_RO1_OPMODE1_MASK                           0x40
#define _CANSTAT_RO1_OPMODE2_POSN                           0x7
#define _CANSTAT_RO1_OPMODE2_POSITION                       0x7
#define _CANSTAT_RO1_OPMODE2_SIZE                           0x1
#define _CANSTAT_RO1_OPMODE2_LENGTH                         0x1
#define _CANSTAT_RO1_OPMODE2_MASK                           0x80

// Register: CANCON_RO1
#define CANCON_RO1 CANCON_RO1
extern volatile unsigned char           CANCON_RO1          __at(0xF4F);
#ifndef _LIB_BUILD
asm("CANCON_RO1 equ 0F4Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FP0                    :1;
        unsigned WIN0_FP1               :1;
        unsigned WIN1_FP2               :1;
        unsigned WIN2_FP3               :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
} CANCON_RO1bits_t;
extern volatile CANCON_RO1bits_t CANCON_RO1bits __at(0xF4F);
// bitfield macros
#define _CANCON_RO1_FP0_POSN                                0x0
#define _CANCON_RO1_FP0_POSITION                            0x0
#define _CANCON_RO1_FP0_SIZE                                0x1
#define _CANCON_RO1_FP0_LENGTH                              0x1
#define _CANCON_RO1_FP0_MASK                                0x1
#define _CANCON_RO1_WIN0_FP1_POSN                           0x1
#define _CANCON_RO1_WIN0_FP1_POSITION                       0x1
#define _CANCON_RO1_WIN0_FP1_SIZE                           0x1
#define _CANCON_RO1_WIN0_FP1_LENGTH                         0x1
#define _CANCON_RO1_WIN0_FP1_MASK                           0x2
#define _CANCON_RO1_WIN1_FP2_POSN                           0x2
#define _CANCON_RO1_WIN1_FP2_POSITION                       0x2
#define _CANCON_RO1_WIN1_FP2_SIZE                           0x1
#define _CANCON_RO1_WIN1_FP2_LENGTH                         0x1
#define _CANCON_RO1_WIN1_FP2_MASK                           0x4
#define _CANCON_RO1_WIN2_FP3_POSN                           0x3
#define _CANCON_RO1_WIN2_FP3_POSITION                       0x3
#define _CANCON_RO1_WIN2_FP3_SIZE                           0x1
#define _CANCON_RO1_WIN2_FP3_LENGTH                         0x1
#define _CANCON_RO1_WIN2_FP3_MASK                           0x8
#define _CANCON_RO1_ABAT_POSN                               0x4
#define _CANCON_RO1_ABAT_POSITION                           0x4
#define _CANCON_RO1_ABAT_SIZE                               0x1
#define _CANCON_RO1_ABAT_LENGTH                             0x1
#define _CANCON_RO1_ABAT_MASK                               0x10
#define _CANCON_RO1_REQOP0_POSN                             0x5
#define _CANCON_RO1_REQOP0_POSITION                         0x5
#define _CANCON_RO1_REQOP0_SIZE                             0x1
#define _CANCON_RO1_REQOP0_LENGTH                           0x1
#define _CANCON_RO1_REQOP0_MASK                             0x20
#define _CANCON_RO1_REQOP1_POSN                             0x6
#define _CANCON_RO1_REQOP1_POSITION                         0x6
#define _CANCON_RO1_REQOP1_SIZE                             0x1
#define _CANCON_RO1_REQOP1_LENGTH                           0x1
#define _CANCON_RO1_REQOP1_MASK                             0x40
#define _CANCON_RO1_REQOP2_POSN                             0x7
#define _CANCON_RO1_REQOP2_POSITION                         0x7
#define _CANCON_RO1_REQOP2_SIZE                             0x1
#define _CANCON_RO1_REQOP2_LENGTH                           0x1
#define _CANCON_RO1_REQOP2_MASK                             0x80

// Register: RXB1CON
#define RXB1CON RXB1CON
extern volatile unsigned char           RXB1CON             __at(0xF50);
#ifndef _LIB_BUILD
asm("RXB1CON equ 0F50h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FILHIT0                :1;
        unsigned FILHIT1                :1;
        unsigned FILHIT2                :1;
        unsigned RXRTRRO_FILHIT3        :1;
        unsigned FILHIT4                :1;
        unsigned RXM0_RTRRO             :1;
        unsigned RXM1                   :1;
        unsigned RXFUL                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned RXRTRRO                :1;
        unsigned                        :1;
        unsigned RXM0                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned FILHIT3                :1;
        unsigned                        :1;
        unsigned RTRRO                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned RXRTRR0                :1;
    };
    struct {
        unsigned                        :3;
        unsigned RTRRO_FILHIT3          :1;
    };
    struct {
        unsigned RXB1FILHIT0            :1;
        unsigned RXB1FILHIT1            :1;
        unsigned RXB1FILHIT2            :1;
        unsigned RXB1FILHIT3            :1;
        unsigned RXB1FILHIT4            :1;
        unsigned RXB1M0                 :1;
        unsigned RXB1M1                 :1;
        unsigned RXB1FUL                :1;
    };
    struct {
        unsigned                        :3;
        unsigned RXB1RTRR0              :1;
        unsigned                        :1;
        unsigned RXB1RTRRO              :1;
    };
} RXB1CONbits_t;
extern volatile RXB1CONbits_t RXB1CONbits __at(0xF50);
// bitfield macros
#define _RXB1CON_FILHIT0_POSN                               0x0
#define _RXB1CON_FILHIT0_POSITION                           0x0
#define _RXB1CON_FILHIT0_SIZE                               0x1
#define _RXB1CON_FILHIT0_LENGTH                             0x1
#define _RXB1CON_FILHIT0_MASK                               0x1
#define _RXB1CON_FILHIT1_POSN                               0x1
#define _RXB1CON_FILHIT1_POSITION                           0x1
#define _RXB1CON_FILHIT1_SIZE                               0x1
#define _RXB1CON_FILHIT1_LENGTH                             0x1
#define _RXB1CON_FILHIT1_MASK                               0x2
#define _RXB1CON_FILHIT2_POSN                               0x2
#define _RXB1CON_FILHIT2_POSITION                           0x2
#define _RXB1CON_FILHIT2_SIZE                               0x1
#define _RXB1CON_FILHIT2_LENGTH                             0x1
#define _RXB1CON_FILHIT2_MASK                               0x4
#define _RXB1CON_RXRTRRO_FILHIT3_POSN                       0x3
#define _RXB1CON_RXRTRRO_FILHIT3_POSITION                   0x3
#define _RXB1CON_RXRTRRO_FILHIT3_SIZE                       0x1
#define _RXB1CON_RXRTRRO_FILHIT3_LENGTH                     0x1
#define _RXB1CON_RXRTRRO_FILHIT3_MASK                       0x8
#define _RXB1CON_FILHIT4_POSN                               0x4
#define _RXB1CON_FILHIT4_POSITION                           0x4
#define _RXB1CON_FILHIT4_SIZE                               0x1
#define _RXB1CON_FILHIT4_LENGTH                             0x1
#define _RXB1CON_FILHIT4_MASK                               0x10
#define _RXB1CON_RXM0_RTRRO_POSN                            0x5
#define _RXB1CON_RXM0_RTRRO_POSITION                        0x5
#define _RXB1CON_RXM0_RTRRO_SIZE                            0x1
#define _RXB1CON_RXM0_RTRRO_LENGTH                          0x1
#define _RXB1CON_RXM0_RTRRO_MASK                            0x20
#define _RXB1CON_RXM1_POSN                                  0x6
#define _RXB1CON_RXM1_POSITION                              0x6
#define _RXB1CON_RXM1_SIZE                                  0x1
#define _RXB1CON_RXM1_LENGTH                                0x1
#define _RXB1CON_RXM1_MASK                                  0x40
#define _RXB1CON_RXFUL_POSN                                 0x7
#define _RXB1CON_RXFUL_POSITION                             0x7
#define _RXB1CON_RXFUL_SIZE                                 0x1
#define _RXB1CON_RXFUL_LENGTH                               0x1
#define _RXB1CON_RXFUL_MASK                                 0x80
#define _RXB1CON_RXRTRRO_POSN                               0x3
#define _RXB1CON_RXRTRRO_POSITION                           0x3
#define _RXB1CON_RXRTRRO_SIZE                               0x1
#define _RXB1CON_RXRTRRO_LENGTH                             0x1
#define _RXB1CON_RXRTRRO_MASK                               0x8
#define _RXB1CON_RXM0_POSN                                  0x5
#define _RXB1CON_RXM0_POSITION                              0x5
#define _RXB1CON_RXM0_SIZE                                  0x1
#define _RXB1CON_RXM0_LENGTH                                0x1
#define _RXB1CON_RXM0_MASK                                  0x20
#define _RXB1CON_FILHIT3_POSN                               0x3
#define _RXB1CON_FILHIT3_POSITION                           0x3
#define _RXB1CON_FILHIT3_SIZE                               0x1
#define _RXB1CON_FILHIT3_LENGTH                             0x1
#define _RXB1CON_FILHIT3_MASK                               0x8
#define _RXB1CON_RTRRO_POSN                                 0x5
#define _RXB1CON_RTRRO_POSITION                             0x5
#define _RXB1CON_RTRRO_SIZE                                 0x1
#define _RXB1CON_RTRRO_LENGTH                               0x1
#define _RXB1CON_RTRRO_MASK                                 0x20
#define _RXB1CON_RXRTRR0_POSN                               0x3
#define _RXB1CON_RXRTRR0_POSITION                           0x3
#define _RXB1CON_RXRTRR0_SIZE                               0x1
#define _RXB1CON_RXRTRR0_LENGTH                             0x1
#define _RXB1CON_RXRTRR0_MASK                               0x8
#define _RXB1CON_RTRRO_FILHIT3_POSN                         0x3
#define _RXB1CON_RTRRO_FILHIT3_POSITION                     0x3
#define _RXB1CON_RTRRO_FILHIT3_SIZE                         0x1
#define _RXB1CON_RTRRO_FILHIT3_LENGTH                       0x1
#define _RXB1CON_RTRRO_FILHIT3_MASK                         0x8
#define _RXB1CON_RXB1FILHIT0_POSN                           0x0
#define _RXB1CON_RXB1FILHIT0_POSITION                       0x0
#define _RXB1CON_RXB1FILHIT0_SIZE                           0x1
#define _RXB1CON_RXB1FILHIT0_LENGTH                         0x1
#define _RXB1CON_RXB1FILHIT0_MASK                           0x1
#define _RXB1CON_RXB1FILHIT1_POSN                           0x1
#define _RXB1CON_RXB1FILHIT1_POSITION                       0x1
#define _RXB1CON_RXB1FILHIT1_SIZE                           0x1
#define _RXB1CON_RXB1FILHIT1_LENGTH                         0x1
#define _RXB1CON_RXB1FILHIT1_MASK                           0x2
#define _RXB1CON_RXB1FILHIT2_POSN                           0x2
#define _RXB1CON_RXB1FILHIT2_POSITION                       0x2
#define _RXB1CON_RXB1FILHIT2_SIZE                           0x1
#define _RXB1CON_RXB1FILHIT2_LENGTH                         0x1
#define _RXB1CON_RXB1FILHIT2_MASK                           0x4
#define _RXB1CON_RXB1FILHIT3_POSN                           0x3
#define _RXB1CON_RXB1FILHIT3_POSITION                       0x3
#define _RXB1CON_RXB1FILHIT3_SIZE                           0x1
#define _RXB1CON_RXB1FILHIT3_LENGTH                         0x1
#define _RXB1CON_RXB1FILHIT3_MASK                           0x8
#define _RXB1CON_RXB1FILHIT4_POSN                           0x4
#define _RXB1CON_RXB1FILHIT4_POSITION                       0x4
#define _RXB1CON_RXB1FILHIT4_SIZE                           0x1
#define _RXB1CON_RXB1FILHIT4_LENGTH                         0x1
#define _RXB1CON_RXB1FILHIT4_MASK                           0x10
#define _RXB1CON_RXB1M0_POSN                                0x5
#define _RXB1CON_RXB1M0_POSITION                            0x5
#define _RXB1CON_RXB1M0_SIZE                                0x1
#define _RXB1CON_RXB1M0_LENGTH                              0x1
#define _RXB1CON_RXB1M0_MASK                                0x20
#define _RXB1CON_RXB1M1_POSN                                0x6
#define _RXB1CON_RXB1M1_POSITION                            0x6
#define _RXB1CON_RXB1M1_SIZE                                0x1
#define _RXB1CON_RXB1M1_LENGTH                              0x1
#define _RXB1CON_RXB1M1_MASK                                0x40
#define _RXB1CON_RXB1FUL_POSN                               0x7
#define _RXB1CON_RXB1FUL_POSITION                           0x7
#define _RXB1CON_RXB1FUL_SIZE                               0x1
#define _RXB1CON_RXB1FUL_LENGTH                             0x1
#define _RXB1CON_RXB1FUL_MASK                               0x80
#define _RXB1CON_RXB1RTRR0_POSN                             0x3
#define _RXB1CON_RXB1RTRR0_POSITION                         0x3
#define _RXB1CON_RXB1RTRR0_SIZE                             0x1
#define _RXB1CON_RXB1RTRR0_LENGTH                           0x1
#define _RXB1CON_RXB1RTRR0_MASK                             0x8
#define _RXB1CON_RXB1RTRRO_POSN                             0x5
#define _RXB1CON_RXB1RTRRO_POSITION                         0x5
#define _RXB1CON_RXB1RTRRO_SIZE                             0x1
#define _RXB1CON_RXB1RTRRO_LENGTH                           0x1
#define _RXB1CON_RXB1RTRRO_MASK                             0x20

// Register: RXB1SIDH
#define RXB1SIDH RXB1SIDH
extern volatile unsigned char           RXB1SIDH            __at(0xF51);
#ifndef _LIB_BUILD
asm("RXB1SIDH equ 0F51h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXB1SID3               :1;
        unsigned RXB1SID4               :1;
        unsigned RXB1SID5               :1;
        unsigned RXB1SID6               :1;
        unsigned RXB1SID7               :1;
        unsigned RXB1SID8               :1;
        unsigned RXB1SID9               :1;
        unsigned RXB1SID10              :1;
    };
} RXB1SIDHbits_t;
extern volatile RXB1SIDHbits_t RXB1SIDHbits __at(0xF51);
// bitfield macros
#define _RXB1SIDH_SID3_POSN                                 0x0
#define _RXB1SIDH_SID3_POSITION                             0x0
#define _RXB1SIDH_SID3_SIZE                                 0x1
#define _RXB1SIDH_SID3_LENGTH                               0x1
#define _RXB1SIDH_SID3_MASK                                 0x1
#define _RXB1SIDH_SID4_POSN                                 0x1
#define _RXB1SIDH_SID4_POSITION                             0x1
#define _RXB1SIDH_SID4_SIZE                                 0x1
#define _RXB1SIDH_SID4_LENGTH                               0x1
#define _RXB1SIDH_SID4_MASK                                 0x2
#define _RXB1SIDH_SID5_POSN                                 0x2
#define _RXB1SIDH_SID5_POSITION                             0x2
#define _RXB1SIDH_SID5_SIZE                                 0x1
#define _RXB1SIDH_SID5_LENGTH                               0x1
#define _RXB1SIDH_SID5_MASK                                 0x4
#define _RXB1SIDH_SID6_POSN                                 0x3
#define _RXB1SIDH_SID6_POSITION                             0x3
#define _RXB1SIDH_SID6_SIZE                                 0x1
#define _RXB1SIDH_SID6_LENGTH                               0x1
#define _RXB1SIDH_SID6_MASK                                 0x8
#define _RXB1SIDH_SID7_POSN                                 0x4
#define _RXB1SIDH_SID7_POSITION                             0x4
#define _RXB1SIDH_SID7_SIZE                                 0x1
#define _RXB1SIDH_SID7_LENGTH                               0x1
#define _RXB1SIDH_SID7_MASK                                 0x10
#define _RXB1SIDH_SID8_POSN                                 0x5
#define _RXB1SIDH_SID8_POSITION                             0x5
#define _RXB1SIDH_SID8_SIZE                                 0x1
#define _RXB1SIDH_SID8_LENGTH                               0x1
#define _RXB1SIDH_SID8_MASK                                 0x20
#define _RXB1SIDH_SID9_POSN                                 0x6
#define _RXB1SIDH_SID9_POSITION                             0x6
#define _RXB1SIDH_SID9_SIZE                                 0x1
#define _RXB1SIDH_SID9_LENGTH                               0x1
#define _RXB1SIDH_SID9_MASK                                 0x40
#define _RXB1SIDH_SID10_POSN                                0x7
#define _RXB1SIDH_SID10_POSITION                            0x7
#define _RXB1SIDH_SID10_SIZE                                0x1
#define _RXB1SIDH_SID10_LENGTH                              0x1
#define _RXB1SIDH_SID10_MASK                                0x80
#define _RXB1SIDH_RXB1SID3_POSN                             0x0
#define _RXB1SIDH_RXB1SID3_POSITION                         0x0
#define _RXB1SIDH_RXB1SID3_SIZE                             0x1
#define _RXB1SIDH_RXB1SID3_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID3_MASK                             0x1
#define _RXB1SIDH_RXB1SID4_POSN                             0x1
#define _RXB1SIDH_RXB1SID4_POSITION                         0x1
#define _RXB1SIDH_RXB1SID4_SIZE                             0x1
#define _RXB1SIDH_RXB1SID4_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID4_MASK                             0x2
#define _RXB1SIDH_RXB1SID5_POSN                             0x2
#define _RXB1SIDH_RXB1SID5_POSITION                         0x2
#define _RXB1SIDH_RXB1SID5_SIZE                             0x1
#define _RXB1SIDH_RXB1SID5_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID5_MASK                             0x4
#define _RXB1SIDH_RXB1SID6_POSN                             0x3
#define _RXB1SIDH_RXB1SID6_POSITION                         0x3
#define _RXB1SIDH_RXB1SID6_SIZE                             0x1
#define _RXB1SIDH_RXB1SID6_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID6_MASK                             0x8
#define _RXB1SIDH_RXB1SID7_POSN                             0x4
#define _RXB1SIDH_RXB1SID7_POSITION                         0x4
#define _RXB1SIDH_RXB1SID7_SIZE                             0x1
#define _RXB1SIDH_RXB1SID7_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID7_MASK                             0x10
#define _RXB1SIDH_RXB1SID8_POSN                             0x5
#define _RXB1SIDH_RXB1SID8_POSITION                         0x5
#define _RXB1SIDH_RXB1SID8_SIZE                             0x1
#define _RXB1SIDH_RXB1SID8_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID8_MASK                             0x20
#define _RXB1SIDH_RXB1SID9_POSN                             0x6
#define _RXB1SIDH_RXB1SID9_POSITION                         0x6
#define _RXB1SIDH_RXB1SID9_SIZE                             0x1
#define _RXB1SIDH_RXB1SID9_LENGTH                           0x1
#define _RXB1SIDH_RXB1SID9_MASK                             0x40
#define _RXB1SIDH_RXB1SID10_POSN                            0x7
#define _RXB1SIDH_RXB1SID10_POSITION                        0x7
#define _RXB1SIDH_RXB1SID10_SIZE                            0x1
#define _RXB1SIDH_RXB1SID10_LENGTH                          0x1
#define _RXB1SIDH_RXB1SID10_MASK                            0x80

// Register: RXB1SIDL
#define RXB1SIDL RXB1SIDL
extern volatile unsigned char           RXB1SIDL            __at(0xF52);
#ifndef _LIB_BUILD
asm("RXB1SIDL equ 0F52h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXID                   :1;
        unsigned SRR                    :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXB1EID16              :1;
        unsigned RXB1EID17              :1;
        unsigned                        :1;
        unsigned RXB1EXID               :1;
        unsigned RXB1SRR                :1;
        unsigned RXB1SID0               :1;
        unsigned RXB1SID1               :1;
        unsigned RXB1SID2               :1;
    };
} RXB1SIDLbits_t;
extern volatile RXB1SIDLbits_t RXB1SIDLbits __at(0xF52);
// bitfield macros
#define _RXB1SIDL_EID16_POSN                                0x0
#define _RXB1SIDL_EID16_POSITION                            0x0
#define _RXB1SIDL_EID16_SIZE                                0x1
#define _RXB1SIDL_EID16_LENGTH                              0x1
#define _RXB1SIDL_EID16_MASK                                0x1
#define _RXB1SIDL_EID17_POSN                                0x1
#define _RXB1SIDL_EID17_POSITION                            0x1
#define _RXB1SIDL_EID17_SIZE                                0x1
#define _RXB1SIDL_EID17_LENGTH                              0x1
#define _RXB1SIDL_EID17_MASK                                0x2
#define _RXB1SIDL_EXID_POSN                                 0x3
#define _RXB1SIDL_EXID_POSITION                             0x3
#define _RXB1SIDL_EXID_SIZE                                 0x1
#define _RXB1SIDL_EXID_LENGTH                               0x1
#define _RXB1SIDL_EXID_MASK                                 0x8
#define _RXB1SIDL_SRR_POSN                                  0x4
#define _RXB1SIDL_SRR_POSITION                              0x4
#define _RXB1SIDL_SRR_SIZE                                  0x1
#define _RXB1SIDL_SRR_LENGTH                                0x1
#define _RXB1SIDL_SRR_MASK                                  0x10
#define _RXB1SIDL_SID0_POSN                                 0x5
#define _RXB1SIDL_SID0_POSITION                             0x5
#define _RXB1SIDL_SID0_SIZE                                 0x1
#define _RXB1SIDL_SID0_LENGTH                               0x1
#define _RXB1SIDL_SID0_MASK                                 0x20
#define _RXB1SIDL_SID1_POSN                                 0x6
#define _RXB1SIDL_SID1_POSITION                             0x6
#define _RXB1SIDL_SID1_SIZE                                 0x1
#define _RXB1SIDL_SID1_LENGTH                               0x1
#define _RXB1SIDL_SID1_MASK                                 0x40
#define _RXB1SIDL_SID2_POSN                                 0x7
#define _RXB1SIDL_SID2_POSITION                             0x7
#define _RXB1SIDL_SID2_SIZE                                 0x1
#define _RXB1SIDL_SID2_LENGTH                               0x1
#define _RXB1SIDL_SID2_MASK                                 0x80
#define _RXB1SIDL_RXB1EID16_POSN                            0x0
#define _RXB1SIDL_RXB1EID16_POSITION                        0x0
#define _RXB1SIDL_RXB1EID16_SIZE                            0x1
#define _RXB1SIDL_RXB1EID16_LENGTH                          0x1
#define _RXB1SIDL_RXB1EID16_MASK                            0x1
#define _RXB1SIDL_RXB1EID17_POSN                            0x1
#define _RXB1SIDL_RXB1EID17_POSITION                        0x1
#define _RXB1SIDL_RXB1EID17_SIZE                            0x1
#define _RXB1SIDL_RXB1EID17_LENGTH                          0x1
#define _RXB1SIDL_RXB1EID17_MASK                            0x2
#define _RXB1SIDL_RXB1EXID_POSN                             0x3
#define _RXB1SIDL_RXB1EXID_POSITION                         0x3
#define _RXB1SIDL_RXB1EXID_SIZE                             0x1
#define _RXB1SIDL_RXB1EXID_LENGTH                           0x1
#define _RXB1SIDL_RXB1EXID_MASK                             0x8
#define _RXB1SIDL_RXB1SRR_POSN                              0x4
#define _RXB1SIDL_RXB1SRR_POSITION                          0x4
#define _RXB1SIDL_RXB1SRR_SIZE                              0x1
#define _RXB1SIDL_RXB1SRR_LENGTH                            0x1
#define _RXB1SIDL_RXB1SRR_MASK                              0x10
#define _RXB1SIDL_RXB1SID0_POSN                             0x5
#define _RXB1SIDL_RXB1SID0_POSITION                         0x5
#define _RXB1SIDL_RXB1SID0_SIZE                             0x1
#define _RXB1SIDL_RXB1SID0_LENGTH                           0x1
#define _RXB1SIDL_RXB1SID0_MASK                             0x20
#define _RXB1SIDL_RXB1SID1_POSN                             0x6
#define _RXB1SIDL_RXB1SID1_POSITION                         0x6
#define _RXB1SIDL_RXB1SID1_SIZE                             0x1
#define _RXB1SIDL_RXB1SID1_LENGTH                           0x1
#define _RXB1SIDL_RXB1SID1_MASK                             0x40
#define _RXB1SIDL_RXB1SID2_POSN                             0x7
#define _RXB1SIDL_RXB1SID2_POSITION                         0x7
#define _RXB1SIDL_RXB1SID2_SIZE                             0x1
#define _RXB1SIDL_RXB1SID2_LENGTH                           0x1
#define _RXB1SIDL_RXB1SID2_MASK                             0x80

// Register: RXB1EIDH
#define RXB1EIDH RXB1EIDH
extern volatile unsigned char           RXB1EIDH            __at(0xF53);
#ifndef _LIB_BUILD
asm("RXB1EIDH equ 0F53h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXB1EID8               :1;
        unsigned RXB1EID9               :1;
        unsigned RXB1EID10              :1;
        unsigned RXB1EID11              :1;
        unsigned RXB1EID12              :1;
        unsigned RXB1EID13              :1;
        unsigned RXB1EID14              :1;
        unsigned RXB1EID15              :1;
    };
} RXB1EIDHbits_t;
extern volatile RXB1EIDHbits_t RXB1EIDHbits __at(0xF53);
// bitfield macros
#define _RXB1EIDH_EID8_POSN                                 0x0
#define _RXB1EIDH_EID8_POSITION                             0x0
#define _RXB1EIDH_EID8_SIZE                                 0x1
#define _RXB1EIDH_EID8_LENGTH                               0x1
#define _RXB1EIDH_EID8_MASK                                 0x1
#define _RXB1EIDH_EID9_POSN                                 0x1
#define _RXB1EIDH_EID9_POSITION                             0x1
#define _RXB1EIDH_EID9_SIZE                                 0x1
#define _RXB1EIDH_EID9_LENGTH                               0x1
#define _RXB1EIDH_EID9_MASK                                 0x2
#define _RXB1EIDH_EID10_POSN                                0x2
#define _RXB1EIDH_EID10_POSITION                            0x2
#define _RXB1EIDH_EID10_SIZE                                0x1
#define _RXB1EIDH_EID10_LENGTH                              0x1
#define _RXB1EIDH_EID10_MASK                                0x4
#define _RXB1EIDH_EID11_POSN                                0x3
#define _RXB1EIDH_EID11_POSITION                            0x3
#define _RXB1EIDH_EID11_SIZE                                0x1
#define _RXB1EIDH_EID11_LENGTH                              0x1
#define _RXB1EIDH_EID11_MASK                                0x8
#define _RXB1EIDH_EID12_POSN                                0x4
#define _RXB1EIDH_EID12_POSITION                            0x4
#define _RXB1EIDH_EID12_SIZE                                0x1
#define _RXB1EIDH_EID12_LENGTH                              0x1
#define _RXB1EIDH_EID12_MASK                                0x10
#define _RXB1EIDH_EID13_POSN                                0x5
#define _RXB1EIDH_EID13_POSITION                            0x5
#define _RXB1EIDH_EID13_SIZE                                0x1
#define _RXB1EIDH_EID13_LENGTH                              0x1
#define _RXB1EIDH_EID13_MASK                                0x20
#define _RXB1EIDH_EID14_POSN                                0x6
#define _RXB1EIDH_EID14_POSITION                            0x6
#define _RXB1EIDH_EID14_SIZE                                0x1
#define _RXB1EIDH_EID14_LENGTH                              0x1
#define _RXB1EIDH_EID14_MASK                                0x40
#define _RXB1EIDH_EID15_POSN                                0x7
#define _RXB1EIDH_EID15_POSITION                            0x7
#define _RXB1EIDH_EID15_SIZE                                0x1
#define _RXB1EIDH_EID15_LENGTH                              0x1
#define _RXB1EIDH_EID15_MASK                                0x80
#define _RXB1EIDH_RXB1EID8_POSN                             0x0
#define _RXB1EIDH_RXB1EID8_POSITION                         0x0
#define _RXB1EIDH_RXB1EID8_SIZE                             0x1
#define _RXB1EIDH_RXB1EID8_LENGTH                           0x1
#define _RXB1EIDH_RXB1EID8_MASK                             0x1
#define _RXB1EIDH_RXB1EID9_POSN                             0x1
#define _RXB1EIDH_RXB1EID9_POSITION                         0x1
#define _RXB1EIDH_RXB1EID9_SIZE                             0x1
#define _RXB1EIDH_RXB1EID9_LENGTH                           0x1
#define _RXB1EIDH_RXB1EID9_MASK                             0x2
#define _RXB1EIDH_RXB1EID10_POSN                            0x2
#define _RXB1EIDH_RXB1EID10_POSITION                        0x2
#define _RXB1EIDH_RXB1EID10_SIZE                            0x1
#define _RXB1EIDH_RXB1EID10_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID10_MASK                            0x4
#define _RXB1EIDH_RXB1EID11_POSN                            0x3
#define _RXB1EIDH_RXB1EID11_POSITION                        0x3
#define _RXB1EIDH_RXB1EID11_SIZE                            0x1
#define _RXB1EIDH_RXB1EID11_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID11_MASK                            0x8
#define _RXB1EIDH_RXB1EID12_POSN                            0x4
#define _RXB1EIDH_RXB1EID12_POSITION                        0x4
#define _RXB1EIDH_RXB1EID12_SIZE                            0x1
#define _RXB1EIDH_RXB1EID12_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID12_MASK                            0x10
#define _RXB1EIDH_RXB1EID13_POSN                            0x5
#define _RXB1EIDH_RXB1EID13_POSITION                        0x5
#define _RXB1EIDH_RXB1EID13_SIZE                            0x1
#define _RXB1EIDH_RXB1EID13_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID13_MASK                            0x20
#define _RXB1EIDH_RXB1EID14_POSN                            0x6
#define _RXB1EIDH_RXB1EID14_POSITION                        0x6
#define _RXB1EIDH_RXB1EID14_SIZE                            0x1
#define _RXB1EIDH_RXB1EID14_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID14_MASK                            0x40
#define _RXB1EIDH_RXB1EID15_POSN                            0x7
#define _RXB1EIDH_RXB1EID15_POSITION                        0x7
#define _RXB1EIDH_RXB1EID15_SIZE                            0x1
#define _RXB1EIDH_RXB1EID15_LENGTH                          0x1
#define _RXB1EIDH_RXB1EID15_MASK                            0x80

// Register: RXB1EIDL
#define RXB1EIDL RXB1EIDL
extern volatile unsigned char           RXB1EIDL            __at(0xF54);
#ifndef _LIB_BUILD
asm("RXB1EIDL equ 0F54h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXB1EID0               :1;
        unsigned RXB1EID1               :1;
        unsigned RXB1EID2               :1;
        unsigned RXB1EID3               :1;
        unsigned RXB1EID4               :1;
        unsigned RXB1EID5               :1;
        unsigned RXB1EID6               :1;
        unsigned RXB1EID7               :1;
    };
} RXB1EIDLbits_t;
extern volatile RXB1EIDLbits_t RXB1EIDLbits __at(0xF54);
// bitfield macros
#define _RXB1EIDL_EID0_POSN                                 0x0
#define _RXB1EIDL_EID0_POSITION                             0x0
#define _RXB1EIDL_EID0_SIZE                                 0x1
#define _RXB1EIDL_EID0_LENGTH                               0x1
#define _RXB1EIDL_EID0_MASK                                 0x1
#define _RXB1EIDL_EID1_POSN                                 0x1
#define _RXB1EIDL_EID1_POSITION                             0x1
#define _RXB1EIDL_EID1_SIZE                                 0x1
#define _RXB1EIDL_EID1_LENGTH                               0x1
#define _RXB1EIDL_EID1_MASK                                 0x2
#define _RXB1EIDL_EID2_POSN                                 0x2
#define _RXB1EIDL_EID2_POSITION                             0x2
#define _RXB1EIDL_EID2_SIZE                                 0x1
#define _RXB1EIDL_EID2_LENGTH                               0x1
#define _RXB1EIDL_EID2_MASK                                 0x4
#define _RXB1EIDL_EID3_POSN                                 0x3
#define _RXB1EIDL_EID3_POSITION                             0x3
#define _RXB1EIDL_EID3_SIZE                                 0x1
#define _RXB1EIDL_EID3_LENGTH                               0x1
#define _RXB1EIDL_EID3_MASK                                 0x8
#define _RXB1EIDL_EID4_POSN                                 0x4
#define _RXB1EIDL_EID4_POSITION                             0x4
#define _RXB1EIDL_EID4_SIZE                                 0x1
#define _RXB1EIDL_EID4_LENGTH                               0x1
#define _RXB1EIDL_EID4_MASK                                 0x10
#define _RXB1EIDL_EID5_POSN                                 0x5
#define _RXB1EIDL_EID5_POSITION                             0x5
#define _RXB1EIDL_EID5_SIZE                                 0x1
#define _RXB1EIDL_EID5_LENGTH                               0x1
#define _RXB1EIDL_EID5_MASK                                 0x20
#define _RXB1EIDL_EID6_POSN                                 0x6
#define _RXB1EIDL_EID6_POSITION                             0x6
#define _RXB1EIDL_EID6_SIZE                                 0x1
#define _RXB1EIDL_EID6_LENGTH                               0x1
#define _RXB1EIDL_EID6_MASK                                 0x40
#define _RXB1EIDL_EID7_POSN                                 0x7
#define _RXB1EIDL_EID7_POSITION                             0x7
#define _RXB1EIDL_EID7_SIZE                                 0x1
#define _RXB1EIDL_EID7_LENGTH                               0x1
#define _RXB1EIDL_EID7_MASK                                 0x80
#define _RXB1EIDL_RXB1EID0_POSN                             0x0
#define _RXB1EIDL_RXB1EID0_POSITION                         0x0
#define _RXB1EIDL_RXB1EID0_SIZE                             0x1
#define _RXB1EIDL_RXB1EID0_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID0_MASK                             0x1
#define _RXB1EIDL_RXB1EID1_POSN                             0x1
#define _RXB1EIDL_RXB1EID1_POSITION                         0x1
#define _RXB1EIDL_RXB1EID1_SIZE                             0x1
#define _RXB1EIDL_RXB1EID1_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID1_MASK                             0x2
#define _RXB1EIDL_RXB1EID2_POSN                             0x2
#define _RXB1EIDL_RXB1EID2_POSITION                         0x2
#define _RXB1EIDL_RXB1EID2_SIZE                             0x1
#define _RXB1EIDL_RXB1EID2_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID2_MASK                             0x4
#define _RXB1EIDL_RXB1EID3_POSN                             0x3
#define _RXB1EIDL_RXB1EID3_POSITION                         0x3
#define _RXB1EIDL_RXB1EID3_SIZE                             0x1
#define _RXB1EIDL_RXB1EID3_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID3_MASK                             0x8
#define _RXB1EIDL_RXB1EID4_POSN                             0x4
#define _RXB1EIDL_RXB1EID4_POSITION                         0x4
#define _RXB1EIDL_RXB1EID4_SIZE                             0x1
#define _RXB1EIDL_RXB1EID4_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID4_MASK                             0x10
#define _RXB1EIDL_RXB1EID5_POSN                             0x5
#define _RXB1EIDL_RXB1EID5_POSITION                         0x5
#define _RXB1EIDL_RXB1EID5_SIZE                             0x1
#define _RXB1EIDL_RXB1EID5_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID5_MASK                             0x20
#define _RXB1EIDL_RXB1EID6_POSN                             0x6
#define _RXB1EIDL_RXB1EID6_POSITION                         0x6
#define _RXB1EIDL_RXB1EID6_SIZE                             0x1
#define _RXB1EIDL_RXB1EID6_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID6_MASK                             0x40
#define _RXB1EIDL_RXB1EID7_POSN                             0x7
#define _RXB1EIDL_RXB1EID7_POSITION                         0x7
#define _RXB1EIDL_RXB1EID7_SIZE                             0x1
#define _RXB1EIDL_RXB1EID7_LENGTH                           0x1
#define _RXB1EIDL_RXB1EID7_MASK                             0x80

// Register: RXB1DLC
#define RXB1DLC RXB1DLC
extern volatile unsigned char           RXB1DLC             __at(0xF55);
#ifndef _LIB_BUILD
asm("RXB1DLC equ 0F55h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RXRTR                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned RESRB0                 :1;
        unsigned RESRB1                 :1;
    };
    struct {
        unsigned RXB1DLC0               :1;
        unsigned RXB1DLC1               :1;
        unsigned RXB1DLC2               :1;
        unsigned RXB1DLC3               :1;
        unsigned RXB1RB0                :1;
        unsigned RXB1RB1                :1;
        unsigned RXB1RTR                :1;
    };
} RXB1DLCbits_t;
extern volatile RXB1DLCbits_t RXB1DLCbits __at(0xF55);
// bitfield macros
#define _RXB1DLC_DLC0_POSN                                  0x0
#define _RXB1DLC_DLC0_POSITION                              0x0
#define _RXB1DLC_DLC0_SIZE                                  0x1
#define _RXB1DLC_DLC0_LENGTH                                0x1
#define _RXB1DLC_DLC0_MASK                                  0x1
#define _RXB1DLC_DLC1_POSN                                  0x1
#define _RXB1DLC_DLC1_POSITION                              0x1
#define _RXB1DLC_DLC1_SIZE                                  0x1
#define _RXB1DLC_DLC1_LENGTH                                0x1
#define _RXB1DLC_DLC1_MASK                                  0x2
#define _RXB1DLC_DLC2_POSN                                  0x2
#define _RXB1DLC_DLC2_POSITION                              0x2
#define _RXB1DLC_DLC2_SIZE                                  0x1
#define _RXB1DLC_DLC2_LENGTH                                0x1
#define _RXB1DLC_DLC2_MASK                                  0x4
#define _RXB1DLC_DLC3_POSN                                  0x3
#define _RXB1DLC_DLC3_POSITION                              0x3
#define _RXB1DLC_DLC3_SIZE                                  0x1
#define _RXB1DLC_DLC3_LENGTH                                0x1
#define _RXB1DLC_DLC3_MASK                                  0x8
#define _RXB1DLC_RB0_POSN                                   0x4
#define _RXB1DLC_RB0_POSITION                               0x4
#define _RXB1DLC_RB0_SIZE                                   0x1
#define _RXB1DLC_RB0_LENGTH                                 0x1
#define _RXB1DLC_RB0_MASK                                   0x10
#define _RXB1DLC_RB1_POSN                                   0x5
#define _RXB1DLC_RB1_POSITION                               0x5
#define _RXB1DLC_RB1_SIZE                                   0x1
#define _RXB1DLC_RB1_LENGTH                                 0x1
#define _RXB1DLC_RB1_MASK                                   0x20
#define _RXB1DLC_RXRTR_POSN                                 0x6
#define _RXB1DLC_RXRTR_POSITION                             0x6
#define _RXB1DLC_RXRTR_SIZE                                 0x1
#define _RXB1DLC_RXRTR_LENGTH                               0x1
#define _RXB1DLC_RXRTR_MASK                                 0x40
#define _RXB1DLC_RESRB0_POSN                                0x4
#define _RXB1DLC_RESRB0_POSITION                            0x4
#define _RXB1DLC_RESRB0_SIZE                                0x1
#define _RXB1DLC_RESRB0_LENGTH                              0x1
#define _RXB1DLC_RESRB0_MASK                                0x10
#define _RXB1DLC_RESRB1_POSN                                0x5
#define _RXB1DLC_RESRB1_POSITION                            0x5
#define _RXB1DLC_RESRB1_SIZE                                0x1
#define _RXB1DLC_RESRB1_LENGTH                              0x1
#define _RXB1DLC_RESRB1_MASK                                0x20
#define _RXB1DLC_RXB1DLC0_POSN                              0x0
#define _RXB1DLC_RXB1DLC0_POSITION                          0x0
#define _RXB1DLC_RXB1DLC0_SIZE                              0x1
#define _RXB1DLC_RXB1DLC0_LENGTH                            0x1
#define _RXB1DLC_RXB1DLC0_MASK                              0x1
#define _RXB1DLC_RXB1DLC1_POSN                              0x1
#define _RXB1DLC_RXB1DLC1_POSITION                          0x1
#define _RXB1DLC_RXB1DLC1_SIZE                              0x1
#define _RXB1DLC_RXB1DLC1_LENGTH                            0x1
#define _RXB1DLC_RXB1DLC1_MASK                              0x2
#define _RXB1DLC_RXB1DLC2_POSN                              0x2
#define _RXB1DLC_RXB1DLC2_POSITION                          0x2
#define _RXB1DLC_RXB1DLC2_SIZE                              0x1
#define _RXB1DLC_RXB1DLC2_LENGTH                            0x1
#define _RXB1DLC_RXB1DLC2_MASK                              0x4
#define _RXB1DLC_RXB1DLC3_POSN                              0x3
#define _RXB1DLC_RXB1DLC3_POSITION                          0x3
#define _RXB1DLC_RXB1DLC3_SIZE                              0x1
#define _RXB1DLC_RXB1DLC3_LENGTH                            0x1
#define _RXB1DLC_RXB1DLC3_MASK                              0x8
#define _RXB1DLC_RXB1RB0_POSN                               0x4
#define _RXB1DLC_RXB1RB0_POSITION                           0x4
#define _RXB1DLC_RXB1RB0_SIZE                               0x1
#define _RXB1DLC_RXB1RB0_LENGTH                             0x1
#define _RXB1DLC_RXB1RB0_MASK                               0x10
#define _RXB1DLC_RXB1RB1_POSN                               0x5
#define _RXB1DLC_RXB1RB1_POSITION                           0x5
#define _RXB1DLC_RXB1RB1_SIZE                               0x1
#define _RXB1DLC_RXB1RB1_LENGTH                             0x1
#define _RXB1DLC_RXB1RB1_MASK                               0x20
#define _RXB1DLC_RXB1RTR_POSN                               0x6
#define _RXB1DLC_RXB1RTR_POSITION                           0x6
#define _RXB1DLC_RXB1RTR_SIZE                               0x1
#define _RXB1DLC_RXB1RTR_LENGTH                             0x1
#define _RXB1DLC_RXB1RTR_MASK                               0x40

// Register: RXB1D0
#define RXB1D0 RXB1D0
extern volatile unsigned char           RXB1D0              __at(0xF56);
#ifndef _LIB_BUILD
asm("RXB1D0 equ 0F56h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D00                :1;
        unsigned RXB1D01                :1;
        unsigned RXB1D02                :1;
        unsigned RXB1D03                :1;
        unsigned RXB1D04                :1;
        unsigned RXB1D05                :1;
        unsigned RXB1D06                :1;
        unsigned RXB1D07                :1;
    };
} RXB1D0bits_t;
extern volatile RXB1D0bits_t RXB1D0bits __at(0xF56);
// bitfield macros
#define _RXB1D0_RXB1D00_POSN                                0x0
#define _RXB1D0_RXB1D00_POSITION                            0x0
#define _RXB1D0_RXB1D00_SIZE                                0x1
#define _RXB1D0_RXB1D00_LENGTH                              0x1
#define _RXB1D0_RXB1D00_MASK                                0x1
#define _RXB1D0_RXB1D01_POSN                                0x1
#define _RXB1D0_RXB1D01_POSITION                            0x1
#define _RXB1D0_RXB1D01_SIZE                                0x1
#define _RXB1D0_RXB1D01_LENGTH                              0x1
#define _RXB1D0_RXB1D01_MASK                                0x2
#define _RXB1D0_RXB1D02_POSN                                0x2
#define _RXB1D0_RXB1D02_POSITION                            0x2
#define _RXB1D0_RXB1D02_SIZE                                0x1
#define _RXB1D0_RXB1D02_LENGTH                              0x1
#define _RXB1D0_RXB1D02_MASK                                0x4
#define _RXB1D0_RXB1D03_POSN                                0x3
#define _RXB1D0_RXB1D03_POSITION                            0x3
#define _RXB1D0_RXB1D03_SIZE                                0x1
#define _RXB1D0_RXB1D03_LENGTH                              0x1
#define _RXB1D0_RXB1D03_MASK                                0x8
#define _RXB1D0_RXB1D04_POSN                                0x4
#define _RXB1D0_RXB1D04_POSITION                            0x4
#define _RXB1D0_RXB1D04_SIZE                                0x1
#define _RXB1D0_RXB1D04_LENGTH                              0x1
#define _RXB1D0_RXB1D04_MASK                                0x10
#define _RXB1D0_RXB1D05_POSN                                0x5
#define _RXB1D0_RXB1D05_POSITION                            0x5
#define _RXB1D0_RXB1D05_SIZE                                0x1
#define _RXB1D0_RXB1D05_LENGTH                              0x1
#define _RXB1D0_RXB1D05_MASK                                0x20
#define _RXB1D0_RXB1D06_POSN                                0x6
#define _RXB1D0_RXB1D06_POSITION                            0x6
#define _RXB1D0_RXB1D06_SIZE                                0x1
#define _RXB1D0_RXB1D06_LENGTH                              0x1
#define _RXB1D0_RXB1D06_MASK                                0x40
#define _RXB1D0_RXB1D07_POSN                                0x7
#define _RXB1D0_RXB1D07_POSITION                            0x7
#define _RXB1D0_RXB1D07_SIZE                                0x1
#define _RXB1D0_RXB1D07_LENGTH                              0x1
#define _RXB1D0_RXB1D07_MASK                                0x80

// Register: RXB1D1
#define RXB1D1 RXB1D1
extern volatile unsigned char           RXB1D1              __at(0xF57);
#ifndef _LIB_BUILD
asm("RXB1D1 equ 0F57h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D10                :1;
        unsigned RXB1D11                :1;
        unsigned RXB1D12                :1;
        unsigned RXB1D13                :1;
        unsigned RXB1D14                :1;
        unsigned RXB1D15                :1;
        unsigned RXB1D16                :1;
        unsigned RXB1D17                :1;
    };
} RXB1D1bits_t;
extern volatile RXB1D1bits_t RXB1D1bits __at(0xF57);
// bitfield macros
#define _RXB1D1_RXB1D10_POSN                                0x0
#define _RXB1D1_RXB1D10_POSITION                            0x0
#define _RXB1D1_RXB1D10_SIZE                                0x1
#define _RXB1D1_RXB1D10_LENGTH                              0x1
#define _RXB1D1_RXB1D10_MASK                                0x1
#define _RXB1D1_RXB1D11_POSN                                0x1
#define _RXB1D1_RXB1D11_POSITION                            0x1
#define _RXB1D1_RXB1D11_SIZE                                0x1
#define _RXB1D1_RXB1D11_LENGTH                              0x1
#define _RXB1D1_RXB1D11_MASK                                0x2
#define _RXB1D1_RXB1D12_POSN                                0x2
#define _RXB1D1_RXB1D12_POSITION                            0x2
#define _RXB1D1_RXB1D12_SIZE                                0x1
#define _RXB1D1_RXB1D12_LENGTH                              0x1
#define _RXB1D1_RXB1D12_MASK                                0x4
#define _RXB1D1_RXB1D13_POSN                                0x3
#define _RXB1D1_RXB1D13_POSITION                            0x3
#define _RXB1D1_RXB1D13_SIZE                                0x1
#define _RXB1D1_RXB1D13_LENGTH                              0x1
#define _RXB1D1_RXB1D13_MASK                                0x8
#define _RXB1D1_RXB1D14_POSN                                0x4
#define _RXB1D1_RXB1D14_POSITION                            0x4
#define _RXB1D1_RXB1D14_SIZE                                0x1
#define _RXB1D1_RXB1D14_LENGTH                              0x1
#define _RXB1D1_RXB1D14_MASK                                0x10
#define _RXB1D1_RXB1D15_POSN                                0x5
#define _RXB1D1_RXB1D15_POSITION                            0x5
#define _RXB1D1_RXB1D15_SIZE                                0x1
#define _RXB1D1_RXB1D15_LENGTH                              0x1
#define _RXB1D1_RXB1D15_MASK                                0x20
#define _RXB1D1_RXB1D16_POSN                                0x6
#define _RXB1D1_RXB1D16_POSITION                            0x6
#define _RXB1D1_RXB1D16_SIZE                                0x1
#define _RXB1D1_RXB1D16_LENGTH                              0x1
#define _RXB1D1_RXB1D16_MASK                                0x40
#define _RXB1D1_RXB1D17_POSN                                0x7
#define _RXB1D1_RXB1D17_POSITION                            0x7
#define _RXB1D1_RXB1D17_SIZE                                0x1
#define _RXB1D1_RXB1D17_LENGTH                              0x1
#define _RXB1D1_RXB1D17_MASK                                0x80

// Register: RXB1D2
#define RXB1D2 RXB1D2
extern volatile unsigned char           RXB1D2              __at(0xF58);
#ifndef _LIB_BUILD
asm("RXB1D2 equ 0F58h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D20                :1;
        unsigned RXB1D21                :1;
        unsigned RXB1D22                :1;
        unsigned RXB1D23                :1;
        unsigned RXB1D24                :1;
        unsigned RXB1D25                :1;
        unsigned RXB1D26                :1;
        unsigned RXB1D27                :1;
    };
} RXB1D2bits_t;
extern volatile RXB1D2bits_t RXB1D2bits __at(0xF58);
// bitfield macros
#define _RXB1D2_RXB1D20_POSN                                0x0
#define _RXB1D2_RXB1D20_POSITION                            0x0
#define _RXB1D2_RXB1D20_SIZE                                0x1
#define _RXB1D2_RXB1D20_LENGTH                              0x1
#define _RXB1D2_RXB1D20_MASK                                0x1
#define _RXB1D2_RXB1D21_POSN                                0x1
#define _RXB1D2_RXB1D21_POSITION                            0x1
#define _RXB1D2_RXB1D21_SIZE                                0x1
#define _RXB1D2_RXB1D21_LENGTH                              0x1
#define _RXB1D2_RXB1D21_MASK                                0x2
#define _RXB1D2_RXB1D22_POSN                                0x2
#define _RXB1D2_RXB1D22_POSITION                            0x2
#define _RXB1D2_RXB1D22_SIZE                                0x1
#define _RXB1D2_RXB1D22_LENGTH                              0x1
#define _RXB1D2_RXB1D22_MASK                                0x4
#define _RXB1D2_RXB1D23_POSN                                0x3
#define _RXB1D2_RXB1D23_POSITION                            0x3
#define _RXB1D2_RXB1D23_SIZE                                0x1
#define _RXB1D2_RXB1D23_LENGTH                              0x1
#define _RXB1D2_RXB1D23_MASK                                0x8
#define _RXB1D2_RXB1D24_POSN                                0x4
#define _RXB1D2_RXB1D24_POSITION                            0x4
#define _RXB1D2_RXB1D24_SIZE                                0x1
#define _RXB1D2_RXB1D24_LENGTH                              0x1
#define _RXB1D2_RXB1D24_MASK                                0x10
#define _RXB1D2_RXB1D25_POSN                                0x5
#define _RXB1D2_RXB1D25_POSITION                            0x5
#define _RXB1D2_RXB1D25_SIZE                                0x1
#define _RXB1D2_RXB1D25_LENGTH                              0x1
#define _RXB1D2_RXB1D25_MASK                                0x20
#define _RXB1D2_RXB1D26_POSN                                0x6
#define _RXB1D2_RXB1D26_POSITION                            0x6
#define _RXB1D2_RXB1D26_SIZE                                0x1
#define _RXB1D2_RXB1D26_LENGTH                              0x1
#define _RXB1D2_RXB1D26_MASK                                0x40
#define _RXB1D2_RXB1D27_POSN                                0x7
#define _RXB1D2_RXB1D27_POSITION                            0x7
#define _RXB1D2_RXB1D27_SIZE                                0x1
#define _RXB1D2_RXB1D27_LENGTH                              0x1
#define _RXB1D2_RXB1D27_MASK                                0x80

// Register: RXB1D3
#define RXB1D3 RXB1D3
extern volatile unsigned char           RXB1D3              __at(0xF59);
#ifndef _LIB_BUILD
asm("RXB1D3 equ 0F59h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D30                :1;
        unsigned RXB1D31                :1;
        unsigned RXB1D32                :1;
        unsigned RXB1D33                :1;
        unsigned RXB1D34                :1;
        unsigned RXB1D35                :1;
        unsigned RXB1D36                :1;
        unsigned RXB1D37                :1;
    };
} RXB1D3bits_t;
extern volatile RXB1D3bits_t RXB1D3bits __at(0xF59);
// bitfield macros
#define _RXB1D3_RXB1D30_POSN                                0x0
#define _RXB1D3_RXB1D30_POSITION                            0x0
#define _RXB1D3_RXB1D30_SIZE                                0x1
#define _RXB1D3_RXB1D30_LENGTH                              0x1
#define _RXB1D3_RXB1D30_MASK                                0x1
#define _RXB1D3_RXB1D31_POSN                                0x1
#define _RXB1D3_RXB1D31_POSITION                            0x1
#define _RXB1D3_RXB1D31_SIZE                                0x1
#define _RXB1D3_RXB1D31_LENGTH                              0x1
#define _RXB1D3_RXB1D31_MASK                                0x2
#define _RXB1D3_RXB1D32_POSN                                0x2
#define _RXB1D3_RXB1D32_POSITION                            0x2
#define _RXB1D3_RXB1D32_SIZE                                0x1
#define _RXB1D3_RXB1D32_LENGTH                              0x1
#define _RXB1D3_RXB1D32_MASK                                0x4
#define _RXB1D3_RXB1D33_POSN                                0x3
#define _RXB1D3_RXB1D33_POSITION                            0x3
#define _RXB1D3_RXB1D33_SIZE                                0x1
#define _RXB1D3_RXB1D33_LENGTH                              0x1
#define _RXB1D3_RXB1D33_MASK                                0x8
#define _RXB1D3_RXB1D34_POSN                                0x4
#define _RXB1D3_RXB1D34_POSITION                            0x4
#define _RXB1D3_RXB1D34_SIZE                                0x1
#define _RXB1D3_RXB1D34_LENGTH                              0x1
#define _RXB1D3_RXB1D34_MASK                                0x10
#define _RXB1D3_RXB1D35_POSN                                0x5
#define _RXB1D3_RXB1D35_POSITION                            0x5
#define _RXB1D3_RXB1D35_SIZE                                0x1
#define _RXB1D3_RXB1D35_LENGTH                              0x1
#define _RXB1D3_RXB1D35_MASK                                0x20
#define _RXB1D3_RXB1D36_POSN                                0x6
#define _RXB1D3_RXB1D36_POSITION                            0x6
#define _RXB1D3_RXB1D36_SIZE                                0x1
#define _RXB1D3_RXB1D36_LENGTH                              0x1
#define _RXB1D3_RXB1D36_MASK                                0x40
#define _RXB1D3_RXB1D37_POSN                                0x7
#define _RXB1D3_RXB1D37_POSITION                            0x7
#define _RXB1D3_RXB1D37_SIZE                                0x1
#define _RXB1D3_RXB1D37_LENGTH                              0x1
#define _RXB1D3_RXB1D37_MASK                                0x80

// Register: RXB1D4
#define RXB1D4 RXB1D4
extern volatile unsigned char           RXB1D4              __at(0xF5A);
#ifndef _LIB_BUILD
asm("RXB1D4 equ 0F5Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D40                :1;
        unsigned RXB1D41                :1;
        unsigned RXB1D42                :1;
        unsigned RXB1D43                :1;
        unsigned RXB1D44                :1;
        unsigned RXB1D45                :1;
        unsigned RXB1D46                :1;
        unsigned RXB1D47                :1;
    };
} RXB1D4bits_t;
extern volatile RXB1D4bits_t RXB1D4bits __at(0xF5A);
// bitfield macros
#define _RXB1D4_RXB1D40_POSN                                0x0
#define _RXB1D4_RXB1D40_POSITION                            0x0
#define _RXB1D4_RXB1D40_SIZE                                0x1
#define _RXB1D4_RXB1D40_LENGTH                              0x1
#define _RXB1D4_RXB1D40_MASK                                0x1
#define _RXB1D4_RXB1D41_POSN                                0x1
#define _RXB1D4_RXB1D41_POSITION                            0x1
#define _RXB1D4_RXB1D41_SIZE                                0x1
#define _RXB1D4_RXB1D41_LENGTH                              0x1
#define _RXB1D4_RXB1D41_MASK                                0x2
#define _RXB1D4_RXB1D42_POSN                                0x2
#define _RXB1D4_RXB1D42_POSITION                            0x2
#define _RXB1D4_RXB1D42_SIZE                                0x1
#define _RXB1D4_RXB1D42_LENGTH                              0x1
#define _RXB1D4_RXB1D42_MASK                                0x4
#define _RXB1D4_RXB1D43_POSN                                0x3
#define _RXB1D4_RXB1D43_POSITION                            0x3
#define _RXB1D4_RXB1D43_SIZE                                0x1
#define _RXB1D4_RXB1D43_LENGTH                              0x1
#define _RXB1D4_RXB1D43_MASK                                0x8
#define _RXB1D4_RXB1D44_POSN                                0x4
#define _RXB1D4_RXB1D44_POSITION                            0x4
#define _RXB1D4_RXB1D44_SIZE                                0x1
#define _RXB1D4_RXB1D44_LENGTH                              0x1
#define _RXB1D4_RXB1D44_MASK                                0x10
#define _RXB1D4_RXB1D45_POSN                                0x5
#define _RXB1D4_RXB1D45_POSITION                            0x5
#define _RXB1D4_RXB1D45_SIZE                                0x1
#define _RXB1D4_RXB1D45_LENGTH                              0x1
#define _RXB1D4_RXB1D45_MASK                                0x20
#define _RXB1D4_RXB1D46_POSN                                0x6
#define _RXB1D4_RXB1D46_POSITION                            0x6
#define _RXB1D4_RXB1D46_SIZE                                0x1
#define _RXB1D4_RXB1D46_LENGTH                              0x1
#define _RXB1D4_RXB1D46_MASK                                0x40
#define _RXB1D4_RXB1D47_POSN                                0x7
#define _RXB1D4_RXB1D47_POSITION                            0x7
#define _RXB1D4_RXB1D47_SIZE                                0x1
#define _RXB1D4_RXB1D47_LENGTH                              0x1
#define _RXB1D4_RXB1D47_MASK                                0x80

// Register: RXB1D5
#define RXB1D5 RXB1D5
extern volatile unsigned char           RXB1D5              __at(0xF5B);
#ifndef _LIB_BUILD
asm("RXB1D5 equ 0F5Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D50                :1;
        unsigned RXB1D51                :1;
        unsigned RXB1D52                :1;
        unsigned RXB1D53                :1;
        unsigned RXB1D54                :1;
        unsigned RXB1D55                :1;
        unsigned RXB1D56                :1;
        unsigned RXB1D57                :1;
    };
} RXB1D5bits_t;
extern volatile RXB1D5bits_t RXB1D5bits __at(0xF5B);
// bitfield macros
#define _RXB1D5_RXB1D50_POSN                                0x0
#define _RXB1D5_RXB1D50_POSITION                            0x0
#define _RXB1D5_RXB1D50_SIZE                                0x1
#define _RXB1D5_RXB1D50_LENGTH                              0x1
#define _RXB1D5_RXB1D50_MASK                                0x1
#define _RXB1D5_RXB1D51_POSN                                0x1
#define _RXB1D5_RXB1D51_POSITION                            0x1
#define _RXB1D5_RXB1D51_SIZE                                0x1
#define _RXB1D5_RXB1D51_LENGTH                              0x1
#define _RXB1D5_RXB1D51_MASK                                0x2
#define _RXB1D5_RXB1D52_POSN                                0x2
#define _RXB1D5_RXB1D52_POSITION                            0x2
#define _RXB1D5_RXB1D52_SIZE                                0x1
#define _RXB1D5_RXB1D52_LENGTH                              0x1
#define _RXB1D5_RXB1D52_MASK                                0x4
#define _RXB1D5_RXB1D53_POSN                                0x3
#define _RXB1D5_RXB1D53_POSITION                            0x3
#define _RXB1D5_RXB1D53_SIZE                                0x1
#define _RXB1D5_RXB1D53_LENGTH                              0x1
#define _RXB1D5_RXB1D53_MASK                                0x8
#define _RXB1D5_RXB1D54_POSN                                0x4
#define _RXB1D5_RXB1D54_POSITION                            0x4
#define _RXB1D5_RXB1D54_SIZE                                0x1
#define _RXB1D5_RXB1D54_LENGTH                              0x1
#define _RXB1D5_RXB1D54_MASK                                0x10
#define _RXB1D5_RXB1D55_POSN                                0x5
#define _RXB1D5_RXB1D55_POSITION                            0x5
#define _RXB1D5_RXB1D55_SIZE                                0x1
#define _RXB1D5_RXB1D55_LENGTH                              0x1
#define _RXB1D5_RXB1D55_MASK                                0x20
#define _RXB1D5_RXB1D56_POSN                                0x6
#define _RXB1D5_RXB1D56_POSITION                            0x6
#define _RXB1D5_RXB1D56_SIZE                                0x1
#define _RXB1D5_RXB1D56_LENGTH                              0x1
#define _RXB1D5_RXB1D56_MASK                                0x40
#define _RXB1D5_RXB1D57_POSN                                0x7
#define _RXB1D5_RXB1D57_POSITION                            0x7
#define _RXB1D5_RXB1D57_SIZE                                0x1
#define _RXB1D5_RXB1D57_LENGTH                              0x1
#define _RXB1D5_RXB1D57_MASK                                0x80

// Register: RXB1D6
#define RXB1D6 RXB1D6
extern volatile unsigned char           RXB1D6              __at(0xF5C);
#ifndef _LIB_BUILD
asm("RXB1D6 equ 0F5Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D60                :1;
        unsigned RXB1D61                :1;
        unsigned RXB1D62                :1;
        unsigned RXB1D63                :1;
        unsigned RXB1D64                :1;
        unsigned RXB1D65                :1;
        unsigned RXB1D66                :1;
        unsigned RXB1D67                :1;
    };
} RXB1D6bits_t;
extern volatile RXB1D6bits_t RXB1D6bits __at(0xF5C);
// bitfield macros
#define _RXB1D6_RXB1D60_POSN                                0x0
#define _RXB1D6_RXB1D60_POSITION                            0x0
#define _RXB1D6_RXB1D60_SIZE                                0x1
#define _RXB1D6_RXB1D60_LENGTH                              0x1
#define _RXB1D6_RXB1D60_MASK                                0x1
#define _RXB1D6_RXB1D61_POSN                                0x1
#define _RXB1D6_RXB1D61_POSITION                            0x1
#define _RXB1D6_RXB1D61_SIZE                                0x1
#define _RXB1D6_RXB1D61_LENGTH                              0x1
#define _RXB1D6_RXB1D61_MASK                                0x2
#define _RXB1D6_RXB1D62_POSN                                0x2
#define _RXB1D6_RXB1D62_POSITION                            0x2
#define _RXB1D6_RXB1D62_SIZE                                0x1
#define _RXB1D6_RXB1D62_LENGTH                              0x1
#define _RXB1D6_RXB1D62_MASK                                0x4
#define _RXB1D6_RXB1D63_POSN                                0x3
#define _RXB1D6_RXB1D63_POSITION                            0x3
#define _RXB1D6_RXB1D63_SIZE                                0x1
#define _RXB1D6_RXB1D63_LENGTH                              0x1
#define _RXB1D6_RXB1D63_MASK                                0x8
#define _RXB1D6_RXB1D64_POSN                                0x4
#define _RXB1D6_RXB1D64_POSITION                            0x4
#define _RXB1D6_RXB1D64_SIZE                                0x1
#define _RXB1D6_RXB1D64_LENGTH                              0x1
#define _RXB1D6_RXB1D64_MASK                                0x10
#define _RXB1D6_RXB1D65_POSN                                0x5
#define _RXB1D6_RXB1D65_POSITION                            0x5
#define _RXB1D6_RXB1D65_SIZE                                0x1
#define _RXB1D6_RXB1D65_LENGTH                              0x1
#define _RXB1D6_RXB1D65_MASK                                0x20
#define _RXB1D6_RXB1D66_POSN                                0x6
#define _RXB1D6_RXB1D66_POSITION                            0x6
#define _RXB1D6_RXB1D66_SIZE                                0x1
#define _RXB1D6_RXB1D66_LENGTH                              0x1
#define _RXB1D6_RXB1D66_MASK                                0x40
#define _RXB1D6_RXB1D67_POSN                                0x7
#define _RXB1D6_RXB1D67_POSITION                            0x7
#define _RXB1D6_RXB1D67_SIZE                                0x1
#define _RXB1D6_RXB1D67_LENGTH                              0x1
#define _RXB1D6_RXB1D67_MASK                                0x80

// Register: RXB1D7
#define RXB1D7 RXB1D7
extern volatile unsigned char           RXB1D7              __at(0xF5D);
#ifndef _LIB_BUILD
asm("RXB1D7 equ 0F5Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB1D70                :1;
        unsigned RXB1D71                :1;
        unsigned RXB1D72                :1;
        unsigned RXB1D73                :1;
        unsigned RXB1D74                :1;
        unsigned RXB1D75                :1;
        unsigned RXB1D76                :1;
        unsigned RXB1D77                :1;
    };
} RXB1D7bits_t;
extern volatile RXB1D7bits_t RXB1D7bits __at(0xF5D);
// bitfield macros
#define _RXB1D7_RXB1D70_POSN                                0x0
#define _RXB1D7_RXB1D70_POSITION                            0x0
#define _RXB1D7_RXB1D70_SIZE                                0x1
#define _RXB1D7_RXB1D70_LENGTH                              0x1
#define _RXB1D7_RXB1D70_MASK                                0x1
#define _RXB1D7_RXB1D71_POSN                                0x1
#define _RXB1D7_RXB1D71_POSITION                            0x1
#define _RXB1D7_RXB1D71_SIZE                                0x1
#define _RXB1D7_RXB1D71_LENGTH                              0x1
#define _RXB1D7_RXB1D71_MASK                                0x2
#define _RXB1D7_RXB1D72_POSN                                0x2
#define _RXB1D7_RXB1D72_POSITION                            0x2
#define _RXB1D7_RXB1D72_SIZE                                0x1
#define _RXB1D7_RXB1D72_LENGTH                              0x1
#define _RXB1D7_RXB1D72_MASK                                0x4
#define _RXB1D7_RXB1D73_POSN                                0x3
#define _RXB1D7_RXB1D73_POSITION                            0x3
#define _RXB1D7_RXB1D73_SIZE                                0x1
#define _RXB1D7_RXB1D73_LENGTH                              0x1
#define _RXB1D7_RXB1D73_MASK                                0x8
#define _RXB1D7_RXB1D74_POSN                                0x4
#define _RXB1D7_RXB1D74_POSITION                            0x4
#define _RXB1D7_RXB1D74_SIZE                                0x1
#define _RXB1D7_RXB1D74_LENGTH                              0x1
#define _RXB1D7_RXB1D74_MASK                                0x10
#define _RXB1D7_RXB1D75_POSN                                0x5
#define _RXB1D7_RXB1D75_POSITION                            0x5
#define _RXB1D7_RXB1D75_SIZE                                0x1
#define _RXB1D7_RXB1D75_LENGTH                              0x1
#define _RXB1D7_RXB1D75_MASK                                0x20
#define _RXB1D7_RXB1D76_POSN                                0x6
#define _RXB1D7_RXB1D76_POSITION                            0x6
#define _RXB1D7_RXB1D76_SIZE                                0x1
#define _RXB1D7_RXB1D76_LENGTH                              0x1
#define _RXB1D7_RXB1D76_MASK                                0x40
#define _RXB1D7_RXB1D77_POSN                                0x7
#define _RXB1D7_RXB1D77_POSITION                            0x7
#define _RXB1D7_RXB1D77_SIZE                                0x1
#define _RXB1D7_RXB1D77_LENGTH                              0x1
#define _RXB1D7_RXB1D77_MASK                                0x80

// Register: CANSTAT_RO0
#define CANSTAT_RO0 CANSTAT_RO0
extern volatile unsigned char           CANSTAT_RO0         __at(0xF5E);
#ifndef _LIB_BUILD
asm("CANSTAT_RO0 equ 0F5Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EICODE0                :1;
        unsigned EICODE1_ICODE0         :1;
        unsigned EICODE2_ICODE1         :1;
        unsigned EICODE3_ICODE2         :1;
        unsigned EICODE4                :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
} CANSTAT_RO0bits_t;
extern volatile CANSTAT_RO0bits_t CANSTAT_RO0bits __at(0xF5E);
// bitfield macros
#define _CANSTAT_RO0_EICODE0_POSN                           0x0
#define _CANSTAT_RO0_EICODE0_POSITION                       0x0
#define _CANSTAT_RO0_EICODE0_SIZE                           0x1
#define _CANSTAT_RO0_EICODE0_LENGTH                         0x1
#define _CANSTAT_RO0_EICODE0_MASK                           0x1
#define _CANSTAT_RO0_EICODE1_ICODE0_POSN                    0x1
#define _CANSTAT_RO0_EICODE1_ICODE0_POSITION                0x1
#define _CANSTAT_RO0_EICODE1_ICODE0_SIZE                    0x1
#define _CANSTAT_RO0_EICODE1_ICODE0_LENGTH                  0x1
#define _CANSTAT_RO0_EICODE1_ICODE0_MASK                    0x2
#define _CANSTAT_RO0_EICODE2_ICODE1_POSN                    0x2
#define _CANSTAT_RO0_EICODE2_ICODE1_POSITION                0x2
#define _CANSTAT_RO0_EICODE2_ICODE1_SIZE                    0x1
#define _CANSTAT_RO0_EICODE2_ICODE1_LENGTH                  0x1
#define _CANSTAT_RO0_EICODE2_ICODE1_MASK                    0x4
#define _CANSTAT_RO0_EICODE3_ICODE2_POSN                    0x3
#define _CANSTAT_RO0_EICODE3_ICODE2_POSITION                0x3
#define _CANSTAT_RO0_EICODE3_ICODE2_SIZE                    0x1
#define _CANSTAT_RO0_EICODE3_ICODE2_LENGTH                  0x1
#define _CANSTAT_RO0_EICODE3_ICODE2_MASK                    0x8
#define _CANSTAT_RO0_EICODE4_POSN                           0x4
#define _CANSTAT_RO0_EICODE4_POSITION                       0x4
#define _CANSTAT_RO0_EICODE4_SIZE                           0x1
#define _CANSTAT_RO0_EICODE4_LENGTH                         0x1
#define _CANSTAT_RO0_EICODE4_MASK                           0x10
#define _CANSTAT_RO0_OPMODE0_POSN                           0x5
#define _CANSTAT_RO0_OPMODE0_POSITION                       0x5
#define _CANSTAT_RO0_OPMODE0_SIZE                           0x1
#define _CANSTAT_RO0_OPMODE0_LENGTH                         0x1
#define _CANSTAT_RO0_OPMODE0_MASK                           0x20
#define _CANSTAT_RO0_OPMODE1_POSN                           0x6
#define _CANSTAT_RO0_OPMODE1_POSITION                       0x6
#define _CANSTAT_RO0_OPMODE1_SIZE                           0x1
#define _CANSTAT_RO0_OPMODE1_LENGTH                         0x1
#define _CANSTAT_RO0_OPMODE1_MASK                           0x40
#define _CANSTAT_RO0_OPMODE2_POSN                           0x7
#define _CANSTAT_RO0_OPMODE2_POSITION                       0x7
#define _CANSTAT_RO0_OPMODE2_SIZE                           0x1
#define _CANSTAT_RO0_OPMODE2_LENGTH                         0x1
#define _CANSTAT_RO0_OPMODE2_MASK                           0x80

// Register: CANCON_RO0
#define CANCON_RO0 CANCON_RO0
extern volatile unsigned char           CANCON_RO0          __at(0xF5F);
#ifndef _LIB_BUILD
asm("CANCON_RO0 equ 0F5Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FP0                    :1;
        unsigned WIN0_FP1               :1;
        unsigned WIN1_FP2               :1;
        unsigned WIN2_FP3               :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
} CANCON_RO0bits_t;
extern volatile CANCON_RO0bits_t CANCON_RO0bits __at(0xF5F);
// bitfield macros
#define _CANCON_RO0_FP0_POSN                                0x0
#define _CANCON_RO0_FP0_POSITION                            0x0
#define _CANCON_RO0_FP0_SIZE                                0x1
#define _CANCON_RO0_FP0_LENGTH                              0x1
#define _CANCON_RO0_FP0_MASK                                0x1
#define _CANCON_RO0_WIN0_FP1_POSN                           0x1
#define _CANCON_RO0_WIN0_FP1_POSITION                       0x1
#define _CANCON_RO0_WIN0_FP1_SIZE                           0x1
#define _CANCON_RO0_WIN0_FP1_LENGTH                         0x1
#define _CANCON_RO0_WIN0_FP1_MASK                           0x2
#define _CANCON_RO0_WIN1_FP2_POSN                           0x2
#define _CANCON_RO0_WIN1_FP2_POSITION                       0x2
#define _CANCON_RO0_WIN1_FP2_SIZE                           0x1
#define _CANCON_RO0_WIN1_FP2_LENGTH                         0x1
#define _CANCON_RO0_WIN1_FP2_MASK                           0x4
#define _CANCON_RO0_WIN2_FP3_POSN                           0x3
#define _CANCON_RO0_WIN2_FP3_POSITION                       0x3
#define _CANCON_RO0_WIN2_FP3_SIZE                           0x1
#define _CANCON_RO0_WIN2_FP3_LENGTH                         0x1
#define _CANCON_RO0_WIN2_FP3_MASK                           0x8
#define _CANCON_RO0_ABAT_POSN                               0x4
#define _CANCON_RO0_ABAT_POSITION                           0x4
#define _CANCON_RO0_ABAT_SIZE                               0x1
#define _CANCON_RO0_ABAT_LENGTH                             0x1
#define _CANCON_RO0_ABAT_MASK                               0x10
#define _CANCON_RO0_REQOP0_POSN                             0x5
#define _CANCON_RO0_REQOP0_POSITION                         0x5
#define _CANCON_RO0_REQOP0_SIZE                             0x1
#define _CANCON_RO0_REQOP0_LENGTH                           0x1
#define _CANCON_RO0_REQOP0_MASK                             0x20
#define _CANCON_RO0_REQOP1_POSN                             0x6
#define _CANCON_RO0_REQOP1_POSITION                         0x6
#define _CANCON_RO0_REQOP1_SIZE                             0x1
#define _CANCON_RO0_REQOP1_LENGTH                           0x1
#define _CANCON_RO0_REQOP1_MASK                             0x40
#define _CANCON_RO0_REQOP2_POSN                             0x7
#define _CANCON_RO0_REQOP2_POSITION                         0x7
#define _CANCON_RO0_REQOP2_SIZE                             0x1
#define _CANCON_RO0_REQOP2_LENGTH                           0x1
#define _CANCON_RO0_REQOP2_MASK                             0x80

// Register: RXB0CON
#define RXB0CON RXB0CON
extern volatile unsigned char           RXB0CON             __at(0xF60);
#ifndef _LIB_BUILD
asm("RXB0CON equ 0F60h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FILHIT0                :1;
        unsigned JTOFF_FILHIT1          :1;
        unsigned RXB0DBEN_FILHIT2       :1;
        unsigned RXRTRRO_FILHIT3        :1;
        unsigned FILHIT4                :1;
        unsigned RXM0_RTRRO             :1;
        unsigned RXM1                   :1;
        unsigned RXFUL                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned JTOFF                  :1;
        unsigned RXB0DBEN               :1;
        unsigned RXRTRRO                :1;
        unsigned                        :1;
        unsigned RXM0                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned FILHIT1                :1;
        unsigned FILHIT2                :1;
        unsigned FILHIT3                :1;
        unsigned                        :1;
        unsigned RTRRO                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned RTRR0                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned RTRRO_FILHIT3          :1;
    };
    struct {
        unsigned RXB0FILHIT0            :1;
        unsigned RXB0FILHIT1            :1;
        unsigned RXB0FILHIT2            :1;
        unsigned RXB0FILHIT3            :1;
        unsigned RXB0FILHIT4            :1;
        unsigned RXB0M0                 :1;
        unsigned RXB0M1                 :1;
        unsigned RXB0FUL                :1;
    };
    struct {
        unsigned                        :3;
        unsigned RXB0RTRR0              :1;
        unsigned                        :1;
        unsigned RXB0RTRRO              :1;
    };
} RXB0CONbits_t;
extern volatile RXB0CONbits_t RXB0CONbits __at(0xF60);
// bitfield macros
#define _RXB0CON_FILHIT0_POSN                               0x0
#define _RXB0CON_FILHIT0_POSITION                           0x0
#define _RXB0CON_FILHIT0_SIZE                               0x1
#define _RXB0CON_FILHIT0_LENGTH                             0x1
#define _RXB0CON_FILHIT0_MASK                               0x1
#define _RXB0CON_JTOFF_FILHIT1_POSN                         0x1
#define _RXB0CON_JTOFF_FILHIT1_POSITION                     0x1
#define _RXB0CON_JTOFF_FILHIT1_SIZE                         0x1
#define _RXB0CON_JTOFF_FILHIT1_LENGTH                       0x1
#define _RXB0CON_JTOFF_FILHIT1_MASK                         0x2
#define _RXB0CON_RXB0DBEN_FILHIT2_POSN                      0x2
#define _RXB0CON_RXB0DBEN_FILHIT2_POSITION                  0x2
#define _RXB0CON_RXB0DBEN_FILHIT2_SIZE                      0x1
#define _RXB0CON_RXB0DBEN_FILHIT2_LENGTH                    0x1
#define _RXB0CON_RXB0DBEN_FILHIT2_MASK                      0x4
#define _RXB0CON_RXRTRRO_FILHIT3_POSN                       0x3
#define _RXB0CON_RXRTRRO_FILHIT3_POSITION                   0x3
#define _RXB0CON_RXRTRRO_FILHIT3_SIZE                       0x1
#define _RXB0CON_RXRTRRO_FILHIT3_LENGTH                     0x1
#define _RXB0CON_RXRTRRO_FILHIT3_MASK                       0x8
#define _RXB0CON_FILHIT4_POSN                               0x4
#define _RXB0CON_FILHIT4_POSITION                           0x4
#define _RXB0CON_FILHIT4_SIZE                               0x1
#define _RXB0CON_FILHIT4_LENGTH                             0x1
#define _RXB0CON_FILHIT4_MASK                               0x10
#define _RXB0CON_RXM0_RTRRO_POSN                            0x5
#define _RXB0CON_RXM0_RTRRO_POSITION                        0x5
#define _RXB0CON_RXM0_RTRRO_SIZE                            0x1
#define _RXB0CON_RXM0_RTRRO_LENGTH                          0x1
#define _RXB0CON_RXM0_RTRRO_MASK                            0x20
#define _RXB0CON_RXM1_POSN                                  0x6
#define _RXB0CON_RXM1_POSITION                              0x6
#define _RXB0CON_RXM1_SIZE                                  0x1
#define _RXB0CON_RXM1_LENGTH                                0x1
#define _RXB0CON_RXM1_MASK                                  0x40
#define _RXB0CON_RXFUL_POSN                                 0x7
#define _RXB0CON_RXFUL_POSITION                             0x7
#define _RXB0CON_RXFUL_SIZE                                 0x1
#define _RXB0CON_RXFUL_LENGTH                               0x1
#define _RXB0CON_RXFUL_MASK                                 0x80
#define _RXB0CON_JTOFF_POSN                                 0x1
#define _RXB0CON_JTOFF_POSITION                             0x1
#define _RXB0CON_JTOFF_SIZE                                 0x1
#define _RXB0CON_JTOFF_LENGTH                               0x1
#define _RXB0CON_JTOFF_MASK                                 0x2
#define _RXB0CON_RXB0DBEN_POSN                              0x2
#define _RXB0CON_RXB0DBEN_POSITION                          0x2
#define _RXB0CON_RXB0DBEN_SIZE                              0x1
#define _RXB0CON_RXB0DBEN_LENGTH                            0x1
#define _RXB0CON_RXB0DBEN_MASK                              0x4
#define _RXB0CON_RXRTRRO_POSN                               0x3
#define _RXB0CON_RXRTRRO_POSITION                           0x3
#define _RXB0CON_RXRTRRO_SIZE                               0x1
#define _RXB0CON_RXRTRRO_LENGTH                             0x1
#define _RXB0CON_RXRTRRO_MASK                               0x8
#define _RXB0CON_RXM0_POSN                                  0x5
#define _RXB0CON_RXM0_POSITION                              0x5
#define _RXB0CON_RXM0_SIZE                                  0x1
#define _RXB0CON_RXM0_LENGTH                                0x1
#define _RXB0CON_RXM0_MASK                                  0x20
#define _RXB0CON_FILHIT1_POSN                               0x1
#define _RXB0CON_FILHIT1_POSITION                           0x1
#define _RXB0CON_FILHIT1_SIZE                               0x1
#define _RXB0CON_FILHIT1_LENGTH                             0x1
#define _RXB0CON_FILHIT1_MASK                               0x2
#define _RXB0CON_FILHIT2_POSN                               0x2
#define _RXB0CON_FILHIT2_POSITION                           0x2
#define _RXB0CON_FILHIT2_SIZE                               0x1
#define _RXB0CON_FILHIT2_LENGTH                             0x1
#define _RXB0CON_FILHIT2_MASK                               0x4
#define _RXB0CON_FILHIT3_POSN                               0x3
#define _RXB0CON_FILHIT3_POSITION                           0x3
#define _RXB0CON_FILHIT3_SIZE                               0x1
#define _RXB0CON_FILHIT3_LENGTH                             0x1
#define _RXB0CON_FILHIT3_MASK                               0x8
#define _RXB0CON_RTRRO_POSN                                 0x5
#define _RXB0CON_RTRRO_POSITION                             0x5
#define _RXB0CON_RTRRO_SIZE                                 0x1
#define _RXB0CON_RTRRO_LENGTH                               0x1
#define _RXB0CON_RTRRO_MASK                                 0x20
#define _RXB0CON_RTRR0_POSN                                 0x5
#define _RXB0CON_RTRR0_POSITION                             0x5
#define _RXB0CON_RTRR0_SIZE                                 0x1
#define _RXB0CON_RTRR0_LENGTH                               0x1
#define _RXB0CON_RTRR0_MASK                                 0x20
#define _RXB0CON_RTRRO_FILHIT3_POSN                         0x3
#define _RXB0CON_RTRRO_FILHIT3_POSITION                     0x3
#define _RXB0CON_RTRRO_FILHIT3_SIZE                         0x1
#define _RXB0CON_RTRRO_FILHIT3_LENGTH                       0x1
#define _RXB0CON_RTRRO_FILHIT3_MASK                         0x8
#define _RXB0CON_RXB0FILHIT0_POSN                           0x0
#define _RXB0CON_RXB0FILHIT0_POSITION                       0x0
#define _RXB0CON_RXB0FILHIT0_SIZE                           0x1
#define _RXB0CON_RXB0FILHIT0_LENGTH                         0x1
#define _RXB0CON_RXB0FILHIT0_MASK                           0x1
#define _RXB0CON_RXB0FILHIT1_POSN                           0x1
#define _RXB0CON_RXB0FILHIT1_POSITION                       0x1
#define _RXB0CON_RXB0FILHIT1_SIZE                           0x1
#define _RXB0CON_RXB0FILHIT1_LENGTH                         0x1
#define _RXB0CON_RXB0FILHIT1_MASK                           0x2
#define _RXB0CON_RXB0FILHIT2_POSN                           0x2
#define _RXB0CON_RXB0FILHIT2_POSITION                       0x2
#define _RXB0CON_RXB0FILHIT2_SIZE                           0x1
#define _RXB0CON_RXB0FILHIT2_LENGTH                         0x1
#define _RXB0CON_RXB0FILHIT2_MASK                           0x4
#define _RXB0CON_RXB0FILHIT3_POSN                           0x3
#define _RXB0CON_RXB0FILHIT3_POSITION                       0x3
#define _RXB0CON_RXB0FILHIT3_SIZE                           0x1
#define _RXB0CON_RXB0FILHIT3_LENGTH                         0x1
#define _RXB0CON_RXB0FILHIT3_MASK                           0x8
#define _RXB0CON_RXB0FILHIT4_POSN                           0x4
#define _RXB0CON_RXB0FILHIT4_POSITION                       0x4
#define _RXB0CON_RXB0FILHIT4_SIZE                           0x1
#define _RXB0CON_RXB0FILHIT4_LENGTH                         0x1
#define _RXB0CON_RXB0FILHIT4_MASK                           0x10
#define _RXB0CON_RXB0M0_POSN                                0x5
#define _RXB0CON_RXB0M0_POSITION                            0x5
#define _RXB0CON_RXB0M0_SIZE                                0x1
#define _RXB0CON_RXB0M0_LENGTH                              0x1
#define _RXB0CON_RXB0M0_MASK                                0x20
#define _RXB0CON_RXB0M1_POSN                                0x6
#define _RXB0CON_RXB0M1_POSITION                            0x6
#define _RXB0CON_RXB0M1_SIZE                                0x1
#define _RXB0CON_RXB0M1_LENGTH                              0x1
#define _RXB0CON_RXB0M1_MASK                                0x40
#define _RXB0CON_RXB0FUL_POSN                               0x7
#define _RXB0CON_RXB0FUL_POSITION                           0x7
#define _RXB0CON_RXB0FUL_SIZE                               0x1
#define _RXB0CON_RXB0FUL_LENGTH                             0x1
#define _RXB0CON_RXB0FUL_MASK                               0x80
#define _RXB0CON_RXB0RTRR0_POSN                             0x3
#define _RXB0CON_RXB0RTRR0_POSITION                         0x3
#define _RXB0CON_RXB0RTRR0_SIZE                             0x1
#define _RXB0CON_RXB0RTRR0_LENGTH                           0x1
#define _RXB0CON_RXB0RTRR0_MASK                             0x8
#define _RXB0CON_RXB0RTRRO_POSN                             0x5
#define _RXB0CON_RXB0RTRRO_POSITION                         0x5
#define _RXB0CON_RXB0RTRRO_SIZE                             0x1
#define _RXB0CON_RXB0RTRRO_LENGTH                           0x1
#define _RXB0CON_RXB0RTRRO_MASK                             0x20

// Register: RXB0SIDH
#define RXB0SIDH RXB0SIDH
extern volatile unsigned char           RXB0SIDH            __at(0xF61);
#ifndef _LIB_BUILD
asm("RXB0SIDH equ 0F61h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SID3                   :1;
        unsigned SID4                   :1;
        unsigned SID5                   :1;
        unsigned SID6                   :1;
        unsigned SID7                   :1;
        unsigned SID8                   :1;
        unsigned SID9                   :1;
        unsigned SID10                  :1;
    };
    struct {
        unsigned RXB0SID3               :1;
        unsigned RXB0SID4               :1;
        unsigned RXB0SID5               :1;
        unsigned RXB0SID6               :1;
        unsigned RXB0SID7               :1;
        unsigned RXB0SID8               :1;
        unsigned RXB0SID9               :1;
        unsigned RXB0SID10              :1;
    };
} RXB0SIDHbits_t;
extern volatile RXB0SIDHbits_t RXB0SIDHbits __at(0xF61);
// bitfield macros
#define _RXB0SIDH_SID3_POSN                                 0x0
#define _RXB0SIDH_SID3_POSITION                             0x0
#define _RXB0SIDH_SID3_SIZE                                 0x1
#define _RXB0SIDH_SID3_LENGTH                               0x1
#define _RXB0SIDH_SID3_MASK                                 0x1
#define _RXB0SIDH_SID4_POSN                                 0x1
#define _RXB0SIDH_SID4_POSITION                             0x1
#define _RXB0SIDH_SID4_SIZE                                 0x1
#define _RXB0SIDH_SID4_LENGTH                               0x1
#define _RXB0SIDH_SID4_MASK                                 0x2
#define _RXB0SIDH_SID5_POSN                                 0x2
#define _RXB0SIDH_SID5_POSITION                             0x2
#define _RXB0SIDH_SID5_SIZE                                 0x1
#define _RXB0SIDH_SID5_LENGTH                               0x1
#define _RXB0SIDH_SID5_MASK                                 0x4
#define _RXB0SIDH_SID6_POSN                                 0x3
#define _RXB0SIDH_SID6_POSITION                             0x3
#define _RXB0SIDH_SID6_SIZE                                 0x1
#define _RXB0SIDH_SID6_LENGTH                               0x1
#define _RXB0SIDH_SID6_MASK                                 0x8
#define _RXB0SIDH_SID7_POSN                                 0x4
#define _RXB0SIDH_SID7_POSITION                             0x4
#define _RXB0SIDH_SID7_SIZE                                 0x1
#define _RXB0SIDH_SID7_LENGTH                               0x1
#define _RXB0SIDH_SID7_MASK                                 0x10
#define _RXB0SIDH_SID8_POSN                                 0x5
#define _RXB0SIDH_SID8_POSITION                             0x5
#define _RXB0SIDH_SID8_SIZE                                 0x1
#define _RXB0SIDH_SID8_LENGTH                               0x1
#define _RXB0SIDH_SID8_MASK                                 0x20
#define _RXB0SIDH_SID9_POSN                                 0x6
#define _RXB0SIDH_SID9_POSITION                             0x6
#define _RXB0SIDH_SID9_SIZE                                 0x1
#define _RXB0SIDH_SID9_LENGTH                               0x1
#define _RXB0SIDH_SID9_MASK                                 0x40
#define _RXB0SIDH_SID10_POSN                                0x7
#define _RXB0SIDH_SID10_POSITION                            0x7
#define _RXB0SIDH_SID10_SIZE                                0x1
#define _RXB0SIDH_SID10_LENGTH                              0x1
#define _RXB0SIDH_SID10_MASK                                0x80
#define _RXB0SIDH_RXB0SID3_POSN                             0x0
#define _RXB0SIDH_RXB0SID3_POSITION                         0x0
#define _RXB0SIDH_RXB0SID3_SIZE                             0x1
#define _RXB0SIDH_RXB0SID3_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID3_MASK                             0x1
#define _RXB0SIDH_RXB0SID4_POSN                             0x1
#define _RXB0SIDH_RXB0SID4_POSITION                         0x1
#define _RXB0SIDH_RXB0SID4_SIZE                             0x1
#define _RXB0SIDH_RXB0SID4_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID4_MASK                             0x2
#define _RXB0SIDH_RXB0SID5_POSN                             0x2
#define _RXB0SIDH_RXB0SID5_POSITION                         0x2
#define _RXB0SIDH_RXB0SID5_SIZE                             0x1
#define _RXB0SIDH_RXB0SID5_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID5_MASK                             0x4
#define _RXB0SIDH_RXB0SID6_POSN                             0x3
#define _RXB0SIDH_RXB0SID6_POSITION                         0x3
#define _RXB0SIDH_RXB0SID6_SIZE                             0x1
#define _RXB0SIDH_RXB0SID6_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID6_MASK                             0x8
#define _RXB0SIDH_RXB0SID7_POSN                             0x4
#define _RXB0SIDH_RXB0SID7_POSITION                         0x4
#define _RXB0SIDH_RXB0SID7_SIZE                             0x1
#define _RXB0SIDH_RXB0SID7_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID7_MASK                             0x10
#define _RXB0SIDH_RXB0SID8_POSN                             0x5
#define _RXB0SIDH_RXB0SID8_POSITION                         0x5
#define _RXB0SIDH_RXB0SID8_SIZE                             0x1
#define _RXB0SIDH_RXB0SID8_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID8_MASK                             0x20
#define _RXB0SIDH_RXB0SID9_POSN                             0x6
#define _RXB0SIDH_RXB0SID9_POSITION                         0x6
#define _RXB0SIDH_RXB0SID9_SIZE                             0x1
#define _RXB0SIDH_RXB0SID9_LENGTH                           0x1
#define _RXB0SIDH_RXB0SID9_MASK                             0x40
#define _RXB0SIDH_RXB0SID10_POSN                            0x7
#define _RXB0SIDH_RXB0SID10_POSITION                        0x7
#define _RXB0SIDH_RXB0SID10_SIZE                            0x1
#define _RXB0SIDH_RXB0SID10_LENGTH                          0x1
#define _RXB0SIDH_RXB0SID10_MASK                            0x80

// Register: RXB0SIDL
#define RXB0SIDL RXB0SIDL
extern volatile unsigned char           RXB0SIDL            __at(0xF62);
#ifndef _LIB_BUILD
asm("RXB0SIDL equ 0F62h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID16                  :1;
        unsigned EID17                  :1;
        unsigned                        :1;
        unsigned EXID                   :1;
        unsigned SRR                    :1;
        unsigned SID0                   :1;
        unsigned SID1                   :1;
        unsigned SID2                   :1;
    };
    struct {
        unsigned RXB0EID16              :1;
        unsigned RXB0EID17              :1;
        unsigned                        :1;
        unsigned RXB0EXID               :1;
        unsigned RXB0SRR                :1;
        unsigned RXB0SID0               :1;
        unsigned RXB0SID1               :1;
        unsigned RXB0SID2               :1;
    };
} RXB0SIDLbits_t;
extern volatile RXB0SIDLbits_t RXB0SIDLbits __at(0xF62);
// bitfield macros
#define _RXB0SIDL_EID16_POSN                                0x0
#define _RXB0SIDL_EID16_POSITION                            0x0
#define _RXB0SIDL_EID16_SIZE                                0x1
#define _RXB0SIDL_EID16_LENGTH                              0x1
#define _RXB0SIDL_EID16_MASK                                0x1
#define _RXB0SIDL_EID17_POSN                                0x1
#define _RXB0SIDL_EID17_POSITION                            0x1
#define _RXB0SIDL_EID17_SIZE                                0x1
#define _RXB0SIDL_EID17_LENGTH                              0x1
#define _RXB0SIDL_EID17_MASK                                0x2
#define _RXB0SIDL_EXID_POSN                                 0x3
#define _RXB0SIDL_EXID_POSITION                             0x3
#define _RXB0SIDL_EXID_SIZE                                 0x1
#define _RXB0SIDL_EXID_LENGTH                               0x1
#define _RXB0SIDL_EXID_MASK                                 0x8
#define _RXB0SIDL_SRR_POSN                                  0x4
#define _RXB0SIDL_SRR_POSITION                              0x4
#define _RXB0SIDL_SRR_SIZE                                  0x1
#define _RXB0SIDL_SRR_LENGTH                                0x1
#define _RXB0SIDL_SRR_MASK                                  0x10
#define _RXB0SIDL_SID0_POSN                                 0x5
#define _RXB0SIDL_SID0_POSITION                             0x5
#define _RXB0SIDL_SID0_SIZE                                 0x1
#define _RXB0SIDL_SID0_LENGTH                               0x1
#define _RXB0SIDL_SID0_MASK                                 0x20
#define _RXB0SIDL_SID1_POSN                                 0x6
#define _RXB0SIDL_SID1_POSITION                             0x6
#define _RXB0SIDL_SID1_SIZE                                 0x1
#define _RXB0SIDL_SID1_LENGTH                               0x1
#define _RXB0SIDL_SID1_MASK                                 0x40
#define _RXB0SIDL_SID2_POSN                                 0x7
#define _RXB0SIDL_SID2_POSITION                             0x7
#define _RXB0SIDL_SID2_SIZE                                 0x1
#define _RXB0SIDL_SID2_LENGTH                               0x1
#define _RXB0SIDL_SID2_MASK                                 0x80
#define _RXB0SIDL_RXB0EID16_POSN                            0x0
#define _RXB0SIDL_RXB0EID16_POSITION                        0x0
#define _RXB0SIDL_RXB0EID16_SIZE                            0x1
#define _RXB0SIDL_RXB0EID16_LENGTH                          0x1
#define _RXB0SIDL_RXB0EID16_MASK                            0x1
#define _RXB0SIDL_RXB0EID17_POSN                            0x1
#define _RXB0SIDL_RXB0EID17_POSITION                        0x1
#define _RXB0SIDL_RXB0EID17_SIZE                            0x1
#define _RXB0SIDL_RXB0EID17_LENGTH                          0x1
#define _RXB0SIDL_RXB0EID17_MASK                            0x2
#define _RXB0SIDL_RXB0EXID_POSN                             0x3
#define _RXB0SIDL_RXB0EXID_POSITION                         0x3
#define _RXB0SIDL_RXB0EXID_SIZE                             0x1
#define _RXB0SIDL_RXB0EXID_LENGTH                           0x1
#define _RXB0SIDL_RXB0EXID_MASK                             0x8
#define _RXB0SIDL_RXB0SRR_POSN                              0x4
#define _RXB0SIDL_RXB0SRR_POSITION                          0x4
#define _RXB0SIDL_RXB0SRR_SIZE                              0x1
#define _RXB0SIDL_RXB0SRR_LENGTH                            0x1
#define _RXB0SIDL_RXB0SRR_MASK                              0x10
#define _RXB0SIDL_RXB0SID0_POSN                             0x5
#define _RXB0SIDL_RXB0SID0_POSITION                         0x5
#define _RXB0SIDL_RXB0SID0_SIZE                             0x1
#define _RXB0SIDL_RXB0SID0_LENGTH                           0x1
#define _RXB0SIDL_RXB0SID0_MASK                             0x20
#define _RXB0SIDL_RXB0SID1_POSN                             0x6
#define _RXB0SIDL_RXB0SID1_POSITION                         0x6
#define _RXB0SIDL_RXB0SID1_SIZE                             0x1
#define _RXB0SIDL_RXB0SID1_LENGTH                           0x1
#define _RXB0SIDL_RXB0SID1_MASK                             0x40
#define _RXB0SIDL_RXB0SID2_POSN                             0x7
#define _RXB0SIDL_RXB0SID2_POSITION                         0x7
#define _RXB0SIDL_RXB0SID2_SIZE                             0x1
#define _RXB0SIDL_RXB0SID2_LENGTH                           0x1
#define _RXB0SIDL_RXB0SID2_MASK                             0x80

// Register: RXB0EIDH
#define RXB0EIDH RXB0EIDH
extern volatile unsigned char           RXB0EIDH            __at(0xF63);
#ifndef _LIB_BUILD
asm("RXB0EIDH equ 0F63h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID8                   :1;
        unsigned EID9                   :1;
        unsigned EID10                  :1;
        unsigned EID11                  :1;
        unsigned EID12                  :1;
        unsigned EID13                  :1;
        unsigned EID14                  :1;
        unsigned EID15                  :1;
    };
    struct {
        unsigned RXB0EID8               :1;
        unsigned RXB0EID9               :1;
        unsigned RXB0EID10              :1;
        unsigned RXB0EID11              :1;
        unsigned RXB0EID12              :1;
        unsigned RXB0EID13              :1;
        unsigned RXB0EID14              :1;
        unsigned RXB0EID15              :1;
    };
} RXB0EIDHbits_t;
extern volatile RXB0EIDHbits_t RXB0EIDHbits __at(0xF63);
// bitfield macros
#define _RXB0EIDH_EID8_POSN                                 0x0
#define _RXB0EIDH_EID8_POSITION                             0x0
#define _RXB0EIDH_EID8_SIZE                                 0x1
#define _RXB0EIDH_EID8_LENGTH                               0x1
#define _RXB0EIDH_EID8_MASK                                 0x1
#define _RXB0EIDH_EID9_POSN                                 0x1
#define _RXB0EIDH_EID9_POSITION                             0x1
#define _RXB0EIDH_EID9_SIZE                                 0x1
#define _RXB0EIDH_EID9_LENGTH                               0x1
#define _RXB0EIDH_EID9_MASK                                 0x2
#define _RXB0EIDH_EID10_POSN                                0x2
#define _RXB0EIDH_EID10_POSITION                            0x2
#define _RXB0EIDH_EID10_SIZE                                0x1
#define _RXB0EIDH_EID10_LENGTH                              0x1
#define _RXB0EIDH_EID10_MASK                                0x4
#define _RXB0EIDH_EID11_POSN                                0x3
#define _RXB0EIDH_EID11_POSITION                            0x3
#define _RXB0EIDH_EID11_SIZE                                0x1
#define _RXB0EIDH_EID11_LENGTH                              0x1
#define _RXB0EIDH_EID11_MASK                                0x8
#define _RXB0EIDH_EID12_POSN                                0x4
#define _RXB0EIDH_EID12_POSITION                            0x4
#define _RXB0EIDH_EID12_SIZE                                0x1
#define _RXB0EIDH_EID12_LENGTH                              0x1
#define _RXB0EIDH_EID12_MASK                                0x10
#define _RXB0EIDH_EID13_POSN                                0x5
#define _RXB0EIDH_EID13_POSITION                            0x5
#define _RXB0EIDH_EID13_SIZE                                0x1
#define _RXB0EIDH_EID13_LENGTH                              0x1
#define _RXB0EIDH_EID13_MASK                                0x20
#define _RXB0EIDH_EID14_POSN                                0x6
#define _RXB0EIDH_EID14_POSITION                            0x6
#define _RXB0EIDH_EID14_SIZE                                0x1
#define _RXB0EIDH_EID14_LENGTH                              0x1
#define _RXB0EIDH_EID14_MASK                                0x40
#define _RXB0EIDH_EID15_POSN                                0x7
#define _RXB0EIDH_EID15_POSITION                            0x7
#define _RXB0EIDH_EID15_SIZE                                0x1
#define _RXB0EIDH_EID15_LENGTH                              0x1
#define _RXB0EIDH_EID15_MASK                                0x80
#define _RXB0EIDH_RXB0EID8_POSN                             0x0
#define _RXB0EIDH_RXB0EID8_POSITION                         0x0
#define _RXB0EIDH_RXB0EID8_SIZE                             0x1
#define _RXB0EIDH_RXB0EID8_LENGTH                           0x1
#define _RXB0EIDH_RXB0EID8_MASK                             0x1
#define _RXB0EIDH_RXB0EID9_POSN                             0x1
#define _RXB0EIDH_RXB0EID9_POSITION                         0x1
#define _RXB0EIDH_RXB0EID9_SIZE                             0x1
#define _RXB0EIDH_RXB0EID9_LENGTH                           0x1
#define _RXB0EIDH_RXB0EID9_MASK                             0x2
#define _RXB0EIDH_RXB0EID10_POSN                            0x2
#define _RXB0EIDH_RXB0EID10_POSITION                        0x2
#define _RXB0EIDH_RXB0EID10_SIZE                            0x1
#define _RXB0EIDH_RXB0EID10_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID10_MASK                            0x4
#define _RXB0EIDH_RXB0EID11_POSN                            0x3
#define _RXB0EIDH_RXB0EID11_POSITION                        0x3
#define _RXB0EIDH_RXB0EID11_SIZE                            0x1
#define _RXB0EIDH_RXB0EID11_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID11_MASK                            0x8
#define _RXB0EIDH_RXB0EID12_POSN                            0x4
#define _RXB0EIDH_RXB0EID12_POSITION                        0x4
#define _RXB0EIDH_RXB0EID12_SIZE                            0x1
#define _RXB0EIDH_RXB0EID12_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID12_MASK                            0x10
#define _RXB0EIDH_RXB0EID13_POSN                            0x5
#define _RXB0EIDH_RXB0EID13_POSITION                        0x5
#define _RXB0EIDH_RXB0EID13_SIZE                            0x1
#define _RXB0EIDH_RXB0EID13_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID13_MASK                            0x20
#define _RXB0EIDH_RXB0EID14_POSN                            0x6
#define _RXB0EIDH_RXB0EID14_POSITION                        0x6
#define _RXB0EIDH_RXB0EID14_SIZE                            0x1
#define _RXB0EIDH_RXB0EID14_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID14_MASK                            0x40
#define _RXB0EIDH_RXB0EID15_POSN                            0x7
#define _RXB0EIDH_RXB0EID15_POSITION                        0x7
#define _RXB0EIDH_RXB0EID15_SIZE                            0x1
#define _RXB0EIDH_RXB0EID15_LENGTH                          0x1
#define _RXB0EIDH_RXB0EID15_MASK                            0x80

// Register: RXB0EIDL
#define RXB0EIDL RXB0EIDL
extern volatile unsigned char           RXB0EIDL            __at(0xF64);
#ifndef _LIB_BUILD
asm("RXB0EIDL equ 0F64h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EID0                   :1;
        unsigned EID1                   :1;
        unsigned EID2                   :1;
        unsigned EID3                   :1;
        unsigned EID4                   :1;
        unsigned EID5                   :1;
        unsigned EID6                   :1;
        unsigned EID7                   :1;
    };
    struct {
        unsigned RXB0EID0               :1;
        unsigned RXB0EID1               :1;
        unsigned RXB0EID2               :1;
        unsigned RXB0EID3               :1;
        unsigned RXB0EID4               :1;
        unsigned RXB0EID5               :1;
        unsigned RXB0EID6               :1;
        unsigned RXB0EID7               :1;
    };
} RXB0EIDLbits_t;
extern volatile RXB0EIDLbits_t RXB0EIDLbits __at(0xF64);
// bitfield macros
#define _RXB0EIDL_EID0_POSN                                 0x0
#define _RXB0EIDL_EID0_POSITION                             0x0
#define _RXB0EIDL_EID0_SIZE                                 0x1
#define _RXB0EIDL_EID0_LENGTH                               0x1
#define _RXB0EIDL_EID0_MASK                                 0x1
#define _RXB0EIDL_EID1_POSN                                 0x1
#define _RXB0EIDL_EID1_POSITION                             0x1
#define _RXB0EIDL_EID1_SIZE                                 0x1
#define _RXB0EIDL_EID1_LENGTH                               0x1
#define _RXB0EIDL_EID1_MASK                                 0x2
#define _RXB0EIDL_EID2_POSN                                 0x2
#define _RXB0EIDL_EID2_POSITION                             0x2
#define _RXB0EIDL_EID2_SIZE                                 0x1
#define _RXB0EIDL_EID2_LENGTH                               0x1
#define _RXB0EIDL_EID2_MASK                                 0x4
#define _RXB0EIDL_EID3_POSN                                 0x3
#define _RXB0EIDL_EID3_POSITION                             0x3
#define _RXB0EIDL_EID3_SIZE                                 0x1
#define _RXB0EIDL_EID3_LENGTH                               0x1
#define _RXB0EIDL_EID3_MASK                                 0x8
#define _RXB0EIDL_EID4_POSN                                 0x4
#define _RXB0EIDL_EID4_POSITION                             0x4
#define _RXB0EIDL_EID4_SIZE                                 0x1
#define _RXB0EIDL_EID4_LENGTH                               0x1
#define _RXB0EIDL_EID4_MASK                                 0x10
#define _RXB0EIDL_EID5_POSN                                 0x5
#define _RXB0EIDL_EID5_POSITION                             0x5
#define _RXB0EIDL_EID5_SIZE                                 0x1
#define _RXB0EIDL_EID5_LENGTH                               0x1
#define _RXB0EIDL_EID5_MASK                                 0x20
#define _RXB0EIDL_EID6_POSN                                 0x6
#define _RXB0EIDL_EID6_POSITION                             0x6
#define _RXB0EIDL_EID6_SIZE                                 0x1
#define _RXB0EIDL_EID6_LENGTH                               0x1
#define _RXB0EIDL_EID6_MASK                                 0x40
#define _RXB0EIDL_EID7_POSN                                 0x7
#define _RXB0EIDL_EID7_POSITION                             0x7
#define _RXB0EIDL_EID7_SIZE                                 0x1
#define _RXB0EIDL_EID7_LENGTH                               0x1
#define _RXB0EIDL_EID7_MASK                                 0x80
#define _RXB0EIDL_RXB0EID0_POSN                             0x0
#define _RXB0EIDL_RXB0EID0_POSITION                         0x0
#define _RXB0EIDL_RXB0EID0_SIZE                             0x1
#define _RXB0EIDL_RXB0EID0_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID0_MASK                             0x1
#define _RXB0EIDL_RXB0EID1_POSN                             0x1
#define _RXB0EIDL_RXB0EID1_POSITION                         0x1
#define _RXB0EIDL_RXB0EID1_SIZE                             0x1
#define _RXB0EIDL_RXB0EID1_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID1_MASK                             0x2
#define _RXB0EIDL_RXB0EID2_POSN                             0x2
#define _RXB0EIDL_RXB0EID2_POSITION                         0x2
#define _RXB0EIDL_RXB0EID2_SIZE                             0x1
#define _RXB0EIDL_RXB0EID2_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID2_MASK                             0x4
#define _RXB0EIDL_RXB0EID3_POSN                             0x3
#define _RXB0EIDL_RXB0EID3_POSITION                         0x3
#define _RXB0EIDL_RXB0EID3_SIZE                             0x1
#define _RXB0EIDL_RXB0EID3_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID3_MASK                             0x8
#define _RXB0EIDL_RXB0EID4_POSN                             0x4
#define _RXB0EIDL_RXB0EID4_POSITION                         0x4
#define _RXB0EIDL_RXB0EID4_SIZE                             0x1
#define _RXB0EIDL_RXB0EID4_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID4_MASK                             0x10
#define _RXB0EIDL_RXB0EID5_POSN                             0x5
#define _RXB0EIDL_RXB0EID5_POSITION                         0x5
#define _RXB0EIDL_RXB0EID5_SIZE                             0x1
#define _RXB0EIDL_RXB0EID5_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID5_MASK                             0x20
#define _RXB0EIDL_RXB0EID6_POSN                             0x6
#define _RXB0EIDL_RXB0EID6_POSITION                         0x6
#define _RXB0EIDL_RXB0EID6_SIZE                             0x1
#define _RXB0EIDL_RXB0EID6_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID6_MASK                             0x40
#define _RXB0EIDL_RXB0EID7_POSN                             0x7
#define _RXB0EIDL_RXB0EID7_POSITION                         0x7
#define _RXB0EIDL_RXB0EID7_SIZE                             0x1
#define _RXB0EIDL_RXB0EID7_LENGTH                           0x1
#define _RXB0EIDL_RXB0EID7_MASK                             0x80

// Register: RXB0DLC
#define RXB0DLC RXB0DLC
extern volatile unsigned char           RXB0DLC             __at(0xF65);
#ifndef _LIB_BUILD
asm("RXB0DLC equ 0F65h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DLC0                   :1;
        unsigned DLC1                   :1;
        unsigned DLC2                   :1;
        unsigned DLC3                   :1;
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RXRTR                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned RESRB0                 :1;
        unsigned RESRB1                 :1;
    };
    struct {
        unsigned RXB0DLC0               :1;
        unsigned RXB0DLC1               :1;
        unsigned RXB0DLC2               :1;
        unsigned RXB0DLC3               :1;
        unsigned RXB0RB0                :1;
        unsigned RXB0RB1                :1;
        unsigned RXB0RTR                :1;
    };
} RXB0DLCbits_t;
extern volatile RXB0DLCbits_t RXB0DLCbits __at(0xF65);
// bitfield macros
#define _RXB0DLC_DLC0_POSN                                  0x0
#define _RXB0DLC_DLC0_POSITION                              0x0
#define _RXB0DLC_DLC0_SIZE                                  0x1
#define _RXB0DLC_DLC0_LENGTH                                0x1
#define _RXB0DLC_DLC0_MASK                                  0x1
#define _RXB0DLC_DLC1_POSN                                  0x1
#define _RXB0DLC_DLC1_POSITION                              0x1
#define _RXB0DLC_DLC1_SIZE                                  0x1
#define _RXB0DLC_DLC1_LENGTH                                0x1
#define _RXB0DLC_DLC1_MASK                                  0x2
#define _RXB0DLC_DLC2_POSN                                  0x2
#define _RXB0DLC_DLC2_POSITION                              0x2
#define _RXB0DLC_DLC2_SIZE                                  0x1
#define _RXB0DLC_DLC2_LENGTH                                0x1
#define _RXB0DLC_DLC2_MASK                                  0x4
#define _RXB0DLC_DLC3_POSN                                  0x3
#define _RXB0DLC_DLC3_POSITION                              0x3
#define _RXB0DLC_DLC3_SIZE                                  0x1
#define _RXB0DLC_DLC3_LENGTH                                0x1
#define _RXB0DLC_DLC3_MASK                                  0x8
#define _RXB0DLC_RB0_POSN                                   0x4
#define _RXB0DLC_RB0_POSITION                               0x4
#define _RXB0DLC_RB0_SIZE                                   0x1
#define _RXB0DLC_RB0_LENGTH                                 0x1
#define _RXB0DLC_RB0_MASK                                   0x10
#define _RXB0DLC_RB1_POSN                                   0x5
#define _RXB0DLC_RB1_POSITION                               0x5
#define _RXB0DLC_RB1_SIZE                                   0x1
#define _RXB0DLC_RB1_LENGTH                                 0x1
#define _RXB0DLC_RB1_MASK                                   0x20
#define _RXB0DLC_RXRTR_POSN                                 0x6
#define _RXB0DLC_RXRTR_POSITION                             0x6
#define _RXB0DLC_RXRTR_SIZE                                 0x1
#define _RXB0DLC_RXRTR_LENGTH                               0x1
#define _RXB0DLC_RXRTR_MASK                                 0x40
#define _RXB0DLC_RESRB0_POSN                                0x4
#define _RXB0DLC_RESRB0_POSITION                            0x4
#define _RXB0DLC_RESRB0_SIZE                                0x1
#define _RXB0DLC_RESRB0_LENGTH                              0x1
#define _RXB0DLC_RESRB0_MASK                                0x10
#define _RXB0DLC_RESRB1_POSN                                0x5
#define _RXB0DLC_RESRB1_POSITION                            0x5
#define _RXB0DLC_RESRB1_SIZE                                0x1
#define _RXB0DLC_RESRB1_LENGTH                              0x1
#define _RXB0DLC_RESRB1_MASK                                0x20
#define _RXB0DLC_RXB0DLC0_POSN                              0x0
#define _RXB0DLC_RXB0DLC0_POSITION                          0x0
#define _RXB0DLC_RXB0DLC0_SIZE                              0x1
#define _RXB0DLC_RXB0DLC0_LENGTH                            0x1
#define _RXB0DLC_RXB0DLC0_MASK                              0x1
#define _RXB0DLC_RXB0DLC1_POSN                              0x1
#define _RXB0DLC_RXB0DLC1_POSITION                          0x1
#define _RXB0DLC_RXB0DLC1_SIZE                              0x1
#define _RXB0DLC_RXB0DLC1_LENGTH                            0x1
#define _RXB0DLC_RXB0DLC1_MASK                              0x2
#define _RXB0DLC_RXB0DLC2_POSN                              0x2
#define _RXB0DLC_RXB0DLC2_POSITION                          0x2
#define _RXB0DLC_RXB0DLC2_SIZE                              0x1
#define _RXB0DLC_RXB0DLC2_LENGTH                            0x1
#define _RXB0DLC_RXB0DLC2_MASK                              0x4
#define _RXB0DLC_RXB0DLC3_POSN                              0x3
#define _RXB0DLC_RXB0DLC3_POSITION                          0x3
#define _RXB0DLC_RXB0DLC3_SIZE                              0x1
#define _RXB0DLC_RXB0DLC3_LENGTH                            0x1
#define _RXB0DLC_RXB0DLC3_MASK                              0x8
#define _RXB0DLC_RXB0RB0_POSN                               0x4
#define _RXB0DLC_RXB0RB0_POSITION                           0x4
#define _RXB0DLC_RXB0RB0_SIZE                               0x1
#define _RXB0DLC_RXB0RB0_LENGTH                             0x1
#define _RXB0DLC_RXB0RB0_MASK                               0x10
#define _RXB0DLC_RXB0RB1_POSN                               0x5
#define _RXB0DLC_RXB0RB1_POSITION                           0x5
#define _RXB0DLC_RXB0RB1_SIZE                               0x1
#define _RXB0DLC_RXB0RB1_LENGTH                             0x1
#define _RXB0DLC_RXB0RB1_MASK                               0x20
#define _RXB0DLC_RXB0RTR_POSN                               0x6
#define _RXB0DLC_RXB0RTR_POSITION                           0x6
#define _RXB0DLC_RXB0RTR_SIZE                               0x1
#define _RXB0DLC_RXB0RTR_LENGTH                             0x1
#define _RXB0DLC_RXB0RTR_MASK                               0x40

// Register: RXB0D0
#define RXB0D0 RXB0D0
extern volatile unsigned char           RXB0D0              __at(0xF66);
#ifndef _LIB_BUILD
asm("RXB0D0 equ 0F66h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D00                :1;
        unsigned RXB0D01                :1;
        unsigned RXB0D02                :1;
        unsigned RXB0D03                :1;
        unsigned RXB0D04                :1;
        unsigned RXB0D05                :1;
        unsigned RXB0D06                :1;
        unsigned RXB0D07                :1;
    };
} RXB0D0bits_t;
extern volatile RXB0D0bits_t RXB0D0bits __at(0xF66);
// bitfield macros
#define _RXB0D0_RXB0D00_POSN                                0x0
#define _RXB0D0_RXB0D00_POSITION                            0x0
#define _RXB0D0_RXB0D00_SIZE                                0x1
#define _RXB0D0_RXB0D00_LENGTH                              0x1
#define _RXB0D0_RXB0D00_MASK                                0x1
#define _RXB0D0_RXB0D01_POSN                                0x1
#define _RXB0D0_RXB0D01_POSITION                            0x1
#define _RXB0D0_RXB0D01_SIZE                                0x1
#define _RXB0D0_RXB0D01_LENGTH                              0x1
#define _RXB0D0_RXB0D01_MASK                                0x2
#define _RXB0D0_RXB0D02_POSN                                0x2
#define _RXB0D0_RXB0D02_POSITION                            0x2
#define _RXB0D0_RXB0D02_SIZE                                0x1
#define _RXB0D0_RXB0D02_LENGTH                              0x1
#define _RXB0D0_RXB0D02_MASK                                0x4
#define _RXB0D0_RXB0D03_POSN                                0x3
#define _RXB0D0_RXB0D03_POSITION                            0x3
#define _RXB0D0_RXB0D03_SIZE                                0x1
#define _RXB0D0_RXB0D03_LENGTH                              0x1
#define _RXB0D0_RXB0D03_MASK                                0x8
#define _RXB0D0_RXB0D04_POSN                                0x4
#define _RXB0D0_RXB0D04_POSITION                            0x4
#define _RXB0D0_RXB0D04_SIZE                                0x1
#define _RXB0D0_RXB0D04_LENGTH                              0x1
#define _RXB0D0_RXB0D04_MASK                                0x10
#define _RXB0D0_RXB0D05_POSN                                0x5
#define _RXB0D0_RXB0D05_POSITION                            0x5
#define _RXB0D0_RXB0D05_SIZE                                0x1
#define _RXB0D0_RXB0D05_LENGTH                              0x1
#define _RXB0D0_RXB0D05_MASK                                0x20
#define _RXB0D0_RXB0D06_POSN                                0x6
#define _RXB0D0_RXB0D06_POSITION                            0x6
#define _RXB0D0_RXB0D06_SIZE                                0x1
#define _RXB0D0_RXB0D06_LENGTH                              0x1
#define _RXB0D0_RXB0D06_MASK                                0x40
#define _RXB0D0_RXB0D07_POSN                                0x7
#define _RXB0D0_RXB0D07_POSITION                            0x7
#define _RXB0D0_RXB0D07_SIZE                                0x1
#define _RXB0D0_RXB0D07_LENGTH                              0x1
#define _RXB0D0_RXB0D07_MASK                                0x80

// Register: RXB0D1
#define RXB0D1 RXB0D1
extern volatile unsigned char           RXB0D1              __at(0xF67);
#ifndef _LIB_BUILD
asm("RXB0D1 equ 0F67h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D10                :1;
        unsigned RXB0D11                :1;
        unsigned RXB0D12                :1;
        unsigned RXB0D13                :1;
        unsigned RXB0D14                :1;
        unsigned RXB0D15                :1;
        unsigned RXB0D16                :1;
        unsigned RXB0D17                :1;
    };
} RXB0D1bits_t;
extern volatile RXB0D1bits_t RXB0D1bits __at(0xF67);
// bitfield macros
#define _RXB0D1_RXB0D10_POSN                                0x0
#define _RXB0D1_RXB0D10_POSITION                            0x0
#define _RXB0D1_RXB0D10_SIZE                                0x1
#define _RXB0D1_RXB0D10_LENGTH                              0x1
#define _RXB0D1_RXB0D10_MASK                                0x1
#define _RXB0D1_RXB0D11_POSN                                0x1
#define _RXB0D1_RXB0D11_POSITION                            0x1
#define _RXB0D1_RXB0D11_SIZE                                0x1
#define _RXB0D1_RXB0D11_LENGTH                              0x1
#define _RXB0D1_RXB0D11_MASK                                0x2
#define _RXB0D1_RXB0D12_POSN                                0x2
#define _RXB0D1_RXB0D12_POSITION                            0x2
#define _RXB0D1_RXB0D12_SIZE                                0x1
#define _RXB0D1_RXB0D12_LENGTH                              0x1
#define _RXB0D1_RXB0D12_MASK                                0x4
#define _RXB0D1_RXB0D13_POSN                                0x3
#define _RXB0D1_RXB0D13_POSITION                            0x3
#define _RXB0D1_RXB0D13_SIZE                                0x1
#define _RXB0D1_RXB0D13_LENGTH                              0x1
#define _RXB0D1_RXB0D13_MASK                                0x8
#define _RXB0D1_RXB0D14_POSN                                0x4
#define _RXB0D1_RXB0D14_POSITION                            0x4
#define _RXB0D1_RXB0D14_SIZE                                0x1
#define _RXB0D1_RXB0D14_LENGTH                              0x1
#define _RXB0D1_RXB0D14_MASK                                0x10
#define _RXB0D1_RXB0D15_POSN                                0x5
#define _RXB0D1_RXB0D15_POSITION                            0x5
#define _RXB0D1_RXB0D15_SIZE                                0x1
#define _RXB0D1_RXB0D15_LENGTH                              0x1
#define _RXB0D1_RXB0D15_MASK                                0x20
#define _RXB0D1_RXB0D16_POSN                                0x6
#define _RXB0D1_RXB0D16_POSITION                            0x6
#define _RXB0D1_RXB0D16_SIZE                                0x1
#define _RXB0D1_RXB0D16_LENGTH                              0x1
#define _RXB0D1_RXB0D16_MASK                                0x40
#define _RXB0D1_RXB0D17_POSN                                0x7
#define _RXB0D1_RXB0D17_POSITION                            0x7
#define _RXB0D1_RXB0D17_SIZE                                0x1
#define _RXB0D1_RXB0D17_LENGTH                              0x1
#define _RXB0D1_RXB0D17_MASK                                0x80

// Register: RXB0D2
#define RXB0D2 RXB0D2
extern volatile unsigned char           RXB0D2              __at(0xF68);
#ifndef _LIB_BUILD
asm("RXB0D2 equ 0F68h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D20                :1;
        unsigned RXB0D21                :1;
        unsigned RXB0D22                :1;
        unsigned RXB0D23                :1;
        unsigned RXB0D24                :1;
        unsigned RXB0D25                :1;
        unsigned RXB0D26                :1;
        unsigned RXB0D27                :1;
    };
} RXB0D2bits_t;
extern volatile RXB0D2bits_t RXB0D2bits __at(0xF68);
// bitfield macros
#define _RXB0D2_RXB0D20_POSN                                0x0
#define _RXB0D2_RXB0D20_POSITION                            0x0
#define _RXB0D2_RXB0D20_SIZE                                0x1
#define _RXB0D2_RXB0D20_LENGTH                              0x1
#define _RXB0D2_RXB0D20_MASK                                0x1
#define _RXB0D2_RXB0D21_POSN                                0x1
#define _RXB0D2_RXB0D21_POSITION                            0x1
#define _RXB0D2_RXB0D21_SIZE                                0x1
#define _RXB0D2_RXB0D21_LENGTH                              0x1
#define _RXB0D2_RXB0D21_MASK                                0x2
#define _RXB0D2_RXB0D22_POSN                                0x2
#define _RXB0D2_RXB0D22_POSITION                            0x2
#define _RXB0D2_RXB0D22_SIZE                                0x1
#define _RXB0D2_RXB0D22_LENGTH                              0x1
#define _RXB0D2_RXB0D22_MASK                                0x4
#define _RXB0D2_RXB0D23_POSN                                0x3
#define _RXB0D2_RXB0D23_POSITION                            0x3
#define _RXB0D2_RXB0D23_SIZE                                0x1
#define _RXB0D2_RXB0D23_LENGTH                              0x1
#define _RXB0D2_RXB0D23_MASK                                0x8
#define _RXB0D2_RXB0D24_POSN                                0x4
#define _RXB0D2_RXB0D24_POSITION                            0x4
#define _RXB0D2_RXB0D24_SIZE                                0x1
#define _RXB0D2_RXB0D24_LENGTH                              0x1
#define _RXB0D2_RXB0D24_MASK                                0x10
#define _RXB0D2_RXB0D25_POSN                                0x5
#define _RXB0D2_RXB0D25_POSITION                            0x5
#define _RXB0D2_RXB0D25_SIZE                                0x1
#define _RXB0D2_RXB0D25_LENGTH                              0x1
#define _RXB0D2_RXB0D25_MASK                                0x20
#define _RXB0D2_RXB0D26_POSN                                0x6
#define _RXB0D2_RXB0D26_POSITION                            0x6
#define _RXB0D2_RXB0D26_SIZE                                0x1
#define _RXB0D2_RXB0D26_LENGTH                              0x1
#define _RXB0D2_RXB0D26_MASK                                0x40
#define _RXB0D2_RXB0D27_POSN                                0x7
#define _RXB0D2_RXB0D27_POSITION                            0x7
#define _RXB0D2_RXB0D27_SIZE                                0x1
#define _RXB0D2_RXB0D27_LENGTH                              0x1
#define _RXB0D2_RXB0D27_MASK                                0x80

// Register: RXB0D3
#define RXB0D3 RXB0D3
extern volatile unsigned char           RXB0D3              __at(0xF69);
#ifndef _LIB_BUILD
asm("RXB0D3 equ 0F69h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D30                :1;
        unsigned RXB0D31                :1;
        unsigned RXB0D32                :1;
        unsigned RXB0D33                :1;
        unsigned RXB0D34                :1;
        unsigned RXB0D35                :1;
        unsigned RXB0D36                :1;
        unsigned RXB0D37                :1;
    };
} RXB0D3bits_t;
extern volatile RXB0D3bits_t RXB0D3bits __at(0xF69);
// bitfield macros
#define _RXB0D3_RXB0D30_POSN                                0x0
#define _RXB0D3_RXB0D30_POSITION                            0x0
#define _RXB0D3_RXB0D30_SIZE                                0x1
#define _RXB0D3_RXB0D30_LENGTH                              0x1
#define _RXB0D3_RXB0D30_MASK                                0x1
#define _RXB0D3_RXB0D31_POSN                                0x1
#define _RXB0D3_RXB0D31_POSITION                            0x1
#define _RXB0D3_RXB0D31_SIZE                                0x1
#define _RXB0D3_RXB0D31_LENGTH                              0x1
#define _RXB0D3_RXB0D31_MASK                                0x2
#define _RXB0D3_RXB0D32_POSN                                0x2
#define _RXB0D3_RXB0D32_POSITION                            0x2
#define _RXB0D3_RXB0D32_SIZE                                0x1
#define _RXB0D3_RXB0D32_LENGTH                              0x1
#define _RXB0D3_RXB0D32_MASK                                0x4
#define _RXB0D3_RXB0D33_POSN                                0x3
#define _RXB0D3_RXB0D33_POSITION                            0x3
#define _RXB0D3_RXB0D33_SIZE                                0x1
#define _RXB0D3_RXB0D33_LENGTH                              0x1
#define _RXB0D3_RXB0D33_MASK                                0x8
#define _RXB0D3_RXB0D34_POSN                                0x4
#define _RXB0D3_RXB0D34_POSITION                            0x4
#define _RXB0D3_RXB0D34_SIZE                                0x1
#define _RXB0D3_RXB0D34_LENGTH                              0x1
#define _RXB0D3_RXB0D34_MASK                                0x10
#define _RXB0D3_RXB0D35_POSN                                0x5
#define _RXB0D3_RXB0D35_POSITION                            0x5
#define _RXB0D3_RXB0D35_SIZE                                0x1
#define _RXB0D3_RXB0D35_LENGTH                              0x1
#define _RXB0D3_RXB0D35_MASK                                0x20
#define _RXB0D3_RXB0D36_POSN                                0x6
#define _RXB0D3_RXB0D36_POSITION                            0x6
#define _RXB0D3_RXB0D36_SIZE                                0x1
#define _RXB0D3_RXB0D36_LENGTH                              0x1
#define _RXB0D3_RXB0D36_MASK                                0x40
#define _RXB0D3_RXB0D37_POSN                                0x7
#define _RXB0D3_RXB0D37_POSITION                            0x7
#define _RXB0D3_RXB0D37_SIZE                                0x1
#define _RXB0D3_RXB0D37_LENGTH                              0x1
#define _RXB0D3_RXB0D37_MASK                                0x80

// Register: RXB0D4
#define RXB0D4 RXB0D4
extern volatile unsigned char           RXB0D4              __at(0xF6A);
#ifndef _LIB_BUILD
asm("RXB0D4 equ 0F6Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D40                :1;
        unsigned RXB0D41                :1;
        unsigned RXB0D42                :1;
        unsigned RXB0D43                :1;
        unsigned RXB0D44                :1;
        unsigned RXB0D45                :1;
        unsigned RXB0D46                :1;
        unsigned RXB0D47                :1;
    };
} RXB0D4bits_t;
extern volatile RXB0D4bits_t RXB0D4bits __at(0xF6A);
// bitfield macros
#define _RXB0D4_RXB0D40_POSN                                0x0
#define _RXB0D4_RXB0D40_POSITION                            0x0
#define _RXB0D4_RXB0D40_SIZE                                0x1
#define _RXB0D4_RXB0D40_LENGTH                              0x1
#define _RXB0D4_RXB0D40_MASK                                0x1
#define _RXB0D4_RXB0D41_POSN                                0x1
#define _RXB0D4_RXB0D41_POSITION                            0x1
#define _RXB0D4_RXB0D41_SIZE                                0x1
#define _RXB0D4_RXB0D41_LENGTH                              0x1
#define _RXB0D4_RXB0D41_MASK                                0x2
#define _RXB0D4_RXB0D42_POSN                                0x2
#define _RXB0D4_RXB0D42_POSITION                            0x2
#define _RXB0D4_RXB0D42_SIZE                                0x1
#define _RXB0D4_RXB0D42_LENGTH                              0x1
#define _RXB0D4_RXB0D42_MASK                                0x4
#define _RXB0D4_RXB0D43_POSN                                0x3
#define _RXB0D4_RXB0D43_POSITION                            0x3
#define _RXB0D4_RXB0D43_SIZE                                0x1
#define _RXB0D4_RXB0D43_LENGTH                              0x1
#define _RXB0D4_RXB0D43_MASK                                0x8
#define _RXB0D4_RXB0D44_POSN                                0x4
#define _RXB0D4_RXB0D44_POSITION                            0x4
#define _RXB0D4_RXB0D44_SIZE                                0x1
#define _RXB0D4_RXB0D44_LENGTH                              0x1
#define _RXB0D4_RXB0D44_MASK                                0x10
#define _RXB0D4_RXB0D45_POSN                                0x5
#define _RXB0D4_RXB0D45_POSITION                            0x5
#define _RXB0D4_RXB0D45_SIZE                                0x1
#define _RXB0D4_RXB0D45_LENGTH                              0x1
#define _RXB0D4_RXB0D45_MASK                                0x20
#define _RXB0D4_RXB0D46_POSN                                0x6
#define _RXB0D4_RXB0D46_POSITION                            0x6
#define _RXB0D4_RXB0D46_SIZE                                0x1
#define _RXB0D4_RXB0D46_LENGTH                              0x1
#define _RXB0D4_RXB0D46_MASK                                0x40
#define _RXB0D4_RXB0D47_POSN                                0x7
#define _RXB0D4_RXB0D47_POSITION                            0x7
#define _RXB0D4_RXB0D47_SIZE                                0x1
#define _RXB0D4_RXB0D47_LENGTH                              0x1
#define _RXB0D4_RXB0D47_MASK                                0x80

// Register: RXB0D5
#define RXB0D5 RXB0D5
extern volatile unsigned char           RXB0D5              __at(0xF6B);
#ifndef _LIB_BUILD
asm("RXB0D5 equ 0F6Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D50                :1;
        unsigned RXB0D51                :1;
        unsigned RXB0D52                :1;
        unsigned RXB0D53                :1;
        unsigned RXB0D54                :1;
        unsigned RXB0D55                :1;
        unsigned RXB0D56                :1;
        unsigned RXB0D57                :1;
    };
} RXB0D5bits_t;
extern volatile RXB0D5bits_t RXB0D5bits __at(0xF6B);
// bitfield macros
#define _RXB0D5_RXB0D50_POSN                                0x0
#define _RXB0D5_RXB0D50_POSITION                            0x0
#define _RXB0D5_RXB0D50_SIZE                                0x1
#define _RXB0D5_RXB0D50_LENGTH                              0x1
#define _RXB0D5_RXB0D50_MASK                                0x1
#define _RXB0D5_RXB0D51_POSN                                0x1
#define _RXB0D5_RXB0D51_POSITION                            0x1
#define _RXB0D5_RXB0D51_SIZE                                0x1
#define _RXB0D5_RXB0D51_LENGTH                              0x1
#define _RXB0D5_RXB0D51_MASK                                0x2
#define _RXB0D5_RXB0D52_POSN                                0x2
#define _RXB0D5_RXB0D52_POSITION                            0x2
#define _RXB0D5_RXB0D52_SIZE                                0x1
#define _RXB0D5_RXB0D52_LENGTH                              0x1
#define _RXB0D5_RXB0D52_MASK                                0x4
#define _RXB0D5_RXB0D53_POSN                                0x3
#define _RXB0D5_RXB0D53_POSITION                            0x3
#define _RXB0D5_RXB0D53_SIZE                                0x1
#define _RXB0D5_RXB0D53_LENGTH                              0x1
#define _RXB0D5_RXB0D53_MASK                                0x8
#define _RXB0D5_RXB0D54_POSN                                0x4
#define _RXB0D5_RXB0D54_POSITION                            0x4
#define _RXB0D5_RXB0D54_SIZE                                0x1
#define _RXB0D5_RXB0D54_LENGTH                              0x1
#define _RXB0D5_RXB0D54_MASK                                0x10
#define _RXB0D5_RXB0D55_POSN                                0x5
#define _RXB0D5_RXB0D55_POSITION                            0x5
#define _RXB0D5_RXB0D55_SIZE                                0x1
#define _RXB0D5_RXB0D55_LENGTH                              0x1
#define _RXB0D5_RXB0D55_MASK                                0x20
#define _RXB0D5_RXB0D56_POSN                                0x6
#define _RXB0D5_RXB0D56_POSITION                            0x6
#define _RXB0D5_RXB0D56_SIZE                                0x1
#define _RXB0D5_RXB0D56_LENGTH                              0x1
#define _RXB0D5_RXB0D56_MASK                                0x40
#define _RXB0D5_RXB0D57_POSN                                0x7
#define _RXB0D5_RXB0D57_POSITION                            0x7
#define _RXB0D5_RXB0D57_SIZE                                0x1
#define _RXB0D5_RXB0D57_LENGTH                              0x1
#define _RXB0D5_RXB0D57_MASK                                0x80

// Register: RXB0D6
#define RXB0D6 RXB0D6
extern volatile unsigned char           RXB0D6              __at(0xF6C);
#ifndef _LIB_BUILD
asm("RXB0D6 equ 0F6Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D60                :1;
        unsigned RXB0D61                :1;
        unsigned RXB0D62                :1;
        unsigned RXB0D63                :1;
        unsigned RXB0D64                :1;
        unsigned RXB0D65                :1;
        unsigned RXB0D66                :1;
        unsigned RXB0D67                :1;
    };
} RXB0D6bits_t;
extern volatile RXB0D6bits_t RXB0D6bits __at(0xF6C);
// bitfield macros
#define _RXB0D6_RXB0D60_POSN                                0x0
#define _RXB0D6_RXB0D60_POSITION                            0x0
#define _RXB0D6_RXB0D60_SIZE                                0x1
#define _RXB0D6_RXB0D60_LENGTH                              0x1
#define _RXB0D6_RXB0D60_MASK                                0x1
#define _RXB0D6_RXB0D61_POSN                                0x1
#define _RXB0D6_RXB0D61_POSITION                            0x1
#define _RXB0D6_RXB0D61_SIZE                                0x1
#define _RXB0D6_RXB0D61_LENGTH                              0x1
#define _RXB0D6_RXB0D61_MASK                                0x2
#define _RXB0D6_RXB0D62_POSN                                0x2
#define _RXB0D6_RXB0D62_POSITION                            0x2
#define _RXB0D6_RXB0D62_SIZE                                0x1
#define _RXB0D6_RXB0D62_LENGTH                              0x1
#define _RXB0D6_RXB0D62_MASK                                0x4
#define _RXB0D6_RXB0D63_POSN                                0x3
#define _RXB0D6_RXB0D63_POSITION                            0x3
#define _RXB0D6_RXB0D63_SIZE                                0x1
#define _RXB0D6_RXB0D63_LENGTH                              0x1
#define _RXB0D6_RXB0D63_MASK                                0x8
#define _RXB0D6_RXB0D64_POSN                                0x4
#define _RXB0D6_RXB0D64_POSITION                            0x4
#define _RXB0D6_RXB0D64_SIZE                                0x1
#define _RXB0D6_RXB0D64_LENGTH                              0x1
#define _RXB0D6_RXB0D64_MASK                                0x10
#define _RXB0D6_RXB0D65_POSN                                0x5
#define _RXB0D6_RXB0D65_POSITION                            0x5
#define _RXB0D6_RXB0D65_SIZE                                0x1
#define _RXB0D6_RXB0D65_LENGTH                              0x1
#define _RXB0D6_RXB0D65_MASK                                0x20
#define _RXB0D6_RXB0D66_POSN                                0x6
#define _RXB0D6_RXB0D66_POSITION                            0x6
#define _RXB0D6_RXB0D66_SIZE                                0x1
#define _RXB0D6_RXB0D66_LENGTH                              0x1
#define _RXB0D6_RXB0D66_MASK                                0x40
#define _RXB0D6_RXB0D67_POSN                                0x7
#define _RXB0D6_RXB0D67_POSITION                            0x7
#define _RXB0D6_RXB0D67_SIZE                                0x1
#define _RXB0D6_RXB0D67_LENGTH                              0x1
#define _RXB0D6_RXB0D67_MASK                                0x80

// Register: RXB0D7
#define RXB0D7 RXB0D7
extern volatile unsigned char           RXB0D7              __at(0xF6D);
#ifndef _LIB_BUILD
asm("RXB0D7 equ 0F6Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0D70                :1;
        unsigned RXB0D71                :1;
        unsigned RXB0D72                :1;
        unsigned RXB0D73                :1;
        unsigned RXB0D74                :1;
        unsigned RXB0D75                :1;
        unsigned RXB0D76                :1;
        unsigned RXB0D77                :1;
    };
} RXB0D7bits_t;
extern volatile RXB0D7bits_t RXB0D7bits __at(0xF6D);
// bitfield macros
#define _RXB0D7_RXB0D70_POSN                                0x0
#define _RXB0D7_RXB0D70_POSITION                            0x0
#define _RXB0D7_RXB0D70_SIZE                                0x1
#define _RXB0D7_RXB0D70_LENGTH                              0x1
#define _RXB0D7_RXB0D70_MASK                                0x1
#define _RXB0D7_RXB0D71_POSN                                0x1
#define _RXB0D7_RXB0D71_POSITION                            0x1
#define _RXB0D7_RXB0D71_SIZE                                0x1
#define _RXB0D7_RXB0D71_LENGTH                              0x1
#define _RXB0D7_RXB0D71_MASK                                0x2
#define _RXB0D7_RXB0D72_POSN                                0x2
#define _RXB0D7_RXB0D72_POSITION                            0x2
#define _RXB0D7_RXB0D72_SIZE                                0x1
#define _RXB0D7_RXB0D72_LENGTH                              0x1
#define _RXB0D7_RXB0D72_MASK                                0x4
#define _RXB0D7_RXB0D73_POSN                                0x3
#define _RXB0D7_RXB0D73_POSITION                            0x3
#define _RXB0D7_RXB0D73_SIZE                                0x1
#define _RXB0D7_RXB0D73_LENGTH                              0x1
#define _RXB0D7_RXB0D73_MASK                                0x8
#define _RXB0D7_RXB0D74_POSN                                0x4
#define _RXB0D7_RXB0D74_POSITION                            0x4
#define _RXB0D7_RXB0D74_SIZE                                0x1
#define _RXB0D7_RXB0D74_LENGTH                              0x1
#define _RXB0D7_RXB0D74_MASK                                0x10
#define _RXB0D7_RXB0D75_POSN                                0x5
#define _RXB0D7_RXB0D75_POSITION                            0x5
#define _RXB0D7_RXB0D75_SIZE                                0x1
#define _RXB0D7_RXB0D75_LENGTH                              0x1
#define _RXB0D7_RXB0D75_MASK                                0x20
#define _RXB0D7_RXB0D76_POSN                                0x6
#define _RXB0D7_RXB0D76_POSITION                            0x6
#define _RXB0D7_RXB0D76_SIZE                                0x1
#define _RXB0D7_RXB0D76_LENGTH                              0x1
#define _RXB0D7_RXB0D76_MASK                                0x40
#define _RXB0D7_RXB0D77_POSN                                0x7
#define _RXB0D7_RXB0D77_POSITION                            0x7
#define _RXB0D7_RXB0D77_SIZE                                0x1
#define _RXB0D7_RXB0D77_LENGTH                              0x1
#define _RXB0D7_RXB0D77_MASK                                0x80

// Register: CANSTAT
#define CANSTAT CANSTAT
extern volatile unsigned char           CANSTAT             __at(0xF6E);
#ifndef _LIB_BUILD
asm("CANSTAT equ 0F6Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EICODE0                :1;
        unsigned EICODE1_ICODE0         :1;
        unsigned EICODE2_ICODE1         :1;
        unsigned EICODE3_ICODE2         :1;
        unsigned EICODE4                :1;
        unsigned OPMODE0                :1;
        unsigned OPMODE1                :1;
        unsigned OPMODE2                :1;
    };
    struct {
        unsigned                        :1;
        unsigned ICODE0                 :1;
        unsigned ICODE1                 :1;
        unsigned ICODE2                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned EICODE1                :1;
        unsigned EICODE2                :1;
        unsigned EICODE3                :1;
    };
} CANSTATbits_t;
extern volatile CANSTATbits_t CANSTATbits __at(0xF6E);
// bitfield macros
#define _CANSTAT_EICODE0_POSN                               0x0
#define _CANSTAT_EICODE0_POSITION                           0x0
#define _CANSTAT_EICODE0_SIZE                               0x1
#define _CANSTAT_EICODE0_LENGTH                             0x1
#define _CANSTAT_EICODE0_MASK                               0x1
#define _CANSTAT_EICODE1_ICODE0_POSN                        0x1
#define _CANSTAT_EICODE1_ICODE0_POSITION                    0x1
#define _CANSTAT_EICODE1_ICODE0_SIZE                        0x1
#define _CANSTAT_EICODE1_ICODE0_LENGTH                      0x1
#define _CANSTAT_EICODE1_ICODE0_MASK                        0x2
#define _CANSTAT_EICODE2_ICODE1_POSN                        0x2
#define _CANSTAT_EICODE2_ICODE1_POSITION                    0x2
#define _CANSTAT_EICODE2_ICODE1_SIZE                        0x1
#define _CANSTAT_EICODE2_ICODE1_LENGTH                      0x1
#define _CANSTAT_EICODE2_ICODE1_MASK                        0x4
#define _CANSTAT_EICODE3_ICODE2_POSN                        0x3
#define _CANSTAT_EICODE3_ICODE2_POSITION                    0x3
#define _CANSTAT_EICODE3_ICODE2_SIZE                        0x1
#define _CANSTAT_EICODE3_ICODE2_LENGTH                      0x1
#define _CANSTAT_EICODE3_ICODE2_MASK                        0x8
#define _CANSTAT_EICODE4_POSN                               0x4
#define _CANSTAT_EICODE4_POSITION                           0x4
#define _CANSTAT_EICODE4_SIZE                               0x1
#define _CANSTAT_EICODE4_LENGTH                             0x1
#define _CANSTAT_EICODE4_MASK                               0x10
#define _CANSTAT_OPMODE0_POSN                               0x5
#define _CANSTAT_OPMODE0_POSITION                           0x5
#define _CANSTAT_OPMODE0_SIZE                               0x1
#define _CANSTAT_OPMODE0_LENGTH                             0x1
#define _CANSTAT_OPMODE0_MASK                               0x20
#define _CANSTAT_OPMODE1_POSN                               0x6
#define _CANSTAT_OPMODE1_POSITION                           0x6
#define _CANSTAT_OPMODE1_SIZE                               0x1
#define _CANSTAT_OPMODE1_LENGTH                             0x1
#define _CANSTAT_OPMODE1_MASK                               0x40
#define _CANSTAT_OPMODE2_POSN                               0x7
#define _CANSTAT_OPMODE2_POSITION                           0x7
#define _CANSTAT_OPMODE2_SIZE                               0x1
#define _CANSTAT_OPMODE2_LENGTH                             0x1
#define _CANSTAT_OPMODE2_MASK                               0x80
#define _CANSTAT_ICODE0_POSN                                0x1
#define _CANSTAT_ICODE0_POSITION                            0x1
#define _CANSTAT_ICODE0_SIZE                                0x1
#define _CANSTAT_ICODE0_LENGTH                              0x1
#define _CANSTAT_ICODE0_MASK                                0x2
#define _CANSTAT_ICODE1_POSN                                0x2
#define _CANSTAT_ICODE1_POSITION                            0x2
#define _CANSTAT_ICODE1_SIZE                                0x1
#define _CANSTAT_ICODE1_LENGTH                              0x1
#define _CANSTAT_ICODE1_MASK                                0x4
#define _CANSTAT_ICODE2_POSN                                0x3
#define _CANSTAT_ICODE2_POSITION                            0x3
#define _CANSTAT_ICODE2_SIZE                                0x1
#define _CANSTAT_ICODE2_LENGTH                              0x1
#define _CANSTAT_ICODE2_MASK                                0x8
#define _CANSTAT_EICODE1_POSN                               0x1
#define _CANSTAT_EICODE1_POSITION                           0x1
#define _CANSTAT_EICODE1_SIZE                               0x1
#define _CANSTAT_EICODE1_LENGTH                             0x1
#define _CANSTAT_EICODE1_MASK                               0x2
#define _CANSTAT_EICODE2_POSN                               0x2
#define _CANSTAT_EICODE2_POSITION                           0x2
#define _CANSTAT_EICODE2_SIZE                               0x1
#define _CANSTAT_EICODE2_LENGTH                             0x1
#define _CANSTAT_EICODE2_MASK                               0x4
#define _CANSTAT_EICODE3_POSN                               0x3
#define _CANSTAT_EICODE3_POSITION                           0x3
#define _CANSTAT_EICODE3_SIZE                               0x1
#define _CANSTAT_EICODE3_LENGTH                             0x1
#define _CANSTAT_EICODE3_MASK                               0x8

// Register: CANCON
#define CANCON CANCON
extern volatile unsigned char           CANCON              __at(0xF6F);
#ifndef _LIB_BUILD
asm("CANCON equ 0F6Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FP0                    :1;
        unsigned WIN0_FP1               :1;
        unsigned WIN1_FP2               :1;
        unsigned WIN2_FP3               :1;
        unsigned ABAT                   :1;
        unsigned REQOP0                 :1;
        unsigned REQOP1                 :1;
        unsigned REQOP2                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned WIN0                   :1;
        unsigned WIN1                   :1;
        unsigned WIN2                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned FP1                    :1;
        unsigned FP2                    :1;
        unsigned FP3                    :1;
    };
} CANCONbits_t;
extern volatile CANCONbits_t CANCONbits __at(0xF6F);
// bitfield macros
#define _CANCON_FP0_POSN                                    0x0
#define _CANCON_FP0_POSITION                                0x0
#define _CANCON_FP0_SIZE                                    0x1
#define _CANCON_FP0_LENGTH                                  0x1
#define _CANCON_FP0_MASK                                    0x1
#define _CANCON_WIN0_FP1_POSN                               0x1
#define _CANCON_WIN0_FP1_POSITION                           0x1
#define _CANCON_WIN0_FP1_SIZE                               0x1
#define _CANCON_WIN0_FP1_LENGTH                             0x1
#define _CANCON_WIN0_FP1_MASK                               0x2
#define _CANCON_WIN1_FP2_POSN                               0x2
#define _CANCON_WIN1_FP2_POSITION                           0x2
#define _CANCON_WIN1_FP2_SIZE                               0x1
#define _CANCON_WIN1_FP2_LENGTH                             0x1
#define _CANCON_WIN1_FP2_MASK                               0x4
#define _CANCON_WIN2_FP3_POSN                               0x3
#define _CANCON_WIN2_FP3_POSITION                           0x3
#define _CANCON_WIN2_FP3_SIZE                               0x1
#define _CANCON_WIN2_FP3_LENGTH                             0x1
#define _CANCON_WIN2_FP3_MASK                               0x8
#define _CANCON_ABAT_POSN                                   0x4
#define _CANCON_ABAT_POSITION                               0x4
#define _CANCON_ABAT_SIZE                                   0x1
#define _CANCON_ABAT_LENGTH                                 0x1
#define _CANCON_ABAT_MASK                                   0x10
#define _CANCON_REQOP0_POSN                                 0x5
#define _CANCON_REQOP0_POSITION                             0x5
#define _CANCON_REQOP0_SIZE                                 0x1
#define _CANCON_REQOP0_LENGTH                               0x1
#define _CANCON_REQOP0_MASK                                 0x20
#define _CANCON_REQOP1_POSN                                 0x6
#define _CANCON_REQOP1_POSITION                             0x6
#define _CANCON_REQOP1_SIZE                                 0x1
#define _CANCON_REQOP1_LENGTH                               0x1
#define _CANCON_REQOP1_MASK                                 0x40
#define _CANCON_REQOP2_POSN                                 0x7
#define _CANCON_REQOP2_POSITION                             0x7
#define _CANCON_REQOP2_SIZE                                 0x1
#define _CANCON_REQOP2_LENGTH                               0x1
#define _CANCON_REQOP2_MASK                                 0x80
#define _CANCON_WIN0_POSN                                   0x1
#define _CANCON_WIN0_POSITION                               0x1
#define _CANCON_WIN0_SIZE                                   0x1
#define _CANCON_WIN0_LENGTH                                 0x1
#define _CANCON_WIN0_MASK                                   0x2
#define _CANCON_WIN1_POSN                                   0x2
#define _CANCON_WIN1_POSITION                               0x2
#define _CANCON_WIN1_SIZE                                   0x1
#define _CANCON_WIN1_LENGTH                                 0x1
#define _CANCON_WIN1_MASK                                   0x4
#define _CANCON_WIN2_POSN                                   0x3
#define _CANCON_WIN2_POSITION                               0x3
#define _CANCON_WIN2_SIZE                                   0x1
#define _CANCON_WIN2_LENGTH                                 0x1
#define _CANCON_WIN2_MASK                                   0x8
#define _CANCON_FP1_POSN                                    0x1
#define _CANCON_FP1_POSITION                                0x1
#define _CANCON_FP1_SIZE                                    0x1
#define _CANCON_FP1_LENGTH                                  0x1
#define _CANCON_FP1_MASK                                    0x2
#define _CANCON_FP2_POSN                                    0x2
#define _CANCON_FP2_POSITION                                0x2
#define _CANCON_FP2_SIZE                                    0x1
#define _CANCON_FP2_LENGTH                                  0x1
#define _CANCON_FP2_MASK                                    0x4
#define _CANCON_FP3_POSN                                    0x3
#define _CANCON_FP3_POSITION                                0x3
#define _CANCON_FP3_SIZE                                    0x1
#define _CANCON_FP3_LENGTH                                  0x1
#define _CANCON_FP3_MASK                                    0x8

// Register: BRGCON1
#define BRGCON1 BRGCON1
extern volatile unsigned char           BRGCON1             __at(0xF70);
#ifndef _LIB_BUILD
asm("BRGCON1 equ 0F70h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BRP0                   :1;
        unsigned BRP1                   :1;
        unsigned BRP2                   :1;
        unsigned BRP3                   :1;
        unsigned BRP4                   :1;
        unsigned BRP5                   :1;
        unsigned SJW0                   :1;
        unsigned SJW1                   :1;
    };
} BRGCON1bits_t;
extern volatile BRGCON1bits_t BRGCON1bits __at(0xF70);
// bitfield macros
#define _BRGCON1_BRP0_POSN                                  0x0
#define _BRGCON1_BRP0_POSITION                              0x0
#define _BRGCON1_BRP0_SIZE                                  0x1
#define _BRGCON1_BRP0_LENGTH                                0x1
#define _BRGCON1_BRP0_MASK                                  0x1
#define _BRGCON1_BRP1_POSN                                  0x1
#define _BRGCON1_BRP1_POSITION                              0x1
#define _BRGCON1_BRP1_SIZE                                  0x1
#define _BRGCON1_BRP1_LENGTH                                0x1
#define _BRGCON1_BRP1_MASK                                  0x2
#define _BRGCON1_BRP2_POSN                                  0x2
#define _BRGCON1_BRP2_POSITION                              0x2
#define _BRGCON1_BRP2_SIZE                                  0x1
#define _BRGCON1_BRP2_LENGTH                                0x1
#define _BRGCON1_BRP2_MASK                                  0x4
#define _BRGCON1_BRP3_POSN                                  0x3
#define _BRGCON1_BRP3_POSITION                              0x3
#define _BRGCON1_BRP3_SIZE                                  0x1
#define _BRGCON1_BRP3_LENGTH                                0x1
#define _BRGCON1_BRP3_MASK                                  0x8
#define _BRGCON1_BRP4_POSN                                  0x4
#define _BRGCON1_BRP4_POSITION                              0x4
#define _BRGCON1_BRP4_SIZE                                  0x1
#define _BRGCON1_BRP4_LENGTH                                0x1
#define _BRGCON1_BRP4_MASK                                  0x10
#define _BRGCON1_BRP5_POSN                                  0x5
#define _BRGCON1_BRP5_POSITION                              0x5
#define _BRGCON1_BRP5_SIZE                                  0x1
#define _BRGCON1_BRP5_LENGTH                                0x1
#define _BRGCON1_BRP5_MASK                                  0x20
#define _BRGCON1_SJW0_POSN                                  0x6
#define _BRGCON1_SJW0_POSITION                              0x6
#define _BRGCON1_SJW0_SIZE                                  0x1
#define _BRGCON1_SJW0_LENGTH                                0x1
#define _BRGCON1_SJW0_MASK                                  0x40
#define _BRGCON1_SJW1_POSN                                  0x7
#define _BRGCON1_SJW1_POSITION                              0x7
#define _BRGCON1_SJW1_SIZE                                  0x1
#define _BRGCON1_SJW1_LENGTH                                0x1
#define _BRGCON1_SJW1_MASK                                  0x80

// Register: BRGCON2
#define BRGCON2 BRGCON2
extern volatile unsigned char           BRGCON2             __at(0xF71);
#ifndef _LIB_BUILD
asm("BRGCON2 equ 0F71h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRSEG0                 :1;
        unsigned PRSEG1                 :1;
        unsigned PRSEG2                 :1;
        unsigned SEG1PH0                :1;
        unsigned SEG1PH1                :1;
        unsigned SEG1PH2                :1;
        unsigned SAM                    :1;
        unsigned SEG2PHT                :1;
    };
    struct {
        unsigned                        :7;
        unsigned SEG2PHTS               :1;
    };
} BRGCON2bits_t;
extern volatile BRGCON2bits_t BRGCON2bits __at(0xF71);
// bitfield macros
#define _BRGCON2_PRSEG0_POSN                                0x0
#define _BRGCON2_PRSEG0_POSITION                            0x0
#define _BRGCON2_PRSEG0_SIZE                                0x1
#define _BRGCON2_PRSEG0_LENGTH                              0x1
#define _BRGCON2_PRSEG0_MASK                                0x1
#define _BRGCON2_PRSEG1_POSN                                0x1
#define _BRGCON2_PRSEG1_POSITION                            0x1
#define _BRGCON2_PRSEG1_SIZE                                0x1
#define _BRGCON2_PRSEG1_LENGTH                              0x1
#define _BRGCON2_PRSEG1_MASK                                0x2
#define _BRGCON2_PRSEG2_POSN                                0x2
#define _BRGCON2_PRSEG2_POSITION                            0x2
#define _BRGCON2_PRSEG2_SIZE                                0x1
#define _BRGCON2_PRSEG2_LENGTH                              0x1
#define _BRGCON2_PRSEG2_MASK                                0x4
#define _BRGCON2_SEG1PH0_POSN                               0x3
#define _BRGCON2_SEG1PH0_POSITION                           0x3
#define _BRGCON2_SEG1PH0_SIZE                               0x1
#define _BRGCON2_SEG1PH0_LENGTH                             0x1
#define _BRGCON2_SEG1PH0_MASK                               0x8
#define _BRGCON2_SEG1PH1_POSN                               0x4
#define _BRGCON2_SEG1PH1_POSITION                           0x4
#define _BRGCON2_SEG1PH1_SIZE                               0x1
#define _BRGCON2_SEG1PH1_LENGTH                             0x1
#define _BRGCON2_SEG1PH1_MASK                               0x10
#define _BRGCON2_SEG1PH2_POSN                               0x5
#define _BRGCON2_SEG1PH2_POSITION                           0x5
#define _BRGCON2_SEG1PH2_SIZE                               0x1
#define _BRGCON2_SEG1PH2_LENGTH                             0x1
#define _BRGCON2_SEG1PH2_MASK                               0x20
#define _BRGCON2_SAM_POSN                                   0x6
#define _BRGCON2_SAM_POSITION                               0x6
#define _BRGCON2_SAM_SIZE                                   0x1
#define _BRGCON2_SAM_LENGTH                                 0x1
#define _BRGCON2_SAM_MASK                                   0x40
#define _BRGCON2_SEG2PHT_POSN                               0x7
#define _BRGCON2_SEG2PHT_POSITION                           0x7
#define _BRGCON2_SEG2PHT_SIZE                               0x1
#define _BRGCON2_SEG2PHT_LENGTH                             0x1
#define _BRGCON2_SEG2PHT_MASK                               0x80
#define _BRGCON2_SEG2PHTS_POSN                              0x7
#define _BRGCON2_SEG2PHTS_POSITION                          0x7
#define _BRGCON2_SEG2PHTS_SIZE                              0x1
#define _BRGCON2_SEG2PHTS_LENGTH                            0x1
#define _BRGCON2_SEG2PHTS_MASK                              0x80

// Register: BRGCON3
#define BRGCON3 BRGCON3
extern volatile unsigned char           BRGCON3             __at(0xF72);
#ifndef _LIB_BUILD
asm("BRGCON3 equ 0F72h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SEG2PH0                :1;
        unsigned SEG2PH1                :1;
        unsigned SEG2PH2                :1;
        unsigned                        :3;
        unsigned WAKFIL                 :1;
        unsigned WAKDIS                 :1;
    };
} BRGCON3bits_t;
extern volatile BRGCON3bits_t BRGCON3bits __at(0xF72);
// bitfield macros
#define _BRGCON3_SEG2PH0_POSN                               0x0
#define _BRGCON3_SEG2PH0_POSITION                           0x0
#define _BRGCON3_SEG2PH0_SIZE                               0x1
#define _BRGCON3_SEG2PH0_LENGTH                             0x1
#define _BRGCON3_SEG2PH0_MASK                               0x1
#define _BRGCON3_SEG2PH1_POSN                               0x1
#define _BRGCON3_SEG2PH1_POSITION                           0x1
#define _BRGCON3_SEG2PH1_SIZE                               0x1
#define _BRGCON3_SEG2PH1_LENGTH                             0x1
#define _BRGCON3_SEG2PH1_MASK                               0x2
#define _BRGCON3_SEG2PH2_POSN                               0x2
#define _BRGCON3_SEG2PH2_POSITION                           0x2
#define _BRGCON3_SEG2PH2_SIZE                               0x1
#define _BRGCON3_SEG2PH2_LENGTH                             0x1
#define _BRGCON3_SEG2PH2_MASK                               0x4
#define _BRGCON3_WAKFIL_POSN                                0x6
#define _BRGCON3_WAKFIL_POSITION                            0x6
#define _BRGCON3_WAKFIL_SIZE                                0x1
#define _BRGCON3_WAKFIL_LENGTH                              0x1
#define _BRGCON3_WAKFIL_MASK                                0x40
#define _BRGCON3_WAKDIS_POSN                                0x7
#define _BRGCON3_WAKDIS_POSITION                            0x7
#define _BRGCON3_WAKDIS_SIZE                                0x1
#define _BRGCON3_WAKDIS_LENGTH                              0x1
#define _BRGCON3_WAKDIS_MASK                                0x80

// Register: CIOCON
#define CIOCON CIOCON
extern volatile unsigned char           CIOCON              __at(0xF73);
#ifndef _LIB_BUILD
asm("CIOCON equ 0F73h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :4;
        unsigned CANCAP                 :1;
        unsigned ENDRHI                 :1;
        unsigned TX2EN                  :1;
        unsigned TX2SRC                 :1;
    };
} CIOCONbits_t;
extern volatile CIOCONbits_t CIOCONbits __at(0xF73);
// bitfield macros
#define _CIOCON_CANCAP_POSN                                 0x4
#define _CIOCON_CANCAP_POSITION                             0x4
#define _CIOCON_CANCAP_SIZE                                 0x1
#define _CIOCON_CANCAP_LENGTH                               0x1
#define _CIOCON_CANCAP_MASK                                 0x10
#define _CIOCON_ENDRHI_POSN                                 0x5
#define _CIOCON_ENDRHI_POSITION                             0x5
#define _CIOCON_ENDRHI_SIZE                                 0x1
#define _CIOCON_ENDRHI_LENGTH                               0x1
#define _CIOCON_ENDRHI_MASK                                 0x20
#define _CIOCON_TX2EN_POSN                                  0x6
#define _CIOCON_TX2EN_POSITION                              0x6
#define _CIOCON_TX2EN_SIZE                                  0x1
#define _CIOCON_TX2EN_LENGTH                                0x1
#define _CIOCON_TX2EN_MASK                                  0x40
#define _CIOCON_TX2SRC_POSN                                 0x7
#define _CIOCON_TX2SRC_POSITION                             0x7
#define _CIOCON_TX2SRC_SIZE                                 0x1
#define _CIOCON_TX2SRC_LENGTH                               0x1
#define _CIOCON_TX2SRC_MASK                                 0x80

// Register: COMSTAT
#define COMSTAT COMSTAT
extern volatile unsigned char           COMSTAT             __at(0xF74);
#ifndef _LIB_BUILD
asm("COMSTAT equ 0F74h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :7;
        unsigned RXB0OVFL_NOT_FIFOEMPTY :1;
    };
    struct {
        unsigned EWARN                  :1;
        unsigned RXWARN                 :1;
        unsigned TXWARN                 :1;
        unsigned RXBP                   :1;
        unsigned TXBP                   :1;
        unsigned TXBO                   :1;
        unsigned RXBnOVFL               :1;
        unsigned RXB0OVFL_nFIFOEMPTY    :1;
    };
    struct {
        unsigned                        :6;
        unsigned RXB1OVFL               :1;
        unsigned RXB0OVFL               :1;
    };
    struct {
        unsigned                        :7;
        unsigned FIFOEMPTY              :1;
    };
    struct {
        unsigned                        :7;
        unsigned NOT_FIFOEMPTY          :1;
    };
    struct {
        unsigned                        :7;
        unsigned nFIFOEMPTY             :1;
    };
    struct {
        unsigned                        :6;
        unsigned RXBNOVFL               :1;
    };
} COMSTATbits_t;
extern volatile COMSTATbits_t COMSTATbits __at(0xF74);
// bitfield macros
#define _COMSTAT_RXB0OVFL_NOT_FIFOEMPTY_POSN                0x7
#define _COMSTAT_RXB0OVFL_NOT_FIFOEMPTY_POSITION            0x7
#define _COMSTAT_RXB0OVFL_NOT_FIFOEMPTY_SIZE                0x1
#define _COMSTAT_RXB0OVFL_NOT_FIFOEMPTY_LENGTH              0x1
#define _COMSTAT_RXB0OVFL_NOT_FIFOEMPTY_MASK                0x80
#define _COMSTAT_EWARN_POSN                                 0x0
#define _COMSTAT_EWARN_POSITION                             0x0
#define _COMSTAT_EWARN_SIZE                                 0x1
#define _COMSTAT_EWARN_LENGTH                               0x1
#define _COMSTAT_EWARN_MASK                                 0x1
#define _COMSTAT_RXWARN_POSN                                0x1
#define _COMSTAT_RXWARN_POSITION                            0x1
#define _COMSTAT_RXWARN_SIZE                                0x1
#define _COMSTAT_RXWARN_LENGTH                              0x1
#define _COMSTAT_RXWARN_MASK                                0x2
#define _COMSTAT_TXWARN_POSN                                0x2
#define _COMSTAT_TXWARN_POSITION                            0x2
#define _COMSTAT_TXWARN_SIZE                                0x1
#define _COMSTAT_TXWARN_LENGTH                              0x1
#define _COMSTAT_TXWARN_MASK                                0x4
#define _COMSTAT_RXBP_POSN                                  0x3
#define _COMSTAT_RXBP_POSITION                              0x3
#define _COMSTAT_RXBP_SIZE                                  0x1
#define _COMSTAT_RXBP_LENGTH                                0x1
#define _COMSTAT_RXBP_MASK                                  0x8
#define _COMSTAT_TXBP_POSN                                  0x4
#define _COMSTAT_TXBP_POSITION                              0x4
#define _COMSTAT_TXBP_SIZE                                  0x1
#define _COMSTAT_TXBP_LENGTH                                0x1
#define _COMSTAT_TXBP_MASK                                  0x10
#define _COMSTAT_TXBO_POSN                                  0x5
#define _COMSTAT_TXBO_POSITION                              0x5
#define _COMSTAT_TXBO_SIZE                                  0x1
#define _COMSTAT_TXBO_LENGTH                                0x1
#define _COMSTAT_TXBO_MASK                                  0x20
#define _COMSTAT_RXBnOVFL_POSN                              0x6
#define _COMSTAT_RXBnOVFL_POSITION                          0x6
#define _COMSTAT_RXBnOVFL_SIZE                              0x1
#define _COMSTAT_RXBnOVFL_LENGTH                            0x1
#define _COMSTAT_RXBnOVFL_MASK                              0x40
#define _COMSTAT_RXB0OVFL_nFIFOEMPTY_POSN                   0x7
#define _COMSTAT_RXB0OVFL_nFIFOEMPTY_POSITION               0x7
#define _COMSTAT_RXB0OVFL_nFIFOEMPTY_SIZE                   0x1
#define _COMSTAT_RXB0OVFL_nFIFOEMPTY_LENGTH                 0x1
#define _COMSTAT_RXB0OVFL_nFIFOEMPTY_MASK                   0x80
#define _COMSTAT_RXB1OVFL_POSN                              0x6
#define _COMSTAT_RXB1OVFL_POSITION                          0x6
#define _COMSTAT_RXB1OVFL_SIZE                              0x1
#define _COMSTAT_RXB1OVFL_LENGTH                            0x1
#define _COMSTAT_RXB1OVFL_MASK                              0x40
#define _COMSTAT_RXB0OVFL_POSN                              0x7
#define _COMSTAT_RXB0OVFL_POSITION                          0x7
#define _COMSTAT_RXB0OVFL_SIZE                              0x1
#define _COMSTAT_RXB0OVFL_LENGTH                            0x1
#define _COMSTAT_RXB0OVFL_MASK                              0x80
#define _COMSTAT_FIFOEMPTY_POSN                             0x7
#define _COMSTAT_FIFOEMPTY_POSITION                         0x7
#define _COMSTAT_FIFOEMPTY_SIZE                             0x1
#define _COMSTAT_FIFOEMPTY_LENGTH                           0x1
#define _COMSTAT_FIFOEMPTY_MASK                             0x80
#define _COMSTAT_NOT_FIFOEMPTY_POSN                         0x7
#define _COMSTAT_NOT_FIFOEMPTY_POSITION                     0x7
#define _COMSTAT_NOT_FIFOEMPTY_SIZE                         0x1
#define _COMSTAT_NOT_FIFOEMPTY_LENGTH                       0x1
#define _COMSTAT_NOT_FIFOEMPTY_MASK                         0x80
#define _COMSTAT_nFIFOEMPTY_POSN                            0x7
#define _COMSTAT_nFIFOEMPTY_POSITION                        0x7
#define _COMSTAT_nFIFOEMPTY_SIZE                            0x1
#define _COMSTAT_nFIFOEMPTY_LENGTH                          0x1
#define _COMSTAT_nFIFOEMPTY_MASK                            0x80
#define _COMSTAT_RXBNOVFL_POSN                              0x6
#define _COMSTAT_RXBNOVFL_POSITION                          0x6
#define _COMSTAT_RXBNOVFL_SIZE                              0x1
#define _COMSTAT_RXBNOVFL_LENGTH                            0x1
#define _COMSTAT_RXBNOVFL_MASK                              0x40

// Register: RXERRCNT
#define RXERRCNT RXERRCNT
extern volatile unsigned char           RXERRCNT            __at(0xF75);
#ifndef _LIB_BUILD
asm("RXERRCNT equ 0F75h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned REC0                   :1;
        unsigned REC1                   :1;
        unsigned REC2                   :1;
        unsigned REC3                   :1;
        unsigned REC4                   :1;
        unsigned REC5                   :1;
        unsigned REC6                   :1;
        unsigned REC7                   :1;
    };
} RXERRCNTbits_t;
extern volatile RXERRCNTbits_t RXERRCNTbits __at(0xF75);
// bitfield macros
#define _RXERRCNT_REC0_POSN                                 0x0
#define _RXERRCNT_REC0_POSITION                             0x0
#define _RXERRCNT_REC0_SIZE                                 0x1
#define _RXERRCNT_REC0_LENGTH                               0x1
#define _RXERRCNT_REC0_MASK                                 0x1
#define _RXERRCNT_REC1_POSN                                 0x1
#define _RXERRCNT_REC1_POSITION                             0x1
#define _RXERRCNT_REC1_SIZE                                 0x1
#define _RXERRCNT_REC1_LENGTH                               0x1
#define _RXERRCNT_REC1_MASK                                 0x2
#define _RXERRCNT_REC2_POSN                                 0x2
#define _RXERRCNT_REC2_POSITION                             0x2
#define _RXERRCNT_REC2_SIZE                                 0x1
#define _RXERRCNT_REC2_LENGTH                               0x1
#define _RXERRCNT_REC2_MASK                                 0x4
#define _RXERRCNT_REC3_POSN                                 0x3
#define _RXERRCNT_REC3_POSITION                             0x3
#define _RXERRCNT_REC3_SIZE                                 0x1
#define _RXERRCNT_REC3_LENGTH                               0x1
#define _RXERRCNT_REC3_MASK                                 0x8
#define _RXERRCNT_REC4_POSN                                 0x4
#define _RXERRCNT_REC4_POSITION                             0x4
#define _RXERRCNT_REC4_SIZE                                 0x1
#define _RXERRCNT_REC4_LENGTH                               0x1
#define _RXERRCNT_REC4_MASK                                 0x10
#define _RXERRCNT_REC5_POSN                                 0x5
#define _RXERRCNT_REC5_POSITION                             0x5
#define _RXERRCNT_REC5_SIZE                                 0x1
#define _RXERRCNT_REC5_LENGTH                               0x1
#define _RXERRCNT_REC5_MASK                                 0x20
#define _RXERRCNT_REC6_POSN                                 0x6
#define _RXERRCNT_REC6_POSITION                             0x6
#define _RXERRCNT_REC6_SIZE                                 0x1
#define _RXERRCNT_REC6_LENGTH                               0x1
#define _RXERRCNT_REC6_MASK                                 0x40
#define _RXERRCNT_REC7_POSN                                 0x7
#define _RXERRCNT_REC7_POSITION                             0x7
#define _RXERRCNT_REC7_SIZE                                 0x1
#define _RXERRCNT_REC7_LENGTH                               0x1
#define _RXERRCNT_REC7_MASK                                 0x80

// Register: TXERRCNT
#define TXERRCNT TXERRCNT
extern volatile unsigned char           TXERRCNT            __at(0xF76);
#ifndef _LIB_BUILD
asm("TXERRCNT equ 0F76h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TEC0                   :1;
        unsigned TEC1                   :1;
        unsigned TEC2                   :1;
        unsigned TEC3                   :1;
        unsigned TEC4                   :1;
        unsigned TEC5                   :1;
        unsigned TEC6                   :1;
        unsigned TEC7                   :1;
    };
} TXERRCNTbits_t;
extern volatile TXERRCNTbits_t TXERRCNTbits __at(0xF76);
// bitfield macros
#define _TXERRCNT_TEC0_POSN                                 0x0
#define _TXERRCNT_TEC0_POSITION                             0x0
#define _TXERRCNT_TEC0_SIZE                                 0x1
#define _TXERRCNT_TEC0_LENGTH                               0x1
#define _TXERRCNT_TEC0_MASK                                 0x1
#define _TXERRCNT_TEC1_POSN                                 0x1
#define _TXERRCNT_TEC1_POSITION                             0x1
#define _TXERRCNT_TEC1_SIZE                                 0x1
#define _TXERRCNT_TEC1_LENGTH                               0x1
#define _TXERRCNT_TEC1_MASK                                 0x2
#define _TXERRCNT_TEC2_POSN                                 0x2
#define _TXERRCNT_TEC2_POSITION                             0x2
#define _TXERRCNT_TEC2_SIZE                                 0x1
#define _TXERRCNT_TEC2_LENGTH                               0x1
#define _TXERRCNT_TEC2_MASK                                 0x4
#define _TXERRCNT_TEC3_POSN                                 0x3
#define _TXERRCNT_TEC3_POSITION                             0x3
#define _TXERRCNT_TEC3_SIZE                                 0x1
#define _TXERRCNT_TEC3_LENGTH                               0x1
#define _TXERRCNT_TEC3_MASK                                 0x8
#define _TXERRCNT_TEC4_POSN                                 0x4
#define _TXERRCNT_TEC4_POSITION                             0x4
#define _TXERRCNT_TEC4_SIZE                                 0x1
#define _TXERRCNT_TEC4_LENGTH                               0x1
#define _TXERRCNT_TEC4_MASK                                 0x10
#define _TXERRCNT_TEC5_POSN                                 0x5
#define _TXERRCNT_TEC5_POSITION                             0x5
#define _TXERRCNT_TEC5_SIZE                                 0x1
#define _TXERRCNT_TEC5_LENGTH                               0x1
#define _TXERRCNT_TEC5_MASK                                 0x20
#define _TXERRCNT_TEC6_POSN                                 0x6
#define _TXERRCNT_TEC6_POSITION                             0x6
#define _TXERRCNT_TEC6_SIZE                                 0x1
#define _TXERRCNT_TEC6_LENGTH                               0x1
#define _TXERRCNT_TEC6_MASK                                 0x40
#define _TXERRCNT_TEC7_POSN                                 0x7
#define _TXERRCNT_TEC7_POSITION                             0x7
#define _TXERRCNT_TEC7_SIZE                                 0x1
#define _TXERRCNT_TEC7_LENGTH                               0x1
#define _TXERRCNT_TEC7_MASK                                 0x80

// Register: ECANCON
#define ECANCON ECANCON
extern volatile unsigned char           ECANCON             __at(0xF77);
#ifndef _LIB_BUILD
asm("ECANCON equ 0F77h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EWIN0                  :1;
        unsigned EWIN1                  :1;
        unsigned EWIN2                  :1;
        unsigned EWIN3                  :1;
        unsigned EWIN4                  :1;
        unsigned FIFOWM                 :1;
        unsigned MDSEL0                 :1;
        unsigned MDSEL1                 :1;
    };
    struct {
        unsigned                        :5;
        unsigned F                      :1;
    };
} ECANCONbits_t;
extern volatile ECANCONbits_t ECANCONbits __at(0xF77);
// bitfield macros
#define _ECANCON_EWIN0_POSN                                 0x0
#define _ECANCON_EWIN0_POSITION                             0x0
#define _ECANCON_EWIN0_SIZE                                 0x1
#define _ECANCON_EWIN0_LENGTH                               0x1
#define _ECANCON_EWIN0_MASK                                 0x1
#define _ECANCON_EWIN1_POSN                                 0x1
#define _ECANCON_EWIN1_POSITION                             0x1
#define _ECANCON_EWIN1_SIZE                                 0x1
#define _ECANCON_EWIN1_LENGTH                               0x1
#define _ECANCON_EWIN1_MASK                                 0x2
#define _ECANCON_EWIN2_POSN                                 0x2
#define _ECANCON_EWIN2_POSITION                             0x2
#define _ECANCON_EWIN2_SIZE                                 0x1
#define _ECANCON_EWIN2_LENGTH                               0x1
#define _ECANCON_EWIN2_MASK                                 0x4
#define _ECANCON_EWIN3_POSN                                 0x3
#define _ECANCON_EWIN3_POSITION                             0x3
#define _ECANCON_EWIN3_SIZE                                 0x1
#define _ECANCON_EWIN3_LENGTH                               0x1
#define _ECANCON_EWIN3_MASK                                 0x8
#define _ECANCON_EWIN4_POSN                                 0x4
#define _ECANCON_EWIN4_POSITION                             0x4
#define _ECANCON_EWIN4_SIZE                                 0x1
#define _ECANCON_EWIN4_LENGTH                               0x1
#define _ECANCON_EWIN4_MASK                                 0x10
#define _ECANCON_FIFOWM_POSN                                0x5
#define _ECANCON_FIFOWM_POSITION                            0x5
#define _ECANCON_FIFOWM_SIZE                                0x1
#define _ECANCON_FIFOWM_LENGTH                              0x1
#define _ECANCON_FIFOWM_MASK                                0x20
#define _ECANCON_MDSEL0_POSN                                0x6
#define _ECANCON_MDSEL0_POSITION                            0x6
#define _ECANCON_MDSEL0_SIZE                                0x1
#define _ECANCON_MDSEL0_LENGTH                              0x1
#define _ECANCON_MDSEL0_MASK                                0x40
#define _ECANCON_MDSEL1_POSN                                0x7
#define _ECANCON_MDSEL1_POSITION                            0x7
#define _ECANCON_MDSEL1_SIZE                                0x1
#define _ECANCON_MDSEL1_LENGTH                              0x1
#define _ECANCON_MDSEL1_MASK                                0x80
#define _ECANCON_F_POSN                                     0x5
#define _ECANCON_F_POSITION                                 0x5
#define _ECANCON_F_SIZE                                     0x1
#define _ECANCON_F_LENGTH                                   0x1
#define _ECANCON_F_MASK                                     0x20

// Register: ECCP1DEL
#define ECCP1DEL ECCP1DEL
extern volatile unsigned char           ECCP1DEL            __at(0xF79);
#ifndef _LIB_BUILD
asm("ECCP1DEL equ 0F79h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PDC                    :7;
        unsigned PRSEN                  :1;
    };
    struct {
        unsigned PDC0                   :1;
        unsigned PDC1                   :1;
        unsigned PDC2                   :1;
        unsigned PDC3                   :1;
        unsigned PDC4                   :1;
        unsigned PDC5                   :1;
        unsigned PDC6                   :1;
    };
} ECCP1DELbits_t;
extern volatile ECCP1DELbits_t ECCP1DELbits __at(0xF79);
// bitfield macros
#define _ECCP1DEL_PDC_POSN                                  0x0
#define _ECCP1DEL_PDC_POSITION                              0x0
#define _ECCP1DEL_PDC_SIZE                                  0x7
#define _ECCP1DEL_PDC_LENGTH                                0x7
#define _ECCP1DEL_PDC_MASK                                  0x7F
#define _ECCP1DEL_PRSEN_POSN                                0x7
#define _ECCP1DEL_PRSEN_POSITION                            0x7
#define _ECCP1DEL_PRSEN_SIZE                                0x1
#define _ECCP1DEL_PRSEN_LENGTH                              0x1
#define _ECCP1DEL_PRSEN_MASK                                0x80
#define _ECCP1DEL_PDC0_POSN                                 0x0
#define _ECCP1DEL_PDC0_POSITION                             0x0
#define _ECCP1DEL_PDC0_SIZE                                 0x1
#define _ECCP1DEL_PDC0_LENGTH                               0x1
#define _ECCP1DEL_PDC0_MASK                                 0x1
#define _ECCP1DEL_PDC1_POSN                                 0x1
#define _ECCP1DEL_PDC1_POSITION                             0x1
#define _ECCP1DEL_PDC1_SIZE                                 0x1
#define _ECCP1DEL_PDC1_LENGTH                               0x1
#define _ECCP1DEL_PDC1_MASK                                 0x2
#define _ECCP1DEL_PDC2_POSN                                 0x2
#define _ECCP1DEL_PDC2_POSITION                             0x2
#define _ECCP1DEL_PDC2_SIZE                                 0x1
#define _ECCP1DEL_PDC2_LENGTH                               0x1
#define _ECCP1DEL_PDC2_MASK                                 0x4
#define _ECCP1DEL_PDC3_POSN                                 0x3
#define _ECCP1DEL_PDC3_POSITION                             0x3
#define _ECCP1DEL_PDC3_SIZE                                 0x1
#define _ECCP1DEL_PDC3_LENGTH                               0x1
#define _ECCP1DEL_PDC3_MASK                                 0x8
#define _ECCP1DEL_PDC4_POSN                                 0x4
#define _ECCP1DEL_PDC4_POSITION                             0x4
#define _ECCP1DEL_PDC4_SIZE                                 0x1
#define _ECCP1DEL_PDC4_LENGTH                               0x1
#define _ECCP1DEL_PDC4_MASK                                 0x10
#define _ECCP1DEL_PDC5_POSN                                 0x5
#define _ECCP1DEL_PDC5_POSITION                             0x5
#define _ECCP1DEL_PDC5_SIZE                                 0x1
#define _ECCP1DEL_PDC5_LENGTH                               0x1
#define _ECCP1DEL_PDC5_MASK                                 0x20
#define _ECCP1DEL_PDC6_POSN                                 0x6
#define _ECCP1DEL_PDC6_POSITION                             0x6
#define _ECCP1DEL_PDC6_SIZE                                 0x1
#define _ECCP1DEL_PDC6_LENGTH                               0x1
#define _ECCP1DEL_PDC6_MASK                                 0x40

// Register: BAUDCON
#define BAUDCON BAUDCON
extern volatile unsigned char           BAUDCON             __at(0xF7E);
#ifndef _LIB_BUILD
asm("BAUDCON equ 0F7Eh");
#endif
// aliases
extern volatile unsigned char           BAUDCTL             __at(0xF7E);
#ifndef _LIB_BUILD
asm("BAUDCTL equ 0F7Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned W4E                    :1;
    };
} BAUDCONbits_t;
extern volatile BAUDCONbits_t BAUDCONbits __at(0xF7E);
// bitfield macros
#define _BAUDCON_ABDEN_POSN                                 0x0
#define _BAUDCON_ABDEN_POSITION                             0x0
#define _BAUDCON_ABDEN_SIZE                                 0x1
#define _BAUDCON_ABDEN_LENGTH                               0x1
#define _BAUDCON_ABDEN_MASK                                 0x1
#define _BAUDCON_WUE_POSN                                   0x1
#define _BAUDCON_WUE_POSITION                               0x1
#define _BAUDCON_WUE_SIZE                                   0x1
#define _BAUDCON_WUE_LENGTH                                 0x1
#define _BAUDCON_WUE_MASK                                   0x2
#define _BAUDCON_BRG16_POSN                                 0x3
#define _BAUDCON_BRG16_POSITION                             0x3
#define _BAUDCON_BRG16_SIZE                                 0x1
#define _BAUDCON_BRG16_LENGTH                               0x1
#define _BAUDCON_BRG16_MASK                                 0x8
#define _BAUDCON_SCKP_POSN                                  0x4
#define _BAUDCON_SCKP_POSITION                              0x4
#define _BAUDCON_SCKP_SIZE                                  0x1
#define _BAUDCON_SCKP_LENGTH                                0x1
#define _BAUDCON_SCKP_MASK                                  0x10
#define _BAUDCON_RCIDL_POSN                                 0x6
#define _BAUDCON_RCIDL_POSITION                             0x6
#define _BAUDCON_RCIDL_SIZE                                 0x1
#define _BAUDCON_RCIDL_LENGTH                               0x1
#define _BAUDCON_RCIDL_MASK                                 0x40
#define _BAUDCON_W4E_POSN                                   0x1
#define _BAUDCON_W4E_POSITION                               0x1
#define _BAUDCON_W4E_SIZE                                   0x1
#define _BAUDCON_W4E_LENGTH                                 0x1
#define _BAUDCON_W4E_MASK                                   0x2
// alias bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned W4E                    :1;
    };
} BAUDCTLbits_t;
extern volatile BAUDCTLbits_t BAUDCTLbits __at(0xF7E);
// bitfield macros
#define _BAUDCTL_ABDEN_POSN                                 0x0
#define _BAUDCTL_ABDEN_POSITION                             0x0
#define _BAUDCTL_ABDEN_SIZE                                 0x1
#define _BAUDCTL_ABDEN_LENGTH                               0x1
#define _BAUDCTL_ABDEN_MASK                                 0x1
#define _BAUDCTL_WUE_POSN                                   0x1
#define _BAUDCTL_WUE_POSITION                               0x1
#define _BAUDCTL_WUE_SIZE                                   0x1
#define _BAUDCTL_WUE_LENGTH                                 0x1
#define _BAUDCTL_WUE_MASK                                   0x2
#define _BAUDCTL_BRG16_POSN                                 0x3
#define _BAUDCTL_BRG16_POSITION                             0x3
#define _BAUDCTL_BRG16_SIZE                                 0x1
#define _BAUDCTL_BRG16_LENGTH                               0x1
#define _BAUDCTL_BRG16_MASK                                 0x8
#define _BAUDCTL_SCKP_POSN                                  0x4
#define _BAUDCTL_SCKP_POSITION                              0x4
#define _BAUDCTL_SCKP_SIZE                                  0x1
#define _BAUDCTL_SCKP_LENGTH                                0x1
#define _BAUDCTL_SCKP_MASK                                  0x10
#define _BAUDCTL_RCIDL_POSN                                 0x6
#define _BAUDCTL_RCIDL_POSITION                             0x6
#define _BAUDCTL_RCIDL_SIZE                                 0x1
#define _BAUDCTL_RCIDL_LENGTH                               0x1
#define _BAUDCTL_RCIDL_MASK                                 0x40
#define _BAUDCTL_W4E_POSN                                   0x1
#define _BAUDCTL_W4E_POSITION                               0x1
#define _BAUDCTL_W4E_SIZE                                   0x1
#define _BAUDCTL_W4E_LENGTH                                 0x1
#define _BAUDCTL_W4E_MASK                                   0x2

// Register: SPBRGH
#define SPBRGH SPBRGH
extern volatile unsigned char           SPBRGH              __at(0xF7F);
#ifndef _LIB_BUILD
asm("SPBRGH equ 0F7Fh");
#endif

// Register: PORTA
#define PORTA PORTA
extern volatile unsigned char           PORTA               __at(0xF80);
#ifndef _LIB_BUILD
asm("PORTA equ 0F80h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA0                    :1;
        unsigned RA1                    :1;
        unsigned RA2                    :1;
        unsigned RA3                    :1;
        unsigned RA4                    :1;
        unsigned RA5                    :1;
        unsigned RA6                    :1;
    };
    struct {
        unsigned AN0                    :1;
        unsigned AN1                    :1;
        unsigned AN2                    :1;
        unsigned AN3                    :1;
        unsigned T0CKI                  :1;
        unsigned AN4                    :1;
        unsigned OSC2                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned VREFM                  :1;
        unsigned VREFP                  :1;
        unsigned                        :1;
        unsigned LVDIN                  :1;
        unsigned CLKO                   :1;
    };
    struct {
        unsigned ULPWUIN                :1;
    };
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits __at(0xF80);
// bitfield macros
#define _PORTA_RA0_POSN                                     0x0
#define _PORTA_RA0_POSITION                                 0x0
#define _PORTA_RA0_SIZE                                     0x1
#define _PORTA_RA0_LENGTH                                   0x1
#define _PORTA_RA0_MASK                                     0x1
#define _PORTA_RA1_POSN                                     0x1
#define _PORTA_RA1_POSITION                                 0x1
#define _PORTA_RA1_SIZE                                     0x1
#define _PORTA_RA1_LENGTH                                   0x1
#define _PORTA_RA1_MASK                                     0x2
#define _PORTA_RA2_POSN                                     0x2
#define _PORTA_RA2_POSITION                                 0x2
#define _PORTA_RA2_SIZE                                     0x1
#define _PORTA_RA2_LENGTH                                   0x1
#define _PORTA_RA2_MASK                                     0x4
#define _PORTA_RA3_POSN                                     0x3
#define _PORTA_RA3_POSITION                                 0x3
#define _PORTA_RA3_SIZE                                     0x1
#define _PORTA_RA3_LENGTH                                   0x1
#define _PORTA_RA3_MASK                                     0x8
#define _PORTA_RA4_POSN                                     0x4
#define _PORTA_RA4_POSITION                                 0x4
#define _PORTA_RA4_SIZE                                     0x1
#define _PORTA_RA4_LENGTH                                   0x1
#define _PORTA_RA4_MASK                                     0x10
#define _PORTA_RA5_POSN                                     0x5
#define _PORTA_RA5_POSITION                                 0x5
#define _PORTA_RA5_SIZE                                     0x1
#define _PORTA_RA5_LENGTH                                   0x1
#define _PORTA_RA5_MASK                                     0x20
#define _PORTA_RA6_POSN                                     0x6
#define _PORTA_RA6_POSITION                                 0x6
#define _PORTA_RA6_SIZE                                     0x1
#define _PORTA_RA6_LENGTH                                   0x1
#define _PORTA_RA6_MASK                                     0x40
#define _PORTA_AN0_POSN                                     0x0
#define _PORTA_AN0_POSITION                                 0x0
#define _PORTA_AN0_SIZE                                     0x1
#define _PORTA_AN0_LENGTH                                   0x1
#define _PORTA_AN0_MASK                                     0x1
#define _PORTA_AN1_POSN                                     0x1
#define _PORTA_AN1_POSITION                                 0x1
#define _PORTA_AN1_SIZE                                     0x1
#define _PORTA_AN1_LENGTH                                   0x1
#define _PORTA_AN1_MASK                                     0x2
#define _PORTA_AN2_POSN                                     0x2
#define _PORTA_AN2_POSITION                                 0x2
#define _PORTA_AN2_SIZE                                     0x1
#define _PORTA_AN2_LENGTH                                   0x1
#define _PORTA_AN2_MASK                                     0x4
#define _PORTA_AN3_POSN                                     0x3
#define _PORTA_AN3_POSITION                                 0x3
#define _PORTA_AN3_SIZE                                     0x1
#define _PORTA_AN3_LENGTH                                   0x1
#define _PORTA_AN3_MASK                                     0x8
#define _PORTA_T0CKI_POSN                                   0x4
#define _PORTA_T0CKI_POSITION                               0x4
#define _PORTA_T0CKI_SIZE                                   0x1
#define _PORTA_T0CKI_LENGTH                                 0x1
#define _PORTA_T0CKI_MASK                                   0x10
#define _PORTA_AN4_POSN                                     0x5
#define _PORTA_AN4_POSITION                                 0x5
#define _PORTA_AN4_SIZE                                     0x1
#define _PORTA_AN4_LENGTH                                   0x1
#define _PORTA_AN4_MASK                                     0x20
#define _PORTA_OSC2_POSN                                    0x6
#define _PORTA_OSC2_POSITION                                0x6
#define _PORTA_OSC2_SIZE                                    0x1
#define _PORTA_OSC2_LENGTH                                  0x1
#define _PORTA_OSC2_MASK                                    0x40
#define _PORTA_VREFM_POSN                                   0x2
#define _PORTA_VREFM_POSITION                               0x2
#define _PORTA_VREFM_SIZE                                   0x1
#define _PORTA_VREFM_LENGTH                                 0x1
#define _PORTA_VREFM_MASK                                   0x4
#define _PORTA_VREFP_POSN                                   0x3
#define _PORTA_VREFP_POSITION                               0x3
#define _PORTA_VREFP_SIZE                                   0x1
#define _PORTA_VREFP_LENGTH                                 0x1
#define _PORTA_VREFP_MASK                                   0x8
#define _PORTA_LVDIN_POSN                                   0x5
#define _PORTA_LVDIN_POSITION                               0x5
#define _PORTA_LVDIN_SIZE                                   0x1
#define _PORTA_LVDIN_LENGTH                                 0x1
#define _PORTA_LVDIN_MASK                                   0x20
#define _PORTA_CLKO_POSN                                    0x6
#define _PORTA_CLKO_POSITION                                0x6
#define _PORTA_CLKO_SIZE                                    0x1
#define _PORTA_CLKO_LENGTH                                  0x1
#define _PORTA_CLKO_MASK                                    0x40
#define _PORTA_ULPWUIN_POSN                                 0x0
#define _PORTA_ULPWUIN_POSITION                             0x0
#define _PORTA_ULPWUIN_SIZE                                 0x1
#define _PORTA_ULPWUIN_LENGTH                               0x1
#define _PORTA_ULPWUIN_MASK                                 0x1

// Register: PORTB
#define PORTB PORTB
extern volatile unsigned char           PORTB               __at(0xF81);
#ifndef _LIB_BUILD
asm("PORTB equ 0F81h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RB2                    :1;
        unsigned RB3                    :1;
        unsigned RB4                    :1;
        unsigned RB5                    :1;
        unsigned RB6                    :1;
        unsigned RB7                    :1;
    };
    struct {
        unsigned INT0                   :1;
        unsigned INT1                   :1;
        unsigned INT2                   :1;
        unsigned INT3                   :1;
        unsigned KBI0                   :1;
        unsigned KBI1                   :1;
        unsigned KBI2                   :1;
        unsigned KBI3                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned PGM                    :1;
        unsigned PGC                    :1;
        unsigned PGD                    :1;
    };
    struct {
        unsigned                        :3;
        unsigned CCP2_PA2               :1;
    };
} PORTBbits_t;
extern volatile PORTBbits_t PORTBbits __at(0xF81);
// bitfield macros
#define _PORTB_RB0_POSN                                     0x0
#define _PORTB_RB0_POSITION                                 0x0
#define _PORTB_RB0_SIZE                                     0x1
#define _PORTB_RB0_LENGTH                                   0x1
#define _PORTB_RB0_MASK                                     0x1
#define _PORTB_RB1_POSN                                     0x1
#define _PORTB_RB1_POSITION                                 0x1
#define _PORTB_RB1_SIZE                                     0x1
#define _PORTB_RB1_LENGTH                                   0x1
#define _PORTB_RB1_MASK                                     0x2
#define _PORTB_RB2_POSN                                     0x2
#define _PORTB_RB2_POSITION                                 0x2
#define _PORTB_RB2_SIZE                                     0x1
#define _PORTB_RB2_LENGTH                                   0x1
#define _PORTB_RB2_MASK                                     0x4
#define _PORTB_RB3_POSN                                     0x3
#define _PORTB_RB3_POSITION                                 0x3
#define _PORTB_RB3_SIZE                                     0x1
#define _PORTB_RB3_LENGTH                                   0x1
#define _PORTB_RB3_MASK                                     0x8
#define _PORTB_RB4_POSN                                     0x4
#define _PORTB_RB4_POSITION                                 0x4
#define _PORTB_RB4_SIZE                                     0x1
#define _PORTB_RB4_LENGTH                                   0x1
#define _PORTB_RB4_MASK                                     0x10
#define _PORTB_RB5_POSN                                     0x5
#define _PORTB_RB5_POSITION                                 0x5
#define _PORTB_RB5_SIZE                                     0x1
#define _PORTB_RB5_LENGTH                                   0x1
#define _PORTB_RB5_MASK                                     0x20
#define _PORTB_RB6_POSN                                     0x6
#define _PORTB_RB6_POSITION                                 0x6
#define _PORTB_RB6_SIZE                                     0x1
#define _PORTB_RB6_LENGTH                                   0x1
#define _PORTB_RB6_MASK                                     0x40
#define _PORTB_RB7_POSN                                     0x7
#define _PORTB_RB7_POSITION                                 0x7
#define _PORTB_RB7_SIZE                                     0x1
#define _PORTB_RB7_LENGTH                                   0x1
#define _PORTB_RB7_MASK                                     0x80
#define _PORTB_INT0_POSN                                    0x0
#define _PORTB_INT0_POSITION                                0x0
#define _PORTB_INT0_SIZE                                    0x1
#define _PORTB_INT0_LENGTH                                  0x1
#define _PORTB_INT0_MASK                                    0x1
#define _PORTB_INT1_POSN                                    0x1
#define _PORTB_INT1_POSITION                                0x1
#define _PORTB_INT1_SIZE                                    0x1
#define _PORTB_INT1_LENGTH                                  0x1
#define _PORTB_INT1_MASK                                    0x2
#define _PORTB_INT2_POSN                                    0x2
#define _PORTB_INT2_POSITION                                0x2
#define _PORTB_INT2_SIZE                                    0x1
#define _PORTB_INT2_LENGTH                                  0x1
#define _PORTB_INT2_MASK                                    0x4
#define _PORTB_INT3_POSN                                    0x3
#define _PORTB_INT3_POSITION                                0x3
#define _PORTB_INT3_SIZE                                    0x1
#define _PORTB_INT3_LENGTH                                  0x1
#define _PORTB_INT3_MASK                                    0x8
#define _PORTB_KBI0_POSN                                    0x4
#define _PORTB_KBI0_POSITION                                0x4
#define _PORTB_KBI0_SIZE                                    0x1
#define _PORTB_KBI0_LENGTH                                  0x1
#define _PORTB_KBI0_MASK                                    0x10
#define _PORTB_KBI1_POSN                                    0x5
#define _PORTB_KBI1_POSITION                                0x5
#define _PORTB_KBI1_SIZE                                    0x1
#define _PORTB_KBI1_LENGTH                                  0x1
#define _PORTB_KBI1_MASK                                    0x20
#define _PORTB_KBI2_POSN                                    0x6
#define _PORTB_KBI2_POSITION                                0x6
#define _PORTB_KBI2_SIZE                                    0x1
#define _PORTB_KBI2_LENGTH                                  0x1
#define _PORTB_KBI2_MASK                                    0x40
#define _PORTB_KBI3_POSN                                    0x7
#define _PORTB_KBI3_POSITION                                0x7
#define _PORTB_KBI3_SIZE                                    0x1
#define _PORTB_KBI3_LENGTH                                  0x1
#define _PORTB_KBI3_MASK                                    0x80
#define _PORTB_PGM_POSN                                     0x5
#define _PORTB_PGM_POSITION                                 0x5
#define _PORTB_PGM_SIZE                                     0x1
#define _PORTB_PGM_LENGTH                                   0x1
#define _PORTB_PGM_MASK                                     0x20
#define _PORTB_PGC_POSN                                     0x6
#define _PORTB_PGC_POSITION                                 0x6
#define _PORTB_PGC_SIZE                                     0x1
#define _PORTB_PGC_LENGTH                                   0x1
#define _PORTB_PGC_MASK                                     0x40
#define _PORTB_PGD_POSN                                     0x7
#define _PORTB_PGD_POSITION                                 0x7
#define _PORTB_PGD_SIZE                                     0x1
#define _PORTB_PGD_LENGTH                                   0x1
#define _PORTB_PGD_MASK                                     0x80
#define _PORTB_CCP2_PA2_POSN                                0x3
#define _PORTB_CCP2_PA2_POSITION                            0x3
#define _PORTB_CCP2_PA2_SIZE                                0x1
#define _PORTB_CCP2_PA2_LENGTH                              0x1
#define _PORTB_CCP2_PA2_MASK                                0x8

// Register: PORTC
#define PORTC PORTC
extern volatile unsigned char           PORTC               __at(0xF82);
#ifndef _LIB_BUILD
asm("PORTC equ 0F82h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC0                    :1;
        unsigned RC1                    :1;
        unsigned RC2                    :1;
        unsigned RC3                    :1;
        unsigned RC4                    :1;
        unsigned RC5                    :1;
        unsigned RC6                    :1;
        unsigned RC7                    :1;
    };
    struct {
        unsigned T1OSO                  :1;
        unsigned T1OSI                  :1;
        unsigned CCP1                   :1;
        unsigned SCK                    :1;
        unsigned SDI                    :1;
        unsigned SDO                    :1;
        unsigned TX                     :1;
        unsigned RX                     :1;
    };
    struct {
        unsigned T13CKI                 :1;
        unsigned                        :1;
        unsigned P1A                    :1;
        unsigned SCL                    :1;
        unsigned SDA                    :1;
        unsigned                        :1;
        unsigned CK                     :1;
        unsigned DT                     :1;
    };
    struct {
        unsigned                        :1;
        unsigned CCP2                   :1;
        unsigned PA1                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned PA2                    :1;
    };
} PORTCbits_t;
extern volatile PORTCbits_t PORTCbits __at(0xF82);
// bitfield macros
#define _PORTC_RC0_POSN                                     0x0
#define _PORTC_RC0_POSITION                                 0x0
#define _PORTC_RC0_SIZE                                     0x1
#define _PORTC_RC0_LENGTH                                   0x1
#define _PORTC_RC0_MASK                                     0x1
#define _PORTC_RC1_POSN                                     0x1
#define _PORTC_RC1_POSITION                                 0x1
#define _PORTC_RC1_SIZE                                     0x1
#define _PORTC_RC1_LENGTH                                   0x1
#define _PORTC_RC1_MASK                                     0x2
#define _PORTC_RC2_POSN                                     0x2
#define _PORTC_RC2_POSITION                                 0x2
#define _PORTC_RC2_SIZE                                     0x1
#define _PORTC_RC2_LENGTH                                   0x1
#define _PORTC_RC2_MASK                                     0x4
#define _PORTC_RC3_POSN                                     0x3
#define _PORTC_RC3_POSITION                                 0x3
#define _PORTC_RC3_SIZE                                     0x1
#define _PORTC_RC3_LENGTH                                   0x1
#define _PORTC_RC3_MASK                                     0x8
#define _PORTC_RC4_POSN                                     0x4
#define _PORTC_RC4_POSITION                                 0x4
#define _PORTC_RC4_SIZE                                     0x1
#define _PORTC_RC4_LENGTH                                   0x1
#define _PORTC_RC4_MASK                                     0x10
#define _PORTC_RC5_POSN                                     0x5
#define _PORTC_RC5_POSITION                                 0x5
#define _PORTC_RC5_SIZE                                     0x1
#define _PORTC_RC5_LENGTH                                   0x1
#define _PORTC_RC5_MASK                                     0x20
#define _PORTC_RC6_POSN                                     0x6
#define _PORTC_RC6_POSITION                                 0x6
#define _PORTC_RC6_SIZE                                     0x1
#define _PORTC_RC6_LENGTH                                   0x1
#define _PORTC_RC6_MASK                                     0x40
#define _PORTC_RC7_POSN                                     0x7
#define _PORTC_RC7_POSITION                                 0x7
#define _PORTC_RC7_SIZE                                     0x1
#define _PORTC_RC7_LENGTH                                   0x1
#define _PORTC_RC7_MASK                                     0x80
#define _PORTC_T1OSO_POSN                                   0x0
#define _PORTC_T1OSO_POSITION                               0x0
#define _PORTC_T1OSO_SIZE                                   0x1
#define _PORTC_T1OSO_LENGTH                                 0x1
#define _PORTC_T1OSO_MASK                                   0x1
#define _PORTC_T1OSI_POSN                                   0x1
#define _PORTC_T1OSI_POSITION                               0x1
#define _PORTC_T1OSI_SIZE                                   0x1
#define _PORTC_T1OSI_LENGTH                                 0x1
#define _PORTC_T1OSI_MASK                                   0x2
#define _PORTC_CCP1_POSN                                    0x2
#define _PORTC_CCP1_POSITION                                0x2
#define _PORTC_CCP1_SIZE                                    0x1
#define _PORTC_CCP1_LENGTH                                  0x1
#define _PORTC_CCP1_MASK                                    0x4
#define _PORTC_SCK_POSN                                     0x3
#define _PORTC_SCK_POSITION                                 0x3
#define _PORTC_SCK_SIZE                                     0x1
#define _PORTC_SCK_LENGTH                                   0x1
#define _PORTC_SCK_MASK                                     0x8
#define _PORTC_SDI_POSN                                     0x4
#define _PORTC_SDI_POSITION                                 0x4
#define _PORTC_SDI_SIZE                                     0x1
#define _PORTC_SDI_LENGTH                                   0x1
#define _PORTC_SDI_MASK                                     0x10
#define _PORTC_SDO_POSN                                     0x5
#define _PORTC_SDO_POSITION                                 0x5
#define _PORTC_SDO_SIZE                                     0x1
#define _PORTC_SDO_LENGTH                                   0x1
#define _PORTC_SDO_MASK                                     0x20
#define _PORTC_TX_POSN                                      0x6
#define _PORTC_TX_POSITION                                  0x6
#define _PORTC_TX_SIZE                                      0x1
#define _PORTC_TX_LENGTH                                    0x1
#define _PORTC_TX_MASK                                      0x40
#define _PORTC_RX_POSN                                      0x7
#define _PORTC_RX_POSITION                                  0x7
#define _PORTC_RX_SIZE                                      0x1
#define _PORTC_RX_LENGTH                                    0x1
#define _PORTC_RX_MASK                                      0x80
#define _PORTC_T13CKI_POSN                                  0x0
#define _PORTC_T13CKI_POSITION                              0x0
#define _PORTC_T13CKI_SIZE                                  0x1
#define _PORTC_T13CKI_LENGTH                                0x1
#define _PORTC_T13CKI_MASK                                  0x1
#define _PORTC_P1A_POSN                                     0x2
#define _PORTC_P1A_POSITION                                 0x2
#define _PORTC_P1A_SIZE                                     0x1
#define _PORTC_P1A_LENGTH                                   0x1
#define _PORTC_P1A_MASK                                     0x4
#define _PORTC_SCL_POSN                                     0x3
#define _PORTC_SCL_POSITION                                 0x3
#define _PORTC_SCL_SIZE                                     0x1
#define _PORTC_SCL_LENGTH                                   0x1
#define _PORTC_SCL_MASK                                     0x8
#define _PORTC_SDA_POSN                                     0x4
#define _PORTC_SDA_POSITION                                 0x4
#define _PORTC_SDA_SIZE                                     0x1
#define _PORTC_SDA_LENGTH                                   0x1
#define _PORTC_SDA_MASK                                     0x10
#define _PORTC_CK_POSN                                      0x6
#define _PORTC_CK_POSITION                                  0x6
#define _PORTC_CK_SIZE                                      0x1
#define _PORTC_CK_LENGTH                                    0x1
#define _PORTC_CK_MASK                                      0x40
#define _PORTC_DT_POSN                                      0x7
#define _PORTC_DT_POSITION                                  0x7
#define _PORTC_DT_SIZE                                      0x1
#define _PORTC_DT_LENGTH                                    0x1
#define _PORTC_DT_MASK                                      0x80
#define _PORTC_CCP2_POSN                                    0x1
#define _PORTC_CCP2_POSITION                                0x1
#define _PORTC_CCP2_SIZE                                    0x1
#define _PORTC_CCP2_LENGTH                                  0x1
#define _PORTC_CCP2_MASK                                    0x2
#define _PORTC_PA1_POSN                                     0x2
#define _PORTC_PA1_POSITION                                 0x2
#define _PORTC_PA1_SIZE                                     0x1
#define _PORTC_PA1_LENGTH                                   0x1
#define _PORTC_PA1_MASK                                     0x4
#define _PORTC_PA2_POSN                                     0x1
#define _PORTC_PA2_POSITION                                 0x1
#define _PORTC_PA2_SIZE                                     0x1
#define _PORTC_PA2_LENGTH                                   0x1
#define _PORTC_PA2_MASK                                     0x2

// Register: PORTD
#define PORTD PORTD
extern volatile unsigned char           PORTD               __at(0xF83);
#ifndef _LIB_BUILD
asm("PORTD equ 0F83h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD0                    :1;
        unsigned RD1                    :1;
        unsigned RD2                    :1;
        unsigned RD3                    :1;
        unsigned RD4                    :1;
        unsigned RD5                    :1;
        unsigned RD6                    :1;
        unsigned RD7                    :1;
    };
    struct {
        unsigned PSP0                   :1;
        unsigned PSP1                   :1;
        unsigned PSP2                   :1;
        unsigned PSP3                   :1;
        unsigned PSP4                   :1;
        unsigned PSP5                   :1;
        unsigned PSP6                   :1;
        unsigned PSP7                   :1;
    };
    struct {
        unsigned                        :7;
        unsigned SS2                    :1;
    };
} PORTDbits_t;
extern volatile PORTDbits_t PORTDbits __at(0xF83);
// bitfield macros
#define _PORTD_RD0_POSN                                     0x0
#define _PORTD_RD0_POSITION                                 0x0
#define _PORTD_RD0_SIZE                                     0x1
#define _PORTD_RD0_LENGTH                                   0x1
#define _PORTD_RD0_MASK                                     0x1
#define _PORTD_RD1_POSN                                     0x1
#define _PORTD_RD1_POSITION                                 0x1
#define _PORTD_RD1_SIZE                                     0x1
#define _PORTD_RD1_LENGTH                                   0x1
#define _PORTD_RD1_MASK                                     0x2
#define _PORTD_RD2_POSN                                     0x2
#define _PORTD_RD2_POSITION                                 0x2
#define _PORTD_RD2_SIZE                                     0x1
#define _PORTD_RD2_LENGTH                                   0x1
#define _PORTD_RD2_MASK                                     0x4
#define _PORTD_RD3_POSN                                     0x3
#define _PORTD_RD3_POSITION                                 0x3
#define _PORTD_RD3_SIZE                                     0x1
#define _PORTD_RD3_LENGTH                                   0x1
#define _PORTD_RD3_MASK                                     0x8
#define _PORTD_RD4_POSN                                     0x4
#define _PORTD_RD4_POSITION                                 0x4
#define _PORTD_RD4_SIZE                                     0x1
#define _PORTD_RD4_LENGTH                                   0x1
#define _PORTD_RD4_MASK                                     0x10
#define _PORTD_RD5_POSN                                     0x5
#define _PORTD_RD5_POSITION                                 0x5
#define _PORTD_RD5_SIZE                                     0x1
#define _PORTD_RD5_LENGTH                                   0x1
#define _PORTD_RD5_MASK                                     0x20
#define _PORTD_RD6_POSN                                     0x6
#define _PORTD_RD6_POSITION                                 0x6
#define _PORTD_RD6_SIZE                                     0x1
#define _PORTD_RD6_LENGTH                                   0x1
#define _PORTD_RD6_MASK                                     0x40
#define _PORTD_RD7_POSN                                     0x7
#define _PORTD_RD7_POSITION                                 0x7
#define _PORTD_RD7_SIZE                                     0x1
#define _PORTD_RD7_LENGTH                                   0x1
#define _PORTD_RD7_MASK                                     0x80
#define _PORTD_PSP0_POSN                                    0x0
#define _PORTD_PSP0_POSITION                                0x0
#define _PORTD_PSP0_SIZE                                    0x1
#define _PORTD_PSP0_LENGTH                                  0x1
#define _PORTD_PSP0_MASK                                    0x1
#define _PORTD_PSP1_POSN                                    0x1
#define _PORTD_PSP1_POSITION                                0x1
#define _PORTD_PSP1_SIZE                                    0x1
#define _PORTD_PSP1_LENGTH                                  0x1
#define _PORTD_PSP1_MASK                                    0x2
#define _PORTD_PSP2_POSN                                    0x2
#define _PORTD_PSP2_POSITION                                0x2
#define _PORTD_PSP2_SIZE                                    0x1
#define _PORTD_PSP2_LENGTH                                  0x1
#define _PORTD_PSP2_MASK                                    0x4
#define _PORTD_PSP3_POSN                                    0x3
#define _PORTD_PSP3_POSITION                                0x3
#define _PORTD_PSP3_SIZE                                    0x1
#define _PORTD_PSP3_LENGTH                                  0x1
#define _PORTD_PSP3_MASK                                    0x8
#define _PORTD_PSP4_POSN                                    0x4
#define _PORTD_PSP4_POSITION                                0x4
#define _PORTD_PSP4_SIZE                                    0x1
#define _PORTD_PSP4_LENGTH                                  0x1
#define _PORTD_PSP4_MASK                                    0x10
#define _PORTD_PSP5_POSN                                    0x5
#define _PORTD_PSP5_POSITION                                0x5
#define _PORTD_PSP5_SIZE                                    0x1
#define _PORTD_PSP5_LENGTH                                  0x1
#define _PORTD_PSP5_MASK                                    0x20
#define _PORTD_PSP6_POSN                                    0x6
#define _PORTD_PSP6_POSITION                                0x6
#define _PORTD_PSP6_SIZE                                    0x1
#define _PORTD_PSP6_LENGTH                                  0x1
#define _PORTD_PSP6_MASK                                    0x40
#define _PORTD_PSP7_POSN                                    0x7
#define _PORTD_PSP7_POSITION                                0x7
#define _PORTD_PSP7_SIZE                                    0x1
#define _PORTD_PSP7_LENGTH                                  0x1
#define _PORTD_PSP7_MASK                                    0x80
#define _PORTD_SS2_POSN                                     0x7
#define _PORTD_SS2_POSITION                                 0x7
#define _PORTD_SS2_SIZE                                     0x1
#define _PORTD_SS2_LENGTH                                   0x1
#define _PORTD_SS2_MASK                                     0x80

// Register: PORTE
#define PORTE PORTE
extern volatile unsigned char           PORTE               __at(0xF84);
#ifndef _LIB_BUILD
asm("PORTE equ 0F84h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RE0                    :1;
        unsigned RE1                    :1;
        unsigned RE2                    :1;
        unsigned RE3                    :1;
        unsigned RE4                    :1;
        unsigned RE5                    :1;
        unsigned RE6                    :1;
        unsigned RE7                    :1;
    };
    struct {
        unsigned RD                     :1;
        unsigned WR                     :1;
        unsigned CS                     :1;
        unsigned                        :2;
        unsigned P1C                    :1;
        unsigned P1B                    :1;
    };
    struct {
        unsigned PD2                    :1;
        unsigned PC2                    :1;
        unsigned CCP10                  :1;
        unsigned CCP9E                  :1;
        unsigned CCP8E                  :1;
        unsigned CCP7E                  :1;
        unsigned CCP6E                  :1;
        unsigned CCP2E                  :1;
    };
    struct {
        unsigned RDE                    :1;
        unsigned WRE                    :1;
        unsigned PB2                    :1;
        unsigned PC3E                   :1;
        unsigned PB3E                   :1;
        unsigned PC1E                   :1;
        unsigned PB1E                   :1;
        unsigned PA2E                   :1;
    };
} PORTEbits_t;
extern volatile PORTEbits_t PORTEbits __at(0xF84);
// bitfield macros
#define _PORTE_RE0_POSN                                     0x0
#define _PORTE_RE0_POSITION                                 0x0
#define _PORTE_RE0_SIZE                                     0x1
#define _PORTE_RE0_LENGTH                                   0x1
#define _PORTE_RE0_MASK                                     0x1
#define _PORTE_RE1_POSN                                     0x1
#define _PORTE_RE1_POSITION                                 0x1
#define _PORTE_RE1_SIZE                                     0x1
#define _PORTE_RE1_LENGTH                                   0x1
#define _PORTE_RE1_MASK                                     0x2
#define _PORTE_RE2_POSN                                     0x2
#define _PORTE_RE2_POSITION                                 0x2
#define _PORTE_RE2_SIZE                                     0x1
#define _PORTE_RE2_LENGTH                                   0x1
#define _PORTE_RE2_MASK                                     0x4
#define _PORTE_RE3_POSN                                     0x3
#define _PORTE_RE3_POSITION                                 0x3
#define _PORTE_RE3_SIZE                                     0x1
#define _PORTE_RE3_LENGTH                                   0x1
#define _PORTE_RE3_MASK                                     0x8
#define _PORTE_RE4_POSN                                     0x4
#define _PORTE_RE4_POSITION                                 0x4
#define _PORTE_RE4_SIZE                                     0x1
#define _PORTE_RE4_LENGTH                                   0x1
#define _PORTE_RE4_MASK                                     0x10
#define _PORTE_RE5_POSN                                     0x5
#define _PORTE_RE5_POSITION                                 0x5
#define _PORTE_RE5_SIZE                                     0x1
#define _PORTE_RE5_LENGTH                                   0x1
#define _PORTE_RE5_MASK                                     0x20
#define _PORTE_RE6_POSN                                     0x6
#define _PORTE_RE6_POSITION                                 0x6
#define _PORTE_RE6_SIZE                                     0x1
#define _PORTE_RE6_LENGTH                                   0x1
#define _PORTE_RE6_MASK                                     0x40
#define _PORTE_RE7_POSN                                     0x7
#define _PORTE_RE7_POSITION                                 0x7
#define _PORTE_RE7_SIZE                                     0x1
#define _PORTE_RE7_LENGTH                                   0x1
#define _PORTE_RE7_MASK                                     0x80
#define _PORTE_RD_POSN                                      0x0
#define _PORTE_RD_POSITION                                  0x0
#define _PORTE_RD_SIZE                                      0x1
#define _PORTE_RD_LENGTH                                    0x1
#define _PORTE_RD_MASK                                      0x1
#define _PORTE_WR_POSN                                      0x1
#define _PORTE_WR_POSITION                                  0x1
#define _PORTE_WR_SIZE                                      0x1
#define _PORTE_WR_LENGTH                                    0x1
#define _PORTE_WR_MASK                                      0x2
#define _PORTE_CS_POSN                                      0x2
#define _PORTE_CS_POSITION                                  0x2
#define _PORTE_CS_SIZE                                      0x1
#define _PORTE_CS_LENGTH                                    0x1
#define _PORTE_CS_MASK                                      0x4
#define _PORTE_P1C_POSN                                     0x5
#define _PORTE_P1C_POSITION                                 0x5
#define _PORTE_P1C_SIZE                                     0x1
#define _PORTE_P1C_LENGTH                                   0x1
#define _PORTE_P1C_MASK                                     0x20
#define _PORTE_P1B_POSN                                     0x6
#define _PORTE_P1B_POSITION                                 0x6
#define _PORTE_P1B_SIZE                                     0x1
#define _PORTE_P1B_LENGTH                                   0x1
#define _PORTE_P1B_MASK                                     0x40
#define _PORTE_PD2_POSN                                     0x0
#define _PORTE_PD2_POSITION                                 0x0
#define _PORTE_PD2_SIZE                                     0x1
#define _PORTE_PD2_LENGTH                                   0x1
#define _PORTE_PD2_MASK                                     0x1
#define _PORTE_PC2_POSN                                     0x1
#define _PORTE_PC2_POSITION                                 0x1
#define _PORTE_PC2_SIZE                                     0x1
#define _PORTE_PC2_LENGTH                                   0x1
#define _PORTE_PC2_MASK                                     0x2
#define _PORTE_CCP10_POSN                                   0x2
#define _PORTE_CCP10_POSITION                               0x2
#define _PORTE_CCP10_SIZE                                   0x1
#define _PORTE_CCP10_LENGTH                                 0x1
#define _PORTE_CCP10_MASK                                   0x4
#define _PORTE_CCP9E_POSN                                   0x3
#define _PORTE_CCP9E_POSITION                               0x3
#define _PORTE_CCP9E_SIZE                                   0x1
#define _PORTE_CCP9E_LENGTH                                 0x1
#define _PORTE_CCP9E_MASK                                   0x8
#define _PORTE_CCP8E_POSN                                   0x4
#define _PORTE_CCP8E_POSITION                               0x4
#define _PORTE_CCP8E_SIZE                                   0x1
#define _PORTE_CCP8E_LENGTH                                 0x1
#define _PORTE_CCP8E_MASK                                   0x10
#define _PORTE_CCP7E_POSN                                   0x5
#define _PORTE_CCP7E_POSITION                               0x5
#define _PORTE_CCP7E_SIZE                                   0x1
#define _PORTE_CCP7E_LENGTH                                 0x1
#define _PORTE_CCP7E_MASK                                   0x20
#define _PORTE_CCP6E_POSN                                   0x6
#define _PORTE_CCP6E_POSITION                               0x6
#define _PORTE_CCP6E_SIZE                                   0x1
#define _PORTE_CCP6E_LENGTH                                 0x1
#define _PORTE_CCP6E_MASK                                   0x40
#define _PORTE_CCP2E_POSN                                   0x7
#define _PORTE_CCP2E_POSITION                               0x7
#define _PORTE_CCP2E_SIZE                                   0x1
#define _PORTE_CCP2E_LENGTH                                 0x1
#define _PORTE_CCP2E_MASK                                   0x80
#define _PORTE_RDE_POSN                                     0x0
#define _PORTE_RDE_POSITION                                 0x0
#define _PORTE_RDE_SIZE                                     0x1
#define _PORTE_RDE_LENGTH                                   0x1
#define _PORTE_RDE_MASK                                     0x1
#define _PORTE_WRE_POSN                                     0x1
#define _PORTE_WRE_POSITION                                 0x1
#define _PORTE_WRE_SIZE                                     0x1
#define _PORTE_WRE_LENGTH                                   0x1
#define _PORTE_WRE_MASK                                     0x2
#define _PORTE_PB2_POSN                                     0x2
#define _PORTE_PB2_POSITION                                 0x2
#define _PORTE_PB2_SIZE                                     0x1
#define _PORTE_PB2_LENGTH                                   0x1
#define _PORTE_PB2_MASK                                     0x4
#define _PORTE_PC3E_POSN                                    0x3
#define _PORTE_PC3E_POSITION                                0x3
#define _PORTE_PC3E_SIZE                                    0x1
#define _PORTE_PC3E_LENGTH                                  0x1
#define _PORTE_PC3E_MASK                                    0x8
#define _PORTE_PB3E_POSN                                    0x4
#define _PORTE_PB3E_POSITION                                0x4
#define _PORTE_PB3E_SIZE                                    0x1
#define _PORTE_PB3E_LENGTH                                  0x1
#define _PORTE_PB3E_MASK                                    0x10
#define _PORTE_PC1E_POSN                                    0x5
#define _PORTE_PC1E_POSITION                                0x5
#define _PORTE_PC1E_SIZE                                    0x1
#define _PORTE_PC1E_LENGTH                                  0x1
#define _PORTE_PC1E_MASK                                    0x20
#define _PORTE_PB1E_POSN                                    0x6
#define _PORTE_PB1E_POSITION                                0x6
#define _PORTE_PB1E_SIZE                                    0x1
#define _PORTE_PB1E_LENGTH                                  0x1
#define _PORTE_PB1E_MASK                                    0x40
#define _PORTE_PA2E_POSN                                    0x7
#define _PORTE_PA2E_POSITION                                0x7
#define _PORTE_PA2E_SIZE                                    0x1
#define _PORTE_PA2E_LENGTH                                  0x1
#define _PORTE_PA2E_MASK                                    0x80

// Register: PORTF
#define PORTF PORTF
extern volatile unsigned char           PORTF               __at(0xF85);
#ifndef _LIB_BUILD
asm("PORTF equ 0F85h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RF0                    :1;
        unsigned RF1                    :1;
        unsigned RF2                    :1;
        unsigned RF3                    :1;
        unsigned RF4                    :1;
        unsigned RF5                    :1;
        unsigned RF6                    :1;
        unsigned RF7                    :1;
    };
    struct {
        unsigned AN5                    :1;
        unsigned AN6                    :1;
        unsigned AN7                    :1;
        unsigned AN8                    :1;
        unsigned AN9                    :1;
        unsigned AN10                   :1;
        unsigned AN11                   :1;
        unsigned SS                     :1;
    };
    struct {
        unsigned                        :1;
        unsigned C2OUTF                 :1;
        unsigned C1OUTF                 :1;
        unsigned                        :2;
        unsigned CVREFF                 :1;
    };
} PORTFbits_t;
extern volatile PORTFbits_t PORTFbits __at(0xF85);
// bitfield macros
#define _PORTF_RF0_POSN                                     0x0
#define _PORTF_RF0_POSITION                                 0x0
#define _PORTF_RF0_SIZE                                     0x1
#define _PORTF_RF0_LENGTH                                   0x1
#define _PORTF_RF0_MASK                                     0x1
#define _PORTF_RF1_POSN                                     0x1
#define _PORTF_RF1_POSITION                                 0x1
#define _PORTF_RF1_SIZE                                     0x1
#define _PORTF_RF1_LENGTH                                   0x1
#define _PORTF_RF1_MASK                                     0x2
#define _PORTF_RF2_POSN                                     0x2
#define _PORTF_RF2_POSITION                                 0x2
#define _PORTF_RF2_SIZE                                     0x1
#define _PORTF_RF2_LENGTH                                   0x1
#define _PORTF_RF2_MASK                                     0x4
#define _PORTF_RF3_POSN                                     0x3
#define _PORTF_RF3_POSITION                                 0x3
#define _PORTF_RF3_SIZE                                     0x1
#define _PORTF_RF3_LENGTH                                   0x1
#define _PORTF_RF3_MASK                                     0x8
#define _PORTF_RF4_POSN                                     0x4
#define _PORTF_RF4_POSITION                                 0x4
#define _PORTF_RF4_SIZE                                     0x1
#define _PORTF_RF4_LENGTH                                   0x1
#define _PORTF_RF4_MASK                                     0x10
#define _PORTF_RF5_POSN                                     0x5
#define _PORTF_RF5_POSITION                                 0x5
#define _PORTF_RF5_SIZE                                     0x1
#define _PORTF_RF5_LENGTH                                   0x1
#define _PORTF_RF5_MASK                                     0x20
#define _PORTF_RF6_POSN                                     0x6
#define _PORTF_RF6_POSITION                                 0x6
#define _PORTF_RF6_SIZE                                     0x1
#define _PORTF_RF6_LENGTH                                   0x1
#define _PORTF_RF6_MASK                                     0x40
#define _PORTF_RF7_POSN                                     0x7
#define _PORTF_RF7_POSITION                                 0x7
#define _PORTF_RF7_SIZE                                     0x1
#define _PORTF_RF7_LENGTH                                   0x1
#define _PORTF_RF7_MASK                                     0x80
#define _PORTF_AN5_POSN                                     0x0
#define _PORTF_AN5_POSITION                                 0x0
#define _PORTF_AN5_SIZE                                     0x1
#define _PORTF_AN5_LENGTH                                   0x1
#define _PORTF_AN5_MASK                                     0x1
#define _PORTF_AN6_POSN                                     0x1
#define _PORTF_AN6_POSITION                                 0x1
#define _PORTF_AN6_SIZE                                     0x1
#define _PORTF_AN6_LENGTH                                   0x1
#define _PORTF_AN6_MASK                                     0x2
#define _PORTF_AN7_POSN                                     0x2
#define _PORTF_AN7_POSITION                                 0x2
#define _PORTF_AN7_SIZE                                     0x1
#define _PORTF_AN7_LENGTH                                   0x1
#define _PORTF_AN7_MASK                                     0x4
#define _PORTF_AN8_POSN                                     0x3
#define _PORTF_AN8_POSITION                                 0x3
#define _PORTF_AN8_SIZE                                     0x1
#define _PORTF_AN8_LENGTH                                   0x1
#define _PORTF_AN8_MASK                                     0x8
#define _PORTF_AN9_POSN                                     0x4
#define _PORTF_AN9_POSITION                                 0x4
#define _PORTF_AN9_SIZE                                     0x1
#define _PORTF_AN9_LENGTH                                   0x1
#define _PORTF_AN9_MASK                                     0x10
#define _PORTF_AN10_POSN                                    0x5
#define _PORTF_AN10_POSITION                                0x5
#define _PORTF_AN10_SIZE                                    0x1
#define _PORTF_AN10_LENGTH                                  0x1
#define _PORTF_AN10_MASK                                    0x20
#define _PORTF_AN11_POSN                                    0x6
#define _PORTF_AN11_POSITION                                0x6
#define _PORTF_AN11_SIZE                                    0x1
#define _PORTF_AN11_LENGTH                                  0x1
#define _PORTF_AN11_MASK                                    0x40
#define _PORTF_SS_POSN                                      0x7
#define _PORTF_SS_POSITION                                  0x7
#define _PORTF_SS_SIZE                                      0x1
#define _PORTF_SS_LENGTH                                    0x1
#define _PORTF_SS_MASK                                      0x80
#define _PORTF_C2OUTF_POSN                                  0x1
#define _PORTF_C2OUTF_POSITION                              0x1
#define _PORTF_C2OUTF_SIZE                                  0x1
#define _PORTF_C2OUTF_LENGTH                                0x1
#define _PORTF_C2OUTF_MASK                                  0x2
#define _PORTF_C1OUTF_POSN                                  0x2
#define _PORTF_C1OUTF_POSITION                              0x2
#define _PORTF_C1OUTF_SIZE                                  0x1
#define _PORTF_C1OUTF_LENGTH                                0x1
#define _PORTF_C1OUTF_MASK                                  0x4
#define _PORTF_CVREFF_POSN                                  0x5
#define _PORTF_CVREFF_POSITION                              0x5
#define _PORTF_CVREFF_SIZE                                  0x1
#define _PORTF_CVREFF_LENGTH                                0x1
#define _PORTF_CVREFF_MASK                                  0x20

// Register: PORTG
#define PORTG PORTG
extern volatile unsigned char           PORTG               __at(0xF86);
#ifndef _LIB_BUILD
asm("PORTG equ 0F86h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RG0                    :1;
        unsigned RG1                    :1;
        unsigned RG2                    :1;
        unsigned RG3                    :1;
        unsigned RG4                    :1;
        unsigned RG5                    :1;
    };
    struct {
        unsigned CANTX1                 :1;
        unsigned CANTX2                 :1;
        unsigned CANRX                  :1;
        unsigned                        :1;
        unsigned P1D                    :1;
        unsigned MCLR                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned C3OUTG                 :1;
        unsigned                        :3;
        unsigned RJPU                   :1;
    };
} PORTGbits_t;
extern volatile PORTGbits_t PORTGbits __at(0xF86);
// bitfield macros
#define _PORTG_RG0_POSN                                     0x0
#define _PORTG_RG0_POSITION                                 0x0
#define _PORTG_RG0_SIZE                                     0x1
#define _PORTG_RG0_LENGTH                                   0x1
#define _PORTG_RG0_MASK                                     0x1
#define _PORTG_RG1_POSN                                     0x1
#define _PORTG_RG1_POSITION                                 0x1
#define _PORTG_RG1_SIZE                                     0x1
#define _PORTG_RG1_LENGTH                                   0x1
#define _PORTG_RG1_MASK                                     0x2
#define _PORTG_RG2_POSN                                     0x2
#define _PORTG_RG2_POSITION                                 0x2
#define _PORTG_RG2_SIZE                                     0x1
#define _PORTG_RG2_LENGTH                                   0x1
#define _PORTG_RG2_MASK                                     0x4
#define _PORTG_RG3_POSN                                     0x3
#define _PORTG_RG3_POSITION                                 0x3
#define _PORTG_RG3_SIZE                                     0x1
#define _PORTG_RG3_LENGTH                                   0x1
#define _PORTG_RG3_MASK                                     0x8
#define _PORTG_RG4_POSN                                     0x4
#define _PORTG_RG4_POSITION                                 0x4
#define _PORTG_RG4_SIZE                                     0x1
#define _PORTG_RG4_LENGTH                                   0x1
#define _PORTG_RG4_MASK                                     0x10
#define _PORTG_RG5_POSN                                     0x5
#define _PORTG_RG5_POSITION                                 0x5
#define _PORTG_RG5_SIZE                                     0x1
#define _PORTG_RG5_LENGTH                                   0x1
#define _PORTG_RG5_MASK                                     0x20
#define _PORTG_CANTX1_POSN                                  0x0
#define _PORTG_CANTX1_POSITION                              0x0
#define _PORTG_CANTX1_SIZE                                  0x1
#define _PORTG_CANTX1_LENGTH                                0x1
#define _PORTG_CANTX1_MASK                                  0x1
#define _PORTG_CANTX2_POSN                                  0x1
#define _PORTG_CANTX2_POSITION                              0x1
#define _PORTG_CANTX2_SIZE                                  0x1
#define _PORTG_CANTX2_LENGTH                                0x1
#define _PORTG_CANTX2_MASK                                  0x2
#define _PORTG_CANRX_POSN                                   0x2
#define _PORTG_CANRX_POSITION                               0x2
#define _PORTG_CANRX_SIZE                                   0x1
#define _PORTG_CANRX_LENGTH                                 0x1
#define _PORTG_CANRX_MASK                                   0x4
#define _PORTG_P1D_POSN                                     0x4
#define _PORTG_P1D_POSITION                                 0x4
#define _PORTG_P1D_SIZE                                     0x1
#define _PORTG_P1D_LENGTH                                   0x1
#define _PORTG_P1D_MASK                                     0x10
#define _PORTG_MCLR_POSN                                    0x5
#define _PORTG_MCLR_POSITION                                0x5
#define _PORTG_MCLR_SIZE                                    0x1
#define _PORTG_MCLR_LENGTH                                  0x1
#define _PORTG_MCLR_MASK                                    0x20
#define _PORTG_C3OUTG_POSN                                  0x1
#define _PORTG_C3OUTG_POSITION                              0x1
#define _PORTG_C3OUTG_SIZE                                  0x1
#define _PORTG_C3OUTG_LENGTH                                0x1
#define _PORTG_C3OUTG_MASK                                  0x2
#define _PORTG_RJPU_POSN                                    0x5
#define _PORTG_RJPU_POSITION                                0x5
#define _PORTG_RJPU_SIZE                                    0x1
#define _PORTG_RJPU_LENGTH                                  0x1
#define _PORTG_RJPU_MASK                                    0x20

// Register: LATA
#define LATA LATA
extern volatile unsigned char           LATA                __at(0xF89);
#ifndef _LIB_BUILD
asm("LATA equ 0F89h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATA0                  :1;
        unsigned LATA1                  :1;
        unsigned LATA2                  :1;
        unsigned LATA3                  :1;
        unsigned LATA4                  :1;
        unsigned LATA5                  :1;
        unsigned LATA6                  :1;
    };
    struct {
        unsigned LA0                    :1;
        unsigned LA1                    :1;
        unsigned LA2                    :1;
        unsigned LA3                    :1;
        unsigned LA4                    :1;
        unsigned LA5                    :1;
        unsigned LA6                    :1;
    };
} LATAbits_t;
extern volatile LATAbits_t LATAbits __at(0xF89);
// bitfield macros
#define _LATA_LATA0_POSN                                    0x0
#define _LATA_LATA0_POSITION                                0x0
#define _LATA_LATA0_SIZE                                    0x1
#define _LATA_LATA0_LENGTH                                  0x1
#define _LATA_LATA0_MASK                                    0x1
#define _LATA_LATA1_POSN                                    0x1
#define _LATA_LATA1_POSITION                                0x1
#define _LATA_LATA1_SIZE                                    0x1
#define _LATA_LATA1_LENGTH                                  0x1
#define _LATA_LATA1_MASK                                    0x2
#define _LATA_LATA2_POSN                                    0x2
#define _LATA_LATA2_POSITION                                0x2
#define _LATA_LATA2_SIZE                                    0x1
#define _LATA_LATA2_LENGTH                                  0x1
#define _LATA_LATA2_MASK                                    0x4
#define _LATA_LATA3_POSN                                    0x3
#define _LATA_LATA3_POSITION                                0x3
#define _LATA_LATA3_SIZE                                    0x1
#define _LATA_LATA3_LENGTH                                  0x1
#define _LATA_LATA3_MASK                                    0x8
#define _LATA_LATA4_POSN                                    0x4
#define _LATA_LATA4_POSITION                                0x4
#define _LATA_LATA4_SIZE                                    0x1
#define _LATA_LATA4_LENGTH                                  0x1
#define _LATA_LATA4_MASK                                    0x10
#define _LATA_LATA5_POSN                                    0x5
#define _LATA_LATA5_POSITION                                0x5
#define _LATA_LATA5_SIZE                                    0x1
#define _LATA_LATA5_LENGTH                                  0x1
#define _LATA_LATA5_MASK                                    0x20
#define _LATA_LATA6_POSN                                    0x6
#define _LATA_LATA6_POSITION                                0x6
#define _LATA_LATA6_SIZE                                    0x1
#define _LATA_LATA6_LENGTH                                  0x1
#define _LATA_LATA6_MASK                                    0x40
#define _LATA_LA0_POSN                                      0x0
#define _LATA_LA0_POSITION                                  0x0
#define _LATA_LA0_SIZE                                      0x1
#define _LATA_LA0_LENGTH                                    0x1
#define _LATA_LA0_MASK                                      0x1
#define _LATA_LA1_POSN                                      0x1
#define _LATA_LA1_POSITION                                  0x1
#define _LATA_LA1_SIZE                                      0x1
#define _LATA_LA1_LENGTH                                    0x1
#define _LATA_LA1_MASK                                      0x2
#define _LATA_LA2_POSN                                      0x2
#define _LATA_LA2_POSITION                                  0x2
#define _LATA_LA2_SIZE                                      0x1
#define _LATA_LA2_LENGTH                                    0x1
#define _LATA_LA2_MASK                                      0x4
#define _LATA_LA3_POSN                                      0x3
#define _LATA_LA3_POSITION                                  0x3
#define _LATA_LA3_SIZE                                      0x1
#define _LATA_LA3_LENGTH                                    0x1
#define _LATA_LA3_MASK                                      0x8
#define _LATA_LA4_POSN                                      0x4
#define _LATA_LA4_POSITION                                  0x4
#define _LATA_LA4_SIZE                                      0x1
#define _LATA_LA4_LENGTH                                    0x1
#define _LATA_LA4_MASK                                      0x10
#define _LATA_LA5_POSN                                      0x5
#define _LATA_LA5_POSITION                                  0x5
#define _LATA_LA5_SIZE                                      0x1
#define _LATA_LA5_LENGTH                                    0x1
#define _LATA_LA5_MASK                                      0x20
#define _LATA_LA6_POSN                                      0x6
#define _LATA_LA6_POSITION                                  0x6
#define _LATA_LA6_SIZE                                      0x1
#define _LATA_LA6_LENGTH                                    0x1
#define _LATA_LA6_MASK                                      0x40

// Register: LATB
#define LATB LATB
extern volatile unsigned char           LATB                __at(0xF8A);
#ifndef _LIB_BUILD
asm("LATB equ 0F8Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATB0                  :1;
        unsigned LATB1                  :1;
        unsigned LATB2                  :1;
        unsigned LATB3                  :1;
        unsigned LATB4                  :1;
        unsigned LATB5                  :1;
        unsigned LATB6                  :1;
        unsigned LATB7                  :1;
    };
    struct {
        unsigned LB0                    :1;
        unsigned LB1                    :1;
        unsigned LB2                    :1;
        unsigned LB3                    :1;
        unsigned LB4                    :1;
        unsigned LB5                    :1;
        unsigned LB6                    :1;
        unsigned LB7                    :1;
    };
} LATBbits_t;
extern volatile LATBbits_t LATBbits __at(0xF8A);
// bitfield macros
#define _LATB_LATB0_POSN                                    0x0
#define _LATB_LATB0_POSITION                                0x0
#define _LATB_LATB0_SIZE                                    0x1
#define _LATB_LATB0_LENGTH                                  0x1
#define _LATB_LATB0_MASK                                    0x1
#define _LATB_LATB1_POSN                                    0x1
#define _LATB_LATB1_POSITION                                0x1
#define _LATB_LATB1_SIZE                                    0x1
#define _LATB_LATB1_LENGTH                                  0x1
#define _LATB_LATB1_MASK                                    0x2
#define _LATB_LATB2_POSN                                    0x2
#define _LATB_LATB2_POSITION                                0x2
#define _LATB_LATB2_SIZE                                    0x1
#define _LATB_LATB2_LENGTH                                  0x1
#define _LATB_LATB2_MASK                                    0x4
#define _LATB_LATB3_POSN                                    0x3
#define _LATB_LATB3_POSITION                                0x3
#define _LATB_LATB3_SIZE                                    0x1
#define _LATB_LATB3_LENGTH                                  0x1
#define _LATB_LATB3_MASK                                    0x8
#define _LATB_LATB4_POSN                                    0x4
#define _LATB_LATB4_POSITION                                0x4
#define _LATB_LATB4_SIZE                                    0x1
#define _LATB_LATB4_LENGTH                                  0x1
#define _LATB_LATB4_MASK                                    0x10
#define _LATB_LATB5_POSN                                    0x5
#define _LATB_LATB5_POSITION                                0x5
#define _LATB_LATB5_SIZE                                    0x1
#define _LATB_LATB5_LENGTH                                  0x1
#define _LATB_LATB5_MASK                                    0x20
#define _LATB_LATB6_POSN                                    0x6
#define _LATB_LATB6_POSITION                                0x6
#define _LATB_LATB6_SIZE                                    0x1
#define _LATB_LATB6_LENGTH                                  0x1
#define _LATB_LATB6_MASK                                    0x40
#define _LATB_LATB7_POSN                                    0x7
#define _LATB_LATB7_POSITION                                0x7
#define _LATB_LATB7_SIZE                                    0x1
#define _LATB_LATB7_LENGTH                                  0x1
#define _LATB_LATB7_MASK                                    0x80
#define _LATB_LB0_POSN                                      0x0
#define _LATB_LB0_POSITION                                  0x0
#define _LATB_LB0_SIZE                                      0x1
#define _LATB_LB0_LENGTH                                    0x1
#define _LATB_LB0_MASK                                      0x1
#define _LATB_LB1_POSN                                      0x1
#define _LATB_LB1_POSITION                                  0x1
#define _LATB_LB1_SIZE                                      0x1
#define _LATB_LB1_LENGTH                                    0x1
#define _LATB_LB1_MASK                                      0x2
#define _LATB_LB2_POSN                                      0x2
#define _LATB_LB2_POSITION                                  0x2
#define _LATB_LB2_SIZE                                      0x1
#define _LATB_LB2_LENGTH                                    0x1
#define _LATB_LB2_MASK                                      0x4
#define _LATB_LB3_POSN                                      0x3
#define _LATB_LB3_POSITION                                  0x3
#define _LATB_LB3_SIZE                                      0x1
#define _LATB_LB3_LENGTH                                    0x1
#define _LATB_LB3_MASK                                      0x8
#define _LATB_LB4_POSN                                      0x4
#define _LATB_LB4_POSITION                                  0x4
#define _LATB_LB4_SIZE                                      0x1
#define _LATB_LB4_LENGTH                                    0x1
#define _LATB_LB4_MASK                                      0x10
#define _LATB_LB5_POSN                                      0x5
#define _LATB_LB5_POSITION                                  0x5
#define _LATB_LB5_SIZE                                      0x1
#define _LATB_LB5_LENGTH                                    0x1
#define _LATB_LB5_MASK                                      0x20
#define _LATB_LB6_POSN                                      0x6
#define _LATB_LB6_POSITION                                  0x6
#define _LATB_LB6_SIZE                                      0x1
#define _LATB_LB6_LENGTH                                    0x1
#define _LATB_LB6_MASK                                      0x40
#define _LATB_LB7_POSN                                      0x7
#define _LATB_LB7_POSITION                                  0x7
#define _LATB_LB7_SIZE                                      0x1
#define _LATB_LB7_LENGTH                                    0x1
#define _LATB_LB7_MASK                                      0x80

// Register: LATC
#define LATC LATC
extern volatile unsigned char           LATC                __at(0xF8B);
#ifndef _LIB_BUILD
asm("LATC equ 0F8Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATC0                  :1;
        unsigned LATC1                  :1;
        unsigned LATC2                  :1;
        unsigned LATC3                  :1;
        unsigned LATC4                  :1;
        unsigned LATC5                  :1;
        unsigned LATC6                  :1;
        unsigned LATC7                  :1;
    };
    struct {
        unsigned LC0                    :1;
        unsigned LC1                    :1;
        unsigned LC2                    :1;
        unsigned LC3                    :1;
        unsigned LC4                    :1;
        unsigned LC5                    :1;
        unsigned LC6                    :1;
        unsigned LC7                    :1;
    };
} LATCbits_t;
extern volatile LATCbits_t LATCbits __at(0xF8B);
// bitfield macros
#define _LATC_LATC0_POSN                                    0x0
#define _LATC_LATC0_POSITION                                0x0
#define _LATC_LATC0_SIZE                                    0x1
#define _LATC_LATC0_LENGTH                                  0x1
#define _LATC_LATC0_MASK                                    0x1
#define _LATC_LATC1_POSN                                    0x1
#define _LATC_LATC1_POSITION                                0x1
#define _LATC_LATC1_SIZE                                    0x1
#define _LATC_LATC1_LENGTH                                  0x1
#define _LATC_LATC1_MASK                                    0x2
#define _LATC_LATC2_POSN                                    0x2
#define _LATC_LATC2_POSITION                                0x2
#define _LATC_LATC2_SIZE                                    0x1
#define _LATC_LATC2_LENGTH                                  0x1
#define _LATC_LATC2_MASK                                    0x4
#define _LATC_LATC3_POSN                                    0x3
#define _LATC_LATC3_POSITION                                0x3
#define _LATC_LATC3_SIZE                                    0x1
#define _LATC_LATC3_LENGTH                                  0x1
#define _LATC_LATC3_MASK                                    0x8
#define _LATC_LATC4_POSN                                    0x4
#define _LATC_LATC4_POSITION                                0x4
#define _LATC_LATC4_SIZE                                    0x1
#define _LATC_LATC4_LENGTH                                  0x1
#define _LATC_LATC4_MASK                                    0x10
#define _LATC_LATC5_POSN                                    0x5
#define _LATC_LATC5_POSITION                                0x5
#define _LATC_LATC5_SIZE                                    0x1
#define _LATC_LATC5_LENGTH                                  0x1
#define _LATC_LATC5_MASK                                    0x20
#define _LATC_LATC6_POSN                                    0x6
#define _LATC_LATC6_POSITION                                0x6
#define _LATC_LATC6_SIZE                                    0x1
#define _LATC_LATC6_LENGTH                                  0x1
#define _LATC_LATC6_MASK                                    0x40
#define _LATC_LATC7_POSN                                    0x7
#define _LATC_LATC7_POSITION                                0x7
#define _LATC_LATC7_SIZE                                    0x1
#define _LATC_LATC7_LENGTH                                  0x1
#define _LATC_LATC7_MASK                                    0x80
#define _LATC_LC0_POSN                                      0x0
#define _LATC_LC0_POSITION                                  0x0
#define _LATC_LC0_SIZE                                      0x1
#define _LATC_LC0_LENGTH                                    0x1
#define _LATC_LC0_MASK                                      0x1
#define _LATC_LC1_POSN                                      0x1
#define _LATC_LC1_POSITION                                  0x1
#define _LATC_LC1_SIZE                                      0x1
#define _LATC_LC1_LENGTH                                    0x1
#define _LATC_LC1_MASK                                      0x2
#define _LATC_LC2_POSN                                      0x2
#define _LATC_LC2_POSITION                                  0x2
#define _LATC_LC2_SIZE                                      0x1
#define _LATC_LC2_LENGTH                                    0x1
#define _LATC_LC2_MASK                                      0x4
#define _LATC_LC3_POSN                                      0x3
#define _LATC_LC3_POSITION                                  0x3
#define _LATC_LC3_SIZE                                      0x1
#define _LATC_LC3_LENGTH                                    0x1
#define _LATC_LC3_MASK                                      0x8
#define _LATC_LC4_POSN                                      0x4
#define _LATC_LC4_POSITION                                  0x4
#define _LATC_LC4_SIZE                                      0x1
#define _LATC_LC4_LENGTH                                    0x1
#define _LATC_LC4_MASK                                      0x10
#define _LATC_LC5_POSN                                      0x5
#define _LATC_LC5_POSITION                                  0x5
#define _LATC_LC5_SIZE                                      0x1
#define _LATC_LC5_LENGTH                                    0x1
#define _LATC_LC5_MASK                                      0x20
#define _LATC_LC6_POSN                                      0x6
#define _LATC_LC6_POSITION                                  0x6
#define _LATC_LC6_SIZE                                      0x1
#define _LATC_LC6_LENGTH                                    0x1
#define _LATC_LC6_MASK                                      0x40
#define _LATC_LC7_POSN                                      0x7
#define _LATC_LC7_POSITION                                  0x7
#define _LATC_LC7_SIZE                                      0x1
#define _LATC_LC7_LENGTH                                    0x1
#define _LATC_LC7_MASK                                      0x80

// Register: LATD
#define LATD LATD
extern volatile unsigned char           LATD                __at(0xF8C);
#ifndef _LIB_BUILD
asm("LATD equ 0F8Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATD0                  :1;
        unsigned LATD1                  :1;
        unsigned LATD2                  :1;
        unsigned LATD3                  :1;
        unsigned LATD4                  :1;
        unsigned LATD5                  :1;
        unsigned LATD6                  :1;
        unsigned LATD7                  :1;
    };
    struct {
        unsigned LD0                    :1;
        unsigned LD1                    :1;
        unsigned LD2                    :1;
        unsigned LD3                    :1;
        unsigned LD4                    :1;
        unsigned LD5                    :1;
        unsigned LD6                    :1;
        unsigned LD7                    :1;
    };
} LATDbits_t;
extern volatile LATDbits_t LATDbits __at(0xF8C);
// bitfield macros
#define _LATD_LATD0_POSN                                    0x0
#define _LATD_LATD0_POSITION                                0x0
#define _LATD_LATD0_SIZE                                    0x1
#define _LATD_LATD0_LENGTH                                  0x1
#define _LATD_LATD0_MASK                                    0x1
#define _LATD_LATD1_POSN                                    0x1
#define _LATD_LATD1_POSITION                                0x1
#define _LATD_LATD1_SIZE                                    0x1
#define _LATD_LATD1_LENGTH                                  0x1
#define _LATD_LATD1_MASK                                    0x2
#define _LATD_LATD2_POSN                                    0x2
#define _LATD_LATD2_POSITION                                0x2
#define _LATD_LATD2_SIZE                                    0x1
#define _LATD_LATD2_LENGTH                                  0x1
#define _LATD_LATD2_MASK                                    0x4
#define _LATD_LATD3_POSN                                    0x3
#define _LATD_LATD3_POSITION                                0x3
#define _LATD_LATD3_SIZE                                    0x1
#define _LATD_LATD3_LENGTH                                  0x1
#define _LATD_LATD3_MASK                                    0x8
#define _LATD_LATD4_POSN                                    0x4
#define _LATD_LATD4_POSITION                                0x4
#define _LATD_LATD4_SIZE                                    0x1
#define _LATD_LATD4_LENGTH                                  0x1
#define _LATD_LATD4_MASK                                    0x10
#define _LATD_LATD5_POSN                                    0x5
#define _LATD_LATD5_POSITION                                0x5
#define _LATD_LATD5_SIZE                                    0x1
#define _LATD_LATD5_LENGTH                                  0x1
#define _LATD_LATD5_MASK                                    0x20
#define _LATD_LATD6_POSN                                    0x6
#define _LATD_LATD6_POSITION                                0x6
#define _LATD_LATD6_SIZE                                    0x1
#define _LATD_LATD6_LENGTH                                  0x1
#define _LATD_LATD6_MASK                                    0x40
#define _LATD_LATD7_POSN                                    0x7
#define _LATD_LATD7_POSITION                                0x7
#define _LATD_LATD7_SIZE                                    0x1
#define _LATD_LATD7_LENGTH                                  0x1
#define _LATD_LATD7_MASK                                    0x80
#define _LATD_LD0_POSN                                      0x0
#define _LATD_LD0_POSITION                                  0x0
#define _LATD_LD0_SIZE                                      0x1
#define _LATD_LD0_LENGTH                                    0x1
#define _LATD_LD0_MASK                                      0x1
#define _LATD_LD1_POSN                                      0x1
#define _LATD_LD1_POSITION                                  0x1
#define _LATD_LD1_SIZE                                      0x1
#define _LATD_LD1_LENGTH                                    0x1
#define _LATD_LD1_MASK                                      0x2
#define _LATD_LD2_POSN                                      0x2
#define _LATD_LD2_POSITION                                  0x2
#define _LATD_LD2_SIZE                                      0x1
#define _LATD_LD2_LENGTH                                    0x1
#define _LATD_LD2_MASK                                      0x4
#define _LATD_LD3_POSN                                      0x3
#define _LATD_LD3_POSITION                                  0x3
#define _LATD_LD3_SIZE                                      0x1
#define _LATD_LD3_LENGTH                                    0x1
#define _LATD_LD3_MASK                                      0x8
#define _LATD_LD4_POSN                                      0x4
#define _LATD_LD4_POSITION                                  0x4
#define _LATD_LD4_SIZE                                      0x1
#define _LATD_LD4_LENGTH                                    0x1
#define _LATD_LD4_MASK                                      0x10
#define _LATD_LD5_POSN                                      0x5
#define _LATD_LD5_POSITION                                  0x5
#define _LATD_LD5_SIZE                                      0x1
#define _LATD_LD5_LENGTH                                    0x1
#define _LATD_LD5_MASK                                      0x20
#define _LATD_LD6_POSN                                      0x6
#define _LATD_LD6_POSITION                                  0x6
#define _LATD_LD6_SIZE                                      0x1
#define _LATD_LD6_LENGTH                                    0x1
#define _LATD_LD6_MASK                                      0x40
#define _LATD_LD7_POSN                                      0x7
#define _LATD_LD7_POSITION                                  0x7
#define _LATD_LD7_SIZE                                      0x1
#define _LATD_LD7_LENGTH                                    0x1
#define _LATD_LD7_MASK                                      0x80

// Register: LATE
#define LATE LATE
extern volatile unsigned char           LATE                __at(0xF8D);
#ifndef _LIB_BUILD
asm("LATE equ 0F8Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATE0                  :1;
        unsigned LATE1                  :1;
        unsigned LATE2                  :1;
        unsigned LATE3                  :1;
        unsigned LATE4                  :1;
        unsigned LATE5                  :1;
        unsigned LATE6                  :1;
        unsigned LATE7                  :1;
    };
    struct {
        unsigned LE0                    :1;
        unsigned LE1                    :1;
        unsigned LE2                    :1;
        unsigned LE3                    :1;
        unsigned LE4                    :1;
        unsigned LE5                    :1;
        unsigned LE6                    :1;
        unsigned LE7                    :1;
    };
} LATEbits_t;
extern volatile LATEbits_t LATEbits __at(0xF8D);
// bitfield macros
#define _LATE_LATE0_POSN                                    0x0
#define _LATE_LATE0_POSITION                                0x0
#define _LATE_LATE0_SIZE                                    0x1
#define _LATE_LATE0_LENGTH                                  0x1
#define _LATE_LATE0_MASK                                    0x1
#define _LATE_LATE1_POSN                                    0x1
#define _LATE_LATE1_POSITION                                0x1
#define _LATE_LATE1_SIZE                                    0x1
#define _LATE_LATE1_LENGTH                                  0x1
#define _LATE_LATE1_MASK                                    0x2
#define _LATE_LATE2_POSN                                    0x2
#define _LATE_LATE2_POSITION                                0x2
#define _LATE_LATE2_SIZE                                    0x1
#define _LATE_LATE2_LENGTH                                  0x1
#define _LATE_LATE2_MASK                                    0x4
#define _LATE_LATE3_POSN                                    0x3
#define _LATE_LATE3_POSITION                                0x3
#define _LATE_LATE3_SIZE                                    0x1
#define _LATE_LATE3_LENGTH                                  0x1
#define _LATE_LATE3_MASK                                    0x8
#define _LATE_LATE4_POSN                                    0x4
#define _LATE_LATE4_POSITION                                0x4
#define _LATE_LATE4_SIZE                                    0x1
#define _LATE_LATE4_LENGTH                                  0x1
#define _LATE_LATE4_MASK                                    0x10
#define _LATE_LATE5_POSN                                    0x5
#define _LATE_LATE5_POSITION                                0x5
#define _LATE_LATE5_SIZE                                    0x1
#define _LATE_LATE5_LENGTH                                  0x1
#define _LATE_LATE5_MASK                                    0x20
#define _LATE_LATE6_POSN                                    0x6
#define _LATE_LATE6_POSITION                                0x6
#define _LATE_LATE6_SIZE                                    0x1
#define _LATE_LATE6_LENGTH                                  0x1
#define _LATE_LATE6_MASK                                    0x40
#define _LATE_LATE7_POSN                                    0x7
#define _LATE_LATE7_POSITION                                0x7
#define _LATE_LATE7_SIZE                                    0x1
#define _LATE_LATE7_LENGTH                                  0x1
#define _LATE_LATE7_MASK                                    0x80
#define _LATE_LE0_POSN                                      0x0
#define _LATE_LE0_POSITION                                  0x0
#define _LATE_LE0_SIZE                                      0x1
#define _LATE_LE0_LENGTH                                    0x1
#define _LATE_LE0_MASK                                      0x1
#define _LATE_LE1_POSN                                      0x1
#define _LATE_LE1_POSITION                                  0x1
#define _LATE_LE1_SIZE                                      0x1
#define _LATE_LE1_LENGTH                                    0x1
#define _LATE_LE1_MASK                                      0x2
#define _LATE_LE2_POSN                                      0x2
#define _LATE_LE2_POSITION                                  0x2
#define _LATE_LE2_SIZE                                      0x1
#define _LATE_LE2_LENGTH                                    0x1
#define _LATE_LE2_MASK                                      0x4
#define _LATE_LE3_POSN                                      0x3
#define _LATE_LE3_POSITION                                  0x3
#define _LATE_LE3_SIZE                                      0x1
#define _LATE_LE3_LENGTH                                    0x1
#define _LATE_LE3_MASK                                      0x8
#define _LATE_LE4_POSN                                      0x4
#define _LATE_LE4_POSITION                                  0x4
#define _LATE_LE4_SIZE                                      0x1
#define _LATE_LE4_LENGTH                                    0x1
#define _LATE_LE4_MASK                                      0x10
#define _LATE_LE5_POSN                                      0x5
#define _LATE_LE5_POSITION                                  0x5
#define _LATE_LE5_SIZE                                      0x1
#define _LATE_LE5_LENGTH                                    0x1
#define _LATE_LE5_MASK                                      0x20
#define _LATE_LE6_POSN                                      0x6
#define _LATE_LE6_POSITION                                  0x6
#define _LATE_LE6_SIZE                                      0x1
#define _LATE_LE6_LENGTH                                    0x1
#define _LATE_LE6_MASK                                      0x40
#define _LATE_LE7_POSN                                      0x7
#define _LATE_LE7_POSITION                                  0x7
#define _LATE_LE7_SIZE                                      0x1
#define _LATE_LE7_LENGTH                                    0x1
#define _LATE_LE7_MASK                                      0x80

// Register: LATF
#define LATF LATF
extern volatile unsigned char           LATF                __at(0xF8E);
#ifndef _LIB_BUILD
asm("LATF equ 0F8Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATF0                  :1;
        unsigned LATF1                  :1;
        unsigned LATF2                  :1;
        unsigned LATF3                  :1;
        unsigned LATF4                  :1;
        unsigned LATF5                  :1;
        unsigned LATF6                  :1;
        unsigned LATF7                  :1;
    };
    struct {
        unsigned LF0                    :1;
        unsigned LF1                    :1;
        unsigned LF2                    :1;
        unsigned LF3                    :1;
        unsigned LF4                    :1;
        unsigned LF5                    :1;
        unsigned LF6                    :1;
        unsigned LF7                    :1;
    };
} LATFbits_t;
extern volatile LATFbits_t LATFbits __at(0xF8E);
// bitfield macros
#define _LATF_LATF0_POSN                                    0x0
#define _LATF_LATF0_POSITION                                0x0
#define _LATF_LATF0_SIZE                                    0x1
#define _LATF_LATF0_LENGTH                                  0x1
#define _LATF_LATF0_MASK                                    0x1
#define _LATF_LATF1_POSN                                    0x1
#define _LATF_LATF1_POSITION                                0x1
#define _LATF_LATF1_SIZE                                    0x1
#define _LATF_LATF1_LENGTH                                  0x1
#define _LATF_LATF1_MASK                                    0x2
#define _LATF_LATF2_POSN                                    0x2
#define _LATF_LATF2_POSITION                                0x2
#define _LATF_LATF2_SIZE                                    0x1
#define _LATF_LATF2_LENGTH                                  0x1
#define _LATF_LATF2_MASK                                    0x4
#define _LATF_LATF3_POSN                                    0x3
#define _LATF_LATF3_POSITION                                0x3
#define _LATF_LATF3_SIZE                                    0x1
#define _LATF_LATF3_LENGTH                                  0x1
#define _LATF_LATF3_MASK                                    0x8
#define _LATF_LATF4_POSN                                    0x4
#define _LATF_LATF4_POSITION                                0x4
#define _LATF_LATF4_SIZE                                    0x1
#define _LATF_LATF4_LENGTH                                  0x1
#define _LATF_LATF4_MASK                                    0x10
#define _LATF_LATF5_POSN                                    0x5
#define _LATF_LATF5_POSITION                                0x5
#define _LATF_LATF5_SIZE                                    0x1
#define _LATF_LATF5_LENGTH                                  0x1
#define _LATF_LATF5_MASK                                    0x20
#define _LATF_LATF6_POSN                                    0x6
#define _LATF_LATF6_POSITION                                0x6
#define _LATF_LATF6_SIZE                                    0x1
#define _LATF_LATF6_LENGTH                                  0x1
#define _LATF_LATF6_MASK                                    0x40
#define _LATF_LATF7_POSN                                    0x7
#define _LATF_LATF7_POSITION                                0x7
#define _LATF_LATF7_SIZE                                    0x1
#define _LATF_LATF7_LENGTH                                  0x1
#define _LATF_LATF7_MASK                                    0x80
#define _LATF_LF0_POSN                                      0x0
#define _LATF_LF0_POSITION                                  0x0
#define _LATF_LF0_SIZE                                      0x1
#define _LATF_LF0_LENGTH                                    0x1
#define _LATF_LF0_MASK                                      0x1
#define _LATF_LF1_POSN                                      0x1
#define _LATF_LF1_POSITION                                  0x1
#define _LATF_LF1_SIZE                                      0x1
#define _LATF_LF1_LENGTH                                    0x1
#define _LATF_LF1_MASK                                      0x2
#define _LATF_LF2_POSN                                      0x2
#define _LATF_LF2_POSITION                                  0x2
#define _LATF_LF2_SIZE                                      0x1
#define _LATF_LF2_LENGTH                                    0x1
#define _LATF_LF2_MASK                                      0x4
#define _LATF_LF3_POSN                                      0x3
#define _LATF_LF3_POSITION                                  0x3
#define _LATF_LF3_SIZE                                      0x1
#define _LATF_LF3_LENGTH                                    0x1
#define _LATF_LF3_MASK                                      0x8
#define _LATF_LF4_POSN                                      0x4
#define _LATF_LF4_POSITION                                  0x4
#define _LATF_LF4_SIZE                                      0x1
#define _LATF_LF4_LENGTH                                    0x1
#define _LATF_LF4_MASK                                      0x10
#define _LATF_LF5_POSN                                      0x5
#define _LATF_LF5_POSITION                                  0x5
#define _LATF_LF5_SIZE                                      0x1
#define _LATF_LF5_LENGTH                                    0x1
#define _LATF_LF5_MASK                                      0x20
#define _LATF_LF6_POSN                                      0x6
#define _LATF_LF6_POSITION                                  0x6
#define _LATF_LF6_SIZE                                      0x1
#define _LATF_LF6_LENGTH                                    0x1
#define _LATF_LF6_MASK                                      0x40
#define _LATF_LF7_POSN                                      0x7
#define _LATF_LF7_POSITION                                  0x7
#define _LATF_LF7_SIZE                                      0x1
#define _LATF_LF7_LENGTH                                    0x1
#define _LATF_LF7_MASK                                      0x80

// Register: LATG
#define LATG LATG
extern volatile unsigned char           LATG                __at(0xF8F);
#ifndef _LIB_BUILD
asm("LATG equ 0F8Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATG0                  :1;
        unsigned LATG1                  :1;
        unsigned LATG2                  :1;
        unsigned LATG3                  :1;
        unsigned LATG4                  :1;
    };
    struct {
        unsigned LG0                    :1;
        unsigned LG1                    :1;
        unsigned LG2                    :1;
        unsigned LG3                    :1;
        unsigned LG4                    :1;
    };
} LATGbits_t;
extern volatile LATGbits_t LATGbits __at(0xF8F);
// bitfield macros
#define _LATG_LATG0_POSN                                    0x0
#define _LATG_LATG0_POSITION                                0x0
#define _LATG_LATG0_SIZE                                    0x1
#define _LATG_LATG0_LENGTH                                  0x1
#define _LATG_LATG0_MASK                                    0x1
#define _LATG_LATG1_POSN                                    0x1
#define _LATG_LATG1_POSITION                                0x1
#define _LATG_LATG1_SIZE                                    0x1
#define _LATG_LATG1_LENGTH                                  0x1
#define _LATG_LATG1_MASK                                    0x2
#define _LATG_LATG2_POSN                                    0x2
#define _LATG_LATG2_POSITION                                0x2
#define _LATG_LATG2_SIZE                                    0x1
#define _LATG_LATG2_LENGTH                                  0x1
#define _LATG_LATG2_MASK                                    0x4
#define _LATG_LATG3_POSN                                    0x3
#define _LATG_LATG3_POSITION                                0x3
#define _LATG_LATG3_SIZE                                    0x1
#define _LATG_LATG3_LENGTH                                  0x1
#define _LATG_LATG3_MASK                                    0x8
#define _LATG_LATG4_POSN                                    0x4
#define _LATG_LATG4_POSITION                                0x4
#define _LATG_LATG4_SIZE                                    0x1
#define _LATG_LATG4_LENGTH                                  0x1
#define _LATG_LATG4_MASK                                    0x10
#define _LATG_LG0_POSN                                      0x0
#define _LATG_LG0_POSITION                                  0x0
#define _LATG_LG0_SIZE                                      0x1
#define _LATG_LG0_LENGTH                                    0x1
#define _LATG_LG0_MASK                                      0x1
#define _LATG_LG1_POSN                                      0x1
#define _LATG_LG1_POSITION                                  0x1
#define _LATG_LG1_SIZE                                      0x1
#define _LATG_LG1_LENGTH                                    0x1
#define _LATG_LG1_MASK                                      0x2
#define _LATG_LG2_POSN                                      0x2
#define _LATG_LG2_POSITION                                  0x2
#define _LATG_LG2_SIZE                                      0x1
#define _LATG_LG2_LENGTH                                    0x1
#define _LATG_LG2_MASK                                      0x4
#define _LATG_LG3_POSN                                      0x3
#define _LATG_LG3_POSITION                                  0x3
#define _LATG_LG3_SIZE                                      0x1
#define _LATG_LG3_LENGTH                                    0x1
#define _LATG_LG3_MASK                                      0x8
#define _LATG_LG4_POSN                                      0x4
#define _LATG_LG4_POSITION                                  0x4
#define _LATG_LG4_SIZE                                      0x1
#define _LATG_LG4_LENGTH                                    0x1
#define _LATG_LG4_MASK                                      0x10

// Register: TRISA
#define TRISA TRISA
extern volatile unsigned char           TRISA               __at(0xF92);
#ifndef _LIB_BUILD
asm("TRISA equ 0F92h");
#endif
// aliases
extern volatile unsigned char           DDRA                __at(0xF92);
#ifndef _LIB_BUILD
asm("DDRA equ 0F92h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISA0                 :1;
        unsigned TRISA1                 :1;
        unsigned TRISA2                 :1;
        unsigned TRISA3                 :1;
        unsigned TRISA4                 :1;
        unsigned TRISA5                 :1;
        unsigned TRISA6                 :1;
    };
    struct {
        unsigned RA0                    :1;
        unsigned RA1                    :1;
        unsigned RA2                    :1;
        unsigned RA3                    :1;
        unsigned RA4                    :1;
        unsigned RA5                    :1;
        unsigned RA6                    :1;
    };
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits __at(0xF92);
// bitfield macros
#define _TRISA_TRISA0_POSN                                  0x0
#define _TRISA_TRISA0_POSITION                              0x0
#define _TRISA_TRISA0_SIZE                                  0x1
#define _TRISA_TRISA0_LENGTH                                0x1
#define _TRISA_TRISA0_MASK                                  0x1
#define _TRISA_TRISA1_POSN                                  0x1
#define _TRISA_TRISA1_POSITION                              0x1
#define _TRISA_TRISA1_SIZE                                  0x1
#define _TRISA_TRISA1_LENGTH                                0x1
#define _TRISA_TRISA1_MASK                                  0x2
#define _TRISA_TRISA2_POSN                                  0x2
#define _TRISA_TRISA2_POSITION                              0x2
#define _TRISA_TRISA2_SIZE                                  0x1
#define _TRISA_TRISA2_LENGTH                                0x1
#define _TRISA_TRISA2_MASK                                  0x4
#define _TRISA_TRISA3_POSN                                  0x3
#define _TRISA_TRISA3_POSITION                              0x3
#define _TRISA_TRISA3_SIZE                                  0x1
#define _TRISA_TRISA3_LENGTH                                0x1
#define _TRISA_TRISA3_MASK                                  0x8
#define _TRISA_TRISA4_POSN                                  0x4
#define _TRISA_TRISA4_POSITION                              0x4
#define _TRISA_TRISA4_SIZE                                  0x1
#define _TRISA_TRISA4_LENGTH                                0x1
#define _TRISA_TRISA4_MASK                                  0x10
#define _TRISA_TRISA5_POSN                                  0x5
#define _TRISA_TRISA5_POSITION                              0x5
#define _TRISA_TRISA5_SIZE                                  0x1
#define _TRISA_TRISA5_LENGTH                                0x1
#define _TRISA_TRISA5_MASK                                  0x20
#define _TRISA_TRISA6_POSN                                  0x6
#define _TRISA_TRISA6_POSITION                              0x6
#define _TRISA_TRISA6_SIZE                                  0x1
#define _TRISA_TRISA6_LENGTH                                0x1
#define _TRISA_TRISA6_MASK                                  0x40
#define _TRISA_RA0_POSN                                     0x0
#define _TRISA_RA0_POSITION                                 0x0
#define _TRISA_RA0_SIZE                                     0x1
#define _TRISA_RA0_LENGTH                                   0x1
#define _TRISA_RA0_MASK                                     0x1
#define _TRISA_RA1_POSN                                     0x1
#define _TRISA_RA1_POSITION                                 0x1
#define _TRISA_RA1_SIZE                                     0x1
#define _TRISA_RA1_LENGTH                                   0x1
#define _TRISA_RA1_MASK                                     0x2
#define _TRISA_RA2_POSN                                     0x2
#define _TRISA_RA2_POSITION                                 0x2
#define _TRISA_RA2_SIZE                                     0x1
#define _TRISA_RA2_LENGTH                                   0x1
#define _TRISA_RA2_MASK                                     0x4
#define _TRISA_RA3_POSN                                     0x3
#define _TRISA_RA3_POSITION                                 0x3
#define _TRISA_RA3_SIZE                                     0x1
#define _TRISA_RA3_LENGTH                                   0x1
#define _TRISA_RA3_MASK                                     0x8
#define _TRISA_RA4_POSN                                     0x4
#define _TRISA_RA4_POSITION                                 0x4
#define _TRISA_RA4_SIZE                                     0x1
#define _TRISA_RA4_LENGTH                                   0x1
#define _TRISA_RA4_MASK                                     0x10
#define _TRISA_RA5_POSN                                     0x5
#define _TRISA_RA5_POSITION                                 0x5
#define _TRISA_RA5_SIZE                                     0x1
#define _TRISA_RA5_LENGTH                                   0x1
#define _TRISA_RA5_MASK                                     0x20
#define _TRISA_RA6_POSN                                     0x6
#define _TRISA_RA6_POSITION                                 0x6
#define _TRISA_RA6_SIZE                                     0x1
#define _TRISA_RA6_LENGTH                                   0x1
#define _TRISA_RA6_MASK                                     0x40
// alias bitfield definitions
typedef union {
    struct {
        unsigned TRISA0                 :1;
        unsigned TRISA1                 :1;
        unsigned TRISA2                 :1;
        unsigned TRISA3                 :1;
        unsigned TRISA4                 :1;
        unsigned TRISA5                 :1;
        unsigned TRISA6                 :1;
    };
    struct {
        unsigned RA0                    :1;
        unsigned RA1                    :1;
        unsigned RA2                    :1;
        unsigned RA3                    :1;
        unsigned RA4                    :1;
        unsigned RA5                    :1;
        unsigned RA6                    :1;
    };
} DDRAbits_t;
extern volatile DDRAbits_t DDRAbits __at(0xF92);
// bitfield macros
#define _DDRA_TRISA0_POSN                                   0x0
#define _DDRA_TRISA0_POSITION                               0x0
#define _DDRA_TRISA0_SIZE                                   0x1
#define _DDRA_TRISA0_LENGTH                                 0x1
#define _DDRA_TRISA0_MASK                                   0x1
#define _DDRA_TRISA1_POSN                                   0x1
#define _DDRA_TRISA1_POSITION                               0x1
#define _DDRA_TRISA1_SIZE                                   0x1
#define _DDRA_TRISA1_LENGTH                                 0x1
#define _DDRA_TRISA1_MASK                                   0x2
#define _DDRA_TRISA2_POSN                                   0x2
#define _DDRA_TRISA2_POSITION                               0x2
#define _DDRA_TRISA2_SIZE                                   0x1
#define _DDRA_TRISA2_LENGTH                                 0x1
#define _DDRA_TRISA2_MASK                                   0x4
#define _DDRA_TRISA3_POSN                                   0x3
#define _DDRA_TRISA3_POSITION                               0x3
#define _DDRA_TRISA3_SIZE                                   0x1
#define _DDRA_TRISA3_LENGTH                                 0x1
#define _DDRA_TRISA3_MASK                                   0x8
#define _DDRA_TRISA4_POSN                                   0x4
#define _DDRA_TRISA4_POSITION                               0x4
#define _DDRA_TRISA4_SIZE                                   0x1
#define _DDRA_TRISA4_LENGTH                                 0x1
#define _DDRA_TRISA4_MASK                                   0x10
#define _DDRA_TRISA5_POSN                                   0x5
#define _DDRA_TRISA5_POSITION                               0x5
#define _DDRA_TRISA5_SIZE                                   0x1
#define _DDRA_TRISA5_LENGTH                                 0x1
#define _DDRA_TRISA5_MASK                                   0x20
#define _DDRA_TRISA6_POSN                                   0x6
#define _DDRA_TRISA6_POSITION                               0x6
#define _DDRA_TRISA6_SIZE                                   0x1
#define _DDRA_TRISA6_LENGTH                                 0x1
#define _DDRA_TRISA6_MASK                                   0x40
#define _DDRA_RA0_POSN                                      0x0
#define _DDRA_RA0_POSITION                                  0x0
#define _DDRA_RA0_SIZE                                      0x1
#define _DDRA_RA0_LENGTH                                    0x1
#define _DDRA_RA0_MASK                                      0x1
#define _DDRA_RA1_POSN                                      0x1
#define _DDRA_RA1_POSITION                                  0x1
#define _DDRA_RA1_SIZE                                      0x1
#define _DDRA_RA1_LENGTH                                    0x1
#define _DDRA_RA1_MASK                                      0x2
#define _DDRA_RA2_POSN                                      0x2
#define _DDRA_RA2_POSITION                                  0x2
#define _DDRA_RA2_SIZE                                      0x1
#define _DDRA_RA2_LENGTH                                    0x1
#define _DDRA_RA2_MASK                                      0x4
#define _DDRA_RA3_POSN                                      0x3
#define _DDRA_RA3_POSITION                                  0x3
#define _DDRA_RA3_SIZE                                      0x1
#define _DDRA_RA3_LENGTH                                    0x1
#define _DDRA_RA3_MASK                                      0x8
#define _DDRA_RA4_POSN                                      0x4
#define _DDRA_RA4_POSITION                                  0x4
#define _DDRA_RA4_SIZE                                      0x1
#define _DDRA_RA4_LENGTH                                    0x1
#define _DDRA_RA4_MASK                                      0x10
#define _DDRA_RA5_POSN                                      0x5
#define _DDRA_RA5_POSITION                                  0x5
#define _DDRA_RA5_SIZE                                      0x1
#define _DDRA_RA5_LENGTH                                    0x1
#define _DDRA_RA5_MASK                                      0x20
#define _DDRA_RA6_POSN                                      0x6
#define _DDRA_RA6_POSITION                                  0x6
#define _DDRA_RA6_SIZE                                      0x1
#define _DDRA_RA6_LENGTH                                    0x1
#define _DDRA_RA6_MASK                                      0x40

// Register: TRISB
#define TRISB TRISB
extern volatile unsigned char           TRISB               __at(0xF93);
#ifndef _LIB_BUILD
asm("TRISB equ 0F93h");
#endif
// aliases
extern volatile unsigned char           DDRB                __at(0xF93);
#ifndef _LIB_BUILD
asm("DDRB equ 0F93h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISB0                 :1;
        unsigned TRISB1                 :1;
        unsigned TRISB2                 :1;
        unsigned TRISB3                 :1;
        unsigned TRISB4                 :1;
        unsigned TRISB5                 :1;
        unsigned TRISB6                 :1;
        unsigned TRISB7                 :1;
    };
    struct {
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RB2                    :1;
        unsigned RB3                    :1;
        unsigned RB4                    :1;
        unsigned RB5                    :1;
        unsigned RB6                    :1;
        unsigned RB7                    :1;
    };
} TRISBbits_t;
extern volatile TRISBbits_t TRISBbits __at(0xF93);
// bitfield macros
#define _TRISB_TRISB0_POSN                                  0x0
#define _TRISB_TRISB0_POSITION                              0x0
#define _TRISB_TRISB0_SIZE                                  0x1
#define _TRISB_TRISB0_LENGTH                                0x1
#define _TRISB_TRISB0_MASK                                  0x1
#define _TRISB_TRISB1_POSN                                  0x1
#define _TRISB_TRISB1_POSITION                              0x1
#define _TRISB_TRISB1_SIZE                                  0x1
#define _TRISB_TRISB1_LENGTH                                0x1
#define _TRISB_TRISB1_MASK                                  0x2
#define _TRISB_TRISB2_POSN                                  0x2
#define _TRISB_TRISB2_POSITION                              0x2
#define _TRISB_TRISB2_SIZE                                  0x1
#define _TRISB_TRISB2_LENGTH                                0x1
#define _TRISB_TRISB2_MASK                                  0x4
#define _TRISB_TRISB3_POSN                                  0x3
#define _TRISB_TRISB3_POSITION                              0x3
#define _TRISB_TRISB3_SIZE                                  0x1
#define _TRISB_TRISB3_LENGTH                                0x1
#define _TRISB_TRISB3_MASK                                  0x8
#define _TRISB_TRISB4_POSN                                  0x4
#define _TRISB_TRISB4_POSITION                              0x4
#define _TRISB_TRISB4_SIZE                                  0x1
#define _TRISB_TRISB4_LENGTH                                0x1
#define _TRISB_TRISB4_MASK                                  0x10
#define _TRISB_TRISB5_POSN                                  0x5
#define _TRISB_TRISB5_POSITION                              0x5
#define _TRISB_TRISB5_SIZE                                  0x1
#define _TRISB_TRISB5_LENGTH                                0x1
#define _TRISB_TRISB5_MASK                                  0x20
#define _TRISB_TRISB6_POSN                                  0x6
#define _TRISB_TRISB6_POSITION                              0x6
#define _TRISB_TRISB6_SIZE                                  0x1
#define _TRISB_TRISB6_LENGTH                                0x1
#define _TRISB_TRISB6_MASK                                  0x40
#define _TRISB_TRISB7_POSN                                  0x7
#define _TRISB_TRISB7_POSITION                              0x7
#define _TRISB_TRISB7_SIZE                                  0x1
#define _TRISB_TRISB7_LENGTH                                0x1
#define _TRISB_TRISB7_MASK                                  0x80
#define _TRISB_RB0_POSN                                     0x0
#define _TRISB_RB0_POSITION                                 0x0
#define _TRISB_RB0_SIZE                                     0x1
#define _TRISB_RB0_LENGTH                                   0x1
#define _TRISB_RB0_MASK                                     0x1
#define _TRISB_RB1_POSN                                     0x1
#define _TRISB_RB1_POSITION                                 0x1
#define _TRISB_RB1_SIZE                                     0x1
#define _TRISB_RB1_LENGTH                                   0x1
#define _TRISB_RB1_MASK                                     0x2
#define _TRISB_RB2_POSN                                     0x2
#define _TRISB_RB2_POSITION                                 0x2
#define _TRISB_RB2_SIZE                                     0x1
#define _TRISB_RB2_LENGTH                                   0x1
#define _TRISB_RB2_MASK                                     0x4
#define _TRISB_RB3_POSN                                     0x3
#define _TRISB_RB3_POSITION                                 0x3
#define _TRISB_RB3_SIZE                                     0x1
#define _TRISB_RB3_LENGTH                                   0x1
#define _TRISB_RB3_MASK                                     0x8
#define _TRISB_RB4_POSN                                     0x4
#define _TRISB_RB4_POSITION                                 0x4
#define _TRISB_RB4_SIZE                                     0x1
#define _TRISB_RB4_LENGTH                                   0x1
#define _TRISB_RB4_MASK                                     0x10
#define _TRISB_RB5_POSN                                     0x5
#define _TRISB_RB5_POSITION                                 0x5
#define _TRISB_RB5_SIZE                                     0x1
#define _TRISB_RB5_LENGTH                                   0x1
#define _TRISB_RB5_MASK                                     0x20
#define _TRISB_RB6_POSN                                     0x6
#define _TRISB_RB6_POSITION                                 0x6
#define _TRISB_RB6_SIZE                                     0x1
#define _TRISB_RB6_LENGTH                                   0x1
#define _TRISB_RB6_MASK                                     0x40
#define _TRISB_RB7_POSN                                     0x7
#define _TRISB_RB7_POSITION                                 0x7
#define _TRISB_RB7_SIZE                                     0x1
#define _TRISB_RB7_LENGTH                                   0x1
#define _TRISB_RB7_MASK                                     0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TRISB0                 :1;
        unsigned TRISB1                 :1;
        unsigned TRISB2                 :1;
        unsigned TRISB3                 :1;
        unsigned TRISB4                 :1;
        unsigned TRISB5                 :1;
        unsigned TRISB6                 :1;
        unsigned TRISB7                 :1;
    };
    struct {
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RB2                    :1;
        unsigned RB3                    :1;
        unsigned RB4                    :1;
        unsigned RB5                    :1;
        unsigned RB6                    :1;
        unsigned RB7                    :1;
    };
} DDRBbits_t;
extern volatile DDRBbits_t DDRBbits __at(0xF93);
// bitfield macros
#define _DDRB_TRISB0_POSN                                   0x0
#define _DDRB_TRISB0_POSITION                               0x0
#define _DDRB_TRISB0_SIZE                                   0x1
#define _DDRB_TRISB0_LENGTH                                 0x1
#define _DDRB_TRISB0_MASK                                   0x1
#define _DDRB_TRISB1_POSN                                   0x1
#define _DDRB_TRISB1_POSITION                               0x1
#define _DDRB_TRISB1_SIZE                                   0x1
#define _DDRB_TRISB1_LENGTH                                 0x1
#define _DDRB_TRISB1_MASK                                   0x2
#define _DDRB_TRISB2_POSN                                   0x2
#define _DDRB_TRISB2_POSITION                               0x2
#define _DDRB_TRISB2_SIZE                                   0x1
#define _DDRB_TRISB2_LENGTH                                 0x1
#define _DDRB_TRISB2_MASK                                   0x4
#define _DDRB_TRISB3_POSN                                   0x3
#define _DDRB_TRISB3_POSITION                               0x3
#define _DDRB_TRISB3_SIZE                                   0x1
#define _DDRB_TRISB3_LENGTH                                 0x1
#define _DDRB_TRISB3_MASK                                   0x8
#define _DDRB_TRISB4_POSN                                   0x4
#define _DDRB_TRISB4_POSITION                               0x4
#define _DDRB_TRISB4_SIZE                                   0x1
#define _DDRB_TRISB4_LENGTH                                 0x1
#define _DDRB_TRISB4_MASK                                   0x10
#define _DDRB_TRISB5_POSN                                   0x5
#define _DDRB_TRISB5_POSITION                               0x5
#define _DDRB_TRISB5_SIZE                                   0x1
#define _DDRB_TRISB5_LENGTH                                 0x1
#define _DDRB_TRISB5_MASK                                   0x20
#define _DDRB_TRISB6_POSN                                   0x6
#define _DDRB_TRISB6_POSITION                               0x6
#define _DDRB_TRISB6_SIZE                                   0x1
#define _DDRB_TRISB6_LENGTH                                 0x1
#define _DDRB_TRISB6_MASK                                   0x40
#define _DDRB_TRISB7_POSN                                   0x7
#define _DDRB_TRISB7_POSITION                               0x7
#define _DDRB_TRISB7_SIZE                                   0x1
#define _DDRB_TRISB7_LENGTH                                 0x1
#define _DDRB_TRISB7_MASK                                   0x80
#define _DDRB_RB0_POSN                                      0x0
#define _DDRB_RB0_POSITION                                  0x0
#define _DDRB_RB0_SIZE                                      0x1
#define _DDRB_RB0_LENGTH                                    0x1
#define _DDRB_RB0_MASK                                      0x1
#define _DDRB_RB1_POSN                                      0x1
#define _DDRB_RB1_POSITION                                  0x1
#define _DDRB_RB1_SIZE                                      0x1
#define _DDRB_RB1_LENGTH                                    0x1
#define _DDRB_RB1_MASK                                      0x2
#define _DDRB_RB2_POSN                                      0x2
#define _DDRB_RB2_POSITION                                  0x2
#define _DDRB_RB2_SIZE                                      0x1
#define _DDRB_RB2_LENGTH                                    0x1
#define _DDRB_RB2_MASK                                      0x4
#define _DDRB_RB3_POSN                                      0x3
#define _DDRB_RB3_POSITION                                  0x3
#define _DDRB_RB3_SIZE                                      0x1
#define _DDRB_RB3_LENGTH                                    0x1
#define _DDRB_RB3_MASK                                      0x8
#define _DDRB_RB4_POSN                                      0x4
#define _DDRB_RB4_POSITION                                  0x4
#define _DDRB_RB4_SIZE                                      0x1
#define _DDRB_RB4_LENGTH                                    0x1
#define _DDRB_RB4_MASK                                      0x10
#define _DDRB_RB5_POSN                                      0x5
#define _DDRB_RB5_POSITION                                  0x5
#define _DDRB_RB5_SIZE                                      0x1
#define _DDRB_RB5_LENGTH                                    0x1
#define _DDRB_RB5_MASK                                      0x20
#define _DDRB_RB6_POSN                                      0x6
#define _DDRB_RB6_POSITION                                  0x6
#define _DDRB_RB6_SIZE                                      0x1
#define _DDRB_RB6_LENGTH                                    0x1
#define _DDRB_RB6_MASK                                      0x40
#define _DDRB_RB7_POSN                                      0x7
#define _DDRB_RB7_POSITION                                  0x7
#define _DDRB_RB7_SIZE                                      0x1
#define _DDRB_RB7_LENGTH                                    0x1
#define _DDRB_RB7_MASK                                      0x80

// Register: TRISC
#define TRISC TRISC
extern volatile unsigned char           TRISC               __at(0xF94);
#ifndef _LIB_BUILD
asm("TRISC equ 0F94h");
#endif
// aliases
extern volatile unsigned char           DDRC                __at(0xF94);
#ifndef _LIB_BUILD
asm("DDRC equ 0F94h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISC0                 :1;
        unsigned TRISC1                 :1;
        unsigned TRISC2                 :1;
        unsigned TRISC3                 :1;
        unsigned TRISC4                 :1;
        unsigned TRISC5                 :1;
        unsigned TRISC6                 :1;
        unsigned TRISC7                 :1;
    };
    struct {
        unsigned RC0                    :1;
        unsigned RC1                    :1;
        unsigned RC2                    :1;
        unsigned RC3                    :1;
        unsigned RC4                    :1;
        unsigned RC5                    :1;
        unsigned RC6                    :1;
        unsigned RC7                    :1;
    };
} TRISCbits_t;
extern volatile TRISCbits_t TRISCbits __at(0xF94);
// bitfield macros
#define _TRISC_TRISC0_POSN                                  0x0
#define _TRISC_TRISC0_POSITION                              0x0
#define _TRISC_TRISC0_SIZE                                  0x1
#define _TRISC_TRISC0_LENGTH                                0x1
#define _TRISC_TRISC0_MASK                                  0x1
#define _TRISC_TRISC1_POSN                                  0x1
#define _TRISC_TRISC1_POSITION                              0x1
#define _TRISC_TRISC1_SIZE                                  0x1
#define _TRISC_TRISC1_LENGTH                                0x1
#define _TRISC_TRISC1_MASK                                  0x2
#define _TRISC_TRISC2_POSN                                  0x2
#define _TRISC_TRISC2_POSITION                              0x2
#define _TRISC_TRISC2_SIZE                                  0x1
#define _TRISC_TRISC2_LENGTH                                0x1
#define _TRISC_TRISC2_MASK                                  0x4
#define _TRISC_TRISC3_POSN                                  0x3
#define _TRISC_TRISC3_POSITION                              0x3
#define _TRISC_TRISC3_SIZE                                  0x1
#define _TRISC_TRISC3_LENGTH                                0x1
#define _TRISC_TRISC3_MASK                                  0x8
#define _TRISC_TRISC4_POSN                                  0x4
#define _TRISC_TRISC4_POSITION                              0x4
#define _TRISC_TRISC4_SIZE                                  0x1
#define _TRISC_TRISC4_LENGTH                                0x1
#define _TRISC_TRISC4_MASK                                  0x10
#define _TRISC_TRISC5_POSN                                  0x5
#define _TRISC_TRISC5_POSITION                              0x5
#define _TRISC_TRISC5_SIZE                                  0x1
#define _TRISC_TRISC5_LENGTH                                0x1
#define _TRISC_TRISC5_MASK                                  0x20
#define _TRISC_TRISC6_POSN                                  0x6
#define _TRISC_TRISC6_POSITION                              0x6
#define _TRISC_TRISC6_SIZE                                  0x1
#define _TRISC_TRISC6_LENGTH                                0x1
#define _TRISC_TRISC6_MASK                                  0x40
#define _TRISC_TRISC7_POSN                                  0x7
#define _TRISC_TRISC7_POSITION                              0x7
#define _TRISC_TRISC7_SIZE                                  0x1
#define _TRISC_TRISC7_LENGTH                                0x1
#define _TRISC_TRISC7_MASK                                  0x80
#define _TRISC_RC0_POSN                                     0x0
#define _TRISC_RC0_POSITION                                 0x0
#define _TRISC_RC0_SIZE                                     0x1
#define _TRISC_RC0_LENGTH                                   0x1
#define _TRISC_RC0_MASK                                     0x1
#define _TRISC_RC1_POSN                                     0x1
#define _TRISC_RC1_POSITION                                 0x1
#define _TRISC_RC1_SIZE                                     0x1
#define _TRISC_RC1_LENGTH                                   0x1
#define _TRISC_RC1_MASK                                     0x2
#define _TRISC_RC2_POSN                                     0x2
#define _TRISC_RC2_POSITION                                 0x2
#define _TRISC_RC2_SIZE                                     0x1
#define _TRISC_RC2_LENGTH                                   0x1
#define _TRISC_RC2_MASK                                     0x4
#define _TRISC_RC3_POSN                                     0x3
#define _TRISC_RC3_POSITION                                 0x3
#define _TRISC_RC3_SIZE                                     0x1
#define _TRISC_RC3_LENGTH                                   0x1
#define _TRISC_RC3_MASK                                     0x8
#define _TRISC_RC4_POSN                                     0x4
#define _TRISC_RC4_POSITION                                 0x4
#define _TRISC_RC4_SIZE                                     0x1
#define _TRISC_RC4_LENGTH                                   0x1
#define _TRISC_RC4_MASK                                     0x10
#define _TRISC_RC5_POSN                                     0x5
#define _TRISC_RC5_POSITION                                 0x5
#define _TRISC_RC5_SIZE                                     0x1
#define _TRISC_RC5_LENGTH                                   0x1
#define _TRISC_RC5_MASK                                     0x20
#define _TRISC_RC6_POSN                                     0x6
#define _TRISC_RC6_POSITION                                 0x6
#define _TRISC_RC6_SIZE                                     0x1
#define _TRISC_RC6_LENGTH                                   0x1
#define _TRISC_RC6_MASK                                     0x40
#define _TRISC_RC7_POSN                                     0x7
#define _TRISC_RC7_POSITION                                 0x7
#define _TRISC_RC7_SIZE                                     0x1
#define _TRISC_RC7_LENGTH                                   0x1
#define _TRISC_RC7_MASK                                     0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TRISC0                 :1;
        unsigned TRISC1                 :1;
        unsigned TRISC2                 :1;
        unsigned TRISC3                 :1;
        unsigned TRISC4                 :1;
        unsigned TRISC5                 :1;
        unsigned TRISC6                 :1;
        unsigned TRISC7                 :1;
    };
    struct {
        unsigned RC0                    :1;
        unsigned RC1                    :1;
        unsigned RC2                    :1;
        unsigned RC3                    :1;
        unsigned RC4                    :1;
        unsigned RC5                    :1;
        unsigned RC6                    :1;
        unsigned RC7                    :1;
    };
} DDRCbits_t;
extern volatile DDRCbits_t DDRCbits __at(0xF94);
// bitfield macros
#define _DDRC_TRISC0_POSN                                   0x0
#define _DDRC_TRISC0_POSITION                               0x0
#define _DDRC_TRISC0_SIZE                                   0x1
#define _DDRC_TRISC0_LENGTH                                 0x1
#define _DDRC_TRISC0_MASK                                   0x1
#define _DDRC_TRISC1_POSN                                   0x1
#define _DDRC_TRISC1_POSITION                               0x1
#define _DDRC_TRISC1_SIZE                                   0x1
#define _DDRC_TRISC1_LENGTH                                 0x1
#define _DDRC_TRISC1_MASK                                   0x2
#define _DDRC_TRISC2_POSN                                   0x2
#define _DDRC_TRISC2_POSITION                               0x2
#define _DDRC_TRISC2_SIZE                                   0x1
#define _DDRC_TRISC2_LENGTH                                 0x1
#define _DDRC_TRISC2_MASK                                   0x4
#define _DDRC_TRISC3_POSN                                   0x3
#define _DDRC_TRISC3_POSITION                               0x3
#define _DDRC_TRISC3_SIZE                                   0x1
#define _DDRC_TRISC3_LENGTH                                 0x1
#define _DDRC_TRISC3_MASK                                   0x8
#define _DDRC_TRISC4_POSN                                   0x4
#define _DDRC_TRISC4_POSITION                               0x4
#define _DDRC_TRISC4_SIZE                                   0x1
#define _DDRC_TRISC4_LENGTH                                 0x1
#define _DDRC_TRISC4_MASK                                   0x10
#define _DDRC_TRISC5_POSN                                   0x5
#define _DDRC_TRISC5_POSITION                               0x5
#define _DDRC_TRISC5_SIZE                                   0x1
#define _DDRC_TRISC5_LENGTH                                 0x1
#define _DDRC_TRISC5_MASK                                   0x20
#define _DDRC_TRISC6_POSN                                   0x6
#define _DDRC_TRISC6_POSITION                               0x6
#define _DDRC_TRISC6_SIZE                                   0x1
#define _DDRC_TRISC6_LENGTH                                 0x1
#define _DDRC_TRISC6_MASK                                   0x40
#define _DDRC_TRISC7_POSN                                   0x7
#define _DDRC_TRISC7_POSITION                               0x7
#define _DDRC_TRISC7_SIZE                                   0x1
#define _DDRC_TRISC7_LENGTH                                 0x1
#define _DDRC_TRISC7_MASK                                   0x80
#define _DDRC_RC0_POSN                                      0x0
#define _DDRC_RC0_POSITION                                  0x0
#define _DDRC_RC0_SIZE                                      0x1
#define _DDRC_RC0_LENGTH                                    0x1
#define _DDRC_RC0_MASK                                      0x1
#define _DDRC_RC1_POSN                                      0x1
#define _DDRC_RC1_POSITION                                  0x1
#define _DDRC_RC1_SIZE                                      0x1
#define _DDRC_RC1_LENGTH                                    0x1
#define _DDRC_RC1_MASK                                      0x2
#define _DDRC_RC2_POSN                                      0x2
#define _DDRC_RC2_POSITION                                  0x2
#define _DDRC_RC2_SIZE                                      0x1
#define _DDRC_RC2_LENGTH                                    0x1
#define _DDRC_RC2_MASK                                      0x4
#define _DDRC_RC3_POSN                                      0x3
#define _DDRC_RC3_POSITION                                  0x3
#define _DDRC_RC3_SIZE                                      0x1
#define _DDRC_RC3_LENGTH                                    0x1
#define _DDRC_RC3_MASK                                      0x8
#define _DDRC_RC4_POSN                                      0x4
#define _DDRC_RC4_POSITION                                  0x4
#define _DDRC_RC4_SIZE                                      0x1
#define _DDRC_RC4_LENGTH                                    0x1
#define _DDRC_RC4_MASK                                      0x10
#define _DDRC_RC5_POSN                                      0x5
#define _DDRC_RC5_POSITION                                  0x5
#define _DDRC_RC5_SIZE                                      0x1
#define _DDRC_RC5_LENGTH                                    0x1
#define _DDRC_RC5_MASK                                      0x20
#define _DDRC_RC6_POSN                                      0x6
#define _DDRC_RC6_POSITION                                  0x6
#define _DDRC_RC6_SIZE                                      0x1
#define _DDRC_RC6_LENGTH                                    0x1
#define _DDRC_RC6_MASK                                      0x40
#define _DDRC_RC7_POSN                                      0x7
#define _DDRC_RC7_POSITION                                  0x7
#define _DDRC_RC7_SIZE                                      0x1
#define _DDRC_RC7_LENGTH                                    0x1
#define _DDRC_RC7_MASK                                      0x80

// Register: TRISD
#define TRISD TRISD
extern volatile unsigned char           TRISD               __at(0xF95);
#ifndef _LIB_BUILD
asm("TRISD equ 0F95h");
#endif
// aliases
extern volatile unsigned char           DDRD                __at(0xF95);
#ifndef _LIB_BUILD
asm("DDRD equ 0F95h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISD0                 :1;
        unsigned TRISD1                 :1;
        unsigned TRISD2                 :1;
        unsigned TRISD3                 :1;
        unsigned TRISD4                 :1;
        unsigned TRISD5                 :1;
        unsigned TRISD6                 :1;
        unsigned TRISD7                 :1;
    };
    struct {
        unsigned RD0                    :1;
        unsigned RD1                    :1;
        unsigned RD2                    :1;
        unsigned RD3                    :1;
        unsigned RD4                    :1;
        unsigned RD5                    :1;
        unsigned RD6                    :1;
        unsigned RD7                    :1;
    };
} TRISDbits_t;
extern volatile TRISDbits_t TRISDbits __at(0xF95);
// bitfield macros
#define _TRISD_TRISD0_POSN                                  0x0
#define _TRISD_TRISD0_POSITION                              0x0
#define _TRISD_TRISD0_SIZE                                  0x1
#define _TRISD_TRISD0_LENGTH                                0x1
#define _TRISD_TRISD0_MASK                                  0x1
#define _TRISD_TRISD1_POSN                                  0x1
#define _TRISD_TRISD1_POSITION                              0x1
#define _TRISD_TRISD1_SIZE                                  0x1
#define _TRISD_TRISD1_LENGTH                                0x1
#define _TRISD_TRISD1_MASK                                  0x2
#define _TRISD_TRISD2_POSN                                  0x2
#define _TRISD_TRISD2_POSITION                              0x2
#define _TRISD_TRISD2_SIZE                                  0x1
#define _TRISD_TRISD2_LENGTH                                0x1
#define _TRISD_TRISD2_MASK                                  0x4
#define _TRISD_TRISD3_POSN                                  0x3
#define _TRISD_TRISD3_POSITION                              0x3
#define _TRISD_TRISD3_SIZE                                  0x1
#define _TRISD_TRISD3_LENGTH                                0x1
#define _TRISD_TRISD3_MASK                                  0x8
#define _TRISD_TRISD4_POSN                                  0x4
#define _TRISD_TRISD4_POSITION                              0x4
#define _TRISD_TRISD4_SIZE                                  0x1
#define _TRISD_TRISD4_LENGTH                                0x1
#define _TRISD_TRISD4_MASK                                  0x10
#define _TRISD_TRISD5_POSN                                  0x5
#define _TRISD_TRISD5_POSITION                              0x5
#define _TRISD_TRISD5_SIZE                                  0x1
#define _TRISD_TRISD5_LENGTH                                0x1
#define _TRISD_TRISD5_MASK                                  0x20
#define _TRISD_TRISD6_POSN                                  0x6
#define _TRISD_TRISD6_POSITION                              0x6
#define _TRISD_TRISD6_SIZE                                  0x1
#define _TRISD_TRISD6_LENGTH                                0x1
#define _TRISD_TRISD6_MASK                                  0x40
#define _TRISD_TRISD7_POSN                                  0x7
#define _TRISD_TRISD7_POSITION                              0x7
#define _TRISD_TRISD7_SIZE                                  0x1
#define _TRISD_TRISD7_LENGTH                                0x1
#define _TRISD_TRISD7_MASK                                  0x80
#define _TRISD_RD0_POSN                                     0x0
#define _TRISD_RD0_POSITION                                 0x0
#define _TRISD_RD0_SIZE                                     0x1
#define _TRISD_RD0_LENGTH                                   0x1
#define _TRISD_RD0_MASK                                     0x1
#define _TRISD_RD1_POSN                                     0x1
#define _TRISD_RD1_POSITION                                 0x1
#define _TRISD_RD1_SIZE                                     0x1
#define _TRISD_RD1_LENGTH                                   0x1
#define _TRISD_RD1_MASK                                     0x2
#define _TRISD_RD2_POSN                                     0x2
#define _TRISD_RD2_POSITION                                 0x2
#define _TRISD_RD2_SIZE                                     0x1
#define _TRISD_RD2_LENGTH                                   0x1
#define _TRISD_RD2_MASK                                     0x4
#define _TRISD_RD3_POSN                                     0x3
#define _TRISD_RD3_POSITION                                 0x3
#define _TRISD_RD3_SIZE                                     0x1
#define _TRISD_RD3_LENGTH                                   0x1
#define _TRISD_RD3_MASK                                     0x8
#define _TRISD_RD4_POSN                                     0x4
#define _TRISD_RD4_POSITION                                 0x4
#define _TRISD_RD4_SIZE                                     0x1
#define _TRISD_RD4_LENGTH                                   0x1
#define _TRISD_RD4_MASK                                     0x10
#define _TRISD_RD5_POSN                                     0x5
#define _TRISD_RD5_POSITION                                 0x5
#define _TRISD_RD5_SIZE                                     0x1
#define _TRISD_RD5_LENGTH                                   0x1
#define _TRISD_RD5_MASK                                     0x20
#define _TRISD_RD6_POSN                                     0x6
#define _TRISD_RD6_POSITION                                 0x6
#define _TRISD_RD6_SIZE                                     0x1
#define _TRISD_RD6_LENGTH                                   0x1
#define _TRISD_RD6_MASK                                     0x40
#define _TRISD_RD7_POSN                                     0x7
#define _TRISD_RD7_POSITION                                 0x7
#define _TRISD_RD7_SIZE                                     0x1
#define _TRISD_RD7_LENGTH                                   0x1
#define _TRISD_RD7_MASK                                     0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TRISD0                 :1;
        unsigned TRISD1                 :1;
        unsigned TRISD2                 :1;
        unsigned TRISD3                 :1;
        unsigned TRISD4                 :1;
        unsigned TRISD5                 :1;
        unsigned TRISD6                 :1;
        unsigned TRISD7                 :1;
    };
    struct {
        unsigned RD0                    :1;
        unsigned RD1                    :1;
        unsigned RD2                    :1;
        unsigned RD3                    :1;
        unsigned RD4                    :1;
        unsigned RD5                    :1;
        unsigned RD6                    :1;
        unsigned RD7                    :1;
    };
} DDRDbits_t;
extern volatile DDRDbits_t DDRDbits __at(0xF95);
// bitfield macros
#define _DDRD_TRISD0_POSN                                   0x0
#define _DDRD_TRISD0_POSITION                               0x0
#define _DDRD_TRISD0_SIZE                                   0x1
#define _DDRD_TRISD0_LENGTH                                 0x1
#define _DDRD_TRISD0_MASK                                   0x1
#define _DDRD_TRISD1_POSN                                   0x1
#define _DDRD_TRISD1_POSITION                               0x1
#define _DDRD_TRISD1_SIZE                                   0x1
#define _DDRD_TRISD1_LENGTH                                 0x1
#define _DDRD_TRISD1_MASK                                   0x2
#define _DDRD_TRISD2_POSN                                   0x2
#define _DDRD_TRISD2_POSITION                               0x2
#define _DDRD_TRISD2_SIZE                                   0x1
#define _DDRD_TRISD2_LENGTH                                 0x1
#define _DDRD_TRISD2_MASK                                   0x4
#define _DDRD_TRISD3_POSN                                   0x3
#define _DDRD_TRISD3_POSITION                               0x3
#define _DDRD_TRISD3_SIZE                                   0x1
#define _DDRD_TRISD3_LENGTH                                 0x1
#define _DDRD_TRISD3_MASK                                   0x8
#define _DDRD_TRISD4_POSN                                   0x4
#define _DDRD_TRISD4_POSITION                               0x4
#define _DDRD_TRISD4_SIZE                                   0x1
#define _DDRD_TRISD4_LENGTH                                 0x1
#define _DDRD_TRISD4_MASK                                   0x10
#define _DDRD_TRISD5_POSN                                   0x5
#define _DDRD_TRISD5_POSITION                               0x5
#define _DDRD_TRISD5_SIZE                                   0x1
#define _DDRD_TRISD5_LENGTH                                 0x1
#define _DDRD_TRISD5_MASK                                   0x20
#define _DDRD_TRISD6_POSN                                   0x6
#define _DDRD_TRISD6_POSITION                               0x6
#define _DDRD_TRISD6_SIZE                                   0x1
#define _DDRD_TRISD6_LENGTH                                 0x1
#define _DDRD_TRISD6_MASK                                   0x40
#define _DDRD_TRISD7_POSN                                   0x7
#define _DDRD_TRISD7_POSITION                               0x7
#define _DDRD_TRISD7_SIZE                                   0x1
#define _DDRD_TRISD7_LENGTH                                 0x1
#define _DDRD_TRISD7_MASK                                   0x80
#define _DDRD_RD0_POSN                                      0x0
#define _DDRD_RD0_POSITION                                  0x0
#define _DDRD_RD0_SIZE                                      0x1
#define _DDRD_RD0_LENGTH                                    0x1
#define _DDRD_RD0_MASK                                      0x1
#define _DDRD_RD1_POSN                                      0x1
#define _DDRD_RD1_POSITION                                  0x1
#define _DDRD_RD1_SIZE                                      0x1
#define _DDRD_RD1_LENGTH                                    0x1
#define _DDRD_RD1_MASK                                      0x2
#define _DDRD_RD2_POSN                                      0x2
#define _DDRD_RD2_POSITION                                  0x2
#define _DDRD_RD2_SIZE                                      0x1
#define _DDRD_RD2_LENGTH                                    0x1
#define _DDRD_RD2_MASK                                      0x4
#define _DDRD_RD3_POSN                                      0x3
#define _DDRD_RD3_POSITION                                  0x3
#define _DDRD_RD3_SIZE                                      0x1
#define _DDRD_RD3_LENGTH                                    0x1
#define _DDRD_RD3_MASK                                      0x8
#define _DDRD_RD4_POSN                                      0x4
#define _DDRD_RD4_POSITION                                  0x4
#define _DDRD_RD4_SIZE                                      0x1
#define _DDRD_RD4_LENGTH                                    0x1
#define _DDRD_RD4_MASK                                      0x10
#define _DDRD_RD5_POSN                                      0x5
#define _DDRD_RD5_POSITION                                  0x5
#define _DDRD_RD5_SIZE                                      0x1
#define _DDRD_RD5_LENGTH                                    0x1
#define _DDRD_RD5_MASK                                      0x20
#define _DDRD_RD6_POSN                                      0x6
#define _DDRD_RD6_POSITION                                  0x6
#define _DDRD_RD6_SIZE                                      0x1
#define _DDRD_RD6_LENGTH                                    0x1
#define _DDRD_RD6_MASK                                      0x40
#define _DDRD_RD7_POSN                                      0x7
#define _DDRD_RD7_POSITION                                  0x7
#define _DDRD_RD7_SIZE                                      0x1
#define _DDRD_RD7_LENGTH                                    0x1
#define _DDRD_RD7_MASK                                      0x80

// Register: TRISE
#define TRISE TRISE
extern volatile unsigned char           TRISE               __at(0xF96);
#ifndef _LIB_BUILD
asm("TRISE equ 0F96h");
#endif
// aliases
extern volatile unsigned char           DDRE                __at(0xF96);
#ifndef _LIB_BUILD
asm("DDRE equ 0F96h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISE0                 :1;
        unsigned TRISE1                 :1;
        unsigned TRISE2                 :1;
        unsigned TRISE3                 :1;
        unsigned TRISE4                 :1;
        unsigned TRISE5                 :1;
        unsigned TRISE6                 :1;
        unsigned TRISE7                 :1;
    };
    struct {
        unsigned RE0                    :1;
        unsigned RE1                    :1;
        unsigned RE2                    :1;
        unsigned RE3                    :1;
        unsigned RE4                    :1;
        unsigned RE5                    :1;
        unsigned RE6                    :1;
        unsigned RE7                    :1;
    };
} TRISEbits_t;
extern volatile TRISEbits_t TRISEbits __at(0xF96);
// bitfield macros
#define _TRISE_TRISE0_POSN                                  0x0
#define _TRISE_TRISE0_POSITION                              0x0
#define _TRISE_TRISE0_SIZE                                  0x1
#define _TRISE_TRISE0_LENGTH                                0x1
#define _TRISE_TRISE0_MASK                                  0x1
#define _TRISE_TRISE1_POSN                                  0x1
#define _TRISE_TRISE1_POSITION                              0x1
#define _TRISE_TRISE1_SIZE                                  0x1
#define _TRISE_TRISE1_LENGTH                                0x1
#define _TRISE_TRISE1_MASK                                  0x2
#define _TRISE_TRISE2_POSN                                  0x2
#define _TRISE_TRISE2_POSITION                              0x2
#define _TRISE_TRISE2_SIZE                                  0x1
#define _TRISE_TRISE2_LENGTH                                0x1
#define _TRISE_TRISE2_MASK                                  0x4
#define _TRISE_TRISE3_POSN                                  0x3
#define _TRISE_TRISE3_POSITION                              0x3
#define _TRISE_TRISE3_SIZE                                  0x1
#define _TRISE_TRISE3_LENGTH                                0x1
#define _TRISE_TRISE3_MASK                                  0x8
#define _TRISE_TRISE4_POSN                                  0x4
#define _TRISE_TRISE4_POSITION                              0x4
#define _TRISE_TRISE4_SIZE                                  0x1
#define _TRISE_TRISE4_LENGTH                                0x1
#define _TRISE_TRISE4_MASK                                  0x10
#define _TRISE_TRISE5_POSN                                  0x5
#define _TRISE_TRISE5_POSITION                              0x5
#define _TRISE_TRISE5_SIZE                                  0x1
#define _TRISE_TRISE5_LENGTH                                0x1
#define _TRISE_TRISE5_MASK                                  0x20
#define _TRISE_TRISE6_POSN                                  0x6
#define _TRISE_TRISE6_POSITION                              0x6
#define _TRISE_TRISE6_SIZE                                  0x1
#define _TRISE_TRISE6_LENGTH                                0x1
#define _TRISE_TRISE6_MASK                                  0x40
#define _TRISE_TRISE7_POSN                                  0x7
#define _TRISE_TRISE7_POSITION                              0x7
#define _TRISE_TRISE7_SIZE                                  0x1
#define _TRISE_TRISE7_LENGTH                                0x1
#define _TRISE_TRISE7_MASK                                  0x80
#define _TRISE_RE0_POSN                                     0x0
#define _TRISE_RE0_POSITION                                 0x0
#define _TRISE_RE0_SIZE                                     0x1
#define _TRISE_RE0_LENGTH                                   0x1
#define _TRISE_RE0_MASK                                     0x1
#define _TRISE_RE1_POSN                                     0x1
#define _TRISE_RE1_POSITION                                 0x1
#define _TRISE_RE1_SIZE                                     0x1
#define _TRISE_RE1_LENGTH                                   0x1
#define _TRISE_RE1_MASK                                     0x2
#define _TRISE_RE2_POSN                                     0x2
#define _TRISE_RE2_POSITION                                 0x2
#define _TRISE_RE2_SIZE                                     0x1
#define _TRISE_RE2_LENGTH                                   0x1
#define _TRISE_RE2_MASK                                     0x4
#define _TRISE_RE3_POSN                                     0x3
#define _TRISE_RE3_POSITION                                 0x3
#define _TRISE_RE3_SIZE                                     0x1
#define _TRISE_RE3_LENGTH                                   0x1
#define _TRISE_RE3_MASK                                     0x8
#define _TRISE_RE4_POSN                                     0x4
#define _TRISE_RE4_POSITION                                 0x4
#define _TRISE_RE4_SIZE                                     0x1
#define _TRISE_RE4_LENGTH                                   0x1
#define _TRISE_RE4_MASK                                     0x10
#define _TRISE_RE5_POSN                                     0x5
#define _TRISE_RE5_POSITION                                 0x5
#define _TRISE_RE5_SIZE                                     0x1
#define _TRISE_RE5_LENGTH                                   0x1
#define _TRISE_RE5_MASK                                     0x20
#define _TRISE_RE6_POSN                                     0x6
#define _TRISE_RE6_POSITION                                 0x6
#define _TRISE_RE6_SIZE                                     0x1
#define _TRISE_RE6_LENGTH                                   0x1
#define _TRISE_RE6_MASK                                     0x40
#define _TRISE_RE7_POSN                                     0x7
#define _TRISE_RE7_POSITION                                 0x7
#define _TRISE_RE7_SIZE                                     0x1
#define _TRISE_RE7_LENGTH                                   0x1
#define _TRISE_RE7_MASK                                     0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TRISE0                 :1;
        unsigned TRISE1                 :1;
        unsigned TRISE2                 :1;
        unsigned TRISE3                 :1;
        unsigned TRISE4                 :1;
        unsigned TRISE5                 :1;
        unsigned TRISE6                 :1;
        unsigned TRISE7                 :1;
    };
    struct {
        unsigned RE0                    :1;
        unsigned RE1                    :1;
        unsigned RE2                    :1;
        unsigned RE3                    :1;
        unsigned RE4                    :1;
        unsigned RE5                    :1;
        unsigned RE6                    :1;
        unsigned RE7                    :1;
    };
} DDREbits_t;
extern volatile DDREbits_t DDREbits __at(0xF96);
// bitfield macros
#define _DDRE_TRISE0_POSN                                   0x0
#define _DDRE_TRISE0_POSITION                               0x0
#define _DDRE_TRISE0_SIZE                                   0x1
#define _DDRE_TRISE0_LENGTH                                 0x1
#define _DDRE_TRISE0_MASK                                   0x1
#define _DDRE_TRISE1_POSN                                   0x1
#define _DDRE_TRISE1_POSITION                               0x1
#define _DDRE_TRISE1_SIZE                                   0x1
#define _DDRE_TRISE1_LENGTH                                 0x1
#define _DDRE_TRISE1_MASK                                   0x2
#define _DDRE_TRISE2_POSN                                   0x2
#define _DDRE_TRISE2_POSITION                               0x2
#define _DDRE_TRISE2_SIZE                                   0x1
#define _DDRE_TRISE2_LENGTH                                 0x1
#define _DDRE_TRISE2_MASK                                   0x4
#define _DDRE_TRISE3_POSN                                   0x3
#define _DDRE_TRISE3_POSITION                               0x3
#define _DDRE_TRISE3_SIZE                                   0x1
#define _DDRE_TRISE3_LENGTH                                 0x1
#define _DDRE_TRISE3_MASK                                   0x8
#define _DDRE_TRISE4_POSN                                   0x4
#define _DDRE_TRISE4_POSITION                               0x4
#define _DDRE_TRISE4_SIZE                                   0x1
#define _DDRE_TRISE4_LENGTH                                 0x1
#define _DDRE_TRISE4_MASK                                   0x10
#define _DDRE_TRISE5_POSN                                   0x5
#define _DDRE_TRISE5_POSITION                               0x5
#define _DDRE_TRISE5_SIZE                                   0x1
#define _DDRE_TRISE5_LENGTH                                 0x1
#define _DDRE_TRISE5_MASK                                   0x20
#define _DDRE_TRISE6_POSN                                   0x6
#define _DDRE_TRISE6_POSITION                               0x6
#define _DDRE_TRISE6_SIZE                                   0x1
#define _DDRE_TRISE6_LENGTH                                 0x1
#define _DDRE_TRISE6_MASK                                   0x40
#define _DDRE_TRISE7_POSN                                   0x7
#define _DDRE_TRISE7_POSITION                               0x7
#define _DDRE_TRISE7_SIZE                                   0x1
#define _DDRE_TRISE7_LENGTH                                 0x1
#define _DDRE_TRISE7_MASK                                   0x80
#define _DDRE_RE0_POSN                                      0x0
#define _DDRE_RE0_POSITION                                  0x0
#define _DDRE_RE0_SIZE                                      0x1
#define _DDRE_RE0_LENGTH                                    0x1
#define _DDRE_RE0_MASK                                      0x1
#define _DDRE_RE1_POSN                                      0x1
#define _DDRE_RE1_POSITION                                  0x1
#define _DDRE_RE1_SIZE                                      0x1
#define _DDRE_RE1_LENGTH                                    0x1
#define _DDRE_RE1_MASK                                      0x2
#define _DDRE_RE2_POSN                                      0x2
#define _DDRE_RE2_POSITION                                  0x2
#define _DDRE_RE2_SIZE                                      0x1
#define _DDRE_RE2_LENGTH                                    0x1
#define _DDRE_RE2_MASK                                      0x4
#define _DDRE_RE3_POSN                                      0x3
#define _DDRE_RE3_POSITION                                  0x3
#define _DDRE_RE3_SIZE                                      0x1
#define _DDRE_RE3_LENGTH                                    0x1
#define _DDRE_RE3_MASK                                      0x8
#define _DDRE_RE4_POSN                                      0x4
#define _DDRE_RE4_POSITION                                  0x4
#define _DDRE_RE4_SIZE                                      0x1
#define _DDRE_RE4_LENGTH                                    0x1
#define _DDRE_RE4_MASK                                      0x10
#define _DDRE_RE5_POSN                                      0x5
#define _DDRE_RE5_POSITION                                  0x5
#define _DDRE_RE5_SIZE                                      0x1
#define _DDRE_RE5_LENGTH                                    0x1
#define _DDRE_RE5_MASK                                      0x20
#define _DDRE_RE6_POSN                                      0x6
#define _DDRE_RE6_POSITION                                  0x6
#define _DDRE_RE6_SIZE                                      0x1
#define _DDRE_RE6_LENGTH                                    0x1
#define _DDRE_RE6_MASK                                      0x40
#define _DDRE_RE7_POSN                                      0x7
#define _DDRE_RE7_POSITION                                  0x7
#define _DDRE_RE7_SIZE                                      0x1
#define _DDRE_RE7_LENGTH                                    0x1
#define _DDRE_RE7_MASK                                      0x80

// Register: TRISF
#define TRISF TRISF
extern volatile unsigned char           TRISF               __at(0xF97);
#ifndef _LIB_BUILD
asm("TRISF equ 0F97h");
#endif
// aliases
extern volatile unsigned char           DDRF                __at(0xF97);
#ifndef _LIB_BUILD
asm("DDRF equ 0F97h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISF0                 :1;
        unsigned TRISF1                 :1;
        unsigned TRISF2                 :1;
        unsigned TRISF3                 :1;
        unsigned TRISF4                 :1;
        unsigned TRISF5                 :1;
        unsigned TRISF6                 :1;
        unsigned TRISF7                 :1;
    };
    struct {
        unsigned RF0                    :1;
        unsigned RF1                    :1;
        unsigned RF2                    :1;
        unsigned RF3                    :1;
        unsigned RF4                    :1;
        unsigned RF5                    :1;
        unsigned RF6                    :1;
        unsigned RF7                    :1;
    };
} TRISFbits_t;
extern volatile TRISFbits_t TRISFbits __at(0xF97);
// bitfield macros
#define _TRISF_TRISF0_POSN                                  0x0
#define _TRISF_TRISF0_POSITION                              0x0
#define _TRISF_TRISF0_SIZE                                  0x1
#define _TRISF_TRISF0_LENGTH                                0x1
#define _TRISF_TRISF0_MASK                                  0x1
#define _TRISF_TRISF1_POSN                                  0x1
#define _TRISF_TRISF1_POSITION                              0x1
#define _TRISF_TRISF1_SIZE                                  0x1
#define _TRISF_TRISF1_LENGTH                                0x1
#define _TRISF_TRISF1_MASK                                  0x2
#define _TRISF_TRISF2_POSN                                  0x2
#define _TRISF_TRISF2_POSITION                              0x2
#define _TRISF_TRISF2_SIZE                                  0x1
#define _TRISF_TRISF2_LENGTH                                0x1
#define _TRISF_TRISF2_MASK                                  0x4
#define _TRISF_TRISF3_POSN                                  0x3
#define _TRISF_TRISF3_POSITION                              0x3
#define _TRISF_TRISF3_SIZE                                  0x1
#define _TRISF_TRISF3_LENGTH                                0x1
#define _TRISF_TRISF3_MASK                                  0x8
#define _TRISF_TRISF4_POSN                                  0x4
#define _TRISF_TRISF4_POSITION                              0x4
#define _TRISF_TRISF4_SIZE                                  0x1
#define _TRISF_TRISF4_LENGTH                                0x1
#define _TRISF_TRISF4_MASK                                  0x10
#define _TRISF_TRISF5_POSN                                  0x5
#define _TRISF_TRISF5_POSITION                              0x5
#define _TRISF_TRISF5_SIZE                                  0x1
#define _TRISF_TRISF5_LENGTH                                0x1
#define _TRISF_TRISF5_MASK                                  0x20
#define _TRISF_TRISF6_POSN                                  0x6
#define _TRISF_TRISF6_POSITION                              0x6
#define _TRISF_TRISF6_SIZE                                  0x1
#define _TRISF_TRISF6_LENGTH                                0x1
#define _TRISF_TRISF6_MASK                                  0x40
#define _TRISF_TRISF7_POSN                                  0x7
#define _TRISF_TRISF7_POSITION                              0x7
#define _TRISF_TRISF7_SIZE                                  0x1
#define _TRISF_TRISF7_LENGTH                                0x1
#define _TRISF_TRISF7_MASK                                  0x80
#define _TRISF_RF0_POSN                                     0x0
#define _TRISF_RF0_POSITION                                 0x0
#define _TRISF_RF0_SIZE                                     0x1
#define _TRISF_RF0_LENGTH                                   0x1
#define _TRISF_RF0_MASK                                     0x1
#define _TRISF_RF1_POSN                                     0x1
#define _TRISF_RF1_POSITION                                 0x1
#define _TRISF_RF1_SIZE                                     0x1
#define _TRISF_RF1_LENGTH                                   0x1
#define _TRISF_RF1_MASK                                     0x2
#define _TRISF_RF2_POSN                                     0x2
#define _TRISF_RF2_POSITION                                 0x2
#define _TRISF_RF2_SIZE                                     0x1
#define _TRISF_RF2_LENGTH                                   0x1
#define _TRISF_RF2_MASK                                     0x4
#define _TRISF_RF3_POSN                                     0x3
#define _TRISF_RF3_POSITION                                 0x3
#define _TRISF_RF3_SIZE                                     0x1
#define _TRISF_RF3_LENGTH                                   0x1
#define _TRISF_RF3_MASK                                     0x8
#define _TRISF_RF4_POSN                                     0x4
#define _TRISF_RF4_POSITION                                 0x4
#define _TRISF_RF4_SIZE                                     0x1
#define _TRISF_RF4_LENGTH                                   0x1
#define _TRISF_RF4_MASK                                     0x10
#define _TRISF_RF5_POSN                                     0x5
#define _TRISF_RF5_POSITION                                 0x5
#define _TRISF_RF5_SIZE                                     0x1
#define _TRISF_RF5_LENGTH                                   0x1
#define _TRISF_RF5_MASK                                     0x20
#define _TRISF_RF6_POSN                                     0x6
#define _TRISF_RF6_POSITION                                 0x6
#define _TRISF_RF6_SIZE                                     0x1
#define _TRISF_RF6_LENGTH                                   0x1
#define _TRISF_RF6_MASK                                     0x40
#define _TRISF_RF7_POSN                                     0x7
#define _TRISF_RF7_POSITION                                 0x7
#define _TRISF_RF7_SIZE                                     0x1
#define _TRISF_RF7_LENGTH                                   0x1
#define _TRISF_RF7_MASK                                     0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TRISF0                 :1;
        unsigned TRISF1                 :1;
        unsigned TRISF2                 :1;
        unsigned TRISF3                 :1;
        unsigned TRISF4                 :1;
        unsigned TRISF5                 :1;
        unsigned TRISF6                 :1;
        unsigned TRISF7                 :1;
    };
    struct {
        unsigned RF0                    :1;
        unsigned RF1                    :1;
        unsigned RF2                    :1;
        unsigned RF3                    :1;
        unsigned RF4                    :1;
        unsigned RF5                    :1;
        unsigned RF6                    :1;
        unsigned RF7                    :1;
    };
} DDRFbits_t;
extern volatile DDRFbits_t DDRFbits __at(0xF97);
// bitfield macros
#define _DDRF_TRISF0_POSN                                   0x0
#define _DDRF_TRISF0_POSITION                               0x0
#define _DDRF_TRISF0_SIZE                                   0x1
#define _DDRF_TRISF0_LENGTH                                 0x1
#define _DDRF_TRISF0_MASK                                   0x1
#define _DDRF_TRISF1_POSN                                   0x1
#define _DDRF_TRISF1_POSITION                               0x1
#define _DDRF_TRISF1_SIZE                                   0x1
#define _DDRF_TRISF1_LENGTH                                 0x1
#define _DDRF_TRISF1_MASK                                   0x2
#define _DDRF_TRISF2_POSN                                   0x2
#define _DDRF_TRISF2_POSITION                               0x2
#define _DDRF_TRISF2_SIZE                                   0x1
#define _DDRF_TRISF2_LENGTH                                 0x1
#define _DDRF_TRISF2_MASK                                   0x4
#define _DDRF_TRISF3_POSN                                   0x3
#define _DDRF_TRISF3_POSITION                               0x3
#define _DDRF_TRISF3_SIZE                                   0x1
#define _DDRF_TRISF3_LENGTH                                 0x1
#define _DDRF_TRISF3_MASK                                   0x8
#define _DDRF_TRISF4_POSN                                   0x4
#define _DDRF_TRISF4_POSITION                               0x4
#define _DDRF_TRISF4_SIZE                                   0x1
#define _DDRF_TRISF4_LENGTH                                 0x1
#define _DDRF_TRISF4_MASK                                   0x10
#define _DDRF_TRISF5_POSN                                   0x5
#define _DDRF_TRISF5_POSITION                               0x5
#define _DDRF_TRISF5_SIZE                                   0x1
#define _DDRF_TRISF5_LENGTH                                 0x1
#define _DDRF_TRISF5_MASK                                   0x20
#define _DDRF_TRISF6_POSN                                   0x6
#define _DDRF_TRISF6_POSITION                               0x6
#define _DDRF_TRISF6_SIZE                                   0x1
#define _DDRF_TRISF6_LENGTH                                 0x1
#define _DDRF_TRISF6_MASK                                   0x40
#define _DDRF_TRISF7_POSN                                   0x7
#define _DDRF_TRISF7_POSITION                               0x7
#define _DDRF_TRISF7_SIZE                                   0x1
#define _DDRF_TRISF7_LENGTH                                 0x1
#define _DDRF_TRISF7_MASK                                   0x80
#define _DDRF_RF0_POSN                                      0x0
#define _DDRF_RF0_POSITION                                  0x0
#define _DDRF_RF0_SIZE                                      0x1
#define _DDRF_RF0_LENGTH                                    0x1
#define _DDRF_RF0_MASK                                      0x1
#define _DDRF_RF1_POSN                                      0x1
#define _DDRF_RF1_POSITION                                  0x1
#define _DDRF_RF1_SIZE                                      0x1
#define _DDRF_RF1_LENGTH                                    0x1
#define _DDRF_RF1_MASK                                      0x2
#define _DDRF_RF2_POSN                                      0x2
#define _DDRF_RF2_POSITION                                  0x2
#define _DDRF_RF2_SIZE                                      0x1
#define _DDRF_RF2_LENGTH                                    0x1
#define _DDRF_RF2_MASK                                      0x4
#define _DDRF_RF3_POSN                                      0x3
#define _DDRF_RF3_POSITION                                  0x3
#define _DDRF_RF3_SIZE                                      0x1
#define _DDRF_RF3_LENGTH                                    0x1
#define _DDRF_RF3_MASK                                      0x8
#define _DDRF_RF4_POSN                                      0x4
#define _DDRF_RF4_POSITION                                  0x4
#define _DDRF_RF4_SIZE                                      0x1
#define _DDRF_RF4_LENGTH                                    0x1
#define _DDRF_RF4_MASK                                      0x10
#define _DDRF_RF5_POSN                                      0x5
#define _DDRF_RF5_POSITION                                  0x5
#define _DDRF_RF5_SIZE                                      0x1
#define _DDRF_RF5_LENGTH                                    0x1
#define _DDRF_RF5_MASK                                      0x20
#define _DDRF_RF6_POSN                                      0x6
#define _DDRF_RF6_POSITION                                  0x6
#define _DDRF_RF6_SIZE                                      0x1
#define _DDRF_RF6_LENGTH                                    0x1
#define _DDRF_RF6_MASK                                      0x40
#define _DDRF_RF7_POSN                                      0x7
#define _DDRF_RF7_POSITION                                  0x7
#define _DDRF_RF7_SIZE                                      0x1
#define _DDRF_RF7_LENGTH                                    0x1
#define _DDRF_RF7_MASK                                      0x80

// Register: TRISG
#define TRISG TRISG
extern volatile unsigned char           TRISG               __at(0xF98);
#ifndef _LIB_BUILD
asm("TRISG equ 0F98h");
#endif
// aliases
extern volatile unsigned char           DDRG                __at(0xF98);
#ifndef _LIB_BUILD
asm("DDRG equ 0F98h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISG0                 :1;
        unsigned TRISG1                 :1;
        unsigned TRISG2                 :1;
        unsigned TRISG3                 :1;
        unsigned TRISG4                 :1;
    };
    struct {
        unsigned RG0                    :1;
        unsigned RG1                    :1;
        unsigned RG2                    :1;
        unsigned RG3                    :1;
        unsigned RG4                    :1;
    };
} TRISGbits_t;
extern volatile TRISGbits_t TRISGbits __at(0xF98);
// bitfield macros
#define _TRISG_TRISG0_POSN                                  0x0
#define _TRISG_TRISG0_POSITION                              0x0
#define _TRISG_TRISG0_SIZE                                  0x1
#define _TRISG_TRISG0_LENGTH                                0x1
#define _TRISG_TRISG0_MASK                                  0x1
#define _TRISG_TRISG1_POSN                                  0x1
#define _TRISG_TRISG1_POSITION                              0x1
#define _TRISG_TRISG1_SIZE                                  0x1
#define _TRISG_TRISG1_LENGTH                                0x1
#define _TRISG_TRISG1_MASK                                  0x2
#define _TRISG_TRISG2_POSN                                  0x2
#define _TRISG_TRISG2_POSITION                              0x2
#define _TRISG_TRISG2_SIZE                                  0x1
#define _TRISG_TRISG2_LENGTH                                0x1
#define _TRISG_TRISG2_MASK                                  0x4
#define _TRISG_TRISG3_POSN                                  0x3
#define _TRISG_TRISG3_POSITION                              0x3
#define _TRISG_TRISG3_SIZE                                  0x1
#define _TRISG_TRISG3_LENGTH                                0x1
#define _TRISG_TRISG3_MASK                                  0x8
#define _TRISG_TRISG4_POSN                                  0x4
#define _TRISG_TRISG4_POSITION                              0x4
#define _TRISG_TRISG4_SIZE                                  0x1
#define _TRISG_TRISG4_LENGTH                                0x1
#define _TRISG_TRISG4_MASK                                  0x10
#define _TRISG_RG0_POSN                                     0x0
#define _TRISG_RG0_POSITION                                 0x0
#define _TRISG_RG0_SIZE                                     0x1
#define _TRISG_RG0_LENGTH                                   0x1
#define _TRISG_RG0_MASK                                     0x1
#define _TRISG_RG1_POSN                                     0x1
#define _TRISG_RG1_POSITION                                 0x1
#define _TRISG_RG1_SIZE                                     0x1
#define _TRISG_RG1_LENGTH                                   0x1
#define _TRISG_RG1_MASK                                     0x2
#define _TRISG_RG2_POSN                                     0x2
#define _TRISG_RG2_POSITION                                 0x2
#define _TRISG_RG2_SIZE                                     0x1
#define _TRISG_RG2_LENGTH                                   0x1
#define _TRISG_RG2_MASK                                     0x4
#define _TRISG_RG3_POSN                                     0x3
#define _TRISG_RG3_POSITION                                 0x3
#define _TRISG_RG3_SIZE                                     0x1
#define _TRISG_RG3_LENGTH                                   0x1
#define _TRISG_RG3_MASK                                     0x8
#define _TRISG_RG4_POSN                                     0x4
#define _TRISG_RG4_POSITION                                 0x4
#define _TRISG_RG4_SIZE                                     0x1
#define _TRISG_RG4_LENGTH                                   0x1
#define _TRISG_RG4_MASK                                     0x10
// alias bitfield definitions
typedef union {
    struct {
        unsigned TRISG0                 :1;
        unsigned TRISG1                 :1;
        unsigned TRISG2                 :1;
        unsigned TRISG3                 :1;
        unsigned TRISG4                 :1;
    };
    struct {
        unsigned RG0                    :1;
        unsigned RG1                    :1;
        unsigned RG2                    :1;
        unsigned RG3                    :1;
        unsigned RG4                    :1;
    };
} DDRGbits_t;
extern volatile DDRGbits_t DDRGbits __at(0xF98);
// bitfield macros
#define _DDRG_TRISG0_POSN                                   0x0
#define _DDRG_TRISG0_POSITION                               0x0
#define _DDRG_TRISG0_SIZE                                   0x1
#define _DDRG_TRISG0_LENGTH                                 0x1
#define _DDRG_TRISG0_MASK                                   0x1
#define _DDRG_TRISG1_POSN                                   0x1
#define _DDRG_TRISG1_POSITION                               0x1
#define _DDRG_TRISG1_SIZE                                   0x1
#define _DDRG_TRISG1_LENGTH                                 0x1
#define _DDRG_TRISG1_MASK                                   0x2
#define _DDRG_TRISG2_POSN                                   0x2
#define _DDRG_TRISG2_POSITION                               0x2
#define _DDRG_TRISG2_SIZE                                   0x1
#define _DDRG_TRISG2_LENGTH                                 0x1
#define _DDRG_TRISG2_MASK                                   0x4
#define _DDRG_TRISG3_POSN                                   0x3
#define _DDRG_TRISG3_POSITION                               0x3
#define _DDRG_TRISG3_SIZE                                   0x1
#define _DDRG_TRISG3_LENGTH                                 0x1
#define _DDRG_TRISG3_MASK                                   0x8
#define _DDRG_TRISG4_POSN                                   0x4
#define _DDRG_TRISG4_POSITION                               0x4
#define _DDRG_TRISG4_SIZE                                   0x1
#define _DDRG_TRISG4_LENGTH                                 0x1
#define _DDRG_TRISG4_MASK                                   0x10
#define _DDRG_RG0_POSN                                      0x0
#define _DDRG_RG0_POSITION                                  0x0
#define _DDRG_RG0_SIZE                                      0x1
#define _DDRG_RG0_LENGTH                                    0x1
#define _DDRG_RG0_MASK                                      0x1
#define _DDRG_RG1_POSN                                      0x1
#define _DDRG_RG1_POSITION                                  0x1
#define _DDRG_RG1_SIZE                                      0x1
#define _DDRG_RG1_LENGTH                                    0x1
#define _DDRG_RG1_MASK                                      0x2
#define _DDRG_RG2_POSN                                      0x2
#define _DDRG_RG2_POSITION                                  0x2
#define _DDRG_RG2_SIZE                                      0x1
#define _DDRG_RG2_LENGTH                                    0x1
#define _DDRG_RG2_MASK                                      0x4
#define _DDRG_RG3_POSN                                      0x3
#define _DDRG_RG3_POSITION                                  0x3
#define _DDRG_RG3_SIZE                                      0x1
#define _DDRG_RG3_LENGTH                                    0x1
#define _DDRG_RG3_MASK                                      0x8
#define _DDRG_RG4_POSN                                      0x4
#define _DDRG_RG4_POSITION                                  0x4
#define _DDRG_RG4_SIZE                                      0x1
#define _DDRG_RG4_LENGTH                                    0x1
#define _DDRG_RG4_MASK                                      0x10

// Register: PIE1
#define PIE1 PIE1
extern volatile unsigned char           PIE1                __at(0xF9D);
#ifndef _LIB_BUILD
asm("PIE1 equ 0F9Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IE                 :1;
        unsigned TMR2IE                 :1;
        unsigned CCP1IE                 :1;
        unsigned SSPIE                  :1;
        unsigned TXIE                   :1;
        unsigned RCIE                   :1;
        unsigned ADIE                   :1;
        unsigned PSPIE                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned TX1IE                  :1;
        unsigned RC1IE                  :1;
    };
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits __at(0xF9D);
// bitfield macros
#define _PIE1_TMR1IE_POSN                                   0x0
#define _PIE1_TMR1IE_POSITION                               0x0
#define _PIE1_TMR1IE_SIZE                                   0x1
#define _PIE1_TMR1IE_LENGTH                                 0x1
#define _PIE1_TMR1IE_MASK                                   0x1
#define _PIE1_TMR2IE_POSN                                   0x1
#define _PIE1_TMR2IE_POSITION                               0x1
#define _PIE1_TMR2IE_SIZE                                   0x1
#define _PIE1_TMR2IE_LENGTH                                 0x1
#define _PIE1_TMR2IE_MASK                                   0x2
#define _PIE1_CCP1IE_POSN                                   0x2
#define _PIE1_CCP1IE_POSITION                               0x2
#define _PIE1_CCP1IE_SIZE                                   0x1
#define _PIE1_CCP1IE_LENGTH                                 0x1
#define _PIE1_CCP1IE_MASK                                   0x4
#define _PIE1_SSPIE_POSN                                    0x3
#define _PIE1_SSPIE_POSITION                                0x3
#define _PIE1_SSPIE_SIZE                                    0x1
#define _PIE1_SSPIE_LENGTH                                  0x1
#define _PIE1_SSPIE_MASK                                    0x8
#define _PIE1_TXIE_POSN                                     0x4
#define _PIE1_TXIE_POSITION                                 0x4
#define _PIE1_TXIE_SIZE                                     0x1
#define _PIE1_TXIE_LENGTH                                   0x1
#define _PIE1_TXIE_MASK                                     0x10
#define _PIE1_RCIE_POSN                                     0x5
#define _PIE1_RCIE_POSITION                                 0x5
#define _PIE1_RCIE_SIZE                                     0x1
#define _PIE1_RCIE_LENGTH                                   0x1
#define _PIE1_RCIE_MASK                                     0x20
#define _PIE1_ADIE_POSN                                     0x6
#define _PIE1_ADIE_POSITION                                 0x6
#define _PIE1_ADIE_SIZE                                     0x1
#define _PIE1_ADIE_LENGTH                                   0x1
#define _PIE1_ADIE_MASK                                     0x40
#define _PIE1_PSPIE_POSN                                    0x7
#define _PIE1_PSPIE_POSITION                                0x7
#define _PIE1_PSPIE_SIZE                                    0x1
#define _PIE1_PSPIE_LENGTH                                  0x1
#define _PIE1_PSPIE_MASK                                    0x80
#define _PIE1_TX1IE_POSN                                    0x4
#define _PIE1_TX1IE_POSITION                                0x4
#define _PIE1_TX1IE_SIZE                                    0x1
#define _PIE1_TX1IE_LENGTH                                  0x1
#define _PIE1_TX1IE_MASK                                    0x10
#define _PIE1_RC1IE_POSN                                    0x5
#define _PIE1_RC1IE_POSITION                                0x5
#define _PIE1_RC1IE_SIZE                                    0x1
#define _PIE1_RC1IE_LENGTH                                  0x1
#define _PIE1_RC1IE_MASK                                    0x20

// Register: PIR1
#define PIR1 PIR1
extern volatile unsigned char           PIR1                __at(0xF9E);
#ifndef _LIB_BUILD
asm("PIR1 equ 0F9Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IF                 :1;
        unsigned TMR2IF                 :1;
        unsigned CCP1IF                 :1;
        unsigned SSPIF                  :1;
        unsigned TXIF                   :1;
        unsigned RCIF                   :1;
        unsigned ADIF                   :1;
        unsigned PSPIF                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned TX1IF                  :1;
        unsigned RC1IF                  :1;
    };
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits __at(0xF9E);
// bitfield macros
#define _PIR1_TMR1IF_POSN                                   0x0
#define _PIR1_TMR1IF_POSITION                               0x0
#define _PIR1_TMR1IF_SIZE                                   0x1
#define _PIR1_TMR1IF_LENGTH                                 0x1
#define _PIR1_TMR1IF_MASK                                   0x1
#define _PIR1_TMR2IF_POSN                                   0x1
#define _PIR1_TMR2IF_POSITION                               0x1
#define _PIR1_TMR2IF_SIZE                                   0x1
#define _PIR1_TMR2IF_LENGTH                                 0x1
#define _PIR1_TMR2IF_MASK                                   0x2
#define _PIR1_CCP1IF_POSN                                   0x2
#define _PIR1_CCP1IF_POSITION                               0x2
#define _PIR1_CCP1IF_SIZE                                   0x1
#define _PIR1_CCP1IF_LENGTH                                 0x1
#define _PIR1_CCP1IF_MASK                                   0x4
#define _PIR1_SSPIF_POSN                                    0x3
#define _PIR1_SSPIF_POSITION                                0x3
#define _PIR1_SSPIF_SIZE                                    0x1
#define _PIR1_SSPIF_LENGTH                                  0x1
#define _PIR1_SSPIF_MASK                                    0x8
#define _PIR1_TXIF_POSN                                     0x4
#define _PIR1_TXIF_POSITION                                 0x4
#define _PIR1_TXIF_SIZE                                     0x1
#define _PIR1_TXIF_LENGTH                                   0x1
#define _PIR1_TXIF_MASK                                     0x10
#define _PIR1_RCIF_POSN                                     0x5
#define _PIR1_RCIF_POSITION                                 0x5
#define _PIR1_RCIF_SIZE                                     0x1
#define _PIR1_RCIF_LENGTH                                   0x1
#define _PIR1_RCIF_MASK                                     0x20
#define _PIR1_ADIF_POSN                                     0x6
#define _PIR1_ADIF_POSITION                                 0x6
#define _PIR1_ADIF_SIZE                                     0x1
#define _PIR1_ADIF_LENGTH                                   0x1
#define _PIR1_ADIF_MASK                                     0x40
#define _PIR1_PSPIF_POSN                                    0x7
#define _PIR1_PSPIF_POSITION                                0x7
#define _PIR1_PSPIF_SIZE                                    0x1
#define _PIR1_PSPIF_LENGTH                                  0x1
#define _PIR1_PSPIF_MASK                                    0x80
#define _PIR1_TX1IF_POSN                                    0x4
#define _PIR1_TX1IF_POSITION                                0x4
#define _PIR1_TX1IF_SIZE                                    0x1
#define _PIR1_TX1IF_LENGTH                                  0x1
#define _PIR1_TX1IF_MASK                                    0x10
#define _PIR1_RC1IF_POSN                                    0x5
#define _PIR1_RC1IF_POSITION                                0x5
#define _PIR1_RC1IF_SIZE                                    0x1
#define _PIR1_RC1IF_LENGTH                                  0x1
#define _PIR1_RC1IF_MASK                                    0x20

// Register: IPR1
#define IPR1 IPR1
extern volatile unsigned char           IPR1                __at(0xF9F);
#ifndef _LIB_BUILD
asm("IPR1 equ 0F9Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IP                 :1;
        unsigned TMR2IP                 :1;
        unsigned CCP1IP                 :1;
        unsigned SSPIP                  :1;
        unsigned TXIP                   :1;
        unsigned RCIP                   :1;
        unsigned ADIP                   :1;
        unsigned PSPIP                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned TX1IP                  :1;
        unsigned RC1IP                  :1;
    };
} IPR1bits_t;
extern volatile IPR1bits_t IPR1bits __at(0xF9F);
// bitfield macros
#define _IPR1_TMR1IP_POSN                                   0x0
#define _IPR1_TMR1IP_POSITION                               0x0
#define _IPR1_TMR1IP_SIZE                                   0x1
#define _IPR1_TMR1IP_LENGTH                                 0x1
#define _IPR1_TMR1IP_MASK                                   0x1
#define _IPR1_TMR2IP_POSN                                   0x1
#define _IPR1_TMR2IP_POSITION                               0x1
#define _IPR1_TMR2IP_SIZE                                   0x1
#define _IPR1_TMR2IP_LENGTH                                 0x1
#define _IPR1_TMR2IP_MASK                                   0x2
#define _IPR1_CCP1IP_POSN                                   0x2
#define _IPR1_CCP1IP_POSITION                               0x2
#define _IPR1_CCP1IP_SIZE                                   0x1
#define _IPR1_CCP1IP_LENGTH                                 0x1
#define _IPR1_CCP1IP_MASK                                   0x4
#define _IPR1_SSPIP_POSN                                    0x3
#define _IPR1_SSPIP_POSITION                                0x3
#define _IPR1_SSPIP_SIZE                                    0x1
#define _IPR1_SSPIP_LENGTH                                  0x1
#define _IPR1_SSPIP_MASK                                    0x8
#define _IPR1_TXIP_POSN                                     0x4
#define _IPR1_TXIP_POSITION                                 0x4
#define _IPR1_TXIP_SIZE                                     0x1
#define _IPR1_TXIP_LENGTH                                   0x1
#define _IPR1_TXIP_MASK                                     0x10
#define _IPR1_RCIP_POSN                                     0x5
#define _IPR1_RCIP_POSITION                                 0x5
#define _IPR1_RCIP_SIZE                                     0x1
#define _IPR1_RCIP_LENGTH                                   0x1
#define _IPR1_RCIP_MASK                                     0x20
#define _IPR1_ADIP_POSN                                     0x6
#define _IPR1_ADIP_POSITION                                 0x6
#define _IPR1_ADIP_SIZE                                     0x1
#define _IPR1_ADIP_LENGTH                                   0x1
#define _IPR1_ADIP_MASK                                     0x40
#define _IPR1_PSPIP_POSN                                    0x7
#define _IPR1_PSPIP_POSITION                                0x7
#define _IPR1_PSPIP_SIZE                                    0x1
#define _IPR1_PSPIP_LENGTH                                  0x1
#define _IPR1_PSPIP_MASK                                    0x80
#define _IPR1_TX1IP_POSN                                    0x4
#define _IPR1_TX1IP_POSITION                                0x4
#define _IPR1_TX1IP_SIZE                                    0x1
#define _IPR1_TX1IP_LENGTH                                  0x1
#define _IPR1_TX1IP_MASK                                    0x10
#define _IPR1_RC1IP_POSN                                    0x5
#define _IPR1_RC1IP_POSITION                                0x5
#define _IPR1_RC1IP_SIZE                                    0x1
#define _IPR1_RC1IP_LENGTH                                  0x1
#define _IPR1_RC1IP_MASK                                    0x20

// Register: PIE2
#define PIE2 PIE2
extern volatile unsigned char           PIE2                __at(0xFA0);
#ifndef _LIB_BUILD
asm("PIE2 equ 0FA0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2IE                 :1;
        unsigned TMR3IE                 :1;
        unsigned LVDIE                  :1;
        unsigned BCLIE                  :1;
        unsigned EEIE                   :1;
        unsigned                        :1;
        unsigned CMIE                   :1;
    };
} PIE2bits_t;
extern volatile PIE2bits_t PIE2bits __at(0xFA0);
// bitfield macros
#define _PIE2_CCP2IE_POSN                                   0x0
#define _PIE2_CCP2IE_POSITION                               0x0
#define _PIE2_CCP2IE_SIZE                                   0x1
#define _PIE2_CCP2IE_LENGTH                                 0x1
#define _PIE2_CCP2IE_MASK                                   0x1
#define _PIE2_TMR3IE_POSN                                   0x1
#define _PIE2_TMR3IE_POSITION                               0x1
#define _PIE2_TMR3IE_SIZE                                   0x1
#define _PIE2_TMR3IE_LENGTH                                 0x1
#define _PIE2_TMR3IE_MASK                                   0x2
#define _PIE2_LVDIE_POSN                                    0x2
#define _PIE2_LVDIE_POSITION                                0x2
#define _PIE2_LVDIE_SIZE                                    0x1
#define _PIE2_LVDIE_LENGTH                                  0x1
#define _PIE2_LVDIE_MASK                                    0x4
#define _PIE2_BCLIE_POSN                                    0x3
#define _PIE2_BCLIE_POSITION                                0x3
#define _PIE2_BCLIE_SIZE                                    0x1
#define _PIE2_BCLIE_LENGTH                                  0x1
#define _PIE2_BCLIE_MASK                                    0x8
#define _PIE2_EEIE_POSN                                     0x4
#define _PIE2_EEIE_POSITION                                 0x4
#define _PIE2_EEIE_SIZE                                     0x1
#define _PIE2_EEIE_LENGTH                                   0x1
#define _PIE2_EEIE_MASK                                     0x10
#define _PIE2_CMIE_POSN                                     0x6
#define _PIE2_CMIE_POSITION                                 0x6
#define _PIE2_CMIE_SIZE                                     0x1
#define _PIE2_CMIE_LENGTH                                   0x1
#define _PIE2_CMIE_MASK                                     0x40

// Register: PIR2
#define PIR2 PIR2
extern volatile unsigned char           PIR2                __at(0xFA1);
#ifndef _LIB_BUILD
asm("PIR2 equ 0FA1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2IF                 :1;
        unsigned TMR3IF                 :1;
        unsigned LVDIF                  :1;
        unsigned BCLIF                  :1;
        unsigned EEIF                   :1;
        unsigned                        :1;
        unsigned CMIF                   :1;
    };
} PIR2bits_t;
extern volatile PIR2bits_t PIR2bits __at(0xFA1);
// bitfield macros
#define _PIR2_CCP2IF_POSN                                   0x0
#define _PIR2_CCP2IF_POSITION                               0x0
#define _PIR2_CCP2IF_SIZE                                   0x1
#define _PIR2_CCP2IF_LENGTH                                 0x1
#define _PIR2_CCP2IF_MASK                                   0x1
#define _PIR2_TMR3IF_POSN                                   0x1
#define _PIR2_TMR3IF_POSITION                               0x1
#define _PIR2_TMR3IF_SIZE                                   0x1
#define _PIR2_TMR3IF_LENGTH                                 0x1
#define _PIR2_TMR3IF_MASK                                   0x2
#define _PIR2_LVDIF_POSN                                    0x2
#define _PIR2_LVDIF_POSITION                                0x2
#define _PIR2_LVDIF_SIZE                                    0x1
#define _PIR2_LVDIF_LENGTH                                  0x1
#define _PIR2_LVDIF_MASK                                    0x4
#define _PIR2_BCLIF_POSN                                    0x3
#define _PIR2_BCLIF_POSITION                                0x3
#define _PIR2_BCLIF_SIZE                                    0x1
#define _PIR2_BCLIF_LENGTH                                  0x1
#define _PIR2_BCLIF_MASK                                    0x8
#define _PIR2_EEIF_POSN                                     0x4
#define _PIR2_EEIF_POSITION                                 0x4
#define _PIR2_EEIF_SIZE                                     0x1
#define _PIR2_EEIF_LENGTH                                   0x1
#define _PIR2_EEIF_MASK                                     0x10
#define _PIR2_CMIF_POSN                                     0x6
#define _PIR2_CMIF_POSITION                                 0x6
#define _PIR2_CMIF_SIZE                                     0x1
#define _PIR2_CMIF_LENGTH                                   0x1
#define _PIR2_CMIF_MASK                                     0x40

// Register: IPR2
#define IPR2 IPR2
extern volatile unsigned char           IPR2                __at(0xFA2);
#ifndef _LIB_BUILD
asm("IPR2 equ 0FA2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2IP                 :1;
        unsigned TMR3IP                 :1;
        unsigned LVDIP                  :1;
        unsigned BCLIP                  :1;
        unsigned EEIP                   :1;
        unsigned                        :1;
        unsigned CMIP                   :1;
    };
} IPR2bits_t;
extern volatile IPR2bits_t IPR2bits __at(0xFA2);
// bitfield macros
#define _IPR2_CCP2IP_POSN                                   0x0
#define _IPR2_CCP2IP_POSITION                               0x0
#define _IPR2_CCP2IP_SIZE                                   0x1
#define _IPR2_CCP2IP_LENGTH                                 0x1
#define _IPR2_CCP2IP_MASK                                   0x1
#define _IPR2_TMR3IP_POSN                                   0x1
#define _IPR2_TMR3IP_POSITION                               0x1
#define _IPR2_TMR3IP_SIZE                                   0x1
#define _IPR2_TMR3IP_LENGTH                                 0x1
#define _IPR2_TMR3IP_MASK                                   0x2
#define _IPR2_LVDIP_POSN                                    0x2
#define _IPR2_LVDIP_POSITION                                0x2
#define _IPR2_LVDIP_SIZE                                    0x1
#define _IPR2_LVDIP_LENGTH                                  0x1
#define _IPR2_LVDIP_MASK                                    0x4
#define _IPR2_BCLIP_POSN                                    0x3
#define _IPR2_BCLIP_POSITION                                0x3
#define _IPR2_BCLIP_SIZE                                    0x1
#define _IPR2_BCLIP_LENGTH                                  0x1
#define _IPR2_BCLIP_MASK                                    0x8
#define _IPR2_EEIP_POSN                                     0x4
#define _IPR2_EEIP_POSITION                                 0x4
#define _IPR2_EEIP_SIZE                                     0x1
#define _IPR2_EEIP_LENGTH                                   0x1
#define _IPR2_EEIP_MASK                                     0x10
#define _IPR2_CMIP_POSN                                     0x6
#define _IPR2_CMIP_POSITION                                 0x6
#define _IPR2_CMIP_SIZE                                     0x1
#define _IPR2_CMIP_LENGTH                                   0x1
#define _IPR2_CMIP_MASK                                     0x40

// Register: PIE3
#define PIE3 PIE3
extern volatile unsigned char           PIE3                __at(0xFA3);
#ifndef _LIB_BUILD
asm("PIE3 equ 0FA3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0IE                 :1;
        unsigned RXB1IE                 :1;
        unsigned TXB0IE                 :1;
        unsigned TXB1IE                 :1;
        unsigned TXB2IE                 :1;
        unsigned ERRIE                  :1;
        unsigned WAKIE                  :1;
        unsigned IRXIE                  :1;
    };
    struct {
        unsigned FIFOWMIE               :1;
        unsigned RXBnIE                 :1;
        unsigned                        :2;
        unsigned TXBnIE                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIE                 :1;
        unsigned                        :2;
        unsigned TXBNIE                 :1;
    };
} PIE3bits_t;
extern volatile PIE3bits_t PIE3bits __at(0xFA3);
// bitfield macros
#define _PIE3_RXB0IE_POSN                                   0x0
#define _PIE3_RXB0IE_POSITION                               0x0
#define _PIE3_RXB0IE_SIZE                                   0x1
#define _PIE3_RXB0IE_LENGTH                                 0x1
#define _PIE3_RXB0IE_MASK                                   0x1
#define _PIE3_RXB1IE_POSN                                   0x1
#define _PIE3_RXB1IE_POSITION                               0x1
#define _PIE3_RXB1IE_SIZE                                   0x1
#define _PIE3_RXB1IE_LENGTH                                 0x1
#define _PIE3_RXB1IE_MASK                                   0x2
#define _PIE3_TXB0IE_POSN                                   0x2
#define _PIE3_TXB0IE_POSITION                               0x2
#define _PIE3_TXB0IE_SIZE                                   0x1
#define _PIE3_TXB0IE_LENGTH                                 0x1
#define _PIE3_TXB0IE_MASK                                   0x4
#define _PIE3_TXB1IE_POSN                                   0x3
#define _PIE3_TXB1IE_POSITION                               0x3
#define _PIE3_TXB1IE_SIZE                                   0x1
#define _PIE3_TXB1IE_LENGTH                                 0x1
#define _PIE3_TXB1IE_MASK                                   0x8
#define _PIE3_TXB2IE_POSN                                   0x4
#define _PIE3_TXB2IE_POSITION                               0x4
#define _PIE3_TXB2IE_SIZE                                   0x1
#define _PIE3_TXB2IE_LENGTH                                 0x1
#define _PIE3_TXB2IE_MASK                                   0x10
#define _PIE3_ERRIE_POSN                                    0x5
#define _PIE3_ERRIE_POSITION                                0x5
#define _PIE3_ERRIE_SIZE                                    0x1
#define _PIE3_ERRIE_LENGTH                                  0x1
#define _PIE3_ERRIE_MASK                                    0x20
#define _PIE3_WAKIE_POSN                                    0x6
#define _PIE3_WAKIE_POSITION                                0x6
#define _PIE3_WAKIE_SIZE                                    0x1
#define _PIE3_WAKIE_LENGTH                                  0x1
#define _PIE3_WAKIE_MASK                                    0x40
#define _PIE3_IRXIE_POSN                                    0x7
#define _PIE3_IRXIE_POSITION                                0x7
#define _PIE3_IRXIE_SIZE                                    0x1
#define _PIE3_IRXIE_LENGTH                                  0x1
#define _PIE3_IRXIE_MASK                                    0x80
#define _PIE3_FIFOWMIE_POSN                                 0x0
#define _PIE3_FIFOWMIE_POSITION                             0x0
#define _PIE3_FIFOWMIE_SIZE                                 0x1
#define _PIE3_FIFOWMIE_LENGTH                               0x1
#define _PIE3_FIFOWMIE_MASK                                 0x1
#define _PIE3_RXBnIE_POSN                                   0x1
#define _PIE3_RXBnIE_POSITION                               0x1
#define _PIE3_RXBnIE_SIZE                                   0x1
#define _PIE3_RXBnIE_LENGTH                                 0x1
#define _PIE3_RXBnIE_MASK                                   0x2
#define _PIE3_TXBnIE_POSN                                   0x4
#define _PIE3_TXBnIE_POSITION                               0x4
#define _PIE3_TXBnIE_SIZE                                   0x1
#define _PIE3_TXBnIE_LENGTH                                 0x1
#define _PIE3_TXBnIE_MASK                                   0x10
#define _PIE3_RXBNIE_POSN                                   0x1
#define _PIE3_RXBNIE_POSITION                               0x1
#define _PIE3_RXBNIE_SIZE                                   0x1
#define _PIE3_RXBNIE_LENGTH                                 0x1
#define _PIE3_RXBNIE_MASK                                   0x2
#define _PIE3_TXBNIE_POSN                                   0x4
#define _PIE3_TXBNIE_POSITION                               0x4
#define _PIE3_TXBNIE_SIZE                                   0x1
#define _PIE3_TXBNIE_LENGTH                                 0x1
#define _PIE3_TXBNIE_MASK                                   0x10

// Register: PIR3
#define PIR3 PIR3
extern volatile unsigned char           PIR3                __at(0xFA4);
#ifndef _LIB_BUILD
asm("PIR3 equ 0FA4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0IF                 :1;
        unsigned RXB1IF                 :1;
        unsigned TXB0IF                 :1;
        unsigned TXB1IF                 :1;
        unsigned TXB2IF                 :1;
        unsigned ERRIF                  :1;
        unsigned WAKIF                  :1;
        unsigned IRXIF                  :1;
    };
    struct {
        unsigned FIFOWMIF               :1;
        unsigned RXBnIF                 :1;
        unsigned                        :2;
        unsigned TXBnIF                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIF                 :1;
        unsigned                        :2;
        unsigned TXBNIF                 :1;
    };
} PIR3bits_t;
extern volatile PIR3bits_t PIR3bits __at(0xFA4);
// bitfield macros
#define _PIR3_RXB0IF_POSN                                   0x0
#define _PIR3_RXB0IF_POSITION                               0x0
#define _PIR3_RXB0IF_SIZE                                   0x1
#define _PIR3_RXB0IF_LENGTH                                 0x1
#define _PIR3_RXB0IF_MASK                                   0x1
#define _PIR3_RXB1IF_POSN                                   0x1
#define _PIR3_RXB1IF_POSITION                               0x1
#define _PIR3_RXB1IF_SIZE                                   0x1
#define _PIR3_RXB1IF_LENGTH                                 0x1
#define _PIR3_RXB1IF_MASK                                   0x2
#define _PIR3_TXB0IF_POSN                                   0x2
#define _PIR3_TXB0IF_POSITION                               0x2
#define _PIR3_TXB0IF_SIZE                                   0x1
#define _PIR3_TXB0IF_LENGTH                                 0x1
#define _PIR3_TXB0IF_MASK                                   0x4
#define _PIR3_TXB1IF_POSN                                   0x3
#define _PIR3_TXB1IF_POSITION                               0x3
#define _PIR3_TXB1IF_SIZE                                   0x1
#define _PIR3_TXB1IF_LENGTH                                 0x1
#define _PIR3_TXB1IF_MASK                                   0x8
#define _PIR3_TXB2IF_POSN                                   0x4
#define _PIR3_TXB2IF_POSITION                               0x4
#define _PIR3_TXB2IF_SIZE                                   0x1
#define _PIR3_TXB2IF_LENGTH                                 0x1
#define _PIR3_TXB2IF_MASK                                   0x10
#define _PIR3_ERRIF_POSN                                    0x5
#define _PIR3_ERRIF_POSITION                                0x5
#define _PIR3_ERRIF_SIZE                                    0x1
#define _PIR3_ERRIF_LENGTH                                  0x1
#define _PIR3_ERRIF_MASK                                    0x20
#define _PIR3_WAKIF_POSN                                    0x6
#define _PIR3_WAKIF_POSITION                                0x6
#define _PIR3_WAKIF_SIZE                                    0x1
#define _PIR3_WAKIF_LENGTH                                  0x1
#define _PIR3_WAKIF_MASK                                    0x40
#define _PIR3_IRXIF_POSN                                    0x7
#define _PIR3_IRXIF_POSITION                                0x7
#define _PIR3_IRXIF_SIZE                                    0x1
#define _PIR3_IRXIF_LENGTH                                  0x1
#define _PIR3_IRXIF_MASK                                    0x80
#define _PIR3_FIFOWMIF_POSN                                 0x0
#define _PIR3_FIFOWMIF_POSITION                             0x0
#define _PIR3_FIFOWMIF_SIZE                                 0x1
#define _PIR3_FIFOWMIF_LENGTH                               0x1
#define _PIR3_FIFOWMIF_MASK                                 0x1
#define _PIR3_RXBnIF_POSN                                   0x1
#define _PIR3_RXBnIF_POSITION                               0x1
#define _PIR3_RXBnIF_SIZE                                   0x1
#define _PIR3_RXBnIF_LENGTH                                 0x1
#define _PIR3_RXBnIF_MASK                                   0x2
#define _PIR3_TXBnIF_POSN                                   0x4
#define _PIR3_TXBnIF_POSITION                               0x4
#define _PIR3_TXBnIF_SIZE                                   0x1
#define _PIR3_TXBnIF_LENGTH                                 0x1
#define _PIR3_TXBnIF_MASK                                   0x10
#define _PIR3_RXBNIF_POSN                                   0x1
#define _PIR3_RXBNIF_POSITION                               0x1
#define _PIR3_RXBNIF_SIZE                                   0x1
#define _PIR3_RXBNIF_LENGTH                                 0x1
#define _PIR3_RXBNIF_MASK                                   0x2
#define _PIR3_TXBNIF_POSN                                   0x4
#define _PIR3_TXBNIF_POSITION                               0x4
#define _PIR3_TXBNIF_SIZE                                   0x1
#define _PIR3_TXBNIF_LENGTH                                 0x1
#define _PIR3_TXBNIF_MASK                                   0x10

// Register: IPR3
#define IPR3 IPR3
extern volatile unsigned char           IPR3                __at(0xFA5);
#ifndef _LIB_BUILD
asm("IPR3 equ 0FA5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXB0IP                 :1;
        unsigned RXB1IP                 :1;
        unsigned TXB0IP                 :1;
        unsigned TXB1IP                 :1;
        unsigned TXB2IP                 :1;
        unsigned ERRIP                  :1;
        unsigned WAKIP                  :1;
        unsigned IRXIP                  :1;
    };
    struct {
        unsigned FIFOWMIP               :1;
        unsigned RXBnIP                 :1;
        unsigned                        :2;
        unsigned TXBnIP                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIP                 :1;
        unsigned                        :2;
        unsigned TXBNIP                 :1;
    };
} IPR3bits_t;
extern volatile IPR3bits_t IPR3bits __at(0xFA5);
// bitfield macros
#define _IPR3_RXB0IP_POSN                                   0x0
#define _IPR3_RXB0IP_POSITION                               0x0
#define _IPR3_RXB0IP_SIZE                                   0x1
#define _IPR3_RXB0IP_LENGTH                                 0x1
#define _IPR3_RXB0IP_MASK                                   0x1
#define _IPR3_RXB1IP_POSN                                   0x1
#define _IPR3_RXB1IP_POSITION                               0x1
#define _IPR3_RXB1IP_SIZE                                   0x1
#define _IPR3_RXB1IP_LENGTH                                 0x1
#define _IPR3_RXB1IP_MASK                                   0x2
#define _IPR3_TXB0IP_POSN                                   0x2
#define _IPR3_TXB0IP_POSITION                               0x2
#define _IPR3_TXB0IP_SIZE                                   0x1
#define _IPR3_TXB0IP_LENGTH                                 0x1
#define _IPR3_TXB0IP_MASK                                   0x4
#define _IPR3_TXB1IP_POSN                                   0x3
#define _IPR3_TXB1IP_POSITION                               0x3
#define _IPR3_TXB1IP_SIZE                                   0x1
#define _IPR3_TXB1IP_LENGTH                                 0x1
#define _IPR3_TXB1IP_MASK                                   0x8
#define _IPR3_TXB2IP_POSN                                   0x4
#define _IPR3_TXB2IP_POSITION                               0x4
#define _IPR3_TXB2IP_SIZE                                   0x1
#define _IPR3_TXB2IP_LENGTH                                 0x1
#define _IPR3_TXB2IP_MASK                                   0x10
#define _IPR3_ERRIP_POSN                                    0x5
#define _IPR3_ERRIP_POSITION                                0x5
#define _IPR3_ERRIP_SIZE                                    0x1
#define _IPR3_ERRIP_LENGTH                                  0x1
#define _IPR3_ERRIP_MASK                                    0x20
#define _IPR3_WAKIP_POSN                                    0x6
#define _IPR3_WAKIP_POSITION                                0x6
#define _IPR3_WAKIP_SIZE                                    0x1
#define _IPR3_WAKIP_LENGTH                                  0x1
#define _IPR3_WAKIP_MASK                                    0x40
#define _IPR3_IRXIP_POSN                                    0x7
#define _IPR3_IRXIP_POSITION                                0x7
#define _IPR3_IRXIP_SIZE                                    0x1
#define _IPR3_IRXIP_LENGTH                                  0x1
#define _IPR3_IRXIP_MASK                                    0x80
#define _IPR3_FIFOWMIP_POSN                                 0x0
#define _IPR3_FIFOWMIP_POSITION                             0x0
#define _IPR3_FIFOWMIP_SIZE                                 0x1
#define _IPR3_FIFOWMIP_LENGTH                               0x1
#define _IPR3_FIFOWMIP_MASK                                 0x1
#define _IPR3_RXBnIP_POSN                                   0x1
#define _IPR3_RXBnIP_POSITION                               0x1
#define _IPR3_RXBnIP_SIZE                                   0x1
#define _IPR3_RXBnIP_LENGTH                                 0x1
#define _IPR3_RXBnIP_MASK                                   0x2
#define _IPR3_TXBnIP_POSN                                   0x4
#define _IPR3_TXBnIP_POSITION                               0x4
#define _IPR3_TXBnIP_SIZE                                   0x1
#define _IPR3_TXBnIP_LENGTH                                 0x1
#define _IPR3_TXBnIP_MASK                                   0x10
#define _IPR3_RXBNIP_POSN                                   0x1
#define _IPR3_RXBNIP_POSITION                               0x1
#define _IPR3_RXBNIP_SIZE                                   0x1
#define _IPR3_RXBNIP_LENGTH                                 0x1
#define _IPR3_RXBNIP_MASK                                   0x2
#define _IPR3_TXBNIP_POSN                                   0x4
#define _IPR3_TXBNIP_POSITION                               0x4
#define _IPR3_TXBNIP_SIZE                                   0x1
#define _IPR3_TXBNIP_LENGTH                                 0x1
#define _IPR3_TXBNIP_MASK                                   0x10

// Register: EECON1
#define EECON1 EECON1
extern volatile unsigned char           EECON1              __at(0xFA6);
#ifndef _LIB_BUILD
asm("EECON1 equ 0FA6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD                     :1;
        unsigned WR                     :1;
        unsigned WREN                   :1;
        unsigned WRERR                  :1;
        unsigned FREE                   :1;
        unsigned                        :1;
        unsigned CFGS                   :1;
        unsigned EEPGD                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned EEFS                   :1;
    };
} EECON1bits_t;
extern volatile EECON1bits_t EECON1bits __at(0xFA6);
// bitfield macros
#define _EECON1_RD_POSN                                     0x0
#define _EECON1_RD_POSITION                                 0x0
#define _EECON1_RD_SIZE                                     0x1
#define _EECON1_RD_LENGTH                                   0x1
#define _EECON1_RD_MASK                                     0x1
#define _EECON1_WR_POSN                                     0x1
#define _EECON1_WR_POSITION                                 0x1
#define _EECON1_WR_SIZE                                     0x1
#define _EECON1_WR_LENGTH                                   0x1
#define _EECON1_WR_MASK                                     0x2
#define _EECON1_WREN_POSN                                   0x2
#define _EECON1_WREN_POSITION                               0x2
#define _EECON1_WREN_SIZE                                   0x1
#define _EECON1_WREN_LENGTH                                 0x1
#define _EECON1_WREN_MASK                                   0x4
#define _EECON1_WRERR_POSN                                  0x3
#define _EECON1_WRERR_POSITION                              0x3
#define _EECON1_WRERR_SIZE                                  0x1
#define _EECON1_WRERR_LENGTH                                0x1
#define _EECON1_WRERR_MASK                                  0x8
#define _EECON1_FREE_POSN                                   0x4
#define _EECON1_FREE_POSITION                               0x4
#define _EECON1_FREE_SIZE                                   0x1
#define _EECON1_FREE_LENGTH                                 0x1
#define _EECON1_FREE_MASK                                   0x10
#define _EECON1_CFGS_POSN                                   0x6
#define _EECON1_CFGS_POSITION                               0x6
#define _EECON1_CFGS_SIZE                                   0x1
#define _EECON1_CFGS_LENGTH                                 0x1
#define _EECON1_CFGS_MASK                                   0x40
#define _EECON1_EEPGD_POSN                                  0x7
#define _EECON1_EEPGD_POSITION                              0x7
#define _EECON1_EEPGD_SIZE                                  0x1
#define _EECON1_EEPGD_LENGTH                                0x1
#define _EECON1_EEPGD_MASK                                  0x80
#define _EECON1_EEFS_POSN                                   0x6
#define _EECON1_EEFS_POSITION                               0x6
#define _EECON1_EEFS_SIZE                                   0x1
#define _EECON1_EEFS_LENGTH                                 0x1
#define _EECON1_EEFS_MASK                                   0x40

// Register: EECON2
#define EECON2 EECON2
extern volatile unsigned char           EECON2              __at(0xFA7);
#ifndef _LIB_BUILD
asm("EECON2 equ 0FA7h");
#endif

// Register: EEDATA
#define EEDATA EEDATA
extern volatile unsigned char           EEDATA              __at(0xFA8);
#ifndef _LIB_BUILD
asm("EEDATA equ 0FA8h");
#endif

// Register: EEADR
#define EEADR EEADR
extern volatile unsigned char           EEADR               __at(0xFA9);
#ifndef _LIB_BUILD
asm("EEADR equ 0FA9h");
#endif

// Register: EEADRH
#define EEADRH EEADRH
extern volatile unsigned char           EEADRH              __at(0xFAA);
#ifndef _LIB_BUILD
asm("EEADRH equ 0FAAh");
#endif

// Register: RCSTA
#define RCSTA RCSTA
extern volatile unsigned char           RCSTA               __at(0xFAB);
#ifndef _LIB_BUILD
asm("RCSTA equ 0FABh");
#endif
// aliases
extern volatile unsigned char           RCSTA1              __at(0xFAB);
#ifndef _LIB_BUILD
asm("RCSTA1 equ 0FABh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned ADEN                   :1;
    };
    struct {
        unsigned RX9D1                  :1;
        unsigned OERR1                  :1;
        unsigned FERR1                  :1;
        unsigned ADDEN1                 :1;
        unsigned CREN1                  :1;
        unsigned SREN1                  :1;
        unsigned RX91                   :1;
        unsigned SPEN1                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned SRENA                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC8_9                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC9                    :1;
    };
    struct {
        unsigned RCD8                   :1;
    };
} RCSTAbits_t;
extern volatile RCSTAbits_t RCSTAbits __at(0xFAB);
// bitfield macros
#define _RCSTA_RX9D_POSN                                    0x0
#define _RCSTA_RX9D_POSITION                                0x0
#define _RCSTA_RX9D_SIZE                                    0x1
#define _RCSTA_RX9D_LENGTH                                  0x1
#define _RCSTA_RX9D_MASK                                    0x1
#define _RCSTA_OERR_POSN                                    0x1
#define _RCSTA_OERR_POSITION                                0x1
#define _RCSTA_OERR_SIZE                                    0x1
#define _RCSTA_OERR_LENGTH                                  0x1
#define _RCSTA_OERR_MASK                                    0x2
#define _RCSTA_FERR_POSN                                    0x2
#define _RCSTA_FERR_POSITION                                0x2
#define _RCSTA_FERR_SIZE                                    0x1
#define _RCSTA_FERR_LENGTH                                  0x1
#define _RCSTA_FERR_MASK                                    0x4
#define _RCSTA_ADDEN_POSN                                   0x3
#define _RCSTA_ADDEN_POSITION                               0x3
#define _RCSTA_ADDEN_SIZE                                   0x1
#define _RCSTA_ADDEN_LENGTH                                 0x1
#define _RCSTA_ADDEN_MASK                                   0x8
#define _RCSTA_CREN_POSN                                    0x4
#define _RCSTA_CREN_POSITION                                0x4
#define _RCSTA_CREN_SIZE                                    0x1
#define _RCSTA_CREN_LENGTH                                  0x1
#define _RCSTA_CREN_MASK                                    0x10
#define _RCSTA_SREN_POSN                                    0x5
#define _RCSTA_SREN_POSITION                                0x5
#define _RCSTA_SREN_SIZE                                    0x1
#define _RCSTA_SREN_LENGTH                                  0x1
#define _RCSTA_SREN_MASK                                    0x20
#define _RCSTA_RX9_POSN                                     0x6
#define _RCSTA_RX9_POSITION                                 0x6
#define _RCSTA_RX9_SIZE                                     0x1
#define _RCSTA_RX9_LENGTH                                   0x1
#define _RCSTA_RX9_MASK                                     0x40
#define _RCSTA_SPEN_POSN                                    0x7
#define _RCSTA_SPEN_POSITION                                0x7
#define _RCSTA_SPEN_SIZE                                    0x1
#define _RCSTA_SPEN_LENGTH                                  0x1
#define _RCSTA_SPEN_MASK                                    0x80
#define _RCSTA_ADEN_POSN                                    0x3
#define _RCSTA_ADEN_POSITION                                0x3
#define _RCSTA_ADEN_SIZE                                    0x1
#define _RCSTA_ADEN_LENGTH                                  0x1
#define _RCSTA_ADEN_MASK                                    0x8
#define _RCSTA_RX9D1_POSN                                   0x0
#define _RCSTA_RX9D1_POSITION                               0x0
#define _RCSTA_RX9D1_SIZE                                   0x1
#define _RCSTA_RX9D1_LENGTH                                 0x1
#define _RCSTA_RX9D1_MASK                                   0x1
#define _RCSTA_OERR1_POSN                                   0x1
#define _RCSTA_OERR1_POSITION                               0x1
#define _RCSTA_OERR1_SIZE                                   0x1
#define _RCSTA_OERR1_LENGTH                                 0x1
#define _RCSTA_OERR1_MASK                                   0x2
#define _RCSTA_FERR1_POSN                                   0x2
#define _RCSTA_FERR1_POSITION                               0x2
#define _RCSTA_FERR1_SIZE                                   0x1
#define _RCSTA_FERR1_LENGTH                                 0x1
#define _RCSTA_FERR1_MASK                                   0x4
#define _RCSTA_ADDEN1_POSN                                  0x3
#define _RCSTA_ADDEN1_POSITION                              0x3
#define _RCSTA_ADDEN1_SIZE                                  0x1
#define _RCSTA_ADDEN1_LENGTH                                0x1
#define _RCSTA_ADDEN1_MASK                                  0x8
#define _RCSTA_CREN1_POSN                                   0x4
#define _RCSTA_CREN1_POSITION                               0x4
#define _RCSTA_CREN1_SIZE                                   0x1
#define _RCSTA_CREN1_LENGTH                                 0x1
#define _RCSTA_CREN1_MASK                                   0x10
#define _RCSTA_SREN1_POSN                                   0x5
#define _RCSTA_SREN1_POSITION                               0x5
#define _RCSTA_SREN1_SIZE                                   0x1
#define _RCSTA_SREN1_LENGTH                                 0x1
#define _RCSTA_SREN1_MASK                                   0x20
#define _RCSTA_RX91_POSN                                    0x6
#define _RCSTA_RX91_POSITION                                0x6
#define _RCSTA_RX91_SIZE                                    0x1
#define _RCSTA_RX91_LENGTH                                  0x1
#define _RCSTA_RX91_MASK                                    0x40
#define _RCSTA_SPEN1_POSN                                   0x7
#define _RCSTA_SPEN1_POSITION                               0x7
#define _RCSTA_SPEN1_SIZE                                   0x1
#define _RCSTA_SPEN1_LENGTH                                 0x1
#define _RCSTA_SPEN1_MASK                                   0x80
#define _RCSTA_SRENA_POSN                                   0x5
#define _RCSTA_SRENA_POSITION                               0x5
#define _RCSTA_SRENA_SIZE                                   0x1
#define _RCSTA_SRENA_LENGTH                                 0x1
#define _RCSTA_SRENA_MASK                                   0x20
#define _RCSTA_RC8_9_POSN                                   0x6
#define _RCSTA_RC8_9_POSITION                               0x6
#define _RCSTA_RC8_9_SIZE                                   0x1
#define _RCSTA_RC8_9_LENGTH                                 0x1
#define _RCSTA_RC8_9_MASK                                   0x40
#define _RCSTA_RC9_POSN                                     0x6
#define _RCSTA_RC9_POSITION                                 0x6
#define _RCSTA_RC9_SIZE                                     0x1
#define _RCSTA_RC9_LENGTH                                   0x1
#define _RCSTA_RC9_MASK                                     0x40
#define _RCSTA_RCD8_POSN                                    0x0
#define _RCSTA_RCD8_POSITION                                0x0
#define _RCSTA_RCD8_SIZE                                    0x1
#define _RCSTA_RCD8_LENGTH                                  0x1
#define _RCSTA_RCD8_MASK                                    0x1
// alias bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned ADEN                   :1;
    };
    struct {
        unsigned RX9D1                  :1;
        unsigned OERR1                  :1;
        unsigned FERR1                  :1;
        unsigned ADDEN1                 :1;
        unsigned CREN1                  :1;
        unsigned SREN1                  :1;
        unsigned RX91                   :1;
        unsigned SPEN1                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned SRENA                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC8_9                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC9                    :1;
    };
    struct {
        unsigned RCD8                   :1;
    };
} RCSTA1bits_t;
extern volatile RCSTA1bits_t RCSTA1bits __at(0xFAB);
// bitfield macros
#define _RCSTA1_RX9D_POSN                                   0x0
#define _RCSTA1_RX9D_POSITION                               0x0
#define _RCSTA1_RX9D_SIZE                                   0x1
#define _RCSTA1_RX9D_LENGTH                                 0x1
#define _RCSTA1_RX9D_MASK                                   0x1
#define _RCSTA1_OERR_POSN                                   0x1
#define _RCSTA1_OERR_POSITION                               0x1
#define _RCSTA1_OERR_SIZE                                   0x1
#define _RCSTA1_OERR_LENGTH                                 0x1
#define _RCSTA1_OERR_MASK                                   0x2
#define _RCSTA1_FERR_POSN                                   0x2
#define _RCSTA1_FERR_POSITION                               0x2
#define _RCSTA1_FERR_SIZE                                   0x1
#define _RCSTA1_FERR_LENGTH                                 0x1
#define _RCSTA1_FERR_MASK                                   0x4
#define _RCSTA1_ADDEN_POSN                                  0x3
#define _RCSTA1_ADDEN_POSITION                              0x3
#define _RCSTA1_ADDEN_SIZE                                  0x1
#define _RCSTA1_ADDEN_LENGTH                                0x1
#define _RCSTA1_ADDEN_MASK                                  0x8
#define _RCSTA1_CREN_POSN                                   0x4
#define _RCSTA1_CREN_POSITION                               0x4
#define _RCSTA1_CREN_SIZE                                   0x1
#define _RCSTA1_CREN_LENGTH                                 0x1
#define _RCSTA1_CREN_MASK                                   0x10
#define _RCSTA1_SREN_POSN                                   0x5
#define _RCSTA1_SREN_POSITION                               0x5
#define _RCSTA1_SREN_SIZE                                   0x1
#define _RCSTA1_SREN_LENGTH                                 0x1
#define _RCSTA1_SREN_MASK                                   0x20
#define _RCSTA1_RX9_POSN                                    0x6
#define _RCSTA1_RX9_POSITION                                0x6
#define _RCSTA1_RX9_SIZE                                    0x1
#define _RCSTA1_RX9_LENGTH                                  0x1
#define _RCSTA1_RX9_MASK                                    0x40
#define _RCSTA1_SPEN_POSN                                   0x7
#define _RCSTA1_SPEN_POSITION                               0x7
#define _RCSTA1_SPEN_SIZE                                   0x1
#define _RCSTA1_SPEN_LENGTH                                 0x1
#define _RCSTA1_SPEN_MASK                                   0x80
#define _RCSTA1_ADEN_POSN                                   0x3
#define _RCSTA1_ADEN_POSITION                               0x3
#define _RCSTA1_ADEN_SIZE                                   0x1
#define _RCSTA1_ADEN_LENGTH                                 0x1
#define _RCSTA1_ADEN_MASK                                   0x8
#define _RCSTA1_RX9D1_POSN                                  0x0
#define _RCSTA1_RX9D1_POSITION                              0x0
#define _RCSTA1_RX9D1_SIZE                                  0x1
#define _RCSTA1_RX9D1_LENGTH                                0x1
#define _RCSTA1_RX9D1_MASK                                  0x1
#define _RCSTA1_OERR1_POSN                                  0x1
#define _RCSTA1_OERR1_POSITION                              0x1
#define _RCSTA1_OERR1_SIZE                                  0x1
#define _RCSTA1_OERR1_LENGTH                                0x1
#define _RCSTA1_OERR1_MASK                                  0x2
#define _RCSTA1_FERR1_POSN                                  0x2
#define _RCSTA1_FERR1_POSITION                              0x2
#define _RCSTA1_FERR1_SIZE                                  0x1
#define _RCSTA1_FERR1_LENGTH                                0x1
#define _RCSTA1_FERR1_MASK                                  0x4
#define _RCSTA1_ADDEN1_POSN                                 0x3
#define _RCSTA1_ADDEN1_POSITION                             0x3
#define _RCSTA1_ADDEN1_SIZE                                 0x1
#define _RCSTA1_ADDEN1_LENGTH                               0x1
#define _RCSTA1_ADDEN1_MASK                                 0x8
#define _RCSTA1_CREN1_POSN                                  0x4
#define _RCSTA1_CREN1_POSITION                              0x4
#define _RCSTA1_CREN1_SIZE                                  0x1
#define _RCSTA1_CREN1_LENGTH                                0x1
#define _RCSTA1_CREN1_MASK                                  0x10
#define _RCSTA1_SREN1_POSN                                  0x5
#define _RCSTA1_SREN1_POSITION                              0x5
#define _RCSTA1_SREN1_SIZE                                  0x1
#define _RCSTA1_SREN1_LENGTH                                0x1
#define _RCSTA1_SREN1_MASK                                  0x20
#define _RCSTA1_RX91_POSN                                   0x6
#define _RCSTA1_RX91_POSITION                               0x6
#define _RCSTA1_RX91_SIZE                                   0x1
#define _RCSTA1_RX91_LENGTH                                 0x1
#define _RCSTA1_RX91_MASK                                   0x40
#define _RCSTA1_SPEN1_POSN                                  0x7
#define _RCSTA1_SPEN1_POSITION                              0x7
#define _RCSTA1_SPEN1_SIZE                                  0x1
#define _RCSTA1_SPEN1_LENGTH                                0x1
#define _RCSTA1_SPEN1_MASK                                  0x80
#define _RCSTA1_SRENA_POSN                                  0x5
#define _RCSTA1_SRENA_POSITION                              0x5
#define _RCSTA1_SRENA_SIZE                                  0x1
#define _RCSTA1_SRENA_LENGTH                                0x1
#define _RCSTA1_SRENA_MASK                                  0x20
#define _RCSTA1_RC8_9_POSN                                  0x6
#define _RCSTA1_RC8_9_POSITION                              0x6
#define _RCSTA1_RC8_9_SIZE                                  0x1
#define _RCSTA1_RC8_9_LENGTH                                0x1
#define _RCSTA1_RC8_9_MASK                                  0x40
#define _RCSTA1_RC9_POSN                                    0x6
#define _RCSTA1_RC9_POSITION                                0x6
#define _RCSTA1_RC9_SIZE                                    0x1
#define _RCSTA1_RC9_LENGTH                                  0x1
#define _RCSTA1_RC9_MASK                                    0x40
#define _RCSTA1_RCD8_POSN                                   0x0
#define _RCSTA1_RCD8_POSITION                               0x0
#define _RCSTA1_RCD8_SIZE                                   0x1
#define _RCSTA1_RCD8_LENGTH                                 0x1
#define _RCSTA1_RCD8_MASK                                   0x1

// Register: TXSTA
#define TXSTA TXSTA
extern volatile unsigned char           TXSTA               __at(0xFAC);
#ifndef _LIB_BUILD
asm("TXSTA equ 0FACh");
#endif
// aliases
extern volatile unsigned char           TXSTA1              __at(0xFAC);
#ifndef _LIB_BUILD
asm("TXSTA1 equ 0FACh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
    struct {
        unsigned TX9D1                  :1;
        unsigned TRMT1                  :1;
        unsigned BRGH1                  :1;
        unsigned SENDB1                 :1;
        unsigned SYNC1                  :1;
        unsigned TXEN1                  :1;
        unsigned TX91                   :1;
        unsigned CSRC1                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned TX8_9                  :1;
    };
    struct {
        unsigned TXD8                   :1;
    };
} TXSTAbits_t;
extern volatile TXSTAbits_t TXSTAbits __at(0xFAC);
// bitfield macros
#define _TXSTA_TX9D_POSN                                    0x0
#define _TXSTA_TX9D_POSITION                                0x0
#define _TXSTA_TX9D_SIZE                                    0x1
#define _TXSTA_TX9D_LENGTH                                  0x1
#define _TXSTA_TX9D_MASK                                    0x1
#define _TXSTA_TRMT_POSN                                    0x1
#define _TXSTA_TRMT_POSITION                                0x1
#define _TXSTA_TRMT_SIZE                                    0x1
#define _TXSTA_TRMT_LENGTH                                  0x1
#define _TXSTA_TRMT_MASK                                    0x2
#define _TXSTA_BRGH_POSN                                    0x2
#define _TXSTA_BRGH_POSITION                                0x2
#define _TXSTA_BRGH_SIZE                                    0x1
#define _TXSTA_BRGH_LENGTH                                  0x1
#define _TXSTA_BRGH_MASK                                    0x4
#define _TXSTA_SENDB_POSN                                   0x3
#define _TXSTA_SENDB_POSITION                               0x3
#define _TXSTA_SENDB_SIZE                                   0x1
#define _TXSTA_SENDB_LENGTH                                 0x1
#define _TXSTA_SENDB_MASK                                   0x8
#define _TXSTA_SYNC_POSN                                    0x4
#define _TXSTA_SYNC_POSITION                                0x4
#define _TXSTA_SYNC_SIZE                                    0x1
#define _TXSTA_SYNC_LENGTH                                  0x1
#define _TXSTA_SYNC_MASK                                    0x10
#define _TXSTA_TXEN_POSN                                    0x5
#define _TXSTA_TXEN_POSITION                                0x5
#define _TXSTA_TXEN_SIZE                                    0x1
#define _TXSTA_TXEN_LENGTH                                  0x1
#define _TXSTA_TXEN_MASK                                    0x20
#define _TXSTA_TX9_POSN                                     0x6
#define _TXSTA_TX9_POSITION                                 0x6
#define _TXSTA_TX9_SIZE                                     0x1
#define _TXSTA_TX9_LENGTH                                   0x1
#define _TXSTA_TX9_MASK                                     0x40
#define _TXSTA_CSRC_POSN                                    0x7
#define _TXSTA_CSRC_POSITION                                0x7
#define _TXSTA_CSRC_SIZE                                    0x1
#define _TXSTA_CSRC_LENGTH                                  0x1
#define _TXSTA_CSRC_MASK                                    0x80
#define _TXSTA_TX9D1_POSN                                   0x0
#define _TXSTA_TX9D1_POSITION                               0x0
#define _TXSTA_TX9D1_SIZE                                   0x1
#define _TXSTA_TX9D1_LENGTH                                 0x1
#define _TXSTA_TX9D1_MASK                                   0x1
#define _TXSTA_TRMT1_POSN                                   0x1
#define _TXSTA_TRMT1_POSITION                               0x1
#define _TXSTA_TRMT1_SIZE                                   0x1
#define _TXSTA_TRMT1_LENGTH                                 0x1
#define _TXSTA_TRMT1_MASK                                   0x2
#define _TXSTA_BRGH1_POSN                                   0x2
#define _TXSTA_BRGH1_POSITION                               0x2
#define _TXSTA_BRGH1_SIZE                                   0x1
#define _TXSTA_BRGH1_LENGTH                                 0x1
#define _TXSTA_BRGH1_MASK                                   0x4
#define _TXSTA_SENDB1_POSN                                  0x3
#define _TXSTA_SENDB1_POSITION                              0x3
#define _TXSTA_SENDB1_SIZE                                  0x1
#define _TXSTA_SENDB1_LENGTH                                0x1
#define _TXSTA_SENDB1_MASK                                  0x8
#define _TXSTA_SYNC1_POSN                                   0x4
#define _TXSTA_SYNC1_POSITION                               0x4
#define _TXSTA_SYNC1_SIZE                                   0x1
#define _TXSTA_SYNC1_LENGTH                                 0x1
#define _TXSTA_SYNC1_MASK                                   0x10
#define _TXSTA_TXEN1_POSN                                   0x5
#define _TXSTA_TXEN1_POSITION                               0x5
#define _TXSTA_TXEN1_SIZE                                   0x1
#define _TXSTA_TXEN1_LENGTH                                 0x1
#define _TXSTA_TXEN1_MASK                                   0x20
#define _TXSTA_TX91_POSN                                    0x6
#define _TXSTA_TX91_POSITION                                0x6
#define _TXSTA_TX91_SIZE                                    0x1
#define _TXSTA_TX91_LENGTH                                  0x1
#define _TXSTA_TX91_MASK                                    0x40
#define _TXSTA_CSRC1_POSN                                   0x7
#define _TXSTA_CSRC1_POSITION                               0x7
#define _TXSTA_CSRC1_SIZE                                   0x1
#define _TXSTA_CSRC1_LENGTH                                 0x1
#define _TXSTA_CSRC1_MASK                                   0x80
#define _TXSTA_TX8_9_POSN                                   0x6
#define _TXSTA_TX8_9_POSITION                               0x6
#define _TXSTA_TX8_9_SIZE                                   0x1
#define _TXSTA_TX8_9_LENGTH                                 0x1
#define _TXSTA_TX8_9_MASK                                   0x40
#define _TXSTA_TXD8_POSN                                    0x0
#define _TXSTA_TXD8_POSITION                                0x0
#define _TXSTA_TXD8_SIZE                                    0x1
#define _TXSTA_TXD8_LENGTH                                  0x1
#define _TXSTA_TXD8_MASK                                    0x1
// alias bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
    struct {
        unsigned TX9D1                  :1;
        unsigned TRMT1                  :1;
        unsigned BRGH1                  :1;
        unsigned SENDB1                 :1;
        unsigned SYNC1                  :1;
        unsigned TXEN1                  :1;
        unsigned TX91                   :1;
        unsigned CSRC1                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned TX8_9                  :1;
    };
    struct {
        unsigned TXD8                   :1;
    };
} TXSTA1bits_t;
extern volatile TXSTA1bits_t TXSTA1bits __at(0xFAC);
// bitfield macros
#define _TXSTA1_TX9D_POSN                                   0x0
#define _TXSTA1_TX9D_POSITION                               0x0
#define _TXSTA1_TX9D_SIZE                                   0x1
#define _TXSTA1_TX9D_LENGTH                                 0x1
#define _TXSTA1_TX9D_MASK                                   0x1
#define _TXSTA1_TRMT_POSN                                   0x1
#define _TXSTA1_TRMT_POSITION                               0x1
#define _TXSTA1_TRMT_SIZE                                   0x1
#define _TXSTA1_TRMT_LENGTH                                 0x1
#define _TXSTA1_TRMT_MASK                                   0x2
#define _TXSTA1_BRGH_POSN                                   0x2
#define _TXSTA1_BRGH_POSITION                               0x2
#define _TXSTA1_BRGH_SIZE                                   0x1
#define _TXSTA1_BRGH_LENGTH                                 0x1
#define _TXSTA1_BRGH_MASK                                   0x4
#define _TXSTA1_SENDB_POSN                                  0x3
#define _TXSTA1_SENDB_POSITION                              0x3
#define _TXSTA1_SENDB_SIZE                                  0x1
#define _TXSTA1_SENDB_LENGTH                                0x1
#define _TXSTA1_SENDB_MASK                                  0x8
#define _TXSTA1_SYNC_POSN                                   0x4
#define _TXSTA1_SYNC_POSITION                               0x4
#define _TXSTA1_SYNC_SIZE                                   0x1
#define _TXSTA1_SYNC_LENGTH                                 0x1
#define _TXSTA1_SYNC_MASK                                   0x10
#define _TXSTA1_TXEN_POSN                                   0x5
#define _TXSTA1_TXEN_POSITION                               0x5
#define _TXSTA1_TXEN_SIZE                                   0x1
#define _TXSTA1_TXEN_LENGTH                                 0x1
#define _TXSTA1_TXEN_MASK                                   0x20
#define _TXSTA1_TX9_POSN                                    0x6
#define _TXSTA1_TX9_POSITION                                0x6
#define _TXSTA1_TX9_SIZE                                    0x1
#define _TXSTA1_TX9_LENGTH                                  0x1
#define _TXSTA1_TX9_MASK                                    0x40
#define _TXSTA1_CSRC_POSN                                   0x7
#define _TXSTA1_CSRC_POSITION                               0x7
#define _TXSTA1_CSRC_SIZE                                   0x1
#define _TXSTA1_CSRC_LENGTH                                 0x1
#define _TXSTA1_CSRC_MASK                                   0x80
#define _TXSTA1_TX9D1_POSN                                  0x0
#define _TXSTA1_TX9D1_POSITION                              0x0
#define _TXSTA1_TX9D1_SIZE                                  0x1
#define _TXSTA1_TX9D1_LENGTH                                0x1
#define _TXSTA1_TX9D1_MASK                                  0x1
#define _TXSTA1_TRMT1_POSN                                  0x1
#define _TXSTA1_TRMT1_POSITION                              0x1
#define _TXSTA1_TRMT1_SIZE                                  0x1
#define _TXSTA1_TRMT1_LENGTH                                0x1
#define _TXSTA1_TRMT1_MASK                                  0x2
#define _TXSTA1_BRGH1_POSN                                  0x2
#define _TXSTA1_BRGH1_POSITION                              0x2
#define _TXSTA1_BRGH1_SIZE                                  0x1
#define _TXSTA1_BRGH1_LENGTH                                0x1
#define _TXSTA1_BRGH1_MASK                                  0x4
#define _TXSTA1_SENDB1_POSN                                 0x3
#define _TXSTA1_SENDB1_POSITION                             0x3
#define _TXSTA1_SENDB1_SIZE                                 0x1
#define _TXSTA1_SENDB1_LENGTH                               0x1
#define _TXSTA1_SENDB1_MASK                                 0x8
#define _TXSTA1_SYNC1_POSN                                  0x4
#define _TXSTA1_SYNC1_POSITION                              0x4
#define _TXSTA1_SYNC1_SIZE                                  0x1
#define _TXSTA1_SYNC1_LENGTH                                0x1
#define _TXSTA1_SYNC1_MASK                                  0x10
#define _TXSTA1_TXEN1_POSN                                  0x5
#define _TXSTA1_TXEN1_POSITION                              0x5
#define _TXSTA1_TXEN1_SIZE                                  0x1
#define _TXSTA1_TXEN1_LENGTH                                0x1
#define _TXSTA1_TXEN1_MASK                                  0x20
#define _TXSTA1_TX91_POSN                                   0x6
#define _TXSTA1_TX91_POSITION                               0x6
#define _TXSTA1_TX91_SIZE                                   0x1
#define _TXSTA1_TX91_LENGTH                                 0x1
#define _TXSTA1_TX91_MASK                                   0x40
#define _TXSTA1_CSRC1_POSN                                  0x7
#define _TXSTA1_CSRC1_POSITION                              0x7
#define _TXSTA1_CSRC1_SIZE                                  0x1
#define _TXSTA1_CSRC1_LENGTH                                0x1
#define _TXSTA1_CSRC1_MASK                                  0x80
#define _TXSTA1_TX8_9_POSN                                  0x6
#define _TXSTA1_TX8_9_POSITION                              0x6
#define _TXSTA1_TX8_9_SIZE                                  0x1
#define _TXSTA1_TX8_9_LENGTH                                0x1
#define _TXSTA1_TX8_9_MASK                                  0x40
#define _TXSTA1_TXD8_POSN                                   0x0
#define _TXSTA1_TXD8_POSITION                               0x0
#define _TXSTA1_TXD8_SIZE                                   0x1
#define _TXSTA1_TXD8_LENGTH                                 0x1
#define _TXSTA1_TXD8_MASK                                   0x1

// Register: TXREG
#define TXREG TXREG
extern volatile unsigned char           TXREG               __at(0xFAD);
#ifndef _LIB_BUILD
asm("TXREG equ 0FADh");
#endif
// aliases
extern volatile unsigned char           TXREG1              __at(0xFAD);
#ifndef _LIB_BUILD
asm("TXREG1 equ 0FADh");
#endif

// Register: RCREG
#define RCREG RCREG
extern volatile unsigned char           RCREG               __at(0xFAE);
#ifndef _LIB_BUILD
asm("RCREG equ 0FAEh");
#endif
// aliases
extern volatile unsigned char           RCREG1              __at(0xFAE);
#ifndef _LIB_BUILD
asm("RCREG1 equ 0FAEh");
#endif

// Register: SPBRG
#define SPBRG SPBRG
extern volatile unsigned char           SPBRG               __at(0xFAF);
#ifndef _LIB_BUILD
asm("SPBRG equ 0FAFh");
#endif
// aliases
extern volatile unsigned char           SPBRG1              __at(0xFAF);
#ifndef _LIB_BUILD
asm("SPBRG1 equ 0FAFh");
#endif

// Register: PSPCON
#define PSPCON PSPCON
extern volatile unsigned char           PSPCON              __at(0xFB0);
#ifndef _LIB_BUILD
asm("PSPCON equ 0FB0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :4;
        unsigned PSPMODE                :1;
        unsigned IBOV                   :1;
        unsigned OBF                    :1;
        unsigned IBF                    :1;
    };
} PSPCONbits_t;
extern volatile PSPCONbits_t PSPCONbits __at(0xFB0);
// bitfield macros
#define _PSPCON_PSPMODE_POSN                                0x4
#define _PSPCON_PSPMODE_POSITION                            0x4
#define _PSPCON_PSPMODE_SIZE                                0x1
#define _PSPCON_PSPMODE_LENGTH                              0x1
#define _PSPCON_PSPMODE_MASK                                0x10
#define _PSPCON_IBOV_POSN                                   0x5
#define _PSPCON_IBOV_POSITION                               0x5
#define _PSPCON_IBOV_SIZE                                   0x1
#define _PSPCON_IBOV_LENGTH                                 0x1
#define _PSPCON_IBOV_MASK                                   0x20
#define _PSPCON_OBF_POSN                                    0x6
#define _PSPCON_OBF_POSITION                                0x6
#define _PSPCON_OBF_SIZE                                    0x1
#define _PSPCON_OBF_LENGTH                                  0x1
#define _PSPCON_OBF_MASK                                    0x40
#define _PSPCON_IBF_POSN                                    0x7
#define _PSPCON_IBF_POSITION                                0x7
#define _PSPCON_IBF_SIZE                                    0x1
#define _PSPCON_IBF_LENGTH                                  0x1
#define _PSPCON_IBF_MASK                                    0x80

// Register: T3CON
#define T3CON T3CON
extern volatile unsigned char           T3CON               __at(0xFB1);
#ifndef _LIB_BUILD
asm("T3CON equ 0FB1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned NOT_T3SYNC             :1;
    };
    struct {
        unsigned TMR3ON                 :1;
        unsigned TMR3CS                 :1;
        unsigned nT3SYNC                :1;
        unsigned T3CCP1                 :1;
        unsigned T3CKPS                 :2;
        unsigned T3CCP2                 :1;
        unsigned RD16                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned T3SYNC                 :1;
        unsigned                        :1;
        unsigned T3CKPS0                :1;
        unsigned T3CKPS1                :1;
    };
    struct {
        unsigned                        :2;
        unsigned T3NSYNC                :1;
    };
    struct {
        unsigned                        :3;
        unsigned SOSCEN3                :1;
        unsigned                        :3;
        unsigned RD163                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned T3RD16                 :1;
    };
} T3CONbits_t;
extern volatile T3CONbits_t T3CONbits __at(0xFB1);
// bitfield macros
#define _T3CON_NOT_T3SYNC_POSN                              0x2
#define _T3CON_NOT_T3SYNC_POSITION                          0x2
#define _T3CON_NOT_T3SYNC_SIZE                              0x1
#define _T3CON_NOT_T3SYNC_LENGTH                            0x1
#define _T3CON_NOT_T3SYNC_MASK                              0x4
#define _T3CON_TMR3ON_POSN                                  0x0
#define _T3CON_TMR3ON_POSITION                              0x0
#define _T3CON_TMR3ON_SIZE                                  0x1
#define _T3CON_TMR3ON_LENGTH                                0x1
#define _T3CON_TMR3ON_MASK                                  0x1
#define _T3CON_TMR3CS_POSN                                  0x1
#define _T3CON_TMR3CS_POSITION                              0x1
#define _T3CON_TMR3CS_SIZE                                  0x1
#define _T3CON_TMR3CS_LENGTH                                0x1
#define _T3CON_TMR3CS_MASK                                  0x2
#define _T3CON_nT3SYNC_POSN                                 0x2
#define _T3CON_nT3SYNC_POSITION                             0x2
#define _T3CON_nT3SYNC_SIZE                                 0x1
#define _T3CON_nT3SYNC_LENGTH                               0x1
#define _T3CON_nT3SYNC_MASK                                 0x4
#define _T3CON_T3CCP1_POSN                                  0x3
#define _T3CON_T3CCP1_POSITION                              0x3
#define _T3CON_T3CCP1_SIZE                                  0x1
#define _T3CON_T3CCP1_LENGTH                                0x1
#define _T3CON_T3CCP1_MASK                                  0x8
#define _T3CON_T3CKPS_POSN                                  0x4
#define _T3CON_T3CKPS_POSITION                              0x4
#define _T3CON_T3CKPS_SIZE                                  0x2
#define _T3CON_T3CKPS_LENGTH                                0x2
#define _T3CON_T3CKPS_MASK                                  0x30
#define _T3CON_T3CCP2_POSN                                  0x6
#define _T3CON_T3CCP2_POSITION                              0x6
#define _T3CON_T3CCP2_SIZE                                  0x1
#define _T3CON_T3CCP2_LENGTH                                0x1
#define _T3CON_T3CCP2_MASK                                  0x40
#define _T3CON_RD16_POSN                                    0x7
#define _T3CON_RD16_POSITION                                0x7
#define _T3CON_RD16_SIZE                                    0x1
#define _T3CON_RD16_LENGTH                                  0x1
#define _T3CON_RD16_MASK                                    0x80
#define _T3CON_T3SYNC_POSN                                  0x2
#define _T3CON_T3SYNC_POSITION                              0x2
#define _T3CON_T3SYNC_SIZE                                  0x1
#define _T3CON_T3SYNC_LENGTH                                0x1
#define _T3CON_T3SYNC_MASK                                  0x4
#define _T3CON_T3CKPS0_POSN                                 0x4
#define _T3CON_T3CKPS0_POSITION                             0x4
#define _T3CON_T3CKPS0_SIZE                                 0x1
#define _T3CON_T3CKPS0_LENGTH                               0x1
#define _T3CON_T3CKPS0_MASK                                 0x10
#define _T3CON_T3CKPS1_POSN                                 0x5
#define _T3CON_T3CKPS1_POSITION                             0x5
#define _T3CON_T3CKPS1_SIZE                                 0x1
#define _T3CON_T3CKPS1_LENGTH                               0x1
#define _T3CON_T3CKPS1_MASK                                 0x20
#define _T3CON_T3NSYNC_POSN                                 0x2
#define _T3CON_T3NSYNC_POSITION                             0x2
#define _T3CON_T3NSYNC_SIZE                                 0x1
#define _T3CON_T3NSYNC_LENGTH                               0x1
#define _T3CON_T3NSYNC_MASK                                 0x4
#define _T3CON_SOSCEN3_POSN                                 0x3
#define _T3CON_SOSCEN3_POSITION                             0x3
#define _T3CON_SOSCEN3_SIZE                                 0x1
#define _T3CON_SOSCEN3_LENGTH                               0x1
#define _T3CON_SOSCEN3_MASK                                 0x8
#define _T3CON_RD163_POSN                                   0x7
#define _T3CON_RD163_POSITION                               0x7
#define _T3CON_RD163_SIZE                                   0x1
#define _T3CON_RD163_LENGTH                                 0x1
#define _T3CON_RD163_MASK                                   0x80
#define _T3CON_T3RD16_POSN                                  0x7
#define _T3CON_T3RD16_POSITION                              0x7
#define _T3CON_T3RD16_SIZE                                  0x1
#define _T3CON_T3RD16_LENGTH                                0x1
#define _T3CON_T3RD16_MASK                                  0x80

// Register: TMR3
#define TMR3 TMR3
extern volatile unsigned short          TMR3                __at(0xFB2);
#ifndef _LIB_BUILD
asm("TMR3 equ 0FB2h");
#endif

// Register: TMR3L
#define TMR3L TMR3L
extern volatile unsigned char           TMR3L               __at(0xFB2);
#ifndef _LIB_BUILD
asm("TMR3L equ 0FB2h");
#endif

// Register: TMR3H
#define TMR3H TMR3H
extern volatile unsigned char           TMR3H               __at(0xFB3);
#ifndef _LIB_BUILD
asm("TMR3H equ 0FB3h");
#endif

// Register: CMCON
#define CMCON CMCON
extern volatile unsigned char           CMCON               __at(0xFB4);
#ifndef _LIB_BUILD
asm("CMCON equ 0FB4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CM                     :3;
        unsigned CIS                    :1;
        unsigned C1INV                  :1;
        unsigned C2INV                  :1;
        unsigned C1OUT                  :1;
        unsigned C2OUT                  :1;
    };
    struct {
        unsigned CM0                    :1;
        unsigned CM1                    :1;
        unsigned CM2                    :1;
    };
    struct {
        unsigned CMEN0                  :1;
        unsigned CMEN1                  :1;
        unsigned CMEN2                  :1;
    };
} CMCONbits_t;
extern volatile CMCONbits_t CMCONbits __at(0xFB4);
// bitfield macros
#define _CMCON_CM_POSN                                      0x0
#define _CMCON_CM_POSITION                                  0x0
#define _CMCON_CM_SIZE                                      0x3
#define _CMCON_CM_LENGTH                                    0x3
#define _CMCON_CM_MASK                                      0x7
#define _CMCON_CIS_POSN                                     0x3
#define _CMCON_CIS_POSITION                                 0x3
#define _CMCON_CIS_SIZE                                     0x1
#define _CMCON_CIS_LENGTH                                   0x1
#define _CMCON_CIS_MASK                                     0x8
#define _CMCON_C1INV_POSN                                   0x4
#define _CMCON_C1INV_POSITION                               0x4
#define _CMCON_C1INV_SIZE                                   0x1
#define _CMCON_C1INV_LENGTH                                 0x1
#define _CMCON_C1INV_MASK                                   0x10
#define _CMCON_C2INV_POSN                                   0x5
#define _CMCON_C2INV_POSITION                               0x5
#define _CMCON_C2INV_SIZE                                   0x1
#define _CMCON_C2INV_LENGTH                                 0x1
#define _CMCON_C2INV_MASK                                   0x20
#define _CMCON_C1OUT_POSN                                   0x6
#define _CMCON_C1OUT_POSITION                               0x6
#define _CMCON_C1OUT_SIZE                                   0x1
#define _CMCON_C1OUT_LENGTH                                 0x1
#define _CMCON_C1OUT_MASK                                   0x40
#define _CMCON_C2OUT_POSN                                   0x7
#define _CMCON_C2OUT_POSITION                               0x7
#define _CMCON_C2OUT_SIZE                                   0x1
#define _CMCON_C2OUT_LENGTH                                 0x1
#define _CMCON_C2OUT_MASK                                   0x80
#define _CMCON_CM0_POSN                                     0x0
#define _CMCON_CM0_POSITION                                 0x0
#define _CMCON_CM0_SIZE                                     0x1
#define _CMCON_CM0_LENGTH                                   0x1
#define _CMCON_CM0_MASK                                     0x1
#define _CMCON_CM1_POSN                                     0x1
#define _CMCON_CM1_POSITION                                 0x1
#define _CMCON_CM1_SIZE                                     0x1
#define _CMCON_CM1_LENGTH                                   0x1
#define _CMCON_CM1_MASK                                     0x2
#define _CMCON_CM2_POSN                                     0x2
#define _CMCON_CM2_POSITION                                 0x2
#define _CMCON_CM2_SIZE                                     0x1
#define _CMCON_CM2_LENGTH                                   0x1
#define _CMCON_CM2_MASK                                     0x4
#define _CMCON_CMEN0_POSN                                   0x0
#define _CMCON_CMEN0_POSITION                               0x0
#define _CMCON_CMEN0_SIZE                                   0x1
#define _CMCON_CMEN0_LENGTH                                 0x1
#define _CMCON_CMEN0_MASK                                   0x1
#define _CMCON_CMEN1_POSN                                   0x1
#define _CMCON_CMEN1_POSITION                               0x1
#define _CMCON_CMEN1_SIZE                                   0x1
#define _CMCON_CMEN1_LENGTH                                 0x1
#define _CMCON_CMEN1_MASK                                   0x2
#define _CMCON_CMEN2_POSN                                   0x2
#define _CMCON_CMEN2_POSITION                               0x2
#define _CMCON_CMEN2_SIZE                                   0x1
#define _CMCON_CMEN2_LENGTH                                 0x1
#define _CMCON_CMEN2_MASK                                   0x4

// Register: CVRCON
#define CVRCON CVRCON
extern volatile unsigned char           CVRCON              __at(0xFB5);
#ifndef _LIB_BUILD
asm("CVRCON equ 0FB5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CVR                    :4;
        unsigned CVRSS                  :1;
        unsigned CVRR                   :1;
        unsigned CVROE                  :1;
        unsigned CVREN                  :1;
    };
    struct {
        unsigned CVR0                   :1;
        unsigned CVR1                   :1;
        unsigned CVR2                   :1;
        unsigned CVR3                   :1;
        unsigned CVREF                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned CVROEN                 :1;
    };
} CVRCONbits_t;
extern volatile CVRCONbits_t CVRCONbits __at(0xFB5);
// bitfield macros
#define _CVRCON_CVR_POSN                                    0x0
#define _CVRCON_CVR_POSITION                                0x0
#define _CVRCON_CVR_SIZE                                    0x4
#define _CVRCON_CVR_LENGTH                                  0x4
#define _CVRCON_CVR_MASK                                    0xF
#define _CVRCON_CVRSS_POSN                                  0x4
#define _CVRCON_CVRSS_POSITION                              0x4
#define _CVRCON_CVRSS_SIZE                                  0x1
#define _CVRCON_CVRSS_LENGTH                                0x1
#define _CVRCON_CVRSS_MASK                                  0x10
#define _CVRCON_CVRR_POSN                                   0x5
#define _CVRCON_CVRR_POSITION                               0x5
#define _CVRCON_CVRR_SIZE                                   0x1
#define _CVRCON_CVRR_LENGTH                                 0x1
#define _CVRCON_CVRR_MASK                                   0x20
#define _CVRCON_CVROE_POSN                                  0x6
#define _CVRCON_CVROE_POSITION                              0x6
#define _CVRCON_CVROE_SIZE                                  0x1
#define _CVRCON_CVROE_LENGTH                                0x1
#define _CVRCON_CVROE_MASK                                  0x40
#define _CVRCON_CVREN_POSN                                  0x7
#define _CVRCON_CVREN_POSITION                              0x7
#define _CVRCON_CVREN_SIZE                                  0x1
#define _CVRCON_CVREN_LENGTH                                0x1
#define _CVRCON_CVREN_MASK                                  0x80
#define _CVRCON_CVR0_POSN                                   0x0
#define _CVRCON_CVR0_POSITION                               0x0
#define _CVRCON_CVR0_SIZE                                   0x1
#define _CVRCON_CVR0_LENGTH                                 0x1
#define _CVRCON_CVR0_MASK                                   0x1
#define _CVRCON_CVR1_POSN                                   0x1
#define _CVRCON_CVR1_POSITION                               0x1
#define _CVRCON_CVR1_SIZE                                   0x1
#define _CVRCON_CVR1_LENGTH                                 0x1
#define _CVRCON_CVR1_MASK                                   0x2
#define _CVRCON_CVR2_POSN                                   0x2
#define _CVRCON_CVR2_POSITION                               0x2
#define _CVRCON_CVR2_SIZE                                   0x1
#define _CVRCON_CVR2_LENGTH                                 0x1
#define _CVRCON_CVR2_MASK                                   0x4
#define _CVRCON_CVR3_POSN                                   0x3
#define _CVRCON_CVR3_POSITION                               0x3
#define _CVRCON_CVR3_SIZE                                   0x1
#define _CVRCON_CVR3_LENGTH                                 0x1
#define _CVRCON_CVR3_MASK                                   0x8
#define _CVRCON_CVREF_POSN                                  0x4
#define _CVRCON_CVREF_POSITION                              0x4
#define _CVRCON_CVREF_SIZE                                  0x1
#define _CVRCON_CVREF_LENGTH                                0x1
#define _CVRCON_CVREF_MASK                                  0x10
#define _CVRCON_CVROEN_POSN                                 0x6
#define _CVRCON_CVROEN_POSITION                             0x6
#define _CVRCON_CVROEN_SIZE                                 0x1
#define _CVRCON_CVROEN_LENGTH                               0x1
#define _CVRCON_CVROEN_MASK                                 0x40

// Register: ECCP1AS
#define ECCP1AS ECCP1AS
extern volatile unsigned char           ECCP1AS             __at(0xFB6);
#ifndef _LIB_BUILD
asm("ECCP1AS equ 0FB6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PSSBD                  :2;
        unsigned PSSAC                  :2;
        unsigned ECCPAS                 :3;
        unsigned ECCPASE                :1;
    };
    struct {
        unsigned PSSBD0                 :1;
        unsigned PSSBD1                 :1;
        unsigned PSSAC0                 :1;
        unsigned PSSAC1                 :1;
        unsigned ECCPAS0                :1;
        unsigned ECCPAS1                :1;
        unsigned ECCPAS2                :1;
    };
} ECCP1ASbits_t;
extern volatile ECCP1ASbits_t ECCP1ASbits __at(0xFB6);
// bitfield macros
#define _ECCP1AS_PSSBD_POSN                                 0x0
#define _ECCP1AS_PSSBD_POSITION                             0x0
#define _ECCP1AS_PSSBD_SIZE                                 0x2
#define _ECCP1AS_PSSBD_LENGTH                               0x2
#define _ECCP1AS_PSSBD_MASK                                 0x3
#define _ECCP1AS_PSSAC_POSN                                 0x2
#define _ECCP1AS_PSSAC_POSITION                             0x2
#define _ECCP1AS_PSSAC_SIZE                                 0x2
#define _ECCP1AS_PSSAC_LENGTH                               0x2
#define _ECCP1AS_PSSAC_MASK                                 0xC
#define _ECCP1AS_ECCPAS_POSN                                0x4
#define _ECCP1AS_ECCPAS_POSITION                            0x4
#define _ECCP1AS_ECCPAS_SIZE                                0x3
#define _ECCP1AS_ECCPAS_LENGTH                              0x3
#define _ECCP1AS_ECCPAS_MASK                                0x70
#define _ECCP1AS_ECCPASE_POSN                               0x7
#define _ECCP1AS_ECCPASE_POSITION                           0x7
#define _ECCP1AS_ECCPASE_SIZE                               0x1
#define _ECCP1AS_ECCPASE_LENGTH                             0x1
#define _ECCP1AS_ECCPASE_MASK                               0x80
#define _ECCP1AS_PSSBD0_POSN                                0x0
#define _ECCP1AS_PSSBD0_POSITION                            0x0
#define _ECCP1AS_PSSBD0_SIZE                                0x1
#define _ECCP1AS_PSSBD0_LENGTH                              0x1
#define _ECCP1AS_PSSBD0_MASK                                0x1
#define _ECCP1AS_PSSBD1_POSN                                0x1
#define _ECCP1AS_PSSBD1_POSITION                            0x1
#define _ECCP1AS_PSSBD1_SIZE                                0x1
#define _ECCP1AS_PSSBD1_LENGTH                              0x1
#define _ECCP1AS_PSSBD1_MASK                                0x2
#define _ECCP1AS_PSSAC0_POSN                                0x2
#define _ECCP1AS_PSSAC0_POSITION                            0x2
#define _ECCP1AS_PSSAC0_SIZE                                0x1
#define _ECCP1AS_PSSAC0_LENGTH                              0x1
#define _ECCP1AS_PSSAC0_MASK                                0x4
#define _ECCP1AS_PSSAC1_POSN                                0x3
#define _ECCP1AS_PSSAC1_POSITION                            0x3
#define _ECCP1AS_PSSAC1_SIZE                                0x1
#define _ECCP1AS_PSSAC1_LENGTH                              0x1
#define _ECCP1AS_PSSAC1_MASK                                0x8
#define _ECCP1AS_ECCPAS0_POSN                               0x4
#define _ECCP1AS_ECCPAS0_POSITION                           0x4
#define _ECCP1AS_ECCPAS0_SIZE                               0x1
#define _ECCP1AS_ECCPAS0_LENGTH                             0x1
#define _ECCP1AS_ECCPAS0_MASK                               0x10
#define _ECCP1AS_ECCPAS1_POSN                               0x5
#define _ECCP1AS_ECCPAS1_POSITION                           0x5
#define _ECCP1AS_ECCPAS1_SIZE                               0x1
#define _ECCP1AS_ECCPAS1_LENGTH                             0x1
#define _ECCP1AS_ECCPAS1_MASK                               0x20
#define _ECCP1AS_ECCPAS2_POSN                               0x6
#define _ECCP1AS_ECCPAS2_POSITION                           0x6
#define _ECCP1AS_ECCPAS2_SIZE                               0x1
#define _ECCP1AS_ECCPAS2_LENGTH                             0x1
#define _ECCP1AS_ECCPAS2_MASK                               0x40

// Register: CCP2CON
#define CCP2CON CCP2CON
extern volatile unsigned char           CCP2CON             __at(0xFBA);
#ifndef _LIB_BUILD
asm("CCP2CON equ 0FBAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2M                  :4;
        unsigned DC2B                   :2;
    };
    struct {
        unsigned CCP2M0                 :1;
        unsigned CCP2M1                 :1;
        unsigned CCP2M2                 :1;
        unsigned CCP2M3                 :1;
        unsigned DC2B0                  :1;
        unsigned DC2B1                  :1;
    };
} CCP2CONbits_t;
extern volatile CCP2CONbits_t CCP2CONbits __at(0xFBA);
// bitfield macros
#define _CCP2CON_CCP2M_POSN                                 0x0
#define _CCP2CON_CCP2M_POSITION                             0x0
#define _CCP2CON_CCP2M_SIZE                                 0x4
#define _CCP2CON_CCP2M_LENGTH                               0x4
#define _CCP2CON_CCP2M_MASK                                 0xF
#define _CCP2CON_DC2B_POSN                                  0x4
#define _CCP2CON_DC2B_POSITION                              0x4
#define _CCP2CON_DC2B_SIZE                                  0x2
#define _CCP2CON_DC2B_LENGTH                                0x2
#define _CCP2CON_DC2B_MASK                                  0x30
#define _CCP2CON_CCP2M0_POSN                                0x0
#define _CCP2CON_CCP2M0_POSITION                            0x0
#define _CCP2CON_CCP2M0_SIZE                                0x1
#define _CCP2CON_CCP2M0_LENGTH                              0x1
#define _CCP2CON_CCP2M0_MASK                                0x1
#define _CCP2CON_CCP2M1_POSN                                0x1
#define _CCP2CON_CCP2M1_POSITION                            0x1
#define _CCP2CON_CCP2M1_SIZE                                0x1
#define _CCP2CON_CCP2M1_LENGTH                              0x1
#define _CCP2CON_CCP2M1_MASK                                0x2
#define _CCP2CON_CCP2M2_POSN                                0x2
#define _CCP2CON_CCP2M2_POSITION                            0x2
#define _CCP2CON_CCP2M2_SIZE                                0x1
#define _CCP2CON_CCP2M2_LENGTH                              0x1
#define _CCP2CON_CCP2M2_MASK                                0x4
#define _CCP2CON_CCP2M3_POSN                                0x3
#define _CCP2CON_CCP2M3_POSITION                            0x3
#define _CCP2CON_CCP2M3_SIZE                                0x1
#define _CCP2CON_CCP2M3_LENGTH                              0x1
#define _CCP2CON_CCP2M3_MASK                                0x8
#define _CCP2CON_DC2B0_POSN                                 0x4
#define _CCP2CON_DC2B0_POSITION                             0x4
#define _CCP2CON_DC2B0_SIZE                                 0x1
#define _CCP2CON_DC2B0_LENGTH                               0x1
#define _CCP2CON_DC2B0_MASK                                 0x10
#define _CCP2CON_DC2B1_POSN                                 0x5
#define _CCP2CON_DC2B1_POSITION                             0x5
#define _CCP2CON_DC2B1_SIZE                                 0x1
#define _CCP2CON_DC2B1_LENGTH                               0x1
#define _CCP2CON_DC2B1_MASK                                 0x20

// Register: CCPR2
#define CCPR2 CCPR2
extern volatile unsigned short          CCPR2               __at(0xFBB);
#ifndef _LIB_BUILD
asm("CCPR2 equ 0FBBh");
#endif

// Register: CCPR2L
#define CCPR2L CCPR2L
extern volatile unsigned char           CCPR2L              __at(0xFBB);
#ifndef _LIB_BUILD
asm("CCPR2L equ 0FBBh");
#endif

// Register: CCPR2H
#define CCPR2H CCPR2H
extern volatile unsigned char           CCPR2H              __at(0xFBC);
#ifndef _LIB_BUILD
asm("CCPR2H equ 0FBCh");
#endif

// Register: CCP1CON
#define CCP1CON CCP1CON
extern volatile unsigned char           CCP1CON             __at(0xFBD);
#ifndef _LIB_BUILD
asm("CCP1CON equ 0FBDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP1M                  :4;
        unsigned DC1B                   :2;
        unsigned P1M                    :2;
    };
    struct {
        unsigned CCP1M0                 :1;
        unsigned CCP1M1                 :1;
        unsigned CCP1M2                 :1;
        unsigned CCP1M3                 :1;
        unsigned DC1B0                  :1;
        unsigned DC1B1                  :1;
        unsigned P1M0                   :1;
        unsigned P1M1                   :1;
    };
} CCP1CONbits_t;
extern volatile CCP1CONbits_t CCP1CONbits __at(0xFBD);
// bitfield macros
#define _CCP1CON_CCP1M_POSN                                 0x0
#define _CCP1CON_CCP1M_POSITION                             0x0
#define _CCP1CON_CCP1M_SIZE                                 0x4
#define _CCP1CON_CCP1M_LENGTH                               0x4
#define _CCP1CON_CCP1M_MASK                                 0xF
#define _CCP1CON_DC1B_POSN                                  0x4
#define _CCP1CON_DC1B_POSITION                              0x4
#define _CCP1CON_DC1B_SIZE                                  0x2
#define _CCP1CON_DC1B_LENGTH                                0x2
#define _CCP1CON_DC1B_MASK                                  0x30
#define _CCP1CON_P1M_POSN                                   0x6
#define _CCP1CON_P1M_POSITION                               0x6
#define _CCP1CON_P1M_SIZE                                   0x2
#define _CCP1CON_P1M_LENGTH                                 0x2
#define _CCP1CON_P1M_MASK                                   0xC0
#define _CCP1CON_CCP1M0_POSN                                0x0
#define _CCP1CON_CCP1M0_POSITION                            0x0
#define _CCP1CON_CCP1M0_SIZE                                0x1
#define _CCP1CON_CCP1M0_LENGTH                              0x1
#define _CCP1CON_CCP1M0_MASK                                0x1
#define _CCP1CON_CCP1M1_POSN                                0x1
#define _CCP1CON_CCP1M1_POSITION                            0x1
#define _CCP1CON_CCP1M1_SIZE                                0x1
#define _CCP1CON_CCP1M1_LENGTH                              0x1
#define _CCP1CON_CCP1M1_MASK                                0x2
#define _CCP1CON_CCP1M2_POSN                                0x2
#define _CCP1CON_CCP1M2_POSITION                            0x2
#define _CCP1CON_CCP1M2_SIZE                                0x1
#define _CCP1CON_CCP1M2_LENGTH                              0x1
#define _CCP1CON_CCP1M2_MASK                                0x4
#define _CCP1CON_CCP1M3_POSN                                0x3
#define _CCP1CON_CCP1M3_POSITION                            0x3
#define _CCP1CON_CCP1M3_SIZE                                0x1
#define _CCP1CON_CCP1M3_LENGTH                              0x1
#define _CCP1CON_CCP1M3_MASK                                0x8
#define _CCP1CON_DC1B0_POSN                                 0x4
#define _CCP1CON_DC1B0_POSITION                             0x4
#define _CCP1CON_DC1B0_SIZE                                 0x1
#define _CCP1CON_DC1B0_LENGTH                               0x1
#define _CCP1CON_DC1B0_MASK                                 0x10
#define _CCP1CON_DC1B1_POSN                                 0x5
#define _CCP1CON_DC1B1_POSITION                             0x5
#define _CCP1CON_DC1B1_SIZE                                 0x1
#define _CCP1CON_DC1B1_LENGTH                               0x1
#define _CCP1CON_DC1B1_MASK                                 0x20
#define _CCP1CON_P1M0_POSN                                  0x6
#define _CCP1CON_P1M0_POSITION                              0x6
#define _CCP1CON_P1M0_SIZE                                  0x1
#define _CCP1CON_P1M0_LENGTH                                0x1
#define _CCP1CON_P1M0_MASK                                  0x40
#define _CCP1CON_P1M1_POSN                                  0x7
#define _CCP1CON_P1M1_POSITION                              0x7
#define _CCP1CON_P1M1_SIZE                                  0x1
#define _CCP1CON_P1M1_LENGTH                                0x1
#define _CCP1CON_P1M1_MASK                                  0x80

// Register: CCPR1
#define CCPR1 CCPR1
extern volatile unsigned short          CCPR1               __at(0xFBE);
#ifndef _LIB_BUILD
asm("CCPR1 equ 0FBEh");
#endif

// Register: CCPR1L
#define CCPR1L CCPR1L
extern volatile unsigned char           CCPR1L              __at(0xFBE);
#ifndef _LIB_BUILD
asm("CCPR1L equ 0FBEh");
#endif

// Register: CCPR1H
#define CCPR1H CCPR1H
extern volatile unsigned char           CCPR1H              __at(0xFBF);
#ifndef _LIB_BUILD
asm("CCPR1H equ 0FBFh");
#endif

// Register: ADCON2
#define ADCON2 ADCON2
extern volatile unsigned char           ADCON2              __at(0xFC0);
#ifndef _LIB_BUILD
asm("ADCON2 equ 0FC0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADCS                   :3;
        unsigned ACQT                   :3;
        unsigned                        :1;
        unsigned ADFM                   :1;
    };
    struct {
        unsigned ADCS0                  :1;
        unsigned ADCS1                  :1;
        unsigned ADCS2                  :1;
        unsigned ACQT0                  :1;
        unsigned ACQT1                  :1;
        unsigned ACQT2                  :1;
    };
} ADCON2bits_t;
extern volatile ADCON2bits_t ADCON2bits __at(0xFC0);
// bitfield macros
#define _ADCON2_ADCS_POSN                                   0x0
#define _ADCON2_ADCS_POSITION                               0x0
#define _ADCON2_ADCS_SIZE                                   0x3
#define _ADCON2_ADCS_LENGTH                                 0x3
#define _ADCON2_ADCS_MASK                                   0x7
#define _ADCON2_ACQT_POSN                                   0x3
#define _ADCON2_ACQT_POSITION                               0x3
#define _ADCON2_ACQT_SIZE                                   0x3
#define _ADCON2_ACQT_LENGTH                                 0x3
#define _ADCON2_ACQT_MASK                                   0x38
#define _ADCON2_ADFM_POSN                                   0x7
#define _ADCON2_ADFM_POSITION                               0x7
#define _ADCON2_ADFM_SIZE                                   0x1
#define _ADCON2_ADFM_LENGTH                                 0x1
#define _ADCON2_ADFM_MASK                                   0x80
#define _ADCON2_ADCS0_POSN                                  0x0
#define _ADCON2_ADCS0_POSITION                              0x0
#define _ADCON2_ADCS0_SIZE                                  0x1
#define _ADCON2_ADCS0_LENGTH                                0x1
#define _ADCON2_ADCS0_MASK                                  0x1
#define _ADCON2_ADCS1_POSN                                  0x1
#define _ADCON2_ADCS1_POSITION                              0x1
#define _ADCON2_ADCS1_SIZE                                  0x1
#define _ADCON2_ADCS1_LENGTH                                0x1
#define _ADCON2_ADCS1_MASK                                  0x2
#define _ADCON2_ADCS2_POSN                                  0x2
#define _ADCON2_ADCS2_POSITION                              0x2
#define _ADCON2_ADCS2_SIZE                                  0x1
#define _ADCON2_ADCS2_LENGTH                                0x1
#define _ADCON2_ADCS2_MASK                                  0x4
#define _ADCON2_ACQT0_POSN                                  0x3
#define _ADCON2_ACQT0_POSITION                              0x3
#define _ADCON2_ACQT0_SIZE                                  0x1
#define _ADCON2_ACQT0_LENGTH                                0x1
#define _ADCON2_ACQT0_MASK                                  0x8
#define _ADCON2_ACQT1_POSN                                  0x4
#define _ADCON2_ACQT1_POSITION                              0x4
#define _ADCON2_ACQT1_SIZE                                  0x1
#define _ADCON2_ACQT1_LENGTH                                0x1
#define _ADCON2_ACQT1_MASK                                  0x10
#define _ADCON2_ACQT2_POSN                                  0x5
#define _ADCON2_ACQT2_POSITION                              0x5
#define _ADCON2_ACQT2_SIZE                                  0x1
#define _ADCON2_ACQT2_LENGTH                                0x1
#define _ADCON2_ACQT2_MASK                                  0x20

// Register: ADCON1
#define ADCON1 ADCON1
extern volatile unsigned char           ADCON1              __at(0xFC1);
#ifndef _LIB_BUILD
asm("ADCON1 equ 0FC1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCFG                   :4;
        unsigned VCFG                   :2;
    };
    struct {
        unsigned PCFG0                  :1;
        unsigned PCFG1                  :1;
        unsigned PCFG2                  :1;
        unsigned PCFG3                  :1;
        unsigned VCFG0                  :1;
        unsigned VCFG1                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned CHSN3                  :1;
        unsigned VCFG01                 :1;
        unsigned VCFG11                 :1;
    };
} ADCON1bits_t;
extern volatile ADCON1bits_t ADCON1bits __at(0xFC1);
// bitfield macros
#define _ADCON1_PCFG_POSN                                   0x0
#define _ADCON1_PCFG_POSITION                               0x0
#define _ADCON1_PCFG_SIZE                                   0x4
#define _ADCON1_PCFG_LENGTH                                 0x4
#define _ADCON1_PCFG_MASK                                   0xF
#define _ADCON1_VCFG_POSN                                   0x4
#define _ADCON1_VCFG_POSITION                               0x4
#define _ADCON1_VCFG_SIZE                                   0x2
#define _ADCON1_VCFG_LENGTH                                 0x2
#define _ADCON1_VCFG_MASK                                   0x30
#define _ADCON1_PCFG0_POSN                                  0x0
#define _ADCON1_PCFG0_POSITION                              0x0
#define _ADCON1_PCFG0_SIZE                                  0x1
#define _ADCON1_PCFG0_LENGTH                                0x1
#define _ADCON1_PCFG0_MASK                                  0x1
#define _ADCON1_PCFG1_POSN                                  0x1
#define _ADCON1_PCFG1_POSITION                              0x1
#define _ADCON1_PCFG1_SIZE                                  0x1
#define _ADCON1_PCFG1_LENGTH                                0x1
#define _ADCON1_PCFG1_MASK                                  0x2
#define _ADCON1_PCFG2_POSN                                  0x2
#define _ADCON1_PCFG2_POSITION                              0x2
#define _ADCON1_PCFG2_SIZE                                  0x1
#define _ADCON1_PCFG2_LENGTH                                0x1
#define _ADCON1_PCFG2_MASK                                  0x4
#define _ADCON1_PCFG3_POSN                                  0x3
#define _ADCON1_PCFG3_POSITION                              0x3
#define _ADCON1_PCFG3_SIZE                                  0x1
#define _ADCON1_PCFG3_LENGTH                                0x1
#define _ADCON1_PCFG3_MASK                                  0x8
#define _ADCON1_VCFG0_POSN                                  0x4
#define _ADCON1_VCFG0_POSITION                              0x4
#define _ADCON1_VCFG0_SIZE                                  0x1
#define _ADCON1_VCFG0_LENGTH                                0x1
#define _ADCON1_VCFG0_MASK                                  0x10
#define _ADCON1_VCFG1_POSN                                  0x5
#define _ADCON1_VCFG1_POSITION                              0x5
#define _ADCON1_VCFG1_SIZE                                  0x1
#define _ADCON1_VCFG1_LENGTH                                0x1
#define _ADCON1_VCFG1_MASK                                  0x20
#define _ADCON1_CHSN3_POSN                                  0x3
#define _ADCON1_CHSN3_POSITION                              0x3
#define _ADCON1_CHSN3_SIZE                                  0x1
#define _ADCON1_CHSN3_LENGTH                                0x1
#define _ADCON1_CHSN3_MASK                                  0x8
#define _ADCON1_VCFG01_POSN                                 0x4
#define _ADCON1_VCFG01_POSITION                             0x4
#define _ADCON1_VCFG01_SIZE                                 0x1
#define _ADCON1_VCFG01_LENGTH                               0x1
#define _ADCON1_VCFG01_MASK                                 0x10
#define _ADCON1_VCFG11_POSN                                 0x5
#define _ADCON1_VCFG11_POSITION                             0x5
#define _ADCON1_VCFG11_SIZE                                 0x1
#define _ADCON1_VCFG11_LENGTH                               0x1
#define _ADCON1_VCFG11_MASK                                 0x20

// Register: ADCON0
#define ADCON0 ADCON0
extern volatile unsigned char           ADCON0              __at(0xFC2);
#ifndef _LIB_BUILD
asm("ADCON0 equ 0FC2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned GO_NOT_DONE            :1;
    };
    struct {
        unsigned ADON                   :1;
        unsigned GO_nDONE               :1;
        unsigned CHS                    :4;
    };
    struct {
        unsigned                        :1;
        unsigned GO_DONE                :1;
        unsigned CHS0                   :1;
        unsigned CHS1                   :1;
        unsigned CHS2                   :1;
        unsigned CHS3                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned DONE                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned GO                     :1;
    };
    struct {
        unsigned                        :1;
        unsigned NOT_DONE               :1;
    };
    struct {
        unsigned                        :1;
        unsigned nDONE                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned GODONE                 :1;
    };
} ADCON0bits_t;
extern volatile ADCON0bits_t ADCON0bits __at(0xFC2);
// bitfield macros
#define _ADCON0_GO_NOT_DONE_POSN                            0x1
#define _ADCON0_GO_NOT_DONE_POSITION                        0x1
#define _ADCON0_GO_NOT_DONE_SIZE                            0x1
#define _ADCON0_GO_NOT_DONE_LENGTH                          0x1
#define _ADCON0_GO_NOT_DONE_MASK                            0x2
#define _ADCON0_ADON_POSN                                   0x0
#define _ADCON0_ADON_POSITION                               0x0
#define _ADCON0_ADON_SIZE                                   0x1
#define _ADCON0_ADON_LENGTH                                 0x1
#define _ADCON0_ADON_MASK                                   0x1
#define _ADCON0_GO_nDONE_POSN                               0x1
#define _ADCON0_GO_nDONE_POSITION                           0x1
#define _ADCON0_GO_nDONE_SIZE                               0x1
#define _ADCON0_GO_nDONE_LENGTH                             0x1
#define _ADCON0_GO_nDONE_MASK                               0x2
#define _ADCON0_CHS_POSN                                    0x2
#define _ADCON0_CHS_POSITION                                0x2
#define _ADCON0_CHS_SIZE                                    0x4
#define _ADCON0_CHS_LENGTH                                  0x4
#define _ADCON0_CHS_MASK                                    0x3C
#define _ADCON0_GO_DONE_POSN                                0x1
#define _ADCON0_GO_DONE_POSITION                            0x1
#define _ADCON0_GO_DONE_SIZE                                0x1
#define _ADCON0_GO_DONE_LENGTH                              0x1
#define _ADCON0_GO_DONE_MASK                                0x2
#define _ADCON0_CHS0_POSN                                   0x2
#define _ADCON0_CHS0_POSITION                               0x2
#define _ADCON0_CHS0_SIZE                                   0x1
#define _ADCON0_CHS0_LENGTH                                 0x1
#define _ADCON0_CHS0_MASK                                   0x4
#define _ADCON0_CHS1_POSN                                   0x3
#define _ADCON0_CHS1_POSITION                               0x3
#define _ADCON0_CHS1_SIZE                                   0x1
#define _ADCON0_CHS1_LENGTH                                 0x1
#define _ADCON0_CHS1_MASK                                   0x8
#define _ADCON0_CHS2_POSN                                   0x4
#define _ADCON0_CHS2_POSITION                               0x4
#define _ADCON0_CHS2_SIZE                                   0x1
#define _ADCON0_CHS2_LENGTH                                 0x1
#define _ADCON0_CHS2_MASK                                   0x10
#define _ADCON0_CHS3_POSN                                   0x5
#define _ADCON0_CHS3_POSITION                               0x5
#define _ADCON0_CHS3_SIZE                                   0x1
#define _ADCON0_CHS3_LENGTH                                 0x1
#define _ADCON0_CHS3_MASK                                   0x20
#define _ADCON0_DONE_POSN                                   0x1
#define _ADCON0_DONE_POSITION                               0x1
#define _ADCON0_DONE_SIZE                                   0x1
#define _ADCON0_DONE_LENGTH                                 0x1
#define _ADCON0_DONE_MASK                                   0x2
#define _ADCON0_GO_POSN                                     0x1
#define _ADCON0_GO_POSITION                                 0x1
#define _ADCON0_GO_SIZE                                     0x1
#define _ADCON0_GO_LENGTH                                   0x1
#define _ADCON0_GO_MASK                                     0x2
#define _ADCON0_NOT_DONE_POSN                               0x1
#define _ADCON0_NOT_DONE_POSITION                           0x1
#define _ADCON0_NOT_DONE_SIZE                               0x1
#define _ADCON0_NOT_DONE_LENGTH                             0x1
#define _ADCON0_NOT_DONE_MASK                               0x2
#define _ADCON0_nDONE_POSN                                  0x1
#define _ADCON0_nDONE_POSITION                              0x1
#define _ADCON0_nDONE_SIZE                                  0x1
#define _ADCON0_nDONE_LENGTH                                0x1
#define _ADCON0_nDONE_MASK                                  0x2
#define _ADCON0_GODONE_POSN                                 0x1
#define _ADCON0_GODONE_POSITION                             0x1
#define _ADCON0_GODONE_SIZE                                 0x1
#define _ADCON0_GODONE_LENGTH                               0x1
#define _ADCON0_GODONE_MASK                                 0x2

// Register: ADRES
#define ADRES ADRES
extern volatile unsigned short          ADRES               __at(0xFC3);
#ifndef _LIB_BUILD
asm("ADRES equ 0FC3h");
#endif

// Register: ADRESL
#define ADRESL ADRESL
extern volatile unsigned char           ADRESL              __at(0xFC3);
#ifndef _LIB_BUILD
asm("ADRESL equ 0FC3h");
#endif

// Register: ADRESH
#define ADRESH ADRESH
extern volatile unsigned char           ADRESH              __at(0xFC4);
#ifndef _LIB_BUILD
asm("ADRESH equ 0FC4h");
#endif

// Register: SSPCON2
#define SSPCON2 SSPCON2
extern volatile unsigned char           SSPCON2             __at(0xFC5);
#ifndef _LIB_BUILD
asm("SSPCON2 equ 0FC5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
} SSPCON2bits_t;
extern volatile SSPCON2bits_t SSPCON2bits __at(0xFC5);
// bitfield macros
#define _SSPCON2_SEN_POSN                                   0x0
#define _SSPCON2_SEN_POSITION                               0x0
#define _SSPCON2_SEN_SIZE                                   0x1
#define _SSPCON2_SEN_LENGTH                                 0x1
#define _SSPCON2_SEN_MASK                                   0x1
#define _SSPCON2_RSEN_POSN                                  0x1
#define _SSPCON2_RSEN_POSITION                              0x1
#define _SSPCON2_RSEN_SIZE                                  0x1
#define _SSPCON2_RSEN_LENGTH                                0x1
#define _SSPCON2_RSEN_MASK                                  0x2
#define _SSPCON2_PEN_POSN                                   0x2
#define _SSPCON2_PEN_POSITION                               0x2
#define _SSPCON2_PEN_SIZE                                   0x1
#define _SSPCON2_PEN_LENGTH                                 0x1
#define _SSPCON2_PEN_MASK                                   0x4
#define _SSPCON2_RCEN_POSN                                  0x3
#define _SSPCON2_RCEN_POSITION                              0x3
#define _SSPCON2_RCEN_SIZE                                  0x1
#define _SSPCON2_RCEN_LENGTH                                0x1
#define _SSPCON2_RCEN_MASK                                  0x8
#define _SSPCON2_ACKEN_POSN                                 0x4
#define _SSPCON2_ACKEN_POSITION                             0x4
#define _SSPCON2_ACKEN_SIZE                                 0x1
#define _SSPCON2_ACKEN_LENGTH                               0x1
#define _SSPCON2_ACKEN_MASK                                 0x10
#define _SSPCON2_ACKDT_POSN                                 0x5
#define _SSPCON2_ACKDT_POSITION                             0x5
#define _SSPCON2_ACKDT_SIZE                                 0x1
#define _SSPCON2_ACKDT_LENGTH                               0x1
#define _SSPCON2_ACKDT_MASK                                 0x20
#define _SSPCON2_ACKSTAT_POSN                               0x6
#define _SSPCON2_ACKSTAT_POSITION                           0x6
#define _SSPCON2_ACKSTAT_SIZE                               0x1
#define _SSPCON2_ACKSTAT_LENGTH                             0x1
#define _SSPCON2_ACKSTAT_MASK                               0x40
#define _SSPCON2_GCEN_POSN                                  0x7
#define _SSPCON2_GCEN_POSITION                              0x7
#define _SSPCON2_GCEN_SIZE                                  0x1
#define _SSPCON2_GCEN_LENGTH                                0x1
#define _SSPCON2_GCEN_MASK                                  0x80

// Register: SSPCON1
#define SSPCON1 SSPCON1
extern volatile unsigned char           SSPCON1             __at(0xFC6);
#ifndef _LIB_BUILD
asm("SSPCON1 equ 0FC6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
} SSPCON1bits_t;
extern volatile SSPCON1bits_t SSPCON1bits __at(0xFC6);
// bitfield macros
#define _SSPCON1_SSPM_POSN                                  0x0
#define _SSPCON1_SSPM_POSITION                              0x0
#define _SSPCON1_SSPM_SIZE                                  0x4
#define _SSPCON1_SSPM_LENGTH                                0x4
#define _SSPCON1_SSPM_MASK                                  0xF
#define _SSPCON1_CKP_POSN                                   0x4
#define _SSPCON1_CKP_POSITION                               0x4
#define _SSPCON1_CKP_SIZE                                   0x1
#define _SSPCON1_CKP_LENGTH                                 0x1
#define _SSPCON1_CKP_MASK                                   0x10
#define _SSPCON1_SSPEN_POSN                                 0x5
#define _SSPCON1_SSPEN_POSITION                             0x5
#define _SSPCON1_SSPEN_SIZE                                 0x1
#define _SSPCON1_SSPEN_LENGTH                               0x1
#define _SSPCON1_SSPEN_MASK                                 0x20
#define _SSPCON1_SSPOV_POSN                                 0x6
#define _SSPCON1_SSPOV_POSITION                             0x6
#define _SSPCON1_SSPOV_SIZE                                 0x1
#define _SSPCON1_SSPOV_LENGTH                               0x1
#define _SSPCON1_SSPOV_MASK                                 0x40
#define _SSPCON1_WCOL_POSN                                  0x7
#define _SSPCON1_WCOL_POSITION                              0x7
#define _SSPCON1_WCOL_SIZE                                  0x1
#define _SSPCON1_WCOL_LENGTH                                0x1
#define _SSPCON1_WCOL_MASK                                  0x80
#define _SSPCON1_SSPM0_POSN                                 0x0
#define _SSPCON1_SSPM0_POSITION                             0x0
#define _SSPCON1_SSPM0_SIZE                                 0x1
#define _SSPCON1_SSPM0_LENGTH                               0x1
#define _SSPCON1_SSPM0_MASK                                 0x1
#define _SSPCON1_SSPM1_POSN                                 0x1
#define _SSPCON1_SSPM1_POSITION                             0x1
#define _SSPCON1_SSPM1_SIZE                                 0x1
#define _SSPCON1_SSPM1_LENGTH                               0x1
#define _SSPCON1_SSPM1_MASK                                 0x2
#define _SSPCON1_SSPM2_POSN                                 0x2
#define _SSPCON1_SSPM2_POSITION                             0x2
#define _SSPCON1_SSPM2_SIZE                                 0x1
#define _SSPCON1_SSPM2_LENGTH                               0x1
#define _SSPCON1_SSPM2_MASK                                 0x4
#define _SSPCON1_SSPM3_POSN                                 0x3
#define _SSPCON1_SSPM3_POSITION                             0x3
#define _SSPCON1_SSPM3_SIZE                                 0x1
#define _SSPCON1_SSPM3_LENGTH                               0x1
#define _SSPCON1_SSPM3_MASK                                 0x8

// Register: SSPSTAT
#define SSPSTAT SSPSTAT
extern volatile unsigned char           SSPSTAT             __at(0xFC7);
#ifndef _LIB_BUILD
asm("SSPSTAT equ 0FC7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned R_NOT_W                :1;
    };
    struct {
        unsigned                        :5;
        unsigned D_NOT_A                :1;
    };
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_W                    :1;
        unsigned                        :2;
        unsigned D_A                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned I2C_READ               :1;
        unsigned I2C_START              :1;
        unsigned I2C_STOP               :1;
        unsigned I2C_DAT                :1;
    };
    struct {
        unsigned                        :2;
        unsigned nW                     :1;
        unsigned                        :2;
        unsigned nA                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_WRITE              :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_ADDRESS            :1;
    };
    struct {
        unsigned                        :2;
        unsigned nWRITE                 :1;
        unsigned                        :2;
        unsigned nADDRESS               :1;
    };
    struct {
        unsigned                        :2;
        unsigned READ_WRITE             :1;
        unsigned                        :2;
        unsigned DATA_ADDRESS           :1;
    };
    struct {
        unsigned                        :2;
        unsigned R                      :1;
        unsigned                        :2;
        unsigned D                      :1;
    };
    struct {
        unsigned                        :2;
        unsigned RW                     :1;
        unsigned START                  :1;
        unsigned STOP                   :1;
        unsigned DA                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_W                  :1;
        unsigned                        :2;
        unsigned NOT_A                  :1;
    };
} SSPSTATbits_t;
extern volatile SSPSTATbits_t SSPSTATbits __at(0xFC7);
// bitfield macros
#define _SSPSTAT_R_NOT_W_POSN                               0x2
#define _SSPSTAT_R_NOT_W_POSITION                           0x2
#define _SSPSTAT_R_NOT_W_SIZE                               0x1
#define _SSPSTAT_R_NOT_W_LENGTH                             0x1
#define _SSPSTAT_R_NOT_W_MASK                               0x4
#define _SSPSTAT_D_NOT_A_POSN                               0x5
#define _SSPSTAT_D_NOT_A_POSITION                           0x5
#define _SSPSTAT_D_NOT_A_SIZE                               0x1
#define _SSPSTAT_D_NOT_A_LENGTH                             0x1
#define _SSPSTAT_D_NOT_A_MASK                               0x20
#define _SSPSTAT_BF_POSN                                    0x0
#define _SSPSTAT_BF_POSITION                                0x0
#define _SSPSTAT_BF_SIZE                                    0x1
#define _SSPSTAT_BF_LENGTH                                  0x1
#define _SSPSTAT_BF_MASK                                    0x1
#define _SSPSTAT_UA_POSN                                    0x1
#define _SSPSTAT_UA_POSITION                                0x1
#define _SSPSTAT_UA_SIZE                                    0x1
#define _SSPSTAT_UA_LENGTH                                  0x1
#define _SSPSTAT_UA_MASK                                    0x2
#define _SSPSTAT_R_nW_POSN                                  0x2
#define _SSPSTAT_R_nW_POSITION                              0x2
#define _SSPSTAT_R_nW_SIZE                                  0x1
#define _SSPSTAT_R_nW_LENGTH                                0x1
#define _SSPSTAT_R_nW_MASK                                  0x4
#define _SSPSTAT_S_POSN                                     0x3
#define _SSPSTAT_S_POSITION                                 0x3
#define _SSPSTAT_S_SIZE                                     0x1
#define _SSPSTAT_S_LENGTH                                   0x1
#define _SSPSTAT_S_MASK                                     0x8
#define _SSPSTAT_P_POSN                                     0x4
#define _SSPSTAT_P_POSITION                                 0x4
#define _SSPSTAT_P_SIZE                                     0x1
#define _SSPSTAT_P_LENGTH                                   0x1
#define _SSPSTAT_P_MASK                                     0x10
#define _SSPSTAT_D_nA_POSN                                  0x5
#define _SSPSTAT_D_nA_POSITION                              0x5
#define _SSPSTAT_D_nA_SIZE                                  0x1
#define _SSPSTAT_D_nA_LENGTH                                0x1
#define _SSPSTAT_D_nA_MASK                                  0x20
#define _SSPSTAT_CKE_POSN                                   0x6
#define _SSPSTAT_CKE_POSITION                               0x6
#define _SSPSTAT_CKE_SIZE                                   0x1
#define _SSPSTAT_CKE_LENGTH                                 0x1
#define _SSPSTAT_CKE_MASK                                   0x40
#define _SSPSTAT_SMP_POSN                                   0x7
#define _SSPSTAT_SMP_POSITION                               0x7
#define _SSPSTAT_SMP_SIZE                                   0x1
#define _SSPSTAT_SMP_LENGTH                                 0x1
#define _SSPSTAT_SMP_MASK                                   0x80
#define _SSPSTAT_R_W_POSN                                   0x2
#define _SSPSTAT_R_W_POSITION                               0x2
#define _SSPSTAT_R_W_SIZE                                   0x1
#define _SSPSTAT_R_W_LENGTH                                 0x1
#define _SSPSTAT_R_W_MASK                                   0x4
#define _SSPSTAT_D_A_POSN                                   0x5
#define _SSPSTAT_D_A_POSITION                               0x5
#define _SSPSTAT_D_A_SIZE                                   0x1
#define _SSPSTAT_D_A_LENGTH                                 0x1
#define _SSPSTAT_D_A_MASK                                   0x20
#define _SSPSTAT_I2C_READ_POSN                              0x2
#define _SSPSTAT_I2C_READ_POSITION                          0x2
#define _SSPSTAT_I2C_READ_SIZE                              0x1
#define _SSPSTAT_I2C_READ_LENGTH                            0x1
#define _SSPSTAT_I2C_READ_MASK                              0x4
#define _SSPSTAT_I2C_START_POSN                             0x3
#define _SSPSTAT_I2C_START_POSITION                         0x3
#define _SSPSTAT_I2C_START_SIZE                             0x1
#define _SSPSTAT_I2C_START_LENGTH                           0x1
#define _SSPSTAT_I2C_START_MASK                             0x8
#define _SSPSTAT_I2C_STOP_POSN                              0x4
#define _SSPSTAT_I2C_STOP_POSITION                          0x4
#define _SSPSTAT_I2C_STOP_SIZE                              0x1
#define _SSPSTAT_I2C_STOP_LENGTH                            0x1
#define _SSPSTAT_I2C_STOP_MASK                              0x10
#define _SSPSTAT_I2C_DAT_POSN                               0x5
#define _SSPSTAT_I2C_DAT_POSITION                           0x5
#define _SSPSTAT_I2C_DAT_SIZE                               0x1
#define _SSPSTAT_I2C_DAT_LENGTH                             0x1
#define _SSPSTAT_I2C_DAT_MASK                               0x20
#define _SSPSTAT_nW_POSN                                    0x2
#define _SSPSTAT_nW_POSITION                                0x2
#define _SSPSTAT_nW_SIZE                                    0x1
#define _SSPSTAT_nW_LENGTH                                  0x1
#define _SSPSTAT_nW_MASK                                    0x4
#define _SSPSTAT_nA_POSN                                    0x5
#define _SSPSTAT_nA_POSITION                                0x5
#define _SSPSTAT_nA_SIZE                                    0x1
#define _SSPSTAT_nA_LENGTH                                  0x1
#define _SSPSTAT_nA_MASK                                    0x20
#define _SSPSTAT_NOT_WRITE_POSN                             0x2
#define _SSPSTAT_NOT_WRITE_POSITION                         0x2
#define _SSPSTAT_NOT_WRITE_SIZE                             0x1
#define _SSPSTAT_NOT_WRITE_LENGTH                           0x1
#define _SSPSTAT_NOT_WRITE_MASK                             0x4
#define _SSPSTAT_NOT_ADDRESS_POSN                           0x5
#define _SSPSTAT_NOT_ADDRESS_POSITION                       0x5
#define _SSPSTAT_NOT_ADDRESS_SIZE                           0x1
#define _SSPSTAT_NOT_ADDRESS_LENGTH                         0x1
#define _SSPSTAT_NOT_ADDRESS_MASK                           0x20
#define _SSPSTAT_nWRITE_POSN                                0x2
#define _SSPSTAT_nWRITE_POSITION                            0x2
#define _SSPSTAT_nWRITE_SIZE                                0x1
#define _SSPSTAT_nWRITE_LENGTH                              0x1
#define _SSPSTAT_nWRITE_MASK                                0x4
#define _SSPSTAT_nADDRESS_POSN                              0x5
#define _SSPSTAT_nADDRESS_POSITION                          0x5
#define _SSPSTAT_nADDRESS_SIZE                              0x1
#define _SSPSTAT_nADDRESS_LENGTH                            0x1
#define _SSPSTAT_nADDRESS_MASK                              0x20
#define _SSPSTAT_READ_WRITE_POSN                            0x2
#define _SSPSTAT_READ_WRITE_POSITION                        0x2
#define _SSPSTAT_READ_WRITE_SIZE                            0x1
#define _SSPSTAT_READ_WRITE_LENGTH                          0x1
#define _SSPSTAT_READ_WRITE_MASK                            0x4
#define _SSPSTAT_DATA_ADDRESS_POSN                          0x5
#define _SSPSTAT_DATA_ADDRESS_POSITION                      0x5
#define _SSPSTAT_DATA_ADDRESS_SIZE                          0x1
#define _SSPSTAT_DATA_ADDRESS_LENGTH                        0x1
#define _SSPSTAT_DATA_ADDRESS_MASK                          0x20
#define _SSPSTAT_R_POSN                                     0x2
#define _SSPSTAT_R_POSITION                                 0x2
#define _SSPSTAT_R_SIZE                                     0x1
#define _SSPSTAT_R_LENGTH                                   0x1
#define _SSPSTAT_R_MASK                                     0x4
#define _SSPSTAT_D_POSN                                     0x5
#define _SSPSTAT_D_POSITION                                 0x5
#define _SSPSTAT_D_SIZE                                     0x1
#define _SSPSTAT_D_LENGTH                                   0x1
#define _SSPSTAT_D_MASK                                     0x20
#define _SSPSTAT_RW_POSN                                    0x2
#define _SSPSTAT_RW_POSITION                                0x2
#define _SSPSTAT_RW_SIZE                                    0x1
#define _SSPSTAT_RW_LENGTH                                  0x1
#define _SSPSTAT_RW_MASK                                    0x4
#define _SSPSTAT_START_POSN                                 0x3
#define _SSPSTAT_START_POSITION                             0x3
#define _SSPSTAT_START_SIZE                                 0x1
#define _SSPSTAT_START_LENGTH                               0x1
#define _SSPSTAT_START_MASK                                 0x8
#define _SSPSTAT_STOP_POSN                                  0x4
#define _SSPSTAT_STOP_POSITION                              0x4
#define _SSPSTAT_STOP_SIZE                                  0x1
#define _SSPSTAT_STOP_LENGTH                                0x1
#define _SSPSTAT_STOP_MASK                                  0x10
#define _SSPSTAT_DA_POSN                                    0x5
#define _SSPSTAT_DA_POSITION                                0x5
#define _SSPSTAT_DA_SIZE                                    0x1
#define _SSPSTAT_DA_LENGTH                                  0x1
#define _SSPSTAT_DA_MASK                                    0x20
#define _SSPSTAT_NOT_W_POSN                                 0x2
#define _SSPSTAT_NOT_W_POSITION                             0x2
#define _SSPSTAT_NOT_W_SIZE                                 0x1
#define _SSPSTAT_NOT_W_LENGTH                               0x1
#define _SSPSTAT_NOT_W_MASK                                 0x4
#define _SSPSTAT_NOT_A_POSN                                 0x5
#define _SSPSTAT_NOT_A_POSITION                             0x5
#define _SSPSTAT_NOT_A_SIZE                                 0x1
#define _SSPSTAT_NOT_A_LENGTH                               0x1
#define _SSPSTAT_NOT_A_MASK                                 0x20

// Register: SSPADD
#define SSPADD SSPADD
extern volatile unsigned char           SSPADD              __at(0xFC8);
#ifndef _LIB_BUILD
asm("SSPADD equ 0FC8h");
#endif

// Register: SSPBUF
#define SSPBUF SSPBUF
extern volatile unsigned char           SSPBUF              __at(0xFC9);
#ifndef _LIB_BUILD
asm("SSPBUF equ 0FC9h");
#endif

// Register: T2CON
#define T2CON T2CON
extern volatile unsigned char           T2CON               __at(0xFCA);
#ifndef _LIB_BUILD
asm("T2CON equ 0FCAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T2CKPS                 :2;
        unsigned TMR2ON                 :1;
        unsigned TOUTPS                 :4;
    };
    struct {
        unsigned T2CKPS0                :1;
        unsigned T2CKPS1                :1;
        unsigned                        :1;
        unsigned T2OUTPS0               :1;
        unsigned T2OUTPS1               :1;
        unsigned T2OUTPS2               :1;
        unsigned T2OUTPS3               :1;
    };
} T2CONbits_t;
extern volatile T2CONbits_t T2CONbits __at(0xFCA);
// bitfield macros
#define _T2CON_T2CKPS_POSN                                  0x0
#define _T2CON_T2CKPS_POSITION                              0x0
#define _T2CON_T2CKPS_SIZE                                  0x2
#define _T2CON_T2CKPS_LENGTH                                0x2
#define _T2CON_T2CKPS_MASK                                  0x3
#define _T2CON_TMR2ON_POSN                                  0x2
#define _T2CON_TMR2ON_POSITION                              0x2
#define _T2CON_TMR2ON_SIZE                                  0x1
#define _T2CON_TMR2ON_LENGTH                                0x1
#define _T2CON_TMR2ON_MASK                                  0x4
#define _T2CON_TOUTPS_POSN                                  0x3
#define _T2CON_TOUTPS_POSITION                              0x3
#define _T2CON_TOUTPS_SIZE                                  0x4
#define _T2CON_TOUTPS_LENGTH                                0x4
#define _T2CON_TOUTPS_MASK                                  0x78
#define _T2CON_T2CKPS0_POSN                                 0x0
#define _T2CON_T2CKPS0_POSITION                             0x0
#define _T2CON_T2CKPS0_SIZE                                 0x1
#define _T2CON_T2CKPS0_LENGTH                               0x1
#define _T2CON_T2CKPS0_MASK                                 0x1
#define _T2CON_T2CKPS1_POSN                                 0x1
#define _T2CON_T2CKPS1_POSITION                             0x1
#define _T2CON_T2CKPS1_SIZE                                 0x1
#define _T2CON_T2CKPS1_LENGTH                               0x1
#define _T2CON_T2CKPS1_MASK                                 0x2
#define _T2CON_T2OUTPS0_POSN                                0x3
#define _T2CON_T2OUTPS0_POSITION                            0x3
#define _T2CON_T2OUTPS0_SIZE                                0x1
#define _T2CON_T2OUTPS0_LENGTH                              0x1
#define _T2CON_T2OUTPS0_MASK                                0x8
#define _T2CON_T2OUTPS1_POSN                                0x4
#define _T2CON_T2OUTPS1_POSITION                            0x4
#define _T2CON_T2OUTPS1_SIZE                                0x1
#define _T2CON_T2OUTPS1_LENGTH                              0x1
#define _T2CON_T2OUTPS1_MASK                                0x10
#define _T2CON_T2OUTPS2_POSN                                0x5
#define _T2CON_T2OUTPS2_POSITION                            0x5
#define _T2CON_T2OUTPS2_SIZE                                0x1
#define _T2CON_T2OUTPS2_LENGTH                              0x1
#define _T2CON_T2OUTPS2_MASK                                0x20
#define _T2CON_T2OUTPS3_POSN                                0x6
#define _T2CON_T2OUTPS3_POSITION                            0x6
#define _T2CON_T2OUTPS3_SIZE                                0x1
#define _T2CON_T2OUTPS3_LENGTH                              0x1
#define _T2CON_T2OUTPS3_MASK                                0x40

// Register: PR2
#define PR2 PR2
extern volatile unsigned char           PR2                 __at(0xFCB);
#ifndef _LIB_BUILD
asm("PR2 equ 0FCBh");
#endif
// aliases
extern volatile unsigned char           MEMCON              __at(0xFCB);
#ifndef _LIB_BUILD
asm("MEMCON equ 0FCBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :7;
        unsigned EBDIS                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned WAIT0                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned WAIT1                  :1;
    };
    struct {
        unsigned WM0                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned WM1                    :1;
    };
} PR2bits_t;
extern volatile PR2bits_t PR2bits __at(0xFCB);
// bitfield macros
#define _PR2_EBDIS_POSN                                     0x7
#define _PR2_EBDIS_POSITION                                 0x7
#define _PR2_EBDIS_SIZE                                     0x1
#define _PR2_EBDIS_LENGTH                                   0x1
#define _PR2_EBDIS_MASK                                     0x80
#define _PR2_WAIT0_POSN                                     0x4
#define _PR2_WAIT0_POSITION                                 0x4
#define _PR2_WAIT0_SIZE                                     0x1
#define _PR2_WAIT0_LENGTH                                   0x1
#define _PR2_WAIT0_MASK                                     0x10
#define _PR2_WAIT1_POSN                                     0x5
#define _PR2_WAIT1_POSITION                                 0x5
#define _PR2_WAIT1_SIZE                                     0x1
#define _PR2_WAIT1_LENGTH                                   0x1
#define _PR2_WAIT1_MASK                                     0x20
#define _PR2_WM0_POSN                                       0x0
#define _PR2_WM0_POSITION                                   0x0
#define _PR2_WM0_SIZE                                       0x1
#define _PR2_WM0_LENGTH                                     0x1
#define _PR2_WM0_MASK                                       0x1
#define _PR2_WM1_POSN                                       0x1
#define _PR2_WM1_POSITION                                   0x1
#define _PR2_WM1_SIZE                                       0x1
#define _PR2_WM1_LENGTH                                     0x1
#define _PR2_WM1_MASK                                       0x2
// alias bitfield definitions
typedef union {
    struct {
        unsigned                        :7;
        unsigned EBDIS                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned WAIT0                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned WAIT1                  :1;
    };
    struct {
        unsigned WM0                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned WM1                    :1;
    };
} MEMCONbits_t;
extern volatile MEMCONbits_t MEMCONbits __at(0xFCB);
// bitfield macros
#define _MEMCON_EBDIS_POSN                                  0x7
#define _MEMCON_EBDIS_POSITION                              0x7
#define _MEMCON_EBDIS_SIZE                                  0x1
#define _MEMCON_EBDIS_LENGTH                                0x1
#define _MEMCON_EBDIS_MASK                                  0x80
#define _MEMCON_WAIT0_POSN                                  0x4
#define _MEMCON_WAIT0_POSITION                              0x4
#define _MEMCON_WAIT0_SIZE                                  0x1
#define _MEMCON_WAIT0_LENGTH                                0x1
#define _MEMCON_WAIT0_MASK                                  0x10
#define _MEMCON_WAIT1_POSN                                  0x5
#define _MEMCON_WAIT1_POSITION                              0x5
#define _MEMCON_WAIT1_SIZE                                  0x1
#define _MEMCON_WAIT1_LENGTH                                0x1
#define _MEMCON_WAIT1_MASK                                  0x20
#define _MEMCON_WM0_POSN                                    0x0
#define _MEMCON_WM0_POSITION                                0x0
#define _MEMCON_WM0_SIZE                                    0x1
#define _MEMCON_WM0_LENGTH                                  0x1
#define _MEMCON_WM0_MASK                                    0x1
#define _MEMCON_WM1_POSN                                    0x1
#define _MEMCON_WM1_POSITION                                0x1
#define _MEMCON_WM1_SIZE                                    0x1
#define _MEMCON_WM1_LENGTH                                  0x1
#define _MEMCON_WM1_MASK                                    0x2

// Register: TMR2
#define TMR2 TMR2
extern volatile unsigned char           TMR2                __at(0xFCC);
#ifndef _LIB_BUILD
asm("TMR2 equ 0FCCh");
#endif

// Register: T1CON
#define T1CON T1CON
extern volatile unsigned char           T1CON               __at(0xFCD);
#ifndef _LIB_BUILD
asm("T1CON equ 0FCDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned NOT_T1SYNC             :1;
    };
    struct {
        unsigned TMR1ON                 :1;
        unsigned TMR1CS                 :1;
        unsigned nT1SYNC                :1;
        unsigned T1OSCEN                :1;
        unsigned T1CKPS                 :2;
        unsigned                        :1;
        unsigned RD16                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned T1SYNC                 :1;
        unsigned                        :1;
        unsigned T1CKPS0                :1;
        unsigned T1CKPS1                :1;
    };
    struct {
        unsigned                        :2;
        unsigned T1INSYNC               :1;
    };
    struct {
        unsigned                        :3;
        unsigned SOSCEN                 :1;
        unsigned                        :3;
        unsigned T1RD16                 :1;
    };
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits __at(0xFCD);
// bitfield macros
#define _T1CON_NOT_T1SYNC_POSN                              0x2
#define _T1CON_NOT_T1SYNC_POSITION                          0x2
#define _T1CON_NOT_T1SYNC_SIZE                              0x1
#define _T1CON_NOT_T1SYNC_LENGTH                            0x1
#define _T1CON_NOT_T1SYNC_MASK                              0x4
#define _T1CON_TMR1ON_POSN                                  0x0
#define _T1CON_TMR1ON_POSITION                              0x0
#define _T1CON_TMR1ON_SIZE                                  0x1
#define _T1CON_TMR1ON_LENGTH                                0x1
#define _T1CON_TMR1ON_MASK                                  0x1
#define _T1CON_TMR1CS_POSN                                  0x1
#define _T1CON_TMR1CS_POSITION                              0x1
#define _T1CON_TMR1CS_SIZE                                  0x1
#define _T1CON_TMR1CS_LENGTH                                0x1
#define _T1CON_TMR1CS_MASK                                  0x2
#define _T1CON_nT1SYNC_POSN                                 0x2
#define _T1CON_nT1SYNC_POSITION                             0x2
#define _T1CON_nT1SYNC_SIZE                                 0x1
#define _T1CON_nT1SYNC_LENGTH                               0x1
#define _T1CON_nT1SYNC_MASK                                 0x4
#define _T1CON_T1OSCEN_POSN                                 0x3
#define _T1CON_T1OSCEN_POSITION                             0x3
#define _T1CON_T1OSCEN_SIZE                                 0x1
#define _T1CON_T1OSCEN_LENGTH                               0x1
#define _T1CON_T1OSCEN_MASK                                 0x8
#define _T1CON_T1CKPS_POSN                                  0x4
#define _T1CON_T1CKPS_POSITION                              0x4
#define _T1CON_T1CKPS_SIZE                                  0x2
#define _T1CON_T1CKPS_LENGTH                                0x2
#define _T1CON_T1CKPS_MASK                                  0x30
#define _T1CON_RD16_POSN                                    0x7
#define _T1CON_RD16_POSITION                                0x7
#define _T1CON_RD16_SIZE                                    0x1
#define _T1CON_RD16_LENGTH                                  0x1
#define _T1CON_RD16_MASK                                    0x80
#define _T1CON_T1SYNC_POSN                                  0x2
#define _T1CON_T1SYNC_POSITION                              0x2
#define _T1CON_T1SYNC_SIZE                                  0x1
#define _T1CON_T1SYNC_LENGTH                                0x1
#define _T1CON_T1SYNC_MASK                                  0x4
#define _T1CON_T1CKPS0_POSN                                 0x4
#define _T1CON_T1CKPS0_POSITION                             0x4
#define _T1CON_T1CKPS0_SIZE                                 0x1
#define _T1CON_T1CKPS0_LENGTH                               0x1
#define _T1CON_T1CKPS0_MASK                                 0x10
#define _T1CON_T1CKPS1_POSN                                 0x5
#define _T1CON_T1CKPS1_POSITION                             0x5
#define _T1CON_T1CKPS1_SIZE                                 0x1
#define _T1CON_T1CKPS1_LENGTH                               0x1
#define _T1CON_T1CKPS1_MASK                                 0x20
#define _T1CON_T1INSYNC_POSN                                0x2
#define _T1CON_T1INSYNC_POSITION                            0x2
#define _T1CON_T1INSYNC_SIZE                                0x1
#define _T1CON_T1INSYNC_LENGTH                              0x1
#define _T1CON_T1INSYNC_MASK                                0x4
#define _T1CON_SOSCEN_POSN                                  0x3
#define _T1CON_SOSCEN_POSITION                              0x3
#define _T1CON_SOSCEN_SIZE                                  0x1
#define _T1CON_SOSCEN_LENGTH                                0x1
#define _T1CON_SOSCEN_MASK                                  0x8
#define _T1CON_T1RD16_POSN                                  0x7
#define _T1CON_T1RD16_POSITION                              0x7
#define _T1CON_T1RD16_SIZE                                  0x1
#define _T1CON_T1RD16_LENGTH                                0x1
#define _T1CON_T1RD16_MASK                                  0x80

// Register: TMR1
#define TMR1 TMR1
extern volatile unsigned short          TMR1                __at(0xFCE);
#ifndef _LIB_BUILD
asm("TMR1 equ 0FCEh");
#endif

// Register: TMR1L
#define TMR1L TMR1L
extern volatile unsigned char           TMR1L               __at(0xFCE);
#ifndef _LIB_BUILD
asm("TMR1L equ 0FCEh");
#endif

// Register: TMR1H
#define TMR1H TMR1H
extern volatile unsigned char           TMR1H               __at(0xFCF);
#ifndef _LIB_BUILD
asm("TMR1H equ 0FCFh");
#endif

// Register: RCON
#define RCON RCON
extern volatile unsigned char           RCON                __at(0xFD0);
#ifndef _LIB_BUILD
asm("RCON equ 0FD0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NOT_BOR                :1;
    };
    struct {
        unsigned                        :1;
        unsigned NOT_POR                :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_PD                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned NOT_TO                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned NOT_RI                 :1;
    };
    struct {
        unsigned nBOR                   :1;
        unsigned nPOR                   :1;
        unsigned nPD                    :1;
        unsigned nTO                    :1;
        unsigned nRI                    :1;
        unsigned                        :2;
        unsigned IPEN                   :1;
    };
    struct {
        unsigned                        :7;
        unsigned NOT_IPEN               :1;
    };
    struct {
        unsigned BOR                    :1;
        unsigned POR                    :1;
        unsigned PD                     :1;
        unsigned TO                     :1;
        unsigned RI                     :1;
        unsigned                        :2;
        unsigned nIPEN                  :1;
    };
} RCONbits_t;
extern volatile RCONbits_t RCONbits __at(0xFD0);
// bitfield macros
#define _RCON_NOT_BOR_POSN                                  0x0
#define _RCON_NOT_BOR_POSITION                              0x0
#define _RCON_NOT_BOR_SIZE                                  0x1
#define _RCON_NOT_BOR_LENGTH                                0x1
#define _RCON_NOT_BOR_MASK                                  0x1
#define _RCON_NOT_POR_POSN                                  0x1
#define _RCON_NOT_POR_POSITION                              0x1
#define _RCON_NOT_POR_SIZE                                  0x1
#define _RCON_NOT_POR_LENGTH                                0x1
#define _RCON_NOT_POR_MASK                                  0x2
#define _RCON_NOT_PD_POSN                                   0x2
#define _RCON_NOT_PD_POSITION                               0x2
#define _RCON_NOT_PD_SIZE                                   0x1
#define _RCON_NOT_PD_LENGTH                                 0x1
#define _RCON_NOT_PD_MASK                                   0x4
#define _RCON_NOT_TO_POSN                                   0x3
#define _RCON_NOT_TO_POSITION                               0x3
#define _RCON_NOT_TO_SIZE                                   0x1
#define _RCON_NOT_TO_LENGTH                                 0x1
#define _RCON_NOT_TO_MASK                                   0x8
#define _RCON_NOT_RI_POSN                                   0x4
#define _RCON_NOT_RI_POSITION                               0x4
#define _RCON_NOT_RI_SIZE                                   0x1
#define _RCON_NOT_RI_LENGTH                                 0x1
#define _RCON_NOT_RI_MASK                                   0x10
#define _RCON_nBOR_POSN                                     0x0
#define _RCON_nBOR_POSITION                                 0x0
#define _RCON_nBOR_SIZE                                     0x1
#define _RCON_nBOR_LENGTH                                   0x1
#define _RCON_nBOR_MASK                                     0x1
#define _RCON_nPOR_POSN                                     0x1
#define _RCON_nPOR_POSITION                                 0x1
#define _RCON_nPOR_SIZE                                     0x1
#define _RCON_nPOR_LENGTH                                   0x1
#define _RCON_nPOR_MASK                                     0x2
#define _RCON_nPD_POSN                                      0x2
#define _RCON_nPD_POSITION                                  0x2
#define _RCON_nPD_SIZE                                      0x1
#define _RCON_nPD_LENGTH                                    0x1
#define _RCON_nPD_MASK                                      0x4
#define _RCON_nTO_POSN                                      0x3
#define _RCON_nTO_POSITION                                  0x3
#define _RCON_nTO_SIZE                                      0x1
#define _RCON_nTO_LENGTH                                    0x1
#define _RCON_nTO_MASK                                      0x8
#define _RCON_nRI_POSN                                      0x4
#define _RCON_nRI_POSITION                                  0x4
#define _RCON_nRI_SIZE                                      0x1
#define _RCON_nRI_LENGTH                                    0x1
#define _RCON_nRI_MASK                                      0x10
#define _RCON_IPEN_POSN                                     0x7
#define _RCON_IPEN_POSITION                                 0x7
#define _RCON_IPEN_SIZE                                     0x1
#define _RCON_IPEN_LENGTH                                   0x1
#define _RCON_IPEN_MASK                                     0x80
#define _RCON_NOT_IPEN_POSN                                 0x7
#define _RCON_NOT_IPEN_POSITION                             0x7
#define _RCON_NOT_IPEN_SIZE                                 0x1
#define _RCON_NOT_IPEN_LENGTH                               0x1
#define _RCON_NOT_IPEN_MASK                                 0x80
#define _RCON_BOR_POSN                                      0x0
#define _RCON_BOR_POSITION                                  0x0
#define _RCON_BOR_SIZE                                      0x1
#define _RCON_BOR_LENGTH                                    0x1
#define _RCON_BOR_MASK                                      0x1
#define _RCON_POR_POSN                                      0x1
#define _RCON_POR_POSITION                                  0x1
#define _RCON_POR_SIZE                                      0x1
#define _RCON_POR_LENGTH                                    0x1
#define _RCON_POR_MASK                                      0x2
#define _RCON_PD_POSN                                       0x2
#define _RCON_PD_POSITION                                   0x2
#define _RCON_PD_SIZE                                       0x1
#define _RCON_PD_LENGTH                                     0x1
#define _RCON_PD_MASK                                       0x4
#define _RCON_TO_POSN                                       0x3
#define _RCON_TO_POSITION                                   0x3
#define _RCON_TO_SIZE                                       0x1
#define _RCON_TO_LENGTH                                     0x1
#define _RCON_TO_MASK                                       0x8
#define _RCON_RI_POSN                                       0x4
#define _RCON_RI_POSITION                                   0x4
#define _RCON_RI_SIZE                                       0x1
#define _RCON_RI_LENGTH                                     0x1
#define _RCON_RI_MASK                                       0x10
#define _RCON_nIPEN_POSN                                    0x7
#define _RCON_nIPEN_POSITION                                0x7
#define _RCON_nIPEN_SIZE                                    0x1
#define _RCON_nIPEN_LENGTH                                  0x1
#define _RCON_nIPEN_MASK                                    0x80

// Register: WDTCON
#define WDTCON WDTCON
extern volatile unsigned char           WDTCON              __at(0xFD1);
#ifndef _LIB_BUILD
asm("WDTCON equ 0FD1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SWDTEN                 :1;
    };
    struct {
        unsigned SWDTE                  :1;
    };
} WDTCONbits_t;
extern volatile WDTCONbits_t WDTCONbits __at(0xFD1);
// bitfield macros
#define _WDTCON_SWDTEN_POSN                                 0x0
#define _WDTCON_SWDTEN_POSITION                             0x0
#define _WDTCON_SWDTEN_SIZE                                 0x1
#define _WDTCON_SWDTEN_LENGTH                               0x1
#define _WDTCON_SWDTEN_MASK                                 0x1
#define _WDTCON_SWDTE_POSN                                  0x0
#define _WDTCON_SWDTE_POSITION                              0x0
#define _WDTCON_SWDTE_SIZE                                  0x1
#define _WDTCON_SWDTE_LENGTH                                0x1
#define _WDTCON_SWDTE_MASK                                  0x1

// Register: LVDCON
#define LVDCON LVDCON
extern volatile unsigned char           LVDCON              __at(0xFD2);
#ifndef _LIB_BUILD
asm("LVDCON equ 0FD2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LVDL                   :4;
        unsigned LVDEN                  :1;
        unsigned IRVST                  :1;
    };
    struct {
        unsigned LVDL0                  :1;
        unsigned LVDL1                  :1;
        unsigned LVDL2                  :1;
        unsigned LVDL3                  :1;
    };
    struct {
        unsigned LVV0                   :1;
        unsigned LVV1                   :1;
        unsigned LVV2                   :1;
        unsigned LVV3                   :1;
        unsigned                        :1;
        unsigned BGST                   :1;
    };
} LVDCONbits_t;
extern volatile LVDCONbits_t LVDCONbits __at(0xFD2);
// bitfield macros
#define _LVDCON_LVDL_POSN                                   0x0
#define _LVDCON_LVDL_POSITION                               0x0
#define _LVDCON_LVDL_SIZE                                   0x4
#define _LVDCON_LVDL_LENGTH                                 0x4
#define _LVDCON_LVDL_MASK                                   0xF
#define _LVDCON_LVDEN_POSN                                  0x4
#define _LVDCON_LVDEN_POSITION                              0x4
#define _LVDCON_LVDEN_SIZE                                  0x1
#define _LVDCON_LVDEN_LENGTH                                0x1
#define _LVDCON_LVDEN_MASK                                  0x10
#define _LVDCON_IRVST_POSN                                  0x5
#define _LVDCON_IRVST_POSITION                              0x5
#define _LVDCON_IRVST_SIZE                                  0x1
#define _LVDCON_IRVST_LENGTH                                0x1
#define _LVDCON_IRVST_MASK                                  0x20
#define _LVDCON_LVDL0_POSN                                  0x0
#define _LVDCON_LVDL0_POSITION                              0x0
#define _LVDCON_LVDL0_SIZE                                  0x1
#define _LVDCON_LVDL0_LENGTH                                0x1
#define _LVDCON_LVDL0_MASK                                  0x1
#define _LVDCON_LVDL1_POSN                                  0x1
#define _LVDCON_LVDL1_POSITION                              0x1
#define _LVDCON_LVDL1_SIZE                                  0x1
#define _LVDCON_LVDL1_LENGTH                                0x1
#define _LVDCON_LVDL1_MASK                                  0x2
#define _LVDCON_LVDL2_POSN                                  0x2
#define _LVDCON_LVDL2_POSITION                              0x2
#define _LVDCON_LVDL2_SIZE                                  0x1
#define _LVDCON_LVDL2_LENGTH                                0x1
#define _LVDCON_LVDL2_MASK                                  0x4
#define _LVDCON_LVDL3_POSN                                  0x3
#define _LVDCON_LVDL3_POSITION                              0x3
#define _LVDCON_LVDL3_SIZE                                  0x1
#define _LVDCON_LVDL3_LENGTH                                0x1
#define _LVDCON_LVDL3_MASK                                  0x8
#define _LVDCON_LVV0_POSN                                   0x0
#define _LVDCON_LVV0_POSITION                               0x0
#define _LVDCON_LVV0_SIZE                                   0x1
#define _LVDCON_LVV0_LENGTH                                 0x1
#define _LVDCON_LVV0_MASK                                   0x1
#define _LVDCON_LVV1_POSN                                   0x1
#define _LVDCON_LVV1_POSITION                               0x1
#define _LVDCON_LVV1_SIZE                                   0x1
#define _LVDCON_LVV1_LENGTH                                 0x1
#define _LVDCON_LVV1_MASK                                   0x2
#define _LVDCON_LVV2_POSN                                   0x2
#define _LVDCON_LVV2_POSITION                               0x2
#define _LVDCON_LVV2_SIZE                                   0x1
#define _LVDCON_LVV2_LENGTH                                 0x1
#define _LVDCON_LVV2_MASK                                   0x4
#define _LVDCON_LVV3_POSN                                   0x3
#define _LVDCON_LVV3_POSITION                               0x3
#define _LVDCON_LVV3_SIZE                                   0x1
#define _LVDCON_LVV3_LENGTH                                 0x1
#define _LVDCON_LVV3_MASK                                   0x8
#define _LVDCON_BGST_POSN                                   0x5
#define _LVDCON_BGST_POSITION                               0x5
#define _LVDCON_BGST_SIZE                                   0x1
#define _LVDCON_BGST_LENGTH                                 0x1
#define _LVDCON_BGST_MASK                                   0x20

// Register: OSCCON
#define OSCCON OSCCON
extern volatile unsigned char           OSCCON              __at(0xFD3);
#ifndef _LIB_BUILD
asm("OSCCON equ 0FD3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SCS0                   :1;
        unsigned SCS1                   :1;
        unsigned PLLEN                  :1;
        unsigned LOCK                   :1;
    };
    struct {
        unsigned SCS                    :1;
    };
} OSCCONbits_t;
extern volatile OSCCONbits_t OSCCONbits __at(0xFD3);
// bitfield macros
#define _OSCCON_SCS0_POSN                                   0x0
#define _OSCCON_SCS0_POSITION                               0x0
#define _OSCCON_SCS0_SIZE                                   0x1
#define _OSCCON_SCS0_LENGTH                                 0x1
#define _OSCCON_SCS0_MASK                                   0x1
#define _OSCCON_SCS1_POSN                                   0x1
#define _OSCCON_SCS1_POSITION                               0x1
#define _OSCCON_SCS1_SIZE                                   0x1
#define _OSCCON_SCS1_LENGTH                                 0x1
#define _OSCCON_SCS1_MASK                                   0x2
#define _OSCCON_PLLEN_POSN                                  0x2
#define _OSCCON_PLLEN_POSITION                              0x2
#define _OSCCON_PLLEN_SIZE                                  0x1
#define _OSCCON_PLLEN_LENGTH                                0x1
#define _OSCCON_PLLEN_MASK                                  0x4
#define _OSCCON_LOCK_POSN                                   0x3
#define _OSCCON_LOCK_POSITION                               0x3
#define _OSCCON_LOCK_SIZE                                   0x1
#define _OSCCON_LOCK_LENGTH                                 0x1
#define _OSCCON_LOCK_MASK                                   0x8
#define _OSCCON_SCS_POSN                                    0x0
#define _OSCCON_SCS_POSITION                                0x0
#define _OSCCON_SCS_SIZE                                    0x1
#define _OSCCON_SCS_LENGTH                                  0x1
#define _OSCCON_SCS_MASK                                    0x1

// Register: T0CON
#define T0CON T0CON
extern volatile unsigned char           T0CON               __at(0xFD5);
#ifndef _LIB_BUILD
asm("T0CON equ 0FD5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T0PS                   :3;
        unsigned PSA                    :1;
        unsigned T0SE                   :1;
        unsigned T0CS                   :1;
        unsigned T08BIT                 :1;
        unsigned TMR0ON                 :1;
    };
    struct {
        unsigned T0PS0                  :1;
        unsigned T0PS1                  :1;
        unsigned T0PS2                  :1;
    };
} T0CONbits_t;
extern volatile T0CONbits_t T0CONbits __at(0xFD5);
// bitfield macros
#define _T0CON_T0PS_POSN                                    0x0
#define _T0CON_T0PS_POSITION                                0x0
#define _T0CON_T0PS_SIZE                                    0x3
#define _T0CON_T0PS_LENGTH                                  0x3
#define _T0CON_T0PS_MASK                                    0x7
#define _T0CON_PSA_POSN                                     0x3
#define _T0CON_PSA_POSITION                                 0x3
#define _T0CON_PSA_SIZE                                     0x1
#define _T0CON_PSA_LENGTH                                   0x1
#define _T0CON_PSA_MASK                                     0x8
#define _T0CON_T0SE_POSN                                    0x4
#define _T0CON_T0SE_POSITION                                0x4
#define _T0CON_T0SE_SIZE                                    0x1
#define _T0CON_T0SE_LENGTH                                  0x1
#define _T0CON_T0SE_MASK                                    0x10
#define _T0CON_T0CS_POSN                                    0x5
#define _T0CON_T0CS_POSITION                                0x5
#define _T0CON_T0CS_SIZE                                    0x1
#define _T0CON_T0CS_LENGTH                                  0x1
#define _T0CON_T0CS_MASK                                    0x20
#define _T0CON_T08BIT_POSN                                  0x6
#define _T0CON_T08BIT_POSITION                              0x6
#define _T0CON_T08BIT_SIZE                                  0x1
#define _T0CON_T08BIT_LENGTH                                0x1
#define _T0CON_T08BIT_MASK                                  0x40
#define _T0CON_TMR0ON_POSN                                  0x7
#define _T0CON_TMR0ON_POSITION                              0x7
#define _T0CON_TMR0ON_SIZE                                  0x1
#define _T0CON_TMR0ON_LENGTH                                0x1
#define _T0CON_TMR0ON_MASK                                  0x80
#define _T0CON_T0PS0_POSN                                   0x0
#define _T0CON_T0PS0_POSITION                               0x0
#define _T0CON_T0PS0_SIZE                                   0x1
#define _T0CON_T0PS0_LENGTH                                 0x1
#define _T0CON_T0PS0_MASK                                   0x1
#define _T0CON_T0PS1_POSN                                   0x1
#define _T0CON_T0PS1_POSITION                               0x1
#define _T0CON_T0PS1_SIZE                                   0x1
#define _T0CON_T0PS1_LENGTH                                 0x1
#define _T0CON_T0PS1_MASK                                   0x2
#define _T0CON_T0PS2_POSN                                   0x2
#define _T0CON_T0PS2_POSITION                               0x2
#define _T0CON_T0PS2_SIZE                                   0x1
#define _T0CON_T0PS2_LENGTH                                 0x1
#define _T0CON_T0PS2_MASK                                   0x4

// Register: TMR0
#define TMR0 TMR0
extern volatile unsigned short          TMR0                __at(0xFD6);
#ifndef _LIB_BUILD
asm("TMR0 equ 0FD6h");
#endif

// Register: TMR0L
#define TMR0L TMR0L
extern volatile unsigned char           TMR0L               __at(0xFD6);
#ifndef _LIB_BUILD
asm("TMR0L equ 0FD6h");
#endif

// Register: TMR0H
#define TMR0H TMR0H
extern volatile unsigned char           TMR0H               __at(0xFD7);
#ifndef _LIB_BUILD
asm("TMR0H equ 0FD7h");
#endif

// Register: STATUS
#define STATUS STATUS
extern volatile unsigned char           STATUS              __at(0xFD8);
#ifndef _LIB_BUILD
asm("STATUS equ 0FD8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C                      :1;
        unsigned DC                     :1;
        unsigned Z                      :1;
        unsigned OV                     :1;
        unsigned N                      :1;
    };
    struct {
        unsigned CARRY                  :1;
        unsigned                        :1;
        unsigned ZERO                   :1;
        unsigned OVERFLOW               :1;
        unsigned NEGATIVE               :1;
    };
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits __at(0xFD8);
// bitfield macros
#define _STATUS_C_POSN                                      0x0
#define _STATUS_C_POSITION                                  0x0
#define _STATUS_C_SIZE                                      0x1
#define _STATUS_C_LENGTH                                    0x1
#define _STATUS_C_MASK                                      0x1
#define _STATUS_DC_POSN                                     0x1
#define _STATUS_DC_POSITION                                 0x1
#define _STATUS_DC_SIZE                                     0x1
#define _STATUS_DC_LENGTH                                   0x1
#define _STATUS_DC_MASK                                     0x2
#define _STATUS_Z_POSN                                      0x2
#define _STATUS_Z_POSITION                                  0x2
#define _STATUS_Z_SIZE                                      0x1
#define _STATUS_Z_LENGTH                                    0x1
#define _STATUS_Z_MASK                                      0x4
#define _STATUS_OV_POSN                                     0x3
#define _STATUS_OV_POSITION                                 0x3
#define _STATUS_OV_SIZE                                     0x1
#define _STATUS_OV_LENGTH                                   0x1
#define _STATUS_OV_MASK                                     0x8
#define _STATUS_N_POSN                                      0x4
#define _STATUS_N_POSITION                                  0x4
#define _STATUS_N_SIZE                                      0x1
#define _STATUS_N_LENGTH                                    0x1
#define _STATUS_N_MASK                                      0x10
#define _STATUS_CARRY_POSN                                  0x0
#define _STATUS_CARRY_POSITION                              0x0
#define _STATUS_CARRY_SIZE                                  0x1
#define _STATUS_CARRY_LENGTH                                0x1
#define _STATUS_CARRY_MASK                                  0x1
#define _STATUS_ZERO_POSN                                   0x2
#define _STATUS_ZERO_POSITION                               0x2
#define _STATUS_ZERO_SIZE                                   0x1
#define _STATUS_ZERO_LENGTH                                 0x1
#define _STATUS_ZERO_MASK                                   0x4
#define _STATUS_OVERFLOW_POSN                               0x3
#define _STATUS_OVERFLOW_POSITION                           0x3
#define _STATUS_OVERFLOW_SIZE                               0x1
#define _STATUS_OVERFLOW_LENGTH                             0x1
#define _STATUS_OVERFLOW_MASK                               0x8
#define _STATUS_NEGATIVE_POSN                               0x4
#define _STATUS_NEGATIVE_POSITION                           0x4
#define _STATUS_NEGATIVE_SIZE                               0x1
#define _STATUS_NEGATIVE_LENGTH                             0x1
#define _STATUS_NEGATIVE_MASK                               0x10

// Register: FSR2
#define FSR2 FSR2
extern volatile unsigned short          FSR2                __at(0xFD9);
#ifndef _LIB_BUILD
asm("FSR2 equ 0FD9h");
#endif

// Register: FSR2L
#define FSR2L FSR2L
extern volatile unsigned char           FSR2L               __at(0xFD9);
#ifndef _LIB_BUILD
asm("FSR2L equ 0FD9h");
#endif

// Register: FSR2H
#define FSR2H FSR2H
extern volatile unsigned char           FSR2H               __at(0xFDA);
#ifndef _LIB_BUILD
asm("FSR2H equ 0FDAh");
#endif

// Register: PLUSW2
#define PLUSW2 PLUSW2
extern volatile unsigned char           PLUSW2              __at(0xFDB);
#ifndef _LIB_BUILD
asm("PLUSW2 equ 0FDBh");
#endif

// Register: PREINC2
#define PREINC2 PREINC2
extern volatile unsigned char           PREINC2             __at(0xFDC);
#ifndef _LIB_BUILD
asm("PREINC2 equ 0FDCh");
#endif

// Register: POSTDEC2
#define POSTDEC2 POSTDEC2
extern volatile unsigned char           POSTDEC2            __at(0xFDD);
#ifndef _LIB_BUILD
asm("POSTDEC2 equ 0FDDh");
#endif

// Register: POSTINC2
#define POSTINC2 POSTINC2
extern volatile unsigned char           POSTINC2            __at(0xFDE);
#ifndef _LIB_BUILD
asm("POSTINC2 equ 0FDEh");
#endif

// Register: INDF2
#define INDF2 INDF2
extern volatile unsigned char           INDF2               __at(0xFDF);
#ifndef _LIB_BUILD
asm("INDF2 equ 0FDFh");
#endif

// Register: BSR
#define BSR BSR
extern volatile unsigned char           BSR                 __at(0xFE0);
#ifndef _LIB_BUILD
asm("BSR equ 0FE0h");
#endif

// Register: FSR1
#define FSR1 FSR1
extern volatile unsigned short          FSR1                __at(0xFE1);
#ifndef _LIB_BUILD
asm("FSR1 equ 0FE1h");
#endif

// Register: FSR1L
#define FSR1L FSR1L
extern volatile unsigned char           FSR1L               __at(0xFE1);
#ifndef _LIB_BUILD
asm("FSR1L equ 0FE1h");
#endif

// Register: FSR1H
#define FSR1H FSR1H
extern volatile unsigned char           FSR1H               __at(0xFE2);
#ifndef _LIB_BUILD
asm("FSR1H equ 0FE2h");
#endif

// Register: PLUSW1
#define PLUSW1 PLUSW1
extern volatile unsigned char           PLUSW1              __at(0xFE3);
#ifndef _LIB_BUILD
asm("PLUSW1 equ 0FE3h");
#endif

// Register: PREINC1
#define PREINC1 PREINC1
extern volatile unsigned char           PREINC1             __at(0xFE4);
#ifndef _LIB_BUILD
asm("PREINC1 equ 0FE4h");
#endif

// Register: POSTDEC1
#define POSTDEC1 POSTDEC1
extern volatile unsigned char           POSTDEC1            __at(0xFE5);
#ifndef _LIB_BUILD
asm("POSTDEC1 equ 0FE5h");
#endif

// Register: POSTINC1
#define POSTINC1 POSTINC1
extern volatile unsigned char           POSTINC1            __at(0xFE6);
#ifndef _LIB_BUILD
asm("POSTINC1 equ 0FE6h");
#endif

// Register: INDF1
#define INDF1 INDF1
extern volatile unsigned char           INDF1               __at(0xFE7);
#ifndef _LIB_BUILD
asm("INDF1 equ 0FE7h");
#endif

// Register: WREG
#define WREG WREG
extern volatile unsigned char           WREG                __at(0xFE8);
#ifndef _LIB_BUILD
asm("WREG equ 0FE8h");
#endif

// Register: FSR0
#define FSR0 FSR0
extern volatile unsigned short          FSR0                __at(0xFE9);
#ifndef _LIB_BUILD
asm("FSR0 equ 0FE9h");
#endif

// Register: FSR0L
#define FSR0L FSR0L
extern volatile unsigned char           FSR0L               __at(0xFE9);
#ifndef _LIB_BUILD
asm("FSR0L equ 0FE9h");
#endif

// Register: FSR0H
#define FSR0H FSR0H
extern volatile unsigned char           FSR0H               __at(0xFEA);
#ifndef _LIB_BUILD
asm("FSR0H equ 0FEAh");
#endif

// Register: PLUSW0
#define PLUSW0 PLUSW0
extern volatile unsigned char           PLUSW0              __at(0xFEB);
#ifndef _LIB_BUILD
asm("PLUSW0 equ 0FEBh");
#endif

// Register: PREINC0
#define PREINC0 PREINC0
extern volatile unsigned char           PREINC0             __at(0xFEC);
#ifndef _LIB_BUILD
asm("PREINC0 equ 0FECh");
#endif

// Register: POSTDEC0
#define POSTDEC0 POSTDEC0
extern volatile unsigned char           POSTDEC0            __at(0xFED);
#ifndef _LIB_BUILD
asm("POSTDEC0 equ 0FEDh");
#endif

// Register: POSTINC0
#define POSTINC0 POSTINC0
extern volatile unsigned char           POSTINC0            __at(0xFEE);
#ifndef _LIB_BUILD
asm("POSTINC0 equ 0FEEh");
#endif

// Register: INDF0
#define INDF0 INDF0
extern volatile unsigned char           INDF0               __at(0xFEF);
#ifndef _LIB_BUILD
asm("INDF0 equ 0FEFh");
#endif

// Register: INTCON3
#define INTCON3 INTCON3
extern volatile unsigned char           INTCON3             __at(0xFF0);
#ifndef _LIB_BUILD
asm("INTCON3 equ 0FF0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INT1IF                 :1;
        unsigned INT2IF                 :1;
        unsigned INT3IF                 :1;
        unsigned INT1IE                 :1;
        unsigned INT2IE                 :1;
        unsigned INT3IE                 :1;
        unsigned INT1IP                 :1;
        unsigned INT2IP                 :1;
    };
    struct {
        unsigned INT1F                  :1;
        unsigned INT2F                  :1;
        unsigned INT3F                  :1;
        unsigned INT1E                  :1;
        unsigned INT2E                  :1;
        unsigned INT3E                  :1;
        unsigned INT1P                  :1;
        unsigned INT2P                  :1;
    };
} INTCON3bits_t;
extern volatile INTCON3bits_t INTCON3bits __at(0xFF0);
// bitfield macros
#define _INTCON3_INT1IF_POSN                                0x0
#define _INTCON3_INT1IF_POSITION                            0x0
#define _INTCON3_INT1IF_SIZE                                0x1
#define _INTCON3_INT1IF_LENGTH                              0x1
#define _INTCON3_INT1IF_MASK                                0x1
#define _INTCON3_INT2IF_POSN                                0x1
#define _INTCON3_INT2IF_POSITION                            0x1
#define _INTCON3_INT2IF_SIZE                                0x1
#define _INTCON3_INT2IF_LENGTH                              0x1
#define _INTCON3_INT2IF_MASK                                0x2
#define _INTCON3_INT3IF_POSN                                0x2
#define _INTCON3_INT3IF_POSITION                            0x2
#define _INTCON3_INT3IF_SIZE                                0x1
#define _INTCON3_INT3IF_LENGTH                              0x1
#define _INTCON3_INT3IF_MASK                                0x4
#define _INTCON3_INT1IE_POSN                                0x3
#define _INTCON3_INT1IE_POSITION                            0x3
#define _INTCON3_INT1IE_SIZE                                0x1
#define _INTCON3_INT1IE_LENGTH                              0x1
#define _INTCON3_INT1IE_MASK                                0x8
#define _INTCON3_INT2IE_POSN                                0x4
#define _INTCON3_INT2IE_POSITION                            0x4
#define _INTCON3_INT2IE_SIZE                                0x1
#define _INTCON3_INT2IE_LENGTH                              0x1
#define _INTCON3_INT2IE_MASK                                0x10
#define _INTCON3_INT3IE_POSN                                0x5
#define _INTCON3_INT3IE_POSITION                            0x5
#define _INTCON3_INT3IE_SIZE                                0x1
#define _INTCON3_INT3IE_LENGTH                              0x1
#define _INTCON3_INT3IE_MASK                                0x20
#define _INTCON3_INT1IP_POSN                                0x6
#define _INTCON3_INT1IP_POSITION                            0x6
#define _INTCON3_INT1IP_SIZE                                0x1
#define _INTCON3_INT1IP_LENGTH                              0x1
#define _INTCON3_INT1IP_MASK                                0x40
#define _INTCON3_INT2IP_POSN                                0x7
#define _INTCON3_INT2IP_POSITION                            0x7
#define _INTCON3_INT2IP_SIZE                                0x1
#define _INTCON3_INT2IP_LENGTH                              0x1
#define _INTCON3_INT2IP_MASK                                0x80
#define _INTCON3_INT1F_POSN                                 0x0
#define _INTCON3_INT1F_POSITION                             0x0
#define _INTCON3_INT1F_SIZE                                 0x1
#define _INTCON3_INT1F_LENGTH                               0x1
#define _INTCON3_INT1F_MASK                                 0x1
#define _INTCON3_INT2F_POSN                                 0x1
#define _INTCON3_INT2F_POSITION                             0x1
#define _INTCON3_INT2F_SIZE                                 0x1
#define _INTCON3_INT2F_LENGTH                               0x1
#define _INTCON3_INT2F_MASK                                 0x2
#define _INTCON3_INT3F_POSN                                 0x2
#define _INTCON3_INT3F_POSITION                             0x2
#define _INTCON3_INT3F_SIZE                                 0x1
#define _INTCON3_INT3F_LENGTH                               0x1
#define _INTCON3_INT3F_MASK                                 0x4
#define _INTCON3_INT1E_POSN                                 0x3
#define _INTCON3_INT1E_POSITION                             0x3
#define _INTCON3_INT1E_SIZE                                 0x1
#define _INTCON3_INT1E_LENGTH                               0x1
#define _INTCON3_INT1E_MASK                                 0x8
#define _INTCON3_INT2E_POSN                                 0x4
#define _INTCON3_INT2E_POSITION                             0x4
#define _INTCON3_INT2E_SIZE                                 0x1
#define _INTCON3_INT2E_LENGTH                               0x1
#define _INTCON3_INT2E_MASK                                 0x10
#define _INTCON3_INT3E_POSN                                 0x5
#define _INTCON3_INT3E_POSITION                             0x5
#define _INTCON3_INT3E_SIZE                                 0x1
#define _INTCON3_INT3E_LENGTH                               0x1
#define _INTCON3_INT3E_MASK                                 0x20
#define _INTCON3_INT1P_POSN                                 0x6
#define _INTCON3_INT1P_POSITION                             0x6
#define _INTCON3_INT1P_SIZE                                 0x1
#define _INTCON3_INT1P_LENGTH                               0x1
#define _INTCON3_INT1P_MASK                                 0x40
#define _INTCON3_INT2P_POSN                                 0x7
#define _INTCON3_INT2P_POSITION                             0x7
#define _INTCON3_INT2P_SIZE                                 0x1
#define _INTCON3_INT2P_LENGTH                               0x1
#define _INTCON3_INT2P_MASK                                 0x80

// Register: INTCON2
#define INTCON2 INTCON2
extern volatile unsigned char           INTCON2             __at(0xFF1);
#ifndef _LIB_BUILD
asm("INTCON2 equ 0FF1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :7;
        unsigned NOT_RBPU               :1;
    };
    struct {
        unsigned RBIP                   :1;
        unsigned INT3IP                 :1;
        unsigned TMR0IP                 :1;
        unsigned INTEDG3                :1;
        unsigned INTEDG2                :1;
        unsigned INTEDG1                :1;
        unsigned INTEDG0                :1;
        unsigned nRBPU                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned INT3P                  :1;
        unsigned T0IP                   :1;
        unsigned                        :4;
        unsigned RBPU                   :1;
    };
} INTCON2bits_t;
extern volatile INTCON2bits_t INTCON2bits __at(0xFF1);
// bitfield macros
#define _INTCON2_NOT_RBPU_POSN                              0x7
#define _INTCON2_NOT_RBPU_POSITION                          0x7
#define _INTCON2_NOT_RBPU_SIZE                              0x1
#define _INTCON2_NOT_RBPU_LENGTH                            0x1
#define _INTCON2_NOT_RBPU_MASK                              0x80
#define _INTCON2_RBIP_POSN                                  0x0
#define _INTCON2_RBIP_POSITION                              0x0
#define _INTCON2_RBIP_SIZE                                  0x1
#define _INTCON2_RBIP_LENGTH                                0x1
#define _INTCON2_RBIP_MASK                                  0x1
#define _INTCON2_INT3IP_POSN                                0x1
#define _INTCON2_INT3IP_POSITION                            0x1
#define _INTCON2_INT3IP_SIZE                                0x1
#define _INTCON2_INT3IP_LENGTH                              0x1
#define _INTCON2_INT3IP_MASK                                0x2
#define _INTCON2_TMR0IP_POSN                                0x2
#define _INTCON2_TMR0IP_POSITION                            0x2
#define _INTCON2_TMR0IP_SIZE                                0x1
#define _INTCON2_TMR0IP_LENGTH                              0x1
#define _INTCON2_TMR0IP_MASK                                0x4
#define _INTCON2_INTEDG3_POSN                               0x3
#define _INTCON2_INTEDG3_POSITION                           0x3
#define _INTCON2_INTEDG3_SIZE                               0x1
#define _INTCON2_INTEDG3_LENGTH                             0x1
#define _INTCON2_INTEDG3_MASK                               0x8
#define _INTCON2_INTEDG2_POSN                               0x4
#define _INTCON2_INTEDG2_POSITION                           0x4
#define _INTCON2_INTEDG2_SIZE                               0x1
#define _INTCON2_INTEDG2_LENGTH                             0x1
#define _INTCON2_INTEDG2_MASK                               0x10
#define _INTCON2_INTEDG1_POSN                               0x5
#define _INTCON2_INTEDG1_POSITION                           0x5
#define _INTCON2_INTEDG1_SIZE                               0x1
#define _INTCON2_INTEDG1_LENGTH                             0x1
#define _INTCON2_INTEDG1_MASK                               0x20
#define _INTCON2_INTEDG0_POSN                               0x6
#define _INTCON2_INTEDG0_POSITION                           0x6
#define _INTCON2_INTEDG0_SIZE                               0x1
#define _INTCON2_INTEDG0_LENGTH                             0x1
#define _INTCON2_INTEDG0_MASK                               0x40
#define _INTCON2_nRBPU_POSN                                 0x7
#define _INTCON2_nRBPU_POSITION                             0x7
#define _INTCON2_nRBPU_SIZE                                 0x1
#define _INTCON2_nRBPU_LENGTH                               0x1
#define _INTCON2_nRBPU_MASK                                 0x80
#define _INTCON2_INT3P_POSN                                 0x1
#define _INTCON2_INT3P_POSITION                             0x1
#define _INTCON2_INT3P_SIZE                                 0x1
#define _INTCON2_INT3P_LENGTH                               0x1
#define _INTCON2_INT3P_MASK                                 0x2
#define _INTCON2_T0IP_POSN                                  0x2
#define _INTCON2_T0IP_POSITION                              0x2
#define _INTCON2_T0IP_SIZE                                  0x1
#define _INTCON2_T0IP_LENGTH                                0x1
#define _INTCON2_T0IP_MASK                                  0x4
#define _INTCON2_RBPU_POSN                                  0x7
#define _INTCON2_RBPU_POSITION                              0x7
#define _INTCON2_RBPU_SIZE                                  0x1
#define _INTCON2_RBPU_LENGTH                                0x1
#define _INTCON2_RBPU_MASK                                  0x80

// Register: INTCON
#define INTCON INTCON
extern volatile unsigned char           INTCON              __at(0xFF2);
#ifndef _LIB_BUILD
asm("INTCON equ 0FF2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RBIF                   :1;
        unsigned INT0IF                 :1;
        unsigned TMR0IF                 :1;
        unsigned RBIE                   :1;
        unsigned INT0IE                 :1;
        unsigned TMR0IE                 :1;
        unsigned PEIE_GIEL              :1;
        unsigned GIE_GIEH               :1;
    };
    struct {
        unsigned                        :1;
        unsigned INT0F                  :1;
        unsigned T0IF                   :1;
        unsigned                        :1;
        unsigned INT0E                  :1;
        unsigned T0IE                   :1;
        unsigned PEIE                   :1;
        unsigned GIE                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned GIEL                   :1;
        unsigned GIEH                   :1;
    };
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits __at(0xFF2);
// bitfield macros
#define _INTCON_RBIF_POSN                                   0x0
#define _INTCON_RBIF_POSITION                               0x0
#define _INTCON_RBIF_SIZE                                   0x1
#define _INTCON_RBIF_LENGTH                                 0x1
#define _INTCON_RBIF_MASK                                   0x1
#define _INTCON_INT0IF_POSN                                 0x1
#define _INTCON_INT0IF_POSITION                             0x1
#define _INTCON_INT0IF_SIZE                                 0x1
#define _INTCON_INT0IF_LENGTH                               0x1
#define _INTCON_INT0IF_MASK                                 0x2
#define _INTCON_TMR0IF_POSN                                 0x2
#define _INTCON_TMR0IF_POSITION                             0x2
#define _INTCON_TMR0IF_SIZE                                 0x1
#define _INTCON_TMR0IF_LENGTH                               0x1
#define _INTCON_TMR0IF_MASK                                 0x4
#define _INTCON_RBIE_POSN                                   0x3
#define _INTCON_RBIE_POSITION                               0x3
#define _INTCON_RBIE_SIZE                                   0x1
#define _INTCON_RBIE_LENGTH                                 0x1
#define _INTCON_RBIE_MASK                                   0x8
#define _INTCON_INT0IE_POSN                                 0x4
#define _INTCON_INT0IE_POSITION                             0x4
#define _INTCON_INT0IE_SIZE                                 0x1
#define _INTCON_INT0IE_LENGTH                               0x1
#define _INTCON_INT0IE_MASK                                 0x10
#define _INTCON_TMR0IE_POSN                                 0x5
#define _INTCON_TMR0IE_POSITION                             0x5
#define _INTCON_TMR0IE_SIZE                                 0x1
#define _INTCON_TMR0IE_LENGTH                               0x1
#define _INTCON_TMR0IE_MASK                                 0x20
#define _INTCON_PEIE_GIEL_POSN                              0x6
#define _INTCON_PEIE_GIEL_POSITION                          0x6
#define _INTCON_PEIE_GIEL_SIZE                              0x1
#define _INTCON_PEIE_GIEL_LENGTH                            0x1
#define _INTCON_PEIE_GIEL_MASK                              0x40
#define _INTCON_GIE_GIEH_POSN                               0x7
#define _INTCON_GIE_GIEH_POSITION                           0x7
#define _INTCON_GIE_GIEH_SIZE                               0x1
#define _INTCON_GIE_GIEH_LENGTH                             0x1
#define _INTCON_GIE_GIEH_MASK                               0x80
#define _INTCON_INT0F_POSN                                  0x1
#define _INTCON_INT0F_POSITION                              0x1
#define _INTCON_INT0F_SIZE                                  0x1
#define _INTCON_INT0F_LENGTH                                0x1
#define _INTCON_INT0F_MASK                                  0x2
#define _INTCON_T0IF_POSN                                   0x2
#define _INTCON_T0IF_POSITION                               0x2
#define _INTCON_T0IF_SIZE                                   0x1
#define _INTCON_T0IF_LENGTH                                 0x1
#define _INTCON_T0IF_MASK                                   0x4
#define _INTCON_INT0E_POSN                                  0x4
#define _INTCON_INT0E_POSITION                              0x4
#define _INTCON_INT0E_SIZE                                  0x1
#define _INTCON_INT0E_LENGTH                                0x1
#define _INTCON_INT0E_MASK                                  0x10
#define _INTCON_T0IE_POSN                                   0x5
#define _INTCON_T0IE_POSITION                               0x5
#define _INTCON_T0IE_SIZE                                   0x1
#define _INTCON_T0IE_LENGTH                                 0x1
#define _INTCON_T0IE_MASK                                   0x20
#define _INTCON_PEIE_POSN                                   0x6
#define _INTCON_PEIE_POSITION                               0x6
#define _INTCON_PEIE_SIZE                                   0x1
#define _INTCON_PEIE_LENGTH                                 0x1
#define _INTCON_PEIE_MASK                                   0x40
#define _INTCON_GIE_POSN                                    0x7
#define _INTCON_GIE_POSITION                                0x7
#define _INTCON_GIE_SIZE                                    0x1
#define _INTCON_GIE_LENGTH                                  0x1
#define _INTCON_GIE_MASK                                    0x80
#define _INTCON_GIEL_POSN                                   0x6
#define _INTCON_GIEL_POSITION                               0x6
#define _INTCON_GIEL_SIZE                                   0x1
#define _INTCON_GIEL_LENGTH                                 0x1
#define _INTCON_GIEL_MASK                                   0x40
#define _INTCON_GIEH_POSN                                   0x7
#define _INTCON_GIEH_POSITION                               0x7
#define _INTCON_GIEH_SIZE                                   0x1
#define _INTCON_GIEH_LENGTH                                 0x1
#define _INTCON_GIEH_MASK                                   0x80

// Register: PROD
#define PROD PROD
extern volatile unsigned short          PROD                __at(0xFF3);
#ifndef _LIB_BUILD
asm("PROD equ 0FF3h");
#endif

// Register: PRODL
#define PRODL PRODL
extern volatile unsigned char           PRODL               __at(0xFF3);
#ifndef _LIB_BUILD
asm("PRODL equ 0FF3h");
#endif

// Register: PRODH
#define PRODH PRODH
extern volatile unsigned char           PRODH               __at(0xFF4);
#ifndef _LIB_BUILD
asm("PRODH equ 0FF4h");
#endif

// Register: TABLAT
#define TABLAT TABLAT
extern volatile unsigned char           TABLAT              __at(0xFF5);
#ifndef _LIB_BUILD
asm("TABLAT equ 0FF5h");
#endif

// Register: TBLPTR
#define TBLPTR TBLPTR
#ifndef __CCI__
extern volatile __uint24                TBLPTR              __at(0xFF6);
#endif
#ifndef _LIB_BUILD
asm("TBLPTR equ 0FF6h");
#endif

// Register: TBLPTRL
#define TBLPTRL TBLPTRL
extern volatile unsigned char           TBLPTRL             __at(0xFF6);
#ifndef _LIB_BUILD
asm("TBLPTRL equ 0FF6h");
#endif

// Register: TBLPTRH
#define TBLPTRH TBLPTRH
extern volatile unsigned char           TBLPTRH             __at(0xFF7);
#ifndef _LIB_BUILD
asm("TBLPTRH equ 0FF7h");
#endif

// Register: TBLPTRU
#define TBLPTRU TBLPTRU
extern volatile unsigned char           TBLPTRU             __at(0xFF8);
#ifndef _LIB_BUILD
asm("TBLPTRU equ 0FF8h");
#endif

// Register: PCLAT
#define PCLAT PCLAT
#ifndef __CCI__
extern volatile __uint24                PCLAT               __at(0xFF9);
#endif
#ifndef _LIB_BUILD
asm("PCLAT equ 0FF9h");
#endif
// aliases
#ifndef __CCI__
extern volatile __uint24                PC                  __at(0xFF9);
#endif
#ifndef _LIB_BUILD
asm("PC equ 0FF9h");
#endif

// Register: PCL
#define PCL PCL
extern volatile unsigned char           PCL                 __at(0xFF9);
#ifndef _LIB_BUILD
asm("PCL equ 0FF9h");
#endif

// Register: PCLATH
#define PCLATH PCLATH
extern volatile unsigned char           PCLATH              __at(0xFFA);
#ifndef _LIB_BUILD
asm("PCLATH equ 0FFAh");
#endif

// Register: PCLATU
#define PCLATU PCLATU
extern volatile unsigned char           PCLATU              __at(0xFFB);
#ifndef _LIB_BUILD
asm("PCLATU equ 0FFBh");
#endif

// Register: STKPTR
#define STKPTR STKPTR
extern volatile unsigned char           STKPTR              __at(0xFFC);
#ifndef _LIB_BUILD
asm("STKPTR equ 0FFCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STKPTR                 :5;
        unsigned                        :1;
        unsigned STKUNF                 :1;
        unsigned STKFUL                 :1;
    };
    struct {
        unsigned STKPTR0                :1;
        unsigned STKPTR1                :1;
        unsigned STKPTR2                :1;
        unsigned STKPTR3                :1;
        unsigned STKPTR4                :1;
        unsigned                        :2;
        unsigned STKOVF                 :1;
    };
} STKPTRbits_t;
extern volatile STKPTRbits_t STKPTRbits __at(0xFFC);
// bitfield macros
#define _STKPTR_STKPTR_POSN                                 0x0
#define _STKPTR_STKPTR_POSITION                             0x0
#define _STKPTR_STKPTR_SIZE                                 0x5
#define _STKPTR_STKPTR_LENGTH                               0x5
#define _STKPTR_STKPTR_MASK                                 0x1F
#define _STKPTR_STKUNF_POSN                                 0x6
#define _STKPTR_STKUNF_POSITION                             0x6
#define _STKPTR_STKUNF_SIZE                                 0x1
#define _STKPTR_STKUNF_LENGTH                               0x1
#define _STKPTR_STKUNF_MASK                                 0x40
#define _STKPTR_STKFUL_POSN                                 0x7
#define _STKPTR_STKFUL_POSITION                             0x7
#define _STKPTR_STKFUL_SIZE                                 0x1
#define _STKPTR_STKFUL_LENGTH                               0x1
#define _STKPTR_STKFUL_MASK                                 0x80
#define _STKPTR_STKPTR0_POSN                                0x0
#define _STKPTR_STKPTR0_POSITION                            0x0
#define _STKPTR_STKPTR0_SIZE                                0x1
#define _STKPTR_STKPTR0_LENGTH                              0x1
#define _STKPTR_STKPTR0_MASK                                0x1
#define _STKPTR_STKPTR1_POSN                                0x1
#define _STKPTR_STKPTR1_POSITION                            0x1
#define _STKPTR_STKPTR1_SIZE                                0x1
#define _STKPTR_STKPTR1_LENGTH                              0x1
#define _STKPTR_STKPTR1_MASK                                0x2
#define _STKPTR_STKPTR2_POSN                                0x2
#define _STKPTR_STKPTR2_POSITION                            0x2
#define _STKPTR_STKPTR2_SIZE                                0x1
#define _STKPTR_STKPTR2_LENGTH                              0x1
#define _STKPTR_STKPTR2_MASK                                0x4
#define _STKPTR_STKPTR3_POSN                                0x3
#define _STKPTR_STKPTR3_POSITION                            0x3
#define _STKPTR_STKPTR3_SIZE                                0x1
#define _STKPTR_STKPTR3_LENGTH                              0x1
#define _STKPTR_STKPTR3_MASK                                0x8
#define _STKPTR_STKPTR4_POSN                                0x4
#define _STKPTR_STKPTR4_POSITION                            0x4
#define _STKPTR_STKPTR4_SIZE                                0x1
#define _STKPTR_STKPTR4_LENGTH                              0x1
#define _STKPTR_STKPTR4_MASK                                0x10
#define _STKPTR_STKOVF_POSN                                 0x7
#define _STKPTR_STKOVF_POSITION                             0x7
#define _STKPTR_STKOVF_SIZE                                 0x1
#define _STKPTR_STKOVF_LENGTH                               0x1
#define _STKPTR_STKOVF_MASK                                 0x80

// Register: TOS
#define TOS TOS
#ifndef __CCI__
extern volatile __uint24                TOS                 __at(0xFFD);
#endif
#ifndef _LIB_BUILD
asm("TOS equ 0FFDh");
#endif

// Register: TOSL
#define TOSL TOSL
extern volatile unsigned char           TOSL                __at(0xFFD);
#ifndef _LIB_BUILD
asm("TOSL equ 0FFDh");
#endif

// Register: TOSH
#define TOSH TOSH
extern volatile unsigned char           TOSH                __at(0xFFE);
#ifndef _LIB_BUILD
asm("TOSH equ 0FFEh");
#endif

// Register: TOSU
#define TOSU TOSU
extern volatile unsigned char           TOSU                __at(0xFFF);
#ifndef _LIB_BUILD
asm("TOSU equ 0FFFh");
#endif

/*
 * Bit Definitions
 */
#define _DEPRECATED __attribute__((__deprecated__))
#ifndef BANKMASK
#define BANKMASK(addr) ((addr)&0FFh)
#endif
#define _BIT_ACCESS(r,b) ___mkstr(BANKMASK(r)) "," ___mkstr(b)
#ifndef PAGEMASK
#define PAGEMASK(addr) ((addr)&0FFFFFh)
#endif
// BAUDCON<ABDEN>
extern volatile __bit                   ABDEN               __at(0x7BF0);	// @ (0xF7E * 8 + 0)
#define                                 ABDEN_bit           _BIT_ACCESS(BAUDCON,0)
// SSPCON2<ACKDT>
extern volatile __bit                   ACKDT               __at(0x7E2D);	// @ (0xFC5 * 8 + 5)
#define                                 ACKDT_bit           _BIT_ACCESS(SSPCON2,5)
// SSPCON2<ACKEN>
extern volatile __bit                   ACKEN               __at(0x7E2C);	// @ (0xFC5 * 8 + 4)
#define                                 ACKEN_bit           _BIT_ACCESS(SSPCON2,4)
// SSPCON2<ACKSTAT>
extern volatile __bit                   ACKSTAT             __at(0x7E2E);	// @ (0xFC5 * 8 + 6)
#define                                 ACKSTAT_bit         _BIT_ACCESS(SSPCON2,6)
// ADCON2<ACQT0>
extern volatile __bit                   ACQT0               __at(0x7E03);	// @ (0xFC0 * 8 + 3)
#define                                 ACQT0_bit           _BIT_ACCESS(ADCON2,3)
// ADCON2<ACQT1>
extern volatile __bit                   ACQT1               __at(0x7E04);	// @ (0xFC0 * 8 + 4)
#define                                 ACQT1_bit           _BIT_ACCESS(ADCON2,4)
// ADCON2<ACQT2>
extern volatile __bit                   ACQT2               __at(0x7E05);	// @ (0xFC0 * 8 + 5)
#define                                 ACQT2_bit           _BIT_ACCESS(ADCON2,5)
// ADCON2<ADCS0>
extern volatile __bit                   ADCS0               __at(0x7E00);	// @ (0xFC0 * 8 + 0)
#define                                 ADCS0_bit           _BIT_ACCESS(ADCON2,0)
// ADCON2<ADCS1>
extern volatile __bit                   ADCS1               __at(0x7E01);	// @ (0xFC0 * 8 + 1)
#define                                 ADCS1_bit           _BIT_ACCESS(ADCON2,1)
// ADCON2<ADCS2>
extern volatile __bit                   ADCS2               __at(0x7E02);	// @ (0xFC0 * 8 + 2)
#define                                 ADCS2_bit           _BIT_ACCESS(ADCON2,2)
// RCSTA<ADDEN>
extern volatile __bit                   ADDEN               __at(0x7D5B);	// @ (0xFAB * 8 + 3)
#define                                 ADDEN_bit           _BIT_ACCESS(RCSTA,3)
// RCSTA<ADDEN1>
extern volatile __bit                   ADDEN1              __at(0x7D5B);	// @ (0xFAB * 8 + 3)
#define                                 ADDEN1_bit          _BIT_ACCESS(RCSTA,3)
// RCSTA<ADEN>
extern volatile __bit                   ADEN                __at(0x7D5B);	// @ (0xFAB * 8 + 3)
#define                                 ADEN_bit            _BIT_ACCESS(RCSTA,3)
// ADCON2<ADFM>
extern volatile __bit                   ADFM                __at(0x7E07);	// @ (0xFC0 * 8 + 7)
#define                                 ADFM_bit            _BIT_ACCESS(ADCON2,7)
// PIE1<ADIE>
extern volatile __bit                   ADIE                __at(0x7CEE);	// @ (0xF9D * 8 + 6)
#define                                 ADIE_bit            _BIT_ACCESS(PIE1,6)
// PIR1<ADIF>
extern volatile __bit                   ADIF                __at(0x7CF6);	// @ (0xF9E * 8 + 6)
#define                                 ADIF_bit            _BIT_ACCESS(PIR1,6)
// IPR1<ADIP>
extern volatile __bit                   ADIP                __at(0x7CFE);	// @ (0xF9F * 8 + 6)
#define                                 ADIP_bit            _BIT_ACCESS(IPR1,6)
// ADCON0<ADON>
extern volatile __bit                   ADON                __at(0x7E10);	// @ (0xFC2 * 8 + 0)
#define                                 ADON_bit            _BIT_ACCESS(ADCON0,0)
// PORTA<AN0>
extern volatile __bit                   AN0                 __at(0x7C00);	// @ (0xF80 * 8 + 0)
#define                                 AN0_bit             _BIT_ACCESS(PORTA,0)
// PORTA<AN1>
extern volatile __bit                   AN1                 __at(0x7C01);	// @ (0xF80 * 8 + 1)
#define                                 AN1_bit             _BIT_ACCESS(PORTA,1)
// PORTF<AN10>
extern volatile __bit                   AN10                __at(0x7C2D);	// @ (0xF85 * 8 + 5)
#define                                 AN10_bit            _BIT_ACCESS(PORTF,5)
// PORTF<AN11>
extern volatile __bit                   AN11                __at(0x7C2E);	// @ (0xF85 * 8 + 6)
#define                                 AN11_bit            _BIT_ACCESS(PORTF,6)
// PORTA<AN2>
extern volatile __bit                   AN2                 __at(0x7C02);	// @ (0xF80 * 8 + 2)
#define                                 AN2_bit             _BIT_ACCESS(PORTA,2)
// PORTA<AN3>
extern volatile __bit                   AN3                 __at(0x7C03);	// @ (0xF80 * 8 + 3)
#define                                 AN3_bit             _BIT_ACCESS(PORTA,3)
// PORTA<AN4>
extern volatile __bit                   AN4                 __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 AN4_bit             _BIT_ACCESS(PORTA,5)
// PORTF<AN5>
extern volatile __bit                   AN5                 __at(0x7C28);	// @ (0xF85 * 8 + 0)
#define                                 AN5_bit             _BIT_ACCESS(PORTF,0)
// PORTF<AN6>
extern volatile __bit                   AN6                 __at(0x7C29);	// @ (0xF85 * 8 + 1)
#define                                 AN6_bit             _BIT_ACCESS(PORTF,1)
// PORTF<AN7>
extern volatile __bit                   AN7                 __at(0x7C2A);	// @ (0xF85 * 8 + 2)
#define                                 AN7_bit             _BIT_ACCESS(PORTF,2)
// PORTF<AN8>
extern volatile __bit                   AN8                 __at(0x7C2B);	// @ (0xF85 * 8 + 3)
#define                                 AN8_bit             _BIT_ACCESS(PORTF,3)
// PORTF<AN9>
extern volatile __bit                   AN9                 __at(0x7C2C);	// @ (0xF85 * 8 + 4)
#define                                 AN9_bit             _BIT_ACCESS(PORTF,4)
// B0D0<B0D00>
extern volatile __bit                   B0D00               __at(0x7130);	// @ (0xE26 * 8 + 0)
#define                                 B0D00_bit           _BIT_ACCESS(B0D0,0)
// B0D0<B0D01>
extern volatile __bit                   B0D01               __at(0x7131);	// @ (0xE26 * 8 + 1)
#define                                 B0D01_bit           _BIT_ACCESS(B0D0,1)
// B0D0<B0D02>
extern volatile __bit                   B0D02               __at(0x7132);	// @ (0xE26 * 8 + 2)
#define                                 B0D02_bit           _BIT_ACCESS(B0D0,2)
// B0D0<B0D03>
extern volatile __bit                   B0D03               __at(0x7133);	// @ (0xE26 * 8 + 3)
#define                                 B0D03_bit           _BIT_ACCESS(B0D0,3)
// B0D0<B0D04>
extern volatile __bit                   B0D04               __at(0x7134);	// @ (0xE26 * 8 + 4)
#define                                 B0D04_bit           _BIT_ACCESS(B0D0,4)
// B0D0<B0D05>
extern volatile __bit                   B0D05               __at(0x7135);	// @ (0xE26 * 8 + 5)
#define                                 B0D05_bit           _BIT_ACCESS(B0D0,5)
// B0D0<B0D06>
extern volatile __bit                   B0D06               __at(0x7136);	// @ (0xE26 * 8 + 6)
#define                                 B0D06_bit           _BIT_ACCESS(B0D0,6)
// B0D0<B0D07>
extern volatile __bit                   B0D07               __at(0x7137);	// @ (0xE26 * 8 + 7)
#define                                 B0D07_bit           _BIT_ACCESS(B0D0,7)
// B0D1<B0D10>
extern volatile __bit                   B0D10               __at(0x7138);	// @ (0xE27 * 8 + 0)
#define                                 B0D10_bit           _BIT_ACCESS(B0D1,0)
// B0D1<B0D11>
extern volatile __bit                   B0D11               __at(0x7139);	// @ (0xE27 * 8 + 1)
#define                                 B0D11_bit           _BIT_ACCESS(B0D1,1)
// B0D1<B0D12>
extern volatile __bit                   B0D12               __at(0x713A);	// @ (0xE27 * 8 + 2)
#define                                 B0D12_bit           _BIT_ACCESS(B0D1,2)
// B0D1<B0D13>
extern volatile __bit                   B0D13               __at(0x713B);	// @ (0xE27 * 8 + 3)
#define                                 B0D13_bit           _BIT_ACCESS(B0D1,3)
// B0D1<B0D14>
extern volatile __bit                   B0D14               __at(0x713C);	// @ (0xE27 * 8 + 4)
#define                                 B0D14_bit           _BIT_ACCESS(B0D1,4)
// B0D1<B0D15>
extern volatile __bit                   B0D15               __at(0x713D);	// @ (0xE27 * 8 + 5)
#define                                 B0D15_bit           _BIT_ACCESS(B0D1,5)
// B0D1<B0D16>
extern volatile __bit                   B0D16               __at(0x713E);	// @ (0xE27 * 8 + 6)
#define                                 B0D16_bit           _BIT_ACCESS(B0D1,6)
// B0D1<B0D17>
extern volatile __bit                   B0D17               __at(0x713F);	// @ (0xE27 * 8 + 7)
#define                                 B0D17_bit           _BIT_ACCESS(B0D1,7)
// B0D2<B0D20>
extern volatile __bit                   B0D20               __at(0x7140);	// @ (0xE28 * 8 + 0)
#define                                 B0D20_bit           _BIT_ACCESS(B0D2,0)
// B0D2<B0D21>
extern volatile __bit                   B0D21               __at(0x7141);	// @ (0xE28 * 8 + 1)
#define                                 B0D21_bit           _BIT_ACCESS(B0D2,1)
// B0D2<B0D22>
extern volatile __bit                   B0D22               __at(0x7142);	// @ (0xE28 * 8 + 2)
#define                                 B0D22_bit           _BIT_ACCESS(B0D2,2)
// B0D2<B0D23>
extern volatile __bit                   B0D23               __at(0x7143);	// @ (0xE28 * 8 + 3)
#define                                 B0D23_bit           _BIT_ACCESS(B0D2,3)
// B0D2<B0D24>
extern volatile __bit                   B0D24               __at(0x7144);	// @ (0xE28 * 8 + 4)
#define                                 B0D24_bit           _BIT_ACCESS(B0D2,4)
// B0D2<B0D25>
extern volatile __bit                   B0D25               __at(0x7145);	// @ (0xE28 * 8 + 5)
#define                                 B0D25_bit           _BIT_ACCESS(B0D2,5)
// B0D2<B0D26>
extern volatile __bit                   B0D26               __at(0x7146);	// @ (0xE28 * 8 + 6)
#define                                 B0D26_bit           _BIT_ACCESS(B0D2,6)
// B0D2<B0D27>
extern volatile __bit                   B0D27               __at(0x7147);	// @ (0xE28 * 8 + 7)
#define                                 B0D27_bit           _BIT_ACCESS(B0D2,7)
// B0D3<B0D30>
extern volatile __bit                   B0D30               __at(0x7148);	// @ (0xE29 * 8 + 0)
#define                                 B0D30_bit           _BIT_ACCESS(B0D3,0)
// B0D3<B0D31>
extern volatile __bit                   B0D31               __at(0x7149);	// @ (0xE29 * 8 + 1)
#define                                 B0D31_bit           _BIT_ACCESS(B0D3,1)
// B0D3<B0D32>
extern volatile __bit                   B0D32               __at(0x714A);	// @ (0xE29 * 8 + 2)
#define                                 B0D32_bit           _BIT_ACCESS(B0D3,2)
// B0D3<B0D33>
extern volatile __bit                   B0D33               __at(0x714B);	// @ (0xE29 * 8 + 3)
#define                                 B0D33_bit           _BIT_ACCESS(B0D3,3)
// B0D3<B0D34>
extern volatile __bit                   B0D34               __at(0x714C);	// @ (0xE29 * 8 + 4)
#define                                 B0D34_bit           _BIT_ACCESS(B0D3,4)
// B0D3<B0D35>
extern volatile __bit                   B0D35               __at(0x714D);	// @ (0xE29 * 8 + 5)
#define                                 B0D35_bit           _BIT_ACCESS(B0D3,5)
// B0D3<B0D36>
extern volatile __bit                   B0D36               __at(0x714E);	// @ (0xE29 * 8 + 6)
#define                                 B0D36_bit           _BIT_ACCESS(B0D3,6)
// B0D3<B0D37>
extern volatile __bit                   B0D37               __at(0x714F);	// @ (0xE29 * 8 + 7)
#define                                 B0D37_bit           _BIT_ACCESS(B0D3,7)
// B0D4<B0D40>
extern volatile __bit                   B0D40               __at(0x7150);	// @ (0xE2A * 8 + 0)
#define                                 B0D40_bit           _BIT_ACCESS(B0D4,0)
// B0D4<B0D41>
extern volatile __bit                   B0D41               __at(0x7151);	// @ (0xE2A * 8 + 1)
#define                                 B0D41_bit           _BIT_ACCESS(B0D4,1)
// B0D4<B0D42>
extern volatile __bit                   B0D42               __at(0x7152);	// @ (0xE2A * 8 + 2)
#define                                 B0D42_bit           _BIT_ACCESS(B0D4,2)
// B0D4<B0D43>
extern volatile __bit                   B0D43               __at(0x7153);	// @ (0xE2A * 8 + 3)
#define                                 B0D43_bit           _BIT_ACCESS(B0D4,3)
// B0D4<B0D44>
extern volatile __bit                   B0D44               __at(0x7154);	// @ (0xE2A * 8 + 4)
#define                                 B0D44_bit           _BIT_ACCESS(B0D4,4)
// B0D4<B0D45>
extern volatile __bit                   B0D45               __at(0x7155);	// @ (0xE2A * 8 + 5)
#define                                 B0D45_bit           _BIT_ACCESS(B0D4,5)
// B0D4<B0D46>
extern volatile __bit                   B0D46               __at(0x7156);	// @ (0xE2A * 8 + 6)
#define                                 B0D46_bit           _BIT_ACCESS(B0D4,6)
// B0D4<B0D47>
extern volatile __bit                   B0D47               __at(0x7157);	// @ (0xE2A * 8 + 7)
#define                                 B0D47_bit           _BIT_ACCESS(B0D4,7)
// B0D5<B0D50>
extern volatile __bit                   B0D50               __at(0x7158);	// @ (0xE2B * 8 + 0)
#define                                 B0D50_bit           _BIT_ACCESS(B0D5,0)
// B0D5<B0D51>
extern volatile __bit                   B0D51               __at(0x7159);	// @ (0xE2B * 8 + 1)
#define                                 B0D51_bit           _BIT_ACCESS(B0D5,1)
// B0D5<B0D52>
extern volatile __bit                   B0D52               __at(0x715A);	// @ (0xE2B * 8 + 2)
#define                                 B0D52_bit           _BIT_ACCESS(B0D5,2)
// B0D5<B0D53>
extern volatile __bit                   B0D53               __at(0x715B);	// @ (0xE2B * 8 + 3)
#define                                 B0D53_bit           _BIT_ACCESS(B0D5,3)
// B0D5<B0D54>
extern volatile __bit                   B0D54               __at(0x715C);	// @ (0xE2B * 8 + 4)
#define                                 B0D54_bit           _BIT_ACCESS(B0D5,4)
// B0D5<B0D55>
extern volatile __bit                   B0D55               __at(0x715D);	// @ (0xE2B * 8 + 5)
#define                                 B0D55_bit           _BIT_ACCESS(B0D5,5)
// B0D5<B0D56>
extern volatile __bit                   B0D56               __at(0x715E);	// @ (0xE2B * 8 + 6)
#define                                 B0D56_bit           _BIT_ACCESS(B0D5,6)
// B0D5<B0D57>
extern volatile __bit                   B0D57               __at(0x715F);	// @ (0xE2B * 8 + 7)
#define                                 B0D57_bit           _BIT_ACCESS(B0D5,7)
// B0D6<B0D60>
extern volatile __bit                   B0D60               __at(0x7160);	// @ (0xE2C * 8 + 0)
#define                                 B0D60_bit           _BIT_ACCESS(B0D6,0)
// B0D6<B0D61>
extern volatile __bit                   B0D61               __at(0x7161);	// @ (0xE2C * 8 + 1)
#define                                 B0D61_bit           _BIT_ACCESS(B0D6,1)
// B0D6<B0D62>
extern volatile __bit                   B0D62               __at(0x7162);	// @ (0xE2C * 8 + 2)
#define                                 B0D62_bit           _BIT_ACCESS(B0D6,2)
// B0D6<B0D63>
extern volatile __bit                   B0D63               __at(0x7163);	// @ (0xE2C * 8 + 3)
#define                                 B0D63_bit           _BIT_ACCESS(B0D6,3)
// B0D6<B0D64>
extern volatile __bit                   B0D64               __at(0x7164);	// @ (0xE2C * 8 + 4)
#define                                 B0D64_bit           _BIT_ACCESS(B0D6,4)
// B0D6<B0D65>
extern volatile __bit                   B0D65               __at(0x7165);	// @ (0xE2C * 8 + 5)
#define                                 B0D65_bit           _BIT_ACCESS(B0D6,5)
// B0D6<B0D66>
extern volatile __bit                   B0D66               __at(0x7166);	// @ (0xE2C * 8 + 6)
#define                                 B0D66_bit           _BIT_ACCESS(B0D6,6)
// B0D6<B0D67>
extern volatile __bit                   B0D67               __at(0x7167);	// @ (0xE2C * 8 + 7)
#define                                 B0D67_bit           _BIT_ACCESS(B0D6,7)
// B0D7<B0D70>
extern volatile __bit                   B0D70               __at(0x7168);	// @ (0xE2D * 8 + 0)
#define                                 B0D70_bit           _BIT_ACCESS(B0D7,0)
// B0D7<B0D71>
extern volatile __bit                   B0D71               __at(0x7169);	// @ (0xE2D * 8 + 1)
#define                                 B0D71_bit           _BIT_ACCESS(B0D7,1)
// B0D7<B0D72>
extern volatile __bit                   B0D72               __at(0x716A);	// @ (0xE2D * 8 + 2)
#define                                 B0D72_bit           _BIT_ACCESS(B0D7,2)
// B0D7<B0D73>
extern volatile __bit                   B0D73               __at(0x716B);	// @ (0xE2D * 8 + 3)
#define                                 B0D73_bit           _BIT_ACCESS(B0D7,3)
// B0D7<B0D74>
extern volatile __bit                   B0D74               __at(0x716C);	// @ (0xE2D * 8 + 4)
#define                                 B0D74_bit           _BIT_ACCESS(B0D7,4)
// B0D7<B0D75>
extern volatile __bit                   B0D75               __at(0x716D);	// @ (0xE2D * 8 + 5)
#define                                 B0D75_bit           _BIT_ACCESS(B0D7,5)
// B0D7<B0D76>
extern volatile __bit                   B0D76               __at(0x716E);	// @ (0xE2D * 8 + 6)
#define                                 B0D76_bit           _BIT_ACCESS(B0D7,6)
// B0D7<B0D77>
extern volatile __bit                   B0D77               __at(0x716F);	// @ (0xE2D * 8 + 7)
#define                                 B0D77_bit           _BIT_ACCESS(B0D7,7)
// B0DLC<B0DLC0>
extern volatile __bit                   B0DLC0              __at(0x7128);	// @ (0xE25 * 8 + 0)
#define                                 B0DLC0_bit          _BIT_ACCESS(B0DLC,0)
// B0DLC<B0DLC1>
extern volatile __bit                   B0DLC1              __at(0x7129);	// @ (0xE25 * 8 + 1)
#define                                 B0DLC1_bit          _BIT_ACCESS(B0DLC,1)
// B0DLC<B0DLC2>
extern volatile __bit                   B0DLC2              __at(0x712A);	// @ (0xE25 * 8 + 2)
#define                                 B0DLC2_bit          _BIT_ACCESS(B0DLC,2)
// B0DLC<B0DLC3>
extern volatile __bit                   B0DLC3              __at(0x712B);	// @ (0xE25 * 8 + 3)
#define                                 B0DLC3_bit          _BIT_ACCESS(B0DLC,3)
// B0EIDL<B0EID0>
extern volatile __bit                   B0EID0              __at(0x7120);	// @ (0xE24 * 8 + 0)
#define                                 B0EID0_bit          _BIT_ACCESS(B0EIDL,0)
// B0EIDL<B0EID1>
extern volatile __bit                   B0EID1              __at(0x7121);	// @ (0xE24 * 8 + 1)
#define                                 B0EID1_bit          _BIT_ACCESS(B0EIDL,1)
// B0EIDH<B0EID10>
extern volatile __bit                   B0EID10             __at(0x711A);	// @ (0xE23 * 8 + 2)
#define                                 B0EID10_bit         _BIT_ACCESS(B0EIDH,2)
// B0EIDH<B0EID11>
extern volatile __bit                   B0EID11             __at(0x711B);	// @ (0xE23 * 8 + 3)
#define                                 B0EID11_bit         _BIT_ACCESS(B0EIDH,3)
// B0EIDH<B0EID12>
extern volatile __bit                   B0EID12             __at(0x711C);	// @ (0xE23 * 8 + 4)
#define                                 B0EID12_bit         _BIT_ACCESS(B0EIDH,4)
// B0EIDH<B0EID13>
extern volatile __bit                   B0EID13             __at(0x711D);	// @ (0xE23 * 8 + 5)
#define                                 B0EID13_bit         _BIT_ACCESS(B0EIDH,5)
// B0EIDH<B0EID14>
extern volatile __bit                   B0EID14             __at(0x711E);	// @ (0xE23 * 8 + 6)
#define                                 B0EID14_bit         _BIT_ACCESS(B0EIDH,6)
// B0EIDH<B0EID15>
extern volatile __bit                   B0EID15             __at(0x711F);	// @ (0xE23 * 8 + 7)
#define                                 B0EID15_bit         _BIT_ACCESS(B0EIDH,7)
// B0SIDL<B0EID16>
extern volatile __bit                   B0EID16             __at(0x7110);	// @ (0xE22 * 8 + 0)
#define                                 B0EID16_bit         _BIT_ACCESS(B0SIDL,0)
// B0SIDL<B0EID17>
extern volatile __bit                   B0EID17             __at(0x7111);	// @ (0xE22 * 8 + 1)
#define                                 B0EID17_bit         _BIT_ACCESS(B0SIDL,1)
// B0EIDL<B0EID2>
extern volatile __bit                   B0EID2              __at(0x7122);	// @ (0xE24 * 8 + 2)
#define                                 B0EID2_bit          _BIT_ACCESS(B0EIDL,2)
// B0EIDL<B0EID3>
extern volatile __bit                   B0EID3              __at(0x7123);	// @ (0xE24 * 8 + 3)
#define                                 B0EID3_bit          _BIT_ACCESS(B0EIDL,3)
// B0EIDL<B0EID4>
extern volatile __bit                   B0EID4              __at(0x7124);	// @ (0xE24 * 8 + 4)
#define                                 B0EID4_bit          _BIT_ACCESS(B0EIDL,4)
// B0EIDL<B0EID5>
extern volatile __bit                   B0EID5              __at(0x7125);	// @ (0xE24 * 8 + 5)
#define                                 B0EID5_bit          _BIT_ACCESS(B0EIDL,5)
// B0EIDL<B0EID6>
extern volatile __bit                   B0EID6              __at(0x7126);	// @ (0xE24 * 8 + 6)
#define                                 B0EID6_bit          _BIT_ACCESS(B0EIDL,6)
// B0EIDL<B0EID7>
extern volatile __bit                   B0EID7              __at(0x7127);	// @ (0xE24 * 8 + 7)
#define                                 B0EID7_bit          _BIT_ACCESS(B0EIDL,7)
// B0EIDH<B0EID8>
extern volatile __bit                   B0EID8              __at(0x7118);	// @ (0xE23 * 8 + 0)
#define                                 B0EID8_bit          _BIT_ACCESS(B0EIDH,0)
// B0EIDH<B0EID9>
extern volatile __bit                   B0EID9              __at(0x7119);	// @ (0xE23 * 8 + 1)
#define                                 B0EID9_bit          _BIT_ACCESS(B0EIDH,1)
// B0SIDL<B0EXID>
extern volatile __bit                   B0EXID              __at(0x7113);	// @ (0xE22 * 8 + 3)
#define                                 B0EXID_bit          _BIT_ACCESS(B0SIDL,3)
// B0CON<B0FILHIT0>
extern volatile __bit                   B0FILHIT0           __at(0x7100);	// @ (0xE20 * 8 + 0)
#define                                 B0FILHIT0_bit       _BIT_ACCESS(B0CON,0)
// B0CON<B0FILHIT1>
extern volatile __bit                   B0FILHIT1           __at(0x7101);	// @ (0xE20 * 8 + 1)
#define                                 B0FILHIT1_bit       _BIT_ACCESS(B0CON,1)
// B0CON<B0FILHIT2>
extern volatile __bit                   B0FILHIT2           __at(0x7102);	// @ (0xE20 * 8 + 2)
#define                                 B0FILHIT2_bit       _BIT_ACCESS(B0CON,2)
// B0CON<B0FILHIT3>
extern volatile __bit                   B0FILHIT3           __at(0x7103);	// @ (0xE20 * 8 + 3)
#define                                 B0FILHIT3_bit       _BIT_ACCESS(B0CON,3)
// B0CON<B0FILHIT4>
extern volatile __bit                   B0FILHIT4           __at(0x7104);	// @ (0xE20 * 8 + 4)
#define                                 B0FILHIT4_bit       _BIT_ACCESS(B0CON,4)
// BIE0<B0IE>
extern volatile __bit                   B0IE                __at(0x6FD2);	// @ (0xDFA * 8 + 2)
#define                                 B0IE_bit            _BIT_ACCESS(BIE0,2)
// B0DLC<B0RB0>
extern volatile __bit                   B0RB0               __at(0x712C);	// @ (0xE25 * 8 + 4)
#define                                 B0RB0_bit           _BIT_ACCESS(B0DLC,4)
// B0DLC<B0RB1>
extern volatile __bit                   B0RB1               __at(0x712D);	// @ (0xE25 * 8 + 5)
#define                                 B0RB1_bit           _BIT_ACCESS(B0DLC,5)
// B0CON<B0RTREN>
extern volatile __bit                   B0RTREN             __at(0x7102);	// @ (0xE20 * 8 + 2)
#define                                 B0RTREN_bit         _BIT_ACCESS(B0CON,2)
// B0CON<B0RTRRO>
extern volatile __bit                   B0RTRRO             __at(0x7105);	// @ (0xE20 * 8 + 5)
#define                                 B0RTRRO_bit         _BIT_ACCESS(B0CON,5)
// B0CON<B0RXFUL>
extern volatile __bit                   B0RXFUL             __at(0x7107);	// @ (0xE20 * 8 + 7)
#define                                 B0RXFUL_bit         _BIT_ACCESS(B0CON,7)
// B0CON<B0RXM1>
extern volatile __bit                   B0RXM1              __at(0x7106);	// @ (0xE20 * 8 + 6)
#define                                 B0RXM1_bit          _BIT_ACCESS(B0CON,6)
// B0DLC<B0RXRTR>
extern volatile __bit                   B0RXRTR             __at(0x712E);	// @ (0xE25 * 8 + 6)
#define                                 B0RXRTR_bit         _BIT_ACCESS(B0DLC,6)
// B0SIDL<B0SID0>
extern volatile __bit                   B0SID0              __at(0x7115);	// @ (0xE22 * 8 + 5)
#define                                 B0SID0_bit          _BIT_ACCESS(B0SIDL,5)
// B0SIDL<B0SID1>
extern volatile __bit                   B0SID1              __at(0x7116);	// @ (0xE22 * 8 + 6)
#define                                 B0SID1_bit          _BIT_ACCESS(B0SIDL,6)
// B0SIDH<B0SID10>
extern volatile __bit                   B0SID10             __at(0x710F);	// @ (0xE21 * 8 + 7)
#define                                 B0SID10_bit         _BIT_ACCESS(B0SIDH,7)
// B0SIDL<B0SID2>
extern volatile __bit                   B0SID2              __at(0x7117);	// @ (0xE22 * 8 + 7)
#define                                 B0SID2_bit          _BIT_ACCESS(B0SIDL,7)
// B0SIDH<B0SID3>
extern volatile __bit                   B0SID3              __at(0x7108);	// @ (0xE21 * 8 + 0)
#define                                 B0SID3_bit          _BIT_ACCESS(B0SIDH,0)
// B0SIDH<B0SID4>
extern volatile __bit                   B0SID4              __at(0x7109);	// @ (0xE21 * 8 + 1)
#define                                 B0SID4_bit          _BIT_ACCESS(B0SIDH,1)
// B0SIDH<B0SID5>
extern volatile __bit                   B0SID5              __at(0x710A);	// @ (0xE21 * 8 + 2)
#define                                 B0SID5_bit          _BIT_ACCESS(B0SIDH,2)
// B0SIDH<B0SID6>
extern volatile __bit                   B0SID6              __at(0x710B);	// @ (0xE21 * 8 + 3)
#define                                 B0SID6_bit          _BIT_ACCESS(B0SIDH,3)
// B0SIDH<B0SID7>
extern volatile __bit                   B0SID7              __at(0x710C);	// @ (0xE21 * 8 + 4)
#define                                 B0SID7_bit          _BIT_ACCESS(B0SIDH,4)
// B0SIDH<B0SID8>
extern volatile __bit                   B0SID8              __at(0x710D);	// @ (0xE21 * 8 + 5)
#define                                 B0SID8_bit          _BIT_ACCESS(B0SIDH,5)
// B0SIDH<B0SID9>
extern volatile __bit                   B0SID9              __at(0x710E);	// @ (0xE21 * 8 + 6)
#define                                 B0SID9_bit          _BIT_ACCESS(B0SIDH,6)
// B0SIDL<B0SRR>
extern volatile __bit                   B0SRR               __at(0x7114);	// @ (0xE22 * 8 + 4)
#define                                 B0SRR_bit           _BIT_ACCESS(B0SIDL,4)
// B0CON<B0TXABT>
extern volatile __bit                   B0TXABT             __at(0x7106);	// @ (0xE20 * 8 + 6)
#define                                 B0TXABT_bit         _BIT_ACCESS(B0CON,6)
// B0CON<B0TXB3IF>
extern volatile __bit                   B0TXB3IF            __at(0x7107);	// @ (0xE20 * 8 + 7)
#define                                 B0TXB3IF_bit        _BIT_ACCESS(B0CON,7)
// BSEL0<B0TXEN>
extern volatile __bit                   B0TXEN              __at(0x6FC2);	// @ (0xDF8 * 8 + 2)
#define                                 B0TXEN_bit          _BIT_ACCESS(BSEL0,2)
// B0CON<B0TXERR>
extern volatile __bit                   B0TXERR             __at(0x7104);	// @ (0xE20 * 8 + 4)
#define                                 B0TXERR_bit         _BIT_ACCESS(B0CON,4)
// B0CON<B0TXLARB>
extern volatile __bit                   B0TXLARB            __at(0x7105);	// @ (0xE20 * 8 + 5)
#define                                 B0TXLARB_bit        _BIT_ACCESS(B0CON,5)
// B0CON<B0TXPRI0>
extern volatile __bit                   B0TXPRI0            __at(0x7100);	// @ (0xE20 * 8 + 0)
#define                                 B0TXPRI0_bit        _BIT_ACCESS(B0CON,0)
// B0CON<B0TXPRI1>
extern volatile __bit                   B0TXPRI1            __at(0x7101);	// @ (0xE20 * 8 + 1)
#define                                 B0TXPRI1_bit        _BIT_ACCESS(B0CON,1)
// B0CON<B0TXREQ>
extern volatile __bit                   B0TXREQ             __at(0x7103);	// @ (0xE20 * 8 + 3)
#define                                 B0TXREQ_bit         _BIT_ACCESS(B0CON,3)
// B1D0<B1D00>
extern volatile __bit                   B1D00               __at(0x71B0);	// @ (0xE36 * 8 + 0)
#define                                 B1D00_bit           _BIT_ACCESS(B1D0,0)
// B1D0<B1D01>
extern volatile __bit                   B1D01               __at(0x71B1);	// @ (0xE36 * 8 + 1)
#define                                 B1D01_bit           _BIT_ACCESS(B1D0,1)
// B1D0<B1D02>
extern volatile __bit                   B1D02               __at(0x71B2);	// @ (0xE36 * 8 + 2)
#define                                 B1D02_bit           _BIT_ACCESS(B1D0,2)
// B1D0<B1D03>
extern volatile __bit                   B1D03               __at(0x71B3);	// @ (0xE36 * 8 + 3)
#define                                 B1D03_bit           _BIT_ACCESS(B1D0,3)
// B1D0<B1D04>
extern volatile __bit                   B1D04               __at(0x71B4);	// @ (0xE36 * 8 + 4)
#define                                 B1D04_bit           _BIT_ACCESS(B1D0,4)
// B1D0<B1D05>
extern volatile __bit                   B1D05               __at(0x71B5);	// @ (0xE36 * 8 + 5)
#define                                 B1D05_bit           _BIT_ACCESS(B1D0,5)
// B1D0<B1D06>
extern volatile __bit                   B1D06               __at(0x71B6);	// @ (0xE36 * 8 + 6)
#define                                 B1D06_bit           _BIT_ACCESS(B1D0,6)
// B1D0<B1D07>
extern volatile __bit                   B1D07               __at(0x71B7);	// @ (0xE36 * 8 + 7)
#define                                 B1D07_bit           _BIT_ACCESS(B1D0,7)
// B1D1<B1D10>
extern volatile __bit                   B1D10               __at(0x71B8);	// @ (0xE37 * 8 + 0)
#define                                 B1D10_bit           _BIT_ACCESS(B1D1,0)
// B1D1<B1D11>
extern volatile __bit                   B1D11               __at(0x71B9);	// @ (0xE37 * 8 + 1)
#define                                 B1D11_bit           _BIT_ACCESS(B1D1,1)
// B1D1<B1D12>
extern volatile __bit                   B1D12               __at(0x71BA);	// @ (0xE37 * 8 + 2)
#define                                 B1D12_bit           _BIT_ACCESS(B1D1,2)
// B1D1<B1D13>
extern volatile __bit                   B1D13               __at(0x71BB);	// @ (0xE37 * 8 + 3)
#define                                 B1D13_bit           _BIT_ACCESS(B1D1,3)
// B1D1<B1D14>
extern volatile __bit                   B1D14               __at(0x71BC);	// @ (0xE37 * 8 + 4)
#define                                 B1D14_bit           _BIT_ACCESS(B1D1,4)
// B1D1<B1D15>
extern volatile __bit                   B1D15               __at(0x71BD);	// @ (0xE37 * 8 + 5)
#define                                 B1D15_bit           _BIT_ACCESS(B1D1,5)
// B1D1<B1D16>
extern volatile __bit                   B1D16               __at(0x71BE);	// @ (0xE37 * 8 + 6)
#define                                 B1D16_bit           _BIT_ACCESS(B1D1,6)
// B1D1<B1D17>
extern volatile __bit                   B1D17               __at(0x71BF);	// @ (0xE37 * 8 + 7)
#define                                 B1D17_bit           _BIT_ACCESS(B1D1,7)
// B1D2<B1D20>
extern volatile __bit                   B1D20               __at(0x71C0);	// @ (0xE38 * 8 + 0)
#define                                 B1D20_bit           _BIT_ACCESS(B1D2,0)
// B1D2<B1D21>
extern volatile __bit                   B1D21               __at(0x71C1);	// @ (0xE38 * 8 + 1)
#define                                 B1D21_bit           _BIT_ACCESS(B1D2,1)
// B1D2<B1D22>
extern volatile __bit                   B1D22               __at(0x71C2);	// @ (0xE38 * 8 + 2)
#define                                 B1D22_bit           _BIT_ACCESS(B1D2,2)
// B1D2<B1D23>
extern volatile __bit                   B1D23               __at(0x71C3);	// @ (0xE38 * 8 + 3)
#define                                 B1D23_bit           _BIT_ACCESS(B1D2,3)
// B1D2<B1D24>
extern volatile __bit                   B1D24               __at(0x71C4);	// @ (0xE38 * 8 + 4)
#define                                 B1D24_bit           _BIT_ACCESS(B1D2,4)
// B1D2<B1D25>
extern volatile __bit                   B1D25               __at(0x71C5);	// @ (0xE38 * 8 + 5)
#define                                 B1D25_bit           _BIT_ACCESS(B1D2,5)
// B1D2<B1D26>
extern volatile __bit                   B1D26               __at(0x71C6);	// @ (0xE38 * 8 + 6)
#define                                 B1D26_bit           _BIT_ACCESS(B1D2,6)
// B1D2<B1D27>
extern volatile __bit                   B1D27               __at(0x71C7);	// @ (0xE38 * 8 + 7)
#define                                 B1D27_bit           _BIT_ACCESS(B1D2,7)
// B1D3<B1D30>
extern volatile __bit                   B1D30               __at(0x71C8);	// @ (0xE39 * 8 + 0)
#define                                 B1D30_bit           _BIT_ACCESS(B1D3,0)
// B1D3<B1D31>
extern volatile __bit                   B1D31               __at(0x71C9);	// @ (0xE39 * 8 + 1)
#define                                 B1D31_bit           _BIT_ACCESS(B1D3,1)
// B1D3<B1D32>
extern volatile __bit                   B1D32               __at(0x71CA);	// @ (0xE39 * 8 + 2)
#define                                 B1D32_bit           _BIT_ACCESS(B1D3,2)
// B1D3<B1D33>
extern volatile __bit                   B1D33               __at(0x71CB);	// @ (0xE39 * 8 + 3)
#define                                 B1D33_bit           _BIT_ACCESS(B1D3,3)
// B1D3<B1D34>
extern volatile __bit                   B1D34               __at(0x71CC);	// @ (0xE39 * 8 + 4)
#define                                 B1D34_bit           _BIT_ACCESS(B1D3,4)
// B1D3<B1D35>
extern volatile __bit                   B1D35               __at(0x71CD);	// @ (0xE39 * 8 + 5)
#define                                 B1D35_bit           _BIT_ACCESS(B1D3,5)
// B1D3<B1D36>
extern volatile __bit                   B1D36               __at(0x71CE);	// @ (0xE39 * 8 + 6)
#define                                 B1D36_bit           _BIT_ACCESS(B1D3,6)
// B1D3<B1D37>
extern volatile __bit                   B1D37               __at(0x71CF);	// @ (0xE39 * 8 + 7)
#define                                 B1D37_bit           _BIT_ACCESS(B1D3,7)
// B1D4<B1D40>
extern volatile __bit                   B1D40               __at(0x71D0);	// @ (0xE3A * 8 + 0)
#define                                 B1D40_bit           _BIT_ACCESS(B1D4,0)
// B1D4<B1D41>
extern volatile __bit                   B1D41               __at(0x71D1);	// @ (0xE3A * 8 + 1)
#define                                 B1D41_bit           _BIT_ACCESS(B1D4,1)
// B1D4<B1D42>
extern volatile __bit                   B1D42               __at(0x71D2);	// @ (0xE3A * 8 + 2)
#define                                 B1D42_bit           _BIT_ACCESS(B1D4,2)
// B1D4<B1D43>
extern volatile __bit                   B1D43               __at(0x71D3);	// @ (0xE3A * 8 + 3)
#define                                 B1D43_bit           _BIT_ACCESS(B1D4,3)
// B1D4<B1D44>
extern volatile __bit                   B1D44               __at(0x71D4);	// @ (0xE3A * 8 + 4)
#define                                 B1D44_bit           _BIT_ACCESS(B1D4,4)
// B1D4<B1D45>
extern volatile __bit                   B1D45               __at(0x71D5);	// @ (0xE3A * 8 + 5)
#define                                 B1D45_bit           _BIT_ACCESS(B1D4,5)
// B1D4<B1D46>
extern volatile __bit                   B1D46               __at(0x71D6);	// @ (0xE3A * 8 + 6)
#define                                 B1D46_bit           _BIT_ACCESS(B1D4,6)
// B1D4<B1D47>
extern volatile __bit                   B1D47               __at(0x71D7);	// @ (0xE3A * 8 + 7)
#define                                 B1D47_bit           _BIT_ACCESS(B1D4,7)
// B1D5<B1D50>
extern volatile __bit                   B1D50               __at(0x71D8);	// @ (0xE3B * 8 + 0)
#define                                 B1D50_bit           _BIT_ACCESS(B1D5,0)
// B1D5<B1D51>
extern volatile __bit                   B1D51               __at(0x71D9);	// @ (0xE3B * 8 + 1)
#define                                 B1D51_bit           _BIT_ACCESS(B1D5,1)
// B1D5<B1D52>
extern volatile __bit                   B1D52               __at(0x71DA);	// @ (0xE3B * 8 + 2)
#define                                 B1D52_bit           _BIT_ACCESS(B1D5,2)
// B1D5<B1D53>
extern volatile __bit                   B1D53               __at(0x71DB);	// @ (0xE3B * 8 + 3)
#define                                 B1D53_bit           _BIT_ACCESS(B1D5,3)
// B1D5<B1D54>
extern volatile __bit                   B1D54               __at(0x71DC);	// @ (0xE3B * 8 + 4)
#define                                 B1D54_bit           _BIT_ACCESS(B1D5,4)
// B1D5<B1D55>
extern volatile __bit                   B1D55               __at(0x71DD);	// @ (0xE3B * 8 + 5)
#define                                 B1D55_bit           _BIT_ACCESS(B1D5,5)
// B1D5<B1D56>
extern volatile __bit                   B1D56               __at(0x71DE);	// @ (0xE3B * 8 + 6)
#define                                 B1D56_bit           _BIT_ACCESS(B1D5,6)
// B1D5<B1D57>
extern volatile __bit                   B1D57               __at(0x71DF);	// @ (0xE3B * 8 + 7)
#define                                 B1D57_bit           _BIT_ACCESS(B1D5,7)
// B1D6<B1D60>
extern volatile __bit                   B1D60               __at(0x71E0);	// @ (0xE3C * 8 + 0)
#define                                 B1D60_bit           _BIT_ACCESS(B1D6,0)
// B1D6<B1D61>
extern volatile __bit                   B1D61               __at(0x71E1);	// @ (0xE3C * 8 + 1)
#define                                 B1D61_bit           _BIT_ACCESS(B1D6,1)
// B1D6<B1D62>
extern volatile __bit                   B1D62               __at(0x71E2);	// @ (0xE3C * 8 + 2)
#define                                 B1D62_bit           _BIT_ACCESS(B1D6,2)
// B1D6<B1D63>
extern volatile __bit                   B1D63               __at(0x71E3);	// @ (0xE3C * 8 + 3)
#define                                 B1D63_bit           _BIT_ACCESS(B1D6,3)
// B1D6<B1D64>
extern volatile __bit                   B1D64               __at(0x71E4);	// @ (0xE3C * 8 + 4)
#define                                 B1D64_bit           _BIT_ACCESS(B1D6,4)
// B1D6<B1D65>
extern volatile __bit                   B1D65               __at(0x71E5);	// @ (0xE3C * 8 + 5)
#define                                 B1D65_bit           _BIT_ACCESS(B1D6,5)
// B1D6<B1D66>
extern volatile __bit                   B1D66               __at(0x71E6);	// @ (0xE3C * 8 + 6)
#define                                 B1D66_bit           _BIT_ACCESS(B1D6,6)
// B1D6<B1D67>
extern volatile __bit                   B1D67               __at(0x71E7);	// @ (0xE3C * 8 + 7)
#define                                 B1D67_bit           _BIT_ACCESS(B1D6,7)
// B1D7<B1D70>
extern volatile __bit                   B1D70               __at(0x71E8);	// @ (0xE3D * 8 + 0)
#define                                 B1D70_bit           _BIT_ACCESS(B1D7,0)
// B1D7<B1D71>
extern volatile __bit                   B1D71               __at(0x71E9);	// @ (0xE3D * 8 + 1)
#define                                 B1D71_bit           _BIT_ACCESS(B1D7,1)
// B1D7<B1D72>
extern volatile __bit                   B1D72               __at(0x71EA);	// @ (0xE3D * 8 + 2)
#define                                 B1D72_bit           _BIT_ACCESS(B1D7,2)
// B1D7<B1D73>
extern volatile __bit                   B1D73               __at(0x71EB);	// @ (0xE3D * 8 + 3)
#define                                 B1D73_bit           _BIT_ACCESS(B1D7,3)
// B1D7<B1D74>
extern volatile __bit                   B1D74               __at(0x71EC);	// @ (0xE3D * 8 + 4)
#define                                 B1D74_bit           _BIT_ACCESS(B1D7,4)
// B1D7<B1D75>
extern volatile __bit                   B1D75               __at(0x71ED);	// @ (0xE3D * 8 + 5)
#define                                 B1D75_bit           _BIT_ACCESS(B1D7,5)
// B1D7<B1D76>
extern volatile __bit                   B1D76               __at(0x71EE);	// @ (0xE3D * 8 + 6)
#define                                 B1D76_bit           _BIT_ACCESS(B1D7,6)
// B1D7<B1D77>
extern volatile __bit                   B1D77               __at(0x71EF);	// @ (0xE3D * 8 + 7)
#define                                 B1D77_bit           _BIT_ACCESS(B1D7,7)
// B1DLC<B1DLC0>
extern volatile __bit                   B1DLC0              __at(0x71A8);	// @ (0xE35 * 8 + 0)
#define                                 B1DLC0_bit          _BIT_ACCESS(B1DLC,0)
// B1DLC<B1DLC1>
extern volatile __bit                   B1DLC1              __at(0x71A9);	// @ (0xE35 * 8 + 1)
#define                                 B1DLC1_bit          _BIT_ACCESS(B1DLC,1)
// B1DLC<B1DLC2>
extern volatile __bit                   B1DLC2              __at(0x71AA);	// @ (0xE35 * 8 + 2)
#define                                 B1DLC2_bit          _BIT_ACCESS(B1DLC,2)
// B1DLC<B1DLC3>
extern volatile __bit                   B1DLC3              __at(0x71AB);	// @ (0xE35 * 8 + 3)
#define                                 B1DLC3_bit          _BIT_ACCESS(B1DLC,3)
// B1EIDL<B1EID0>
extern volatile __bit                   B1EID0              __at(0x71A0);	// @ (0xE34 * 8 + 0)
#define                                 B1EID0_bit          _BIT_ACCESS(B1EIDL,0)
// B1EIDL<B1EID1>
extern volatile __bit                   B1EID1              __at(0x71A1);	// @ (0xE34 * 8 + 1)
#define                                 B1EID1_bit          _BIT_ACCESS(B1EIDL,1)
// B1EIDH<B1EID10>
extern volatile __bit                   B1EID10             __at(0x719A);	// @ (0xE33 * 8 + 2)
#define                                 B1EID10_bit         _BIT_ACCESS(B1EIDH,2)
// B1EIDH<B1EID11>
extern volatile __bit                   B1EID11             __at(0x719B);	// @ (0xE33 * 8 + 3)
#define                                 B1EID11_bit         _BIT_ACCESS(B1EIDH,3)
// B1EIDH<B1EID12>
extern volatile __bit                   B1EID12             __at(0x719C);	// @ (0xE33 * 8 + 4)
#define                                 B1EID12_bit         _BIT_ACCESS(B1EIDH,4)
// B1EIDH<B1EID13>
extern volatile __bit                   B1EID13             __at(0x719D);	// @ (0xE33 * 8 + 5)
#define                                 B1EID13_bit         _BIT_ACCESS(B1EIDH,5)
// B1EIDH<B1EID14>
extern volatile __bit                   B1EID14             __at(0x719E);	// @ (0xE33 * 8 + 6)
#define                                 B1EID14_bit         _BIT_ACCESS(B1EIDH,6)
// B1EIDH<B1EID15>
extern volatile __bit                   B1EID15             __at(0x719F);	// @ (0xE33 * 8 + 7)
#define                                 B1EID15_bit         _BIT_ACCESS(B1EIDH,7)
// B1SIDL<B1EID16>
extern volatile __bit                   B1EID16             __at(0x7190);	// @ (0xE32 * 8 + 0)
#define                                 B1EID16_bit         _BIT_ACCESS(B1SIDL,0)
// B1SIDL<B1EID17>
extern volatile __bit                   B1EID17             __at(0x7191);	// @ (0xE32 * 8 + 1)
#define                                 B1EID17_bit         _BIT_ACCESS(B1SIDL,1)
// B1EIDL<B1EID2>
extern volatile __bit                   B1EID2              __at(0x71A2);	// @ (0xE34 * 8 + 2)
#define                                 B1EID2_bit          _BIT_ACCESS(B1EIDL,2)
// B1EIDL<B1EID3>
extern volatile __bit                   B1EID3              __at(0x71A3);	// @ (0xE34 * 8 + 3)
#define                                 B1EID3_bit          _BIT_ACCESS(B1EIDL,3)
// B1EIDL<B1EID4>
extern volatile __bit                   B1EID4              __at(0x71A4);	// @ (0xE34 * 8 + 4)
#define                                 B1EID4_bit          _BIT_ACCESS(B1EIDL,4)
// B1EIDL<B1EID5>
extern volatile __bit                   B1EID5              __at(0x71A5);	// @ (0xE34 * 8 + 5)
#define                                 B1EID5_bit          _BIT_ACCESS(B1EIDL,5)
// B1EIDL<B1EID6>
extern volatile __bit                   B1EID6              __at(0x71A6);	// @ (0xE34 * 8 + 6)
#define                                 B1EID6_bit          _BIT_ACCESS(B1EIDL,6)
// B1EIDL<B1EID7>
extern volatile __bit                   B1EID7              __at(0x71A7);	// @ (0xE34 * 8 + 7)
#define                                 B1EID7_bit          _BIT_ACCESS(B1EIDL,7)
// B1EIDH<B1EID8>
extern volatile __bit                   B1EID8              __at(0x7198);	// @ (0xE33 * 8 + 0)
#define                                 B1EID8_bit          _BIT_ACCESS(B1EIDH,0)
// B1EIDH<B1EID9>
extern volatile __bit                   B1EID9              __at(0x7199);	// @ (0xE33 * 8 + 1)
#define                                 B1EID9_bit          _BIT_ACCESS(B1EIDH,1)
// B1SIDL<B1EXID>
extern volatile __bit                   B1EXID              __at(0x7193);	// @ (0xE32 * 8 + 3)
#define                                 B1EXID_bit          _BIT_ACCESS(B1SIDL,3)
// B1CON<B1FILHIT0>
extern volatile __bit                   B1FILHIT0           __at(0x7180);	// @ (0xE30 * 8 + 0)
#define                                 B1FILHIT0_bit       _BIT_ACCESS(B1CON,0)
// B1CON<B1FILHIT1>
extern volatile __bit                   B1FILHIT1           __at(0x7181);	// @ (0xE30 * 8 + 1)
#define                                 B1FILHIT1_bit       _BIT_ACCESS(B1CON,1)
// B1CON<B1FILHIT2>
extern volatile __bit                   B1FILHIT2           __at(0x7182);	// @ (0xE30 * 8 + 2)
#define                                 B1FILHIT2_bit       _BIT_ACCESS(B1CON,2)
// B1CON<B1FILHIT3>
extern volatile __bit                   B1FILHIT3           __at(0x7183);	// @ (0xE30 * 8 + 3)
#define                                 B1FILHIT3_bit       _BIT_ACCESS(B1CON,3)
// B1CON<B1FILHIT4>
extern volatile __bit                   B1FILHIT4           __at(0x7184);	// @ (0xE30 * 8 + 4)
#define                                 B1FILHIT4_bit       _BIT_ACCESS(B1CON,4)
// BIE0<B1IE>
extern volatile __bit                   B1IE                __at(0x6FD3);	// @ (0xDFA * 8 + 3)
#define                                 B1IE_bit            _BIT_ACCESS(BIE0,3)
// B1DLC<B1RB0>
extern volatile __bit                   B1RB0               __at(0x71AC);	// @ (0xE35 * 8 + 4)
#define                                 B1RB0_bit           _BIT_ACCESS(B1DLC,4)
// B1DLC<B1RB1>
extern volatile __bit                   B1RB1               __at(0x71AD);	// @ (0xE35 * 8 + 5)
#define                                 B1RB1_bit           _BIT_ACCESS(B1DLC,5)
// B1CON<B1RTREN>
extern volatile __bit                   B1RTREN             __at(0x7182);	// @ (0xE30 * 8 + 2)
#define                                 B1RTREN_bit         _BIT_ACCESS(B1CON,2)
// B1CON<B1RTRRO>
extern volatile __bit                   B1RTRRO             __at(0x7185);	// @ (0xE30 * 8 + 5)
#define                                 B1RTRRO_bit         _BIT_ACCESS(B1CON,5)
// B1CON<B1RXFUL>
extern volatile __bit                   B1RXFUL             __at(0x7187);	// @ (0xE30 * 8 + 7)
#define                                 B1RXFUL_bit         _BIT_ACCESS(B1CON,7)
// B1CON<B1RXM1>
extern volatile __bit                   B1RXM1              __at(0x7186);	// @ (0xE30 * 8 + 6)
#define                                 B1RXM1_bit          _BIT_ACCESS(B1CON,6)
// B1DLC<B1RXRTR>
extern volatile __bit                   B1RXRTR             __at(0x71AE);	// @ (0xE35 * 8 + 6)
#define                                 B1RXRTR_bit         _BIT_ACCESS(B1DLC,6)
// B1SIDL<B1SID0>
extern volatile __bit                   B1SID0              __at(0x7195);	// @ (0xE32 * 8 + 5)
#define                                 B1SID0_bit          _BIT_ACCESS(B1SIDL,5)
// B1SIDL<B1SID1>
extern volatile __bit                   B1SID1              __at(0x7196);	// @ (0xE32 * 8 + 6)
#define                                 B1SID1_bit          _BIT_ACCESS(B1SIDL,6)
// B1SIDH<B1SID10>
extern volatile __bit                   B1SID10             __at(0x718F);	// @ (0xE31 * 8 + 7)
#define                                 B1SID10_bit         _BIT_ACCESS(B1SIDH,7)
// B1SIDL<B1SID2>
extern volatile __bit                   B1SID2              __at(0x7197);	// @ (0xE32 * 8 + 7)
#define                                 B1SID2_bit          _BIT_ACCESS(B1SIDL,7)
// B1SIDH<B1SID3>
extern volatile __bit                   B1SID3              __at(0x7188);	// @ (0xE31 * 8 + 0)
#define                                 B1SID3_bit          _BIT_ACCESS(B1SIDH,0)
// B1SIDH<B1SID4>
extern volatile __bit                   B1SID4              __at(0x7189);	// @ (0xE31 * 8 + 1)
#define                                 B1SID4_bit          _BIT_ACCESS(B1SIDH,1)
// B1SIDH<B1SID5>
extern volatile __bit                   B1SID5              __at(0x718A);	// @ (0xE31 * 8 + 2)
#define                                 B1SID5_bit          _BIT_ACCESS(B1SIDH,2)
// B1SIDH<B1SID6>
extern volatile __bit                   B1SID6              __at(0x718B);	// @ (0xE31 * 8 + 3)
#define                                 B1SID6_bit          _BIT_ACCESS(B1SIDH,3)
// B1SIDH<B1SID7>
extern volatile __bit                   B1SID7              __at(0x718C);	// @ (0xE31 * 8 + 4)
#define                                 B1SID7_bit          _BIT_ACCESS(B1SIDH,4)
// B1SIDH<B1SID8>
extern volatile __bit                   B1SID8              __at(0x718D);	// @ (0xE31 * 8 + 5)
#define                                 B1SID8_bit          _BIT_ACCESS(B1SIDH,5)
// B1SIDH<B1SID9>
extern volatile __bit                   B1SID9              __at(0x718E);	// @ (0xE31 * 8 + 6)
#define                                 B1SID9_bit          _BIT_ACCESS(B1SIDH,6)
// B1SIDL<B1SRR>
extern volatile __bit                   B1SRR               __at(0x7194);	// @ (0xE32 * 8 + 4)
#define                                 B1SRR_bit           _BIT_ACCESS(B1SIDL,4)
// B1CON<B1TXABT>
extern volatile __bit                   B1TXABT             __at(0x7186);	// @ (0xE30 * 8 + 6)
#define                                 B1TXABT_bit         _BIT_ACCESS(B1CON,6)
// B1CON<B1TXB3IF>
extern volatile __bit                   B1TXB3IF            __at(0x7187);	// @ (0xE30 * 8 + 7)
#define                                 B1TXB3IF_bit        _BIT_ACCESS(B1CON,7)
// BSEL0<B1TXEN>
extern volatile __bit                   B1TXEN              __at(0x6FC3);	// @ (0xDF8 * 8 + 3)
#define                                 B1TXEN_bit          _BIT_ACCESS(BSEL0,3)
// B1CON<B1TXERR>
extern volatile __bit                   B1TXERR             __at(0x7184);	// @ (0xE30 * 8 + 4)
#define                                 B1TXERR_bit         _BIT_ACCESS(B1CON,4)
// B1CON<B1TXLARB>
extern volatile __bit                   B1TXLARB            __at(0x7185);	// @ (0xE30 * 8 + 5)
#define                                 B1TXLARB_bit        _BIT_ACCESS(B1CON,5)
// B1CON<B1TXPRI0>
extern volatile __bit                   B1TXPRI0            __at(0x7180);	// @ (0xE30 * 8 + 0)
#define                                 B1TXPRI0_bit        _BIT_ACCESS(B1CON,0)
// B1CON<B1TXPRI1>
extern volatile __bit                   B1TXPRI1            __at(0x7181);	// @ (0xE30 * 8 + 1)
#define                                 B1TXPRI1_bit        _BIT_ACCESS(B1CON,1)
// B1CON<B1TXREQ>
extern volatile __bit                   B1TXREQ             __at(0x7183);	// @ (0xE30 * 8 + 3)
#define                                 B1TXREQ_bit         _BIT_ACCESS(B1CON,3)
// B2D0<B2D00>
extern volatile __bit                   B2D00               __at(0x7230);	// @ (0xE46 * 8 + 0)
#define                                 B2D00_bit           _BIT_ACCESS(B2D0,0)
// B2D0<B2D01>
extern volatile __bit                   B2D01               __at(0x7231);	// @ (0xE46 * 8 + 1)
#define                                 B2D01_bit           _BIT_ACCESS(B2D0,1)
// B2D0<B2D02>
extern volatile __bit                   B2D02               __at(0x7232);	// @ (0xE46 * 8 + 2)
#define                                 B2D02_bit           _BIT_ACCESS(B2D0,2)
// B2D0<B2D03>
extern volatile __bit                   B2D03               __at(0x7233);	// @ (0xE46 * 8 + 3)
#define                                 B2D03_bit           _BIT_ACCESS(B2D0,3)
// B2D0<B2D04>
extern volatile __bit                   B2D04               __at(0x7234);	// @ (0xE46 * 8 + 4)
#define                                 B2D04_bit           _BIT_ACCESS(B2D0,4)
// B2D0<B2D05>
extern volatile __bit                   B2D05               __at(0x7235);	// @ (0xE46 * 8 + 5)
#define                                 B2D05_bit           _BIT_ACCESS(B2D0,5)
// B2D0<B2D06>
extern volatile __bit                   B2D06               __at(0x7236);	// @ (0xE46 * 8 + 6)
#define                                 B2D06_bit           _BIT_ACCESS(B2D0,6)
// B2D0<B2D07>
extern volatile __bit                   B2D07               __at(0x7237);	// @ (0xE46 * 8 + 7)
#define                                 B2D07_bit           _BIT_ACCESS(B2D0,7)
// B2D1<B2D10>
extern volatile __bit                   B2D10               __at(0x7238);	// @ (0xE47 * 8 + 0)
#define                                 B2D10_bit           _BIT_ACCESS(B2D1,0)
// B2D1<B2D11>
extern volatile __bit                   B2D11               __at(0x7239);	// @ (0xE47 * 8 + 1)
#define                                 B2D11_bit           _BIT_ACCESS(B2D1,1)
// B2D1<B2D12>
extern volatile __bit                   B2D12               __at(0x723A);	// @ (0xE47 * 8 + 2)
#define                                 B2D12_bit           _BIT_ACCESS(B2D1,2)
// B2D1<B2D13>
extern volatile __bit                   B2D13               __at(0x723B);	// @ (0xE47 * 8 + 3)
#define                                 B2D13_bit           _BIT_ACCESS(B2D1,3)
// B2D1<B2D14>
extern volatile __bit                   B2D14               __at(0x723C);	// @ (0xE47 * 8 + 4)
#define                                 B2D14_bit           _BIT_ACCESS(B2D1,4)
// B2D1<B2D15>
extern volatile __bit                   B2D15               __at(0x723D);	// @ (0xE47 * 8 + 5)
#define                                 B2D15_bit           _BIT_ACCESS(B2D1,5)
// B2D1<B2D16>
extern volatile __bit                   B2D16               __at(0x723E);	// @ (0xE47 * 8 + 6)
#define                                 B2D16_bit           _BIT_ACCESS(B2D1,6)
// B2D1<B2D17>
extern volatile __bit                   B2D17               __at(0x723F);	// @ (0xE47 * 8 + 7)
#define                                 B2D17_bit           _BIT_ACCESS(B2D1,7)
// B2D2<B2D20>
extern volatile __bit                   B2D20               __at(0x7240);	// @ (0xE48 * 8 + 0)
#define                                 B2D20_bit           _BIT_ACCESS(B2D2,0)
// B2D2<B2D21>
extern volatile __bit                   B2D21               __at(0x7241);	// @ (0xE48 * 8 + 1)
#define                                 B2D21_bit           _BIT_ACCESS(B2D2,1)
// B2D2<B2D22>
extern volatile __bit                   B2D22               __at(0x7242);	// @ (0xE48 * 8 + 2)
#define                                 B2D22_bit           _BIT_ACCESS(B2D2,2)
// B2D2<B2D23>
extern volatile __bit                   B2D23               __at(0x7243);	// @ (0xE48 * 8 + 3)
#define                                 B2D23_bit           _BIT_ACCESS(B2D2,3)
// B2D2<B2D24>
extern volatile __bit                   B2D24               __at(0x7244);	// @ (0xE48 * 8 + 4)
#define                                 B2D24_bit           _BIT_ACCESS(B2D2,4)
// B2D2<B2D25>
extern volatile __bit                   B2D25               __at(0x7245);	// @ (0xE48 * 8 + 5)
#define                                 B2D25_bit           _BIT_ACCESS(B2D2,5)
// B2D2<B2D26>
extern volatile __bit                   B2D26               __at(0x7246);	// @ (0xE48 * 8 + 6)
#define                                 B2D26_bit           _BIT_ACCESS(B2D2,6)
// B2D2<B2D27>
extern volatile __bit                   B2D27               __at(0x7247);	// @ (0xE48 * 8 + 7)
#define                                 B2D27_bit           _BIT_ACCESS(B2D2,7)
// B2D3<B2D30>
extern volatile __bit                   B2D30               __at(0x7248);	// @ (0xE49 * 8 + 0)
#define                                 B2D30_bit           _BIT_ACCESS(B2D3,0)
// B2D3<B2D31>
extern volatile __bit                   B2D31               __at(0x7249);	// @ (0xE49 * 8 + 1)
#define                                 B2D31_bit           _BIT_ACCESS(B2D3,1)
// B2D3<B2D32>
extern volatile __bit                   B2D32               __at(0x724A);	// @ (0xE49 * 8 + 2)
#define                                 B2D32_bit           _BIT_ACCESS(B2D3,2)
// B2D3<B2D33>
extern volatile __bit                   B2D33               __at(0x724B);	// @ (0xE49 * 8 + 3)
#define                                 B2D33_bit           _BIT_ACCESS(B2D3,3)
// B2D3<B2D34>
extern volatile __bit                   B2D34               __at(0x724C);	// @ (0xE49 * 8 + 4)
#define                                 B2D34_bit           _BIT_ACCESS(B2D3,4)
// B2D3<B2D35>
extern volatile __bit                   B2D35               __at(0x724D);	// @ (0xE49 * 8 + 5)
#define                                 B2D35_bit           _BIT_ACCESS(B2D3,5)
// B2D3<B2D36>
extern volatile __bit                   B2D36               __at(0x724E);	// @ (0xE49 * 8 + 6)
#define                                 B2D36_bit           _BIT_ACCESS(B2D3,6)
// B2D3<B2D37>
extern volatile __bit                   B2D37               __at(0x724F);	// @ (0xE49 * 8 + 7)
#define                                 B2D37_bit           _BIT_ACCESS(B2D3,7)
// B2D4<B2D40>
extern volatile __bit                   B2D40               __at(0x7250);	// @ (0xE4A * 8 + 0)
#define                                 B2D40_bit           _BIT_ACCESS(B2D4,0)
// B2D4<B2D41>
extern volatile __bit                   B2D41               __at(0x7251);	// @ (0xE4A * 8 + 1)
#define                                 B2D41_bit           _BIT_ACCESS(B2D4,1)
// B2D4<B2D42>
extern volatile __bit                   B2D42               __at(0x7252);	// @ (0xE4A * 8 + 2)
#define                                 B2D42_bit           _BIT_ACCESS(B2D4,2)
// B2D4<B2D43>
extern volatile __bit                   B2D43               __at(0x7253);	// @ (0xE4A * 8 + 3)
#define                                 B2D43_bit           _BIT_ACCESS(B2D4,3)
// B2D4<B2D44>
extern volatile __bit                   B2D44               __at(0x7254);	// @ (0xE4A * 8 + 4)
#define                                 B2D44_bit           _BIT_ACCESS(B2D4,4)
// B2D4<B2D45>
extern volatile __bit                   B2D45               __at(0x7255);	// @ (0xE4A * 8 + 5)
#define                                 B2D45_bit           _BIT_ACCESS(B2D4,5)
// B2D4<B2D46>
extern volatile __bit                   B2D46               __at(0x7256);	// @ (0xE4A * 8 + 6)
#define                                 B2D46_bit           _BIT_ACCESS(B2D4,6)
// B2D4<B2D47>
extern volatile __bit                   B2D47               __at(0x7257);	// @ (0xE4A * 8 + 7)
#define                                 B2D47_bit           _BIT_ACCESS(B2D4,7)
// B2D5<B2D50>
extern volatile __bit                   B2D50               __at(0x7258);	// @ (0xE4B * 8 + 0)
#define                                 B2D50_bit           _BIT_ACCESS(B2D5,0)
// B2D5<B2D51>
extern volatile __bit                   B2D51               __at(0x7259);	// @ (0xE4B * 8 + 1)
#define                                 B2D51_bit           _BIT_ACCESS(B2D5,1)
// B2D5<B2D52>
extern volatile __bit                   B2D52               __at(0x725A);	// @ (0xE4B * 8 + 2)
#define                                 B2D52_bit           _BIT_ACCESS(B2D5,2)
// B2D5<B2D53>
extern volatile __bit                   B2D53               __at(0x725B);	// @ (0xE4B * 8 + 3)
#define                                 B2D53_bit           _BIT_ACCESS(B2D5,3)
// B2D5<B2D54>
extern volatile __bit                   B2D54               __at(0x725C);	// @ (0xE4B * 8 + 4)
#define                                 B2D54_bit           _BIT_ACCESS(B2D5,4)
// B2D5<B2D55>
extern volatile __bit                   B2D55               __at(0x725D);	// @ (0xE4B * 8 + 5)
#define                                 B2D55_bit           _BIT_ACCESS(B2D5,5)
// B2D5<B2D56>
extern volatile __bit                   B2D56               __at(0x725E);	// @ (0xE4B * 8 + 6)
#define                                 B2D56_bit           _BIT_ACCESS(B2D5,6)
// B2D5<B2D57>
extern volatile __bit                   B2D57               __at(0x725F);	// @ (0xE4B * 8 + 7)
#define                                 B2D57_bit           _BIT_ACCESS(B2D5,7)
// B2D6<B2D60>
extern volatile __bit                   B2D60               __at(0x7260);	// @ (0xE4C * 8 + 0)
#define                                 B2D60_bit           _BIT_ACCESS(B2D6,0)
// B2D6<B2D61>
extern volatile __bit                   B2D61               __at(0x7261);	// @ (0xE4C * 8 + 1)
#define                                 B2D61_bit           _BIT_ACCESS(B2D6,1)
// B2D6<B2D62>
extern volatile __bit                   B2D62               __at(0x7262);	// @ (0xE4C * 8 + 2)
#define                                 B2D62_bit           _BIT_ACCESS(B2D6,2)
// B2D6<B2D63>
extern volatile __bit                   B2D63               __at(0x7263);	// @ (0xE4C * 8 + 3)
#define                                 B2D63_bit           _BIT_ACCESS(B2D6,3)
// B2D6<B2D64>
extern volatile __bit                   B2D64               __at(0x7264);	// @ (0xE4C * 8 + 4)
#define                                 B2D64_bit           _BIT_ACCESS(B2D6,4)
// B2D6<B2D65>
extern volatile __bit                   B2D65               __at(0x7265);	// @ (0xE4C * 8 + 5)
#define                                 B2D65_bit           _BIT_ACCESS(B2D6,5)
// B2D6<B2D66>
extern volatile __bit                   B2D66               __at(0x7266);	// @ (0xE4C * 8 + 6)
#define                                 B2D66_bit           _BIT_ACCESS(B2D6,6)
// B2D6<B2D67>
extern volatile __bit                   B2D67               __at(0x7267);	// @ (0xE4C * 8 + 7)
#define                                 B2D67_bit           _BIT_ACCESS(B2D6,7)
// B2D7<B2D70>
extern volatile __bit                   B2D70               __at(0x7268);	// @ (0xE4D * 8 + 0)
#define                                 B2D70_bit           _BIT_ACCESS(B2D7,0)
// B2D7<B2D71>
extern volatile __bit                   B2D71               __at(0x7269);	// @ (0xE4D * 8 + 1)
#define                                 B2D71_bit           _BIT_ACCESS(B2D7,1)
// B2D7<B2D72>
extern volatile __bit                   B2D72               __at(0x726A);	// @ (0xE4D * 8 + 2)
#define                                 B2D72_bit           _BIT_ACCESS(B2D7,2)
// B2D7<B2D73>
extern volatile __bit                   B2D73               __at(0x726B);	// @ (0xE4D * 8 + 3)
#define                                 B2D73_bit           _BIT_ACCESS(B2D7,3)
// B2D7<B2D74>
extern volatile __bit                   B2D74               __at(0x726C);	// @ (0xE4D * 8 + 4)
#define                                 B2D74_bit           _BIT_ACCESS(B2D7,4)
// B2D7<B2D75>
extern volatile __bit                   B2D75               __at(0x726D);	// @ (0xE4D * 8 + 5)
#define                                 B2D75_bit           _BIT_ACCESS(B2D7,5)
// B2D7<B2D76>
extern volatile __bit                   B2D76               __at(0x726E);	// @ (0xE4D * 8 + 6)
#define                                 B2D76_bit           _BIT_ACCESS(B2D7,6)
// B2D7<B2D77>
extern volatile __bit                   B2D77               __at(0x726F);	// @ (0xE4D * 8 + 7)
#define                                 B2D77_bit           _BIT_ACCESS(B2D7,7)
// B2DLC<B2DLC0>
extern volatile __bit                   B2DLC0              __at(0x7228);	// @ (0xE45 * 8 + 0)
#define                                 B2DLC0_bit          _BIT_ACCESS(B2DLC,0)
// B2DLC<B2DLC1>
extern volatile __bit                   B2DLC1              __at(0x7229);	// @ (0xE45 * 8 + 1)
#define                                 B2DLC1_bit          _BIT_ACCESS(B2DLC,1)
// B2DLC<B2DLC2>
extern volatile __bit                   B2DLC2              __at(0x722A);	// @ (0xE45 * 8 + 2)
#define                                 B2DLC2_bit          _BIT_ACCESS(B2DLC,2)
// B2DLC<B2DLC3>
extern volatile __bit                   B2DLC3              __at(0x722B);	// @ (0xE45 * 8 + 3)
#define                                 B2DLC3_bit          _BIT_ACCESS(B2DLC,3)
// B2EIDL<B2EID0>
extern volatile __bit                   B2EID0              __at(0x7220);	// @ (0xE44 * 8 + 0)
#define                                 B2EID0_bit          _BIT_ACCESS(B2EIDL,0)
// B2EIDL<B2EID1>
extern volatile __bit                   B2EID1              __at(0x7221);	// @ (0xE44 * 8 + 1)
#define                                 B2EID1_bit          _BIT_ACCESS(B2EIDL,1)
// B2EIDH<B2EID10>
extern volatile __bit                   B2EID10             __at(0x721A);	// @ (0xE43 * 8 + 2)
#define                                 B2EID10_bit         _BIT_ACCESS(B2EIDH,2)
// B2EIDH<B2EID11>
extern volatile __bit                   B2EID11             __at(0x721B);	// @ (0xE43 * 8 + 3)
#define                                 B2EID11_bit         _BIT_ACCESS(B2EIDH,3)
// B2EIDH<B2EID12>
extern volatile __bit                   B2EID12             __at(0x721C);	// @ (0xE43 * 8 + 4)
#define                                 B2EID12_bit         _BIT_ACCESS(B2EIDH,4)
// B2EIDH<B2EID13>
extern volatile __bit                   B2EID13             __at(0x721D);	// @ (0xE43 * 8 + 5)
#define                                 B2EID13_bit         _BIT_ACCESS(B2EIDH,5)
// B2EIDH<B2EID14>
extern volatile __bit                   B2EID14             __at(0x721E);	// @ (0xE43 * 8 + 6)
#define                                 B2EID14_bit         _BIT_ACCESS(B2EIDH,6)
// B2EIDH<B2EID15>
extern volatile __bit                   B2EID15             __at(0x721F);	// @ (0xE43 * 8 + 7)
#define                                 B2EID15_bit         _BIT_ACCESS(B2EIDH,7)
// B2SIDL<B2EID16>
extern volatile __bit                   B2EID16             __at(0x7210);	// @ (0xE42 * 8 + 0)
#define                                 B2EID16_bit         _BIT_ACCESS(B2SIDL,0)
// B2SIDL<B2EID17>
extern volatile __bit                   B2EID17             __at(0x7211);	// @ (0xE42 * 8 + 1)
#define                                 B2EID17_bit         _BIT_ACCESS(B2SIDL,1)
// B2EIDL<B2EID2>
extern volatile __bit                   B2EID2              __at(0x7222);	// @ (0xE44 * 8 + 2)
#define                                 B2EID2_bit          _BIT_ACCESS(B2EIDL,2)
// B2EIDL<B2EID3>
extern volatile __bit                   B2EID3              __at(0x7223);	// @ (0xE44 * 8 + 3)
#define                                 B2EID3_bit          _BIT_ACCESS(B2EIDL,3)
// B2EIDL<B2EID4>
extern volatile __bit                   B2EID4              __at(0x7224);	// @ (0xE44 * 8 + 4)
#define                                 B2EID4_bit          _BIT_ACCESS(B2EIDL,4)
// B2EIDL<B2EID5>
extern volatile __bit                   B2EID5              __at(0x7225);	// @ (0xE44 * 8 + 5)
#define                                 B2EID5_bit          _BIT_ACCESS(B2EIDL,5)
// B2EIDL<B2EID6>
extern volatile __bit                   B2EID6              __at(0x7226);	// @ (0xE44 * 8 + 6)
#define                                 B2EID6_bit          _BIT_ACCESS(B2EIDL,6)
// B2EIDL<B2EID7>
extern volatile __bit                   B2EID7              __at(0x7227);	// @ (0xE44 * 8 + 7)
#define                                 B2EID7_bit          _BIT_ACCESS(B2EIDL,7)
// B2EIDH<B2EID8>
extern volatile __bit                   B2EID8              __at(0x7218);	// @ (0xE43 * 8 + 0)
#define                                 B2EID8_bit          _BIT_ACCESS(B2EIDH,0)
// B2EIDH<B2EID9>
extern volatile __bit                   B2EID9              __at(0x7219);	// @ (0xE43 * 8 + 1)
#define                                 B2EID9_bit          _BIT_ACCESS(B2EIDH,1)
// B2SIDL<B2EXID>
extern volatile __bit                   B2EXID              __at(0x7213);	// @ (0xE42 * 8 + 3)
#define                                 B2EXID_bit          _BIT_ACCESS(B2SIDL,3)
// B2SIDL<B2EXIDE>
extern volatile __bit                   B2EXIDE             __at(0x7213);	// @ (0xE42 * 8 + 3)
#define                                 B2EXIDE_bit         _BIT_ACCESS(B2SIDL,3)
// B2CON<B2FILHIT0>
extern volatile __bit                   B2FILHIT0           __at(0x7200);	// @ (0xE40 * 8 + 0)
#define                                 B2FILHIT0_bit       _BIT_ACCESS(B2CON,0)
// B2CON<B2FILHIT1>
extern volatile __bit                   B2FILHIT1           __at(0x7201);	// @ (0xE40 * 8 + 1)
#define                                 B2FILHIT1_bit       _BIT_ACCESS(B2CON,1)
// B2CON<B2FILHIT2>
extern volatile __bit                   B2FILHIT2           __at(0x7202);	// @ (0xE40 * 8 + 2)
#define                                 B2FILHIT2_bit       _BIT_ACCESS(B2CON,2)
// B2CON<B2FILHIT3>
extern volatile __bit                   B2FILHIT3           __at(0x7203);	// @ (0xE40 * 8 + 3)
#define                                 B2FILHIT3_bit       _BIT_ACCESS(B2CON,3)
// B2CON<B2FILHIT4>
extern volatile __bit                   B2FILHIT4           __at(0x7204);	// @ (0xE40 * 8 + 4)
#define                                 B2FILHIT4_bit       _BIT_ACCESS(B2CON,4)
// BIE0<B2IE>
extern volatile __bit                   B2IE                __at(0x6FD4);	// @ (0xDFA * 8 + 4)
#define                                 B2IE_bit            _BIT_ACCESS(BIE0,4)
// B2DLC<B2RB0>
extern volatile __bit                   B2RB0               __at(0x722C);	// @ (0xE45 * 8 + 4)
#define                                 B2RB0_bit           _BIT_ACCESS(B2DLC,4)
// B2DLC<B2RB1>
extern volatile __bit                   B2RB1               __at(0x722D);	// @ (0xE45 * 8 + 5)
#define                                 B2RB1_bit           _BIT_ACCESS(B2DLC,5)
// B2CON<B2RTREN>
extern volatile __bit                   B2RTREN             __at(0x7202);	// @ (0xE40 * 8 + 2)
#define                                 B2RTREN_bit         _BIT_ACCESS(B2CON,2)
// B2CON<B2RTRRO>
extern volatile __bit                   B2RTRRO             __at(0x7205);	// @ (0xE40 * 8 + 5)
#define                                 B2RTRRO_bit         _BIT_ACCESS(B2CON,5)
// B2CON<B2RXFUL>
extern volatile __bit                   B2RXFUL             __at(0x7207);	// @ (0xE40 * 8 + 7)
#define                                 B2RXFUL_bit         _BIT_ACCESS(B2CON,7)
// B2CON<B2RXM1>
extern volatile __bit                   B2RXM1              __at(0x7206);	// @ (0xE40 * 8 + 6)
#define                                 B2RXM1_bit          _BIT_ACCESS(B2CON,6)
// B2DLC<B2RXRTR>
extern volatile __bit                   B2RXRTR             __at(0x722E);	// @ (0xE45 * 8 + 6)
#define                                 B2RXRTR_bit         _BIT_ACCESS(B2DLC,6)
// B2SIDL<B2SID0>
extern volatile __bit                   B2SID0              __at(0x7215);	// @ (0xE42 * 8 + 5)
#define                                 B2SID0_bit          _BIT_ACCESS(B2SIDL,5)
// B2SIDL<B2SID1>
extern volatile __bit                   B2SID1              __at(0x7216);	// @ (0xE42 * 8 + 6)
#define                                 B2SID1_bit          _BIT_ACCESS(B2SIDL,6)
// B2SIDH<B2SID10>
extern volatile __bit                   B2SID10             __at(0x720F);	// @ (0xE41 * 8 + 7)
#define                                 B2SID10_bit         _BIT_ACCESS(B2SIDH,7)
// B2SIDL<B2SID2>
extern volatile __bit                   B2SID2              __at(0x7217);	// @ (0xE42 * 8 + 7)
#define                                 B2SID2_bit          _BIT_ACCESS(B2SIDL,7)
// B2SIDH<B2SID3>
extern volatile __bit                   B2SID3              __at(0x7208);	// @ (0xE41 * 8 + 0)
#define                                 B2SID3_bit          _BIT_ACCESS(B2SIDH,0)
// B2SIDH<B2SID4>
extern volatile __bit                   B2SID4              __at(0x7209);	// @ (0xE41 * 8 + 1)
#define                                 B2SID4_bit          _BIT_ACCESS(B2SIDH,1)
// B2SIDH<B2SID5>
extern volatile __bit                   B2SID5              __at(0x720A);	// @ (0xE41 * 8 + 2)
#define                                 B2SID5_bit          _BIT_ACCESS(B2SIDH,2)
// B2SIDH<B2SID6>
extern volatile __bit                   B2SID6              __at(0x720B);	// @ (0xE41 * 8 + 3)
#define                                 B2SID6_bit          _BIT_ACCESS(B2SIDH,3)
// B2SIDH<B2SID7>
extern volatile __bit                   B2SID7              __at(0x720C);	// @ (0xE41 * 8 + 4)
#define                                 B2SID7_bit          _BIT_ACCESS(B2SIDH,4)
// B2SIDH<B2SID8>
extern volatile __bit                   B2SID8              __at(0x720D);	// @ (0xE41 * 8 + 5)
#define                                 B2SID8_bit          _BIT_ACCESS(B2SIDH,5)
// B2SIDH<B2SID9>
extern volatile __bit                   B2SID9              __at(0x720E);	// @ (0xE41 * 8 + 6)
#define                                 B2SID9_bit          _BIT_ACCESS(B2SIDH,6)
// B2SIDL<B2SRR>
extern volatile __bit                   B2SRR               __at(0x7214);	// @ (0xE42 * 8 + 4)
#define                                 B2SRR_bit           _BIT_ACCESS(B2SIDL,4)
// B2CON<B2TXABT>
extern volatile __bit                   B2TXABT             __at(0x7206);	// @ (0xE40 * 8 + 6)
#define                                 B2TXABT_bit         _BIT_ACCESS(B2CON,6)
// B2CON<B2TXB3IF>
extern volatile __bit                   B2TXB3IF            __at(0x7207);	// @ (0xE40 * 8 + 7)
#define                                 B2TXB3IF_bit        _BIT_ACCESS(B2CON,7)
// BSEL0<B2TXEN>
extern volatile __bit                   B2TXEN              __at(0x6FC4);	// @ (0xDF8 * 8 + 4)
#define                                 B2TXEN_bit          _BIT_ACCESS(BSEL0,4)
// B2CON<B2TXERR>
extern volatile __bit                   B2TXERR             __at(0x7204);	// @ (0xE40 * 8 + 4)
#define                                 B2TXERR_bit         _BIT_ACCESS(B2CON,4)
// B2CON<B2TXLARB>
extern volatile __bit                   B2TXLARB            __at(0x7205);	// @ (0xE40 * 8 + 5)
#define                                 B2TXLARB_bit        _BIT_ACCESS(B2CON,5)
// B2CON<B2TXPRI0>
extern volatile __bit                   B2TXPRI0            __at(0x7200);	// @ (0xE40 * 8 + 0)
#define                                 B2TXPRI0_bit        _BIT_ACCESS(B2CON,0)
// B2CON<B2TXPRI1>
extern volatile __bit                   B2TXPRI1            __at(0x7201);	// @ (0xE40 * 8 + 1)
#define                                 B2TXPRI1_bit        _BIT_ACCESS(B2CON,1)
// B2CON<B2TXREQ>
extern volatile __bit                   B2TXREQ             __at(0x7203);	// @ (0xE40 * 8 + 3)
#define                                 B2TXREQ_bit         _BIT_ACCESS(B2CON,3)
// B3D0<B3D00>
extern volatile __bit                   B3D00               __at(0x72B0);	// @ (0xE56 * 8 + 0)
#define                                 B3D00_bit           _BIT_ACCESS(B3D0,0)
// B3D0<B3D01>
extern volatile __bit                   B3D01               __at(0x72B1);	// @ (0xE56 * 8 + 1)
#define                                 B3D01_bit           _BIT_ACCESS(B3D0,1)
// B3D0<B3D02>
extern volatile __bit                   B3D02               __at(0x72B2);	// @ (0xE56 * 8 + 2)
#define                                 B3D02_bit           _BIT_ACCESS(B3D0,2)
// B3D0<B3D03>
extern volatile __bit                   B3D03               __at(0x72B3);	// @ (0xE56 * 8 + 3)
#define                                 B3D03_bit           _BIT_ACCESS(B3D0,3)
// B3D0<B3D04>
extern volatile __bit                   B3D04               __at(0x72B4);	// @ (0xE56 * 8 + 4)
#define                                 B3D04_bit           _BIT_ACCESS(B3D0,4)
// B3D0<B3D05>
extern volatile __bit                   B3D05               __at(0x72B5);	// @ (0xE56 * 8 + 5)
#define                                 B3D05_bit           _BIT_ACCESS(B3D0,5)
// B3D0<B3D06>
extern volatile __bit                   B3D06               __at(0x72B6);	// @ (0xE56 * 8 + 6)
#define                                 B3D06_bit           _BIT_ACCESS(B3D0,6)
// B3D0<B3D07>
extern volatile __bit                   B3D07               __at(0x72B7);	// @ (0xE56 * 8 + 7)
#define                                 B3D07_bit           _BIT_ACCESS(B3D0,7)
// B3D1<B3D10>
extern volatile __bit                   B3D10               __at(0x72B8);	// @ (0xE57 * 8 + 0)
#define                                 B3D10_bit           _BIT_ACCESS(B3D1,0)
// B3D1<B3D11>
extern volatile __bit                   B3D11               __at(0x72B9);	// @ (0xE57 * 8 + 1)
#define                                 B3D11_bit           _BIT_ACCESS(B3D1,1)
// B3D1<B3D12>
extern volatile __bit                   B3D12               __at(0x72BA);	// @ (0xE57 * 8 + 2)
#define                                 B3D12_bit           _BIT_ACCESS(B3D1,2)
// B3D1<B3D13>
extern volatile __bit                   B3D13               __at(0x72BB);	// @ (0xE57 * 8 + 3)
#define                                 B3D13_bit           _BIT_ACCESS(B3D1,3)
// B3D1<B3D14>
extern volatile __bit                   B3D14               __at(0x72BC);	// @ (0xE57 * 8 + 4)
#define                                 B3D14_bit           _BIT_ACCESS(B3D1,4)
// B3D1<B3D15>
extern volatile __bit                   B3D15               __at(0x72BD);	// @ (0xE57 * 8 + 5)
#define                                 B3D15_bit           _BIT_ACCESS(B3D1,5)
// B3D1<B3D16>
extern volatile __bit                   B3D16               __at(0x72BE);	// @ (0xE57 * 8 + 6)
#define                                 B3D16_bit           _BIT_ACCESS(B3D1,6)
// B3D1<B3D17>
extern volatile __bit                   B3D17               __at(0x72BF);	// @ (0xE57 * 8 + 7)
#define                                 B3D17_bit           _BIT_ACCESS(B3D1,7)
// B3D2<B3D20>
extern volatile __bit                   B3D20               __at(0x72C0);	// @ (0xE58 * 8 + 0)
#define                                 B3D20_bit           _BIT_ACCESS(B3D2,0)
// B3D2<B3D21>
extern volatile __bit                   B3D21               __at(0x72C1);	// @ (0xE58 * 8 + 1)
#define                                 B3D21_bit           _BIT_ACCESS(B3D2,1)
// B3D2<B3D22>
extern volatile __bit                   B3D22               __at(0x72C2);	// @ (0xE58 * 8 + 2)
#define                                 B3D22_bit           _BIT_ACCESS(B3D2,2)
// B3D2<B3D23>
extern volatile __bit                   B3D23               __at(0x72C3);	// @ (0xE58 * 8 + 3)
#define                                 B3D23_bit           _BIT_ACCESS(B3D2,3)
// B3D2<B3D24>
extern volatile __bit                   B3D24               __at(0x72C4);	// @ (0xE58 * 8 + 4)
#define                                 B3D24_bit           _BIT_ACCESS(B3D2,4)
// B3D2<B3D25>
extern volatile __bit                   B3D25               __at(0x72C5);	// @ (0xE58 * 8 + 5)
#define                                 B3D25_bit           _BIT_ACCESS(B3D2,5)
// B3D2<B3D26>
extern volatile __bit                   B3D26               __at(0x72C6);	// @ (0xE58 * 8 + 6)
#define                                 B3D26_bit           _BIT_ACCESS(B3D2,6)
// B3D2<B3D27>
extern volatile __bit                   B3D27               __at(0x72C7);	// @ (0xE58 * 8 + 7)
#define                                 B3D27_bit           _BIT_ACCESS(B3D2,7)
// B3D3<B3D30>
extern volatile __bit                   B3D30               __at(0x72C8);	// @ (0xE59 * 8 + 0)
#define                                 B3D30_bit           _BIT_ACCESS(B3D3,0)
// B3D3<B3D31>
extern volatile __bit                   B3D31               __at(0x72C9);	// @ (0xE59 * 8 + 1)
#define                                 B3D31_bit           _BIT_ACCESS(B3D3,1)
// B3D3<B3D32>
extern volatile __bit                   B3D32               __at(0x72CA);	// @ (0xE59 * 8 + 2)
#define                                 B3D32_bit           _BIT_ACCESS(B3D3,2)
// B3D3<B3D33>
extern volatile __bit                   B3D33               __at(0x72CB);	// @ (0xE59 * 8 + 3)
#define                                 B3D33_bit           _BIT_ACCESS(B3D3,3)
// B3D3<B3D34>
extern volatile __bit                   B3D34               __at(0x72CC);	// @ (0xE59 * 8 + 4)
#define                                 B3D34_bit           _BIT_ACCESS(B3D3,4)
// B3D3<B3D35>
extern volatile __bit                   B3D35               __at(0x72CD);	// @ (0xE59 * 8 + 5)
#define                                 B3D35_bit           _BIT_ACCESS(B3D3,5)
// B3D3<B3D36>
extern volatile __bit                   B3D36               __at(0x72CE);	// @ (0xE59 * 8 + 6)
#define                                 B3D36_bit           _BIT_ACCESS(B3D3,6)
// B3D3<B3D37>
extern volatile __bit                   B3D37               __at(0x72CF);	// @ (0xE59 * 8 + 7)
#define                                 B3D37_bit           _BIT_ACCESS(B3D3,7)
// B3D4<B3D40>
extern volatile __bit                   B3D40               __at(0x72D0);	// @ (0xE5A * 8 + 0)
#define                                 B3D40_bit           _BIT_ACCESS(B3D4,0)
// B3D4<B3D41>
extern volatile __bit                   B3D41               __at(0x72D1);	// @ (0xE5A * 8 + 1)
#define                                 B3D41_bit           _BIT_ACCESS(B3D4,1)
// B3D4<B3D42>
extern volatile __bit                   B3D42               __at(0x72D2);	// @ (0xE5A * 8 + 2)
#define                                 B3D42_bit           _BIT_ACCESS(B3D4,2)
// B3D4<B3D43>
extern volatile __bit                   B3D43               __at(0x72D3);	// @ (0xE5A * 8 + 3)
#define                                 B3D43_bit           _BIT_ACCESS(B3D4,3)
// B3D4<B3D44>
extern volatile __bit                   B3D44               __at(0x72D4);	// @ (0xE5A * 8 + 4)
#define                                 B3D44_bit           _BIT_ACCESS(B3D4,4)
// B3D4<B3D45>
extern volatile __bit                   B3D45               __at(0x72D5);	// @ (0xE5A * 8 + 5)
#define                                 B3D45_bit           _BIT_ACCESS(B3D4,5)
// B3D4<B3D46>
extern volatile __bit                   B3D46               __at(0x72D6);	// @ (0xE5A * 8 + 6)
#define                                 B3D46_bit           _BIT_ACCESS(B3D4,6)
// B3D4<B3D47>
extern volatile __bit                   B3D47               __at(0x72D7);	// @ (0xE5A * 8 + 7)
#define                                 B3D47_bit           _BIT_ACCESS(B3D4,7)
// B3D5<B3D50>
extern volatile __bit                   B3D50               __at(0x72D8);	// @ (0xE5B * 8 + 0)
#define                                 B3D50_bit           _BIT_ACCESS(B3D5,0)
// B3D5<B3D51>
extern volatile __bit                   B3D51               __at(0x72D9);	// @ (0xE5B * 8 + 1)
#define                                 B3D51_bit           _BIT_ACCESS(B3D5,1)
// B3D5<B3D52>
extern volatile __bit                   B3D52               __at(0x72DA);	// @ (0xE5B * 8 + 2)
#define                                 B3D52_bit           _BIT_ACCESS(B3D5,2)
// B3D5<B3D53>
extern volatile __bit                   B3D53               __at(0x72DB);	// @ (0xE5B * 8 + 3)
#define                                 B3D53_bit           _BIT_ACCESS(B3D5,3)
// B3D5<B3D54>
extern volatile __bit                   B3D54               __at(0x72DC);	// @ (0xE5B * 8 + 4)
#define                                 B3D54_bit           _BIT_ACCESS(B3D5,4)
// B3D5<B3D55>
extern volatile __bit                   B3D55               __at(0x72DD);	// @ (0xE5B * 8 + 5)
#define                                 B3D55_bit           _BIT_ACCESS(B3D5,5)
// B3D5<B3D56>
extern volatile __bit                   B3D56               __at(0x72DE);	// @ (0xE5B * 8 + 6)
#define                                 B3D56_bit           _BIT_ACCESS(B3D5,6)
// B3D5<B3D57>
extern volatile __bit                   B3D57               __at(0x72DF);	// @ (0xE5B * 8 + 7)
#define                                 B3D57_bit           _BIT_ACCESS(B3D5,7)
// B3D6<B3D60>
extern volatile __bit                   B3D60               __at(0x72E0);	// @ (0xE5C * 8 + 0)
#define                                 B3D60_bit           _BIT_ACCESS(B3D6,0)
// B3D6<B3D61>
extern volatile __bit                   B3D61               __at(0x72E1);	// @ (0xE5C * 8 + 1)
#define                                 B3D61_bit           _BIT_ACCESS(B3D6,1)
// B3D6<B3D62>
extern volatile __bit                   B3D62               __at(0x72E2);	// @ (0xE5C * 8 + 2)
#define                                 B3D62_bit           _BIT_ACCESS(B3D6,2)
// B3D6<B3D63>
extern volatile __bit                   B3D63               __at(0x72E3);	// @ (0xE5C * 8 + 3)
#define                                 B3D63_bit           _BIT_ACCESS(B3D6,3)
// B3D6<B3D64>
extern volatile __bit                   B3D64               __at(0x72E4);	// @ (0xE5C * 8 + 4)
#define                                 B3D64_bit           _BIT_ACCESS(B3D6,4)
// B3D6<B3D65>
extern volatile __bit                   B3D65               __at(0x72E5);	// @ (0xE5C * 8 + 5)
#define                                 B3D65_bit           _BIT_ACCESS(B3D6,5)
// B3D6<B3D66>
extern volatile __bit                   B3D66               __at(0x72E6);	// @ (0xE5C * 8 + 6)
#define                                 B3D66_bit           _BIT_ACCESS(B3D6,6)
// B3D6<B3D67>
extern volatile __bit                   B3D67               __at(0x72E7);	// @ (0xE5C * 8 + 7)
#define                                 B3D67_bit           _BIT_ACCESS(B3D6,7)
// B3D7<B3D70>
extern volatile __bit                   B3D70               __at(0x72E8);	// @ (0xE5D * 8 + 0)
#define                                 B3D70_bit           _BIT_ACCESS(B3D7,0)
// B3D7<B3D71>
extern volatile __bit                   B3D71               __at(0x72E9);	// @ (0xE5D * 8 + 1)
#define                                 B3D71_bit           _BIT_ACCESS(B3D7,1)
// B3D7<B3D72>
extern volatile __bit                   B3D72               __at(0x72EA);	// @ (0xE5D * 8 + 2)
#define                                 B3D72_bit           _BIT_ACCESS(B3D7,2)
// B3D7<B3D73>
extern volatile __bit                   B3D73               __at(0x72EB);	// @ (0xE5D * 8 + 3)
#define                                 B3D73_bit           _BIT_ACCESS(B3D7,3)
// B3D7<B3D74>
extern volatile __bit                   B3D74               __at(0x72EC);	// @ (0xE5D * 8 + 4)
#define                                 B3D74_bit           _BIT_ACCESS(B3D7,4)
// B3D7<B3D75>
extern volatile __bit                   B3D75               __at(0x72ED);	// @ (0xE5D * 8 + 5)
#define                                 B3D75_bit           _BIT_ACCESS(B3D7,5)
// B3D7<B3D76>
extern volatile __bit                   B3D76               __at(0x72EE);	// @ (0xE5D * 8 + 6)
#define                                 B3D76_bit           _BIT_ACCESS(B3D7,6)
// B3D7<B3D77>
extern volatile __bit                   B3D77               __at(0x72EF);	// @ (0xE5D * 8 + 7)
#define                                 B3D77_bit           _BIT_ACCESS(B3D7,7)
// B3DLC<B3DLC0>
extern volatile __bit                   B3DLC0              __at(0x72A8);	// @ (0xE55 * 8 + 0)
#define                                 B3DLC0_bit          _BIT_ACCESS(B3DLC,0)
// B3DLC<B3DLC1>
extern volatile __bit                   B3DLC1              __at(0x72A9);	// @ (0xE55 * 8 + 1)
#define                                 B3DLC1_bit          _BIT_ACCESS(B3DLC,1)
// B3DLC<B3DLC2>
extern volatile __bit                   B3DLC2              __at(0x72AA);	// @ (0xE55 * 8 + 2)
#define                                 B3DLC2_bit          _BIT_ACCESS(B3DLC,2)
// B3DLC<B3DLC3>
extern volatile __bit                   B3DLC3              __at(0x72AB);	// @ (0xE55 * 8 + 3)
#define                                 B3DLC3_bit          _BIT_ACCESS(B3DLC,3)
// B3EIDL<B3EID0>
extern volatile __bit                   B3EID0              __at(0x72A0);	// @ (0xE54 * 8 + 0)
#define                                 B3EID0_bit          _BIT_ACCESS(B3EIDL,0)
// B3EIDL<B3EID1>
extern volatile __bit                   B3EID1              __at(0x72A1);	// @ (0xE54 * 8 + 1)
#define                                 B3EID1_bit          _BIT_ACCESS(B3EIDL,1)
// B3EIDH<B3EID10>
extern volatile __bit                   B3EID10             __at(0x729A);	// @ (0xE53 * 8 + 2)
#define                                 B3EID10_bit         _BIT_ACCESS(B3EIDH,2)
// B3EIDH<B3EID11>
extern volatile __bit                   B3EID11             __at(0x729B);	// @ (0xE53 * 8 + 3)
#define                                 B3EID11_bit         _BIT_ACCESS(B3EIDH,3)
// B3EIDH<B3EID12>
extern volatile __bit                   B3EID12             __at(0x729C);	// @ (0xE53 * 8 + 4)
#define                                 B3EID12_bit         _BIT_ACCESS(B3EIDH,4)
// B3EIDH<B3EID13>
extern volatile __bit                   B3EID13             __at(0x729D);	// @ (0xE53 * 8 + 5)
#define                                 B3EID13_bit         _BIT_ACCESS(B3EIDH,5)
// B3EIDH<B3EID14>
extern volatile __bit                   B3EID14             __at(0x729E);	// @ (0xE53 * 8 + 6)
#define                                 B3EID14_bit         _BIT_ACCESS(B3EIDH,6)
// B3EIDH<B3EID15>
extern volatile __bit                   B3EID15             __at(0x729F);	// @ (0xE53 * 8 + 7)
#define                                 B3EID15_bit         _BIT_ACCESS(B3EIDH,7)
// B3SIDL<B3EID16>
extern volatile __bit                   B3EID16             __at(0x7290);	// @ (0xE52 * 8 + 0)
#define                                 B3EID16_bit         _BIT_ACCESS(B3SIDL,0)
// B3SIDL<B3EID17>
extern volatile __bit                   B3EID17             __at(0x7291);	// @ (0xE52 * 8 + 1)
#define                                 B3EID17_bit         _BIT_ACCESS(B3SIDL,1)
// B3EIDL<B3EID2>
extern volatile __bit                   B3EID2              __at(0x72A2);	// @ (0xE54 * 8 + 2)
#define                                 B3EID2_bit          _BIT_ACCESS(B3EIDL,2)
// B3EIDL<B3EID3>
extern volatile __bit                   B3EID3              __at(0x72A3);	// @ (0xE54 * 8 + 3)
#define                                 B3EID3_bit          _BIT_ACCESS(B3EIDL,3)
// B3EIDL<B3EID4>
extern volatile __bit                   B3EID4              __at(0x72A4);	// @ (0xE54 * 8 + 4)
#define                                 B3EID4_bit          _BIT_ACCESS(B3EIDL,4)
// B3EIDL<B3EID5>
extern volatile __bit                   B3EID5              __at(0x72A5);	// @ (0xE54 * 8 + 5)
#define                                 B3EID5_bit          _BIT_ACCESS(B3EIDL,5)
// B3EIDL<B3EID6>
extern volatile __bit                   B3EID6              __at(0x72A6);	// @ (0xE54 * 8 + 6)
#define                                 B3EID6_bit          _BIT_ACCESS(B3EIDL,6)
// B3EIDL<B3EID7>
extern volatile __bit                   B3EID7              __at(0x72A7);	// @ (0xE54 * 8 + 7)
#define                                 B3EID7_bit          _BIT_ACCESS(B3EIDL,7)
// B3EIDH<B3EID8>
extern volatile __bit                   B3EID8              __at(0x7298);	// @ (0xE53 * 8 + 0)
#define                                 B3EID8_bit          _BIT_ACCESS(B3EIDH,0)
// B3EIDH<B3EID9>
extern volatile __bit                   B3EID9              __at(0x7299);	// @ (0xE53 * 8 + 1)
#define                                 B3EID9_bit          _BIT_ACCESS(B3EIDH,1)
// B3SIDL<B3EXID>
extern volatile __bit                   B3EXID              __at(0x7293);	// @ (0xE52 * 8 + 3)
#define                                 B3EXID_bit          _BIT_ACCESS(B3SIDL,3)
// B3SIDL<B3EXIDE>
extern volatile __bit                   B3EXIDE             __at(0x7293);	// @ (0xE52 * 8 + 3)
#define                                 B3EXIDE_bit         _BIT_ACCESS(B3SIDL,3)
// B3CON<B3FILHIT0>
extern volatile __bit                   B3FILHIT0           __at(0x7280);	// @ (0xE50 * 8 + 0)
#define                                 B3FILHIT0_bit       _BIT_ACCESS(B3CON,0)
// B3CON<B3FILHIT1>
extern volatile __bit                   B3FILHIT1           __at(0x7281);	// @ (0xE50 * 8 + 1)
#define                                 B3FILHIT1_bit       _BIT_ACCESS(B3CON,1)
// B3CON<B3FILHIT2>
extern volatile __bit                   B3FILHIT2           __at(0x7282);	// @ (0xE50 * 8 + 2)
#define                                 B3FILHIT2_bit       _BIT_ACCESS(B3CON,2)
// B3CON<B3FILHIT3>
extern volatile __bit                   B3FILHIT3           __at(0x7283);	// @ (0xE50 * 8 + 3)
#define                                 B3FILHIT3_bit       _BIT_ACCESS(B3CON,3)
// B3CON<B3FILHIT4>
extern volatile __bit                   B3FILHIT4           __at(0x7284);	// @ (0xE50 * 8 + 4)
#define                                 B3FILHIT4_bit       _BIT_ACCESS(B3CON,4)
// BIE0<B3IE>
extern volatile __bit                   B3IE                __at(0x6FD5);	// @ (0xDFA * 8 + 5)
#define                                 B3IE_bit            _BIT_ACCESS(BIE0,5)
// B3DLC<B3RB0>
extern volatile __bit                   B3RB0               __at(0x72AC);	// @ (0xE55 * 8 + 4)
#define                                 B3RB0_bit           _BIT_ACCESS(B3DLC,4)
// B3DLC<B3RB1>
extern volatile __bit                   B3RB1               __at(0x72AD);	// @ (0xE55 * 8 + 5)
#define                                 B3RB1_bit           _BIT_ACCESS(B3DLC,5)
// B3CON<B3RTREN>
extern volatile __bit                   B3RTREN             __at(0x7282);	// @ (0xE50 * 8 + 2)
#define                                 B3RTREN_bit         _BIT_ACCESS(B3CON,2)
// B3CON<B3RTRRO>
extern volatile __bit                   B3RTRRO             __at(0x7285);	// @ (0xE50 * 8 + 5)
#define                                 B3RTRRO_bit         _BIT_ACCESS(B3CON,5)
// B3CON<B3RXFUL>
extern volatile __bit                   B3RXFUL             __at(0x7287);	// @ (0xE50 * 8 + 7)
#define                                 B3RXFUL_bit         _BIT_ACCESS(B3CON,7)
// B3CON<B3RXM1>
extern volatile __bit                   B3RXM1              __at(0x7286);	// @ (0xE50 * 8 + 6)
#define                                 B3RXM1_bit          _BIT_ACCESS(B3CON,6)
// B3DLC<B3RXRTR>
extern volatile __bit                   B3RXRTR             __at(0x72AE);	// @ (0xE55 * 8 + 6)
#define                                 B3RXRTR_bit         _BIT_ACCESS(B3DLC,6)
// B3SIDL<B3SID0>
extern volatile __bit                   B3SID0              __at(0x7295);	// @ (0xE52 * 8 + 5)
#define                                 B3SID0_bit          _BIT_ACCESS(B3SIDL,5)
// B3SIDL<B3SID1>
extern volatile __bit                   B3SID1              __at(0x7296);	// @ (0xE52 * 8 + 6)
#define                                 B3SID1_bit          _BIT_ACCESS(B3SIDL,6)
// B3SIDH<B3SID10>
extern volatile __bit                   B3SID10             __at(0x728F);	// @ (0xE51 * 8 + 7)
#define                                 B3SID10_bit         _BIT_ACCESS(B3SIDH,7)
// B3SIDL<B3SID2>
extern volatile __bit                   B3SID2              __at(0x7297);	// @ (0xE52 * 8 + 7)
#define                                 B3SID2_bit          _BIT_ACCESS(B3SIDL,7)
// B3SIDH<B3SID3>
extern volatile __bit                   B3SID3              __at(0x7288);	// @ (0xE51 * 8 + 0)
#define                                 B3SID3_bit          _BIT_ACCESS(B3SIDH,0)
// B3SIDH<B3SID4>
extern volatile __bit                   B3SID4              __at(0x7289);	// @ (0xE51 * 8 + 1)
#define                                 B3SID4_bit          _BIT_ACCESS(B3SIDH,1)
// B3SIDH<B3SID5>
extern volatile __bit                   B3SID5              __at(0x728A);	// @ (0xE51 * 8 + 2)
#define                                 B3SID5_bit          _BIT_ACCESS(B3SIDH,2)
// B3SIDH<B3SID6>
extern volatile __bit                   B3SID6              __at(0x728B);	// @ (0xE51 * 8 + 3)
#define                                 B3SID6_bit          _BIT_ACCESS(B3SIDH,3)
// B3SIDH<B3SID7>
extern volatile __bit                   B3SID7              __at(0x728C);	// @ (0xE51 * 8 + 4)
#define                                 B3SID7_bit          _BIT_ACCESS(B3SIDH,4)
// B3SIDH<B3SID8>
extern volatile __bit                   B3SID8              __at(0x728D);	// @ (0xE51 * 8 + 5)
#define                                 B3SID8_bit          _BIT_ACCESS(B3SIDH,5)
// B3SIDH<B3SID9>
extern volatile __bit                   B3SID9              __at(0x728E);	// @ (0xE51 * 8 + 6)
#define                                 B3SID9_bit          _BIT_ACCESS(B3SIDH,6)
// B3SIDL<B3SRR>
extern volatile __bit                   B3SRR               __at(0x7294);	// @ (0xE52 * 8 + 4)
#define                                 B3SRR_bit           _BIT_ACCESS(B3SIDL,4)
// B3CON<B3TXABT>
extern volatile __bit                   B3TXABT             __at(0x7286);	// @ (0xE50 * 8 + 6)
#define                                 B3TXABT_bit         _BIT_ACCESS(B3CON,6)
// B3CON<B3TXB3IF>
extern volatile __bit                   B3TXB3IF            __at(0x7287);	// @ (0xE50 * 8 + 7)
#define                                 B3TXB3IF_bit        _BIT_ACCESS(B3CON,7)
// BSEL0<B3TXEN>
extern volatile __bit                   B3TXEN              __at(0x6FC5);	// @ (0xDF8 * 8 + 5)
#define                                 B3TXEN_bit          _BIT_ACCESS(BSEL0,5)
// B3CON<B3TXERR>
extern volatile __bit                   B3TXERR             __at(0x7284);	// @ (0xE50 * 8 + 4)
#define                                 B3TXERR_bit         _BIT_ACCESS(B3CON,4)
// B3CON<B3TXLARB>
extern volatile __bit                   B3TXLARB            __at(0x7285);	// @ (0xE50 * 8 + 5)
#define                                 B3TXLARB_bit        _BIT_ACCESS(B3CON,5)
// B3CON<B3TXPRI0>
extern volatile __bit                   B3TXPRI0            __at(0x7280);	// @ (0xE50 * 8 + 0)
#define                                 B3TXPRI0_bit        _BIT_ACCESS(B3CON,0)
// B3CON<B3TXPRI1>
extern volatile __bit                   B3TXPRI1            __at(0x7281);	// @ (0xE50 * 8 + 1)
#define                                 B3TXPRI1_bit        _BIT_ACCESS(B3CON,1)
// B3CON<B3TXREQ>
extern volatile __bit                   B3TXREQ             __at(0x7283);	// @ (0xE50 * 8 + 3)
#define                                 B3TXREQ_bit         _BIT_ACCESS(B3CON,3)
// B4D7<B46D77>
extern volatile __bit                   B46D77              __at(0x736F);	// @ (0xE6D * 8 + 7)
#define                                 B46D77_bit          _BIT_ACCESS(B4D7,7)
// B4D0<B4D00>
extern volatile __bit                   B4D00               __at(0x7330);	// @ (0xE66 * 8 + 0)
#define                                 B4D00_bit           _BIT_ACCESS(B4D0,0)
// B4D0<B4D01>
extern volatile __bit                   B4D01               __at(0x7331);	// @ (0xE66 * 8 + 1)
#define                                 B4D01_bit           _BIT_ACCESS(B4D0,1)
// B4D0<B4D02>
extern volatile __bit                   B4D02               __at(0x7332);	// @ (0xE66 * 8 + 2)
#define                                 B4D02_bit           _BIT_ACCESS(B4D0,2)
// B4D0<B4D03>
extern volatile __bit                   B4D03               __at(0x7333);	// @ (0xE66 * 8 + 3)
#define                                 B4D03_bit           _BIT_ACCESS(B4D0,3)
// B4D0<B4D04>
extern volatile __bit                   B4D04               __at(0x7334);	// @ (0xE66 * 8 + 4)
#define                                 B4D04_bit           _BIT_ACCESS(B4D0,4)
// B4D0<B4D05>
extern volatile __bit                   B4D05               __at(0x7335);	// @ (0xE66 * 8 + 5)
#define                                 B4D05_bit           _BIT_ACCESS(B4D0,5)
// B4D0<B4D06>
extern volatile __bit                   B4D06               __at(0x7336);	// @ (0xE66 * 8 + 6)
#define                                 B4D06_bit           _BIT_ACCESS(B4D0,6)
// B4D0<B4D07>
extern volatile __bit                   B4D07               __at(0x7337);	// @ (0xE66 * 8 + 7)
#define                                 B4D07_bit           _BIT_ACCESS(B4D0,7)
// B4D1<B4D10>
extern volatile __bit                   B4D10               __at(0x7338);	// @ (0xE67 * 8 + 0)
#define                                 B4D10_bit           _BIT_ACCESS(B4D1,0)
// B4D1<B4D11>
extern volatile __bit                   B4D11               __at(0x7339);	// @ (0xE67 * 8 + 1)
#define                                 B4D11_bit           _BIT_ACCESS(B4D1,1)
// B4D1<B4D12>
extern volatile __bit                   B4D12               __at(0x733A);	// @ (0xE67 * 8 + 2)
#define                                 B4D12_bit           _BIT_ACCESS(B4D1,2)
// B4D1<B4D13>
extern volatile __bit                   B4D13               __at(0x733B);	// @ (0xE67 * 8 + 3)
#define                                 B4D13_bit           _BIT_ACCESS(B4D1,3)
// B4D1<B4D14>
extern volatile __bit                   B4D14               __at(0x733C);	// @ (0xE67 * 8 + 4)
#define                                 B4D14_bit           _BIT_ACCESS(B4D1,4)
// B4D1<B4D15>
extern volatile __bit                   B4D15               __at(0x733D);	// @ (0xE67 * 8 + 5)
#define                                 B4D15_bit           _BIT_ACCESS(B4D1,5)
// B4D1<B4D16>
extern volatile __bit                   B4D16               __at(0x733E);	// @ (0xE67 * 8 + 6)
#define                                 B4D16_bit           _BIT_ACCESS(B4D1,6)
// B4D1<B4D17>
extern volatile __bit                   B4D17               __at(0x733F);	// @ (0xE67 * 8 + 7)
#define                                 B4D17_bit           _BIT_ACCESS(B4D1,7)
// B4D2<B4D20>
extern volatile __bit                   B4D20               __at(0x7340);	// @ (0xE68 * 8 + 0)
#define                                 B4D20_bit           _BIT_ACCESS(B4D2,0)
// B4D2<B4D21>
extern volatile __bit                   B4D21               __at(0x7341);	// @ (0xE68 * 8 + 1)
#define                                 B4D21_bit           _BIT_ACCESS(B4D2,1)
// B4D2<B4D22>
extern volatile __bit                   B4D22               __at(0x7342);	// @ (0xE68 * 8 + 2)
#define                                 B4D22_bit           _BIT_ACCESS(B4D2,2)
// B4D2<B4D23>
extern volatile __bit                   B4D23               __at(0x7343);	// @ (0xE68 * 8 + 3)
#define                                 B4D23_bit           _BIT_ACCESS(B4D2,3)
// B4D2<B4D24>
extern volatile __bit                   B4D24               __at(0x7344);	// @ (0xE68 * 8 + 4)
#define                                 B4D24_bit           _BIT_ACCESS(B4D2,4)
// B4D2<B4D25>
extern volatile __bit                   B4D25               __at(0x7345);	// @ (0xE68 * 8 + 5)
#define                                 B4D25_bit           _BIT_ACCESS(B4D2,5)
// B4D2<B4D26>
extern volatile __bit                   B4D26               __at(0x7346);	// @ (0xE68 * 8 + 6)
#define                                 B4D26_bit           _BIT_ACCESS(B4D2,6)
// B4D2<B4D27>
extern volatile __bit                   B4D27               __at(0x7347);	// @ (0xE68 * 8 + 7)
#define                                 B4D27_bit           _BIT_ACCESS(B4D2,7)
// B4D3<B4D30>
extern volatile __bit                   B4D30               __at(0x7348);	// @ (0xE69 * 8 + 0)
#define                                 B4D30_bit           _BIT_ACCESS(B4D3,0)
// B4D3<B4D31>
extern volatile __bit                   B4D31               __at(0x7349);	// @ (0xE69 * 8 + 1)
#define                                 B4D31_bit           _BIT_ACCESS(B4D3,1)
// B4D3<B4D32>
extern volatile __bit                   B4D32               __at(0x734A);	// @ (0xE69 * 8 + 2)
#define                                 B4D32_bit           _BIT_ACCESS(B4D3,2)
// B4D3<B4D33>
extern volatile __bit                   B4D33               __at(0x734B);	// @ (0xE69 * 8 + 3)
#define                                 B4D33_bit           _BIT_ACCESS(B4D3,3)
// B4D3<B4D34>
extern volatile __bit                   B4D34               __at(0x734C);	// @ (0xE69 * 8 + 4)
#define                                 B4D34_bit           _BIT_ACCESS(B4D3,4)
// B4D3<B4D35>
extern volatile __bit                   B4D35               __at(0x734D);	// @ (0xE69 * 8 + 5)
#define                                 B4D35_bit           _BIT_ACCESS(B4D3,5)
// B4D3<B4D36>
extern volatile __bit                   B4D36               __at(0x734E);	// @ (0xE69 * 8 + 6)
#define                                 B4D36_bit           _BIT_ACCESS(B4D3,6)
// B4D3<B4D37>
extern volatile __bit                   B4D37               __at(0x734F);	// @ (0xE69 * 8 + 7)
#define                                 B4D37_bit           _BIT_ACCESS(B4D3,7)
// B4D4<B4D40>
extern volatile __bit                   B4D40               __at(0x7350);	// @ (0xE6A * 8 + 0)
#define                                 B4D40_bit           _BIT_ACCESS(B4D4,0)
// B4D4<B4D41>
extern volatile __bit                   B4D41               __at(0x7351);	// @ (0xE6A * 8 + 1)
#define                                 B4D41_bit           _BIT_ACCESS(B4D4,1)
// B4D4<B4D42>
extern volatile __bit                   B4D42               __at(0x7352);	// @ (0xE6A * 8 + 2)
#define                                 B4D42_bit           _BIT_ACCESS(B4D4,2)
// B4D4<B4D43>
extern volatile __bit                   B4D43               __at(0x7353);	// @ (0xE6A * 8 + 3)
#define                                 B4D43_bit           _BIT_ACCESS(B4D4,3)
// B4D4<B4D44>
extern volatile __bit                   B4D44               __at(0x7354);	// @ (0xE6A * 8 + 4)
#define                                 B4D44_bit           _BIT_ACCESS(B4D4,4)
// B4D4<B4D45>
extern volatile __bit                   B4D45               __at(0x7355);	// @ (0xE6A * 8 + 5)
#define                                 B4D45_bit           _BIT_ACCESS(B4D4,5)
// B4D4<B4D46>
extern volatile __bit                   B4D46               __at(0x7356);	// @ (0xE6A * 8 + 6)
#define                                 B4D46_bit           _BIT_ACCESS(B4D4,6)
// B4D4<B4D47>
extern volatile __bit                   B4D47               __at(0x7357);	// @ (0xE6A * 8 + 7)
#define                                 B4D47_bit           _BIT_ACCESS(B4D4,7)
// B4D5<B4D50>
extern volatile __bit                   B4D50               __at(0x7358);	// @ (0xE6B * 8 + 0)
#define                                 B4D50_bit           _BIT_ACCESS(B4D5,0)
// B4D5<B4D51>
extern volatile __bit                   B4D51               __at(0x7359);	// @ (0xE6B * 8 + 1)
#define                                 B4D51_bit           _BIT_ACCESS(B4D5,1)
// B4D5<B4D52>
extern volatile __bit                   B4D52               __at(0x735A);	// @ (0xE6B * 8 + 2)
#define                                 B4D52_bit           _BIT_ACCESS(B4D5,2)
// B4D5<B4D53>
extern volatile __bit                   B4D53               __at(0x735B);	// @ (0xE6B * 8 + 3)
#define                                 B4D53_bit           _BIT_ACCESS(B4D5,3)
// B4D5<B4D54>
extern volatile __bit                   B4D54               __at(0x735C);	// @ (0xE6B * 8 + 4)
#define                                 B4D54_bit           _BIT_ACCESS(B4D5,4)
// B4D5<B4D55>
extern volatile __bit                   B4D55               __at(0x735D);	// @ (0xE6B * 8 + 5)
#define                                 B4D55_bit           _BIT_ACCESS(B4D5,5)
// B4D5<B4D56>
extern volatile __bit                   B4D56               __at(0x735E);	// @ (0xE6B * 8 + 6)
#define                                 B4D56_bit           _BIT_ACCESS(B4D5,6)
// B4D5<B4D57>
extern volatile __bit                   B4D57               __at(0x735F);	// @ (0xE6B * 8 + 7)
#define                                 B4D57_bit           _BIT_ACCESS(B4D5,7)
// B4D6<B4D60>
extern volatile __bit                   B4D60               __at(0x7360);	// @ (0xE6C * 8 + 0)
#define                                 B4D60_bit           _BIT_ACCESS(B4D6,0)
// B4D6<B4D61>
extern volatile __bit                   B4D61               __at(0x7361);	// @ (0xE6C * 8 + 1)
#define                                 B4D61_bit           _BIT_ACCESS(B4D6,1)
// B4D6<B4D62>
extern volatile __bit                   B4D62               __at(0x7362);	// @ (0xE6C * 8 + 2)
#define                                 B4D62_bit           _BIT_ACCESS(B4D6,2)
// B4D6<B4D63>
extern volatile __bit                   B4D63               __at(0x7363);	// @ (0xE6C * 8 + 3)
#define                                 B4D63_bit           _BIT_ACCESS(B4D6,3)
// B4D6<B4D64>
extern volatile __bit                   B4D64               __at(0x7364);	// @ (0xE6C * 8 + 4)
#define                                 B4D64_bit           _BIT_ACCESS(B4D6,4)
// B4D6<B4D65>
extern volatile __bit                   B4D65               __at(0x7365);	// @ (0xE6C * 8 + 5)
#define                                 B4D65_bit           _BIT_ACCESS(B4D6,5)
// B4D6<B4D66>
extern volatile __bit                   B4D66               __at(0x7366);	// @ (0xE6C * 8 + 6)
#define                                 B4D66_bit           _BIT_ACCESS(B4D6,6)
// B4D6<B4D67>
extern volatile __bit                   B4D67               __at(0x7367);	// @ (0xE6C * 8 + 7)
#define                                 B4D67_bit           _BIT_ACCESS(B4D6,7)
// B4D7<B4D70>
extern volatile __bit                   B4D70               __at(0x7368);	// @ (0xE6D * 8 + 0)
#define                                 B4D70_bit           _BIT_ACCESS(B4D7,0)
// B4D7<B4D71>
extern volatile __bit                   B4D71               __at(0x7369);	// @ (0xE6D * 8 + 1)
#define                                 B4D71_bit           _BIT_ACCESS(B4D7,1)
// B4D7<B4D72>
extern volatile __bit                   B4D72               __at(0x736A);	// @ (0xE6D * 8 + 2)
#define                                 B4D72_bit           _BIT_ACCESS(B4D7,2)
// B4D7<B4D73>
extern volatile __bit                   B4D73               __at(0x736B);	// @ (0xE6D * 8 + 3)
#define                                 B4D73_bit           _BIT_ACCESS(B4D7,3)
// B4D7<B4D74>
extern volatile __bit                   B4D74               __at(0x736C);	// @ (0xE6D * 8 + 4)
#define                                 B4D74_bit           _BIT_ACCESS(B4D7,4)
// B4D7<B4D75>
extern volatile __bit                   B4D75               __at(0x736D);	// @ (0xE6D * 8 + 5)
#define                                 B4D75_bit           _BIT_ACCESS(B4D7,5)
// B4D7<B4D76>
extern volatile __bit                   B4D76               __at(0x736E);	// @ (0xE6D * 8 + 6)
#define                                 B4D76_bit           _BIT_ACCESS(B4D7,6)
// B4D7<B4D77>
extern volatile __bit                   B4D77               __at(0x736F);	// @ (0xE6D * 8 + 7)
#define                                 B4D77_bit           _BIT_ACCESS(B4D7,7)
// B4DLC<B4DLC0>
extern volatile __bit                   B4DLC0              __at(0x7328);	// @ (0xE65 * 8 + 0)
#define                                 B4DLC0_bit          _BIT_ACCESS(B4DLC,0)
// B4DLC<B4DLC1>
extern volatile __bit                   B4DLC1              __at(0x7329);	// @ (0xE65 * 8 + 1)
#define                                 B4DLC1_bit          _BIT_ACCESS(B4DLC,1)
// B4DLC<B4DLC2>
extern volatile __bit                   B4DLC2              __at(0x732A);	// @ (0xE65 * 8 + 2)
#define                                 B4DLC2_bit          _BIT_ACCESS(B4DLC,2)
// B4DLC<B4DLC3>
extern volatile __bit                   B4DLC3              __at(0x732B);	// @ (0xE65 * 8 + 3)
#define                                 B4DLC3_bit          _BIT_ACCESS(B4DLC,3)
// B4EIDL<B4EID0>
extern volatile __bit                   B4EID0              __at(0x7320);	// @ (0xE64 * 8 + 0)
#define                                 B4EID0_bit          _BIT_ACCESS(B4EIDL,0)
// B4EIDL<B4EID1>
extern volatile __bit                   B4EID1              __at(0x7321);	// @ (0xE64 * 8 + 1)
#define                                 B4EID1_bit          _BIT_ACCESS(B4EIDL,1)
// B4EIDH<B4EID10>
extern volatile __bit                   B4EID10             __at(0x731A);	// @ (0xE63 * 8 + 2)
#define                                 B4EID10_bit         _BIT_ACCESS(B4EIDH,2)
// B4EIDH<B4EID11>
extern volatile __bit                   B4EID11             __at(0x731B);	// @ (0xE63 * 8 + 3)
#define                                 B4EID11_bit         _BIT_ACCESS(B4EIDH,3)
// B4EIDH<B4EID12>
extern volatile __bit                   B4EID12             __at(0x731C);	// @ (0xE63 * 8 + 4)
#define                                 B4EID12_bit         _BIT_ACCESS(B4EIDH,4)
// B4EIDH<B4EID13>
extern volatile __bit                   B4EID13             __at(0x731D);	// @ (0xE63 * 8 + 5)
#define                                 B4EID13_bit         _BIT_ACCESS(B4EIDH,5)
// B4EIDH<B4EID14>
extern volatile __bit                   B4EID14             __at(0x731E);	// @ (0xE63 * 8 + 6)
#define                                 B4EID14_bit         _BIT_ACCESS(B4EIDH,6)
// B4EIDH<B4EID15>
extern volatile __bit                   B4EID15             __at(0x731F);	// @ (0xE63 * 8 + 7)
#define                                 B4EID15_bit         _BIT_ACCESS(B4EIDH,7)
// B4SIDL<B4EID16>
extern volatile __bit                   B4EID16             __at(0x7310);	// @ (0xE62 * 8 + 0)
#define                                 B4EID16_bit         _BIT_ACCESS(B4SIDL,0)
// B4SIDL<B4EID17>
extern volatile __bit                   B4EID17             __at(0x7311);	// @ (0xE62 * 8 + 1)
#define                                 B4EID17_bit         _BIT_ACCESS(B4SIDL,1)
// B4EIDL<B4EID2>
extern volatile __bit                   B4EID2              __at(0x7322);	// @ (0xE64 * 8 + 2)
#define                                 B4EID2_bit          _BIT_ACCESS(B4EIDL,2)
// B4EIDL<B4EID3>
extern volatile __bit                   B4EID3              __at(0x7323);	// @ (0xE64 * 8 + 3)
#define                                 B4EID3_bit          _BIT_ACCESS(B4EIDL,3)
// B4EIDL<B4EID4>
extern volatile __bit                   B4EID4              __at(0x7324);	// @ (0xE64 * 8 + 4)
#define                                 B4EID4_bit          _BIT_ACCESS(B4EIDL,4)
// B4EIDL<B4EID5>
extern volatile __bit                   B4EID5              __at(0x7325);	// @ (0xE64 * 8 + 5)
#define                                 B4EID5_bit          _BIT_ACCESS(B4EIDL,5)
// B4EIDL<B4EID6>
extern volatile __bit                   B4EID6              __at(0x7326);	// @ (0xE64 * 8 + 6)
#define                                 B4EID6_bit          _BIT_ACCESS(B4EIDL,6)
// B4EIDL<B4EID7>
extern volatile __bit                   B4EID7              __at(0x7327);	// @ (0xE64 * 8 + 7)
#define                                 B4EID7_bit          _BIT_ACCESS(B4EIDL,7)
// B4EIDH<B4EID8>
extern volatile __bit                   B4EID8              __at(0x7318);	// @ (0xE63 * 8 + 0)
#define                                 B4EID8_bit          _BIT_ACCESS(B4EIDH,0)
// B4EIDH<B4EID9>
extern volatile __bit                   B4EID9              __at(0x7319);	// @ (0xE63 * 8 + 1)
#define                                 B4EID9_bit          _BIT_ACCESS(B4EIDH,1)
// B4SIDL<B4EXID>
extern volatile __bit                   B4EXID              __at(0x7313);	// @ (0xE62 * 8 + 3)
#define                                 B4EXID_bit          _BIT_ACCESS(B4SIDL,3)
// B4SIDL<B4EXIDE>
extern volatile __bit                   B4EXIDE             __at(0x7313);	// @ (0xE62 * 8 + 3)
#define                                 B4EXIDE_bit         _BIT_ACCESS(B4SIDL,3)
// B4CON<B4FILHIT0>
extern volatile __bit                   B4FILHIT0           __at(0x7300);	// @ (0xE60 * 8 + 0)
#define                                 B4FILHIT0_bit       _BIT_ACCESS(B4CON,0)
// B4CON<B4FILHIT1>
extern volatile __bit                   B4FILHIT1           __at(0x7301);	// @ (0xE60 * 8 + 1)
#define                                 B4FILHIT1_bit       _BIT_ACCESS(B4CON,1)
// B4CON<B4FILHIT2>
extern volatile __bit                   B4FILHIT2           __at(0x7302);	// @ (0xE60 * 8 + 2)
#define                                 B4FILHIT2_bit       _BIT_ACCESS(B4CON,2)
// B4CON<B4FILHIT3>
extern volatile __bit                   B4FILHIT3           __at(0x7303);	// @ (0xE60 * 8 + 3)
#define                                 B4FILHIT3_bit       _BIT_ACCESS(B4CON,3)
// B4CON<B4FILHIT4>
extern volatile __bit                   B4FILHIT4           __at(0x7304);	// @ (0xE60 * 8 + 4)
#define                                 B4FILHIT4_bit       _BIT_ACCESS(B4CON,4)
// BIE0<B4IE>
extern volatile __bit                   B4IE                __at(0x6FD6);	// @ (0xDFA * 8 + 6)
#define                                 B4IE_bit            _BIT_ACCESS(BIE0,6)
// B4DLC<B4RB0>
extern volatile __bit                   B4RB0               __at(0x732C);	// @ (0xE65 * 8 + 4)
#define                                 B4RB0_bit           _BIT_ACCESS(B4DLC,4)
// B4DLC<B4RB1>
extern volatile __bit                   B4RB1               __at(0x732D);	// @ (0xE65 * 8 + 5)
#define                                 B4RB1_bit           _BIT_ACCESS(B4DLC,5)
// B4CON<B4RTREN>
extern volatile __bit                   B4RTREN             __at(0x7302);	// @ (0xE60 * 8 + 2)
#define                                 B4RTREN_bit         _BIT_ACCESS(B4CON,2)
// B4CON<B4RTRRO>
extern volatile __bit                   B4RTRRO             __at(0x7305);	// @ (0xE60 * 8 + 5)
#define                                 B4RTRRO_bit         _BIT_ACCESS(B4CON,5)
// B4CON<B4RXFUL>
extern volatile __bit                   B4RXFUL             __at(0x7307);	// @ (0xE60 * 8 + 7)
#define                                 B4RXFUL_bit         _BIT_ACCESS(B4CON,7)
// B4CON<B4RXM1>
extern volatile __bit                   B4RXM1              __at(0x7306);	// @ (0xE60 * 8 + 6)
#define                                 B4RXM1_bit          _BIT_ACCESS(B4CON,6)
// B4DLC<B4RXRTR>
extern volatile __bit                   B4RXRTR             __at(0x732E);	// @ (0xE65 * 8 + 6)
#define                                 B4RXRTR_bit         _BIT_ACCESS(B4DLC,6)
// B4SIDL<B4SID0>
extern volatile __bit                   B4SID0              __at(0x7315);	// @ (0xE62 * 8 + 5)
#define                                 B4SID0_bit          _BIT_ACCESS(B4SIDL,5)
// B4SIDL<B4SID1>
extern volatile __bit                   B4SID1              __at(0x7316);	// @ (0xE62 * 8 + 6)
#define                                 B4SID1_bit          _BIT_ACCESS(B4SIDL,6)
// B4SIDH<B4SID10>
extern volatile __bit                   B4SID10             __at(0x730F);	// @ (0xE61 * 8 + 7)
#define                                 B4SID10_bit         _BIT_ACCESS(B4SIDH,7)
// B4SIDL<B4SID2>
extern volatile __bit                   B4SID2              __at(0x7317);	// @ (0xE62 * 8 + 7)
#define                                 B4SID2_bit          _BIT_ACCESS(B4SIDL,7)
// B4SIDH<B4SID3>
extern volatile __bit                   B4SID3              __at(0x7308);	// @ (0xE61 * 8 + 0)
#define                                 B4SID3_bit          _BIT_ACCESS(B4SIDH,0)
// B4SIDH<B4SID4>
extern volatile __bit                   B4SID4              __at(0x7309);	// @ (0xE61 * 8 + 1)
#define                                 B4SID4_bit          _BIT_ACCESS(B4SIDH,1)
// B4SIDH<B4SID5>
extern volatile __bit                   B4SID5              __at(0x730A);	// @ (0xE61 * 8 + 2)
#define                                 B4SID5_bit          _BIT_ACCESS(B4SIDH,2)
// B4SIDH<B4SID6>
extern volatile __bit                   B4SID6              __at(0x730B);	// @ (0xE61 * 8 + 3)
#define                                 B4SID6_bit          _BIT_ACCESS(B4SIDH,3)
// B4SIDH<B4SID7>
extern volatile __bit                   B4SID7              __at(0x730C);	// @ (0xE61 * 8 + 4)
#define                                 B4SID7_bit          _BIT_ACCESS(B4SIDH,4)
// B4SIDH<B4SID8>
extern volatile __bit                   B4SID8              __at(0x730D);	// @ (0xE61 * 8 + 5)
#define                                 B4SID8_bit          _BIT_ACCESS(B4SIDH,5)
// B4SIDH<B4SID9>
extern volatile __bit                   B4SID9              __at(0x730E);	// @ (0xE61 * 8 + 6)
#define                                 B4SID9_bit          _BIT_ACCESS(B4SIDH,6)
// B4SIDL<B4SRR>
extern volatile __bit                   B4SRR               __at(0x7314);	// @ (0xE62 * 8 + 4)
#define                                 B4SRR_bit           _BIT_ACCESS(B4SIDL,4)
// B4CON<B4TXABT>
extern volatile __bit                   B4TXABT             __at(0x7306);	// @ (0xE60 * 8 + 6)
#define                                 B4TXABT_bit         _BIT_ACCESS(B4CON,6)
// B4CON<B4TXB3IF>
extern volatile __bit                   B4TXB3IF            __at(0x7307);	// @ (0xE60 * 8 + 7)
#define                                 B4TXB3IF_bit        _BIT_ACCESS(B4CON,7)
// BSEL0<B4TXEN>
extern volatile __bit                   B4TXEN              __at(0x6FC6);	// @ (0xDF8 * 8 + 6)
#define                                 B4TXEN_bit          _BIT_ACCESS(BSEL0,6)
// B4CON<B4TXERR>
extern volatile __bit                   B4TXERR             __at(0x7304);	// @ (0xE60 * 8 + 4)
#define                                 B4TXERR_bit         _BIT_ACCESS(B4CON,4)
// B4CON<B4TXLARB>
extern volatile __bit                   B4TXLARB            __at(0x7305);	// @ (0xE60 * 8 + 5)
#define                                 B4TXLARB_bit        _BIT_ACCESS(B4CON,5)
// B4CON<B4TXPRI0>
extern volatile __bit                   B4TXPRI0            __at(0x7300);	// @ (0xE60 * 8 + 0)
#define                                 B4TXPRI0_bit        _BIT_ACCESS(B4CON,0)
// B4CON<B4TXPRI1>
extern volatile __bit                   B4TXPRI1            __at(0x7301);	// @ (0xE60 * 8 + 1)
#define                                 B4TXPRI1_bit        _BIT_ACCESS(B4CON,1)
// B4CON<B4TXREQ>
extern volatile __bit                   B4TXREQ             __at(0x7303);	// @ (0xE60 * 8 + 3)
#define                                 B4TXREQ_bit         _BIT_ACCESS(B4CON,3)
// B5D0<B57D07>
extern volatile __bit                   B57D07              __at(0x73B7);	// @ (0xE76 * 8 + 7)
#define                                 B57D07_bit          _BIT_ACCESS(B5D0,7)
// B5D2<B57D23>
extern volatile __bit                   B57D23              __at(0x73C3);	// @ (0xE78 * 8 + 3)
#define                                 B57D23_bit          _BIT_ACCESS(B5D2,3)
// B5D0<B5D00>
extern volatile __bit                   B5D00               __at(0x73B0);	// @ (0xE76 * 8 + 0)
#define                                 B5D00_bit           _BIT_ACCESS(B5D0,0)
// B5D0<B5D01>
extern volatile __bit                   B5D01               __at(0x73B1);	// @ (0xE76 * 8 + 1)
#define                                 B5D01_bit           _BIT_ACCESS(B5D0,1)
// B5D0<B5D02>
extern volatile __bit                   B5D02               __at(0x73B2);	// @ (0xE76 * 8 + 2)
#define                                 B5D02_bit           _BIT_ACCESS(B5D0,2)
// B5D0<B5D03>
extern volatile __bit                   B5D03               __at(0x73B3);	// @ (0xE76 * 8 + 3)
#define                                 B5D03_bit           _BIT_ACCESS(B5D0,3)
// B5D0<B5D04>
extern volatile __bit                   B5D04               __at(0x73B4);	// @ (0xE76 * 8 + 4)
#define                                 B5D04_bit           _BIT_ACCESS(B5D0,4)
// B5D0<B5D05>
extern volatile __bit                   B5D05               __at(0x73B5);	// @ (0xE76 * 8 + 5)
#define                                 B5D05_bit           _BIT_ACCESS(B5D0,5)
// B5D0<B5D06>
extern volatile __bit                   B5D06               __at(0x73B6);	// @ (0xE76 * 8 + 6)
#define                                 B5D06_bit           _BIT_ACCESS(B5D0,6)
// B5D0<B5D07>
extern volatile __bit                   B5D07               __at(0x73B7);	// @ (0xE76 * 8 + 7)
#define                                 B5D07_bit           _BIT_ACCESS(B5D0,7)
// B5D1<B5D10>
extern volatile __bit                   B5D10               __at(0x73B8);	// @ (0xE77 * 8 + 0)
#define                                 B5D10_bit           _BIT_ACCESS(B5D1,0)
// B5D1<B5D11>
extern volatile __bit                   B5D11               __at(0x73B9);	// @ (0xE77 * 8 + 1)
#define                                 B5D11_bit           _BIT_ACCESS(B5D1,1)
// B5D1<B5D12>
extern volatile __bit                   B5D12               __at(0x73BA);	// @ (0xE77 * 8 + 2)
#define                                 B5D12_bit           _BIT_ACCESS(B5D1,2)
// B5D1<B5D13>
extern volatile __bit                   B5D13               __at(0x73BB);	// @ (0xE77 * 8 + 3)
#define                                 B5D13_bit           _BIT_ACCESS(B5D1,3)
// B5D1<B5D14>
extern volatile __bit                   B5D14               __at(0x73BC);	// @ (0xE77 * 8 + 4)
#define                                 B5D14_bit           _BIT_ACCESS(B5D1,4)
// B5D1<B5D15>
extern volatile __bit                   B5D15               __at(0x73BD);	// @ (0xE77 * 8 + 5)
#define                                 B5D15_bit           _BIT_ACCESS(B5D1,5)
// B5D1<B5D16>
extern volatile __bit                   B5D16               __at(0x73BE);	// @ (0xE77 * 8 + 6)
#define                                 B5D16_bit           _BIT_ACCESS(B5D1,6)
// B5D1<B5D17>
extern volatile __bit                   B5D17               __at(0x73BF);	// @ (0xE77 * 8 + 7)
#define                                 B5D17_bit           _BIT_ACCESS(B5D1,7)
// B5D2<B5D20>
extern volatile __bit                   B5D20               __at(0x73C0);	// @ (0xE78 * 8 + 0)
#define                                 B5D20_bit           _BIT_ACCESS(B5D2,0)
// B5D2<B5D21>
extern volatile __bit                   B5D21               __at(0x73C1);	// @ (0xE78 * 8 + 1)
#define                                 B5D21_bit           _BIT_ACCESS(B5D2,1)
// B5D2<B5D22>
extern volatile __bit                   B5D22               __at(0x73C2);	// @ (0xE78 * 8 + 2)
#define                                 B5D22_bit           _BIT_ACCESS(B5D2,2)
// B5D2<B5D23>
extern volatile __bit                   B5D23               __at(0x73C3);	// @ (0xE78 * 8 + 3)
#define                                 B5D23_bit           _BIT_ACCESS(B5D2,3)
// B5D2<B5D24>
extern volatile __bit                   B5D24               __at(0x73C4);	// @ (0xE78 * 8 + 4)
#define                                 B5D24_bit           _BIT_ACCESS(B5D2,4)
// B5D2<B5D25>
extern volatile __bit                   B5D25               __at(0x73C5);	// @ (0xE78 * 8 + 5)
#define                                 B5D25_bit           _BIT_ACCESS(B5D2,5)
// B5D2<B5D26>
extern volatile __bit                   B5D26               __at(0x73C6);	// @ (0xE78 * 8 + 6)
#define                                 B5D26_bit           _BIT_ACCESS(B5D2,6)
// B5D2<B5D27>
extern volatile __bit                   B5D27               __at(0x73C7);	// @ (0xE78 * 8 + 7)
#define                                 B5D27_bit           _BIT_ACCESS(B5D2,7)
// B5D3<B5D30>
extern volatile __bit                   B5D30               __at(0x73C8);	// @ (0xE79 * 8 + 0)
#define                                 B5D30_bit           _BIT_ACCESS(B5D3,0)
// B5D3<B5D31>
extern volatile __bit                   B5D31               __at(0x73C9);	// @ (0xE79 * 8 + 1)
#define                                 B5D31_bit           _BIT_ACCESS(B5D3,1)
// B5D3<B5D32>
extern volatile __bit                   B5D32               __at(0x73CA);	// @ (0xE79 * 8 + 2)
#define                                 B5D32_bit           _BIT_ACCESS(B5D3,2)
// B5D3<B5D33>
extern volatile __bit                   B5D33               __at(0x73CB);	// @ (0xE79 * 8 + 3)
#define                                 B5D33_bit           _BIT_ACCESS(B5D3,3)
// B5D3<B5D34>
extern volatile __bit                   B5D34               __at(0x73CC);	// @ (0xE79 * 8 + 4)
#define                                 B5D34_bit           _BIT_ACCESS(B5D3,4)
// B5D3<B5D35>
extern volatile __bit                   B5D35               __at(0x73CD);	// @ (0xE79 * 8 + 5)
#define                                 B5D35_bit           _BIT_ACCESS(B5D3,5)
// B5D3<B5D36>
extern volatile __bit                   B5D36               __at(0x73CE);	// @ (0xE79 * 8 + 6)
#define                                 B5D36_bit           _BIT_ACCESS(B5D3,6)
// B5D3<B5D37>
extern volatile __bit                   B5D37               __at(0x73CF);	// @ (0xE79 * 8 + 7)
#define                                 B5D37_bit           _BIT_ACCESS(B5D3,7)
// B5D4<B5D40>
extern volatile __bit                   B5D40               __at(0x73D0);	// @ (0xE7A * 8 + 0)
#define                                 B5D40_bit           _BIT_ACCESS(B5D4,0)
// B5D4<B5D41>
extern volatile __bit                   B5D41               __at(0x73D1);	// @ (0xE7A * 8 + 1)
#define                                 B5D41_bit           _BIT_ACCESS(B5D4,1)
// B5D4<B5D42>
extern volatile __bit                   B5D42               __at(0x73D2);	// @ (0xE7A * 8 + 2)
#define                                 B5D42_bit           _BIT_ACCESS(B5D4,2)
// B5D4<B5D43>
extern volatile __bit                   B5D43               __at(0x73D3);	// @ (0xE7A * 8 + 3)
#define                                 B5D43_bit           _BIT_ACCESS(B5D4,3)
// B5D4<B5D44>
extern volatile __bit                   B5D44               __at(0x73D4);	// @ (0xE7A * 8 + 4)
#define                                 B5D44_bit           _BIT_ACCESS(B5D4,4)
// B5D4<B5D45>
extern volatile __bit                   B5D45               __at(0x73D5);	// @ (0xE7A * 8 + 5)
#define                                 B5D45_bit           _BIT_ACCESS(B5D4,5)
// B5D4<B5D46>
extern volatile __bit                   B5D46               __at(0x73D6);	// @ (0xE7A * 8 + 6)
#define                                 B5D46_bit           _BIT_ACCESS(B5D4,6)
// B5D4<B5D47>
extern volatile __bit                   B5D47               __at(0x73D7);	// @ (0xE7A * 8 + 7)
#define                                 B5D47_bit           _BIT_ACCESS(B5D4,7)
// B5D5<B5D50>
extern volatile __bit                   B5D50               __at(0x73D8);	// @ (0xE7B * 8 + 0)
#define                                 B5D50_bit           _BIT_ACCESS(B5D5,0)
// B5D5<B5D51>
extern volatile __bit                   B5D51               __at(0x73D9);	// @ (0xE7B * 8 + 1)
#define                                 B5D51_bit           _BIT_ACCESS(B5D5,1)
// B5D5<B5D52>
extern volatile __bit                   B5D52               __at(0x73DA);	// @ (0xE7B * 8 + 2)
#define                                 B5D52_bit           _BIT_ACCESS(B5D5,2)
// B5D5<B5D53>
extern volatile __bit                   B5D53               __at(0x73DB);	// @ (0xE7B * 8 + 3)
#define                                 B5D53_bit           _BIT_ACCESS(B5D5,3)
// B5D5<B5D54>
extern volatile __bit                   B5D54               __at(0x73DC);	// @ (0xE7B * 8 + 4)
#define                                 B5D54_bit           _BIT_ACCESS(B5D5,4)
// B5D5<B5D55>
extern volatile __bit                   B5D55               __at(0x73DD);	// @ (0xE7B * 8 + 5)
#define                                 B5D55_bit           _BIT_ACCESS(B5D5,5)
// B5D5<B5D56>
extern volatile __bit                   B5D56               __at(0x73DE);	// @ (0xE7B * 8 + 6)
#define                                 B5D56_bit           _BIT_ACCESS(B5D5,6)
// B5D5<B5D57>
extern volatile __bit                   B5D57               __at(0x73DF);	// @ (0xE7B * 8 + 7)
#define                                 B5D57_bit           _BIT_ACCESS(B5D5,7)
// B5D6<B5D60>
extern volatile __bit                   B5D60               __at(0x73E0);	// @ (0xE7C * 8 + 0)
#define                                 B5D60_bit           _BIT_ACCESS(B5D6,0)
// B5D6<B5D61>
extern volatile __bit                   B5D61               __at(0x73E1);	// @ (0xE7C * 8 + 1)
#define                                 B5D61_bit           _BIT_ACCESS(B5D6,1)
// B5D6<B5D62>
extern volatile __bit                   B5D62               __at(0x73E2);	// @ (0xE7C * 8 + 2)
#define                                 B5D62_bit           _BIT_ACCESS(B5D6,2)
// B5D6<B5D63>
extern volatile __bit                   B5D63               __at(0x73E3);	// @ (0xE7C * 8 + 3)
#define                                 B5D63_bit           _BIT_ACCESS(B5D6,3)
// B5D6<B5D64>
extern volatile __bit                   B5D64               __at(0x73E4);	// @ (0xE7C * 8 + 4)
#define                                 B5D64_bit           _BIT_ACCESS(B5D6,4)
// B5D6<B5D65>
extern volatile __bit                   B5D65               __at(0x73E5);	// @ (0xE7C * 8 + 5)
#define                                 B5D65_bit           _BIT_ACCESS(B5D6,5)
// B5D6<B5D66>
extern volatile __bit                   B5D66               __at(0x73E6);	// @ (0xE7C * 8 + 6)
#define                                 B5D66_bit           _BIT_ACCESS(B5D6,6)
// B5D6<B5D67>
extern volatile __bit                   B5D67               __at(0x73E7);	// @ (0xE7C * 8 + 7)
#define                                 B5D67_bit           _BIT_ACCESS(B5D6,7)
// B5D7<B5D70>
extern volatile __bit                   B5D70               __at(0x73E8);	// @ (0xE7D * 8 + 0)
#define                                 B5D70_bit           _BIT_ACCESS(B5D7,0)
// B5D7<B5D71>
extern volatile __bit                   B5D71               __at(0x73E9);	// @ (0xE7D * 8 + 1)
#define                                 B5D71_bit           _BIT_ACCESS(B5D7,1)
// B5D7<B5D72>
extern volatile __bit                   B5D72               __at(0x73EA);	// @ (0xE7D * 8 + 2)
#define                                 B5D72_bit           _BIT_ACCESS(B5D7,2)
// B5D7<B5D73>
extern volatile __bit                   B5D73               __at(0x73EB);	// @ (0xE7D * 8 + 3)
#define                                 B5D73_bit           _BIT_ACCESS(B5D7,3)
// B5D7<B5D74>
extern volatile __bit                   B5D74               __at(0x73EC);	// @ (0xE7D * 8 + 4)
#define                                 B5D74_bit           _BIT_ACCESS(B5D7,4)
// B5D7<B5D75>
extern volatile __bit                   B5D75               __at(0x73ED);	// @ (0xE7D * 8 + 5)
#define                                 B5D75_bit           _BIT_ACCESS(B5D7,5)
// B5D7<B5D76>
extern volatile __bit                   B5D76               __at(0x73EE);	// @ (0xE7D * 8 + 6)
#define                                 B5D76_bit           _BIT_ACCESS(B5D7,6)
// B5D7<B5D77>
extern volatile __bit                   B5D77               __at(0x73EF);	// @ (0xE7D * 8 + 7)
#define                                 B5D77_bit           _BIT_ACCESS(B5D7,7)
// B5DLC<B5DLC0>
extern volatile __bit                   B5DLC0              __at(0x73A8);	// @ (0xE75 * 8 + 0)
#define                                 B5DLC0_bit          _BIT_ACCESS(B5DLC,0)
// B5DLC<B5DLC1>
extern volatile __bit                   B5DLC1              __at(0x73A9);	// @ (0xE75 * 8 + 1)
#define                                 B5DLC1_bit          _BIT_ACCESS(B5DLC,1)
// B5DLC<B5DLC2>
extern volatile __bit                   B5DLC2              __at(0x73AA);	// @ (0xE75 * 8 + 2)
#define                                 B5DLC2_bit          _BIT_ACCESS(B5DLC,2)
// B5DLC<B5DLC3>
extern volatile __bit                   B5DLC3              __at(0x73AB);	// @ (0xE75 * 8 + 3)
#define                                 B5DLC3_bit          _BIT_ACCESS(B5DLC,3)
// B5EIDL<B5EID0>
extern volatile __bit                   B5EID0              __at(0x73A0);	// @ (0xE74 * 8 + 0)
#define                                 B5EID0_bit          _BIT_ACCESS(B5EIDL,0)
// B5EIDL<B5EID1>
extern volatile __bit                   B5EID1              __at(0x73A1);	// @ (0xE74 * 8 + 1)
#define                                 B5EID1_bit          _BIT_ACCESS(B5EIDL,1)
// B5EIDH<B5EID10>
extern volatile __bit                   B5EID10             __at(0x739A);	// @ (0xE73 * 8 + 2)
#define                                 B5EID10_bit         _BIT_ACCESS(B5EIDH,2)
// B5EIDH<B5EID11>
extern volatile __bit                   B5EID11             __at(0x739B);	// @ (0xE73 * 8 + 3)
#define                                 B5EID11_bit         _BIT_ACCESS(B5EIDH,3)
// B5EIDH<B5EID12>
extern volatile __bit                   B5EID12             __at(0x739C);	// @ (0xE73 * 8 + 4)
#define                                 B5EID12_bit         _BIT_ACCESS(B5EIDH,4)
// B5EIDH<B5EID13>
extern volatile __bit                   B5EID13             __at(0x739D);	// @ (0xE73 * 8 + 5)
#define                                 B5EID13_bit         _BIT_ACCESS(B5EIDH,5)
// B5EIDH<B5EID14>
extern volatile __bit                   B5EID14             __at(0x739E);	// @ (0xE73 * 8 + 6)
#define                                 B5EID14_bit         _BIT_ACCESS(B5EIDH,6)
// B5EIDH<B5EID15>
extern volatile __bit                   B5EID15             __at(0x739F);	// @ (0xE73 * 8 + 7)
#define                                 B5EID15_bit         _BIT_ACCESS(B5EIDH,7)
// B5SIDL<B5EID16>
extern volatile __bit                   B5EID16             __at(0x7390);	// @ (0xE72 * 8 + 0)
#define                                 B5EID16_bit         _BIT_ACCESS(B5SIDL,0)
// B5SIDL<B5EID17>
extern volatile __bit                   B5EID17             __at(0x7391);	// @ (0xE72 * 8 + 1)
#define                                 B5EID17_bit         _BIT_ACCESS(B5SIDL,1)
// B5EIDL<B5EID2>
extern volatile __bit                   B5EID2              __at(0x73A2);	// @ (0xE74 * 8 + 2)
#define                                 B5EID2_bit          _BIT_ACCESS(B5EIDL,2)
// B5EIDL<B5EID3>
extern volatile __bit                   B5EID3              __at(0x73A3);	// @ (0xE74 * 8 + 3)
#define                                 B5EID3_bit          _BIT_ACCESS(B5EIDL,3)
// B5EIDL<B5EID4>
extern volatile __bit                   B5EID4              __at(0x73A4);	// @ (0xE74 * 8 + 4)
#define                                 B5EID4_bit          _BIT_ACCESS(B5EIDL,4)
// B5EIDL<B5EID5>
extern volatile __bit                   B5EID5              __at(0x73A5);	// @ (0xE74 * 8 + 5)
#define                                 B5EID5_bit          _BIT_ACCESS(B5EIDL,5)
// B5EIDL<B5EID6>
extern volatile __bit                   B5EID6              __at(0x73A6);	// @ (0xE74 * 8 + 6)
#define                                 B5EID6_bit          _BIT_ACCESS(B5EIDL,6)
// B5EIDL<B5EID7>
extern volatile __bit                   B5EID7              __at(0x73A7);	// @ (0xE74 * 8 + 7)
#define                                 B5EID7_bit          _BIT_ACCESS(B5EIDL,7)
// B5EIDH<B5EID8>
extern volatile __bit                   B5EID8              __at(0x7398);	// @ (0xE73 * 8 + 0)
#define                                 B5EID8_bit          _BIT_ACCESS(B5EIDH,0)
// B5EIDH<B5EID9>
extern volatile __bit                   B5EID9              __at(0x7399);	// @ (0xE73 * 8 + 1)
#define                                 B5EID9_bit          _BIT_ACCESS(B5EIDH,1)
// B5SIDL<B5EXID>
extern volatile __bit                   B5EXID              __at(0x7393);	// @ (0xE72 * 8 + 3)
#define                                 B5EXID_bit          _BIT_ACCESS(B5SIDL,3)
// B5SIDL<B5EXIDE>
extern volatile __bit                   B5EXIDE             __at(0x7393);	// @ (0xE72 * 8 + 3)
#define                                 B5EXIDE_bit         _BIT_ACCESS(B5SIDL,3)
// B5CON<B5FILHIT0>
extern volatile __bit                   B5FILHIT0           __at(0x7380);	// @ (0xE70 * 8 + 0)
#define                                 B5FILHIT0_bit       _BIT_ACCESS(B5CON,0)
// B5CON<B5FILHIT1>
extern volatile __bit                   B5FILHIT1           __at(0x7381);	// @ (0xE70 * 8 + 1)
#define                                 B5FILHIT1_bit       _BIT_ACCESS(B5CON,1)
// B5CON<B5FILHIT2>
extern volatile __bit                   B5FILHIT2           __at(0x7382);	// @ (0xE70 * 8 + 2)
#define                                 B5FILHIT2_bit       _BIT_ACCESS(B5CON,2)
// B5CON<B5FILHIT3>
extern volatile __bit                   B5FILHIT3           __at(0x7383);	// @ (0xE70 * 8 + 3)
#define                                 B5FILHIT3_bit       _BIT_ACCESS(B5CON,3)
// B5CON<B5FILHIT4>
extern volatile __bit                   B5FILHIT4           __at(0x7384);	// @ (0xE70 * 8 + 4)
#define                                 B5FILHIT4_bit       _BIT_ACCESS(B5CON,4)
// BIE0<B5IE>
extern volatile __bit                   B5IE                __at(0x6FD7);	// @ (0xDFA * 8 + 7)
#define                                 B5IE_bit            _BIT_ACCESS(BIE0,7)
// B5DLC<B5RB0>
extern volatile __bit                   B5RB0               __at(0x73AC);	// @ (0xE75 * 8 + 4)
#define                                 B5RB0_bit           _BIT_ACCESS(B5DLC,4)
// B5DLC<B5RB1>
extern volatile __bit                   B5RB1               __at(0x73AD);	// @ (0xE75 * 8 + 5)
#define                                 B5RB1_bit           _BIT_ACCESS(B5DLC,5)
// B5CON<B5RTREN>
extern volatile __bit                   B5RTREN             __at(0x7382);	// @ (0xE70 * 8 + 2)
#define                                 B5RTREN_bit         _BIT_ACCESS(B5CON,2)
// B5CON<B5RTRRO>
extern volatile __bit                   B5RTRRO             __at(0x7385);	// @ (0xE70 * 8 + 5)
#define                                 B5RTRRO_bit         _BIT_ACCESS(B5CON,5)
// B5CON<B5RXFUL>
extern volatile __bit                   B5RXFUL             __at(0x7387);	// @ (0xE70 * 8 + 7)
#define                                 B5RXFUL_bit         _BIT_ACCESS(B5CON,7)
// B5CON<B5RXM1>
extern volatile __bit                   B5RXM1              __at(0x7386);	// @ (0xE70 * 8 + 6)
#define                                 B5RXM1_bit          _BIT_ACCESS(B5CON,6)
// B5DLC<B5RXRTR>
extern volatile __bit                   B5RXRTR             __at(0x73AE);	// @ (0xE75 * 8 + 6)
#define                                 B5RXRTR_bit         _BIT_ACCESS(B5DLC,6)
// B5SIDL<B5SID0>
extern volatile __bit                   B5SID0              __at(0x7395);	// @ (0xE72 * 8 + 5)
#define                                 B5SID0_bit          _BIT_ACCESS(B5SIDL,5)
// B5SIDL<B5SID1>
extern volatile __bit                   B5SID1              __at(0x7396);	// @ (0xE72 * 8 + 6)
#define                                 B5SID1_bit          _BIT_ACCESS(B5SIDL,6)
// B5SIDH<B5SID10>
extern volatile __bit                   B5SID10             __at(0x738F);	// @ (0xE71 * 8 + 7)
#define                                 B5SID10_bit         _BIT_ACCESS(B5SIDH,7)
// B5SIDL<B5SID2>
extern volatile __bit                   B5SID2              __at(0x7397);	// @ (0xE72 * 8 + 7)
#define                                 B5SID2_bit          _BIT_ACCESS(B5SIDL,7)
// B5SIDH<B5SID3>
extern volatile __bit                   B5SID3              __at(0x7388);	// @ (0xE71 * 8 + 0)
#define                                 B5SID3_bit          _BIT_ACCESS(B5SIDH,0)
// B5SIDH<B5SID4>
extern volatile __bit                   B5SID4              __at(0x7389);	// @ (0xE71 * 8 + 1)
#define                                 B5SID4_bit          _BIT_ACCESS(B5SIDH,1)
// B5SIDH<B5SID5>
extern volatile __bit                   B5SID5              __at(0x738A);	// @ (0xE71 * 8 + 2)
#define                                 B5SID5_bit          _BIT_ACCESS(B5SIDH,2)
// B5SIDH<B5SID6>
extern volatile __bit                   B5SID6              __at(0x738B);	// @ (0xE71 * 8 + 3)
#define                                 B5SID6_bit          _BIT_ACCESS(B5SIDH,3)
// B5SIDH<B5SID7>
extern volatile __bit                   B5SID7              __at(0x738C);	// @ (0xE71 * 8 + 4)
#define                                 B5SID7_bit          _BIT_ACCESS(B5SIDH,4)
// B5SIDH<B5SID8>
extern volatile __bit                   B5SID8              __at(0x738D);	// @ (0xE71 * 8 + 5)
#define                                 B5SID8_bit          _BIT_ACCESS(B5SIDH,5)
// B5SIDH<B5SID9>
extern volatile __bit                   B5SID9              __at(0x738E);	// @ (0xE71 * 8 + 6)
#define                                 B5SID9_bit          _BIT_ACCESS(B5SIDH,6)
// B5SIDL<B5SRR>
extern volatile __bit                   B5SRR               __at(0x7394);	// @ (0xE72 * 8 + 4)
#define                                 B5SRR_bit           _BIT_ACCESS(B5SIDL,4)
// B5CON<B5TXABT>
extern volatile __bit                   B5TXABT             __at(0x7386);	// @ (0xE70 * 8 + 6)
#define                                 B5TXABT_bit         _BIT_ACCESS(B5CON,6)
// B5CON<B5TXBIF>
extern volatile __bit                   B5TXBIF             __at(0x7387);	// @ (0xE70 * 8 + 7)
#define                                 B5TXBIF_bit         _BIT_ACCESS(B5CON,7)
// BSEL0<B5TXEN>
extern volatile __bit                   B5TXEN              __at(0x6FC7);	// @ (0xDF8 * 8 + 7)
#define                                 B5TXEN_bit          _BIT_ACCESS(BSEL0,7)
// B5CON<B5TXERR>
extern volatile __bit                   B5TXERR             __at(0x7384);	// @ (0xE70 * 8 + 4)
#define                                 B5TXERR_bit         _BIT_ACCESS(B5CON,4)
// B5CON<B5TXLARB>
extern volatile __bit                   B5TXLARB            __at(0x7385);	// @ (0xE70 * 8 + 5)
#define                                 B5TXLARB_bit        _BIT_ACCESS(B5CON,5)
// B5CON<B5TXPRI0>
extern volatile __bit                   B5TXPRI0            __at(0x7380);	// @ (0xE70 * 8 + 0)
#define                                 B5TXPRI0_bit        _BIT_ACCESS(B5CON,0)
// B5CON<B5TXPRI1>
extern volatile __bit                   B5TXPRI1            __at(0x7381);	// @ (0xE70 * 8 + 1)
#define                                 B5TXPRI1_bit        _BIT_ACCESS(B5CON,1)
// B5CON<B5TXREQ>
extern volatile __bit                   B5TXREQ             __at(0x7383);	// @ (0xE70 * 8 + 3)
#define                                 B5TXREQ_bit         _BIT_ACCESS(B5CON,3)
// PIE2<BCLIE>
extern volatile __bit                   BCLIE               __at(0x7D03);	// @ (0xFA0 * 8 + 3)
#define                                 BCLIE_bit           _BIT_ACCESS(PIE2,3)
// PIR2<BCLIF>
extern volatile __bit                   BCLIF               __at(0x7D0B);	// @ (0xFA1 * 8 + 3)
#define                                 BCLIF_bit           _BIT_ACCESS(PIR2,3)
// IPR2<BCLIP>
extern volatile __bit                   BCLIP               __at(0x7D13);	// @ (0xFA2 * 8 + 3)
#define                                 BCLIP_bit           _BIT_ACCESS(IPR2,3)
// SSPSTAT<BF>
extern volatile __bit                   BF                  __at(0x7E38);	// @ (0xFC7 * 8 + 0)
#define                                 BF_bit              _BIT_ACCESS(SSPSTAT,0)
// LVDCON<BGST>
extern volatile __bit                   BGST                __at(0x7E95);	// @ (0xFD2 * 8 + 5)
#define                                 BGST_bit            _BIT_ACCESS(LVDCON,5)
// RCON<BOR>
extern volatile __bit                   BOR                 __at(0x7E80);	// @ (0xFD0 * 8 + 0)
#define                                 BOR_bit             _BIT_ACCESS(RCON,0)
// BAUDCON<BRG16>
extern volatile __bit                   BRG16               __at(0x7BF3);	// @ (0xF7E * 8 + 3)
#define                                 BRG16_bit           _BIT_ACCESS(BAUDCON,3)
// TXSTA<BRGH>
extern volatile __bit                   BRGH                __at(0x7D62);	// @ (0xFAC * 8 + 2)
#define                                 BRGH_bit            _BIT_ACCESS(TXSTA,2)
// TXSTA<BRGH1>
extern volatile __bit                   BRGH1               __at(0x7D62);	// @ (0xFAC * 8 + 2)
#define                                 BRGH1_bit           _BIT_ACCESS(TXSTA,2)
// BRGCON1<BRP0>
extern volatile __bit                   BRP0                __at(0x7B80);	// @ (0xF70 * 8 + 0)
#define                                 BRP0_bit            _BIT_ACCESS(BRGCON1,0)
// BRGCON1<BRP1>
extern volatile __bit                   BRP1                __at(0x7B81);	// @ (0xF70 * 8 + 1)
#define                                 BRP1_bit            _BIT_ACCESS(BRGCON1,1)
// BRGCON1<BRP2>
extern volatile __bit                   BRP2                __at(0x7B82);	// @ (0xF70 * 8 + 2)
#define                                 BRP2_bit            _BIT_ACCESS(BRGCON1,2)
// BRGCON1<BRP3>
extern volatile __bit                   BRP3                __at(0x7B83);	// @ (0xF70 * 8 + 3)
#define                                 BRP3_bit            _BIT_ACCESS(BRGCON1,3)
// BRGCON1<BRP4>
extern volatile __bit                   BRP4                __at(0x7B84);	// @ (0xF70 * 8 + 4)
#define                                 BRP4_bit            _BIT_ACCESS(BRGCON1,4)
// BRGCON1<BRP5>
extern volatile __bit                   BRP5                __at(0x7B85);	// @ (0xF70 * 8 + 5)
#define                                 BRP5_bit            _BIT_ACCESS(BRGCON1,5)
// CMCON<C1INV>
extern volatile __bit                   C1INV               __at(0x7DA4);	// @ (0xFB4 * 8 + 4)
#define                                 C1INV_bit           _BIT_ACCESS(CMCON,4)
// CMCON<C1OUT>
extern volatile __bit                   C1OUT               __at(0x7DA6);	// @ (0xFB4 * 8 + 6)
#define                                 C1OUT_bit           _BIT_ACCESS(CMCON,6)
// PORTF<C1OUTF>
extern volatile __bit                   C1OUTF              __at(0x7C2A);	// @ (0xF85 * 8 + 2)
#define                                 C1OUTF_bit          _BIT_ACCESS(PORTF,2)
// CMCON<C2INV>
extern volatile __bit                   C2INV               __at(0x7DA5);	// @ (0xFB4 * 8 + 5)
#define                                 C2INV_bit           _BIT_ACCESS(CMCON,5)
// CMCON<C2OUT>
extern volatile __bit                   C2OUT               __at(0x7DA7);	// @ (0xFB4 * 8 + 7)
#define                                 C2OUT_bit           _BIT_ACCESS(CMCON,7)
// PORTF<C2OUTF>
extern volatile __bit                   C2OUTF              __at(0x7C29);	// @ (0xF85 * 8 + 1)
#define                                 C2OUTF_bit          _BIT_ACCESS(PORTF,1)
// PORTG<C3OUTG>
extern volatile __bit                   C3OUTG              __at(0x7C31);	// @ (0xF86 * 8 + 1)
#define                                 C3OUTG_bit          _BIT_ACCESS(PORTG,1)
// CIOCON<CANCAP>
extern volatile __bit                   CANCAP              __at(0x7B9C);	// @ (0xF73 * 8 + 4)
#define                                 CANCAP_bit          _BIT_ACCESS(CIOCON,4)
// PORTG<CANRX>
extern volatile __bit                   CANRX               __at(0x7C32);	// @ (0xF86 * 8 + 2)
#define                                 CANRX_bit           _BIT_ACCESS(PORTG,2)
// PORTG<CANTX1>
extern volatile __bit                   CANTX1              __at(0x7C30);	// @ (0xF86 * 8 + 0)
#define                                 CANTX1_bit          _BIT_ACCESS(PORTG,0)
// PORTG<CANTX2>
extern volatile __bit                   CANTX2              __at(0x7C31);	// @ (0xF86 * 8 + 1)
#define                                 CANTX2_bit          _BIT_ACCESS(PORTG,1)
// STATUS<CARRY>
extern volatile __bit                   CARRY               __at(0x7EC0);	// @ (0xFD8 * 8 + 0)
#define                                 CARRY_bit           _BIT_ACCESS(STATUS,0)
// PORTC<CCP1>
extern volatile __bit                   CCP1                __at(0x7C12);	// @ (0xF82 * 8 + 2)
#define                                 CCP1_bit            _BIT_ACCESS(PORTC,2)
// PORTE<CCP10>
extern volatile __bit                   CCP10               __at(0x7C22);	// @ (0xF84 * 8 + 2)
#define                                 CCP10_bit           _BIT_ACCESS(PORTE,2)
// PIE1<CCP1IE>
extern volatile __bit                   CCP1IE              __at(0x7CEA);	// @ (0xF9D * 8 + 2)
#define                                 CCP1IE_bit          _BIT_ACCESS(PIE1,2)
// PIR1<CCP1IF>
extern volatile __bit                   CCP1IF              __at(0x7CF2);	// @ (0xF9E * 8 + 2)
#define                                 CCP1IF_bit          _BIT_ACCESS(PIR1,2)
// IPR1<CCP1IP>
extern volatile __bit                   CCP1IP              __at(0x7CFA);	// @ (0xF9F * 8 + 2)
#define                                 CCP1IP_bit          _BIT_ACCESS(IPR1,2)
// CCP1CON<CCP1M0>
extern volatile __bit                   CCP1M0              __at(0x7DE8);	// @ (0xFBD * 8 + 0)
#define                                 CCP1M0_bit          _BIT_ACCESS(CCP1CON,0)
// CCP1CON<CCP1M1>
extern volatile __bit                   CCP1M1              __at(0x7DE9);	// @ (0xFBD * 8 + 1)
#define                                 CCP1M1_bit          _BIT_ACCESS(CCP1CON,1)
// CCP1CON<CCP1M2>
extern volatile __bit                   CCP1M2              __at(0x7DEA);	// @ (0xFBD * 8 + 2)
#define                                 CCP1M2_bit          _BIT_ACCESS(CCP1CON,2)
// CCP1CON<CCP1M3>
extern volatile __bit                   CCP1M3              __at(0x7DEB);	// @ (0xFBD * 8 + 3)
#define                                 CCP1M3_bit          _BIT_ACCESS(CCP1CON,3)
// PORTC<CCP2>
extern volatile __bit                   CCP2                __at(0x7C11);	// @ (0xF82 * 8 + 1)
#define                                 CCP2_bit            _BIT_ACCESS(PORTC,1)
// PORTE<CCP2E>
extern volatile __bit                   CCP2E               __at(0x7C27);	// @ (0xF84 * 8 + 7)
#define                                 CCP2E_bit           _BIT_ACCESS(PORTE,7)
// PIE2<CCP2IE>
extern volatile __bit                   CCP2IE              __at(0x7D00);	// @ (0xFA0 * 8 + 0)
#define                                 CCP2IE_bit          _BIT_ACCESS(PIE2,0)
// PIR2<CCP2IF>
extern volatile __bit                   CCP2IF              __at(0x7D08);	// @ (0xFA1 * 8 + 0)
#define                                 CCP2IF_bit          _BIT_ACCESS(PIR2,0)
// IPR2<CCP2IP>
extern volatile __bit                   CCP2IP              __at(0x7D10);	// @ (0xFA2 * 8 + 0)
#define                                 CCP2IP_bit          _BIT_ACCESS(IPR2,0)
// CCP2CON<CCP2M0>
extern volatile __bit                   CCP2M0              __at(0x7DD0);	// @ (0xFBA * 8 + 0)
#define                                 CCP2M0_bit          _BIT_ACCESS(CCP2CON,0)
// CCP2CON<CCP2M1>
extern volatile __bit                   CCP2M1              __at(0x7DD1);	// @ (0xFBA * 8 + 1)
#define                                 CCP2M1_bit          _BIT_ACCESS(CCP2CON,1)
// CCP2CON<CCP2M2>
extern volatile __bit                   CCP2M2              __at(0x7DD2);	// @ (0xFBA * 8 + 2)
#define                                 CCP2M2_bit          _BIT_ACCESS(CCP2CON,2)
// CCP2CON<CCP2M3>
extern volatile __bit                   CCP2M3              __at(0x7DD3);	// @ (0xFBA * 8 + 3)
#define                                 CCP2M3_bit          _BIT_ACCESS(CCP2CON,3)
// PORTB<CCP2_PA2>
extern volatile __bit                   CCP2_PA2            __at(0x7C0B);	// @ (0xF81 * 8 + 3)
#define                                 CCP2_PA2_bit        _BIT_ACCESS(PORTB,3)
// PORTE<CCP6E>
extern volatile __bit                   CCP6E               __at(0x7C26);	// @ (0xF84 * 8 + 6)
#define                                 CCP6E_bit           _BIT_ACCESS(PORTE,6)
// PORTE<CCP7E>
extern volatile __bit                   CCP7E               __at(0x7C25);	// @ (0xF84 * 8 + 5)
#define                                 CCP7E_bit           _BIT_ACCESS(PORTE,5)
// PORTE<CCP8E>
extern volatile __bit                   CCP8E               __at(0x7C24);	// @ (0xF84 * 8 + 4)
#define                                 CCP8E_bit           _BIT_ACCESS(PORTE,4)
// PORTE<CCP9E>
extern volatile __bit                   CCP9E               __at(0x7C23);	// @ (0xF84 * 8 + 3)
#define                                 CCP9E_bit           _BIT_ACCESS(PORTE,3)
// EECON1<CFGS>
extern volatile __bit                   CFGS                __at(0x7D36);	// @ (0xFA6 * 8 + 6)
#define                                 CFGS_bit            _BIT_ACCESS(EECON1,6)
// ADCON0<CHS0>
extern volatile __bit                   CHS0                __at(0x7E12);	// @ (0xFC2 * 8 + 2)
#define                                 CHS0_bit            _BIT_ACCESS(ADCON0,2)
// ADCON0<CHS1>
extern volatile __bit                   CHS1                __at(0x7E13);	// @ (0xFC2 * 8 + 3)
#define                                 CHS1_bit            _BIT_ACCESS(ADCON0,3)
// ADCON0<CHS2>
extern volatile __bit                   CHS2                __at(0x7E14);	// @ (0xFC2 * 8 + 4)
#define                                 CHS2_bit            _BIT_ACCESS(ADCON0,4)
// ADCON0<CHS3>
extern volatile __bit                   CHS3                __at(0x7E15);	// @ (0xFC2 * 8 + 5)
#define                                 CHS3_bit            _BIT_ACCESS(ADCON0,5)
// ADCON1<CHSN3>
extern volatile __bit                   CHSN3               __at(0x7E0B);	// @ (0xFC1 * 8 + 3)
#define                                 CHSN3_bit           _BIT_ACCESS(ADCON1,3)
// CMCON<CIS>
extern volatile __bit                   CIS                 __at(0x7DA3);	// @ (0xFB4 * 8 + 3)
#define                                 CIS_bit             _BIT_ACCESS(CMCON,3)
// PORTC<CK>
extern volatile __bit                   CK                  __at(0x7C16);	// @ (0xF82 * 8 + 6)
#define                                 CK_bit              _BIT_ACCESS(PORTC,6)
// SSPSTAT<CKE>
extern volatile __bit                   CKE                 __at(0x7E3E);	// @ (0xFC7 * 8 + 6)
#define                                 CKE_bit             _BIT_ACCESS(SSPSTAT,6)
// SSPCON1<CKP>
extern volatile __bit                   CKP                 __at(0x7E34);	// @ (0xFC6 * 8 + 4)
#define                                 CKP_bit             _BIT_ACCESS(SSPCON1,4)
// PORTA<CLKO>
extern volatile __bit                   CLKO                __at(0x7C06);	// @ (0xF80 * 8 + 6)
#define                                 CLKO_bit            _BIT_ACCESS(PORTA,6)
// CMCON<CM0>
extern volatile __bit                   CM0                 __at(0x7DA0);	// @ (0xFB4 * 8 + 0)
#define                                 CM0_bit             _BIT_ACCESS(CMCON,0)
// CMCON<CM1>
extern volatile __bit                   CM1                 __at(0x7DA1);	// @ (0xFB4 * 8 + 1)
#define                                 CM1_bit             _BIT_ACCESS(CMCON,1)
// CMCON<CM2>
extern volatile __bit                   CM2                 __at(0x7DA2);	// @ (0xFB4 * 8 + 2)
#define                                 CM2_bit             _BIT_ACCESS(CMCON,2)
// CMCON<CMEN0>
extern volatile __bit                   CMEN0               __at(0x7DA0);	// @ (0xFB4 * 8 + 0)
#define                                 CMEN0_bit           _BIT_ACCESS(CMCON,0)
// CMCON<CMEN1>
extern volatile __bit                   CMEN1               __at(0x7DA1);	// @ (0xFB4 * 8 + 1)
#define                                 CMEN1_bit           _BIT_ACCESS(CMCON,1)
// CMCON<CMEN2>
extern volatile __bit                   CMEN2               __at(0x7DA2);	// @ (0xFB4 * 8 + 2)
#define                                 CMEN2_bit           _BIT_ACCESS(CMCON,2)
// PIE2<CMIE>
extern volatile __bit                   CMIE                __at(0x7D06);	// @ (0xFA0 * 8 + 6)
#define                                 CMIE_bit            _BIT_ACCESS(PIE2,6)
// PIR2<CMIF>
extern volatile __bit                   CMIF                __at(0x7D0E);	// @ (0xFA1 * 8 + 6)
#define                                 CMIF_bit            _BIT_ACCESS(PIR2,6)
// IPR2<CMIP>
extern volatile __bit                   CMIP                __at(0x7D16);	// @ (0xFA2 * 8 + 6)
#define                                 CMIP_bit            _BIT_ACCESS(IPR2,6)
// RCSTA<CREN>
extern volatile __bit                   CREN                __at(0x7D5C);	// @ (0xFAB * 8 + 4)
#define                                 CREN_bit            _BIT_ACCESS(RCSTA,4)
// RCSTA<CREN1>
extern volatile __bit                   CREN1               __at(0x7D5C);	// @ (0xFAB * 8 + 4)
#define                                 CREN1_bit           _BIT_ACCESS(RCSTA,4)
// PORTE<CS>
extern volatile __bit                   CS                  __at(0x7C22);	// @ (0xF84 * 8 + 2)
#define                                 CS_bit              _BIT_ACCESS(PORTE,2)
// TXSTA<CSRC>
extern volatile __bit                   CSRC                __at(0x7D67);	// @ (0xFAC * 8 + 7)
#define                                 CSRC_bit            _BIT_ACCESS(TXSTA,7)
// TXSTA<CSRC1>
extern volatile __bit                   CSRC1               __at(0x7D67);	// @ (0xFAC * 8 + 7)
#define                                 CSRC1_bit           _BIT_ACCESS(TXSTA,7)
// CVRCON<CVR0>
extern volatile __bit                   CVR0                __at(0x7DA8);	// @ (0xFB5 * 8 + 0)
#define                                 CVR0_bit            _BIT_ACCESS(CVRCON,0)
// CVRCON<CVR1>
extern volatile __bit                   CVR1                __at(0x7DA9);	// @ (0xFB5 * 8 + 1)
#define                                 CVR1_bit            _BIT_ACCESS(CVRCON,1)
// CVRCON<CVR2>
extern volatile __bit                   CVR2                __at(0x7DAA);	// @ (0xFB5 * 8 + 2)
#define                                 CVR2_bit            _BIT_ACCESS(CVRCON,2)
// CVRCON<CVR3>
extern volatile __bit                   CVR3                __at(0x7DAB);	// @ (0xFB5 * 8 + 3)
#define                                 CVR3_bit            _BIT_ACCESS(CVRCON,3)
// CVRCON<CVREF>
extern volatile __bit                   CVREF               __at(0x7DAC);	// @ (0xFB5 * 8 + 4)
#define                                 CVREF_bit           _BIT_ACCESS(CVRCON,4)
// PORTF<CVREFF>
extern volatile __bit                   CVREFF              __at(0x7C2D);	// @ (0xF85 * 8 + 5)
#define                                 CVREFF_bit          _BIT_ACCESS(PORTF,5)
// CVRCON<CVREN>
extern volatile __bit                   CVREN               __at(0x7DAF);	// @ (0xFB5 * 8 + 7)
#define                                 CVREN_bit           _BIT_ACCESS(CVRCON,7)
// CVRCON<CVROE>
extern volatile __bit                   CVROE               __at(0x7DAE);	// @ (0xFB5 * 8 + 6)
#define                                 CVROE_bit           _BIT_ACCESS(CVRCON,6)
// CVRCON<CVROEN>
extern volatile __bit                   CVROEN              __at(0x7DAE);	// @ (0xFB5 * 8 + 6)
#define                                 CVROEN_bit          _BIT_ACCESS(CVRCON,6)
// CVRCON<CVRR>
extern volatile __bit                   CVRR                __at(0x7DAD);	// @ (0xFB5 * 8 + 5)
#define                                 CVRR_bit            _BIT_ACCESS(CVRCON,5)
// CVRCON<CVRSS>
extern volatile __bit                   CVRSS               __at(0x7DAC);	// @ (0xFB5 * 8 + 4)
#define                                 CVRSS_bit           _BIT_ACCESS(CVRCON,4)
// SSPSTAT<DA>
extern volatile __bit                   DA                  __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 DA_bit              _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<DATA_ADDRESS>
extern volatile __bit                   DATA_ADDRESS        __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 DATA_ADDRESS_bit    _BIT_ACCESS(SSPSTAT,5)
// STATUS<DC>
extern volatile __bit                   DC                  __at(0x7EC1);	// @ (0xFD8 * 8 + 1)
#define                                 DC_bit              _BIT_ACCESS(STATUS,1)
// CCP1CON<DC1B0>
extern volatile __bit                   DC1B0               __at(0x7DEC);	// @ (0xFBD * 8 + 4)
#define                                 DC1B0_bit           _BIT_ACCESS(CCP1CON,4)
// CCP1CON<DC1B1>
extern volatile __bit                   DC1B1               __at(0x7DED);	// @ (0xFBD * 8 + 5)
#define                                 DC1B1_bit           _BIT_ACCESS(CCP1CON,5)
// CCP2CON<DC2B0>
extern volatile __bit                   DC2B0               __at(0x7DD4);	// @ (0xFBA * 8 + 4)
#define                                 DC2B0_bit           _BIT_ACCESS(CCP2CON,4)
// CCP2CON<DC2B1>
extern volatile __bit                   DC2B1               __at(0x7DD5);	// @ (0xFBA * 8 + 5)
#define                                 DC2B1_bit           _BIT_ACCESS(CCP2CON,5)
// SDFLC<DFLC0>
extern volatile __bit                   DFLC0               __at(0x6EC0);	// @ (0xDD8 * 8 + 0)
#define                                 DFLC0_bit           _BIT_ACCESS(SDFLC,0)
// SDFLC<DFLC1>
extern volatile __bit                   DFLC1               __at(0x6EC1);	// @ (0xDD8 * 8 + 1)
#define                                 DFLC1_bit           _BIT_ACCESS(SDFLC,1)
// SDFLC<DFLC2>
extern volatile __bit                   DFLC2               __at(0x6EC2);	// @ (0xDD8 * 8 + 2)
#define                                 DFLC2_bit           _BIT_ACCESS(SDFLC,2)
// SDFLC<DFLC3>
extern volatile __bit                   DFLC3               __at(0x6EC3);	// @ (0xDD8 * 8 + 3)
#define                                 DFLC3_bit           _BIT_ACCESS(SDFLC,3)
// SDFLC<DFLC4>
extern volatile __bit                   DFLC4               __at(0x6EC4);	// @ (0xDD8 * 8 + 4)
#define                                 DFLC4_bit           _BIT_ACCESS(SDFLC,4)
// ADCON0<DONE>
extern volatile __bit                   DONE                __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 DONE_bit            _BIT_ACCESS(ADCON0,1)
// BIE0<DRXB0IE>
extern volatile __bit                   DRXB0IE             __at(0x6FD0);	// @ (0xDFA * 8 + 0)
#define                                 DRXB0IE_bit         _BIT_ACCESS(BIE0,0)
// BIE0<DRXB1IE>
extern volatile __bit                   DRXB1IE             __at(0x6FD1);	// @ (0xDFA * 8 + 1)
#define                                 DRXB1IE_bit         _BIT_ACCESS(BIE0,1)
// PORTC<DT>
extern volatile __bit                   DT                  __at(0x7C17);	// @ (0xF82 * 8 + 7)
#define                                 DT_bit              _BIT_ACCESS(PORTC,7)
// SSPSTAT<D_A>
extern volatile __bit                   D_A                 __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 D_A_bit             _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<D_NOT_A>
extern volatile __bit                   D_NOT_A             __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 D_NOT_A_bit         _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<D_nA>
extern volatile __bit                   D_nA                __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 D_nA_bit            _BIT_ACCESS(SSPSTAT,5)
// PR2<EBDIS>
extern volatile __bit                   EBDIS               __at(0x7E5F);	// @ (0xFCB * 8 + 7)
#define                                 EBDIS_bit           _BIT_ACCESS(PR2,7)
// ECCP1AS<ECCPAS0>
extern volatile __bit                   ECCPAS0             __at(0x7DB4);	// @ (0xFB6 * 8 + 4)
#define                                 ECCPAS0_bit         _BIT_ACCESS(ECCP1AS,4)
// ECCP1AS<ECCPAS1>
extern volatile __bit                   ECCPAS1             __at(0x7DB5);	// @ (0xFB6 * 8 + 5)
#define                                 ECCPAS1_bit         _BIT_ACCESS(ECCP1AS,5)
// ECCP1AS<ECCPAS2>
extern volatile __bit                   ECCPAS2             __at(0x7DB6);	// @ (0xFB6 * 8 + 6)
#define                                 ECCPAS2_bit         _BIT_ACCESS(ECCP1AS,6)
// ECCP1AS<ECCPASE>
extern volatile __bit                   ECCPASE             __at(0x7DB7);	// @ (0xFB6 * 8 + 7)
#define                                 ECCPASE_bit         _BIT_ACCESS(ECCP1AS,7)
// EECON1<EEFS>
extern volatile __bit                   EEFS                __at(0x7D36);	// @ (0xFA6 * 8 + 6)
#define                                 EEFS_bit            _BIT_ACCESS(EECON1,6)
// PIE2<EEIE>
extern volatile __bit                   EEIE                __at(0x7D04);	// @ (0xFA0 * 8 + 4)
#define                                 EEIE_bit            _BIT_ACCESS(PIE2,4)
// PIR2<EEIF>
extern volatile __bit                   EEIF                __at(0x7D0C);	// @ (0xFA1 * 8 + 4)
#define                                 EEIF_bit            _BIT_ACCESS(PIR2,4)
// IPR2<EEIP>
extern volatile __bit                   EEIP                __at(0x7D14);	// @ (0xFA2 * 8 + 4)
#define                                 EEIP_bit            _BIT_ACCESS(IPR2,4)
// EECON1<EEPGD>
extern volatile __bit                   EEPGD               __at(0x7D37);	// @ (0xFA6 * 8 + 7)
#define                                 EEPGD_bit           _BIT_ACCESS(EECON1,7)
// CANSTAT<EICODE0>
extern volatile __bit _DEPRECATED       EICODE0             __at(0x7B70);	// @ (0xF6E * 8 + 0)
#define                                 EICODE0_bit         _BIT_ACCESS(CANSTAT,0)
// CANSTAT<EICODE1>
extern volatile __bit                   EICODE1             __at(0x7B71);	// @ (0xF6E * 8 + 1)
#define                                 EICODE1_bit         _BIT_ACCESS(CANSTAT,1)
// CANSTAT<EICODE2>
extern volatile __bit                   EICODE2             __at(0x7B72);	// @ (0xF6E * 8 + 2)
#define                                 EICODE2_bit         _BIT_ACCESS(CANSTAT,2)
// CANSTAT<EICODE3>
extern volatile __bit                   EICODE3             __at(0x7B73);	// @ (0xF6E * 8 + 3)
#define                                 EICODE3_bit         _BIT_ACCESS(CANSTAT,3)
// CANSTAT<EICODE4>
extern volatile __bit _DEPRECATED       EICODE4             __at(0x7B74);	// @ (0xF6E * 8 + 4)
#define                                 EICODE4_bit         _BIT_ACCESS(CANSTAT,4)
// CIOCON<ENDRHI>
extern volatile __bit                   ENDRHI              __at(0x7B9D);	// @ (0xF73 * 8 + 5)
#define                                 ENDRHI_bit          _BIT_ACCESS(CIOCON,5)
// PIE3<ERRIE>
extern volatile __bit                   ERRIE               __at(0x7D1D);	// @ (0xFA3 * 8 + 5)
#define                                 ERRIE_bit           _BIT_ACCESS(PIE3,5)
// PIR3<ERRIF>
extern volatile __bit                   ERRIF               __at(0x7D25);	// @ (0xFA4 * 8 + 5)
#define                                 ERRIF_bit           _BIT_ACCESS(PIR3,5)
// IPR3<ERRIP>
extern volatile __bit                   ERRIP               __at(0x7D2D);	// @ (0xFA5 * 8 + 5)
#define                                 ERRIP_bit           _BIT_ACCESS(IPR3,5)
// COMSTAT<EWARN>
extern volatile __bit                   EWARN               __at(0x7BA0);	// @ (0xF74 * 8 + 0)
#define                                 EWARN_bit           _BIT_ACCESS(COMSTAT,0)
// ECANCON<EWIN0>
extern volatile __bit                   EWIN0               __at(0x7BB8);	// @ (0xF77 * 8 + 0)
#define                                 EWIN0_bit           _BIT_ACCESS(ECANCON,0)
// ECANCON<EWIN1>
extern volatile __bit                   EWIN1               __at(0x7BB9);	// @ (0xF77 * 8 + 1)
#define                                 EWIN1_bit           _BIT_ACCESS(ECANCON,1)
// ECANCON<EWIN2>
extern volatile __bit                   EWIN2               __at(0x7BBA);	// @ (0xF77 * 8 + 2)
#define                                 EWIN2_bit           _BIT_ACCESS(ECANCON,2)
// ECANCON<EWIN3>
extern volatile __bit                   EWIN3               __at(0x7BBB);	// @ (0xF77 * 8 + 3)
#define                                 EWIN3_bit           _BIT_ACCESS(ECANCON,3)
// ECANCON<EWIN4>
extern volatile __bit                   EWIN4               __at(0x7BBC);	// @ (0xF77 * 8 + 4)
#define                                 EWIN4_bit           _BIT_ACCESS(ECANCON,4)
// RXM0SIDL<EXIDM>
extern volatile __bit                   EXIDM               __at(0x78CB);	// @ (0xF19 * 8 + 3)
#define                                 EXIDM_bit           _BIT_ACCESS(RXM0SIDL,3)
// RXFBCON0<F0BP_0>
extern volatile __bit                   F0BP_0              __at(0x6F00);	// @ (0xDE0 * 8 + 0)
#define                                 F0BP_0_bit          _BIT_ACCESS(RXFBCON0,0)
// RXFBCON0<F0BP_01>
extern volatile __bit                   F0BP_01             __at(0x6F00);	// @ (0xDE0 * 8 + 0)
#define                                 F0BP_01_bit         _BIT_ACCESS(RXFBCON0,0)
// RXFBCON0<F0BP_1>
extern volatile __bit                   F0BP_1              __at(0x6F01);	// @ (0xDE0 * 8 + 1)
#define                                 F0BP_1_bit          _BIT_ACCESS(RXFBCON0,1)
// RXFBCON0<F0BP_2>
extern volatile __bit                   F0BP_2              __at(0x6F02);	// @ (0xDE0 * 8 + 2)
#define                                 F0BP_2_bit          _BIT_ACCESS(RXFBCON0,2)
// RXFBCON0<F0BP_3>
extern volatile __bit                   F0BP_3              __at(0x6F03);	// @ (0xDE0 * 8 + 3)
#define                                 F0BP_3_bit          _BIT_ACCESS(RXFBCON0,3)
// RXFBCON5<F10BP_0>
extern volatile __bit                   F10BP_0             __at(0x6F28);	// @ (0xDE5 * 8 + 0)
#define                                 F10BP_0_bit         _BIT_ACCESS(RXFBCON5,0)
// RXFBCON5<F10BP_01>
extern volatile __bit                   F10BP_01            __at(0x6F28);	// @ (0xDE5 * 8 + 0)
#define                                 F10BP_01_bit        _BIT_ACCESS(RXFBCON5,0)
// RXFBCON5<F10BP_1>
extern volatile __bit                   F10BP_1             __at(0x6F29);	// @ (0xDE5 * 8 + 1)
#define                                 F10BP_1_bit         _BIT_ACCESS(RXFBCON5,1)
// RXFBCON5<F10BP_2>
extern volatile __bit                   F10BP_2             __at(0x6F2A);	// @ (0xDE5 * 8 + 2)
#define                                 F10BP_2_bit         _BIT_ACCESS(RXFBCON5,2)
// RXFBCON5<F10BP_3>
extern volatile __bit                   F10BP_3             __at(0x6F2B);	// @ (0xDE5 * 8 + 3)
#define                                 F10BP_3_bit         _BIT_ACCESS(RXFBCON5,3)
// RXFBCON5<F11BP_0>
extern volatile __bit                   F11BP_0             __at(0x6F2C);	// @ (0xDE5 * 8 + 4)
#define                                 F11BP_0_bit         _BIT_ACCESS(RXFBCON5,4)
// RXFBCON5<F11BP_1>
extern volatile __bit                   F11BP_1             __at(0x6F2D);	// @ (0xDE5 * 8 + 5)
#define                                 F11BP_1_bit         _BIT_ACCESS(RXFBCON5,5)
// RXFBCON5<F11BP_2>
extern volatile __bit                   F11BP_2             __at(0x6F2E);	// @ (0xDE5 * 8 + 6)
#define                                 F11BP_2_bit         _BIT_ACCESS(RXFBCON5,6)
// RXFBCON5<F11BP_3>
extern volatile __bit                   F11BP_3             __at(0x6F2F);	// @ (0xDE5 * 8 + 7)
#define                                 F11BP_3_bit         _BIT_ACCESS(RXFBCON5,7)
// RXFBCON6<F12BP_0>
extern volatile __bit                   F12BP_0             __at(0x6F30);	// @ (0xDE6 * 8 + 0)
#define                                 F12BP_0_bit         _BIT_ACCESS(RXFBCON6,0)
// RXFBCON6<F12BP_01>
extern volatile __bit                   F12BP_01            __at(0x6F30);	// @ (0xDE6 * 8 + 0)
#define                                 F12BP_01_bit        _BIT_ACCESS(RXFBCON6,0)
// RXFBCON6<F12BP_1>
extern volatile __bit                   F12BP_1             __at(0x6F31);	// @ (0xDE6 * 8 + 1)
#define                                 F12BP_1_bit         _BIT_ACCESS(RXFBCON6,1)
// RXFBCON6<F12BP_2>
extern volatile __bit                   F12BP_2             __at(0x6F32);	// @ (0xDE6 * 8 + 2)
#define                                 F12BP_2_bit         _BIT_ACCESS(RXFBCON6,2)
// RXFBCON6<F12BP_3>
extern volatile __bit                   F12BP_3             __at(0x6F33);	// @ (0xDE6 * 8 + 3)
#define                                 F12BP_3_bit         _BIT_ACCESS(RXFBCON6,3)
// RXFBCON6<F13BP_0>
extern volatile __bit                   F13BP_0             __at(0x6F34);	// @ (0xDE6 * 8 + 4)
#define                                 F13BP_0_bit         _BIT_ACCESS(RXFBCON6,4)
// RXFBCON6<F13BP_1>
extern volatile __bit                   F13BP_1             __at(0x6F35);	// @ (0xDE6 * 8 + 5)
#define                                 F13BP_1_bit         _BIT_ACCESS(RXFBCON6,5)
// RXFBCON6<F13BP_2>
extern volatile __bit                   F13BP_2             __at(0x6F36);	// @ (0xDE6 * 8 + 6)
#define                                 F13BP_2_bit         _BIT_ACCESS(RXFBCON6,6)
// RXFBCON6<F13BP_3>
extern volatile __bit                   F13BP_3             __at(0x6F37);	// @ (0xDE6 * 8 + 7)
#define                                 F13BP_3_bit         _BIT_ACCESS(RXFBCON6,7)
// RXFBCON7<F14BP_0>
extern volatile __bit                   F14BP_0             __at(0x6F38);	// @ (0xDE7 * 8 + 0)
#define                                 F14BP_0_bit         _BIT_ACCESS(RXFBCON7,0)
// RXFBCON7<F14BP_01>
extern volatile __bit                   F14BP_01            __at(0x6F38);	// @ (0xDE7 * 8 + 0)
#define                                 F14BP_01_bit        _BIT_ACCESS(RXFBCON7,0)
// RXFBCON7<F14BP_1>
extern volatile __bit                   F14BP_1             __at(0x6F39);	// @ (0xDE7 * 8 + 1)
#define                                 F14BP_1_bit         _BIT_ACCESS(RXFBCON7,1)
// RXFBCON7<F14BP_2>
extern volatile __bit                   F14BP_2             __at(0x6F3A);	// @ (0xDE7 * 8 + 2)
#define                                 F14BP_2_bit         _BIT_ACCESS(RXFBCON7,2)
// RXFBCON7<F14BP_3>
extern volatile __bit                   F14BP_3             __at(0x6F3B);	// @ (0xDE7 * 8 + 3)
#define                                 F14BP_3_bit         _BIT_ACCESS(RXFBCON7,3)
// RXFBCON7<F15BP_0>
extern volatile __bit                   F15BP_0             __at(0x6F3C);	// @ (0xDE7 * 8 + 4)
#define                                 F15BP_0_bit         _BIT_ACCESS(RXFBCON7,4)
// RXFBCON7<F15BP_1>
extern volatile __bit                   F15BP_1             __at(0x6F3D);	// @ (0xDE7 * 8 + 5)
#define                                 F15BP_1_bit         _BIT_ACCESS(RXFBCON7,5)
// RXFBCON7<F15BP_2>
extern volatile __bit                   F15BP_2             __at(0x6F3E);	// @ (0xDE7 * 8 + 6)
#define                                 F15BP_2_bit         _BIT_ACCESS(RXFBCON7,6)
// RXFBCON7<F15BP_3>
extern volatile __bit                   F15BP_3             __at(0x6F3F);	// @ (0xDE7 * 8 + 7)
#define                                 F15BP_3_bit         _BIT_ACCESS(RXFBCON7,7)
// RXFBCON0<F1BP_0>
extern volatile __bit                   F1BP_0              __at(0x6F04);	// @ (0xDE0 * 8 + 4)
#define                                 F1BP_0_bit          _BIT_ACCESS(RXFBCON0,4)
// RXFBCON0<F1BP_1>
extern volatile __bit                   F1BP_1              __at(0x6F05);	// @ (0xDE0 * 8 + 5)
#define                                 F1BP_1_bit          _BIT_ACCESS(RXFBCON0,5)
// RXFBCON0<F1BP_2>
extern volatile __bit                   F1BP_2              __at(0x6F06);	// @ (0xDE0 * 8 + 6)
#define                                 F1BP_2_bit          _BIT_ACCESS(RXFBCON0,6)
// RXFBCON0<F1BP_3>
extern volatile __bit                   F1BP_3              __at(0x6F07);	// @ (0xDE0 * 8 + 7)
#define                                 F1BP_3_bit          _BIT_ACCESS(RXFBCON0,7)
// RXFBCON1<F2BP_0>
extern volatile __bit                   F2BP_0              __at(0x6F08);	// @ (0xDE1 * 8 + 0)
#define                                 F2BP_0_bit          _BIT_ACCESS(RXFBCON1,0)
// RXFBCON1<F2BP_01>
extern volatile __bit                   F2BP_01             __at(0x6F08);	// @ (0xDE1 * 8 + 0)
#define                                 F2BP_01_bit         _BIT_ACCESS(RXFBCON1,0)
// RXFBCON1<F2BP_1>
extern volatile __bit                   F2BP_1              __at(0x6F09);	// @ (0xDE1 * 8 + 1)
#define                                 F2BP_1_bit          _BIT_ACCESS(RXFBCON1,1)
// RXFBCON1<F2BP_2>
extern volatile __bit                   F2BP_2              __at(0x6F0A);	// @ (0xDE1 * 8 + 2)
#define                                 F2BP_2_bit          _BIT_ACCESS(RXFBCON1,2)
// RXFBCON1<F2BP_3>
extern volatile __bit                   F2BP_3              __at(0x6F0B);	// @ (0xDE1 * 8 + 3)
#define                                 F2BP_3_bit          _BIT_ACCESS(RXFBCON1,3)
// RXFBCON1<F3BP_0>
extern volatile __bit                   F3BP_0              __at(0x6F0C);	// @ (0xDE1 * 8 + 4)
#define                                 F3BP_0_bit          _BIT_ACCESS(RXFBCON1,4)
// RXFBCON1<F3BP_1>
extern volatile __bit                   F3BP_1              __at(0x6F0D);	// @ (0xDE1 * 8 + 5)
#define                                 F3BP_1_bit          _BIT_ACCESS(RXFBCON1,5)
// RXFBCON1<F3BP_2>
extern volatile __bit                   F3BP_2              __at(0x6F0E);	// @ (0xDE1 * 8 + 6)
#define                                 F3BP_2_bit          _BIT_ACCESS(RXFBCON1,6)
// RXFBCON1<F3BP_3>
extern volatile __bit                   F3BP_3              __at(0x6F0F);	// @ (0xDE1 * 8 + 7)
#define                                 F3BP_3_bit          _BIT_ACCESS(RXFBCON1,7)
// RXFBCON2<F4BP_0>
extern volatile __bit                   F4BP_0              __at(0x6F10);	// @ (0xDE2 * 8 + 0)
#define                                 F4BP_0_bit          _BIT_ACCESS(RXFBCON2,0)
// RXFBCON2<F4BP_01>
extern volatile __bit                   F4BP_01             __at(0x6F10);	// @ (0xDE2 * 8 + 0)
#define                                 F4BP_01_bit         _BIT_ACCESS(RXFBCON2,0)
// RXFBCON2<F4BP_1>
extern volatile __bit                   F4BP_1              __at(0x6F11);	// @ (0xDE2 * 8 + 1)
#define                                 F4BP_1_bit          _BIT_ACCESS(RXFBCON2,1)
// RXFBCON2<F4BP_2>
extern volatile __bit                   F4BP_2              __at(0x6F12);	// @ (0xDE2 * 8 + 2)
#define                                 F4BP_2_bit          _BIT_ACCESS(RXFBCON2,2)
// RXFBCON2<F4BP_3>
extern volatile __bit                   F4BP_3              __at(0x6F13);	// @ (0xDE2 * 8 + 3)
#define                                 F4BP_3_bit          _BIT_ACCESS(RXFBCON2,3)
// RXFBCON2<F5BP_0>
extern volatile __bit                   F5BP_0              __at(0x6F14);	// @ (0xDE2 * 8 + 4)
#define                                 F5BP_0_bit          _BIT_ACCESS(RXFBCON2,4)
// RXFBCON2<F5BP_1>
extern volatile __bit                   F5BP_1              __at(0x6F15);	// @ (0xDE2 * 8 + 5)
#define                                 F5BP_1_bit          _BIT_ACCESS(RXFBCON2,5)
// RXFBCON2<F5BP_2>
extern volatile __bit                   F5BP_2              __at(0x6F16);	// @ (0xDE2 * 8 + 6)
#define                                 F5BP_2_bit          _BIT_ACCESS(RXFBCON2,6)
// RXFBCON2<F5BP_3>
extern volatile __bit                   F5BP_3              __at(0x6F17);	// @ (0xDE2 * 8 + 7)
#define                                 F5BP_3_bit          _BIT_ACCESS(RXFBCON2,7)
// RXFBCON3<F6BP_0>
extern volatile __bit                   F6BP_0              __at(0x6F18);	// @ (0xDE3 * 8 + 0)
#define                                 F6BP_0_bit          _BIT_ACCESS(RXFBCON3,0)
// RXFBCON3<F6BP_01>
extern volatile __bit                   F6BP_01             __at(0x6F18);	// @ (0xDE3 * 8 + 0)
#define                                 F6BP_01_bit         _BIT_ACCESS(RXFBCON3,0)
// RXFBCON3<F6BP_1>
extern volatile __bit                   F6BP_1              __at(0x6F19);	// @ (0xDE3 * 8 + 1)
#define                                 F6BP_1_bit          _BIT_ACCESS(RXFBCON3,1)
// RXFBCON3<F6BP_2>
extern volatile __bit                   F6BP_2              __at(0x6F1A);	// @ (0xDE3 * 8 + 2)
#define                                 F6BP_2_bit          _BIT_ACCESS(RXFBCON3,2)
// RXFBCON3<F6BP_3>
extern volatile __bit                   F6BP_3              __at(0x6F1B);	// @ (0xDE3 * 8 + 3)
#define                                 F6BP_3_bit          _BIT_ACCESS(RXFBCON3,3)
// RXFBCON3<F7BP_0>
extern volatile __bit                   F7BP_0              __at(0x6F1C);	// @ (0xDE3 * 8 + 4)
#define                                 F7BP_0_bit          _BIT_ACCESS(RXFBCON3,4)
// RXFBCON3<F7BP_1>
extern volatile __bit                   F7BP_1              __at(0x6F1D);	// @ (0xDE3 * 8 + 5)
#define                                 F7BP_1_bit          _BIT_ACCESS(RXFBCON3,5)
// RXFBCON3<F7BP_2>
extern volatile __bit                   F7BP_2              __at(0x6F1E);	// @ (0xDE3 * 8 + 6)
#define                                 F7BP_2_bit          _BIT_ACCESS(RXFBCON3,6)
// RXFBCON3<F7BP_3>
extern volatile __bit                   F7BP_3              __at(0x6F1F);	// @ (0xDE3 * 8 + 7)
#define                                 F7BP_3_bit          _BIT_ACCESS(RXFBCON3,7)
// RXFBCON4<F8BP_0>
extern volatile __bit                   F8BP_0              __at(0x6F20);	// @ (0xDE4 * 8 + 0)
#define                                 F8BP_0_bit          _BIT_ACCESS(RXFBCON4,0)
// RXFBCON4<F8BP_01>
extern volatile __bit                   F8BP_01             __at(0x6F20);	// @ (0xDE4 * 8 + 0)
#define                                 F8BP_01_bit         _BIT_ACCESS(RXFBCON4,0)
// RXFBCON4<F8BP_1>
extern volatile __bit                   F8BP_1              __at(0x6F21);	// @ (0xDE4 * 8 + 1)
#define                                 F8BP_1_bit          _BIT_ACCESS(RXFBCON4,1)
// RXFBCON4<F8BP_2>
extern volatile __bit                   F8BP_2              __at(0x6F22);	// @ (0xDE4 * 8 + 2)
#define                                 F8BP_2_bit          _BIT_ACCESS(RXFBCON4,2)
// RXFBCON4<F8BP_3>
extern volatile __bit                   F8BP_3              __at(0x6F23);	// @ (0xDE4 * 8 + 3)
#define                                 F8BP_3_bit          _BIT_ACCESS(RXFBCON4,3)
// RXFBCON4<F9BP_0>
extern volatile __bit                   F9BP_0              __at(0x6F24);	// @ (0xDE4 * 8 + 4)
#define                                 F9BP_0_bit          _BIT_ACCESS(RXFBCON4,4)
// RXFBCON4<F9BP_1>
extern volatile __bit                   F9BP_1              __at(0x6F25);	// @ (0xDE4 * 8 + 5)
#define                                 F9BP_1_bit          _BIT_ACCESS(RXFBCON4,5)
// RXFBCON4<F9BP_2>
extern volatile __bit                   F9BP_2              __at(0x6F26);	// @ (0xDE4 * 8 + 6)
#define                                 F9BP_2_bit          _BIT_ACCESS(RXFBCON4,6)
// RXFBCON4<F9BP_3>
extern volatile __bit                   F9BP_3              __at(0x6F27);	// @ (0xDE4 * 8 + 7)
#define                                 F9BP_3_bit          _BIT_ACCESS(RXFBCON4,7)
// RCSTA<FERR>
extern volatile __bit                   FERR                __at(0x7D5A);	// @ (0xFAB * 8 + 2)
#define                                 FERR_bit            _BIT_ACCESS(RCSTA,2)
// RCSTA<FERR1>
extern volatile __bit                   FERR1               __at(0x7D5A);	// @ (0xFAB * 8 + 2)
#define                                 FERR1_bit           _BIT_ACCESS(RCSTA,2)
// COMSTAT<FIFOEMPTY>
extern volatile __bit                   FIFOEMPTY           __at(0x7BA7);	// @ (0xF74 * 8 + 7)
#define                                 FIFOEMPTY_bit       _BIT_ACCESS(COMSTAT,7)
// ECANCON<FIFOWM>
extern volatile __bit                   FIFOWM              __at(0x7BBD);	// @ (0xF77 * 8 + 5)
#define                                 FIFOWM_bit          _BIT_ACCESS(ECANCON,5)
// PIE3<FIFOWMIE>
extern volatile __bit                   FIFOWMIE            __at(0x7D18);	// @ (0xFA3 * 8 + 0)
#define                                 FIFOWMIE_bit        _BIT_ACCESS(PIE3,0)
// PIR3<FIFOWMIF>
extern volatile __bit                   FIFOWMIF            __at(0x7D20);	// @ (0xFA4 * 8 + 0)
#define                                 FIFOWMIF_bit        _BIT_ACCESS(PIR3,0)
// IPR3<FIFOWMIP>
extern volatile __bit                   FIFOWMIP            __at(0x7D28);	// @ (0xFA5 * 8 + 0)
#define                                 FIFOWMIP_bit        _BIT_ACCESS(IPR3,0)
// MSEL0<FIL0_0>
extern volatile __bit                   FIL0_0              __at(0x6F80);	// @ (0xDF0 * 8 + 0)
#define                                 FIL0_0_bit          _BIT_ACCESS(MSEL0,0)
// MSEL0<FIL0_1>
extern volatile __bit                   FIL0_1              __at(0x6F81);	// @ (0xDF0 * 8 + 1)
#define                                 FIL0_1_bit          _BIT_ACCESS(MSEL0,1)
// MSEL2<FIL10_0>
extern volatile __bit                   FIL10_0             __at(0x6F94);	// @ (0xDF2 * 8 + 4)
#define                                 FIL10_0_bit         _BIT_ACCESS(MSEL2,4)
// MSEL2<FIL10_1>
extern volatile __bit                   FIL10_1             __at(0x6F95);	// @ (0xDF2 * 8 + 5)
#define                                 FIL10_1_bit         _BIT_ACCESS(MSEL2,5)
// MSEL2<FIL11_0>
extern volatile __bit                   FIL11_0             __at(0x6F96);	// @ (0xDF2 * 8 + 6)
#define                                 FIL11_0_bit         _BIT_ACCESS(MSEL2,6)
// MSEL2<FIL11_1>
extern volatile __bit                   FIL11_1             __at(0x6F97);	// @ (0xDF2 * 8 + 7)
#define                                 FIL11_1_bit         _BIT_ACCESS(MSEL2,7)
// MSEL3<FIL12_0>
extern volatile __bit                   FIL12_0             __at(0x6F98);	// @ (0xDF3 * 8 + 0)
#define                                 FIL12_0_bit         _BIT_ACCESS(MSEL3,0)
// MSEL3<FIL12_1>
extern volatile __bit                   FIL12_1             __at(0x6F99);	// @ (0xDF3 * 8 + 1)
#define                                 FIL12_1_bit         _BIT_ACCESS(MSEL3,1)
// MSEL3<FIL13_0>
extern volatile __bit                   FIL13_0             __at(0x6F9A);	// @ (0xDF3 * 8 + 2)
#define                                 FIL13_0_bit         _BIT_ACCESS(MSEL3,2)
// MSEL3<FIL13_1>
extern volatile __bit                   FIL13_1             __at(0x6F9B);	// @ (0xDF3 * 8 + 3)
#define                                 FIL13_1_bit         _BIT_ACCESS(MSEL3,3)
// MSEL3<FIL14_0>
extern volatile __bit                   FIL14_0             __at(0x6F9C);	// @ (0xDF3 * 8 + 4)
#define                                 FIL14_0_bit         _BIT_ACCESS(MSEL3,4)
// MSEL3<FIL14_1>
extern volatile __bit                   FIL14_1             __at(0x6F9D);	// @ (0xDF3 * 8 + 5)
#define                                 FIL14_1_bit         _BIT_ACCESS(MSEL3,5)
// MSEL3<FIL15_0>
extern volatile __bit                   FIL15_0             __at(0x6F9E);	// @ (0xDF3 * 8 + 6)
#define                                 FIL15_0_bit         _BIT_ACCESS(MSEL3,6)
// MSEL3<FIL15_1>
extern volatile __bit                   FIL15_1             __at(0x6F9F);	// @ (0xDF3 * 8 + 7)
#define                                 FIL15_1_bit         _BIT_ACCESS(MSEL3,7)
// MSEL0<FIL1_0>
extern volatile __bit                   FIL1_0              __at(0x6F82);	// @ (0xDF0 * 8 + 2)
#define                                 FIL1_0_bit          _BIT_ACCESS(MSEL0,2)
// MSEL0<FIL1_1>
extern volatile __bit                   FIL1_1              __at(0x6F83);	// @ (0xDF0 * 8 + 3)
#define                                 FIL1_1_bit          _BIT_ACCESS(MSEL0,3)
// MSEL0<FIL2_0>
extern volatile __bit                   FIL2_0              __at(0x6F84);	// @ (0xDF0 * 8 + 4)
#define                                 FIL2_0_bit          _BIT_ACCESS(MSEL0,4)
// MSEL0<FIL2_1>
extern volatile __bit                   FIL2_1              __at(0x6F85);	// @ (0xDF0 * 8 + 5)
#define                                 FIL2_1_bit          _BIT_ACCESS(MSEL0,5)
// MSEL0<FIL3_0>
extern volatile __bit                   FIL3_0              __at(0x6F86);	// @ (0xDF0 * 8 + 6)
#define                                 FIL3_0_bit          _BIT_ACCESS(MSEL0,6)
// MSEL0<FIL3_1>
extern volatile __bit                   FIL3_1              __at(0x6F87);	// @ (0xDF0 * 8 + 7)
#define                                 FIL3_1_bit          _BIT_ACCESS(MSEL0,7)
// MSEL1<FIL4_0>
extern volatile __bit                   FIL4_0              __at(0x6F88);	// @ (0xDF1 * 8 + 0)
#define                                 FIL4_0_bit          _BIT_ACCESS(MSEL1,0)
// MSEL1<FIL4_1>
extern volatile __bit                   FIL4_1              __at(0x6F89);	// @ (0xDF1 * 8 + 1)
#define                                 FIL4_1_bit          _BIT_ACCESS(MSEL1,1)
// MSEL1<FIL5_0>
extern volatile __bit                   FIL5_0              __at(0x6F8A);	// @ (0xDF1 * 8 + 2)
#define                                 FIL5_0_bit          _BIT_ACCESS(MSEL1,2)
// MSEL1<FIL5_1>
extern volatile __bit                   FIL5_1              __at(0x6F8B);	// @ (0xDF1 * 8 + 3)
#define                                 FIL5_1_bit          _BIT_ACCESS(MSEL1,3)
// MSEL1<FIL6_0>
extern volatile __bit                   FIL6_0              __at(0x6F8C);	// @ (0xDF1 * 8 + 4)
#define                                 FIL6_0_bit          _BIT_ACCESS(MSEL1,4)
// MSEL1<FIL6_1>
extern volatile __bit                   FIL6_1              __at(0x6F8D);	// @ (0xDF1 * 8 + 5)
#define                                 FIL6_1_bit          _BIT_ACCESS(MSEL1,5)
// MSEL1<FIL7_0>
extern volatile __bit                   FIL7_0              __at(0x6F8E);	// @ (0xDF1 * 8 + 6)
#define                                 FIL7_0_bit          _BIT_ACCESS(MSEL1,6)
// MSEL1<FIL7_1>
extern volatile __bit                   FIL7_1              __at(0x6F8F);	// @ (0xDF1 * 8 + 7)
#define                                 FIL7_1_bit          _BIT_ACCESS(MSEL1,7)
// MSEL2<FIL8_0>
extern volatile __bit                   FIL8_0              __at(0x6F90);	// @ (0xDF2 * 8 + 0)
#define                                 FIL8_0_bit          _BIT_ACCESS(MSEL2,0)
// MSEL2<FIL8_1>
extern volatile __bit                   FIL8_1              __at(0x6F91);	// @ (0xDF2 * 8 + 1)
#define                                 FIL8_1_bit          _BIT_ACCESS(MSEL2,1)
// MSEL2<FIL9_0>
extern volatile __bit                   FIL9_0              __at(0x6F92);	// @ (0xDF2 * 8 + 2)
#define                                 FIL9_0_bit          _BIT_ACCESS(MSEL2,2)
// MSEL2<FIL9_1>
extern volatile __bit                   FIL9_1              __at(0x6F93);	// @ (0xDF2 * 8 + 3)
#define                                 FIL9_1_bit          _BIT_ACCESS(MSEL2,3)
// CANCON<FP0>
extern volatile __bit _DEPRECATED       FP0                 __at(0x7B78);	// @ (0xF6F * 8 + 0)
#define                                 FP0_bit             _BIT_ACCESS(CANCON,0)
// CANCON<FP1>
extern volatile __bit                   FP1                 __at(0x7B79);	// @ (0xF6F * 8 + 1)
#define                                 FP1_bit             _BIT_ACCESS(CANCON,1)
// CANCON<FP2>
extern volatile __bit                   FP2                 __at(0x7B7A);	// @ (0xF6F * 8 + 2)
#define                                 FP2_bit             _BIT_ACCESS(CANCON,2)
// CANCON<FP3>
extern volatile __bit                   FP3                 __at(0x7B7B);	// @ (0xF6F * 8 + 3)
#define                                 FP3_bit             _BIT_ACCESS(CANCON,3)
// EECON1<FREE>
extern volatile __bit                   FREE                __at(0x7D34);	// @ (0xFA6 * 8 + 4)
#define                                 FREE_bit            _BIT_ACCESS(EECON1,4)
// SSPCON2<GCEN>
extern volatile __bit                   GCEN                __at(0x7E2F);	// @ (0xFC5 * 8 + 7)
#define                                 GCEN_bit            _BIT_ACCESS(SSPCON2,7)
// INTCON<GIE>
extern volatile __bit                   GIE                 __at(0x7F97);	// @ (0xFF2 * 8 + 7)
#define                                 GIE_bit             _BIT_ACCESS(INTCON,7)
// INTCON<GIEH>
extern volatile __bit                   GIEH                __at(0x7F97);	// @ (0xFF2 * 8 + 7)
#define                                 GIEH_bit            _BIT_ACCESS(INTCON,7)
// INTCON<GIEL>
extern volatile __bit                   GIEL                __at(0x7F96);	// @ (0xFF2 * 8 + 6)
#define                                 GIEL_bit            _BIT_ACCESS(INTCON,6)
// INTCON<GIE_GIEH>
extern volatile __bit                   GIE_GIEH            __at(0x7F97);	// @ (0xFF2 * 8 + 7)
#define                                 GIE_GIEH_bit        _BIT_ACCESS(INTCON,7)
// ADCON0<GO>
extern volatile __bit                   GO                  __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 GO_bit              _BIT_ACCESS(ADCON0,1)
// ADCON0<GODONE>
extern volatile __bit                   GODONE              __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 GODONE_bit          _BIT_ACCESS(ADCON0,1)
// ADCON0<GO_DONE>
extern volatile __bit                   GO_DONE             __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 GO_DONE_bit         _BIT_ACCESS(ADCON0,1)
// ADCON0<GO_NOT_DONE>
extern volatile __bit                   GO_NOT_DONE         __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 GO_NOT_DONE_bit     _BIT_ACCESS(ADCON0,1)
// ADCON0<GO_nDONE>
extern volatile __bit                   GO_nDONE            __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 GO_nDONE_bit        _BIT_ACCESS(ADCON0,1)
// SSPSTAT<I2C_DAT>
extern volatile __bit                   I2C_DAT             __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 I2C_DAT_bit         _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<I2C_READ>
extern volatile __bit                   I2C_READ            __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 I2C_READ_bit        _BIT_ACCESS(SSPSTAT,2)
// SSPSTAT<I2C_START>
extern volatile __bit                   I2C_START           __at(0x7E3B);	// @ (0xFC7 * 8 + 3)
#define                                 I2C_START_bit       _BIT_ACCESS(SSPSTAT,3)
// SSPSTAT<I2C_STOP>
extern volatile __bit                   I2C_STOP            __at(0x7E3C);	// @ (0xFC7 * 8 + 4)
#define                                 I2C_STOP_bit        _BIT_ACCESS(SSPSTAT,4)
// PSPCON<IBF>
extern volatile __bit                   IBF                 __at(0x7D87);	// @ (0xFB0 * 8 + 7)
#define                                 IBF_bit             _BIT_ACCESS(PSPCON,7)
// PSPCON<IBOV>
extern volatile __bit                   IBOV                __at(0x7D85);	// @ (0xFB0 * 8 + 5)
#define                                 IBOV_bit            _BIT_ACCESS(PSPCON,5)
// CANSTAT<ICODE0>
extern volatile __bit                   ICODE0              __at(0x7B71);	// @ (0xF6E * 8 + 1)
#define                                 ICODE0_bit          _BIT_ACCESS(CANSTAT,1)
// CANSTAT<ICODE1>
extern volatile __bit                   ICODE1              __at(0x7B72);	// @ (0xF6E * 8 + 2)
#define                                 ICODE1_bit          _BIT_ACCESS(CANSTAT,2)
// CANSTAT<ICODE2>
extern volatile __bit                   ICODE2              __at(0x7B73);	// @ (0xF6E * 8 + 3)
#define                                 ICODE2_bit          _BIT_ACCESS(CANSTAT,3)
// PORTB<INT0>
extern volatile __bit                   INT0                __at(0x7C08);	// @ (0xF81 * 8 + 0)
#define                                 INT0_bit            _BIT_ACCESS(PORTB,0)
// INTCON<INT0E>
extern volatile __bit                   INT0E               __at(0x7F94);	// @ (0xFF2 * 8 + 4)
#define                                 INT0E_bit           _BIT_ACCESS(INTCON,4)
// INTCON<INT0F>
extern volatile __bit                   INT0F               __at(0x7F91);	// @ (0xFF2 * 8 + 1)
#define                                 INT0F_bit           _BIT_ACCESS(INTCON,1)
// INTCON<INT0IE>
extern volatile __bit                   INT0IE              __at(0x7F94);	// @ (0xFF2 * 8 + 4)
#define                                 INT0IE_bit          _BIT_ACCESS(INTCON,4)
// INTCON<INT0IF>
extern volatile __bit                   INT0IF              __at(0x7F91);	// @ (0xFF2 * 8 + 1)
#define                                 INT0IF_bit          _BIT_ACCESS(INTCON,1)
// PORTB<INT1>
extern volatile __bit                   INT1                __at(0x7C09);	// @ (0xF81 * 8 + 1)
#define                                 INT1_bit            _BIT_ACCESS(PORTB,1)
// INTCON3<INT1E>
extern volatile __bit                   INT1E               __at(0x7F83);	// @ (0xFF0 * 8 + 3)
#define                                 INT1E_bit           _BIT_ACCESS(INTCON3,3)
// INTCON3<INT1F>
extern volatile __bit                   INT1F               __at(0x7F80);	// @ (0xFF0 * 8 + 0)
#define                                 INT1F_bit           _BIT_ACCESS(INTCON3,0)
// INTCON3<INT1IE>
extern volatile __bit                   INT1IE              __at(0x7F83);	// @ (0xFF0 * 8 + 3)
#define                                 INT1IE_bit          _BIT_ACCESS(INTCON3,3)
// INTCON3<INT1IF>
extern volatile __bit                   INT1IF              __at(0x7F80);	// @ (0xFF0 * 8 + 0)
#define                                 INT1IF_bit          _BIT_ACCESS(INTCON3,0)
// INTCON3<INT1IP>
extern volatile __bit                   INT1IP              __at(0x7F86);	// @ (0xFF0 * 8 + 6)
#define                                 INT1IP_bit          _BIT_ACCESS(INTCON3,6)
// INTCON3<INT1P>
extern volatile __bit                   INT1P               __at(0x7F86);	// @ (0xFF0 * 8 + 6)
#define                                 INT1P_bit           _BIT_ACCESS(INTCON3,6)
// PORTB<INT2>
extern volatile __bit                   INT2                __at(0x7C0A);	// @ (0xF81 * 8 + 2)
#define                                 INT2_bit            _BIT_ACCESS(PORTB,2)
// INTCON3<INT2E>
extern volatile __bit                   INT2E               __at(0x7F84);	// @ (0xFF0 * 8 + 4)
#define                                 INT2E_bit           _BIT_ACCESS(INTCON3,4)
// INTCON3<INT2F>
extern volatile __bit                   INT2F               __at(0x7F81);	// @ (0xFF0 * 8 + 1)
#define                                 INT2F_bit           _BIT_ACCESS(INTCON3,1)
// INTCON3<INT2IE>
extern volatile __bit                   INT2IE              __at(0x7F84);	// @ (0xFF0 * 8 + 4)
#define                                 INT2IE_bit          _BIT_ACCESS(INTCON3,4)
// INTCON3<INT2IF>
extern volatile __bit                   INT2IF              __at(0x7F81);	// @ (0xFF0 * 8 + 1)
#define                                 INT2IF_bit          _BIT_ACCESS(INTCON3,1)
// INTCON3<INT2IP>
extern volatile __bit                   INT2IP              __at(0x7F87);	// @ (0xFF0 * 8 + 7)
#define                                 INT2IP_bit          _BIT_ACCESS(INTCON3,7)
// INTCON3<INT2P>
extern volatile __bit                   INT2P               __at(0x7F87);	// @ (0xFF0 * 8 + 7)
#define                                 INT2P_bit           _BIT_ACCESS(INTCON3,7)
// PORTB<INT3>
extern volatile __bit                   INT3                __at(0x7C0B);	// @ (0xF81 * 8 + 3)
#define                                 INT3_bit            _BIT_ACCESS(PORTB,3)
// INTCON3<INT3E>
extern volatile __bit                   INT3E               __at(0x7F85);	// @ (0xFF0 * 8 + 5)
#define                                 INT3E_bit           _BIT_ACCESS(INTCON3,5)
// INTCON3<INT3F>
extern volatile __bit                   INT3F               __at(0x7F82);	// @ (0xFF0 * 8 + 2)
#define                                 INT3F_bit           _BIT_ACCESS(INTCON3,2)
// INTCON3<INT3IE>
extern volatile __bit                   INT3IE              __at(0x7F85);	// @ (0xFF0 * 8 + 5)
#define                                 INT3IE_bit          _BIT_ACCESS(INTCON3,5)
// INTCON3<INT3IF>
extern volatile __bit                   INT3IF              __at(0x7F82);	// @ (0xFF0 * 8 + 2)
#define                                 INT3IF_bit          _BIT_ACCESS(INTCON3,2)
// INTCON2<INT3IP>
extern volatile __bit                   INT3IP              __at(0x7F89);	// @ (0xFF1 * 8 + 1)
#define                                 INT3IP_bit          _BIT_ACCESS(INTCON2,1)
// INTCON2<INT3P>
extern volatile __bit                   INT3P               __at(0x7F89);	// @ (0xFF1 * 8 + 1)
#define                                 INT3P_bit           _BIT_ACCESS(INTCON2,1)
// INTCON2<INTEDG0>
extern volatile __bit                   INTEDG0             __at(0x7F8E);	// @ (0xFF1 * 8 + 6)
#define                                 INTEDG0_bit         _BIT_ACCESS(INTCON2,6)
// INTCON2<INTEDG1>
extern volatile __bit                   INTEDG1             __at(0x7F8D);	// @ (0xFF1 * 8 + 5)
#define                                 INTEDG1_bit         _BIT_ACCESS(INTCON2,5)
// INTCON2<INTEDG2>
extern volatile __bit                   INTEDG2             __at(0x7F8C);	// @ (0xFF1 * 8 + 4)
#define                                 INTEDG2_bit         _BIT_ACCESS(INTCON2,4)
// INTCON2<INTEDG3>
extern volatile __bit                   INTEDG3             __at(0x7F8B);	// @ (0xFF1 * 8 + 3)
#define                                 INTEDG3_bit         _BIT_ACCESS(INTCON2,3)
// RCON<IPEN>
extern volatile __bit                   IPEN                __at(0x7E87);	// @ (0xFD0 * 8 + 7)
#define                                 IPEN_bit            _BIT_ACCESS(RCON,7)
// LVDCON<IRVST>
extern volatile __bit                   IRVST               __at(0x7E95);	// @ (0xFD2 * 8 + 5)
#define                                 IRVST_bit           _BIT_ACCESS(LVDCON,5)
// PIE3<IRXIE>
extern volatile __bit                   IRXIE               __at(0x7D1F);	// @ (0xFA3 * 8 + 7)
#define                                 IRXIE_bit           _BIT_ACCESS(PIE3,7)
// PIR3<IRXIF>
extern volatile __bit                   IRXIF               __at(0x7D27);	// @ (0xFA4 * 8 + 7)
#define                                 IRXIF_bit           _BIT_ACCESS(PIR3,7)
// IPR3<IRXIP>
extern volatile __bit                   IRXIP               __at(0x7D2F);	// @ (0xFA5 * 8 + 7)
#define                                 IRXIP_bit           _BIT_ACCESS(IPR3,7)
// RXB0CON<JTOFF>
extern volatile __bit                   JTOFF               __at(0x7B01);	// @ (0xF60 * 8 + 1)
#define                                 JTOFF_bit           _BIT_ACCESS(RXB0CON,1)
// RXB0CON<JTOFF_FILHIT1>
extern volatile __bit                   JTOFF_FILHIT1       __at(0x7B01);	// @ (0xF60 * 8 + 1)
#define                                 JTOFF_FILHIT1_bit   _BIT_ACCESS(RXB0CON,1)
// PORTB<KBI0>
extern volatile __bit                   KBI0                __at(0x7C0C);	// @ (0xF81 * 8 + 4)
#define                                 KBI0_bit            _BIT_ACCESS(PORTB,4)
// PORTB<KBI1>
extern volatile __bit                   KBI1                __at(0x7C0D);	// @ (0xF81 * 8 + 5)
#define                                 KBI1_bit            _BIT_ACCESS(PORTB,5)
// PORTB<KBI2>
extern volatile __bit                   KBI2                __at(0x7C0E);	// @ (0xF81 * 8 + 6)
#define                                 KBI2_bit            _BIT_ACCESS(PORTB,6)
// PORTB<KBI3>
extern volatile __bit                   KBI3                __at(0x7C0F);	// @ (0xF81 * 8 + 7)
#define                                 KBI3_bit            _BIT_ACCESS(PORTB,7)
// LATA<LA0>
extern volatile __bit                   LA0                 __at(0x7C48);	// @ (0xF89 * 8 + 0)
#define                                 LA0_bit             _BIT_ACCESS(LATA,0)
// LATA<LA1>
extern volatile __bit                   LA1                 __at(0x7C49);	// @ (0xF89 * 8 + 1)
#define                                 LA1_bit             _BIT_ACCESS(LATA,1)
// LATA<LA2>
extern volatile __bit                   LA2                 __at(0x7C4A);	// @ (0xF89 * 8 + 2)
#define                                 LA2_bit             _BIT_ACCESS(LATA,2)
// LATA<LA3>
extern volatile __bit                   LA3                 __at(0x7C4B);	// @ (0xF89 * 8 + 3)
#define                                 LA3_bit             _BIT_ACCESS(LATA,3)
// LATA<LA4>
extern volatile __bit                   LA4                 __at(0x7C4C);	// @ (0xF89 * 8 + 4)
#define                                 LA4_bit             _BIT_ACCESS(LATA,4)
// LATA<LA5>
extern volatile __bit                   LA5                 __at(0x7C4D);	// @ (0xF89 * 8 + 5)
#define                                 LA5_bit             _BIT_ACCESS(LATA,5)
// LATA<LA6>
extern volatile __bit                   LA6                 __at(0x7C4E);	// @ (0xF89 * 8 + 6)
#define                                 LA6_bit             _BIT_ACCESS(LATA,6)
// LATA<LATA0>
extern volatile __bit                   LATA0               __at(0x7C48);	// @ (0xF89 * 8 + 0)
#define                                 LATA0_bit           _BIT_ACCESS(LATA,0)
// LATA<LATA1>
extern volatile __bit                   LATA1               __at(0x7C49);	// @ (0xF89 * 8 + 1)
#define                                 LATA1_bit           _BIT_ACCESS(LATA,1)
// LATA<LATA2>
extern volatile __bit                   LATA2               __at(0x7C4A);	// @ (0xF89 * 8 + 2)
#define                                 LATA2_bit           _BIT_ACCESS(LATA,2)
// LATA<LATA3>
extern volatile __bit                   LATA3               __at(0x7C4B);	// @ (0xF89 * 8 + 3)
#define                                 LATA3_bit           _BIT_ACCESS(LATA,3)
// LATA<LATA4>
extern volatile __bit                   LATA4               __at(0x7C4C);	// @ (0xF89 * 8 + 4)
#define                                 LATA4_bit           _BIT_ACCESS(LATA,4)
// LATA<LATA5>
extern volatile __bit                   LATA5               __at(0x7C4D);	// @ (0xF89 * 8 + 5)
#define                                 LATA5_bit           _BIT_ACCESS(LATA,5)
// LATA<LATA6>
extern volatile __bit                   LATA6               __at(0x7C4E);	// @ (0xF89 * 8 + 6)
#define                                 LATA6_bit           _BIT_ACCESS(LATA,6)
// LATB<LATB0>
extern volatile __bit                   LATB0               __at(0x7C50);	// @ (0xF8A * 8 + 0)
#define                                 LATB0_bit           _BIT_ACCESS(LATB,0)
// LATB<LATB1>
extern volatile __bit                   LATB1               __at(0x7C51);	// @ (0xF8A * 8 + 1)
#define                                 LATB1_bit           _BIT_ACCESS(LATB,1)
// LATB<LATB2>
extern volatile __bit                   LATB2               __at(0x7C52);	// @ (0xF8A * 8 + 2)
#define                                 LATB2_bit           _BIT_ACCESS(LATB,2)
// LATB<LATB3>
extern volatile __bit                   LATB3               __at(0x7C53);	// @ (0xF8A * 8 + 3)
#define                                 LATB3_bit           _BIT_ACCESS(LATB,3)
// LATB<LATB4>
extern volatile __bit                   LATB4               __at(0x7C54);	// @ (0xF8A * 8 + 4)
#define                                 LATB4_bit           _BIT_ACCESS(LATB,4)
// LATB<LATB5>
extern volatile __bit                   LATB5               __at(0x7C55);	// @ (0xF8A * 8 + 5)
#define                                 LATB5_bit           _BIT_ACCESS(LATB,5)
// LATB<LATB6>
extern volatile __bit                   LATB6               __at(0x7C56);	// @ (0xF8A * 8 + 6)
#define                                 LATB6_bit           _BIT_ACCESS(LATB,6)
// LATB<LATB7>
extern volatile __bit                   LATB7               __at(0x7C57);	// @ (0xF8A * 8 + 7)
#define                                 LATB7_bit           _BIT_ACCESS(LATB,7)
// LATC<LATC0>
extern volatile __bit                   LATC0               __at(0x7C58);	// @ (0xF8B * 8 + 0)
#define                                 LATC0_bit           _BIT_ACCESS(LATC,0)
// LATC<LATC1>
extern volatile __bit                   LATC1               __at(0x7C59);	// @ (0xF8B * 8 + 1)
#define                                 LATC1_bit           _BIT_ACCESS(LATC,1)
// LATC<LATC2>
extern volatile __bit                   LATC2               __at(0x7C5A);	// @ (0xF8B * 8 + 2)
#define                                 LATC2_bit           _BIT_ACCESS(LATC,2)
// LATC<LATC3>
extern volatile __bit                   LATC3               __at(0x7C5B);	// @ (0xF8B * 8 + 3)
#define                                 LATC3_bit           _BIT_ACCESS(LATC,3)
// LATC<LATC4>
extern volatile __bit                   LATC4               __at(0x7C5C);	// @ (0xF8B * 8 + 4)
#define                                 LATC4_bit           _BIT_ACCESS(LATC,4)
// LATC<LATC5>
extern volatile __bit                   LATC5               __at(0x7C5D);	// @ (0xF8B * 8 + 5)
#define                                 LATC5_bit           _BIT_ACCESS(LATC,5)
// LATC<LATC6>
extern volatile __bit                   LATC6               __at(0x7C5E);	// @ (0xF8B * 8 + 6)
#define                                 LATC6_bit           _BIT_ACCESS(LATC,6)
// LATC<LATC7>
extern volatile __bit                   LATC7               __at(0x7C5F);	// @ (0xF8B * 8 + 7)
#define                                 LATC7_bit           _BIT_ACCESS(LATC,7)
// LATD<LATD0>
extern volatile __bit                   LATD0               __at(0x7C60);	// @ (0xF8C * 8 + 0)
#define                                 LATD0_bit           _BIT_ACCESS(LATD,0)
// LATD<LATD1>
extern volatile __bit                   LATD1               __at(0x7C61);	// @ (0xF8C * 8 + 1)
#define                                 LATD1_bit           _BIT_ACCESS(LATD,1)
// LATD<LATD2>
extern volatile __bit                   LATD2               __at(0x7C62);	// @ (0xF8C * 8 + 2)
#define                                 LATD2_bit           _BIT_ACCESS(LATD,2)
// LATD<LATD3>
extern volatile __bit                   LATD3               __at(0x7C63);	// @ (0xF8C * 8 + 3)
#define                                 LATD3_bit           _BIT_ACCESS(LATD,3)
// LATD<LATD4>
extern volatile __bit                   LATD4               __at(0x7C64);	// @ (0xF8C * 8 + 4)
#define                                 LATD4_bit           _BIT_ACCESS(LATD,4)
// LATD<LATD5>
extern volatile __bit                   LATD5               __at(0x7C65);	// @ (0xF8C * 8 + 5)
#define                                 LATD5_bit           _BIT_ACCESS(LATD,5)
// LATD<LATD6>
extern volatile __bit                   LATD6               __at(0x7C66);	// @ (0xF8C * 8 + 6)
#define                                 LATD6_bit           _BIT_ACCESS(LATD,6)
// LATD<LATD7>
extern volatile __bit                   LATD7               __at(0x7C67);	// @ (0xF8C * 8 + 7)
#define                                 LATD7_bit           _BIT_ACCESS(LATD,7)
// LATE<LATE0>
extern volatile __bit                   LATE0               __at(0x7C68);	// @ (0xF8D * 8 + 0)
#define                                 LATE0_bit           _BIT_ACCESS(LATE,0)
// LATE<LATE1>
extern volatile __bit                   LATE1               __at(0x7C69);	// @ (0xF8D * 8 + 1)
#define                                 LATE1_bit           _BIT_ACCESS(LATE,1)
// LATE<LATE2>
extern volatile __bit                   LATE2               __at(0x7C6A);	// @ (0xF8D * 8 + 2)
#define                                 LATE2_bit           _BIT_ACCESS(LATE,2)
// LATE<LATE3>
extern volatile __bit                   LATE3               __at(0x7C6B);	// @ (0xF8D * 8 + 3)
#define                                 LATE3_bit           _BIT_ACCESS(LATE,3)
// LATE<LATE4>
extern volatile __bit                   LATE4               __at(0x7C6C);	// @ (0xF8D * 8 + 4)
#define                                 LATE4_bit           _BIT_ACCESS(LATE,4)
// LATE<LATE5>
extern volatile __bit                   LATE5               __at(0x7C6D);	// @ (0xF8D * 8 + 5)
#define                                 LATE5_bit           _BIT_ACCESS(LATE,5)
// LATE<LATE6>
extern volatile __bit                   LATE6               __at(0x7C6E);	// @ (0xF8D * 8 + 6)
#define                                 LATE6_bit           _BIT_ACCESS(LATE,6)
// LATE<LATE7>
extern volatile __bit                   LATE7               __at(0x7C6F);	// @ (0xF8D * 8 + 7)
#define                                 LATE7_bit           _BIT_ACCESS(LATE,7)
// LATF<LATF0>
extern volatile __bit                   LATF0               __at(0x7C70);	// @ (0xF8E * 8 + 0)
#define                                 LATF0_bit           _BIT_ACCESS(LATF,0)
// LATF<LATF1>
extern volatile __bit                   LATF1               __at(0x7C71);	// @ (0xF8E * 8 + 1)
#define                                 LATF1_bit           _BIT_ACCESS(LATF,1)
// LATF<LATF2>
extern volatile __bit                   LATF2               __at(0x7C72);	// @ (0xF8E * 8 + 2)
#define                                 LATF2_bit           _BIT_ACCESS(LATF,2)
// LATF<LATF3>
extern volatile __bit                   LATF3               __at(0x7C73);	// @ (0xF8E * 8 + 3)
#define                                 LATF3_bit           _BIT_ACCESS(LATF,3)
// LATF<LATF4>
extern volatile __bit                   LATF4               __at(0x7C74);	// @ (0xF8E * 8 + 4)
#define                                 LATF4_bit           _BIT_ACCESS(LATF,4)
// LATF<LATF5>
extern volatile __bit                   LATF5               __at(0x7C75);	// @ (0xF8E * 8 + 5)
#define                                 LATF5_bit           _BIT_ACCESS(LATF,5)
// LATF<LATF6>
extern volatile __bit                   LATF6               __at(0x7C76);	// @ (0xF8E * 8 + 6)
#define                                 LATF6_bit           _BIT_ACCESS(LATF,6)
// LATF<LATF7>
extern volatile __bit                   LATF7               __at(0x7C77);	// @ (0xF8E * 8 + 7)
#define                                 LATF7_bit           _BIT_ACCESS(LATF,7)
// LATG<LATG0>
extern volatile __bit                   LATG0               __at(0x7C78);	// @ (0xF8F * 8 + 0)
#define                                 LATG0_bit           _BIT_ACCESS(LATG,0)
// LATG<LATG1>
extern volatile __bit                   LATG1               __at(0x7C79);	// @ (0xF8F * 8 + 1)
#define                                 LATG1_bit           _BIT_ACCESS(LATG,1)
// LATG<LATG2>
extern volatile __bit                   LATG2               __at(0x7C7A);	// @ (0xF8F * 8 + 2)
#define                                 LATG2_bit           _BIT_ACCESS(LATG,2)
// LATG<LATG3>
extern volatile __bit                   LATG3               __at(0x7C7B);	// @ (0xF8F * 8 + 3)
#define                                 LATG3_bit           _BIT_ACCESS(LATG,3)
// LATG<LATG4>
extern volatile __bit                   LATG4               __at(0x7C7C);	// @ (0xF8F * 8 + 4)
#define                                 LATG4_bit           _BIT_ACCESS(LATG,4)
// LATB<LB0>
extern volatile __bit                   LB0                 __at(0x7C50);	// @ (0xF8A * 8 + 0)
#define                                 LB0_bit             _BIT_ACCESS(LATB,0)
// LATB<LB1>
extern volatile __bit                   LB1                 __at(0x7C51);	// @ (0xF8A * 8 + 1)
#define                                 LB1_bit             _BIT_ACCESS(LATB,1)
// LATB<LB2>
extern volatile __bit                   LB2                 __at(0x7C52);	// @ (0xF8A * 8 + 2)
#define                                 LB2_bit             _BIT_ACCESS(LATB,2)
// LATB<LB3>
extern volatile __bit                   LB3                 __at(0x7C53);	// @ (0xF8A * 8 + 3)
#define                                 LB3_bit             _BIT_ACCESS(LATB,3)
// LATB<LB4>
extern volatile __bit                   LB4                 __at(0x7C54);	// @ (0xF8A * 8 + 4)
#define                                 LB4_bit             _BIT_ACCESS(LATB,4)
// LATB<LB5>
extern volatile __bit                   LB5                 __at(0x7C55);	// @ (0xF8A * 8 + 5)
#define                                 LB5_bit             _BIT_ACCESS(LATB,5)
// LATB<LB6>
extern volatile __bit                   LB6                 __at(0x7C56);	// @ (0xF8A * 8 + 6)
#define                                 LB6_bit             _BIT_ACCESS(LATB,6)
// LATB<LB7>
extern volatile __bit                   LB7                 __at(0x7C57);	// @ (0xF8A * 8 + 7)
#define                                 LB7_bit             _BIT_ACCESS(LATB,7)
// LATC<LC0>
extern volatile __bit                   LC0                 __at(0x7C58);	// @ (0xF8B * 8 + 0)
#define                                 LC0_bit             _BIT_ACCESS(LATC,0)
// LATC<LC1>
extern volatile __bit                   LC1                 __at(0x7C59);	// @ (0xF8B * 8 + 1)
#define                                 LC1_bit             _BIT_ACCESS(LATC,1)
// LATC<LC2>
extern volatile __bit                   LC2                 __at(0x7C5A);	// @ (0xF8B * 8 + 2)
#define                                 LC2_bit             _BIT_ACCESS(LATC,2)
// LATC<LC3>
extern volatile __bit                   LC3                 __at(0x7C5B);	// @ (0xF8B * 8 + 3)
#define                                 LC3_bit             _BIT_ACCESS(LATC,3)
// LATC<LC4>
extern volatile __bit                   LC4                 __at(0x7C5C);	// @ (0xF8B * 8 + 4)
#define                                 LC4_bit             _BIT_ACCESS(LATC,4)
// LATC<LC5>
extern volatile __bit                   LC5                 __at(0x7C5D);	// @ (0xF8B * 8 + 5)
#define                                 LC5_bit             _BIT_ACCESS(LATC,5)
// LATC<LC6>
extern volatile __bit                   LC6                 __at(0x7C5E);	// @ (0xF8B * 8 + 6)
#define                                 LC6_bit             _BIT_ACCESS(LATC,6)
// LATC<LC7>
extern volatile __bit                   LC7                 __at(0x7C5F);	// @ (0xF8B * 8 + 7)
#define                                 LC7_bit             _BIT_ACCESS(LATC,7)
// LATD<LD0>
extern volatile __bit                   LD0                 __at(0x7C60);	// @ (0xF8C * 8 + 0)
#define                                 LD0_bit             _BIT_ACCESS(LATD,0)
// LATD<LD1>
extern volatile __bit                   LD1                 __at(0x7C61);	// @ (0xF8C * 8 + 1)
#define                                 LD1_bit             _BIT_ACCESS(LATD,1)
// LATD<LD2>
extern volatile __bit                   LD2                 __at(0x7C62);	// @ (0xF8C * 8 + 2)
#define                                 LD2_bit             _BIT_ACCESS(LATD,2)
// LATD<LD3>
extern volatile __bit                   LD3                 __at(0x7C63);	// @ (0xF8C * 8 + 3)
#define                                 LD3_bit             _BIT_ACCESS(LATD,3)
// LATD<LD4>
extern volatile __bit                   LD4                 __at(0x7C64);	// @ (0xF8C * 8 + 4)
#define                                 LD4_bit             _BIT_ACCESS(LATD,4)
// LATD<LD5>
extern volatile __bit                   LD5                 __at(0x7C65);	// @ (0xF8C * 8 + 5)
#define                                 LD5_bit             _BIT_ACCESS(LATD,5)
// LATD<LD6>
extern volatile __bit                   LD6                 __at(0x7C66);	// @ (0xF8C * 8 + 6)
#define                                 LD6_bit             _BIT_ACCESS(LATD,6)
// LATD<LD7>
extern volatile __bit                   LD7                 __at(0x7C67);	// @ (0xF8C * 8 + 7)
#define                                 LD7_bit             _BIT_ACCESS(LATD,7)
// LATE<LE0>
extern volatile __bit                   LE0                 __at(0x7C68);	// @ (0xF8D * 8 + 0)
#define                                 LE0_bit             _BIT_ACCESS(LATE,0)
// LATE<LE1>
extern volatile __bit                   LE1                 __at(0x7C69);	// @ (0xF8D * 8 + 1)
#define                                 LE1_bit             _BIT_ACCESS(LATE,1)
// LATE<LE2>
extern volatile __bit                   LE2                 __at(0x7C6A);	// @ (0xF8D * 8 + 2)
#define                                 LE2_bit             _BIT_ACCESS(LATE,2)
// LATE<LE3>
extern volatile __bit                   LE3                 __at(0x7C6B);	// @ (0xF8D * 8 + 3)
#define                                 LE3_bit             _BIT_ACCESS(LATE,3)
// LATE<LE4>
extern volatile __bit                   LE4                 __at(0x7C6C);	// @ (0xF8D * 8 + 4)
#define                                 LE4_bit             _BIT_ACCESS(LATE,4)
// LATE<LE5>
extern volatile __bit                   LE5                 __at(0x7C6D);	// @ (0xF8D * 8 + 5)
#define                                 LE5_bit             _BIT_ACCESS(LATE,5)
// LATE<LE6>
extern volatile __bit                   LE6                 __at(0x7C6E);	// @ (0xF8D * 8 + 6)
#define                                 LE6_bit             _BIT_ACCESS(LATE,6)
// LATE<LE7>
extern volatile __bit                   LE7                 __at(0x7C6F);	// @ (0xF8D * 8 + 7)
#define                                 LE7_bit             _BIT_ACCESS(LATE,7)
// LATF<LF0>
extern volatile __bit                   LF0                 __at(0x7C70);	// @ (0xF8E * 8 + 0)
#define                                 LF0_bit             _BIT_ACCESS(LATF,0)
// LATF<LF1>
extern volatile __bit                   LF1                 __at(0x7C71);	// @ (0xF8E * 8 + 1)
#define                                 LF1_bit             _BIT_ACCESS(LATF,1)
// LATF<LF2>
extern volatile __bit                   LF2                 __at(0x7C72);	// @ (0xF8E * 8 + 2)
#define                                 LF2_bit             _BIT_ACCESS(LATF,2)
// LATF<LF3>
extern volatile __bit                   LF3                 __at(0x7C73);	// @ (0xF8E * 8 + 3)
#define                                 LF3_bit             _BIT_ACCESS(LATF,3)
// LATF<LF4>
extern volatile __bit                   LF4                 __at(0x7C74);	// @ (0xF8E * 8 + 4)
#define                                 LF4_bit             _BIT_ACCESS(LATF,4)
// LATF<LF5>
extern volatile __bit                   LF5                 __at(0x7C75);	// @ (0xF8E * 8 + 5)
#define                                 LF5_bit             _BIT_ACCESS(LATF,5)
// LATF<LF6>
extern volatile __bit                   LF6                 __at(0x7C76);	// @ (0xF8E * 8 + 6)
#define                                 LF6_bit             _BIT_ACCESS(LATF,6)
// LATF<LF7>
extern volatile __bit                   LF7                 __at(0x7C77);	// @ (0xF8E * 8 + 7)
#define                                 LF7_bit             _BIT_ACCESS(LATF,7)
// LATG<LG0>
extern volatile __bit                   LG0                 __at(0x7C78);	// @ (0xF8F * 8 + 0)
#define                                 LG0_bit             _BIT_ACCESS(LATG,0)
// LATG<LG1>
extern volatile __bit                   LG1                 __at(0x7C79);	// @ (0xF8F * 8 + 1)
#define                                 LG1_bit             _BIT_ACCESS(LATG,1)
// LATG<LG2>
extern volatile __bit                   LG2                 __at(0x7C7A);	// @ (0xF8F * 8 + 2)
#define                                 LG2_bit             _BIT_ACCESS(LATG,2)
// LATG<LG3>
extern volatile __bit                   LG3                 __at(0x7C7B);	// @ (0xF8F * 8 + 3)
#define                                 LG3_bit             _BIT_ACCESS(LATG,3)
// LATG<LG4>
extern volatile __bit                   LG4                 __at(0x7C7C);	// @ (0xF8F * 8 + 4)
#define                                 LG4_bit             _BIT_ACCESS(LATG,4)
// OSCCON<LOCK>
extern volatile __bit                   LOCK                __at(0x7E9B);	// @ (0xFD3 * 8 + 3)
#define                                 LOCK_bit            _BIT_ACCESS(OSCCON,3)
// LVDCON<LVDEN>
extern volatile __bit                   LVDEN               __at(0x7E94);	// @ (0xFD2 * 8 + 4)
#define                                 LVDEN_bit           _BIT_ACCESS(LVDCON,4)
// PIE2<LVDIE>
extern volatile __bit                   LVDIE               __at(0x7D02);	// @ (0xFA0 * 8 + 2)
#define                                 LVDIE_bit           _BIT_ACCESS(PIE2,2)
// PIR2<LVDIF>
extern volatile __bit                   LVDIF               __at(0x7D0A);	// @ (0xFA1 * 8 + 2)
#define                                 LVDIF_bit           _BIT_ACCESS(PIR2,2)
// PORTA<LVDIN>
extern volatile __bit                   LVDIN               __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 LVDIN_bit           _BIT_ACCESS(PORTA,5)
// IPR2<LVDIP>
extern volatile __bit                   LVDIP               __at(0x7D12);	// @ (0xFA2 * 8 + 2)
#define                                 LVDIP_bit           _BIT_ACCESS(IPR2,2)
// LVDCON<LVDL0>
extern volatile __bit                   LVDL0               __at(0x7E90);	// @ (0xFD2 * 8 + 0)
#define                                 LVDL0_bit           _BIT_ACCESS(LVDCON,0)
// LVDCON<LVDL1>
extern volatile __bit                   LVDL1               __at(0x7E91);	// @ (0xFD2 * 8 + 1)
#define                                 LVDL1_bit           _BIT_ACCESS(LVDCON,1)
// LVDCON<LVDL2>
extern volatile __bit                   LVDL2               __at(0x7E92);	// @ (0xFD2 * 8 + 2)
#define                                 LVDL2_bit           _BIT_ACCESS(LVDCON,2)
// LVDCON<LVDL3>
extern volatile __bit                   LVDL3               __at(0x7E93);	// @ (0xFD2 * 8 + 3)
#define                                 LVDL3_bit           _BIT_ACCESS(LVDCON,3)
// LVDCON<LVV0>
extern volatile __bit                   LVV0                __at(0x7E90);	// @ (0xFD2 * 8 + 0)
#define                                 LVV0_bit            _BIT_ACCESS(LVDCON,0)
// LVDCON<LVV1>
extern volatile __bit                   LVV1                __at(0x7E91);	// @ (0xFD2 * 8 + 1)
#define                                 LVV1_bit            _BIT_ACCESS(LVDCON,1)
// LVDCON<LVV2>
extern volatile __bit                   LVV2                __at(0x7E92);	// @ (0xFD2 * 8 + 2)
#define                                 LVV2_bit            _BIT_ACCESS(LVDCON,2)
// LVDCON<LVV3>
extern volatile __bit                   LVV3                __at(0x7E93);	// @ (0xFD2 * 8 + 3)
#define                                 LVV3_bit            _BIT_ACCESS(LVDCON,3)
// PORTG<MCLR>
extern volatile __bit                   MCLR                __at(0x7C35);	// @ (0xF86 * 8 + 5)
#define                                 MCLR_bit            _BIT_ACCESS(PORTG,5)
// ECANCON<MDSEL0>
extern volatile __bit                   MDSEL0              __at(0x7BBE);	// @ (0xF77 * 8 + 6)
#define                                 MDSEL0_bit          _BIT_ACCESS(ECANCON,6)
// ECANCON<MDSEL1>
extern volatile __bit                   MDSEL1              __at(0x7BBF);	// @ (0xF77 * 8 + 7)
#define                                 MDSEL1_bit          _BIT_ACCESS(ECANCON,7)
// STATUS<NEGATIVE>
extern volatile __bit                   NEGATIVE            __at(0x7EC4);	// @ (0xFD8 * 8 + 4)
#define                                 NEGATIVE_bit        _BIT_ACCESS(STATUS,4)
// SSPSTAT<NOT_A>
extern volatile __bit                   NOT_A               __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 NOT_A_bit           _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<NOT_ADDRESS>
extern volatile __bit                   NOT_ADDRESS         __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 NOT_ADDRESS_bit     _BIT_ACCESS(SSPSTAT,5)
// RCON<NOT_BOR>
extern volatile __bit                   NOT_BOR             __at(0x7E80);	// @ (0xFD0 * 8 + 0)
#define                                 NOT_BOR_bit         _BIT_ACCESS(RCON,0)
// ADCON0<NOT_DONE>
extern volatile __bit                   NOT_DONE            __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 NOT_DONE_bit        _BIT_ACCESS(ADCON0,1)
// COMSTAT<NOT_FIFOEMPTY>
extern volatile __bit                   NOT_FIFOEMPTY       __at(0x7BA7);	// @ (0xF74 * 8 + 7)
#define                                 NOT_FIFOEMPTY_bit   _BIT_ACCESS(COMSTAT,7)
// RCON<NOT_IPEN>
extern volatile __bit                   NOT_IPEN            __at(0x7E87);	// @ (0xFD0 * 8 + 7)
#define                                 NOT_IPEN_bit        _BIT_ACCESS(RCON,7)
// RCON<NOT_PD>
extern volatile __bit                   NOT_PD              __at(0x7E82);	// @ (0xFD0 * 8 + 2)
#define                                 NOT_PD_bit          _BIT_ACCESS(RCON,2)
// RCON<NOT_POR>
extern volatile __bit                   NOT_POR             __at(0x7E81);	// @ (0xFD0 * 8 + 1)
#define                                 NOT_POR_bit         _BIT_ACCESS(RCON,1)
// INTCON2<NOT_RBPU>
extern volatile __bit                   NOT_RBPU            __at(0x7F8F);	// @ (0xFF1 * 8 + 7)
#define                                 NOT_RBPU_bit        _BIT_ACCESS(INTCON2,7)
// RCON<NOT_RI>
extern volatile __bit                   NOT_RI              __at(0x7E84);	// @ (0xFD0 * 8 + 4)
#define                                 NOT_RI_bit          _BIT_ACCESS(RCON,4)
// T1CON<NOT_T1SYNC>
extern volatile __bit                   NOT_T1SYNC          __at(0x7E6A);	// @ (0xFCD * 8 + 2)
#define                                 NOT_T1SYNC_bit      _BIT_ACCESS(T1CON,2)
// T3CON<NOT_T3SYNC>
extern volatile __bit                   NOT_T3SYNC          __at(0x7D8A);	// @ (0xFB1 * 8 + 2)
#define                                 NOT_T3SYNC_bit      _BIT_ACCESS(T3CON,2)
// RCON<NOT_TO>
extern volatile __bit                   NOT_TO              __at(0x7E83);	// @ (0xFD0 * 8 + 3)
#define                                 NOT_TO_bit          _BIT_ACCESS(RCON,3)
// SSPSTAT<NOT_W>
extern volatile __bit                   NOT_W               __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 NOT_W_bit           _BIT_ACCESS(SSPSTAT,2)
// SSPSTAT<NOT_WRITE>
extern volatile __bit                   NOT_WRITE           __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 NOT_WRITE_bit       _BIT_ACCESS(SSPSTAT,2)
// PSPCON<OBF>
extern volatile __bit                   OBF                 __at(0x7D86);	// @ (0xFB0 * 8 + 6)
#define                                 OBF_bit             _BIT_ACCESS(PSPCON,6)
// RCSTA<OERR>
extern volatile __bit                   OERR                __at(0x7D59);	// @ (0xFAB * 8 + 1)
#define                                 OERR_bit            _BIT_ACCESS(RCSTA,1)
// RCSTA<OERR1>
extern volatile __bit                   OERR1               __at(0x7D59);	// @ (0xFAB * 8 + 1)
#define                                 OERR1_bit           _BIT_ACCESS(RCSTA,1)
// PORTA<OSC2>
extern volatile __bit                   OSC2                __at(0x7C06);	// @ (0xF80 * 8 + 6)
#define                                 OSC2_bit            _BIT_ACCESS(PORTA,6)
// STATUS<OV>
extern volatile __bit                   OV                  __at(0x7EC3);	// @ (0xFD8 * 8 + 3)
#define                                 OV_bit              _BIT_ACCESS(STATUS,3)
// STATUS<OVERFLOW>
extern volatile __bit                   OVERFLOW            __at(0x7EC3);	// @ (0xFD8 * 8 + 3)
#define                                 OVERFLOW_bit        _BIT_ACCESS(STATUS,3)
// PORTC<P1A>
extern volatile __bit                   P1A                 __at(0x7C12);	// @ (0xF82 * 8 + 2)
#define                                 P1A_bit             _BIT_ACCESS(PORTC,2)
// PORTE<P1B>
extern volatile __bit                   P1B                 __at(0x7C26);	// @ (0xF84 * 8 + 6)
#define                                 P1B_bit             _BIT_ACCESS(PORTE,6)
// PORTE<P1C>
extern volatile __bit                   P1C                 __at(0x7C25);	// @ (0xF84 * 8 + 5)
#define                                 P1C_bit             _BIT_ACCESS(PORTE,5)
// PORTG<P1D>
extern volatile __bit                   P1D                 __at(0x7C34);	// @ (0xF86 * 8 + 4)
#define                                 P1D_bit             _BIT_ACCESS(PORTG,4)
// CCP1CON<P1M0>
extern volatile __bit                   P1M0                __at(0x7DEE);	// @ (0xFBD * 8 + 6)
#define                                 P1M0_bit            _BIT_ACCESS(CCP1CON,6)
// CCP1CON<P1M1>
extern volatile __bit                   P1M1                __at(0x7DEF);	// @ (0xFBD * 8 + 7)
#define                                 P1M1_bit            _BIT_ACCESS(CCP1CON,7)
// PORTC<PA1>
extern volatile __bit                   PA1                 __at(0x7C12);	// @ (0xF82 * 8 + 2)
#define                                 PA1_bit             _BIT_ACCESS(PORTC,2)
// PORTC<PA2>
extern volatile __bit                   PA2                 __at(0x7C11);	// @ (0xF82 * 8 + 1)
#define                                 PA2_bit             _BIT_ACCESS(PORTC,1)
// PORTE<PA2E>
extern volatile __bit                   PA2E                __at(0x7C27);	// @ (0xF84 * 8 + 7)
#define                                 PA2E_bit            _BIT_ACCESS(PORTE,7)
// PORTE<PB1E>
extern volatile __bit                   PB1E                __at(0x7C26);	// @ (0xF84 * 8 + 6)
#define                                 PB1E_bit            _BIT_ACCESS(PORTE,6)
// PORTE<PB2>
extern volatile __bit                   PB2                 __at(0x7C22);	// @ (0xF84 * 8 + 2)
#define                                 PB2_bit             _BIT_ACCESS(PORTE,2)
// PORTE<PB3E>
extern volatile __bit                   PB3E                __at(0x7C24);	// @ (0xF84 * 8 + 4)
#define                                 PB3E_bit            _BIT_ACCESS(PORTE,4)
// PORTE<PC1E>
extern volatile __bit                   PC1E                __at(0x7C25);	// @ (0xF84 * 8 + 5)
#define                                 PC1E_bit            _BIT_ACCESS(PORTE,5)
// PORTE<PC2>
extern volatile __bit                   PC2                 __at(0x7C21);	// @ (0xF84 * 8 + 1)
#define                                 PC2_bit             _BIT_ACCESS(PORTE,1)
// PORTE<PC3E>
extern volatile __bit                   PC3E                __at(0x7C23);	// @ (0xF84 * 8 + 3)
#define                                 PC3E_bit            _BIT_ACCESS(PORTE,3)
// ADCON1<PCFG0>
extern volatile __bit                   PCFG0               __at(0x7E08);	// @ (0xFC1 * 8 + 0)
#define                                 PCFG0_bit           _BIT_ACCESS(ADCON1,0)
// ADCON1<PCFG1>
extern volatile __bit                   PCFG1               __at(0x7E09);	// @ (0xFC1 * 8 + 1)
#define                                 PCFG1_bit           _BIT_ACCESS(ADCON1,1)
// ADCON1<PCFG2>
extern volatile __bit                   PCFG2               __at(0x7E0A);	// @ (0xFC1 * 8 + 2)
#define                                 PCFG2_bit           _BIT_ACCESS(ADCON1,2)
// ADCON1<PCFG3>
extern volatile __bit                   PCFG3               __at(0x7E0B);	// @ (0xFC1 * 8 + 3)
#define                                 PCFG3_bit           _BIT_ACCESS(ADCON1,3)
// RCON<PD>
extern volatile __bit                   PD                  __at(0x7E82);	// @ (0xFD0 * 8 + 2)
#define                                 PD_bit              _BIT_ACCESS(RCON,2)
// PORTE<PD2>
extern volatile __bit                   PD2                 __at(0x7C20);	// @ (0xF84 * 8 + 0)
#define                                 PD2_bit             _BIT_ACCESS(PORTE,0)
// ECCP1DEL<PDC0>
extern volatile __bit                   PDC0                __at(0x7BC8);	// @ (0xF79 * 8 + 0)
#define                                 PDC0_bit            _BIT_ACCESS(ECCP1DEL,0)
// ECCP1DEL<PDC1>
extern volatile __bit                   PDC1                __at(0x7BC9);	// @ (0xF79 * 8 + 1)
#define                                 PDC1_bit            _BIT_ACCESS(ECCP1DEL,1)
// ECCP1DEL<PDC2>
extern volatile __bit                   PDC2                __at(0x7BCA);	// @ (0xF79 * 8 + 2)
#define                                 PDC2_bit            _BIT_ACCESS(ECCP1DEL,2)
// ECCP1DEL<PDC3>
extern volatile __bit                   PDC3                __at(0x7BCB);	// @ (0xF79 * 8 + 3)
#define                                 PDC3_bit            _BIT_ACCESS(ECCP1DEL,3)
// ECCP1DEL<PDC4>
extern volatile __bit                   PDC4                __at(0x7BCC);	// @ (0xF79 * 8 + 4)
#define                                 PDC4_bit            _BIT_ACCESS(ECCP1DEL,4)
// ECCP1DEL<PDC5>
extern volatile __bit                   PDC5                __at(0x7BCD);	// @ (0xF79 * 8 + 5)
#define                                 PDC5_bit            _BIT_ACCESS(ECCP1DEL,5)
// ECCP1DEL<PDC6>
extern volatile __bit                   PDC6                __at(0x7BCE);	// @ (0xF79 * 8 + 6)
#define                                 PDC6_bit            _BIT_ACCESS(ECCP1DEL,6)
// INTCON<PEIE>
extern volatile __bit                   PEIE                __at(0x7F96);	// @ (0xFF2 * 8 + 6)
#define                                 PEIE_bit            _BIT_ACCESS(INTCON,6)
// INTCON<PEIE_GIEL>
extern volatile __bit                   PEIE_GIEL           __at(0x7F96);	// @ (0xFF2 * 8 + 6)
#define                                 PEIE_GIEL_bit       _BIT_ACCESS(INTCON,6)
// SSPCON2<PEN>
extern volatile __bit                   PEN                 __at(0x7E2A);	// @ (0xFC5 * 8 + 2)
#define                                 PEN_bit             _BIT_ACCESS(SSPCON2,2)
// PORTB<PGC>
extern volatile __bit                   PGC                 __at(0x7C0E);	// @ (0xF81 * 8 + 6)
#define                                 PGC_bit             _BIT_ACCESS(PORTB,6)
// PORTB<PGD>
extern volatile __bit                   PGD                 __at(0x7C0F);	// @ (0xF81 * 8 + 7)
#define                                 PGD_bit             _BIT_ACCESS(PORTB,7)
// PORTB<PGM>
extern volatile __bit                   PGM                 __at(0x7C0D);	// @ (0xF81 * 8 + 5)
#define                                 PGM_bit             _BIT_ACCESS(PORTB,5)
// OSCCON<PLLEN>
extern volatile __bit                   PLLEN               __at(0x7E9A);	// @ (0xFD3 * 8 + 2)
#define                                 PLLEN_bit           _BIT_ACCESS(OSCCON,2)
// RCON<POR>
extern volatile __bit                   POR                 __at(0x7E81);	// @ (0xFD0 * 8 + 1)
#define                                 POR_bit             _BIT_ACCESS(RCON,1)
// BRGCON2<PRSEG0>
extern volatile __bit                   PRSEG0              __at(0x7B88);	// @ (0xF71 * 8 + 0)
#define                                 PRSEG0_bit          _BIT_ACCESS(BRGCON2,0)
// BRGCON2<PRSEG1>
extern volatile __bit                   PRSEG1              __at(0x7B89);	// @ (0xF71 * 8 + 1)
#define                                 PRSEG1_bit          _BIT_ACCESS(BRGCON2,1)
// BRGCON2<PRSEG2>
extern volatile __bit                   PRSEG2              __at(0x7B8A);	// @ (0xF71 * 8 + 2)
#define                                 PRSEG2_bit          _BIT_ACCESS(BRGCON2,2)
// ECCP1DEL<PRSEN>
extern volatile __bit                   PRSEN               __at(0x7BCF);	// @ (0xF79 * 8 + 7)
#define                                 PRSEN_bit           _BIT_ACCESS(ECCP1DEL,7)
// T0CON<PSA>
extern volatile __bit                   PSA                 __at(0x7EAB);	// @ (0xFD5 * 8 + 3)
#define                                 PSA_bit             _BIT_ACCESS(T0CON,3)
// PORTD<PSP0>
extern volatile __bit                   PSP0                __at(0x7C18);	// @ (0xF83 * 8 + 0)
#define                                 PSP0_bit            _BIT_ACCESS(PORTD,0)
// PORTD<PSP1>
extern volatile __bit                   PSP1                __at(0x7C19);	// @ (0xF83 * 8 + 1)
#define                                 PSP1_bit            _BIT_ACCESS(PORTD,1)
// PORTD<PSP2>
extern volatile __bit                   PSP2                __at(0x7C1A);	// @ (0xF83 * 8 + 2)
#define                                 PSP2_bit            _BIT_ACCESS(PORTD,2)
// PORTD<PSP3>
extern volatile __bit                   PSP3                __at(0x7C1B);	// @ (0xF83 * 8 + 3)
#define                                 PSP3_bit            _BIT_ACCESS(PORTD,3)
// PORTD<PSP4>
extern volatile __bit                   PSP4                __at(0x7C1C);	// @ (0xF83 * 8 + 4)
#define                                 PSP4_bit            _BIT_ACCESS(PORTD,4)
// PORTD<PSP5>
extern volatile __bit                   PSP5                __at(0x7C1D);	// @ (0xF83 * 8 + 5)
#define                                 PSP5_bit            _BIT_ACCESS(PORTD,5)
// PORTD<PSP6>
extern volatile __bit                   PSP6                __at(0x7C1E);	// @ (0xF83 * 8 + 6)
#define                                 PSP6_bit            _BIT_ACCESS(PORTD,6)
// PORTD<PSP7>
extern volatile __bit                   PSP7                __at(0x7C1F);	// @ (0xF83 * 8 + 7)
#define                                 PSP7_bit            _BIT_ACCESS(PORTD,7)
// PIE1<PSPIE>
extern volatile __bit                   PSPIE               __at(0x7CEF);	// @ (0xF9D * 8 + 7)
#define                                 PSPIE_bit           _BIT_ACCESS(PIE1,7)
// PIR1<PSPIF>
extern volatile __bit                   PSPIF               __at(0x7CF7);	// @ (0xF9E * 8 + 7)
#define                                 PSPIF_bit           _BIT_ACCESS(PIR1,7)
// IPR1<PSPIP>
extern volatile __bit                   PSPIP               __at(0x7CFF);	// @ (0xF9F * 8 + 7)
#define                                 PSPIP_bit           _BIT_ACCESS(IPR1,7)
// PSPCON<PSPMODE>
extern volatile __bit                   PSPMODE             __at(0x7D84);	// @ (0xFB0 * 8 + 4)
#define                                 PSPMODE_bit         _BIT_ACCESS(PSPCON,4)
// ECCP1AS<PSSAC0>
extern volatile __bit                   PSSAC0              __at(0x7DB2);	// @ (0xFB6 * 8 + 2)
#define                                 PSSAC0_bit          _BIT_ACCESS(ECCP1AS,2)
// ECCP1AS<PSSAC1>
extern volatile __bit                   PSSAC1              __at(0x7DB3);	// @ (0xFB6 * 8 + 3)
#define                                 PSSAC1_bit          _BIT_ACCESS(ECCP1AS,3)
// ECCP1AS<PSSBD0>
extern volatile __bit                   PSSBD0              __at(0x7DB0);	// @ (0xFB6 * 8 + 0)
#define                                 PSSBD0_bit          _BIT_ACCESS(ECCP1AS,0)
// ECCP1AS<PSSBD1>
extern volatile __bit                   PSSBD1              __at(0x7DB1);	// @ (0xFB6 * 8 + 1)
#define                                 PSSBD1_bit          _BIT_ACCESS(ECCP1AS,1)
// PORTA<RA0>
extern volatile __bit _DEPRECATED       RA0                 __at(0x7C00);	// @ (0xF80 * 8 + 0)
#define                                 RA0_bit             _BIT_ACCESS(PORTA,0)
// PORTA<RA1>
extern volatile __bit _DEPRECATED       RA1                 __at(0x7C01);	// @ (0xF80 * 8 + 1)
#define                                 RA1_bit             _BIT_ACCESS(PORTA,1)
// PORTA<RA2>
extern volatile __bit _DEPRECATED       RA2                 __at(0x7C02);	// @ (0xF80 * 8 + 2)
#define                                 RA2_bit             _BIT_ACCESS(PORTA,2)
// PORTA<RA3>
extern volatile __bit _DEPRECATED       RA3                 __at(0x7C03);	// @ (0xF80 * 8 + 3)
#define                                 RA3_bit             _BIT_ACCESS(PORTA,3)
// PORTA<RA4>
extern volatile __bit _DEPRECATED       RA4                 __at(0x7C04);	// @ (0xF80 * 8 + 4)
#define                                 RA4_bit             _BIT_ACCESS(PORTA,4)
// PORTA<RA5>
extern volatile __bit _DEPRECATED       RA5                 __at(0x7C05);	// @ (0xF80 * 8 + 5)
#define                                 RA5_bit             _BIT_ACCESS(PORTA,5)
// PORTA<RA6>
extern volatile __bit _DEPRECATED       RA6                 __at(0x7C06);	// @ (0xF80 * 8 + 6)
#define                                 RA6_bit             _BIT_ACCESS(PORTA,6)
// PORTB<RB0>
extern volatile __bit _DEPRECATED       RB0                 __at(0x7C08);	// @ (0xF81 * 8 + 0)
#define                                 RB0_bit             _BIT_ACCESS(PORTB,0)
// PORTB<RB1>
extern volatile __bit _DEPRECATED       RB1                 __at(0x7C09);	// @ (0xF81 * 8 + 1)
#define                                 RB1_bit             _BIT_ACCESS(PORTB,1)
// PORTB<RB2>
extern volatile __bit _DEPRECATED       RB2                 __at(0x7C0A);	// @ (0xF81 * 8 + 2)
#define                                 RB2_bit             _BIT_ACCESS(PORTB,2)
// PORTB<RB3>
extern volatile __bit _DEPRECATED       RB3                 __at(0x7C0B);	// @ (0xF81 * 8 + 3)
#define                                 RB3_bit             _BIT_ACCESS(PORTB,3)
// PORTB<RB4>
extern volatile __bit _DEPRECATED       RB4                 __at(0x7C0C);	// @ (0xF81 * 8 + 4)
#define                                 RB4_bit             _BIT_ACCESS(PORTB,4)
// PORTB<RB5>
extern volatile __bit _DEPRECATED       RB5                 __at(0x7C0D);	// @ (0xF81 * 8 + 5)
#define                                 RB5_bit             _BIT_ACCESS(PORTB,5)
// PORTB<RB6>
extern volatile __bit _DEPRECATED       RB6                 __at(0x7C0E);	// @ (0xF81 * 8 + 6)
#define                                 RB6_bit             _BIT_ACCESS(PORTB,6)
// PORTB<RB7>
extern volatile __bit _DEPRECATED       RB7                 __at(0x7C0F);	// @ (0xF81 * 8 + 7)
#define                                 RB7_bit             _BIT_ACCESS(PORTB,7)
// INTCON<RBIE>
extern volatile __bit                   RBIE                __at(0x7F93);	// @ (0xFF2 * 8 + 3)
#define                                 RBIE_bit            _BIT_ACCESS(INTCON,3)
// INTCON<RBIF>
extern volatile __bit                   RBIF                __at(0x7F90);	// @ (0xFF2 * 8 + 0)
#define                                 RBIF_bit            _BIT_ACCESS(INTCON,0)
// INTCON2<RBIP>
extern volatile __bit                   RBIP                __at(0x7F88);	// @ (0xFF1 * 8 + 0)
#define                                 RBIP_bit            _BIT_ACCESS(INTCON2,0)
// INTCON2<RBPU>
extern volatile __bit                   RBPU                __at(0x7F8F);	// @ (0xFF1 * 8 + 7)
#define                                 RBPU_bit            _BIT_ACCESS(INTCON2,7)
// PORTC<RC0>
extern volatile __bit _DEPRECATED       RC0                 __at(0x7C10);	// @ (0xF82 * 8 + 0)
#define                                 RC0_bit             _BIT_ACCESS(PORTC,0)
// PORTC<RC1>
extern volatile __bit _DEPRECATED       RC1                 __at(0x7C11);	// @ (0xF82 * 8 + 1)
#define                                 RC1_bit             _BIT_ACCESS(PORTC,1)
// PIE1<RC1IE>
extern volatile __bit                   RC1IE               __at(0x7CED);	// @ (0xF9D * 8 + 5)
#define                                 RC1IE_bit           _BIT_ACCESS(PIE1,5)
// PIR1<RC1IF>
extern volatile __bit                   RC1IF               __at(0x7CF5);	// @ (0xF9E * 8 + 5)
#define                                 RC1IF_bit           _BIT_ACCESS(PIR1,5)
// IPR1<RC1IP>
extern volatile __bit                   RC1IP               __at(0x7CFD);	// @ (0xF9F * 8 + 5)
#define                                 RC1IP_bit           _BIT_ACCESS(IPR1,5)
// PORTC<RC2>
extern volatile __bit _DEPRECATED       RC2                 __at(0x7C12);	// @ (0xF82 * 8 + 2)
#define                                 RC2_bit             _BIT_ACCESS(PORTC,2)
// PORTC<RC3>
extern volatile __bit _DEPRECATED       RC3                 __at(0x7C13);	// @ (0xF82 * 8 + 3)
#define                                 RC3_bit             _BIT_ACCESS(PORTC,3)
// PORTC<RC4>
extern volatile __bit _DEPRECATED       RC4                 __at(0x7C14);	// @ (0xF82 * 8 + 4)
#define                                 RC4_bit             _BIT_ACCESS(PORTC,4)
// PORTC<RC5>
extern volatile __bit _DEPRECATED       RC5                 __at(0x7C15);	// @ (0xF82 * 8 + 5)
#define                                 RC5_bit             _BIT_ACCESS(PORTC,5)
// PORTC<RC6>
extern volatile __bit _DEPRECATED       RC6                 __at(0x7C16);	// @ (0xF82 * 8 + 6)
#define                                 RC6_bit             _BIT_ACCESS(PORTC,6)
// PORTC<RC7>
extern volatile __bit _DEPRECATED       RC7                 __at(0x7C17);	// @ (0xF82 * 8 + 7)
#define                                 RC7_bit             _BIT_ACCESS(PORTC,7)
// RCSTA<RC8_9>
extern volatile __bit                   RC8_9               __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 RC8_9_bit           _BIT_ACCESS(RCSTA,6)
// RCSTA<RC9>
extern volatile __bit                   RC9                 __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 RC9_bit             _BIT_ACCESS(RCSTA,6)
// RCSTA<RCD8>
extern volatile __bit                   RCD8                __at(0x7D58);	// @ (0xFAB * 8 + 0)
#define                                 RCD8_bit            _BIT_ACCESS(RCSTA,0)
// SSPCON2<RCEN>
extern volatile __bit                   RCEN                __at(0x7E2B);	// @ (0xFC5 * 8 + 3)
#define                                 RCEN_bit            _BIT_ACCESS(SSPCON2,3)
// BAUDCON<RCIDL>
extern volatile __bit                   RCIDL               __at(0x7BF6);	// @ (0xF7E * 8 + 6)
#define                                 RCIDL_bit           _BIT_ACCESS(BAUDCON,6)
// PIE1<RCIE>
extern volatile __bit                   RCIE                __at(0x7CED);	// @ (0xF9D * 8 + 5)
#define                                 RCIE_bit            _BIT_ACCESS(PIE1,5)
// PIR1<RCIF>
extern volatile __bit                   RCIF                __at(0x7CF5);	// @ (0xF9E * 8 + 5)
#define                                 RCIF_bit            _BIT_ACCESS(PIR1,5)
// IPR1<RCIP>
extern volatile __bit                   RCIP                __at(0x7CFD);	// @ (0xF9F * 8 + 5)
#define                                 RCIP_bit            _BIT_ACCESS(IPR1,5)
// EECON1<RD>
extern volatile __bit _DEPRECATED       RD                  __at(0x7D30);	// @ (0xFA6 * 8 + 0)
#define                                 RD_bit              _BIT_ACCESS(EECON1,0)
// PORTD<RD0>
extern volatile __bit _DEPRECATED       RD0                 __at(0x7C18);	// @ (0xF83 * 8 + 0)
#define                                 RD0_bit             _BIT_ACCESS(PORTD,0)
// PORTD<RD1>
extern volatile __bit _DEPRECATED       RD1                 __at(0x7C19);	// @ (0xF83 * 8 + 1)
#define                                 RD1_bit             _BIT_ACCESS(PORTD,1)
// T3CON<RD163>
extern volatile __bit                   RD163               __at(0x7D8F);	// @ (0xFB1 * 8 + 7)
#define                                 RD163_bit           _BIT_ACCESS(T3CON,7)
// PORTD<RD2>
extern volatile __bit _DEPRECATED       RD2                 __at(0x7C1A);	// @ (0xF83 * 8 + 2)
#define                                 RD2_bit             _BIT_ACCESS(PORTD,2)
// PORTD<RD3>
extern volatile __bit _DEPRECATED       RD3                 __at(0x7C1B);	// @ (0xF83 * 8 + 3)
#define                                 RD3_bit             _BIT_ACCESS(PORTD,3)
// PORTD<RD4>
extern volatile __bit _DEPRECATED       RD4                 __at(0x7C1C);	// @ (0xF83 * 8 + 4)
#define                                 RD4_bit             _BIT_ACCESS(PORTD,4)
// PORTD<RD5>
extern volatile __bit _DEPRECATED       RD5                 __at(0x7C1D);	// @ (0xF83 * 8 + 5)
#define                                 RD5_bit             _BIT_ACCESS(PORTD,5)
// PORTD<RD6>
extern volatile __bit _DEPRECATED       RD6                 __at(0x7C1E);	// @ (0xF83 * 8 + 6)
#define                                 RD6_bit             _BIT_ACCESS(PORTD,6)
// PORTD<RD7>
extern volatile __bit _DEPRECATED       RD7                 __at(0x7C1F);	// @ (0xF83 * 8 + 7)
#define                                 RD7_bit             _BIT_ACCESS(PORTD,7)
// PORTE<RDE>
extern volatile __bit                   RDE                 __at(0x7C20);	// @ (0xF84 * 8 + 0)
#define                                 RDE_bit             _BIT_ACCESS(PORTE,0)
// PORTE<RE0>
extern volatile __bit _DEPRECATED       RE0                 __at(0x7C20);	// @ (0xF84 * 8 + 0)
#define                                 RE0_bit             _BIT_ACCESS(PORTE,0)
// PORTE<RE1>
extern volatile __bit _DEPRECATED       RE1                 __at(0x7C21);	// @ (0xF84 * 8 + 1)
#define                                 RE1_bit             _BIT_ACCESS(PORTE,1)
// PORTE<RE2>
extern volatile __bit _DEPRECATED       RE2                 __at(0x7C22);	// @ (0xF84 * 8 + 2)
#define                                 RE2_bit             _BIT_ACCESS(PORTE,2)
// PORTE<RE3>
extern volatile __bit _DEPRECATED       RE3                 __at(0x7C23);	// @ (0xF84 * 8 + 3)
#define                                 RE3_bit             _BIT_ACCESS(PORTE,3)
// PORTE<RE4>
extern volatile __bit _DEPRECATED       RE4                 __at(0x7C24);	// @ (0xF84 * 8 + 4)
#define                                 RE4_bit             _BIT_ACCESS(PORTE,4)
// PORTE<RE5>
extern volatile __bit _DEPRECATED       RE5                 __at(0x7C25);	// @ (0xF84 * 8 + 5)
#define                                 RE5_bit             _BIT_ACCESS(PORTE,5)
// PORTE<RE6>
extern volatile __bit _DEPRECATED       RE6                 __at(0x7C26);	// @ (0xF84 * 8 + 6)
#define                                 RE6_bit             _BIT_ACCESS(PORTE,6)
// PORTE<RE7>
extern volatile __bit _DEPRECATED       RE7                 __at(0x7C27);	// @ (0xF84 * 8 + 7)
#define                                 RE7_bit             _BIT_ACCESS(PORTE,7)
// SSPSTAT<READ_WRITE>
extern volatile __bit                   READ_WRITE          __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 READ_WRITE_bit      _BIT_ACCESS(SSPSTAT,2)
// RXERRCNT<REC0>
extern volatile __bit                   REC0                __at(0x7BA8);	// @ (0xF75 * 8 + 0)
#define                                 REC0_bit            _BIT_ACCESS(RXERRCNT,0)
// RXERRCNT<REC1>
extern volatile __bit                   REC1                __at(0x7BA9);	// @ (0xF75 * 8 + 1)
#define                                 REC1_bit            _BIT_ACCESS(RXERRCNT,1)
// RXERRCNT<REC2>
extern volatile __bit                   REC2                __at(0x7BAA);	// @ (0xF75 * 8 + 2)
#define                                 REC2_bit            _BIT_ACCESS(RXERRCNT,2)
// RXERRCNT<REC3>
extern volatile __bit                   REC3                __at(0x7BAB);	// @ (0xF75 * 8 + 3)
#define                                 REC3_bit            _BIT_ACCESS(RXERRCNT,3)
// RXERRCNT<REC4>
extern volatile __bit                   REC4                __at(0x7BAC);	// @ (0xF75 * 8 + 4)
#define                                 REC4_bit            _BIT_ACCESS(RXERRCNT,4)
// RXERRCNT<REC5>
extern volatile __bit                   REC5                __at(0x7BAD);	// @ (0xF75 * 8 + 5)
#define                                 REC5_bit            _BIT_ACCESS(RXERRCNT,5)
// RXERRCNT<REC6>
extern volatile __bit                   REC6                __at(0x7BAE);	// @ (0xF75 * 8 + 6)
#define                                 REC6_bit            _BIT_ACCESS(RXERRCNT,6)
// RXERRCNT<REC7>
extern volatile __bit                   REC7                __at(0x7BAF);	// @ (0xF75 * 8 + 7)
#define                                 REC7_bit            _BIT_ACCESS(RXERRCNT,7)
// PORTF<RF0>
extern volatile __bit _DEPRECATED       RF0                 __at(0x7C28);	// @ (0xF85 * 8 + 0)
#define                                 RF0_bit             _BIT_ACCESS(PORTF,0)
// PORTF<RF1>
extern volatile __bit _DEPRECATED       RF1                 __at(0x7C29);	// @ (0xF85 * 8 + 1)
#define                                 RF1_bit             _BIT_ACCESS(PORTF,1)
// PORTF<RF2>
extern volatile __bit _DEPRECATED       RF2                 __at(0x7C2A);	// @ (0xF85 * 8 + 2)
#define                                 RF2_bit             _BIT_ACCESS(PORTF,2)
// PORTF<RF3>
extern volatile __bit _DEPRECATED       RF3                 __at(0x7C2B);	// @ (0xF85 * 8 + 3)
#define                                 RF3_bit             _BIT_ACCESS(PORTF,3)
// PORTF<RF4>
extern volatile __bit _DEPRECATED       RF4                 __at(0x7C2C);	// @ (0xF85 * 8 + 4)
#define                                 RF4_bit             _BIT_ACCESS(PORTF,4)
// PORTF<RF5>
extern volatile __bit _DEPRECATED       RF5                 __at(0x7C2D);	// @ (0xF85 * 8 + 5)
#define                                 RF5_bit             _BIT_ACCESS(PORTF,5)
// PORTF<RF6>
extern volatile __bit _DEPRECATED       RF6                 __at(0x7C2E);	// @ (0xF85 * 8 + 6)
#define                                 RF6_bit             _BIT_ACCESS(PORTF,6)
// PORTF<RF7>
extern volatile __bit _DEPRECATED       RF7                 __at(0x7C2F);	// @ (0xF85 * 8 + 7)
#define                                 RF7_bit             _BIT_ACCESS(PORTF,7)
// PORTG<RG0>
extern volatile __bit _DEPRECATED       RG0                 __at(0x7C30);	// @ (0xF86 * 8 + 0)
#define                                 RG0_bit             _BIT_ACCESS(PORTG,0)
// PORTG<RG1>
extern volatile __bit _DEPRECATED       RG1                 __at(0x7C31);	// @ (0xF86 * 8 + 1)
#define                                 RG1_bit             _BIT_ACCESS(PORTG,1)
// PORTG<RG2>
extern volatile __bit _DEPRECATED       RG2                 __at(0x7C32);	// @ (0xF86 * 8 + 2)
#define                                 RG2_bit             _BIT_ACCESS(PORTG,2)
// PORTG<RG3>
extern volatile __bit _DEPRECATED       RG3                 __at(0x7C33);	// @ (0xF86 * 8 + 3)
#define                                 RG3_bit             _BIT_ACCESS(PORTG,3)
// PORTG<RG4>
extern volatile __bit _DEPRECATED       RG4                 __at(0x7C34);	// @ (0xF86 * 8 + 4)
#define                                 RG4_bit             _BIT_ACCESS(PORTG,4)
// PORTG<RG5>
extern volatile __bit                   RG5                 __at(0x7C35);	// @ (0xF86 * 8 + 5)
#define                                 RG5_bit             _BIT_ACCESS(PORTG,5)
// RCON<RI>
extern volatile __bit                   RI                  __at(0x7E84);	// @ (0xFD0 * 8 + 4)
#define                                 RI_bit              _BIT_ACCESS(RCON,4)
// PORTG<RJPU>
extern volatile __bit                   RJPU                __at(0x7C35);	// @ (0xF86 * 8 + 5)
#define                                 RJPU_bit            _BIT_ACCESS(PORTG,5)
// SSPCON2<RSEN>
extern volatile __bit                   RSEN                __at(0x7E29);	// @ (0xFC5 * 8 + 1)
#define                                 RSEN_bit            _BIT_ACCESS(SSPCON2,1)
// RXB0CON<RTRR0>
extern volatile __bit                   RTRR0               __at(0x7B05);	// @ (0xF60 * 8 + 5)
#define                                 RTRR0_bit           _BIT_ACCESS(RXB0CON,5)
// SSPSTAT<RW>
extern volatile __bit                   RW                  __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 RW_bit              _BIT_ACCESS(SSPSTAT,2)
// PORTC<RX>
extern volatile __bit                   RX                  __at(0x7C17);	// @ (0xF82 * 8 + 7)
#define                                 RX_bit              _BIT_ACCESS(PORTC,7)
// RCSTA<RX9>
extern volatile __bit                   RX9                 __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 RX9_bit             _BIT_ACCESS(RCSTA,6)
// RCSTA<RX91>
extern volatile __bit                   RX91                __at(0x7D5E);	// @ (0xFAB * 8 + 6)
#define                                 RX91_bit            _BIT_ACCESS(RCSTA,6)
// RCSTA<RX9D>
extern volatile __bit                   RX9D                __at(0x7D58);	// @ (0xFAB * 8 + 0)
#define                                 RX9D_bit            _BIT_ACCESS(RCSTA,0)
// RCSTA<RX9D1>
extern volatile __bit                   RX9D1               __at(0x7D58);	// @ (0xFAB * 8 + 0)
#define                                 RX9D1_bit           _BIT_ACCESS(RCSTA,0)
// RXB0D0<RXB0D00>
extern volatile __bit                   RXB0D00             __at(0x7B30);	// @ (0xF66 * 8 + 0)
#define                                 RXB0D00_bit         _BIT_ACCESS(RXB0D0,0)
// RXB0D0<RXB0D01>
extern volatile __bit                   RXB0D01             __at(0x7B31);	// @ (0xF66 * 8 + 1)
#define                                 RXB0D01_bit         _BIT_ACCESS(RXB0D0,1)
// RXB0D0<RXB0D02>
extern volatile __bit                   RXB0D02             __at(0x7B32);	// @ (0xF66 * 8 + 2)
#define                                 RXB0D02_bit         _BIT_ACCESS(RXB0D0,2)
// RXB0D0<RXB0D03>
extern volatile __bit                   RXB0D03             __at(0x7B33);	// @ (0xF66 * 8 + 3)
#define                                 RXB0D03_bit         _BIT_ACCESS(RXB0D0,3)
// RXB0D0<RXB0D04>
extern volatile __bit                   RXB0D04             __at(0x7B34);	// @ (0xF66 * 8 + 4)
#define                                 RXB0D04_bit         _BIT_ACCESS(RXB0D0,4)
// RXB0D0<RXB0D05>
extern volatile __bit                   RXB0D05             __at(0x7B35);	// @ (0xF66 * 8 + 5)
#define                                 RXB0D05_bit         _BIT_ACCESS(RXB0D0,5)
// RXB0D0<RXB0D06>
extern volatile __bit                   RXB0D06             __at(0x7B36);	// @ (0xF66 * 8 + 6)
#define                                 RXB0D06_bit         _BIT_ACCESS(RXB0D0,6)
// RXB0D0<RXB0D07>
extern volatile __bit                   RXB0D07             __at(0x7B37);	// @ (0xF66 * 8 + 7)
#define                                 RXB0D07_bit         _BIT_ACCESS(RXB0D0,7)
// RXB0D1<RXB0D10>
extern volatile __bit                   RXB0D10             __at(0x7B38);	// @ (0xF67 * 8 + 0)
#define                                 RXB0D10_bit         _BIT_ACCESS(RXB0D1,0)
// RXB0D1<RXB0D11>
extern volatile __bit                   RXB0D11             __at(0x7B39);	// @ (0xF67 * 8 + 1)
#define                                 RXB0D11_bit         _BIT_ACCESS(RXB0D1,1)
// RXB0D1<RXB0D12>
extern volatile __bit                   RXB0D12             __at(0x7B3A);	// @ (0xF67 * 8 + 2)
#define                                 RXB0D12_bit         _BIT_ACCESS(RXB0D1,2)
// RXB0D1<RXB0D13>
extern volatile __bit                   RXB0D13             __at(0x7B3B);	// @ (0xF67 * 8 + 3)
#define                                 RXB0D13_bit         _BIT_ACCESS(RXB0D1,3)
// RXB0D1<RXB0D14>
extern volatile __bit                   RXB0D14             __at(0x7B3C);	// @ (0xF67 * 8 + 4)
#define                                 RXB0D14_bit         _BIT_ACCESS(RXB0D1,4)
// RXB0D1<RXB0D15>
extern volatile __bit                   RXB0D15             __at(0x7B3D);	// @ (0xF67 * 8 + 5)
#define                                 RXB0D15_bit         _BIT_ACCESS(RXB0D1,5)
// RXB0D1<RXB0D16>
extern volatile __bit                   RXB0D16             __at(0x7B3E);	// @ (0xF67 * 8 + 6)
#define                                 RXB0D16_bit         _BIT_ACCESS(RXB0D1,6)
// RXB0D1<RXB0D17>
extern volatile __bit                   RXB0D17             __at(0x7B3F);	// @ (0xF67 * 8 + 7)
#define                                 RXB0D17_bit         _BIT_ACCESS(RXB0D1,7)
// RXB0D2<RXB0D20>
extern volatile __bit                   RXB0D20             __at(0x7B40);	// @ (0xF68 * 8 + 0)
#define                                 RXB0D20_bit         _BIT_ACCESS(RXB0D2,0)
// RXB0D2<RXB0D21>
extern volatile __bit                   RXB0D21             __at(0x7B41);	// @ (0xF68 * 8 + 1)
#define                                 RXB0D21_bit         _BIT_ACCESS(RXB0D2,1)
// RXB0D2<RXB0D22>
extern volatile __bit                   RXB0D22             __at(0x7B42);	// @ (0xF68 * 8 + 2)
#define                                 RXB0D22_bit         _BIT_ACCESS(RXB0D2,2)
// RXB0D2<RXB0D23>
extern volatile __bit                   RXB0D23             __at(0x7B43);	// @ (0xF68 * 8 + 3)
#define                                 RXB0D23_bit         _BIT_ACCESS(RXB0D2,3)
// RXB0D2<RXB0D24>
extern volatile __bit                   RXB0D24             __at(0x7B44);	// @ (0xF68 * 8 + 4)
#define                                 RXB0D24_bit         _BIT_ACCESS(RXB0D2,4)
// RXB0D2<RXB0D25>
extern volatile __bit                   RXB0D25             __at(0x7B45);	// @ (0xF68 * 8 + 5)
#define                                 RXB0D25_bit         _BIT_ACCESS(RXB0D2,5)
// RXB0D2<RXB0D26>
extern volatile __bit                   RXB0D26             __at(0x7B46);	// @ (0xF68 * 8 + 6)
#define                                 RXB0D26_bit         _BIT_ACCESS(RXB0D2,6)
// RXB0D2<RXB0D27>
extern volatile __bit                   RXB0D27             __at(0x7B47);	// @ (0xF68 * 8 + 7)
#define                                 RXB0D27_bit         _BIT_ACCESS(RXB0D2,7)
// RXB0D3<RXB0D30>
extern volatile __bit                   RXB0D30             __at(0x7B48);	// @ (0xF69 * 8 + 0)
#define                                 RXB0D30_bit         _BIT_ACCESS(RXB0D3,0)
// RXB0D3<RXB0D31>
extern volatile __bit                   RXB0D31             __at(0x7B49);	// @ (0xF69 * 8 + 1)
#define                                 RXB0D31_bit         _BIT_ACCESS(RXB0D3,1)
// RXB0D3<RXB0D32>
extern volatile __bit                   RXB0D32             __at(0x7B4A);	// @ (0xF69 * 8 + 2)
#define                                 RXB0D32_bit         _BIT_ACCESS(RXB0D3,2)
// RXB0D3<RXB0D33>
extern volatile __bit                   RXB0D33             __at(0x7B4B);	// @ (0xF69 * 8 + 3)
#define                                 RXB0D33_bit         _BIT_ACCESS(RXB0D3,3)
// RXB0D3<RXB0D34>
extern volatile __bit                   RXB0D34             __at(0x7B4C);	// @ (0xF69 * 8 + 4)
#define                                 RXB0D34_bit         _BIT_ACCESS(RXB0D3,4)
// RXB0D3<RXB0D35>
extern volatile __bit                   RXB0D35             __at(0x7B4D);	// @ (0xF69 * 8 + 5)
#define                                 RXB0D35_bit         _BIT_ACCESS(RXB0D3,5)
// RXB0D3<RXB0D36>
extern volatile __bit                   RXB0D36             __at(0x7B4E);	// @ (0xF69 * 8 + 6)
#define                                 RXB0D36_bit         _BIT_ACCESS(RXB0D3,6)
// RXB0D3<RXB0D37>
extern volatile __bit                   RXB0D37             __at(0x7B4F);	// @ (0xF69 * 8 + 7)
#define                                 RXB0D37_bit         _BIT_ACCESS(RXB0D3,7)
// RXB0D4<RXB0D40>
extern volatile __bit                   RXB0D40             __at(0x7B50);	// @ (0xF6A * 8 + 0)
#define                                 RXB0D40_bit         _BIT_ACCESS(RXB0D4,0)
// RXB0D4<RXB0D41>
extern volatile __bit                   RXB0D41             __at(0x7B51);	// @ (0xF6A * 8 + 1)
#define                                 RXB0D41_bit         _BIT_ACCESS(RXB0D4,1)
// RXB0D4<RXB0D42>
extern volatile __bit                   RXB0D42             __at(0x7B52);	// @ (0xF6A * 8 + 2)
#define                                 RXB0D42_bit         _BIT_ACCESS(RXB0D4,2)
// RXB0D4<RXB0D43>
extern volatile __bit                   RXB0D43             __at(0x7B53);	// @ (0xF6A * 8 + 3)
#define                                 RXB0D43_bit         _BIT_ACCESS(RXB0D4,3)
// RXB0D4<RXB0D44>
extern volatile __bit                   RXB0D44             __at(0x7B54);	// @ (0xF6A * 8 + 4)
#define                                 RXB0D44_bit         _BIT_ACCESS(RXB0D4,4)
// RXB0D4<RXB0D45>
extern volatile __bit                   RXB0D45             __at(0x7B55);	// @ (0xF6A * 8 + 5)
#define                                 RXB0D45_bit         _BIT_ACCESS(RXB0D4,5)
// RXB0D4<RXB0D46>
extern volatile __bit                   RXB0D46             __at(0x7B56);	// @ (0xF6A * 8 + 6)
#define                                 RXB0D46_bit         _BIT_ACCESS(RXB0D4,6)
// RXB0D4<RXB0D47>
extern volatile __bit                   RXB0D47             __at(0x7B57);	// @ (0xF6A * 8 + 7)
#define                                 RXB0D47_bit         _BIT_ACCESS(RXB0D4,7)
// RXB0D5<RXB0D50>
extern volatile __bit                   RXB0D50             __at(0x7B58);	// @ (0xF6B * 8 + 0)
#define                                 RXB0D50_bit         _BIT_ACCESS(RXB0D5,0)
// RXB0D5<RXB0D51>
extern volatile __bit                   RXB0D51             __at(0x7B59);	// @ (0xF6B * 8 + 1)
#define                                 RXB0D51_bit         _BIT_ACCESS(RXB0D5,1)
// RXB0D5<RXB0D52>
extern volatile __bit                   RXB0D52             __at(0x7B5A);	// @ (0xF6B * 8 + 2)
#define                                 RXB0D52_bit         _BIT_ACCESS(RXB0D5,2)
// RXB0D5<RXB0D53>
extern volatile __bit                   RXB0D53             __at(0x7B5B);	// @ (0xF6B * 8 + 3)
#define                                 RXB0D53_bit         _BIT_ACCESS(RXB0D5,3)
// RXB0D5<RXB0D54>
extern volatile __bit                   RXB0D54             __at(0x7B5C);	// @ (0xF6B * 8 + 4)
#define                                 RXB0D54_bit         _BIT_ACCESS(RXB0D5,4)
// RXB0D5<RXB0D55>
extern volatile __bit                   RXB0D55             __at(0x7B5D);	// @ (0xF6B * 8 + 5)
#define                                 RXB0D55_bit         _BIT_ACCESS(RXB0D5,5)
// RXB0D5<RXB0D56>
extern volatile __bit                   RXB0D56             __at(0x7B5E);	// @ (0xF6B * 8 + 6)
#define                                 RXB0D56_bit         _BIT_ACCESS(RXB0D5,6)
// RXB0D5<RXB0D57>
extern volatile __bit                   RXB0D57             __at(0x7B5F);	// @ (0xF6B * 8 + 7)
#define                                 RXB0D57_bit         _BIT_ACCESS(RXB0D5,7)
// RXB0D6<RXB0D60>
extern volatile __bit                   RXB0D60             __at(0x7B60);	// @ (0xF6C * 8 + 0)
#define                                 RXB0D60_bit         _BIT_ACCESS(RXB0D6,0)
// RXB0D6<RXB0D61>
extern volatile __bit                   RXB0D61             __at(0x7B61);	// @ (0xF6C * 8 + 1)
#define                                 RXB0D61_bit         _BIT_ACCESS(RXB0D6,1)
// RXB0D6<RXB0D62>
extern volatile __bit                   RXB0D62             __at(0x7B62);	// @ (0xF6C * 8 + 2)
#define                                 RXB0D62_bit         _BIT_ACCESS(RXB0D6,2)
// RXB0D6<RXB0D63>
extern volatile __bit                   RXB0D63             __at(0x7B63);	// @ (0xF6C * 8 + 3)
#define                                 RXB0D63_bit         _BIT_ACCESS(RXB0D6,3)
// RXB0D6<RXB0D64>
extern volatile __bit                   RXB0D64             __at(0x7B64);	// @ (0xF6C * 8 + 4)
#define                                 RXB0D64_bit         _BIT_ACCESS(RXB0D6,4)
// RXB0D6<RXB0D65>
extern volatile __bit                   RXB0D65             __at(0x7B65);	// @ (0xF6C * 8 + 5)
#define                                 RXB0D65_bit         _BIT_ACCESS(RXB0D6,5)
// RXB0D6<RXB0D66>
extern volatile __bit                   RXB0D66             __at(0x7B66);	// @ (0xF6C * 8 + 6)
#define                                 RXB0D66_bit         _BIT_ACCESS(RXB0D6,6)
// RXB0D6<RXB0D67>
extern volatile __bit                   RXB0D67             __at(0x7B67);	// @ (0xF6C * 8 + 7)
#define                                 RXB0D67_bit         _BIT_ACCESS(RXB0D6,7)
// RXB0D7<RXB0D70>
extern volatile __bit                   RXB0D70             __at(0x7B68);	// @ (0xF6D * 8 + 0)
#define                                 RXB0D70_bit         _BIT_ACCESS(RXB0D7,0)
// RXB0D7<RXB0D71>
extern volatile __bit                   RXB0D71             __at(0x7B69);	// @ (0xF6D * 8 + 1)
#define                                 RXB0D71_bit         _BIT_ACCESS(RXB0D7,1)
// RXB0D7<RXB0D72>
extern volatile __bit                   RXB0D72             __at(0x7B6A);	// @ (0xF6D * 8 + 2)
#define                                 RXB0D72_bit         _BIT_ACCESS(RXB0D7,2)
// RXB0D7<RXB0D73>
extern volatile __bit                   RXB0D73             __at(0x7B6B);	// @ (0xF6D * 8 + 3)
#define                                 RXB0D73_bit         _BIT_ACCESS(RXB0D7,3)
// RXB0D7<RXB0D74>
extern volatile __bit                   RXB0D74             __at(0x7B6C);	// @ (0xF6D * 8 + 4)
#define                                 RXB0D74_bit         _BIT_ACCESS(RXB0D7,4)
// RXB0D7<RXB0D75>
extern volatile __bit                   RXB0D75             __at(0x7B6D);	// @ (0xF6D * 8 + 5)
#define                                 RXB0D75_bit         _BIT_ACCESS(RXB0D7,5)
// RXB0D7<RXB0D76>
extern volatile __bit                   RXB0D76             __at(0x7B6E);	// @ (0xF6D * 8 + 6)
#define                                 RXB0D76_bit         _BIT_ACCESS(RXB0D7,6)
// RXB0D7<RXB0D77>
extern volatile __bit                   RXB0D77             __at(0x7B6F);	// @ (0xF6D * 8 + 7)
#define                                 RXB0D77_bit         _BIT_ACCESS(RXB0D7,7)
// RXB0CON<RXB0DBEN>
extern volatile __bit                   RXB0DBEN            __at(0x7B02);	// @ (0xF60 * 8 + 2)
#define                                 RXB0DBEN_bit        _BIT_ACCESS(RXB0CON,2)
// RXB0CON<RXB0DBEN_FILHIT2>
extern volatile __bit                   RXB0DBEN_FILHIT2    __at(0x7B02);	// @ (0xF60 * 8 + 2)
#define                                 RXB0DBEN_FILHIT2_bit _BIT_ACCESS(RXB0CON,2)
// RXB0DLC<RXB0DLC0>
extern volatile __bit                   RXB0DLC0            __at(0x7B28);	// @ (0xF65 * 8 + 0)
#define                                 RXB0DLC0_bit        _BIT_ACCESS(RXB0DLC,0)
// RXB0DLC<RXB0DLC1>
extern volatile __bit                   RXB0DLC1            __at(0x7B29);	// @ (0xF65 * 8 + 1)
#define                                 RXB0DLC1_bit        _BIT_ACCESS(RXB0DLC,1)
// RXB0DLC<RXB0DLC2>
extern volatile __bit                   RXB0DLC2            __at(0x7B2A);	// @ (0xF65 * 8 + 2)
#define                                 RXB0DLC2_bit        _BIT_ACCESS(RXB0DLC,2)
// RXB0DLC<RXB0DLC3>
extern volatile __bit                   RXB0DLC3            __at(0x7B2B);	// @ (0xF65 * 8 + 3)
#define                                 RXB0DLC3_bit        _BIT_ACCESS(RXB0DLC,3)
// RXB0EIDL<RXB0EID0>
extern volatile __bit                   RXB0EID0            __at(0x7B20);	// @ (0xF64 * 8 + 0)
#define                                 RXB0EID0_bit        _BIT_ACCESS(RXB0EIDL,0)
// RXB0EIDL<RXB0EID1>
extern volatile __bit                   RXB0EID1            __at(0x7B21);	// @ (0xF64 * 8 + 1)
#define                                 RXB0EID1_bit        _BIT_ACCESS(RXB0EIDL,1)
// RXB0EIDH<RXB0EID10>
extern volatile __bit                   RXB0EID10           __at(0x7B1A);	// @ (0xF63 * 8 + 2)
#define                                 RXB0EID10_bit       _BIT_ACCESS(RXB0EIDH,2)
// RXB0EIDH<RXB0EID11>
extern volatile __bit                   RXB0EID11           __at(0x7B1B);	// @ (0xF63 * 8 + 3)
#define                                 RXB0EID11_bit       _BIT_ACCESS(RXB0EIDH,3)
// RXB0EIDH<RXB0EID12>
extern volatile __bit                   RXB0EID12           __at(0x7B1C);	// @ (0xF63 * 8 + 4)
#define                                 RXB0EID12_bit       _BIT_ACCESS(RXB0EIDH,4)
// RXB0EIDH<RXB0EID13>
extern volatile __bit                   RXB0EID13           __at(0x7B1D);	// @ (0xF63 * 8 + 5)
#define                                 RXB0EID13_bit       _BIT_ACCESS(RXB0EIDH,5)
// RXB0EIDH<RXB0EID14>
extern volatile __bit                   RXB0EID14           __at(0x7B1E);	// @ (0xF63 * 8 + 6)
#define                                 RXB0EID14_bit       _BIT_ACCESS(RXB0EIDH,6)
// RXB0EIDH<RXB0EID15>
extern volatile __bit                   RXB0EID15           __at(0x7B1F);	// @ (0xF63 * 8 + 7)
#define                                 RXB0EID15_bit       _BIT_ACCESS(RXB0EIDH,7)
// RXB0SIDL<RXB0EID16>
extern volatile __bit                   RXB0EID16           __at(0x7B10);	// @ (0xF62 * 8 + 0)
#define                                 RXB0EID16_bit       _BIT_ACCESS(RXB0SIDL,0)
// RXB0SIDL<RXB0EID17>
extern volatile __bit                   RXB0EID17           __at(0x7B11);	// @ (0xF62 * 8 + 1)
#define                                 RXB0EID17_bit       _BIT_ACCESS(RXB0SIDL,1)
// RXB0EIDL<RXB0EID2>
extern volatile __bit                   RXB0EID2            __at(0x7B22);	// @ (0xF64 * 8 + 2)
#define                                 RXB0EID2_bit        _BIT_ACCESS(RXB0EIDL,2)
// RXB0EIDL<RXB0EID3>
extern volatile __bit                   RXB0EID3            __at(0x7B23);	// @ (0xF64 * 8 + 3)
#define                                 RXB0EID3_bit        _BIT_ACCESS(RXB0EIDL,3)
// RXB0EIDL<RXB0EID4>
extern volatile __bit                   RXB0EID4            __at(0x7B24);	// @ (0xF64 * 8 + 4)
#define                                 RXB0EID4_bit        _BIT_ACCESS(RXB0EIDL,4)
// RXB0EIDL<RXB0EID5>
extern volatile __bit                   RXB0EID5            __at(0x7B25);	// @ (0xF64 * 8 + 5)
#define                                 RXB0EID5_bit        _BIT_ACCESS(RXB0EIDL,5)
// RXB0EIDL<RXB0EID6>
extern volatile __bit                   RXB0EID6            __at(0x7B26);	// @ (0xF64 * 8 + 6)
#define                                 RXB0EID6_bit        _BIT_ACCESS(RXB0EIDL,6)
// RXB0EIDL<RXB0EID7>
extern volatile __bit                   RXB0EID7            __at(0x7B27);	// @ (0xF64 * 8 + 7)
#define                                 RXB0EID7_bit        _BIT_ACCESS(RXB0EIDL,7)
// RXB0EIDH<RXB0EID8>
extern volatile __bit                   RXB0EID8            __at(0x7B18);	// @ (0xF63 * 8 + 0)
#define                                 RXB0EID8_bit        _BIT_ACCESS(RXB0EIDH,0)
// RXB0EIDH<RXB0EID9>
extern volatile __bit                   RXB0EID9            __at(0x7B19);	// @ (0xF63 * 8 + 1)
#define                                 RXB0EID9_bit        _BIT_ACCESS(RXB0EIDH,1)
// RXB0SIDL<RXB0EXID>
extern volatile __bit                   RXB0EXID            __at(0x7B13);	// @ (0xF62 * 8 + 3)
#define                                 RXB0EXID_bit        _BIT_ACCESS(RXB0SIDL,3)
// RXB0CON<RXB0FILHIT0>
extern volatile __bit                   RXB0FILHIT0         __at(0x7B00);	// @ (0xF60 * 8 + 0)
#define                                 RXB0FILHIT0_bit     _BIT_ACCESS(RXB0CON,0)
// RXB0CON<RXB0FILHIT1>
extern volatile __bit                   RXB0FILHIT1         __at(0x7B01);	// @ (0xF60 * 8 + 1)
#define                                 RXB0FILHIT1_bit     _BIT_ACCESS(RXB0CON,1)
// RXB0CON<RXB0FILHIT2>
extern volatile __bit                   RXB0FILHIT2         __at(0x7B02);	// @ (0xF60 * 8 + 2)
#define                                 RXB0FILHIT2_bit     _BIT_ACCESS(RXB0CON,2)
// RXB0CON<RXB0FILHIT3>
extern volatile __bit                   RXB0FILHIT3         __at(0x7B03);	// @ (0xF60 * 8 + 3)
#define                                 RXB0FILHIT3_bit     _BIT_ACCESS(RXB0CON,3)
// RXB0CON<RXB0FILHIT4>
extern volatile __bit                   RXB0FILHIT4         __at(0x7B04);	// @ (0xF60 * 8 + 4)
#define                                 RXB0FILHIT4_bit     _BIT_ACCESS(RXB0CON,4)
// RXB0CON<RXB0FUL>
extern volatile __bit                   RXB0FUL             __at(0x7B07);	// @ (0xF60 * 8 + 7)
#define                                 RXB0FUL_bit         _BIT_ACCESS(RXB0CON,7)
// PIE3<RXB0IE>
extern volatile __bit _DEPRECATED       RXB0IE              __at(0x7D18);	// @ (0xFA3 * 8 + 0)
#define                                 RXB0IE_bit          _BIT_ACCESS(PIE3,0)
// PIR3<RXB0IF>
extern volatile __bit                   RXB0IF              __at(0x7D20);	// @ (0xFA4 * 8 + 0)
#define                                 RXB0IF_bit          _BIT_ACCESS(PIR3,0)
// IPR3<RXB0IP>
extern volatile __bit                   RXB0IP              __at(0x7D28);	// @ (0xFA5 * 8 + 0)
#define                                 RXB0IP_bit          _BIT_ACCESS(IPR3,0)
// RXB0CON<RXB0M0>
extern volatile __bit                   RXB0M0              __at(0x7B05);	// @ (0xF60 * 8 + 5)
#define                                 RXB0M0_bit          _BIT_ACCESS(RXB0CON,5)
// RXB0CON<RXB0M1>
extern volatile __bit                   RXB0M1              __at(0x7B06);	// @ (0xF60 * 8 + 6)
#define                                 RXB0M1_bit          _BIT_ACCESS(RXB0CON,6)
// COMSTAT<RXB0OVFL>
extern volatile __bit                   RXB0OVFL            __at(0x7BA7);	// @ (0xF74 * 8 + 7)
#define                                 RXB0OVFL_bit        _BIT_ACCESS(COMSTAT,7)
// COMSTAT<RXB0OVFL_NOT_FIFOEMPTY>
extern volatile __bit                   RXB0OVFL_NOT_FIFOEMPTY __at(0x7BA7);	// @ (0xF74 * 8 + 7)
#define                                 RXB0OVFL_NOT_FIFOEMPTY_bit _BIT_ACCESS(COMSTAT,7)
// COMSTAT<RXB0OVFL_nFIFOEMPTY>
extern volatile __bit                   RXB0OVFL_nFIFOEMPTY __at(0x7BA7);	// @ (0xF74 * 8 + 7)
#define                                 RXB0OVFL_nFIFOEMPTY_bit _BIT_ACCESS(COMSTAT,7)
// RXB0DLC<RXB0RB0>
extern volatile __bit                   RXB0RB0             __at(0x7B2C);	// @ (0xF65 * 8 + 4)
#define                                 RXB0RB0_bit         _BIT_ACCESS(RXB0DLC,4)
// RXB0DLC<RXB0RB1>
extern volatile __bit                   RXB0RB1             __at(0x7B2D);	// @ (0xF65 * 8 + 5)
#define                                 RXB0RB1_bit         _BIT_ACCESS(RXB0DLC,5)
// RXB0DLC<RXB0RTR>
extern volatile __bit                   RXB0RTR             __at(0x7B2E);	// @ (0xF65 * 8 + 6)
#define                                 RXB0RTR_bit         _BIT_ACCESS(RXB0DLC,6)
// RXB0CON<RXB0RTRR0>
extern volatile __bit                   RXB0RTRR0           __at(0x7B03);	// @ (0xF60 * 8 + 3)
#define                                 RXB0RTRR0_bit       _BIT_ACCESS(RXB0CON,3)
// RXB0CON<RXB0RTRRO>
extern volatile __bit                   RXB0RTRRO           __at(0x7B05);	// @ (0xF60 * 8 + 5)
#define                                 RXB0RTRRO_bit       _BIT_ACCESS(RXB0CON,5)
// RXB0SIDL<RXB0SID0>
extern volatile __bit                   RXB0SID0            __at(0x7B15);	// @ (0xF62 * 8 + 5)
#define                                 RXB0SID0_bit        _BIT_ACCESS(RXB0SIDL,5)
// RXB0SIDL<RXB0SID1>
extern volatile __bit                   RXB0SID1            __at(0x7B16);	// @ (0xF62 * 8 + 6)
#define                                 RXB0SID1_bit        _BIT_ACCESS(RXB0SIDL,6)
// RXB0SIDH<RXB0SID10>
extern volatile __bit                   RXB0SID10           __at(0x7B0F);	// @ (0xF61 * 8 + 7)
#define                                 RXB0SID10_bit       _BIT_ACCESS(RXB0SIDH,7)
// RXB0SIDL<RXB0SID2>
extern volatile __bit                   RXB0SID2            __at(0x7B17);	// @ (0xF62 * 8 + 7)
#define                                 RXB0SID2_bit        _BIT_ACCESS(RXB0SIDL,7)
// RXB0SIDH<RXB0SID3>
extern volatile __bit                   RXB0SID3            __at(0x7B08);	// @ (0xF61 * 8 + 0)
#define                                 RXB0SID3_bit        _BIT_ACCESS(RXB0SIDH,0)
// RXB0SIDH<RXB0SID4>
extern volatile __bit                   RXB0SID4            __at(0x7B09);	// @ (0xF61 * 8 + 1)
#define                                 RXB0SID4_bit        _BIT_ACCESS(RXB0SIDH,1)
// RXB0SIDH<RXB0SID5>
extern volatile __bit                   RXB0SID5            __at(0x7B0A);	// @ (0xF61 * 8 + 2)
#define                                 RXB0SID5_bit        _BIT_ACCESS(RXB0SIDH,2)
// RXB0SIDH<RXB0SID6>
extern volatile __bit                   RXB0SID6            __at(0x7B0B);	// @ (0xF61 * 8 + 3)
#define                                 RXB0SID6_bit        _BIT_ACCESS(RXB0SIDH,3)
// RXB0SIDH<RXB0SID7>
extern volatile __bit                   RXB0SID7            __at(0x7B0C);	// @ (0xF61 * 8 + 4)
#define                                 RXB0SID7_bit        _BIT_ACCESS(RXB0SIDH,4)
// RXB0SIDH<RXB0SID8>
extern volatile __bit                   RXB0SID8            __at(0x7B0D);	// @ (0xF61 * 8 + 5)
#define                                 RXB0SID8_bit        _BIT_ACCESS(RXB0SIDH,5)
// RXB0SIDH<RXB0SID9>
extern volatile __bit                   RXB0SID9            __at(0x7B0E);	// @ (0xF61 * 8 + 6)
#define                                 RXB0SID9_bit        _BIT_ACCESS(RXB0SIDH,6)
// RXB0SIDL<RXB0SRR>
extern volatile __bit                   RXB0SRR             __at(0x7B14);	// @ (0xF62 * 8 + 4)
#define                                 RXB0SRR_bit         _BIT_ACCESS(RXB0SIDL,4)
// RXB1D0<RXB1D00>
extern volatile __bit                   RXB1D00             __at(0x7AB0);	// @ (0xF56 * 8 + 0)
#define                                 RXB1D00_bit         _BIT_ACCESS(RXB1D0,0)
// RXB1D0<RXB1D01>
extern volatile __bit                   RXB1D01             __at(0x7AB1);	// @ (0xF56 * 8 + 1)
#define                                 RXB1D01_bit         _BIT_ACCESS(RXB1D0,1)
// RXB1D0<RXB1D02>
extern volatile __bit                   RXB1D02             __at(0x7AB2);	// @ (0xF56 * 8 + 2)
#define                                 RXB1D02_bit         _BIT_ACCESS(RXB1D0,2)
// RXB1D0<RXB1D03>
extern volatile __bit                   RXB1D03             __at(0x7AB3);	// @ (0xF56 * 8 + 3)
#define                                 RXB1D03_bit         _BIT_ACCESS(RXB1D0,3)
// RXB1D0<RXB1D04>
extern volatile __bit                   RXB1D04             __at(0x7AB4);	// @ (0xF56 * 8 + 4)
#define                                 RXB1D04_bit         _BIT_ACCESS(RXB1D0,4)
// RXB1D0<RXB1D05>
extern volatile __bit                   RXB1D05             __at(0x7AB5);	// @ (0xF56 * 8 + 5)
#define                                 RXB1D05_bit         _BIT_ACCESS(RXB1D0,5)
// RXB1D0<RXB1D06>
extern volatile __bit                   RXB1D06             __at(0x7AB6);	// @ (0xF56 * 8 + 6)
#define                                 RXB1D06_bit         _BIT_ACCESS(RXB1D0,6)
// RXB1D0<RXB1D07>
extern volatile __bit                   RXB1D07             __at(0x7AB7);	// @ (0xF56 * 8 + 7)
#define                                 RXB1D07_bit         _BIT_ACCESS(RXB1D0,7)
// RXB1D1<RXB1D10>
extern volatile __bit                   RXB1D10             __at(0x7AB8);	// @ (0xF57 * 8 + 0)
#define                                 RXB1D10_bit         _BIT_ACCESS(RXB1D1,0)
// RXB1D1<RXB1D11>
extern volatile __bit                   RXB1D11             __at(0x7AB9);	// @ (0xF57 * 8 + 1)
#define                                 RXB1D11_bit         _BIT_ACCESS(RXB1D1,1)
// RXB1D1<RXB1D12>
extern volatile __bit                   RXB1D12             __at(0x7ABA);	// @ (0xF57 * 8 + 2)
#define                                 RXB1D12_bit         _BIT_ACCESS(RXB1D1,2)
// RXB1D1<RXB1D13>
extern volatile __bit                   RXB1D13             __at(0x7ABB);	// @ (0xF57 * 8 + 3)
#define                                 RXB1D13_bit         _BIT_ACCESS(RXB1D1,3)
// RXB1D1<RXB1D14>
extern volatile __bit                   RXB1D14             __at(0x7ABC);	// @ (0xF57 * 8 + 4)
#define                                 RXB1D14_bit         _BIT_ACCESS(RXB1D1,4)
// RXB1D1<RXB1D15>
extern volatile __bit                   RXB1D15             __at(0x7ABD);	// @ (0xF57 * 8 + 5)
#define                                 RXB1D15_bit         _BIT_ACCESS(RXB1D1,5)
// RXB1D1<RXB1D16>
extern volatile __bit                   RXB1D16             __at(0x7ABE);	// @ (0xF57 * 8 + 6)
#define                                 RXB1D16_bit         _BIT_ACCESS(RXB1D1,6)
// RXB1D1<RXB1D17>
extern volatile __bit                   RXB1D17             __at(0x7ABF);	// @ (0xF57 * 8 + 7)
#define                                 RXB1D17_bit         _BIT_ACCESS(RXB1D1,7)
// RXB1D2<RXB1D20>
extern volatile __bit                   RXB1D20             __at(0x7AC0);	// @ (0xF58 * 8 + 0)
#define                                 RXB1D20_bit         _BIT_ACCESS(RXB1D2,0)
// RXB1D2<RXB1D21>
extern volatile __bit                   RXB1D21             __at(0x7AC1);	// @ (0xF58 * 8 + 1)
#define                                 RXB1D21_bit         _BIT_ACCESS(RXB1D2,1)
// RXB1D2<RXB1D22>
extern volatile __bit                   RXB1D22             __at(0x7AC2);	// @ (0xF58 * 8 + 2)
#define                                 RXB1D22_bit         _BIT_ACCESS(RXB1D2,2)
// RXB1D2<RXB1D23>
extern volatile __bit                   RXB1D23             __at(0x7AC3);	// @ (0xF58 * 8 + 3)
#define                                 RXB1D23_bit         _BIT_ACCESS(RXB1D2,3)
// RXB1D2<RXB1D24>
extern volatile __bit                   RXB1D24             __at(0x7AC4);	// @ (0xF58 * 8 + 4)
#define                                 RXB1D24_bit         _BIT_ACCESS(RXB1D2,4)
// RXB1D2<RXB1D25>
extern volatile __bit                   RXB1D25             __at(0x7AC5);	// @ (0xF58 * 8 + 5)
#define                                 RXB1D25_bit         _BIT_ACCESS(RXB1D2,5)
// RXB1D2<RXB1D26>
extern volatile __bit                   RXB1D26             __at(0x7AC6);	// @ (0xF58 * 8 + 6)
#define                                 RXB1D26_bit         _BIT_ACCESS(RXB1D2,6)
// RXB1D2<RXB1D27>
extern volatile __bit                   RXB1D27             __at(0x7AC7);	// @ (0xF58 * 8 + 7)
#define                                 RXB1D27_bit         _BIT_ACCESS(RXB1D2,7)
// RXB1D3<RXB1D30>
extern volatile __bit                   RXB1D30             __at(0x7AC8);	// @ (0xF59 * 8 + 0)
#define                                 RXB1D30_bit         _BIT_ACCESS(RXB1D3,0)
// RXB1D3<RXB1D31>
extern volatile __bit                   RXB1D31             __at(0x7AC9);	// @ (0xF59 * 8 + 1)
#define                                 RXB1D31_bit         _BIT_ACCESS(RXB1D3,1)
// RXB1D3<RXB1D32>
extern volatile __bit                   RXB1D32             __at(0x7ACA);	// @ (0xF59 * 8 + 2)
#define                                 RXB1D32_bit         _BIT_ACCESS(RXB1D3,2)
// RXB1D3<RXB1D33>
extern volatile __bit                   RXB1D33             __at(0x7ACB);	// @ (0xF59 * 8 + 3)
#define                                 RXB1D33_bit         _BIT_ACCESS(RXB1D3,3)
// RXB1D3<RXB1D34>
extern volatile __bit                   RXB1D34             __at(0x7ACC);	// @ (0xF59 * 8 + 4)
#define                                 RXB1D34_bit         _BIT_ACCESS(RXB1D3,4)
// RXB1D3<RXB1D35>
extern volatile __bit                   RXB1D35             __at(0x7ACD);	// @ (0xF59 * 8 + 5)
#define                                 RXB1D35_bit         _BIT_ACCESS(RXB1D3,5)
// RXB1D3<RXB1D36>
extern volatile __bit                   RXB1D36             __at(0x7ACE);	// @ (0xF59 * 8 + 6)
#define                                 RXB1D36_bit         _BIT_ACCESS(RXB1D3,6)
// RXB1D3<RXB1D37>
extern volatile __bit                   RXB1D37             __at(0x7ACF);	// @ (0xF59 * 8 + 7)
#define                                 RXB1D37_bit         _BIT_ACCESS(RXB1D3,7)
// RXB1D4<RXB1D40>
extern volatile __bit                   RXB1D40             __at(0x7AD0);	// @ (0xF5A * 8 + 0)
#define                                 RXB1D40_bit         _BIT_ACCESS(RXB1D4,0)
// RXB1D4<RXB1D41>
extern volatile __bit                   RXB1D41             __at(0x7AD1);	// @ (0xF5A * 8 + 1)
#define                                 RXB1D41_bit         _BIT_ACCESS(RXB1D4,1)
// RXB1D4<RXB1D42>
extern volatile __bit                   RXB1D42             __at(0x7AD2);	// @ (0xF5A * 8 + 2)
#define                                 RXB1D42_bit         _BIT_ACCESS(RXB1D4,2)
// RXB1D4<RXB1D43>
extern volatile __bit                   RXB1D43             __at(0x7AD3);	// @ (0xF5A * 8 + 3)
#define                                 RXB1D43_bit         _BIT_ACCESS(RXB1D4,3)
// RXB1D4<RXB1D44>
extern volatile __bit                   RXB1D44             __at(0x7AD4);	// @ (0xF5A * 8 + 4)
#define                                 RXB1D44_bit         _BIT_ACCESS(RXB1D4,4)
// RXB1D4<RXB1D45>
extern volatile __bit                   RXB1D45             __at(0x7AD5);	// @ (0xF5A * 8 + 5)
#define                                 RXB1D45_bit         _BIT_ACCESS(RXB1D4,5)
// RXB1D4<RXB1D46>
extern volatile __bit                   RXB1D46             __at(0x7AD6);	// @ (0xF5A * 8 + 6)
#define                                 RXB1D46_bit         _BIT_ACCESS(RXB1D4,6)
// RXB1D4<RXB1D47>
extern volatile __bit                   RXB1D47             __at(0x7AD7);	// @ (0xF5A * 8 + 7)
#define                                 RXB1D47_bit         _BIT_ACCESS(RXB1D4,7)
// RXB1D5<RXB1D50>
extern volatile __bit                   RXB1D50             __at(0x7AD8);	// @ (0xF5B * 8 + 0)
#define                                 RXB1D50_bit         _BIT_ACCESS(RXB1D5,0)
// RXB1D5<RXB1D51>
extern volatile __bit                   RXB1D51             __at(0x7AD9);	// @ (0xF5B * 8 + 1)
#define                                 RXB1D51_bit         _BIT_ACCESS(RXB1D5,1)
// RXB1D5<RXB1D52>
extern volatile __bit                   RXB1D52             __at(0x7ADA);	// @ (0xF5B * 8 + 2)
#define                                 RXB1D52_bit         _BIT_ACCESS(RXB1D5,2)
// RXB1D5<RXB1D53>
extern volatile __bit                   RXB1D53             __at(0x7ADB);	// @ (0xF5B * 8 + 3)
#define                                 RXB1D53_bit         _BIT_ACCESS(RXB1D5,3)
// RXB1D5<RXB1D54>
extern volatile __bit                   RXB1D54             __at(0x7ADC);	// @ (0xF5B * 8 + 4)
#define                                 RXB1D54_bit         _BIT_ACCESS(RXB1D5,4)
// RXB1D5<RXB1D55>
extern volatile __bit                   RXB1D55             __at(0x7ADD);	// @ (0xF5B * 8 + 5)
#define                                 RXB1D55_bit         _BIT_ACCESS(RXB1D5,5)
// RXB1D5<RXB1D56>
extern volatile __bit                   RXB1D56             __at(0x7ADE);	// @ (0xF5B * 8 + 6)
#define                                 RXB1D56_bit         _BIT_ACCESS(RXB1D5,6)
// RXB1D5<RXB1D57>
extern volatile __bit                   RXB1D57             __at(0x7ADF);	// @ (0xF5B * 8 + 7)
#define                                 RXB1D57_bit         _BIT_ACCESS(RXB1D5,7)
// RXB1D6<RXB1D60>
extern volatile __bit                   RXB1D60             __at(0x7AE0);	// @ (0xF5C * 8 + 0)
#define                                 RXB1D60_bit         _BIT_ACCESS(RXB1D6,0)
// RXB1D6<RXB1D61>
extern volatile __bit                   RXB1D61             __at(0x7AE1);	// @ (0xF5C * 8 + 1)
#define                                 RXB1D61_bit         _BIT_ACCESS(RXB1D6,1)
// RXB1D6<RXB1D62>
extern volatile __bit                   RXB1D62             __at(0x7AE2);	// @ (0xF5C * 8 + 2)
#define                                 RXB1D62_bit         _BIT_ACCESS(RXB1D6,2)
// RXB1D6<RXB1D63>
extern volatile __bit                   RXB1D63             __at(0x7AE3);	// @ (0xF5C * 8 + 3)
#define                                 RXB1D63_bit         _BIT_ACCESS(RXB1D6,3)
// RXB1D6<RXB1D64>
extern volatile __bit                   RXB1D64             __at(0x7AE4);	// @ (0xF5C * 8 + 4)
#define                                 RXB1D64_bit         _BIT_ACCESS(RXB1D6,4)
// RXB1D6<RXB1D65>
extern volatile __bit                   RXB1D65             __at(0x7AE5);	// @ (0xF5C * 8 + 5)
#define                                 RXB1D65_bit         _BIT_ACCESS(RXB1D6,5)
// RXB1D6<RXB1D66>
extern volatile __bit                   RXB1D66             __at(0x7AE6);	// @ (0xF5C * 8 + 6)
#define                                 RXB1D66_bit         _BIT_ACCESS(RXB1D6,6)
// RXB1D6<RXB1D67>
extern volatile __bit                   RXB1D67             __at(0x7AE7);	// @ (0xF5C * 8 + 7)
#define                                 RXB1D67_bit         _BIT_ACCESS(RXB1D6,7)
// RXB1D7<RXB1D70>
extern volatile __bit                   RXB1D70             __at(0x7AE8);	// @ (0xF5D * 8 + 0)
#define                                 RXB1D70_bit         _BIT_ACCESS(RXB1D7,0)
// RXB1D7<RXB1D71>
extern volatile __bit                   RXB1D71             __at(0x7AE9);	// @ (0xF5D * 8 + 1)
#define                                 RXB1D71_bit         _BIT_ACCESS(RXB1D7,1)
// RXB1D7<RXB1D72>
extern volatile __bit                   RXB1D72             __at(0x7AEA);	// @ (0xF5D * 8 + 2)
#define                                 RXB1D72_bit         _BIT_ACCESS(RXB1D7,2)
// RXB1D7<RXB1D73>
extern volatile __bit                   RXB1D73             __at(0x7AEB);	// @ (0xF5D * 8 + 3)
#define                                 RXB1D73_bit         _BIT_ACCESS(RXB1D7,3)
// RXB1D7<RXB1D74>
extern volatile __bit                   RXB1D74             __at(0x7AEC);	// @ (0xF5D * 8 + 4)
#define                                 RXB1D74_bit         _BIT_ACCESS(RXB1D7,4)
// RXB1D7<RXB1D75>
extern volatile __bit                   RXB1D75             __at(0x7AED);	// @ (0xF5D * 8 + 5)
#define                                 RXB1D75_bit         _BIT_ACCESS(RXB1D7,5)
// RXB1D7<RXB1D76>
extern volatile __bit                   RXB1D76             __at(0x7AEE);	// @ (0xF5D * 8 + 6)
#define                                 RXB1D76_bit         _BIT_ACCESS(RXB1D7,6)
// RXB1D7<RXB1D77>
extern volatile __bit                   RXB1D77             __at(0x7AEF);	// @ (0xF5D * 8 + 7)
#define                                 RXB1D77_bit         _BIT_ACCESS(RXB1D7,7)
// RXB1DLC<RXB1DLC0>
extern volatile __bit                   RXB1DLC0            __at(0x7AA8);	// @ (0xF55 * 8 + 0)
#define                                 RXB1DLC0_bit        _BIT_ACCESS(RXB1DLC,0)
// RXB1DLC<RXB1DLC1>
extern volatile __bit                   RXB1DLC1            __at(0x7AA9);	// @ (0xF55 * 8 + 1)
#define                                 RXB1DLC1_bit        _BIT_ACCESS(RXB1DLC,1)
// RXB1DLC<RXB1DLC2>
extern volatile __bit                   RXB1DLC2            __at(0x7AAA);	// @ (0xF55 * 8 + 2)
#define                                 RXB1DLC2_bit        _BIT_ACCESS(RXB1DLC,2)
// RXB1DLC<RXB1DLC3>
extern volatile __bit                   RXB1DLC3            __at(0x7AAB);	// @ (0xF55 * 8 + 3)
#define                                 RXB1DLC3_bit        _BIT_ACCESS(RXB1DLC,3)
// RXB1EIDL<RXB1EID0>
extern volatile __bit                   RXB1EID0            __at(0x7AA0);	// @ (0xF54 * 8 + 0)
#define                                 RXB1EID0_bit        _BIT_ACCESS(RXB1EIDL,0)
// RXB1EIDL<RXB1EID1>
extern volatile __bit                   RXB1EID1            __at(0x7AA1);	// @ (0xF54 * 8 + 1)
#define                                 RXB1EID1_bit        _BIT_ACCESS(RXB1EIDL,1)
// RXB1EIDH<RXB1EID10>
extern volatile __bit                   RXB1EID10           __at(0x7A9A);	// @ (0xF53 * 8 + 2)
#define                                 RXB1EID10_bit       _BIT_ACCESS(RXB1EIDH,2)
// RXB1EIDH<RXB1EID11>
extern volatile __bit                   RXB1EID11           __at(0x7A9B);	// @ (0xF53 * 8 + 3)
#define                                 RXB1EID11_bit       _BIT_ACCESS(RXB1EIDH,3)
// RXB1EIDH<RXB1EID12>
extern volatile __bit                   RXB1EID12           __at(0x7A9C);	// @ (0xF53 * 8 + 4)
#define                                 RXB1EID12_bit       _BIT_ACCESS(RXB1EIDH,4)
// RXB1EIDH<RXB1EID13>
extern volatile __bit                   RXB1EID13           __at(0x7A9D);	// @ (0xF53 * 8 + 5)
#define                                 RXB1EID13_bit       _BIT_ACCESS(RXB1EIDH,5)
// RXB1EIDH<RXB1EID14>
extern volatile __bit                   RXB1EID14           __at(0x7A9E);	// @ (0xF53 * 8 + 6)
#define                                 RXB1EID14_bit       _BIT_ACCESS(RXB1EIDH,6)
// RXB1EIDH<RXB1EID15>
extern volatile __bit                   RXB1EID15           __at(0x7A9F);	// @ (0xF53 * 8 + 7)
#define                                 RXB1EID15_bit       _BIT_ACCESS(RXB1EIDH,7)
// RXB1SIDL<RXB1EID16>
extern volatile __bit                   RXB1EID16           __at(0x7A90);	// @ (0xF52 * 8 + 0)
#define                                 RXB1EID16_bit       _BIT_ACCESS(RXB1SIDL,0)
// RXB1SIDL<RXB1EID17>
extern volatile __bit                   RXB1EID17           __at(0x7A91);	// @ (0xF52 * 8 + 1)
#define                                 RXB1EID17_bit       _BIT_ACCESS(RXB1SIDL,1)
// RXB1EIDL<RXB1EID2>
extern volatile __bit                   RXB1EID2            __at(0x7AA2);	// @ (0xF54 * 8 + 2)
#define                                 RXB1EID2_bit        _BIT_ACCESS(RXB1EIDL,2)
// RXB1EIDL<RXB1EID3>
extern volatile __bit                   RXB1EID3            __at(0x7AA3);	// @ (0xF54 * 8 + 3)
#define                                 RXB1EID3_bit        _BIT_ACCESS(RXB1EIDL,3)
// RXB1EIDL<RXB1EID4>
extern volatile __bit                   RXB1EID4            __at(0x7AA4);	// @ (0xF54 * 8 + 4)
#define                                 RXB1EID4_bit        _BIT_ACCESS(RXB1EIDL,4)
// RXB1EIDL<RXB1EID5>
extern volatile __bit                   RXB1EID5            __at(0x7AA5);	// @ (0xF54 * 8 + 5)
#define                                 RXB1EID5_bit        _BIT_ACCESS(RXB1EIDL,5)
// RXB1EIDL<RXB1EID6>
extern volatile __bit                   RXB1EID6            __at(0x7AA6);	// @ (0xF54 * 8 + 6)
#define                                 RXB1EID6_bit        _BIT_ACCESS(RXB1EIDL,6)
// RXB1EIDL<RXB1EID7>
extern volatile __bit                   RXB1EID7            __at(0x7AA7);	// @ (0xF54 * 8 + 7)
#define                                 RXB1EID7_bit        _BIT_ACCESS(RXB1EIDL,7)
// RXB1EIDH<RXB1EID8>
extern volatile __bit                   RXB1EID8            __at(0x7A98);	// @ (0xF53 * 8 + 0)
#define                                 RXB1EID8_bit        _BIT_ACCESS(RXB1EIDH,0)
// RXB1EIDH<RXB1EID9>
extern volatile __bit                   RXB1EID9            __at(0x7A99);	// @ (0xF53 * 8 + 1)
#define                                 RXB1EID9_bit        _BIT_ACCESS(RXB1EIDH,1)
// RXB1SIDL<RXB1EXID>
extern volatile __bit                   RXB1EXID            __at(0x7A93);	// @ (0xF52 * 8 + 3)
#define                                 RXB1EXID_bit        _BIT_ACCESS(RXB1SIDL,3)
// RXB1CON<RXB1FILHIT0>
extern volatile __bit                   RXB1FILHIT0         __at(0x7A80);	// @ (0xF50 * 8 + 0)
#define                                 RXB1FILHIT0_bit     _BIT_ACCESS(RXB1CON,0)
// RXB1CON<RXB1FILHIT1>
extern volatile __bit                   RXB1FILHIT1         __at(0x7A81);	// @ (0xF50 * 8 + 1)
#define                                 RXB1FILHIT1_bit     _BIT_ACCESS(RXB1CON,1)
// RXB1CON<RXB1FILHIT2>
extern volatile __bit                   RXB1FILHIT2         __at(0x7A82);	// @ (0xF50 * 8 + 2)
#define                                 RXB1FILHIT2_bit     _BIT_ACCESS(RXB1CON,2)
// RXB1CON<RXB1FILHIT3>
extern volatile __bit                   RXB1FILHIT3         __at(0x7A83);	// @ (0xF50 * 8 + 3)
#define                                 RXB1FILHIT3_bit     _BIT_ACCESS(RXB1CON,3)
// RXB1CON<RXB1FILHIT4>
extern volatile __bit                   RXB1FILHIT4         __at(0x7A84);	// @ (0xF50 * 8 + 4)
#define                                 RXB1FILHIT4_bit     _BIT_ACCESS(RXB1CON,4)
// RXB1CON<RXB1FUL>
extern volatile __bit                   RXB1FUL             __at(0x7A87);	// @ (0xF50 * 8 + 7)
#define                                 RXB1FUL_bit         _BIT_ACCESS(RXB1CON,7)
// PIE3<RXB1IE>
extern volatile __bit _DEPRECATED       RXB1IE              __at(0x7D19);	// @ (0xFA3 * 8 + 1)
#define                                 RXB1IE_bit          _BIT_ACCESS(PIE3,1)
// PIR3<RXB1IF>
extern volatile __bit                   RXB1IF              __at(0x7D21);	// @ (0xFA4 * 8 + 1)
#define                                 RXB1IF_bit          _BIT_ACCESS(PIR3,1)
// IPR3<RXB1IP>
extern volatile __bit                   RXB1IP              __at(0x7D29);	// @ (0xFA5 * 8 + 1)
#define                                 RXB1IP_bit          _BIT_ACCESS(IPR3,1)
// RXB1CON<RXB1M0>
extern volatile __bit                   RXB1M0              __at(0x7A85);	// @ (0xF50 * 8 + 5)
#define                                 RXB1M0_bit          _BIT_ACCESS(RXB1CON,5)
// RXB1CON<RXB1M1>
extern volatile __bit                   RXB1M1              __at(0x7A86);	// @ (0xF50 * 8 + 6)
#define                                 RXB1M1_bit          _BIT_ACCESS(RXB1CON,6)
// COMSTAT<RXB1OVFL>
extern volatile __bit                   RXB1OVFL            __at(0x7BA6);	// @ (0xF74 * 8 + 6)
#define                                 RXB1OVFL_bit        _BIT_ACCESS(COMSTAT,6)
// RXB1DLC<RXB1RB0>
extern volatile __bit                   RXB1RB0             __at(0x7AAC);	// @ (0xF55 * 8 + 4)
#define                                 RXB1RB0_bit         _BIT_ACCESS(RXB1DLC,4)
// RXB1DLC<RXB1RB1>
extern volatile __bit                   RXB1RB1             __at(0x7AAD);	// @ (0xF55 * 8 + 5)
#define                                 RXB1RB1_bit         _BIT_ACCESS(RXB1DLC,5)
// RXB1DLC<RXB1RTR>
extern volatile __bit                   RXB1RTR             __at(0x7AAE);	// @ (0xF55 * 8 + 6)
#define                                 RXB1RTR_bit         _BIT_ACCESS(RXB1DLC,6)
// RXB1CON<RXB1RTRR0>
extern volatile __bit                   RXB1RTRR0           __at(0x7A83);	// @ (0xF50 * 8 + 3)
#define                                 RXB1RTRR0_bit       _BIT_ACCESS(RXB1CON,3)
// RXB1CON<RXB1RTRRO>
extern volatile __bit                   RXB1RTRRO           __at(0x7A85);	// @ (0xF50 * 8 + 5)
#define                                 RXB1RTRRO_bit       _BIT_ACCESS(RXB1CON,5)
// RXB1SIDL<RXB1SID0>
extern volatile __bit                   RXB1SID0            __at(0x7A95);	// @ (0xF52 * 8 + 5)
#define                                 RXB1SID0_bit        _BIT_ACCESS(RXB1SIDL,5)
// RXB1SIDL<RXB1SID1>
extern volatile __bit                   RXB1SID1            __at(0x7A96);	// @ (0xF52 * 8 + 6)
#define                                 RXB1SID1_bit        _BIT_ACCESS(RXB1SIDL,6)
// RXB1SIDH<RXB1SID10>
extern volatile __bit                   RXB1SID10           __at(0x7A8F);	// @ (0xF51 * 8 + 7)
#define                                 RXB1SID10_bit       _BIT_ACCESS(RXB1SIDH,7)
// RXB1SIDL<RXB1SID2>
extern volatile __bit                   RXB1SID2            __at(0x7A97);	// @ (0xF52 * 8 + 7)
#define                                 RXB1SID2_bit        _BIT_ACCESS(RXB1SIDL,7)
// RXB1SIDH<RXB1SID3>
extern volatile __bit                   RXB1SID3            __at(0x7A88);	// @ (0xF51 * 8 + 0)
#define                                 RXB1SID3_bit        _BIT_ACCESS(RXB1SIDH,0)
// RXB1SIDH<RXB1SID4>
extern volatile __bit                   RXB1SID4            __at(0x7A89);	// @ (0xF51 * 8 + 1)
#define                                 RXB1SID4_bit        _BIT_ACCESS(RXB1SIDH,1)
// RXB1SIDH<RXB1SID5>
extern volatile __bit                   RXB1SID5            __at(0x7A8A);	// @ (0xF51 * 8 + 2)
#define                                 RXB1SID5_bit        _BIT_ACCESS(RXB1SIDH,2)
// RXB1SIDH<RXB1SID6>
extern volatile __bit                   RXB1SID6            __at(0x7A8B);	// @ (0xF51 * 8 + 3)
#define                                 RXB1SID6_bit        _BIT_ACCESS(RXB1SIDH,3)
// RXB1SIDH<RXB1SID7>
extern volatile __bit                   RXB1SID7            __at(0x7A8C);	// @ (0xF51 * 8 + 4)
#define                                 RXB1SID7_bit        _BIT_ACCESS(RXB1SIDH,4)
// RXB1SIDH<RXB1SID8>
extern volatile __bit                   RXB1SID8            __at(0x7A8D);	// @ (0xF51 * 8 + 5)
#define                                 RXB1SID8_bit        _BIT_ACCESS(RXB1SIDH,5)
// RXB1SIDH<RXB1SID9>
extern volatile __bit                   RXB1SID9            __at(0x7A8E);	// @ (0xF51 * 8 + 6)
#define                                 RXB1SID9_bit        _BIT_ACCESS(RXB1SIDH,6)
// RXB1SIDL<RXB1SRR>
extern volatile __bit                   RXB1SRR             __at(0x7A94);	// @ (0xF52 * 8 + 4)
#define                                 RXB1SRR_bit         _BIT_ACCESS(RXB1SIDL,4)
// PIE3<RXBNIE>
extern volatile __bit                   RXBNIE              __at(0x7D19);	// @ (0xFA3 * 8 + 1)
#define                                 RXBNIE_bit          _BIT_ACCESS(PIE3,1)
// PIR3<RXBNIF>
extern volatile __bit                   RXBNIF              __at(0x7D21);	// @ (0xFA4 * 8 + 1)
#define                                 RXBNIF_bit          _BIT_ACCESS(PIR3,1)
// IPR3<RXBNIP>
extern volatile __bit                   RXBNIP              __at(0x7D29);	// @ (0xFA5 * 8 + 1)
#define                                 RXBNIP_bit          _BIT_ACCESS(IPR3,1)
// COMSTAT<RXBNOVFL>
extern volatile __bit                   RXBNOVFL            __at(0x7BA6);	// @ (0xF74 * 8 + 6)
#define                                 RXBNOVFL_bit        _BIT_ACCESS(COMSTAT,6)
// COMSTAT<RXBP>
extern volatile __bit                   RXBP                __at(0x7BA3);	// @ (0xF74 * 8 + 3)
#define                                 RXBP_bit            _BIT_ACCESS(COMSTAT,3)
// PIE3<RXBnIE>
extern volatile __bit                   RXBnIE              __at(0x7D19);	// @ (0xFA3 * 8 + 1)
#define                                 RXBnIE_bit          _BIT_ACCESS(PIE3,1)
// PIR3<RXBnIF>
extern volatile __bit                   RXBnIF              __at(0x7D21);	// @ (0xFA4 * 8 + 1)
#define                                 RXBnIF_bit          _BIT_ACCESS(PIR3,1)
// IPR3<RXBnIP>
extern volatile __bit                   RXBnIP              __at(0x7D29);	// @ (0xFA5 * 8 + 1)
#define                                 RXBnIP_bit          _BIT_ACCESS(IPR3,1)
// COMSTAT<RXBnOVFL>
extern volatile __bit                   RXBnOVFL            __at(0x7BA6);	// @ (0xF74 * 8 + 6)
#define                                 RXBnOVFL_bit        _BIT_ACCESS(COMSTAT,6)
// RXF0EIDL<RXF0EID0>
extern volatile __bit                   RXF0EID0            __at(0x7818);	// @ (0xF03 * 8 + 0)
#define                                 RXF0EID0_bit        _BIT_ACCESS(RXF0EIDL,0)
// RXF0EIDL<RXF0EID1>
extern volatile __bit                   RXF0EID1            __at(0x7819);	// @ (0xF03 * 8 + 1)
#define                                 RXF0EID1_bit        _BIT_ACCESS(RXF0EIDL,1)
// RXF0EIDH<RXF0EID10>
extern volatile __bit                   RXF0EID10           __at(0x7812);	// @ (0xF02 * 8 + 2)
#define                                 RXF0EID10_bit       _BIT_ACCESS(RXF0EIDH,2)
// RXF0EIDH<RXF0EID11>
extern volatile __bit                   RXF0EID11           __at(0x7813);	// @ (0xF02 * 8 + 3)
#define                                 RXF0EID11_bit       _BIT_ACCESS(RXF0EIDH,3)
// RXF0EIDH<RXF0EID12>
extern volatile __bit                   RXF0EID12           __at(0x7814);	// @ (0xF02 * 8 + 4)
#define                                 RXF0EID12_bit       _BIT_ACCESS(RXF0EIDH,4)
// RXF0EIDH<RXF0EID13>
extern volatile __bit                   RXF0EID13           __at(0x7815);	// @ (0xF02 * 8 + 5)
#define                                 RXF0EID13_bit       _BIT_ACCESS(RXF0EIDH,5)
// RXF0EIDH<RXF0EID14>
extern volatile __bit                   RXF0EID14           __at(0x7816);	// @ (0xF02 * 8 + 6)
#define                                 RXF0EID14_bit       _BIT_ACCESS(RXF0EIDH,6)
// RXF0EIDH<RXF0EID15>
extern volatile __bit                   RXF0EID15           __at(0x7817);	// @ (0xF02 * 8 + 7)
#define                                 RXF0EID15_bit       _BIT_ACCESS(RXF0EIDH,7)
// RXF0SIDL<RXF0EID16>
extern volatile __bit                   RXF0EID16           __at(0x7808);	// @ (0xF01 * 8 + 0)
#define                                 RXF0EID16_bit       _BIT_ACCESS(RXF0SIDL,0)
// RXF0SIDL<RXF0EID17>
extern volatile __bit                   RXF0EID17           __at(0x7809);	// @ (0xF01 * 8 + 1)
#define                                 RXF0EID17_bit       _BIT_ACCESS(RXF0SIDL,1)
// RXF0EIDL<RXF0EID2>
extern volatile __bit                   RXF0EID2            __at(0x781A);	// @ (0xF03 * 8 + 2)
#define                                 RXF0EID2_bit        _BIT_ACCESS(RXF0EIDL,2)
// RXF0EIDL<RXF0EID3>
extern volatile __bit                   RXF0EID3            __at(0x781B);	// @ (0xF03 * 8 + 3)
#define                                 RXF0EID3_bit        _BIT_ACCESS(RXF0EIDL,3)
// RXF0EIDL<RXF0EID4>
extern volatile __bit                   RXF0EID4            __at(0x781C);	// @ (0xF03 * 8 + 4)
#define                                 RXF0EID4_bit        _BIT_ACCESS(RXF0EIDL,4)
// RXF0EIDL<RXF0EID5>
extern volatile __bit                   RXF0EID5            __at(0x781D);	// @ (0xF03 * 8 + 5)
#define                                 RXF0EID5_bit        _BIT_ACCESS(RXF0EIDL,5)
// RXF0EIDL<RXF0EID6>
extern volatile __bit                   RXF0EID6            __at(0x781E);	// @ (0xF03 * 8 + 6)
#define                                 RXF0EID6_bit        _BIT_ACCESS(RXF0EIDL,6)
// RXF0EIDL<RXF0EID7>
extern volatile __bit                   RXF0EID7            __at(0x781F);	// @ (0xF03 * 8 + 7)
#define                                 RXF0EID7_bit        _BIT_ACCESS(RXF0EIDL,7)
// RXF0EIDH<RXF0EID8>
extern volatile __bit                   RXF0EID8            __at(0x7810);	// @ (0xF02 * 8 + 0)
#define                                 RXF0EID8_bit        _BIT_ACCESS(RXF0EIDH,0)
// RXF0EIDH<RXF0EID9>
extern volatile __bit                   RXF0EID9            __at(0x7811);	// @ (0xF02 * 8 + 1)
#define                                 RXF0EID9_bit        _BIT_ACCESS(RXF0EIDH,1)
// RXFCON0<RXF0EN>
extern volatile __bit                   RXF0EN              __at(0x6EA0);	// @ (0xDD4 * 8 + 0)
#define                                 RXF0EN_bit          _BIT_ACCESS(RXFCON0,0)
// RXF0SIDL<RXF0EXIDEN>
extern volatile __bit                   RXF0EXIDEN          __at(0x780B);	// @ (0xF01 * 8 + 3)
#define                                 RXF0EXIDEN_bit      _BIT_ACCESS(RXF0SIDL,3)
// RXF0SIDL<RXF0SID0>
extern volatile __bit                   RXF0SID0            __at(0x780D);	// @ (0xF01 * 8 + 5)
#define                                 RXF0SID0_bit        _BIT_ACCESS(RXF0SIDL,5)
// RXF0SIDL<RXF0SID1>
extern volatile __bit                   RXF0SID1            __at(0x780E);	// @ (0xF01 * 8 + 6)
#define                                 RXF0SID1_bit        _BIT_ACCESS(RXF0SIDL,6)
// RXF0SIDH<RXF0SID10>
extern volatile __bit                   RXF0SID10           __at(0x7807);	// @ (0xF00 * 8 + 7)
#define                                 RXF0SID10_bit       _BIT_ACCESS(RXF0SIDH,7)
// RXF0SIDL<RXF0SID2>
extern volatile __bit                   RXF0SID2            __at(0x780F);	// @ (0xF01 * 8 + 7)
#define                                 RXF0SID2_bit        _BIT_ACCESS(RXF0SIDL,7)
// RXF0SIDH<RXF0SID3>
extern volatile __bit                   RXF0SID3            __at(0x7800);	// @ (0xF00 * 8 + 0)
#define                                 RXF0SID3_bit        _BIT_ACCESS(RXF0SIDH,0)
// RXF0SIDH<RXF0SID4>
extern volatile __bit                   RXF0SID4            __at(0x7801);	// @ (0xF00 * 8 + 1)
#define                                 RXF0SID4_bit        _BIT_ACCESS(RXF0SIDH,1)
// RXF0SIDH<RXF0SID5>
extern volatile __bit                   RXF0SID5            __at(0x7802);	// @ (0xF00 * 8 + 2)
#define                                 RXF0SID5_bit        _BIT_ACCESS(RXF0SIDH,2)
// RXF0SIDH<RXF0SID6>
extern volatile __bit                   RXF0SID6            __at(0x7803);	// @ (0xF00 * 8 + 3)
#define                                 RXF0SID6_bit        _BIT_ACCESS(RXF0SIDH,3)
// RXF0SIDH<RXF0SID7>
extern volatile __bit                   RXF0SID7            __at(0x7804);	// @ (0xF00 * 8 + 4)
#define                                 RXF0SID7_bit        _BIT_ACCESS(RXF0SIDH,4)
// RXF0SIDH<RXF0SID8>
extern volatile __bit                   RXF0SID8            __at(0x7805);	// @ (0xF00 * 8 + 5)
#define                                 RXF0SID8_bit        _BIT_ACCESS(RXF0SIDH,5)
// RXF0SIDH<RXF0SID9>
extern volatile __bit                   RXF0SID9            __at(0x7806);	// @ (0xF00 * 8 + 6)
#define                                 RXF0SID9_bit        _BIT_ACCESS(RXF0SIDH,6)
// RXF10EIDL<RXF10EID0>
extern volatile __bit                   RXF10EID0           __at(0x6BB8);	// @ (0xD77 * 8 + 0)
#define                                 RXF10EID0_bit       _BIT_ACCESS(RXF10EIDL,0)
// RXF10EIDL<RXF10EID1>
extern volatile __bit                   RXF10EID1           __at(0x6BB9);	// @ (0xD77 * 8 + 1)
#define                                 RXF10EID1_bit       _BIT_ACCESS(RXF10EIDL,1)
// RXF10EIDH<RXF10EID10>
extern volatile __bit                   RXF10EID10          __at(0x6BB2);	// @ (0xD76 * 8 + 2)
#define                                 RXF10EID10_bit      _BIT_ACCESS(RXF10EIDH,2)
// RXF10EIDH<RXF10EID11>
extern volatile __bit                   RXF10EID11          __at(0x6BB3);	// @ (0xD76 * 8 + 3)
#define                                 RXF10EID11_bit      _BIT_ACCESS(RXF10EIDH,3)
// RXF10EIDH<RXF10EID12>
extern volatile __bit                   RXF10EID12          __at(0x6BB4);	// @ (0xD76 * 8 + 4)
#define                                 RXF10EID12_bit      _BIT_ACCESS(RXF10EIDH,4)
// RXF10EIDH<RXF10EID13>
extern volatile __bit                   RXF10EID13          __at(0x6BB5);	// @ (0xD76 * 8 + 5)
#define                                 RXF10EID13_bit      _BIT_ACCESS(RXF10EIDH,5)
// RXF10EIDH<RXF10EID14>
extern volatile __bit                   RXF10EID14          __at(0x6BB6);	// @ (0xD76 * 8 + 6)
#define                                 RXF10EID14_bit      _BIT_ACCESS(RXF10EIDH,6)
// RXF10EIDH<RXF10EID15>
extern volatile __bit                   RXF10EID15          __at(0x6BB7);	// @ (0xD76 * 8 + 7)
#define                                 RXF10EID15_bit      _BIT_ACCESS(RXF10EIDH,7)
// RXF10SIDL<RXF10EID16>
extern volatile __bit                   RXF10EID16          __at(0x6BA8);	// @ (0xD75 * 8 + 0)
#define                                 RXF10EID16_bit      _BIT_ACCESS(RXF10SIDL,0)
// RXF10SIDL<RXF10EID17>
extern volatile __bit                   RXF10EID17          __at(0x6BA9);	// @ (0xD75 * 8 + 1)
#define                                 RXF10EID17_bit      _BIT_ACCESS(RXF10SIDL,1)
// RXF10EIDL<RXF10EID2>
extern volatile __bit                   RXF10EID2           __at(0x6BBA);	// @ (0xD77 * 8 + 2)
#define                                 RXF10EID2_bit       _BIT_ACCESS(RXF10EIDL,2)
// RXF10EIDL<RXF10EID3>
extern volatile __bit                   RXF10EID3           __at(0x6BBB);	// @ (0xD77 * 8 + 3)
#define                                 RXF10EID3_bit       _BIT_ACCESS(RXF10EIDL,3)
// RXF10EIDL<RXF10EID4>
extern volatile __bit                   RXF10EID4           __at(0x6BBC);	// @ (0xD77 * 8 + 4)
#define                                 RXF10EID4_bit       _BIT_ACCESS(RXF10EIDL,4)
// RXF10EIDL<RXF10EID5>
extern volatile __bit                   RXF10EID5           __at(0x6BBD);	// @ (0xD77 * 8 + 5)
#define                                 RXF10EID5_bit       _BIT_ACCESS(RXF10EIDL,5)
// RXF10EIDL<RXF10EID6>
extern volatile __bit                   RXF10EID6           __at(0x6BBE);	// @ (0xD77 * 8 + 6)
#define                                 RXF10EID6_bit       _BIT_ACCESS(RXF10EIDL,6)
// RXF10EIDL<RXF10EID7>
extern volatile __bit                   RXF10EID7           __at(0x6BBF);	// @ (0xD77 * 8 + 7)
#define                                 RXF10EID7_bit       _BIT_ACCESS(RXF10EIDL,7)
// RXF10EIDH<RXF10EID8>
extern volatile __bit                   RXF10EID8           __at(0x6BB0);	// @ (0xD76 * 8 + 0)
#define                                 RXF10EID8_bit       _BIT_ACCESS(RXF10EIDH,0)
// RXF10EIDH<RXF10EID9>
extern volatile __bit                   RXF10EID9           __at(0x6BB1);	// @ (0xD76 * 8 + 1)
#define                                 RXF10EID9_bit       _BIT_ACCESS(RXF10EIDH,1)
// RXFCON1<RXF10EN>
extern volatile __bit                   RXF10EN             __at(0x6EAA);	// @ (0xDD5 * 8 + 2)
#define                                 RXF10EN_bit         _BIT_ACCESS(RXFCON1,2)
// RXF10SIDL<RXF10EXIDEN>
extern volatile __bit                   RXF10EXIDEN         __at(0x6BAB);	// @ (0xD75 * 8 + 3)
#define                                 RXF10EXIDEN_bit     _BIT_ACCESS(RXF10SIDL,3)
// RXF10SIDL<RXF10SID0>
extern volatile __bit                   RXF10SID0           __at(0x6BAD);	// @ (0xD75 * 8 + 5)
#define                                 RXF10SID0_bit       _BIT_ACCESS(RXF10SIDL,5)
// RXF10SIDL<RXF10SID1>
extern volatile __bit                   RXF10SID1           __at(0x6BAE);	// @ (0xD75 * 8 + 6)
#define                                 RXF10SID1_bit       _BIT_ACCESS(RXF10SIDL,6)
// RXF10SIDH<RXF10SID10>
extern volatile __bit                   RXF10SID10          __at(0x6BA7);	// @ (0xD74 * 8 + 7)
#define                                 RXF10SID10_bit      _BIT_ACCESS(RXF10SIDH,7)
// RXF10SIDL<RXF10SID2>
extern volatile __bit                   RXF10SID2           __at(0x6BAF);	// @ (0xD75 * 8 + 7)
#define                                 RXF10SID2_bit       _BIT_ACCESS(RXF10SIDL,7)
// RXF10SIDH<RXF10SID3>
extern volatile __bit                   RXF10SID3           __at(0x6BA0);	// @ (0xD74 * 8 + 0)
#define                                 RXF10SID3_bit       _BIT_ACCESS(RXF10SIDH,0)
// RXF10SIDH<RXF10SID4>
extern volatile __bit                   RXF10SID4           __at(0x6BA1);	// @ (0xD74 * 8 + 1)
#define                                 RXF10SID4_bit       _BIT_ACCESS(RXF10SIDH,1)
// RXF10SIDH<RXF10SID5>
extern volatile __bit                   RXF10SID5           __at(0x6BA2);	// @ (0xD74 * 8 + 2)
#define                                 RXF10SID5_bit       _BIT_ACCESS(RXF10SIDH,2)
// RXF10SIDH<RXF10SID6>
extern volatile __bit                   RXF10SID6           __at(0x6BA3);	// @ (0xD74 * 8 + 3)
#define                                 RXF10SID6_bit       _BIT_ACCESS(RXF10SIDH,3)
// RXF10SIDH<RXF10SID7>
extern volatile __bit                   RXF10SID7           __at(0x6BA4);	// @ (0xD74 * 8 + 4)
#define                                 RXF10SID7_bit       _BIT_ACCESS(RXF10SIDH,4)
// RXF10SIDH<RXF10SID8>
extern volatile __bit                   RXF10SID8           __at(0x6BA5);	// @ (0xD74 * 8 + 5)
#define                                 RXF10SID8_bit       _BIT_ACCESS(RXF10SIDH,5)
// RXF10SIDH<RXF10SID9>
extern volatile __bit                   RXF10SID9           __at(0x6BA6);	// @ (0xD74 * 8 + 6)
#define                                 RXF10SID9_bit       _BIT_ACCESS(RXF10SIDH,6)
// RXF11EIDL<RXF11EID0>
extern volatile __bit                   RXF11EID0           __at(0x6BD8);	// @ (0xD7B * 8 + 0)
#define                                 RXF11EID0_bit       _BIT_ACCESS(RXF11EIDL,0)
// RXF11EIDL<RXF11EID1>
extern volatile __bit                   RXF11EID1           __at(0x6BD9);	// @ (0xD7B * 8 + 1)
#define                                 RXF11EID1_bit       _BIT_ACCESS(RXF11EIDL,1)
// RXF11EIDH<RXF11EID10>
extern volatile __bit                   RXF11EID10          __at(0x6BD2);	// @ (0xD7A * 8 + 2)
#define                                 RXF11EID10_bit      _BIT_ACCESS(RXF11EIDH,2)
// RXF11EIDH<RXF11EID11>
extern volatile __bit                   RXF11EID11          __at(0x6BD3);	// @ (0xD7A * 8 + 3)
#define                                 RXF11EID11_bit      _BIT_ACCESS(RXF11EIDH,3)
// RXF11EIDH<RXF11EID12>
extern volatile __bit                   RXF11EID12          __at(0x6BD4);	// @ (0xD7A * 8 + 4)
#define                                 RXF11EID12_bit      _BIT_ACCESS(RXF11EIDH,4)
// RXF11EIDH<RXF11EID13>
extern volatile __bit                   RXF11EID13          __at(0x6BD5);	// @ (0xD7A * 8 + 5)
#define                                 RXF11EID13_bit      _BIT_ACCESS(RXF11EIDH,5)
// RXF11EIDH<RXF11EID14>
extern volatile __bit                   RXF11EID14          __at(0x6BD6);	// @ (0xD7A * 8 + 6)
#define                                 RXF11EID14_bit      _BIT_ACCESS(RXF11EIDH,6)
// RXF11EIDH<RXF11EID15>
extern volatile __bit                   RXF11EID15          __at(0x6BD7);	// @ (0xD7A * 8 + 7)
#define                                 RXF11EID15_bit      _BIT_ACCESS(RXF11EIDH,7)
// RXF11SIDL<RXF11EID16>
extern volatile __bit                   RXF11EID16          __at(0x6BC8);	// @ (0xD79 * 8 + 0)
#define                                 RXF11EID16_bit      _BIT_ACCESS(RXF11SIDL,0)
// RXF11SIDL<RXF11EID17>
extern volatile __bit                   RXF11EID17          __at(0x6BC9);	// @ (0xD79 * 8 + 1)
#define                                 RXF11EID17_bit      _BIT_ACCESS(RXF11SIDL,1)
// RXF11EIDL<RXF11EID2>
extern volatile __bit                   RXF11EID2           __at(0x6BDA);	// @ (0xD7B * 8 + 2)
#define                                 RXF11EID2_bit       _BIT_ACCESS(RXF11EIDL,2)
// RXF11EIDL<RXF11EID3>
extern volatile __bit                   RXF11EID3           __at(0x6BDB);	// @ (0xD7B * 8 + 3)
#define                                 RXF11EID3_bit       _BIT_ACCESS(RXF11EIDL,3)
// RXF11EIDL<RXF11EID4>
extern volatile __bit                   RXF11EID4           __at(0x6BDC);	// @ (0xD7B * 8 + 4)
#define                                 RXF11EID4_bit       _BIT_ACCESS(RXF11EIDL,4)
// RXF11EIDL<RXF11EID5>
extern volatile __bit                   RXF11EID5           __at(0x6BDD);	// @ (0xD7B * 8 + 5)
#define                                 RXF11EID5_bit       _BIT_ACCESS(RXF11EIDL,5)
// RXF11EIDL<RXF11EID6>
extern volatile __bit                   RXF11EID6           __at(0x6BDE);	// @ (0xD7B * 8 + 6)
#define                                 RXF11EID6_bit       _BIT_ACCESS(RXF11EIDL,6)
// RXF11EIDL<RXF11EID7>
extern volatile __bit                   RXF11EID7           __at(0x6BDF);	// @ (0xD7B * 8 + 7)
#define                                 RXF11EID7_bit       _BIT_ACCESS(RXF11EIDL,7)
// RXF11EIDH<RXF11EID8>
extern volatile __bit                   RXF11EID8           __at(0x6BD0);	// @ (0xD7A * 8 + 0)
#define                                 RXF11EID8_bit       _BIT_ACCESS(RXF11EIDH,0)
// RXF11EIDH<RXF11EID9>
extern volatile __bit                   RXF11EID9           __at(0x6BD1);	// @ (0xD7A * 8 + 1)
#define                                 RXF11EID9_bit       _BIT_ACCESS(RXF11EIDH,1)
// RXFCON1<RXF11EN>
extern volatile __bit                   RXF11EN             __at(0x6EAB);	// @ (0xDD5 * 8 + 3)
#define                                 RXF11EN_bit         _BIT_ACCESS(RXFCON1,3)
// RXF11SIDL<RXF11EXIDEN>
extern volatile __bit                   RXF11EXIDEN         __at(0x6BCB);	// @ (0xD79 * 8 + 3)
#define                                 RXF11EXIDEN_bit     _BIT_ACCESS(RXF11SIDL,3)
// RXF11SIDL<RXF11SID0>
extern volatile __bit                   RXF11SID0           __at(0x6BCD);	// @ (0xD79 * 8 + 5)
#define                                 RXF11SID0_bit       _BIT_ACCESS(RXF11SIDL,5)
// RXF11SIDL<RXF11SID1>
extern volatile __bit                   RXF11SID1           __at(0x6BCE);	// @ (0xD79 * 8 + 6)
#define                                 RXF11SID1_bit       _BIT_ACCESS(RXF11SIDL,6)
// RXF11SIDH<RXF11SID10>
extern volatile __bit                   RXF11SID10          __at(0x6BC7);	// @ (0xD78 * 8 + 7)
#define                                 RXF11SID10_bit      _BIT_ACCESS(RXF11SIDH,7)
// RXF11SIDL<RXF11SID2>
extern volatile __bit                   RXF11SID2           __at(0x6BCF);	// @ (0xD79 * 8 + 7)
#define                                 RXF11SID2_bit       _BIT_ACCESS(RXF11SIDL,7)
// RXF11SIDH<RXF11SID3>
extern volatile __bit                   RXF11SID3           __at(0x6BC0);	// @ (0xD78 * 8 + 0)
#define                                 RXF11SID3_bit       _BIT_ACCESS(RXF11SIDH,0)
// RXF11SIDH<RXF11SID4>
extern volatile __bit                   RXF11SID4           __at(0x6BC1);	// @ (0xD78 * 8 + 1)
#define                                 RXF11SID4_bit       _BIT_ACCESS(RXF11SIDH,1)
// RXF11SIDH<RXF11SID5>
extern volatile __bit                   RXF11SID5           __at(0x6BC2);	// @ (0xD78 * 8 + 2)
#define                                 RXF11SID5_bit       _BIT_ACCESS(RXF11SIDH,2)
// RXF11SIDH<RXF11SID6>
extern volatile __bit                   RXF11SID6           __at(0x6BC3);	// @ (0xD78 * 8 + 3)
#define                                 RXF11SID6_bit       _BIT_ACCESS(RXF11SIDH,3)
// RXF11SIDH<RXF11SID7>
extern volatile __bit                   RXF11SID7           __at(0x6BC4);	// @ (0xD78 * 8 + 4)
#define                                 RXF11SID7_bit       _BIT_ACCESS(RXF11SIDH,4)
// RXF11SIDH<RXF11SID8>
extern volatile __bit                   RXF11SID8           __at(0x6BC5);	// @ (0xD78 * 8 + 5)
#define                                 RXF11SID8_bit       _BIT_ACCESS(RXF11SIDH,5)
// RXF11SIDH<RXF11SID9>
extern volatile __bit                   RXF11SID9           __at(0x6BC6);	// @ (0xD78 * 8 + 6)
#define                                 RXF11SID9_bit       _BIT_ACCESS(RXF11SIDH,6)
// RXF12EIDL<RXF12EID0>
extern volatile __bit                   RXF12EID0           __at(0x6C18);	// @ (0xD83 * 8 + 0)
#define                                 RXF12EID0_bit       _BIT_ACCESS(RXF12EIDL,0)
// RXF12EIDL<RXF12EID1>
extern volatile __bit                   RXF12EID1           __at(0x6C19);	// @ (0xD83 * 8 + 1)
#define                                 RXF12EID1_bit       _BIT_ACCESS(RXF12EIDL,1)
// RXF12EIDH<RXF12EID10>
extern volatile __bit                   RXF12EID10          __at(0x6C12);	// @ (0xD82 * 8 + 2)
#define                                 RXF12EID10_bit      _BIT_ACCESS(RXF12EIDH,2)
// RXF12EIDH<RXF12EID11>
extern volatile __bit                   RXF12EID11          __at(0x6C13);	// @ (0xD82 * 8 + 3)
#define                                 RXF12EID11_bit      _BIT_ACCESS(RXF12EIDH,3)
// RXF12EIDH<RXF12EID12>
extern volatile __bit                   RXF12EID12          __at(0x6C14);	// @ (0xD82 * 8 + 4)
#define                                 RXF12EID12_bit      _BIT_ACCESS(RXF12EIDH,4)
// RXF12EIDH<RXF12EID13>
extern volatile __bit                   RXF12EID13          __at(0x6C15);	// @ (0xD82 * 8 + 5)
#define                                 RXF12EID13_bit      _BIT_ACCESS(RXF12EIDH,5)
// RXF12EIDH<RXF12EID14>
extern volatile __bit                   RXF12EID14          __at(0x6C16);	// @ (0xD82 * 8 + 6)
#define                                 RXF12EID14_bit      _BIT_ACCESS(RXF12EIDH,6)
// RXF12EIDH<RXF12EID15>
extern volatile __bit                   RXF12EID15          __at(0x6C17);	// @ (0xD82 * 8 + 7)
#define                                 RXF12EID15_bit      _BIT_ACCESS(RXF12EIDH,7)
// RXF12SIDL<RXF12EID16>
extern volatile __bit                   RXF12EID16          __at(0x6C08);	// @ (0xD81 * 8 + 0)
#define                                 RXF12EID16_bit      _BIT_ACCESS(RXF12SIDL,0)
// RXF12SIDL<RXF12EID17>
extern volatile __bit                   RXF12EID17          __at(0x6C09);	// @ (0xD81 * 8 + 1)
#define                                 RXF12EID17_bit      _BIT_ACCESS(RXF12SIDL,1)
// RXF12EIDL<RXF12EID2>
extern volatile __bit                   RXF12EID2           __at(0x6C1A);	// @ (0xD83 * 8 + 2)
#define                                 RXF12EID2_bit       _BIT_ACCESS(RXF12EIDL,2)
// RXF12EIDL<RXF12EID3>
extern volatile __bit                   RXF12EID3           __at(0x6C1B);	// @ (0xD83 * 8 + 3)
#define                                 RXF12EID3_bit       _BIT_ACCESS(RXF12EIDL,3)
// RXF12EIDL<RXF12EID4>
extern volatile __bit                   RXF12EID4           __at(0x6C1C);	// @ (0xD83 * 8 + 4)
#define                                 RXF12EID4_bit       _BIT_ACCESS(RXF12EIDL,4)
// RXF12EIDL<RXF12EID5>
extern volatile __bit                   RXF12EID5           __at(0x6C1D);	// @ (0xD83 * 8 + 5)
#define                                 RXF12EID5_bit       _BIT_ACCESS(RXF12EIDL,5)
// RXF12EIDL<RXF12EID6>
extern volatile __bit                   RXF12EID6           __at(0x6C1E);	// @ (0xD83 * 8 + 6)
#define                                 RXF12EID6_bit       _BIT_ACCESS(RXF12EIDL,6)
// RXF12EIDL<RXF12EID7>
extern volatile __bit                   RXF12EID7           __at(0x6C1F);	// @ (0xD83 * 8 + 7)
#define                                 RXF12EID7_bit       _BIT_ACCESS(RXF12EIDL,7)
// RXF12EIDH<RXF12EID8>
extern volatile __bit                   RXF12EID8           __at(0x6C10);	// @ (0xD82 * 8 + 0)
#define                                 RXF12EID8_bit       _BIT_ACCESS(RXF12EIDH,0)
// RXF12EIDH<RXF12EID9>
extern volatile __bit                   RXF12EID9           __at(0x6C11);	// @ (0xD82 * 8 + 1)
#define                                 RXF12EID9_bit       _BIT_ACCESS(RXF12EIDH,1)
// RXFCON1<RXF12EN>
extern volatile __bit                   RXF12EN             __at(0x6EAC);	// @ (0xDD5 * 8 + 4)
#define                                 RXF12EN_bit         _BIT_ACCESS(RXFCON1,4)
// RXF12SIDL<RXF12EXIDEN>
extern volatile __bit                   RXF12EXIDEN         __at(0x6C0B);	// @ (0xD81 * 8 + 3)
#define                                 RXF12EXIDEN_bit     _BIT_ACCESS(RXF12SIDL,3)
// RXF12SIDL<RXF12SID0>
extern volatile __bit                   RXF12SID0           __at(0x6C0D);	// @ (0xD81 * 8 + 5)
#define                                 RXF12SID0_bit       _BIT_ACCESS(RXF12SIDL,5)
// RXF12SIDL<RXF12SID1>
extern volatile __bit                   RXF12SID1           __at(0x6C0E);	// @ (0xD81 * 8 + 6)
#define                                 RXF12SID1_bit       _BIT_ACCESS(RXF12SIDL,6)
// RXF12SIDH<RXF12SID10>
extern volatile __bit                   RXF12SID10          __at(0x6C07);	// @ (0xD80 * 8 + 7)
#define                                 RXF12SID10_bit      _BIT_ACCESS(RXF12SIDH,7)
// RXF12SIDL<RXF12SID2>
extern volatile __bit                   RXF12SID2           __at(0x6C0F);	// @ (0xD81 * 8 + 7)
#define                                 RXF12SID2_bit       _BIT_ACCESS(RXF12SIDL,7)
// RXF12SIDH<RXF12SID3>
extern volatile __bit                   RXF12SID3           __at(0x6C00);	// @ (0xD80 * 8 + 0)
#define                                 RXF12SID3_bit       _BIT_ACCESS(RXF12SIDH,0)
// RXF12SIDH<RXF12SID4>
extern volatile __bit                   RXF12SID4           __at(0x6C01);	// @ (0xD80 * 8 + 1)
#define                                 RXF12SID4_bit       _BIT_ACCESS(RXF12SIDH,1)
// RXF12SIDH<RXF12SID5>
extern volatile __bit                   RXF12SID5           __at(0x6C02);	// @ (0xD80 * 8 + 2)
#define                                 RXF12SID5_bit       _BIT_ACCESS(RXF12SIDH,2)
// RXF12SIDH<RXF12SID6>
extern volatile __bit                   RXF12SID6           __at(0x6C03);	// @ (0xD80 * 8 + 3)
#define                                 RXF12SID6_bit       _BIT_ACCESS(RXF12SIDH,3)
// RXF12SIDH<RXF12SID7>
extern volatile __bit                   RXF12SID7           __at(0x6C04);	// @ (0xD80 * 8 + 4)
#define                                 RXF12SID7_bit       _BIT_ACCESS(RXF12SIDH,4)
// RXF12SIDH<RXF12SID8>
extern volatile __bit                   RXF12SID8           __at(0x6C05);	// @ (0xD80 * 8 + 5)
#define                                 RXF12SID8_bit       _BIT_ACCESS(RXF12SIDH,5)
// RXF12SIDH<RXF12SID9>
extern volatile __bit                   RXF12SID9           __at(0x6C06);	// @ (0xD80 * 8 + 6)
#define                                 RXF12SID9_bit       _BIT_ACCESS(RXF12SIDH,6)
// RXF13EIDL<RXF13EID0>
extern volatile __bit                   RXF13EID0           __at(0x6C38);	// @ (0xD87 * 8 + 0)
#define                                 RXF13EID0_bit       _BIT_ACCESS(RXF13EIDL,0)
// RXF13EIDL<RXF13EID1>
extern volatile __bit                   RXF13EID1           __at(0x6C39);	// @ (0xD87 * 8 + 1)
#define                                 RXF13EID1_bit       _BIT_ACCESS(RXF13EIDL,1)
// RXF13EIDH<RXF13EID10>
extern volatile __bit                   RXF13EID10          __at(0x6C32);	// @ (0xD86 * 8 + 2)
#define                                 RXF13EID10_bit      _BIT_ACCESS(RXF13EIDH,2)
// RXF13EIDH<RXF13EID11>
extern volatile __bit                   RXF13EID11          __at(0x6C33);	// @ (0xD86 * 8 + 3)
#define                                 RXF13EID11_bit      _BIT_ACCESS(RXF13EIDH,3)
// RXF13EIDH<RXF13EID12>
extern volatile __bit                   RXF13EID12          __at(0x6C34);	// @ (0xD86 * 8 + 4)
#define                                 RXF13EID12_bit      _BIT_ACCESS(RXF13EIDH,4)
// RXF13EIDH<RXF13EID13>
extern volatile __bit                   RXF13EID13          __at(0x6C35);	// @ (0xD86 * 8 + 5)
#define                                 RXF13EID13_bit      _BIT_ACCESS(RXF13EIDH,5)
// RXF13EIDH<RXF13EID14>
extern volatile __bit                   RXF13EID14          __at(0x6C36);	// @ (0xD86 * 8 + 6)
#define                                 RXF13EID14_bit      _BIT_ACCESS(RXF13EIDH,6)
// RXF13EIDH<RXF13EID15>
extern volatile __bit                   RXF13EID15          __at(0x6C37);	// @ (0xD86 * 8 + 7)
#define                                 RXF13EID15_bit      _BIT_ACCESS(RXF13EIDH,7)
// RXF13SIDL<RXF13EID16>
extern volatile __bit                   RXF13EID16          __at(0x6C28);	// @ (0xD85 * 8 + 0)
#define                                 RXF13EID16_bit      _BIT_ACCESS(RXF13SIDL,0)
// RXF13SIDL<RXF13EID17>
extern volatile __bit                   RXF13EID17          __at(0x6C29);	// @ (0xD85 * 8 + 1)
#define                                 RXF13EID17_bit      _BIT_ACCESS(RXF13SIDL,1)
// RXF13EIDL<RXF13EID2>
extern volatile __bit                   RXF13EID2           __at(0x6C3A);	// @ (0xD87 * 8 + 2)
#define                                 RXF13EID2_bit       _BIT_ACCESS(RXF13EIDL,2)
// RXF13EIDL<RXF13EID3>
extern volatile __bit                   RXF13EID3           __at(0x6C3B);	// @ (0xD87 * 8 + 3)
#define                                 RXF13EID3_bit       _BIT_ACCESS(RXF13EIDL,3)
// RXF13EIDL<RXF13EID4>
extern volatile __bit                   RXF13EID4           __at(0x6C3C);	// @ (0xD87 * 8 + 4)
#define                                 RXF13EID4_bit       _BIT_ACCESS(RXF13EIDL,4)
// RXF13EIDL<RXF13EID5>
extern volatile __bit                   RXF13EID5           __at(0x6C3D);	// @ (0xD87 * 8 + 5)
#define                                 RXF13EID5_bit       _BIT_ACCESS(RXF13EIDL,5)
// RXF13EIDL<RXF13EID6>
extern volatile __bit                   RXF13EID6           __at(0x6C3E);	// @ (0xD87 * 8 + 6)
#define                                 RXF13EID6_bit       _BIT_ACCESS(RXF13EIDL,6)
// RXF13EIDL<RXF13EID7>
extern volatile __bit                   RXF13EID7           __at(0x6C3F);	// @ (0xD87 * 8 + 7)
#define                                 RXF13EID7_bit       _BIT_ACCESS(RXF13EIDL,7)
// RXF13EIDH<RXF13EID8>
extern volatile __bit                   RXF13EID8           __at(0x6C30);	// @ (0xD86 * 8 + 0)
#define                                 RXF13EID8_bit       _BIT_ACCESS(RXF13EIDH,0)
// RXF13EIDH<RXF13EID9>
extern volatile __bit                   RXF13EID9           __at(0x6C31);	// @ (0xD86 * 8 + 1)
#define                                 RXF13EID9_bit       _BIT_ACCESS(RXF13EIDH,1)
// RXFCON1<RXF13EN>
extern volatile __bit                   RXF13EN             __at(0x6EAD);	// @ (0xDD5 * 8 + 5)
#define                                 RXF13EN_bit         _BIT_ACCESS(RXFCON1,5)
// RXF13SIDL<RXF13EXIDEN>
extern volatile __bit                   RXF13EXIDEN         __at(0x6C2B);	// @ (0xD85 * 8 + 3)
#define                                 RXF13EXIDEN_bit     _BIT_ACCESS(RXF13SIDL,3)
// RXF13SIDL<RXF13SID0>
extern volatile __bit                   RXF13SID0           __at(0x6C2D);	// @ (0xD85 * 8 + 5)
#define                                 RXF13SID0_bit       _BIT_ACCESS(RXF13SIDL,5)
// RXF13SIDL<RXF13SID1>
extern volatile __bit                   RXF13SID1           __at(0x6C2E);	// @ (0xD85 * 8 + 6)
#define                                 RXF13SID1_bit       _BIT_ACCESS(RXF13SIDL,6)
// RXF13SIDH<RXF13SID10>
extern volatile __bit                   RXF13SID10          __at(0x6C27);	// @ (0xD84 * 8 + 7)
#define                                 RXF13SID10_bit      _BIT_ACCESS(RXF13SIDH,7)
// RXF13SIDL<RXF13SID2>
extern volatile __bit                   RXF13SID2           __at(0x6C2F);	// @ (0xD85 * 8 + 7)
#define                                 RXF13SID2_bit       _BIT_ACCESS(RXF13SIDL,7)
// RXF13SIDH<RXF13SID3>
extern volatile __bit                   RXF13SID3           __at(0x6C20);	// @ (0xD84 * 8 + 0)
#define                                 RXF13SID3_bit       _BIT_ACCESS(RXF13SIDH,0)
// RXF13SIDH<RXF13SID4>
extern volatile __bit                   RXF13SID4           __at(0x6C21);	// @ (0xD84 * 8 + 1)
#define                                 RXF13SID4_bit       _BIT_ACCESS(RXF13SIDH,1)
// RXF13SIDH<RXF13SID5>
extern volatile __bit                   RXF13SID5           __at(0x6C22);	// @ (0xD84 * 8 + 2)
#define                                 RXF13SID5_bit       _BIT_ACCESS(RXF13SIDH,2)
// RXF13SIDH<RXF13SID6>
extern volatile __bit                   RXF13SID6           __at(0x6C23);	// @ (0xD84 * 8 + 3)
#define                                 RXF13SID6_bit       _BIT_ACCESS(RXF13SIDH,3)
// RXF13SIDH<RXF13SID7>
extern volatile __bit                   RXF13SID7           __at(0x6C24);	// @ (0xD84 * 8 + 4)
#define                                 RXF13SID7_bit       _BIT_ACCESS(RXF13SIDH,4)
// RXF13SIDH<RXF13SID8>
extern volatile __bit                   RXF13SID8           __at(0x6C25);	// @ (0xD84 * 8 + 5)
#define                                 RXF13SID8_bit       _BIT_ACCESS(RXF13SIDH,5)
// RXF13SIDH<RXF13SID9>
extern volatile __bit                   RXF13SID9           __at(0x6C26);	// @ (0xD84 * 8 + 6)
#define                                 RXF13SID9_bit       _BIT_ACCESS(RXF13SIDH,6)
// RXF14EIDL<RXF14EID0>
extern volatile __bit                   RXF14EID0           __at(0x6C58);	// @ (0xD8B * 8 + 0)
#define                                 RXF14EID0_bit       _BIT_ACCESS(RXF14EIDL,0)
// RXF14EIDL<RXF14EID1>
extern volatile __bit                   RXF14EID1           __at(0x6C59);	// @ (0xD8B * 8 + 1)
#define                                 RXF14EID1_bit       _BIT_ACCESS(RXF14EIDL,1)
// RXF14EIDH<RXF14EID10>
extern volatile __bit                   RXF14EID10          __at(0x6C52);	// @ (0xD8A * 8 + 2)
#define                                 RXF14EID10_bit      _BIT_ACCESS(RXF14EIDH,2)
// RXF14EIDH<RXF14EID11>
extern volatile __bit                   RXF14EID11          __at(0x6C53);	// @ (0xD8A * 8 + 3)
#define                                 RXF14EID11_bit      _BIT_ACCESS(RXF14EIDH,3)
// RXF14EIDH<RXF14EID12>
extern volatile __bit                   RXF14EID12          __at(0x6C54);	// @ (0xD8A * 8 + 4)
#define                                 RXF14EID12_bit      _BIT_ACCESS(RXF14EIDH,4)
// RXF14EIDH<RXF14EID13>
extern volatile __bit                   RXF14EID13          __at(0x6C55);	// @ (0xD8A * 8 + 5)
#define                                 RXF14EID13_bit      _BIT_ACCESS(RXF14EIDH,5)
// RXF14EIDH<RXF14EID14>
extern volatile __bit                   RXF14EID14          __at(0x6C56);	// @ (0xD8A * 8 + 6)
#define                                 RXF14EID14_bit      _BIT_ACCESS(RXF14EIDH,6)
// RXF14EIDH<RXF14EID15>
extern volatile __bit                   RXF14EID15          __at(0x6C57);	// @ (0xD8A * 8 + 7)
#define                                 RXF14EID15_bit      _BIT_ACCESS(RXF14EIDH,7)
// RXF14SIDL<RXF14EID16>
extern volatile __bit                   RXF14EID16          __at(0x6C48);	// @ (0xD89 * 8 + 0)
#define                                 RXF14EID16_bit      _BIT_ACCESS(RXF14SIDL,0)
// RXF14SIDL<RXF14EID17>
extern volatile __bit                   RXF14EID17          __at(0x6C49);	// @ (0xD89 * 8 + 1)
#define                                 RXF14EID17_bit      _BIT_ACCESS(RXF14SIDL,1)
// RXF14EIDL<RXF14EID2>
extern volatile __bit                   RXF14EID2           __at(0x6C5A);	// @ (0xD8B * 8 + 2)
#define                                 RXF14EID2_bit       _BIT_ACCESS(RXF14EIDL,2)
// RXF14EIDL<RXF14EID3>
extern volatile __bit                   RXF14EID3           __at(0x6C5B);	// @ (0xD8B * 8 + 3)
#define                                 RXF14EID3_bit       _BIT_ACCESS(RXF14EIDL,3)
// RXF14EIDL<RXF14EID4>
extern volatile __bit                   RXF14EID4           __at(0x6C5C);	// @ (0xD8B * 8 + 4)
#define                                 RXF14EID4_bit       _BIT_ACCESS(RXF14EIDL,4)
// RXF14EIDL<RXF14EID5>
extern volatile __bit                   RXF14EID5           __at(0x6C5D);	// @ (0xD8B * 8 + 5)
#define                                 RXF14EID5_bit       _BIT_ACCESS(RXF14EIDL,5)
// RXF14EIDL<RXF14EID6>
extern volatile __bit                   RXF14EID6           __at(0x6C5E);	// @ (0xD8B * 8 + 6)
#define                                 RXF14EID6_bit       _BIT_ACCESS(RXF14EIDL,6)
// RXF14EIDL<RXF14EID7>
extern volatile __bit                   RXF14EID7           __at(0x6C5F);	// @ (0xD8B * 8 + 7)
#define                                 RXF14EID7_bit       _BIT_ACCESS(RXF14EIDL,7)
// RXF14EIDH<RXF14EID8>
extern volatile __bit                   RXF14EID8           __at(0x6C50);	// @ (0xD8A * 8 + 0)
#define                                 RXF14EID8_bit       _BIT_ACCESS(RXF14EIDH,0)
// RXF14EIDH<RXF14EID9>
extern volatile __bit                   RXF14EID9           __at(0x6C51);	// @ (0xD8A * 8 + 1)
#define                                 RXF14EID9_bit       _BIT_ACCESS(RXF14EIDH,1)
// RXFCON1<RXF14EN>
extern volatile __bit                   RXF14EN             __at(0x6EAE);	// @ (0xDD5 * 8 + 6)
#define                                 RXF14EN_bit         _BIT_ACCESS(RXFCON1,6)
// RXF14SIDL<RXF14EXIDEN>
extern volatile __bit                   RXF14EXIDEN         __at(0x6C4B);	// @ (0xD89 * 8 + 3)
#define                                 RXF14EXIDEN_bit     _BIT_ACCESS(RXF14SIDL,3)
// RXF14SIDL<RXF14SID0>
extern volatile __bit                   RXF14SID0           __at(0x6C4D);	// @ (0xD89 * 8 + 5)
#define                                 RXF14SID0_bit       _BIT_ACCESS(RXF14SIDL,5)
// RXF14SIDL<RXF14SID1>
extern volatile __bit                   RXF14SID1           __at(0x6C4E);	// @ (0xD89 * 8 + 6)
#define                                 RXF14SID1_bit       _BIT_ACCESS(RXF14SIDL,6)
// RXF14SIDH<RXF14SID10>
extern volatile __bit                   RXF14SID10          __at(0x6C47);	// @ (0xD88 * 8 + 7)
#define                                 RXF14SID10_bit      _BIT_ACCESS(RXF14SIDH,7)
// RXF14SIDL<RXF14SID2>
extern volatile __bit                   RXF14SID2           __at(0x6C4F);	// @ (0xD89 * 8 + 7)
#define                                 RXF14SID2_bit       _BIT_ACCESS(RXF14SIDL,7)
// RXF14SIDH<RXF14SID3>
extern volatile __bit                   RXF14SID3           __at(0x6C40);	// @ (0xD88 * 8 + 0)
#define                                 RXF14SID3_bit       _BIT_ACCESS(RXF14SIDH,0)
// RXF14SIDH<RXF14SID4>
extern volatile __bit                   RXF14SID4           __at(0x6C41);	// @ (0xD88 * 8 + 1)
#define                                 RXF14SID4_bit       _BIT_ACCESS(RXF14SIDH,1)
// RXF14SIDH<RXF14SID5>
extern volatile __bit                   RXF14SID5           __at(0x6C42);	// @ (0xD88 * 8 + 2)
#define                                 RXF14SID5_bit       _BIT_ACCESS(RXF14SIDH,2)
// RXF14SIDH<RXF14SID6>
extern volatile __bit                   RXF14SID6           __at(0x6C43);	// @ (0xD88 * 8 + 3)
#define                                 RXF14SID6_bit       _BIT_ACCESS(RXF14SIDH,3)
// RXF14SIDH<RXF14SID7>
extern volatile __bit                   RXF14SID7           __at(0x6C44);	// @ (0xD88 * 8 + 4)
#define                                 RXF14SID7_bit       _BIT_ACCESS(RXF14SIDH,4)
// RXF14SIDH<RXF14SID8>
extern volatile __bit                   RXF14SID8           __at(0x6C45);	// @ (0xD88 * 8 + 5)
#define                                 RXF14SID8_bit       _BIT_ACCESS(RXF14SIDH,5)
// RXF14SIDH<RXF14SID9>
extern volatile __bit                   RXF14SID9           __at(0x6C46);	// @ (0xD88 * 8 + 6)
#define                                 RXF14SID9_bit       _BIT_ACCESS(RXF14SIDH,6)
// RXF15EIDL<RXF15EID0>
extern volatile __bit                   RXF15EID0           __at(0x6C98);	// @ (0xD93 * 8 + 0)
#define                                 RXF15EID0_bit       _BIT_ACCESS(RXF15EIDL,0)
// RXF15EIDL<RXF15EID1>
extern volatile __bit                   RXF15EID1           __at(0x6C99);	// @ (0xD93 * 8 + 1)
#define                                 RXF15EID1_bit       _BIT_ACCESS(RXF15EIDL,1)
// RXF15EIDH<RXF15EID10>
extern volatile __bit                   RXF15EID10          __at(0x6C92);	// @ (0xD92 * 8 + 2)
#define                                 RXF15EID10_bit      _BIT_ACCESS(RXF15EIDH,2)
// RXF15EIDH<RXF15EID11>
extern volatile __bit                   RXF15EID11          __at(0x6C93);	// @ (0xD92 * 8 + 3)
#define                                 RXF15EID11_bit      _BIT_ACCESS(RXF15EIDH,3)
// RXF15EIDH<RXF15EID12>
extern volatile __bit                   RXF15EID12          __at(0x6C94);	// @ (0xD92 * 8 + 4)
#define                                 RXF15EID12_bit      _BIT_ACCESS(RXF15EIDH,4)
// RXF15EIDH<RXF15EID13>
extern volatile __bit                   RXF15EID13          __at(0x6C95);	// @ (0xD92 * 8 + 5)
#define                                 RXF15EID13_bit      _BIT_ACCESS(RXF15EIDH,5)
// RXF15EIDH<RXF15EID14>
extern volatile __bit                   RXF15EID14          __at(0x6C96);	// @ (0xD92 * 8 + 6)
#define                                 RXF15EID14_bit      _BIT_ACCESS(RXF15EIDH,6)
// RXF15EIDH<RXF15EID15>
extern volatile __bit                   RXF15EID15          __at(0x6C97);	// @ (0xD92 * 8 + 7)
#define                                 RXF15EID15_bit      _BIT_ACCESS(RXF15EIDH,7)
// RXF15SIDL<RXF15EID16>
extern volatile __bit                   RXF15EID16          __at(0x6C88);	// @ (0xD91 * 8 + 0)
#define                                 RXF15EID16_bit      _BIT_ACCESS(RXF15SIDL,0)
// RXF15SIDL<RXF15EID17>
extern volatile __bit                   RXF15EID17          __at(0x6C89);	// @ (0xD91 * 8 + 1)
#define                                 RXF15EID17_bit      _BIT_ACCESS(RXF15SIDL,1)
// RXF15EIDL<RXF15EID2>
extern volatile __bit                   RXF15EID2           __at(0x6C9A);	// @ (0xD93 * 8 + 2)
#define                                 RXF15EID2_bit       _BIT_ACCESS(RXF15EIDL,2)
// RXF15EIDL<RXF15EID3>
extern volatile __bit                   RXF15EID3           __at(0x6C9B);	// @ (0xD93 * 8 + 3)
#define                                 RXF15EID3_bit       _BIT_ACCESS(RXF15EIDL,3)
// RXF15EIDL<RXF15EID4>
extern volatile __bit                   RXF15EID4           __at(0x6C9C);	// @ (0xD93 * 8 + 4)
#define                                 RXF15EID4_bit       _BIT_ACCESS(RXF15EIDL,4)
// RXF15EIDL<RXF15EID5>
extern volatile __bit                   RXF15EID5           __at(0x6C9D);	// @ (0xD93 * 8 + 5)
#define                                 RXF15EID5_bit       _BIT_ACCESS(RXF15EIDL,5)
// RXF15EIDL<RXF15EID6>
extern volatile __bit                   RXF15EID6           __at(0x6C9E);	// @ (0xD93 * 8 + 6)
#define                                 RXF15EID6_bit       _BIT_ACCESS(RXF15EIDL,6)
// RXF15EIDL<RXF15EID7>
extern volatile __bit                   RXF15EID7           __at(0x6C9F);	// @ (0xD93 * 8 + 7)
#define                                 RXF15EID7_bit       _BIT_ACCESS(RXF15EIDL,7)
// RXF15EIDH<RXF15EID8>
extern volatile __bit                   RXF15EID8           __at(0x6C90);	// @ (0xD92 * 8 + 0)
#define                                 RXF15EID8_bit       _BIT_ACCESS(RXF15EIDH,0)
// RXF15EIDH<RXF15EID9>
extern volatile __bit                   RXF15EID9           __at(0x6C91);	// @ (0xD92 * 8 + 1)
#define                                 RXF15EID9_bit       _BIT_ACCESS(RXF15EIDH,1)
// RXFCON1<RXF15EN>
extern volatile __bit                   RXF15EN             __at(0x6EAF);	// @ (0xDD5 * 8 + 7)
#define                                 RXF15EN_bit         _BIT_ACCESS(RXFCON1,7)
// RXF15SIDL<RXF15EXIDEN>
extern volatile __bit                   RXF15EXIDEN         __at(0x6C8B);	// @ (0xD91 * 8 + 3)
#define                                 RXF15EXIDEN_bit     _BIT_ACCESS(RXF15SIDL,3)
// RXF15SIDL<RXF15SID0>
extern volatile __bit                   RXF15SID0           __at(0x6C8D);	// @ (0xD91 * 8 + 5)
#define                                 RXF15SID0_bit       _BIT_ACCESS(RXF15SIDL,5)
// RXF15SIDL<RXF15SID1>
extern volatile __bit                   RXF15SID1           __at(0x6C8E);	// @ (0xD91 * 8 + 6)
#define                                 RXF15SID1_bit       _BIT_ACCESS(RXF15SIDL,6)
// RXF15SIDH<RXF15SID10>
extern volatile __bit                   RXF15SID10          __at(0x6C87);	// @ (0xD90 * 8 + 7)
#define                                 RXF15SID10_bit      _BIT_ACCESS(RXF15SIDH,7)
// RXF15SIDL<RXF15SID2>
extern volatile __bit                   RXF15SID2           __at(0x6C8F);	// @ (0xD91 * 8 + 7)
#define                                 RXF15SID2_bit       _BIT_ACCESS(RXF15SIDL,7)
// RXF15SIDH<RXF15SID3>
extern volatile __bit                   RXF15SID3           __at(0x6C80);	// @ (0xD90 * 8 + 0)
#define                                 RXF15SID3_bit       _BIT_ACCESS(RXF15SIDH,0)
// RXF15SIDH<RXF15SID4>
extern volatile __bit                   RXF15SID4           __at(0x6C81);	// @ (0xD90 * 8 + 1)
#define                                 RXF15SID4_bit       _BIT_ACCESS(RXF15SIDH,1)
// RXF15SIDH<RXF15SID5>
extern volatile __bit                   RXF15SID5           __at(0x6C82);	// @ (0xD90 * 8 + 2)
#define                                 RXF15SID5_bit       _BIT_ACCESS(RXF15SIDH,2)
// RXF15SIDH<RXF15SID6>
extern volatile __bit                   RXF15SID6           __at(0x6C83);	// @ (0xD90 * 8 + 3)
#define                                 RXF15SID6_bit       _BIT_ACCESS(RXF15SIDH,3)
// RXF15SIDH<RXF15SID7>
extern volatile __bit                   RXF15SID7           __at(0x6C84);	// @ (0xD90 * 8 + 4)
#define                                 RXF15SID7_bit       _BIT_ACCESS(RXF15SIDH,4)
// RXF15SIDH<RXF15SID8>
extern volatile __bit                   RXF15SID8           __at(0x6C85);	// @ (0xD90 * 8 + 5)
#define                                 RXF15SID8_bit       _BIT_ACCESS(RXF15SIDH,5)
// RXF15SIDH<RXF15SID9>
extern volatile __bit                   RXF15SID9           __at(0x6C86);	// @ (0xD90 * 8 + 6)
#define                                 RXF15SID9_bit       _BIT_ACCESS(RXF15SIDH,6)
// RXF1EIDL<RXF1EID0>
extern volatile __bit                   RXF1EID0            __at(0x7838);	// @ (0xF07 * 8 + 0)
#define                                 RXF1EID0_bit        _BIT_ACCESS(RXF1EIDL,0)
// RXF1EIDL<RXF1EID1>
extern volatile __bit                   RXF1EID1            __at(0x7839);	// @ (0xF07 * 8 + 1)
#define                                 RXF1EID1_bit        _BIT_ACCESS(RXF1EIDL,1)
// RXF1EIDH<RXF1EID10>
extern volatile __bit                   RXF1EID10           __at(0x7832);	// @ (0xF06 * 8 + 2)
#define                                 RXF1EID10_bit       _BIT_ACCESS(RXF1EIDH,2)
// RXF1EIDH<RXF1EID11>
extern volatile __bit                   RXF1EID11           __at(0x7833);	// @ (0xF06 * 8 + 3)
#define                                 RXF1EID11_bit       _BIT_ACCESS(RXF1EIDH,3)
// RXF1EIDH<RXF1EID12>
extern volatile __bit                   RXF1EID12           __at(0x7834);	// @ (0xF06 * 8 + 4)
#define                                 RXF1EID12_bit       _BIT_ACCESS(RXF1EIDH,4)
// RXF1EIDH<RXF1EID13>
extern volatile __bit                   RXF1EID13           __at(0x7835);	// @ (0xF06 * 8 + 5)
#define                                 RXF1EID13_bit       _BIT_ACCESS(RXF1EIDH,5)
// RXF1EIDH<RXF1EID14>
extern volatile __bit                   RXF1EID14           __at(0x7836);	// @ (0xF06 * 8 + 6)
#define                                 RXF1EID14_bit       _BIT_ACCESS(RXF1EIDH,6)
// RXF1EIDH<RXF1EID15>
extern volatile __bit                   RXF1EID15           __at(0x7837);	// @ (0xF06 * 8 + 7)
#define                                 RXF1EID15_bit       _BIT_ACCESS(RXF1EIDH,7)
// RXF1SIDL<RXF1EID16>
extern volatile __bit                   RXF1EID16           __at(0x7828);	// @ (0xF05 * 8 + 0)
#define                                 RXF1EID16_bit       _BIT_ACCESS(RXF1SIDL,0)
// RXF1SIDL<RXF1EID17>
extern volatile __bit                   RXF1EID17           __at(0x7829);	// @ (0xF05 * 8 + 1)
#define                                 RXF1EID17_bit       _BIT_ACCESS(RXF1SIDL,1)
// RXF1EIDL<RXF1EID2>
extern volatile __bit                   RXF1EID2            __at(0x783A);	// @ (0xF07 * 8 + 2)
#define                                 RXF1EID2_bit        _BIT_ACCESS(RXF1EIDL,2)
// RXF1EIDL<RXF1EID3>
extern volatile __bit                   RXF1EID3            __at(0x783B);	// @ (0xF07 * 8 + 3)
#define                                 RXF1EID3_bit        _BIT_ACCESS(RXF1EIDL,3)
// RXF1EIDL<RXF1EID4>
extern volatile __bit                   RXF1EID4            __at(0x783C);	// @ (0xF07 * 8 + 4)
#define                                 RXF1EID4_bit        _BIT_ACCESS(RXF1EIDL,4)
// RXF1EIDL<RXF1EID5>
extern volatile __bit                   RXF1EID5            __at(0x783D);	// @ (0xF07 * 8 + 5)
#define                                 RXF1EID5_bit        _BIT_ACCESS(RXF1EIDL,5)
// RXF1EIDL<RXF1EID6>
extern volatile __bit                   RXF1EID6            __at(0x783E);	// @ (0xF07 * 8 + 6)
#define                                 RXF1EID6_bit        _BIT_ACCESS(RXF1EIDL,6)
// RXF1EIDL<RXF1EID7>
extern volatile __bit                   RXF1EID7            __at(0x783F);	// @ (0xF07 * 8 + 7)
#define                                 RXF1EID7_bit        _BIT_ACCESS(RXF1EIDL,7)
// RXF1EIDH<RXF1EID8>
extern volatile __bit                   RXF1EID8            __at(0x7830);	// @ (0xF06 * 8 + 0)
#define                                 RXF1EID8_bit        _BIT_ACCESS(RXF1EIDH,0)
// RXF1EIDH<RXF1EID9>
extern volatile __bit                   RXF1EID9            __at(0x7831);	// @ (0xF06 * 8 + 1)
#define                                 RXF1EID9_bit        _BIT_ACCESS(RXF1EIDH,1)
// RXFCON0<RXF1EN>
extern volatile __bit                   RXF1EN              __at(0x6EA1);	// @ (0xDD4 * 8 + 1)
#define                                 RXF1EN_bit          _BIT_ACCESS(RXFCON0,1)
// RXF1SIDL<RXF1EXIDEN>
extern volatile __bit                   RXF1EXIDEN          __at(0x782B);	// @ (0xF05 * 8 + 3)
#define                                 RXF1EXIDEN_bit      _BIT_ACCESS(RXF1SIDL,3)
// RXF1SIDL<RXF1SID0>
extern volatile __bit                   RXF1SID0            __at(0x782D);	// @ (0xF05 * 8 + 5)
#define                                 RXF1SID0_bit        _BIT_ACCESS(RXF1SIDL,5)
// RXF1SIDL<RXF1SID1>
extern volatile __bit                   RXF1SID1            __at(0x782E);	// @ (0xF05 * 8 + 6)
#define                                 RXF1SID1_bit        _BIT_ACCESS(RXF1SIDL,6)
// RXF1SIDH<RXF1SID10>
extern volatile __bit                   RXF1SID10           __at(0x7827);	// @ (0xF04 * 8 + 7)
#define                                 RXF1SID10_bit       _BIT_ACCESS(RXF1SIDH,7)
// RXF1SIDL<RXF1SID2>
extern volatile __bit                   RXF1SID2            __at(0x782F);	// @ (0xF05 * 8 + 7)
#define                                 RXF1SID2_bit        _BIT_ACCESS(RXF1SIDL,7)
// RXF1SIDH<RXF1SID3>
extern volatile __bit                   RXF1SID3            __at(0x7820);	// @ (0xF04 * 8 + 0)
#define                                 RXF1SID3_bit        _BIT_ACCESS(RXF1SIDH,0)
// RXF1SIDH<RXF1SID4>
extern volatile __bit                   RXF1SID4            __at(0x7821);	// @ (0xF04 * 8 + 1)
#define                                 RXF1SID4_bit        _BIT_ACCESS(RXF1SIDH,1)
// RXF1SIDH<RXF1SID5>
extern volatile __bit                   RXF1SID5            __at(0x7822);	// @ (0xF04 * 8 + 2)
#define                                 RXF1SID5_bit        _BIT_ACCESS(RXF1SIDH,2)
// RXF1SIDH<RXF1SID6>
extern volatile __bit                   RXF1SID6            __at(0x7823);	// @ (0xF04 * 8 + 3)
#define                                 RXF1SID6_bit        _BIT_ACCESS(RXF1SIDH,3)
// RXF1SIDH<RXF1SID7>
extern volatile __bit                   RXF1SID7            __at(0x7824);	// @ (0xF04 * 8 + 4)
#define                                 RXF1SID7_bit        _BIT_ACCESS(RXF1SIDH,4)
// RXF1SIDH<RXF1SID8>
extern volatile __bit                   RXF1SID8            __at(0x7825);	// @ (0xF04 * 8 + 5)
#define                                 RXF1SID8_bit        _BIT_ACCESS(RXF1SIDH,5)
// RXF1SIDH<RXF1SID9>
extern volatile __bit                   RXF1SID9            __at(0x7826);	// @ (0xF04 * 8 + 6)
#define                                 RXF1SID9_bit        _BIT_ACCESS(RXF1SIDH,6)
// RXF2EIDL<RXF2EID0>
extern volatile __bit                   RXF2EID0            __at(0x7858);	// @ (0xF0B * 8 + 0)
#define                                 RXF2EID0_bit        _BIT_ACCESS(RXF2EIDL,0)
// RXF2EIDL<RXF2EID1>
extern volatile __bit                   RXF2EID1            __at(0x7859);	// @ (0xF0B * 8 + 1)
#define                                 RXF2EID1_bit        _BIT_ACCESS(RXF2EIDL,1)
// RXF2EIDH<RXF2EID10>
extern volatile __bit                   RXF2EID10           __at(0x7852);	// @ (0xF0A * 8 + 2)
#define                                 RXF2EID10_bit       _BIT_ACCESS(RXF2EIDH,2)
// RXF2EIDH<RXF2EID11>
extern volatile __bit                   RXF2EID11           __at(0x7853);	// @ (0xF0A * 8 + 3)
#define                                 RXF2EID11_bit       _BIT_ACCESS(RXF2EIDH,3)
// RXF2EIDH<RXF2EID12>
extern volatile __bit                   RXF2EID12           __at(0x7854);	// @ (0xF0A * 8 + 4)
#define                                 RXF2EID12_bit       _BIT_ACCESS(RXF2EIDH,4)
// RXF2EIDH<RXF2EID13>
extern volatile __bit                   RXF2EID13           __at(0x7855);	// @ (0xF0A * 8 + 5)
#define                                 RXF2EID13_bit       _BIT_ACCESS(RXF2EIDH,5)
// RXF2EIDH<RXF2EID14>
extern volatile __bit                   RXF2EID14           __at(0x7856);	// @ (0xF0A * 8 + 6)
#define                                 RXF2EID14_bit       _BIT_ACCESS(RXF2EIDH,6)
// RXF2EIDH<RXF2EID15>
extern volatile __bit                   RXF2EID15           __at(0x7857);	// @ (0xF0A * 8 + 7)
#define                                 RXF2EID15_bit       _BIT_ACCESS(RXF2EIDH,7)
// RXF2SIDL<RXF2EID16>
extern volatile __bit                   RXF2EID16           __at(0x7848);	// @ (0xF09 * 8 + 0)
#define                                 RXF2EID16_bit       _BIT_ACCESS(RXF2SIDL,0)
// RXF2SIDL<RXF2EID17>
extern volatile __bit                   RXF2EID17           __at(0x7849);	// @ (0xF09 * 8 + 1)
#define                                 RXF2EID17_bit       _BIT_ACCESS(RXF2SIDL,1)
// RXF2EIDL<RXF2EID2>
extern volatile __bit                   RXF2EID2            __at(0x785A);	// @ (0xF0B * 8 + 2)
#define                                 RXF2EID2_bit        _BIT_ACCESS(RXF2EIDL,2)
// RXF2EIDL<RXF2EID3>
extern volatile __bit                   RXF2EID3            __at(0x785B);	// @ (0xF0B * 8 + 3)
#define                                 RXF2EID3_bit        _BIT_ACCESS(RXF2EIDL,3)
// RXF2EIDL<RXF2EID4>
extern volatile __bit                   RXF2EID4            __at(0x785C);	// @ (0xF0B * 8 + 4)
#define                                 RXF2EID4_bit        _BIT_ACCESS(RXF2EIDL,4)
// RXF2EIDL<RXF2EID5>
extern volatile __bit                   RXF2EID5            __at(0x785D);	// @ (0xF0B * 8 + 5)
#define                                 RXF2EID5_bit        _BIT_ACCESS(RXF2EIDL,5)
// RXF2EIDL<RXF2EID6>
extern volatile __bit                   RXF2EID6            __at(0x785E);	// @ (0xF0B * 8 + 6)
#define                                 RXF2EID6_bit        _BIT_ACCESS(RXF2EIDL,6)
// RXF2EIDL<RXF2EID7>
extern volatile __bit                   RXF2EID7            __at(0x785F);	// @ (0xF0B * 8 + 7)
#define                                 RXF2EID7_bit        _BIT_ACCESS(RXF2EIDL,7)
// RXF2EIDH<RXF2EID8>
extern volatile __bit                   RXF2EID8            __at(0x7850);	// @ (0xF0A * 8 + 0)
#define                                 RXF2EID8_bit        _BIT_ACCESS(RXF2EIDH,0)
// RXF2EIDH<RXF2EID9>
extern volatile __bit                   RXF2EID9            __at(0x7851);	// @ (0xF0A * 8 + 1)
#define                                 RXF2EID9_bit        _BIT_ACCESS(RXF2EIDH,1)
// RXFCON0<RXF2EN>
extern volatile __bit                   RXF2EN              __at(0x6EA2);	// @ (0xDD4 * 8 + 2)
#define                                 RXF2EN_bit          _BIT_ACCESS(RXFCON0,2)
// RXF2SIDL<RXF2EXIDEN>
extern volatile __bit                   RXF2EXIDEN          __at(0x784B);	// @ (0xF09 * 8 + 3)
#define                                 RXF2EXIDEN_bit      _BIT_ACCESS(RXF2SIDL,3)
// RXF2SIDL<RXF2SID0>
extern volatile __bit                   RXF2SID0            __at(0x784D);	// @ (0xF09 * 8 + 5)
#define                                 RXF2SID0_bit        _BIT_ACCESS(RXF2SIDL,5)
// RXF2SIDL<RXF2SID1>
extern volatile __bit                   RXF2SID1            __at(0x784E);	// @ (0xF09 * 8 + 6)
#define                                 RXF2SID1_bit        _BIT_ACCESS(RXF2SIDL,6)
// RXF2SIDH<RXF2SID10>
extern volatile __bit                   RXF2SID10           __at(0x7847);	// @ (0xF08 * 8 + 7)
#define                                 RXF2SID10_bit       _BIT_ACCESS(RXF2SIDH,7)
// RXF2SIDL<RXF2SID2>
extern volatile __bit                   RXF2SID2            __at(0x784F);	// @ (0xF09 * 8 + 7)
#define                                 RXF2SID2_bit        _BIT_ACCESS(RXF2SIDL,7)
// RXF2SIDH<RXF2SID3>
extern volatile __bit                   RXF2SID3            __at(0x7840);	// @ (0xF08 * 8 + 0)
#define                                 RXF2SID3_bit        _BIT_ACCESS(RXF2SIDH,0)
// RXF2SIDH<RXF2SID4>
extern volatile __bit                   RXF2SID4            __at(0x7841);	// @ (0xF08 * 8 + 1)
#define                                 RXF2SID4_bit        _BIT_ACCESS(RXF2SIDH,1)
// RXF2SIDH<RXF2SID5>
extern volatile __bit                   RXF2SID5            __at(0x7842);	// @ (0xF08 * 8 + 2)
#define                                 RXF2SID5_bit        _BIT_ACCESS(RXF2SIDH,2)
// RXF2SIDH<RXF2SID6>
extern volatile __bit                   RXF2SID6            __at(0x7843);	// @ (0xF08 * 8 + 3)
#define                                 RXF2SID6_bit        _BIT_ACCESS(RXF2SIDH,3)
// RXF2SIDH<RXF2SID7>
extern volatile __bit                   RXF2SID7            __at(0x7844);	// @ (0xF08 * 8 + 4)
#define                                 RXF2SID7_bit        _BIT_ACCESS(RXF2SIDH,4)
// RXF2SIDH<RXF2SID8>
extern volatile __bit                   RXF2SID8            __at(0x7845);	// @ (0xF08 * 8 + 5)
#define                                 RXF2SID8_bit        _BIT_ACCESS(RXF2SIDH,5)
// RXF2SIDH<RXF2SID9>
extern volatile __bit                   RXF2SID9            __at(0x7846);	// @ (0xF08 * 8 + 6)
#define                                 RXF2SID9_bit        _BIT_ACCESS(RXF2SIDH,6)
// RXF3EIDL<RXF3EID0>
extern volatile __bit                   RXF3EID0            __at(0x7878);	// @ (0xF0F * 8 + 0)
#define                                 RXF3EID0_bit        _BIT_ACCESS(RXF3EIDL,0)
// RXF3EIDL<RXF3EID1>
extern volatile __bit                   RXF3EID1            __at(0x7879);	// @ (0xF0F * 8 + 1)
#define                                 RXF3EID1_bit        _BIT_ACCESS(RXF3EIDL,1)
// RXF3EIDH<RXF3EID10>
extern volatile __bit                   RXF3EID10           __at(0x7872);	// @ (0xF0E * 8 + 2)
#define                                 RXF3EID10_bit       _BIT_ACCESS(RXF3EIDH,2)
// RXF3EIDH<RXF3EID11>
extern volatile __bit                   RXF3EID11           __at(0x7873);	// @ (0xF0E * 8 + 3)
#define                                 RXF3EID11_bit       _BIT_ACCESS(RXF3EIDH,3)
// RXF3EIDH<RXF3EID12>
extern volatile __bit                   RXF3EID12           __at(0x7874);	// @ (0xF0E * 8 + 4)
#define                                 RXF3EID12_bit       _BIT_ACCESS(RXF3EIDH,4)
// RXF3EIDH<RXF3EID13>
extern volatile __bit                   RXF3EID13           __at(0x7875);	// @ (0xF0E * 8 + 5)
#define                                 RXF3EID13_bit       _BIT_ACCESS(RXF3EIDH,5)
// RXF3EIDH<RXF3EID14>
extern volatile __bit                   RXF3EID14           __at(0x7876);	// @ (0xF0E * 8 + 6)
#define                                 RXF3EID14_bit       _BIT_ACCESS(RXF3EIDH,6)
// RXF3EIDH<RXF3EID15>
extern volatile __bit                   RXF3EID15           __at(0x7877);	// @ (0xF0E * 8 + 7)
#define                                 RXF3EID15_bit       _BIT_ACCESS(RXF3EIDH,7)
// RXF3SIDL<RXF3EID16>
extern volatile __bit                   RXF3EID16           __at(0x7868);	// @ (0xF0D * 8 + 0)
#define                                 RXF3EID16_bit       _BIT_ACCESS(RXF3SIDL,0)
// RXF3SIDL<RXF3EID17>
extern volatile __bit                   RXF3EID17           __at(0x7869);	// @ (0xF0D * 8 + 1)
#define                                 RXF3EID17_bit       _BIT_ACCESS(RXF3SIDL,1)
// RXF3EIDL<RXF3EID2>
extern volatile __bit                   RXF3EID2            __at(0x787A);	// @ (0xF0F * 8 + 2)
#define                                 RXF3EID2_bit        _BIT_ACCESS(RXF3EIDL,2)
// RXF3EIDL<RXF3EID3>
extern volatile __bit                   RXF3EID3            __at(0x787B);	// @ (0xF0F * 8 + 3)
#define                                 RXF3EID3_bit        _BIT_ACCESS(RXF3EIDL,3)
// RXF3EIDL<RXF3EID4>
extern volatile __bit                   RXF3EID4            __at(0x787C);	// @ (0xF0F * 8 + 4)
#define                                 RXF3EID4_bit        _BIT_ACCESS(RXF3EIDL,4)
// RXF3EIDL<RXF3EID5>
extern volatile __bit                   RXF3EID5            __at(0x787D);	// @ (0xF0F * 8 + 5)
#define                                 RXF3EID5_bit        _BIT_ACCESS(RXF3EIDL,5)
// RXF3EIDL<RXF3EID6>
extern volatile __bit                   RXF3EID6            __at(0x787E);	// @ (0xF0F * 8 + 6)
#define                                 RXF3EID6_bit        _BIT_ACCESS(RXF3EIDL,6)
// RXF3EIDL<RXF3EID7>
extern volatile __bit                   RXF3EID7            __at(0x787F);	// @ (0xF0F * 8 + 7)
#define                                 RXF3EID7_bit        _BIT_ACCESS(RXF3EIDL,7)
// RXF3EIDH<RXF3EID8>
extern volatile __bit                   RXF3EID8            __at(0x7870);	// @ (0xF0E * 8 + 0)
#define                                 RXF3EID8_bit        _BIT_ACCESS(RXF3EIDH,0)
// RXF3EIDH<RXF3EID9>
extern volatile __bit                   RXF3EID9            __at(0x7871);	// @ (0xF0E * 8 + 1)
#define                                 RXF3EID9_bit        _BIT_ACCESS(RXF3EIDH,1)
// RXFCON0<RXF3EN>
extern volatile __bit                   RXF3EN              __at(0x6EA3);	// @ (0xDD4 * 8 + 3)
#define                                 RXF3EN_bit          _BIT_ACCESS(RXFCON0,3)
// RXF3SIDL<RXF3EXIDEN>
extern volatile __bit                   RXF3EXIDEN          __at(0x786B);	// @ (0xF0D * 8 + 3)
#define                                 RXF3EXIDEN_bit      _BIT_ACCESS(RXF3SIDL,3)
// RXF3SIDL<RXF3SID0>
extern volatile __bit                   RXF3SID0            __at(0x786D);	// @ (0xF0D * 8 + 5)
#define                                 RXF3SID0_bit        _BIT_ACCESS(RXF3SIDL,5)
// RXF3SIDL<RXF3SID1>
extern volatile __bit                   RXF3SID1            __at(0x786E);	// @ (0xF0D * 8 + 6)
#define                                 RXF3SID1_bit        _BIT_ACCESS(RXF3SIDL,6)
// RXF3SIDH<RXF3SID10>
extern volatile __bit                   RXF3SID10           __at(0x7867);	// @ (0xF0C * 8 + 7)
#define                                 RXF3SID10_bit       _BIT_ACCESS(RXF3SIDH,7)
// RXF3SIDL<RXF3SID2>
extern volatile __bit                   RXF3SID2            __at(0x786F);	// @ (0xF0D * 8 + 7)
#define                                 RXF3SID2_bit        _BIT_ACCESS(RXF3SIDL,7)
// RXF3SIDH<RXF3SID3>
extern volatile __bit                   RXF3SID3            __at(0x7860);	// @ (0xF0C * 8 + 0)
#define                                 RXF3SID3_bit        _BIT_ACCESS(RXF3SIDH,0)
// RXF3SIDH<RXF3SID4>
extern volatile __bit                   RXF3SID4            __at(0x7861);	// @ (0xF0C * 8 + 1)
#define                                 RXF3SID4_bit        _BIT_ACCESS(RXF3SIDH,1)
// RXF3SIDH<RXF3SID5>
extern volatile __bit                   RXF3SID5            __at(0x7862);	// @ (0xF0C * 8 + 2)
#define                                 RXF3SID5_bit        _BIT_ACCESS(RXF3SIDH,2)
// RXF3SIDH<RXF3SID6>
extern volatile __bit                   RXF3SID6            __at(0x7863);	// @ (0xF0C * 8 + 3)
#define                                 RXF3SID6_bit        _BIT_ACCESS(RXF3SIDH,3)
// RXF3SIDH<RXF3SID7>
extern volatile __bit                   RXF3SID7            __at(0x7864);	// @ (0xF0C * 8 + 4)
#define                                 RXF3SID7_bit        _BIT_ACCESS(RXF3SIDH,4)
// RXF3SIDH<RXF3SID8>
extern volatile __bit                   RXF3SID8            __at(0x7865);	// @ (0xF0C * 8 + 5)
#define                                 RXF3SID8_bit        _BIT_ACCESS(RXF3SIDH,5)
// RXF3SIDH<RXF3SID9>
extern volatile __bit                   RXF3SID9            __at(0x7866);	// @ (0xF0C * 8 + 6)
#define                                 RXF3SID9_bit        _BIT_ACCESS(RXF3SIDH,6)
// RXF4EIDL<RXF4EID0>
extern volatile __bit                   RXF4EID0            __at(0x7898);	// @ (0xF13 * 8 + 0)
#define                                 RXF4EID0_bit        _BIT_ACCESS(RXF4EIDL,0)
// RXF4EIDL<RXF4EID1>
extern volatile __bit                   RXF4EID1            __at(0x7899);	// @ (0xF13 * 8 + 1)
#define                                 RXF4EID1_bit        _BIT_ACCESS(RXF4EIDL,1)
// RXF4EIDH<RXF4EID10>
extern volatile __bit                   RXF4EID10           __at(0x7892);	// @ (0xF12 * 8 + 2)
#define                                 RXF4EID10_bit       _BIT_ACCESS(RXF4EIDH,2)
// RXF4EIDH<RXF4EID11>
extern volatile __bit                   RXF4EID11           __at(0x7893);	// @ (0xF12 * 8 + 3)
#define                                 RXF4EID11_bit       _BIT_ACCESS(RXF4EIDH,3)
// RXF4EIDH<RXF4EID12>
extern volatile __bit                   RXF4EID12           __at(0x7894);	// @ (0xF12 * 8 + 4)
#define                                 RXF4EID12_bit       _BIT_ACCESS(RXF4EIDH,4)
// RXF4EIDH<RXF4EID13>
extern volatile __bit                   RXF4EID13           __at(0x7895);	// @ (0xF12 * 8 + 5)
#define                                 RXF4EID13_bit       _BIT_ACCESS(RXF4EIDH,5)
// RXF4EIDH<RXF4EID14>
extern volatile __bit                   RXF4EID14           __at(0x7896);	// @ (0xF12 * 8 + 6)
#define                                 RXF4EID14_bit       _BIT_ACCESS(RXF4EIDH,6)
// RXF4EIDH<RXF4EID15>
extern volatile __bit                   RXF4EID15           __at(0x7897);	// @ (0xF12 * 8 + 7)
#define                                 RXF4EID15_bit       _BIT_ACCESS(RXF4EIDH,7)
// RXF4SIDL<RXF4EID16>
extern volatile __bit                   RXF4EID16           __at(0x7888);	// @ (0xF11 * 8 + 0)
#define                                 RXF4EID16_bit       _BIT_ACCESS(RXF4SIDL,0)
// RXF4SIDL<RXF4EID17>
extern volatile __bit                   RXF4EID17           __at(0x7889);	// @ (0xF11 * 8 + 1)
#define                                 RXF4EID17_bit       _BIT_ACCESS(RXF4SIDL,1)
// RXF4EIDL<RXF4EID2>
extern volatile __bit                   RXF4EID2            __at(0x789A);	// @ (0xF13 * 8 + 2)
#define                                 RXF4EID2_bit        _BIT_ACCESS(RXF4EIDL,2)
// RXF4EIDL<RXF4EID3>
extern volatile __bit                   RXF4EID3            __at(0x789B);	// @ (0xF13 * 8 + 3)
#define                                 RXF4EID3_bit        _BIT_ACCESS(RXF4EIDL,3)
// RXF4EIDL<RXF4EID4>
extern volatile __bit                   RXF4EID4            __at(0x789C);	// @ (0xF13 * 8 + 4)
#define                                 RXF4EID4_bit        _BIT_ACCESS(RXF4EIDL,4)
// RXF4EIDL<RXF4EID5>
extern volatile __bit                   RXF4EID5            __at(0x789D);	// @ (0xF13 * 8 + 5)
#define                                 RXF4EID5_bit        _BIT_ACCESS(RXF4EIDL,5)
// RXF4EIDL<RXF4EID6>
extern volatile __bit                   RXF4EID6            __at(0x789E);	// @ (0xF13 * 8 + 6)
#define                                 RXF4EID6_bit        _BIT_ACCESS(RXF4EIDL,6)
// RXF4EIDL<RXF4EID7>
extern volatile __bit                   RXF4EID7            __at(0x789F);	// @ (0xF13 * 8 + 7)
#define                                 RXF4EID7_bit        _BIT_ACCESS(RXF4EIDL,7)
// RXF4EIDH<RXF4EID8>
extern volatile __bit                   RXF4EID8            __at(0x7890);	// @ (0xF12 * 8 + 0)
#define                                 RXF4EID8_bit        _BIT_ACCESS(RXF4EIDH,0)
// RXF4EIDH<RXF4EID9>
extern volatile __bit                   RXF4EID9            __at(0x7891);	// @ (0xF12 * 8 + 1)
#define                                 RXF4EID9_bit        _BIT_ACCESS(RXF4EIDH,1)
// RXFCON0<RXF4EN>
extern volatile __bit                   RXF4EN              __at(0x6EA4);	// @ (0xDD4 * 8 + 4)
#define                                 RXF4EN_bit          _BIT_ACCESS(RXFCON0,4)
// RXF4SIDL<RXF4EXIDEN>
extern volatile __bit                   RXF4EXIDEN          __at(0x788B);	// @ (0xF11 * 8 + 3)
#define                                 RXF4EXIDEN_bit      _BIT_ACCESS(RXF4SIDL,3)
// RXF4SIDL<RXF4SID0>
extern volatile __bit                   RXF4SID0            __at(0x788D);	// @ (0xF11 * 8 + 5)
#define                                 RXF4SID0_bit        _BIT_ACCESS(RXF4SIDL,5)
// RXF4SIDL<RXF4SID1>
extern volatile __bit                   RXF4SID1            __at(0x788E);	// @ (0xF11 * 8 + 6)
#define                                 RXF4SID1_bit        _BIT_ACCESS(RXF4SIDL,6)
// RXF4SIDH<RXF4SID10>
extern volatile __bit                   RXF4SID10           __at(0x7887);	// @ (0xF10 * 8 + 7)
#define                                 RXF4SID10_bit       _BIT_ACCESS(RXF4SIDH,7)
// RXF4SIDL<RXF4SID2>
extern volatile __bit                   RXF4SID2            __at(0x788F);	// @ (0xF11 * 8 + 7)
#define                                 RXF4SID2_bit        _BIT_ACCESS(RXF4SIDL,7)
// RXF4SIDH<RXF4SID3>
extern volatile __bit                   RXF4SID3            __at(0x7880);	// @ (0xF10 * 8 + 0)
#define                                 RXF4SID3_bit        _BIT_ACCESS(RXF4SIDH,0)
// RXF4SIDH<RXF4SID4>
extern volatile __bit                   RXF4SID4            __at(0x7881);	// @ (0xF10 * 8 + 1)
#define                                 RXF4SID4_bit        _BIT_ACCESS(RXF4SIDH,1)
// RXF4SIDH<RXF4SID5>
extern volatile __bit                   RXF4SID5            __at(0x7882);	// @ (0xF10 * 8 + 2)
#define                                 RXF4SID5_bit        _BIT_ACCESS(RXF4SIDH,2)
// RXF4SIDH<RXF4SID6>
extern volatile __bit                   RXF4SID6            __at(0x7883);	// @ (0xF10 * 8 + 3)
#define                                 RXF4SID6_bit        _BIT_ACCESS(RXF4SIDH,3)
// RXF4SIDH<RXF4SID7>
extern volatile __bit                   RXF4SID7            __at(0x7884);	// @ (0xF10 * 8 + 4)
#define                                 RXF4SID7_bit        _BIT_ACCESS(RXF4SIDH,4)
// RXF4SIDH<RXF4SID8>
extern volatile __bit                   RXF4SID8            __at(0x7885);	// @ (0xF10 * 8 + 5)
#define                                 RXF4SID8_bit        _BIT_ACCESS(RXF4SIDH,5)
// RXF4SIDH<RXF4SID9>
extern volatile __bit                   RXF4SID9            __at(0x7886);	// @ (0xF10 * 8 + 6)
#define                                 RXF4SID9_bit        _BIT_ACCESS(RXF4SIDH,6)
// RXF5EIDL<RXF5EID0>
extern volatile __bit                   RXF5EID0            __at(0x78B8);	// @ (0xF17 * 8 + 0)
#define                                 RXF5EID0_bit        _BIT_ACCESS(RXF5EIDL,0)
// RXF5EIDL<RXF5EID1>
extern volatile __bit                   RXF5EID1            __at(0x78B9);	// @ (0xF17 * 8 + 1)
#define                                 RXF5EID1_bit        _BIT_ACCESS(RXF5EIDL,1)
// RXF5EIDH<RXF5EID10>
extern volatile __bit                   RXF5EID10           __at(0x78B2);	// @ (0xF16 * 8 + 2)
#define                                 RXF5EID10_bit       _BIT_ACCESS(RXF5EIDH,2)
// RXF5EIDH<RXF5EID11>
extern volatile __bit                   RXF5EID11           __at(0x78B3);	// @ (0xF16 * 8 + 3)
#define                                 RXF5EID11_bit       _BIT_ACCESS(RXF5EIDH,3)
// RXF5EIDH<RXF5EID12>
extern volatile __bit                   RXF5EID12           __at(0x78B4);	// @ (0xF16 * 8 + 4)
#define                                 RXF5EID12_bit       _BIT_ACCESS(RXF5EIDH,4)
// RXF5EIDH<RXF5EID13>
extern volatile __bit                   RXF5EID13           __at(0x78B5);	// @ (0xF16 * 8 + 5)
#define                                 RXF5EID13_bit       _BIT_ACCESS(RXF5EIDH,5)
// RXF5EIDH<RXF5EID14>
extern volatile __bit                   RXF5EID14           __at(0x78B6);	// @ (0xF16 * 8 + 6)
#define                                 RXF5EID14_bit       _BIT_ACCESS(RXF5EIDH,6)
// RXF5EIDH<RXF5EID15>
extern volatile __bit                   RXF5EID15           __at(0x78B7);	// @ (0xF16 * 8 + 7)
#define                                 RXF5EID15_bit       _BIT_ACCESS(RXF5EIDH,7)
// RXF5SIDL<RXF5EID16>
extern volatile __bit                   RXF5EID16           __at(0x78A8);	// @ (0xF15 * 8 + 0)
#define                                 RXF5EID16_bit       _BIT_ACCESS(RXF5SIDL,0)
// RXF5SIDL<RXF5EID17>
extern volatile __bit                   RXF5EID17           __at(0x78A9);	// @ (0xF15 * 8 + 1)
#define                                 RXF5EID17_bit       _BIT_ACCESS(RXF5SIDL,1)
// RXF5EIDL<RXF5EID2>
extern volatile __bit                   RXF5EID2            __at(0x78BA);	// @ (0xF17 * 8 + 2)
#define                                 RXF5EID2_bit        _BIT_ACCESS(RXF5EIDL,2)
// RXF5EIDL<RXF5EID3>
extern volatile __bit                   RXF5EID3            __at(0x78BB);	// @ (0xF17 * 8 + 3)
#define                                 RXF5EID3_bit        _BIT_ACCESS(RXF5EIDL,3)
// RXF5EIDL<RXF5EID4>
extern volatile __bit                   RXF5EID4            __at(0x78BC);	// @ (0xF17 * 8 + 4)
#define                                 RXF5EID4_bit        _BIT_ACCESS(RXF5EIDL,4)
// RXF5EIDL<RXF5EID5>
extern volatile __bit                   RXF5EID5            __at(0x78BD);	// @ (0xF17 * 8 + 5)
#define                                 RXF5EID5_bit        _BIT_ACCESS(RXF5EIDL,5)
// RXF5EIDL<RXF5EID6>
extern volatile __bit                   RXF5EID6            __at(0x78BE);	// @ (0xF17 * 8 + 6)
#define                                 RXF5EID6_bit        _BIT_ACCESS(RXF5EIDL,6)
// RXF5EIDL<RXF5EID7>
extern volatile __bit                   RXF5EID7            __at(0x78BF);	// @ (0xF17 * 8 + 7)
#define                                 RXF5EID7_bit        _BIT_ACCESS(RXF5EIDL,7)
// RXF5EIDH<RXF5EID8>
extern volatile __bit                   RXF5EID8            __at(0x78B0);	// @ (0xF16 * 8 + 0)
#define                                 RXF5EID8_bit        _BIT_ACCESS(RXF5EIDH,0)
// RXF5EIDH<RXF5EID9>
extern volatile __bit                   RXF5EID9            __at(0x78B1);	// @ (0xF16 * 8 + 1)
#define                                 RXF5EID9_bit        _BIT_ACCESS(RXF5EIDH,1)
// RXFCON0<RXF5EN>
extern volatile __bit                   RXF5EN              __at(0x6EA5);	// @ (0xDD4 * 8 + 5)
#define                                 RXF5EN_bit          _BIT_ACCESS(RXFCON0,5)
// RXF5SIDL<RXF5EXIDEN>
extern volatile __bit                   RXF5EXIDEN          __at(0x78AB);	// @ (0xF15 * 8 + 3)
#define                                 RXF5EXIDEN_bit      _BIT_ACCESS(RXF5SIDL,3)
// RXF5SIDL<RXF5SID0>
extern volatile __bit                   RXF5SID0            __at(0x78AD);	// @ (0xF15 * 8 + 5)
#define                                 RXF5SID0_bit        _BIT_ACCESS(RXF5SIDL,5)
// RXF5SIDL<RXF5SID1>
extern volatile __bit                   RXF5SID1            __at(0x78AE);	// @ (0xF15 * 8 + 6)
#define                                 RXF5SID1_bit        _BIT_ACCESS(RXF5SIDL,6)
// RXF5SIDH<RXF5SID10>
extern volatile __bit                   RXF5SID10           __at(0x78A7);	// @ (0xF14 * 8 + 7)
#define                                 RXF5SID10_bit       _BIT_ACCESS(RXF5SIDH,7)
// RXF5SIDL<RXF5SID2>
extern volatile __bit                   RXF5SID2            __at(0x78AF);	// @ (0xF15 * 8 + 7)
#define                                 RXF5SID2_bit        _BIT_ACCESS(RXF5SIDL,7)
// RXF5SIDH<RXF5SID3>
extern volatile __bit                   RXF5SID3            __at(0x78A0);	// @ (0xF14 * 8 + 0)
#define                                 RXF5SID3_bit        _BIT_ACCESS(RXF5SIDH,0)
// RXF5SIDH<RXF5SID4>
extern volatile __bit                   RXF5SID4            __at(0x78A1);	// @ (0xF14 * 8 + 1)
#define                                 RXF5SID4_bit        _BIT_ACCESS(RXF5SIDH,1)
// RXF5SIDH<RXF5SID5>
extern volatile __bit                   RXF5SID5            __at(0x78A2);	// @ (0xF14 * 8 + 2)
#define                                 RXF5SID5_bit        _BIT_ACCESS(RXF5SIDH,2)
// RXF5SIDH<RXF5SID6>
extern volatile __bit                   RXF5SID6            __at(0x78A3);	// @ (0xF14 * 8 + 3)
#define                                 RXF5SID6_bit        _BIT_ACCESS(RXF5SIDH,3)
// RXF5SIDH<RXF5SID7>
extern volatile __bit                   RXF5SID7            __at(0x78A4);	// @ (0xF14 * 8 + 4)
#define                                 RXF5SID7_bit        _BIT_ACCESS(RXF5SIDH,4)
// RXF5SIDH<RXF5SID8>
extern volatile __bit                   RXF5SID8            __at(0x78A5);	// @ (0xF14 * 8 + 5)
#define                                 RXF5SID8_bit        _BIT_ACCESS(RXF5SIDH,5)
// RXF5SIDH<RXF5SID9>
extern volatile __bit                   RXF5SID9            __at(0x78A6);	// @ (0xF14 * 8 + 6)
#define                                 RXF5SID9_bit        _BIT_ACCESS(RXF5SIDH,6)
// RXF6EIDL<RXF6EID0>
extern volatile __bit                   RXF6EID0            __at(0x6B18);	// @ (0xD63 * 8 + 0)
#define                                 RXF6EID0_bit        _BIT_ACCESS(RXF6EIDL,0)
// RXF6EIDL<RXF6EID1>
extern volatile __bit                   RXF6EID1            __at(0x6B19);	// @ (0xD63 * 8 + 1)
#define                                 RXF6EID1_bit        _BIT_ACCESS(RXF6EIDL,1)
// RXF6EIDH<RXF6EID10>
extern volatile __bit                   RXF6EID10           __at(0x6B12);	// @ (0xD62 * 8 + 2)
#define                                 RXF6EID10_bit       _BIT_ACCESS(RXF6EIDH,2)
// RXF6EIDH<RXF6EID11>
extern volatile __bit                   RXF6EID11           __at(0x6B13);	// @ (0xD62 * 8 + 3)
#define                                 RXF6EID11_bit       _BIT_ACCESS(RXF6EIDH,3)
// RXF6EIDH<RXF6EID12>
extern volatile __bit                   RXF6EID12           __at(0x6B14);	// @ (0xD62 * 8 + 4)
#define                                 RXF6EID12_bit       _BIT_ACCESS(RXF6EIDH,4)
// RXF6EIDH<RXF6EID13>
extern volatile __bit                   RXF6EID13           __at(0x6B15);	// @ (0xD62 * 8 + 5)
#define                                 RXF6EID13_bit       _BIT_ACCESS(RXF6EIDH,5)
// RXF6EIDH<RXF6EID14>
extern volatile __bit                   RXF6EID14           __at(0x6B16);	// @ (0xD62 * 8 + 6)
#define                                 RXF6EID14_bit       _BIT_ACCESS(RXF6EIDH,6)
// RXF6EIDH<RXF6EID15>
extern volatile __bit                   RXF6EID15           __at(0x6B17);	// @ (0xD62 * 8 + 7)
#define                                 RXF6EID15_bit       _BIT_ACCESS(RXF6EIDH,7)
// RXF6SIDL<RXF6EID16>
extern volatile __bit                   RXF6EID16           __at(0x6B08);	// @ (0xD61 * 8 + 0)
#define                                 RXF6EID16_bit       _BIT_ACCESS(RXF6SIDL,0)
// RXF6SIDL<RXF6EID17>
extern volatile __bit                   RXF6EID17           __at(0x6B09);	// @ (0xD61 * 8 + 1)
#define                                 RXF6EID17_bit       _BIT_ACCESS(RXF6SIDL,1)
// RXF6EIDL<RXF6EID2>
extern volatile __bit                   RXF6EID2            __at(0x6B1A);	// @ (0xD63 * 8 + 2)
#define                                 RXF6EID2_bit        _BIT_ACCESS(RXF6EIDL,2)
// RXF6EIDL<RXF6EID3>
extern volatile __bit                   RXF6EID3            __at(0x6B1B);	// @ (0xD63 * 8 + 3)
#define                                 RXF6EID3_bit        _BIT_ACCESS(RXF6EIDL,3)
// RXF6EIDL<RXF6EID4>
extern volatile __bit                   RXF6EID4            __at(0x6B1C);	// @ (0xD63 * 8 + 4)
#define                                 RXF6EID4_bit        _BIT_ACCESS(RXF6EIDL,4)
// RXF6EIDL<RXF6EID5>
extern volatile __bit                   RXF6EID5            __at(0x6B1D);	// @ (0xD63 * 8 + 5)
#define                                 RXF6EID5_bit        _BIT_ACCESS(RXF6EIDL,5)
// RXF6EIDL<RXF6EID6>
extern volatile __bit                   RXF6EID6            __at(0x6B1E);	// @ (0xD63 * 8 + 6)
#define                                 RXF6EID6_bit        _BIT_ACCESS(RXF6EIDL,6)
// RXF6EIDL<RXF6EID7>
extern volatile __bit                   RXF6EID7            __at(0x6B1F);	// @ (0xD63 * 8 + 7)
#define                                 RXF6EID7_bit        _BIT_ACCESS(RXF6EIDL,7)
// RXF6EIDH<RXF6EID8>
extern volatile __bit                   RXF6EID8            __at(0x6B10);	// @ (0xD62 * 8 + 0)
#define                                 RXF6EID8_bit        _BIT_ACCESS(RXF6EIDH,0)
// RXF6EIDH<RXF6EID9>
extern volatile __bit                   RXF6EID9            __at(0x6B11);	// @ (0xD62 * 8 + 1)
#define                                 RXF6EID9_bit        _BIT_ACCESS(RXF6EIDH,1)
// RXFCON0<RXF6EN>
extern volatile __bit                   RXF6EN              __at(0x6EA6);	// @ (0xDD4 * 8 + 6)
#define                                 RXF6EN_bit          _BIT_ACCESS(RXFCON0,6)
// RXF6SIDL<RXF6EXIDEN>
extern volatile __bit                   RXF6EXIDEN          __at(0x6B0B);	// @ (0xD61 * 8 + 3)
#define                                 RXF6EXIDEN_bit      _BIT_ACCESS(RXF6SIDL,3)
// RXF6SIDL<RXF6SID0>
extern volatile __bit                   RXF6SID0            __at(0x6B0D);	// @ (0xD61 * 8 + 5)
#define                                 RXF6SID0_bit        _BIT_ACCESS(RXF6SIDL,5)
// RXF6SIDL<RXF6SID1>
extern volatile __bit                   RXF6SID1            __at(0x6B0E);	// @ (0xD61 * 8 + 6)
#define                                 RXF6SID1_bit        _BIT_ACCESS(RXF6SIDL,6)
// RXF6SIDH<RXF6SID10>
extern volatile __bit                   RXF6SID10           __at(0x6B07);	// @ (0xD60 * 8 + 7)
#define                                 RXF6SID10_bit       _BIT_ACCESS(RXF6SIDH,7)
// RXF6SIDL<RXF6SID2>
extern volatile __bit                   RXF6SID2            __at(0x6B0F);	// @ (0xD61 * 8 + 7)
#define                                 RXF6SID2_bit        _BIT_ACCESS(RXF6SIDL,7)
// RXF6SIDH<RXF6SID3>
extern volatile __bit                   RXF6SID3            __at(0x6B00);	// @ (0xD60 * 8 + 0)
#define                                 RXF6SID3_bit        _BIT_ACCESS(RXF6SIDH,0)
// RXF6SIDH<RXF6SID4>
extern volatile __bit                   RXF6SID4            __at(0x6B01);	// @ (0xD60 * 8 + 1)
#define                                 RXF6SID4_bit        _BIT_ACCESS(RXF6SIDH,1)
// RXF6SIDH<RXF6SID5>
extern volatile __bit                   RXF6SID5            __at(0x6B02);	// @ (0xD60 * 8 + 2)
#define                                 RXF6SID5_bit        _BIT_ACCESS(RXF6SIDH,2)
// RXF6SIDH<RXF6SID6>
extern volatile __bit                   RXF6SID6            __at(0x6B03);	// @ (0xD60 * 8 + 3)
#define                                 RXF6SID6_bit        _BIT_ACCESS(RXF6SIDH,3)
// RXF6SIDH<RXF6SID7>
extern volatile __bit                   RXF6SID7            __at(0x6B04);	// @ (0xD60 * 8 + 4)
#define                                 RXF6SID7_bit        _BIT_ACCESS(RXF6SIDH,4)
// RXF6SIDH<RXF6SID8>
extern volatile __bit                   RXF6SID8            __at(0x6B05);	// @ (0xD60 * 8 + 5)
#define                                 RXF6SID8_bit        _BIT_ACCESS(RXF6SIDH,5)
// RXF6SIDH<RXF6SID9>
extern volatile __bit                   RXF6SID9            __at(0x6B06);	// @ (0xD60 * 8 + 6)
#define                                 RXF6SID9_bit        _BIT_ACCESS(RXF6SIDH,6)
// RXF7EIDL<RXF7EID0>
extern volatile __bit                   RXF7EID0            __at(0x6B38);	// @ (0xD67 * 8 + 0)
#define                                 RXF7EID0_bit        _BIT_ACCESS(RXF7EIDL,0)
// RXF7EIDL<RXF7EID1>
extern volatile __bit                   RXF7EID1            __at(0x6B39);	// @ (0xD67 * 8 + 1)
#define                                 RXF7EID1_bit        _BIT_ACCESS(RXF7EIDL,1)
// RXF7EIDH<RXF7EID10>
extern volatile __bit                   RXF7EID10           __at(0x6B32);	// @ (0xD66 * 8 + 2)
#define                                 RXF7EID10_bit       _BIT_ACCESS(RXF7EIDH,2)
// RXF7EIDH<RXF7EID11>
extern volatile __bit                   RXF7EID11           __at(0x6B33);	// @ (0xD66 * 8 + 3)
#define                                 RXF7EID11_bit       _BIT_ACCESS(RXF7EIDH,3)
// RXF7EIDH<RXF7EID12>
extern volatile __bit                   RXF7EID12           __at(0x6B34);	// @ (0xD66 * 8 + 4)
#define                                 RXF7EID12_bit       _BIT_ACCESS(RXF7EIDH,4)
// RXF7EIDH<RXF7EID13>
extern volatile __bit                   RXF7EID13           __at(0x6B35);	// @ (0xD66 * 8 + 5)
#define                                 RXF7EID13_bit       _BIT_ACCESS(RXF7EIDH,5)
// RXF7EIDH<RXF7EID14>
extern volatile __bit                   RXF7EID14           __at(0x6B36);	// @ (0xD66 * 8 + 6)
#define                                 RXF7EID14_bit       _BIT_ACCESS(RXF7EIDH,6)
// RXF7EIDH<RXF7EID15>
extern volatile __bit                   RXF7EID15           __at(0x6B37);	// @ (0xD66 * 8 + 7)
#define                                 RXF7EID15_bit       _BIT_ACCESS(RXF7EIDH,7)
// RXF7SIDL<RXF7EID16>
extern volatile __bit                   RXF7EID16           __at(0x6B28);	// @ (0xD65 * 8 + 0)
#define                                 RXF7EID16_bit       _BIT_ACCESS(RXF7SIDL,0)
// RXF7SIDL<RXF7EID17>
extern volatile __bit                   RXF7EID17           __at(0x6B29);	// @ (0xD65 * 8 + 1)
#define                                 RXF7EID17_bit       _BIT_ACCESS(RXF7SIDL,1)
// RXF7EIDL<RXF7EID2>
extern volatile __bit                   RXF7EID2            __at(0x6B3A);	// @ (0xD67 * 8 + 2)
#define                                 RXF7EID2_bit        _BIT_ACCESS(RXF7EIDL,2)
// RXF7EIDL<RXF7EID3>
extern volatile __bit                   RXF7EID3            __at(0x6B3B);	// @ (0xD67 * 8 + 3)
#define                                 RXF7EID3_bit        _BIT_ACCESS(RXF7EIDL,3)
// RXF7EIDL<RXF7EID4>
extern volatile __bit                   RXF7EID4            __at(0x6B3C);	// @ (0xD67 * 8 + 4)
#define                                 RXF7EID4_bit        _BIT_ACCESS(RXF7EIDL,4)
// RXF7EIDL<RXF7EID5>
extern volatile __bit                   RXF7EID5            __at(0x6B3D);	// @ (0xD67 * 8 + 5)
#define                                 RXF7EID5_bit        _BIT_ACCESS(RXF7EIDL,5)
// RXF7EIDL<RXF7EID6>
extern volatile __bit                   RXF7EID6            __at(0x6B3E);	// @ (0xD67 * 8 + 6)
#define                                 RXF7EID6_bit        _BIT_ACCESS(RXF7EIDL,6)
// RXF7EIDL<RXF7EID7>
extern volatile __bit                   RXF7EID7            __at(0x6B3F);	// @ (0xD67 * 8 + 7)
#define                                 RXF7EID7_bit        _BIT_ACCESS(RXF7EIDL,7)
// RXF7EIDH<RXF7EID8>
extern volatile __bit                   RXF7EID8            __at(0x6B30);	// @ (0xD66 * 8 + 0)
#define                                 RXF7EID8_bit        _BIT_ACCESS(RXF7EIDH,0)
// RXF7EIDH<RXF7EID9>
extern volatile __bit                   RXF7EID9            __at(0x6B31);	// @ (0xD66 * 8 + 1)
#define                                 RXF7EID9_bit        _BIT_ACCESS(RXF7EIDH,1)
// RXFCON0<RXF7EN>
extern volatile __bit                   RXF7EN              __at(0x6EA7);	// @ (0xDD4 * 8 + 7)
#define                                 RXF7EN_bit          _BIT_ACCESS(RXFCON0,7)
// RXF7SIDL<RXF7EXIDEN>
extern volatile __bit                   RXF7EXIDEN          __at(0x6B2B);	// @ (0xD65 * 8 + 3)
#define                                 RXF7EXIDEN_bit      _BIT_ACCESS(RXF7SIDL,3)
// RXF7SIDL<RXF7SID0>
extern volatile __bit                   RXF7SID0            __at(0x6B2D);	// @ (0xD65 * 8 + 5)
#define                                 RXF7SID0_bit        _BIT_ACCESS(RXF7SIDL,5)
// RXF7SIDL<RXF7SID1>
extern volatile __bit                   RXF7SID1            __at(0x6B2E);	// @ (0xD65 * 8 + 6)
#define                                 RXF7SID1_bit        _BIT_ACCESS(RXF7SIDL,6)
// RXF7SIDH<RXF7SID10>
extern volatile __bit                   RXF7SID10           __at(0x6B27);	// @ (0xD64 * 8 + 7)
#define                                 RXF7SID10_bit       _BIT_ACCESS(RXF7SIDH,7)
// RXF7SIDL<RXF7SID2>
extern volatile __bit                   RXF7SID2            __at(0x6B2F);	// @ (0xD65 * 8 + 7)
#define                                 RXF7SID2_bit        _BIT_ACCESS(RXF7SIDL,7)
// RXF7SIDH<RXF7SID3>
extern volatile __bit                   RXF7SID3            __at(0x6B20);	// @ (0xD64 * 8 + 0)
#define                                 RXF7SID3_bit        _BIT_ACCESS(RXF7SIDH,0)
// RXF7SIDH<RXF7SID4>
extern volatile __bit                   RXF7SID4            __at(0x6B21);	// @ (0xD64 * 8 + 1)
#define                                 RXF7SID4_bit        _BIT_ACCESS(RXF7SIDH,1)
// RXF7SIDH<RXF7SID5>
extern volatile __bit                   RXF7SID5            __at(0x6B22);	// @ (0xD64 * 8 + 2)
#define                                 RXF7SID5_bit        _BIT_ACCESS(RXF7SIDH,2)
// RXF7SIDH<RXF7SID6>
extern volatile __bit                   RXF7SID6            __at(0x6B23);	// @ (0xD64 * 8 + 3)
#define                                 RXF7SID6_bit        _BIT_ACCESS(RXF7SIDH,3)
// RXF7SIDH<RXF7SID7>
extern volatile __bit                   RXF7SID7            __at(0x6B24);	// @ (0xD64 * 8 + 4)
#define                                 RXF7SID7_bit        _BIT_ACCESS(RXF7SIDH,4)
// RXF7SIDH<RXF7SID8>
extern volatile __bit                   RXF7SID8            __at(0x6B25);	// @ (0xD64 * 8 + 5)
#define                                 RXF7SID8_bit        _BIT_ACCESS(RXF7SIDH,5)
// RXF7SIDH<RXF7SID9>
extern volatile __bit                   RXF7SID9            __at(0x6B26);	// @ (0xD64 * 8 + 6)
#define                                 RXF7SID9_bit        _BIT_ACCESS(RXF7SIDH,6)
// RXF8EIDL<RXF8EID0>
extern volatile __bit                   RXF8EID0            __at(0x6B58);	// @ (0xD6B * 8 + 0)
#define                                 RXF8EID0_bit        _BIT_ACCESS(RXF8EIDL,0)
// RXF8EIDL<RXF8EID1>
extern volatile __bit                   RXF8EID1            __at(0x6B59);	// @ (0xD6B * 8 + 1)
#define                                 RXF8EID1_bit        _BIT_ACCESS(RXF8EIDL,1)
// RXF8EIDH<RXF8EID10>
extern volatile __bit                   RXF8EID10           __at(0x6B52);	// @ (0xD6A * 8 + 2)
#define                                 RXF8EID10_bit       _BIT_ACCESS(RXF8EIDH,2)
// RXF8EIDH<RXF8EID11>
extern volatile __bit                   RXF8EID11           __at(0x6B53);	// @ (0xD6A * 8 + 3)
#define                                 RXF8EID11_bit       _BIT_ACCESS(RXF8EIDH,3)
// RXF8EIDH<RXF8EID12>
extern volatile __bit                   RXF8EID12           __at(0x6B54);	// @ (0xD6A * 8 + 4)
#define                                 RXF8EID12_bit       _BIT_ACCESS(RXF8EIDH,4)
// RXF8EIDH<RXF8EID13>
extern volatile __bit                   RXF8EID13           __at(0x6B55);	// @ (0xD6A * 8 + 5)
#define                                 RXF8EID13_bit       _BIT_ACCESS(RXF8EIDH,5)
// RXF8EIDH<RXF8EID14>
extern volatile __bit                   RXF8EID14           __at(0x6B56);	// @ (0xD6A * 8 + 6)
#define                                 RXF8EID14_bit       _BIT_ACCESS(RXF8EIDH,6)
// RXF8EIDH<RXF8EID15>
extern volatile __bit                   RXF8EID15           __at(0x6B57);	// @ (0xD6A * 8 + 7)
#define                                 RXF8EID15_bit       _BIT_ACCESS(RXF8EIDH,7)
// RXF8SIDL<RXF8EID16>
extern volatile __bit                   RXF8EID16           __at(0x6B48);	// @ (0xD69 * 8 + 0)
#define                                 RXF8EID16_bit       _BIT_ACCESS(RXF8SIDL,0)
// RXF8SIDL<RXF8EID17>
extern volatile __bit                   RXF8EID17           __at(0x6B49);	// @ (0xD69 * 8 + 1)
#define                                 RXF8EID17_bit       _BIT_ACCESS(RXF8SIDL,1)
// RXF8EIDL<RXF8EID2>
extern volatile __bit                   RXF8EID2            __at(0x6B5A);	// @ (0xD6B * 8 + 2)
#define                                 RXF8EID2_bit        _BIT_ACCESS(RXF8EIDL,2)
// RXF8EIDL<RXF8EID3>
extern volatile __bit                   RXF8EID3            __at(0x6B5B);	// @ (0xD6B * 8 + 3)
#define                                 RXF8EID3_bit        _BIT_ACCESS(RXF8EIDL,3)
// RXF8EIDL<RXF8EID4>
extern volatile __bit                   RXF8EID4            __at(0x6B5C);	// @ (0xD6B * 8 + 4)
#define                                 RXF8EID4_bit        _BIT_ACCESS(RXF8EIDL,4)
// RXF8EIDL<RXF8EID5>
extern volatile __bit                   RXF8EID5            __at(0x6B5D);	// @ (0xD6B * 8 + 5)
#define                                 RXF8EID5_bit        _BIT_ACCESS(RXF8EIDL,5)
// RXF8EIDL<RXF8EID6>
extern volatile __bit                   RXF8EID6            __at(0x6B5E);	// @ (0xD6B * 8 + 6)
#define                                 RXF8EID6_bit        _BIT_ACCESS(RXF8EIDL,6)
// RXF8EIDL<RXF8EID7>
extern volatile __bit                   RXF8EID7            __at(0x6B5F);	// @ (0xD6B * 8 + 7)
#define                                 RXF8EID7_bit        _BIT_ACCESS(RXF8EIDL,7)
// RXF8EIDH<RXF8EID8>
extern volatile __bit                   RXF8EID8            __at(0x6B50);	// @ (0xD6A * 8 + 0)
#define                                 RXF8EID8_bit        _BIT_ACCESS(RXF8EIDH,0)
// RXF8EIDH<RXF8EID9>
extern volatile __bit                   RXF8EID9            __at(0x6B51);	// @ (0xD6A * 8 + 1)
#define                                 RXF8EID9_bit        _BIT_ACCESS(RXF8EIDH,1)
// RXFCON1<RXF8EN>
extern volatile __bit                   RXF8EN              __at(0x6EA8);	// @ (0xDD5 * 8 + 0)
#define                                 RXF8EN_bit          _BIT_ACCESS(RXFCON1,0)
// RXF8SIDL<RXF8EXIDEN>
extern volatile __bit                   RXF8EXIDEN          __at(0x6B4B);	// @ (0xD69 * 8 + 3)
#define                                 RXF8EXIDEN_bit      _BIT_ACCESS(RXF8SIDL,3)
// RXF8SIDL<RXF8SID0>
extern volatile __bit                   RXF8SID0            __at(0x6B4D);	// @ (0xD69 * 8 + 5)
#define                                 RXF8SID0_bit        _BIT_ACCESS(RXF8SIDL,5)
// RXF8SIDL<RXF8SID1>
extern volatile __bit                   RXF8SID1            __at(0x6B4E);	// @ (0xD69 * 8 + 6)
#define                                 RXF8SID1_bit        _BIT_ACCESS(RXF8SIDL,6)
// RXF8SIDH<RXF8SID10>
extern volatile __bit                   RXF8SID10           __at(0x6B47);	// @ (0xD68 * 8 + 7)
#define                                 RXF8SID10_bit       _BIT_ACCESS(RXF8SIDH,7)
// RXF8SIDL<RXF8SID2>
extern volatile __bit                   RXF8SID2            __at(0x6B4F);	// @ (0xD69 * 8 + 7)
#define                                 RXF8SID2_bit        _BIT_ACCESS(RXF8SIDL,7)
// RXF8SIDH<RXF8SID3>
extern volatile __bit                   RXF8SID3            __at(0x6B40);	// @ (0xD68 * 8 + 0)
#define                                 RXF8SID3_bit        _BIT_ACCESS(RXF8SIDH,0)
// RXF8SIDH<RXF8SID4>
extern volatile __bit                   RXF8SID4            __at(0x6B41);	// @ (0xD68 * 8 + 1)
#define                                 RXF8SID4_bit        _BIT_ACCESS(RXF8SIDH,1)
// RXF8SIDH<RXF8SID5>
extern volatile __bit                   RXF8SID5            __at(0x6B42);	// @ (0xD68 * 8 + 2)
#define                                 RXF8SID5_bit        _BIT_ACCESS(RXF8SIDH,2)
// RXF8SIDH<RXF8SID6>
extern volatile __bit                   RXF8SID6            __at(0x6B43);	// @ (0xD68 * 8 + 3)
#define                                 RXF8SID6_bit        _BIT_ACCESS(RXF8SIDH,3)
// RXF8SIDH<RXF8SID7>
extern volatile __bit                   RXF8SID7            __at(0x6B44);	// @ (0xD68 * 8 + 4)
#define                                 RXF8SID7_bit        _BIT_ACCESS(RXF8SIDH,4)
// RXF8SIDH<RXF8SID8>
extern volatile __bit                   RXF8SID8            __at(0x6B45);	// @ (0xD68 * 8 + 5)
#define                                 RXF8SID8_bit        _BIT_ACCESS(RXF8SIDH,5)
// RXF8SIDH<RXF8SID9>
extern volatile __bit                   RXF8SID9            __at(0x6B46);	// @ (0xD68 * 8 + 6)
#define                                 RXF8SID9_bit        _BIT_ACCESS(RXF8SIDH,6)
// RXF9EIDL<RXF9EID0>
extern volatile __bit                   RXF9EID0            __at(0x6B98);	// @ (0xD73 * 8 + 0)
#define                                 RXF9EID0_bit        _BIT_ACCESS(RXF9EIDL,0)
// RXF9EIDL<RXF9EID1>
extern volatile __bit                   RXF9EID1            __at(0x6B99);	// @ (0xD73 * 8 + 1)
#define                                 RXF9EID1_bit        _BIT_ACCESS(RXF9EIDL,1)
// RXF9EIDH<RXF9EID10>
extern volatile __bit                   RXF9EID10           __at(0x6B92);	// @ (0xD72 * 8 + 2)
#define                                 RXF9EID10_bit       _BIT_ACCESS(RXF9EIDH,2)
// RXF9EIDH<RXF9EID11>
extern volatile __bit                   RXF9EID11           __at(0x6B93);	// @ (0xD72 * 8 + 3)
#define                                 RXF9EID11_bit       _BIT_ACCESS(RXF9EIDH,3)
// RXF9EIDH<RXF9EID12>
extern volatile __bit                   RXF9EID12           __at(0x6B94);	// @ (0xD72 * 8 + 4)
#define                                 RXF9EID12_bit       _BIT_ACCESS(RXF9EIDH,4)
// RXF9EIDH<RXF9EID13>
extern volatile __bit                   RXF9EID13           __at(0x6B95);	// @ (0xD72 * 8 + 5)
#define                                 RXF9EID13_bit       _BIT_ACCESS(RXF9EIDH,5)
// RXF9EIDH<RXF9EID14>
extern volatile __bit                   RXF9EID14           __at(0x6B96);	// @ (0xD72 * 8 + 6)
#define                                 RXF9EID14_bit       _BIT_ACCESS(RXF9EIDH,6)
// RXF9EIDH<RXF9EID15>
extern volatile __bit                   RXF9EID15           __at(0x6B97);	// @ (0xD72 * 8 + 7)
#define                                 RXF9EID15_bit       _BIT_ACCESS(RXF9EIDH,7)
// RXF9SIDL<RXF9EID16>
extern volatile __bit                   RXF9EID16           __at(0x6B88);	// @ (0xD71 * 8 + 0)
#define                                 RXF9EID16_bit       _BIT_ACCESS(RXF9SIDL,0)
// RXF9SIDL<RXF9EID17>
extern volatile __bit                   RXF9EID17           __at(0x6B89);	// @ (0xD71 * 8 + 1)
#define                                 RXF9EID17_bit       _BIT_ACCESS(RXF9SIDL,1)
// RXF9EIDL<RXF9EID2>
extern volatile __bit                   RXF9EID2            __at(0x6B9A);	// @ (0xD73 * 8 + 2)
#define                                 RXF9EID2_bit        _BIT_ACCESS(RXF9EIDL,2)
// RXF9EIDL<RXF9EID3>
extern volatile __bit                   RXF9EID3            __at(0x6B9B);	// @ (0xD73 * 8 + 3)
#define                                 RXF9EID3_bit        _BIT_ACCESS(RXF9EIDL,3)
// RXF9EIDL<RXF9EID4>
extern volatile __bit                   RXF9EID4            __at(0x6B9C);	// @ (0xD73 * 8 + 4)
#define                                 RXF9EID4_bit        _BIT_ACCESS(RXF9EIDL,4)
// RXF9EIDL<RXF9EID5>
extern volatile __bit                   RXF9EID5            __at(0x6B9D);	// @ (0xD73 * 8 + 5)
#define                                 RXF9EID5_bit        _BIT_ACCESS(RXF9EIDL,5)
// RXF9EIDL<RXF9EID6>
extern volatile __bit                   RXF9EID6            __at(0x6B9E);	// @ (0xD73 * 8 + 6)
#define                                 RXF9EID6_bit        _BIT_ACCESS(RXF9EIDL,6)
// RXF9EIDL<RXF9EID7>
extern volatile __bit                   RXF9EID7            __at(0x6B9F);	// @ (0xD73 * 8 + 7)
#define                                 RXF9EID7_bit        _BIT_ACCESS(RXF9EIDL,7)
// RXF9EIDH<RXF9EID8>
extern volatile __bit                   RXF9EID8            __at(0x6B90);	// @ (0xD72 * 8 + 0)
#define                                 RXF9EID8_bit        _BIT_ACCESS(RXF9EIDH,0)
// RXF9EIDH<RXF9EID9>
extern volatile __bit                   RXF9EID9            __at(0x6B91);	// @ (0xD72 * 8 + 1)
#define                                 RXF9EID9_bit        _BIT_ACCESS(RXF9EIDH,1)
// RXFCON1<RXF9EN>
extern volatile __bit                   RXF9EN              __at(0x6EA9);	// @ (0xDD5 * 8 + 1)
#define                                 RXF9EN_bit          _BIT_ACCESS(RXFCON1,1)
// RXF9SIDL<RXF9EXIDEN>
extern volatile __bit                   RXF9EXIDEN          __at(0x6B8B);	// @ (0xD71 * 8 + 3)
#define                                 RXF9EXIDEN_bit      _BIT_ACCESS(RXF9SIDL,3)
// RXF9SIDL<RXF9SID0>
extern volatile __bit                   RXF9SID0            __at(0x6B8D);	// @ (0xD71 * 8 + 5)
#define                                 RXF9SID0_bit        _BIT_ACCESS(RXF9SIDL,5)
// RXF9SIDL<RXF9SID1>
extern volatile __bit                   RXF9SID1            __at(0x6B8E);	// @ (0xD71 * 8 + 6)
#define                                 RXF9SID1_bit        _BIT_ACCESS(RXF9SIDL,6)
// RXF9SIDH<RXF9SID10>
extern volatile __bit                   RXF9SID10           __at(0x6B87);	// @ (0xD70 * 8 + 7)
#define                                 RXF9SID10_bit       _BIT_ACCESS(RXF9SIDH,7)
// RXF9SIDL<RXF9SID2>
extern volatile __bit                   RXF9SID2            __at(0x6B8F);	// @ (0xD71 * 8 + 7)
#define                                 RXF9SID2_bit        _BIT_ACCESS(RXF9SIDL,7)
// RXF9SIDH<RXF9SID3>
extern volatile __bit                   RXF9SID3            __at(0x6B80);	// @ (0xD70 * 8 + 0)
#define                                 RXF9SID3_bit        _BIT_ACCESS(RXF9SIDH,0)
// RXF9SIDH<RXF9SID4>
extern volatile __bit                   RXF9SID4            __at(0x6B81);	// @ (0xD70 * 8 + 1)
#define                                 RXF9SID4_bit        _BIT_ACCESS(RXF9SIDH,1)
// RXF9SIDH<RXF9SID5>
extern volatile __bit                   RXF9SID5            __at(0x6B82);	// @ (0xD70 * 8 + 2)
#define                                 RXF9SID5_bit        _BIT_ACCESS(RXF9SIDH,2)
// RXF9SIDH<RXF9SID6>
extern volatile __bit                   RXF9SID6            __at(0x6B83);	// @ (0xD70 * 8 + 3)
#define                                 RXF9SID6_bit        _BIT_ACCESS(RXF9SIDH,3)
// RXF9SIDH<RXF9SID7>
extern volatile __bit                   RXF9SID7            __at(0x6B84);	// @ (0xD70 * 8 + 4)
#define                                 RXF9SID7_bit        _BIT_ACCESS(RXF9SIDH,4)
// RXF9SIDH<RXF9SID8>
extern volatile __bit                   RXF9SID8            __at(0x6B85);	// @ (0xD70 * 8 + 5)
#define                                 RXF9SID8_bit        _BIT_ACCESS(RXF9SIDH,5)
// RXF9SIDH<RXF9SID9>
extern volatile __bit                   RXF9SID9            __at(0x6B86);	// @ (0xD70 * 8 + 6)
#define                                 RXF9SID9_bit        _BIT_ACCESS(RXF9SIDH,6)
// RXM0EIDL<RXM0EID0>
extern volatile __bit                   RXM0EID0            __at(0x78D8);	// @ (0xF1B * 8 + 0)
#define                                 RXM0EID0_bit        _BIT_ACCESS(RXM0EIDL,0)
// RXM0EIDL<RXM0EID1>
extern volatile __bit                   RXM0EID1            __at(0x78D9);	// @ (0xF1B * 8 + 1)
#define                                 RXM0EID1_bit        _BIT_ACCESS(RXM0EIDL,1)
// RXM0EIDH<RXM0EID10>
extern volatile __bit                   RXM0EID10           __at(0x78D2);	// @ (0xF1A * 8 + 2)
#define                                 RXM0EID10_bit       _BIT_ACCESS(RXM0EIDH,2)
// RXM0EIDH<RXM0EID11>
extern volatile __bit                   RXM0EID11           __at(0x78D3);	// @ (0xF1A * 8 + 3)
#define                                 RXM0EID11_bit       _BIT_ACCESS(RXM0EIDH,3)
// RXM0EIDH<RXM0EID12>
extern volatile __bit                   RXM0EID12           __at(0x78D4);	// @ (0xF1A * 8 + 4)
#define                                 RXM0EID12_bit       _BIT_ACCESS(RXM0EIDH,4)
// RXM0EIDH<RXM0EID13>
extern volatile __bit                   RXM0EID13           __at(0x78D5);	// @ (0xF1A * 8 + 5)
#define                                 RXM0EID13_bit       _BIT_ACCESS(RXM0EIDH,5)
// RXM0EIDH<RXM0EID14>
extern volatile __bit                   RXM0EID14           __at(0x78D6);	// @ (0xF1A * 8 + 6)
#define                                 RXM0EID14_bit       _BIT_ACCESS(RXM0EIDH,6)
// RXM0EIDH<RXM0EID15>
extern volatile __bit                   RXM0EID15           __at(0x78D7);	// @ (0xF1A * 8 + 7)
#define                                 RXM0EID15_bit       _BIT_ACCESS(RXM0EIDH,7)
// RXM0SIDL<RXM0EID16>
extern volatile __bit                   RXM0EID16           __at(0x78C8);	// @ (0xF19 * 8 + 0)
#define                                 RXM0EID16_bit       _BIT_ACCESS(RXM0SIDL,0)
// RXM0SIDL<RXM0EID17>
extern volatile __bit                   RXM0EID17           __at(0x78C9);	// @ (0xF19 * 8 + 1)
#define                                 RXM0EID17_bit       _BIT_ACCESS(RXM0SIDL,1)
// RXM0EIDL<RXM0EID2>
extern volatile __bit                   RXM0EID2            __at(0x78DA);	// @ (0xF1B * 8 + 2)
#define                                 RXM0EID2_bit        _BIT_ACCESS(RXM0EIDL,2)
// RXM0EIDL<RXM0EID3>
extern volatile __bit                   RXM0EID3            __at(0x78DB);	// @ (0xF1B * 8 + 3)
#define                                 RXM0EID3_bit        _BIT_ACCESS(RXM0EIDL,3)
// RXM0EIDL<RXM0EID4>
extern volatile __bit                   RXM0EID4            __at(0x78DC);	// @ (0xF1B * 8 + 4)
#define                                 RXM0EID4_bit        _BIT_ACCESS(RXM0EIDL,4)
// RXM0EIDL<RXM0EID5>
extern volatile __bit                   RXM0EID5            __at(0x78DD);	// @ (0xF1B * 8 + 5)
#define                                 RXM0EID5_bit        _BIT_ACCESS(RXM0EIDL,5)
// RXM0EIDL<RXM0EID6>
extern volatile __bit                   RXM0EID6            __at(0x78DE);	// @ (0xF1B * 8 + 6)
#define                                 RXM0EID6_bit        _BIT_ACCESS(RXM0EIDL,6)
// RXM0EIDL<RXM0EID7>
extern volatile __bit                   RXM0EID7            __at(0x78DF);	// @ (0xF1B * 8 + 7)
#define                                 RXM0EID7_bit        _BIT_ACCESS(RXM0EIDL,7)
// RXM0EIDH<RXM0EID8>
extern volatile __bit                   RXM0EID8            __at(0x78D0);	// @ (0xF1A * 8 + 0)
#define                                 RXM0EID8_bit        _BIT_ACCESS(RXM0EIDH,0)
// RXM0EIDH<RXM0EID9>
extern volatile __bit                   RXM0EID9            __at(0x78D1);	// @ (0xF1A * 8 + 1)
#define                                 RXM0EID9_bit        _BIT_ACCESS(RXM0EIDH,1)
// RXM0SIDL<RXM0EXIDM>
extern volatile __bit                   RXM0EXIDM           __at(0x78CB);	// @ (0xF19 * 8 + 3)
#define                                 RXM0EXIDM_bit       _BIT_ACCESS(RXM0SIDL,3)
// RXM0SIDL<RXM0SID0>
extern volatile __bit                   RXM0SID0            __at(0x78CD);	// @ (0xF19 * 8 + 5)
#define                                 RXM0SID0_bit        _BIT_ACCESS(RXM0SIDL,5)
// RXM0SIDL<RXM0SID1>
extern volatile __bit                   RXM0SID1            __at(0x78CE);	// @ (0xF19 * 8 + 6)
#define                                 RXM0SID1_bit        _BIT_ACCESS(RXM0SIDL,6)
// RXM0SIDH<RXM0SID10>
extern volatile __bit                   RXM0SID10           __at(0x78C7);	// @ (0xF18 * 8 + 7)
#define                                 RXM0SID10_bit       _BIT_ACCESS(RXM0SIDH,7)
// RXM0SIDL<RXM0SID2>
extern volatile __bit                   RXM0SID2            __at(0x78CF);	// @ (0xF19 * 8 + 7)
#define                                 RXM0SID2_bit        _BIT_ACCESS(RXM0SIDL,7)
// RXM0SIDH<RXM0SID3>
extern volatile __bit                   RXM0SID3            __at(0x78C0);	// @ (0xF18 * 8 + 0)
#define                                 RXM0SID3_bit        _BIT_ACCESS(RXM0SIDH,0)
// RXM0SIDH<RXM0SID4>
extern volatile __bit                   RXM0SID4            __at(0x78C1);	// @ (0xF18 * 8 + 1)
#define                                 RXM0SID4_bit        _BIT_ACCESS(RXM0SIDH,1)
// RXM0SIDH<RXM0SID5>
extern volatile __bit                   RXM0SID5            __at(0x78C2);	// @ (0xF18 * 8 + 2)
#define                                 RXM0SID5_bit        _BIT_ACCESS(RXM0SIDH,2)
// RXM0SIDH<RXM0SID6>
extern volatile __bit                   RXM0SID6            __at(0x78C3);	// @ (0xF18 * 8 + 3)
#define                                 RXM0SID6_bit        _BIT_ACCESS(RXM0SIDH,3)
// RXM0SIDH<RXM0SID7>
extern volatile __bit                   RXM0SID7            __at(0x78C4);	// @ (0xF18 * 8 + 4)
#define                                 RXM0SID7_bit        _BIT_ACCESS(RXM0SIDH,4)
// RXM0SIDH<RXM0SID8>
extern volatile __bit                   RXM0SID8            __at(0x78C5);	// @ (0xF18 * 8 + 5)
#define                                 RXM0SID8_bit        _BIT_ACCESS(RXM0SIDH,5)
// RXM0SIDH<RXM0SID9>
extern volatile __bit                   RXM0SID9            __at(0x78C6);	// @ (0xF18 * 8 + 6)
#define                                 RXM0SID9_bit        _BIT_ACCESS(RXM0SIDH,6)
// RXM1EIDL<RXM1EID0>
extern volatile __bit                   RXM1EID0            __at(0x78F8);	// @ (0xF1F * 8 + 0)
#define                                 RXM1EID0_bit        _BIT_ACCESS(RXM1EIDL,0)
// RXM1EIDL<RXM1EID1>
extern volatile __bit                   RXM1EID1            __at(0x78F9);	// @ (0xF1F * 8 + 1)
#define                                 RXM1EID1_bit        _BIT_ACCESS(RXM1EIDL,1)
// RXM1EIDH<RXM1EID10>
extern volatile __bit                   RXM1EID10           __at(0x78F2);	// @ (0xF1E * 8 + 2)
#define                                 RXM1EID10_bit       _BIT_ACCESS(RXM1EIDH,2)
// RXM1EIDH<RXM1EID11>
extern volatile __bit                   RXM1EID11           __at(0x78F3);	// @ (0xF1E * 8 + 3)
#define                                 RXM1EID11_bit       _BIT_ACCESS(RXM1EIDH,3)
// RXM1EIDH<RXM1EID12>
extern volatile __bit                   RXM1EID12           __at(0x78F4);	// @ (0xF1E * 8 + 4)
#define                                 RXM1EID12_bit       _BIT_ACCESS(RXM1EIDH,4)
// RXM1EIDH<RXM1EID13>
extern volatile __bit                   RXM1EID13           __at(0x78F5);	// @ (0xF1E * 8 + 5)
#define                                 RXM1EID13_bit       _BIT_ACCESS(RXM1EIDH,5)
// RXM1EIDH<RXM1EID14>
extern volatile __bit                   RXM1EID14           __at(0x78F6);	// @ (0xF1E * 8 + 6)
#define                                 RXM1EID14_bit       _BIT_ACCESS(RXM1EIDH,6)
// RXM1EIDH<RXM1EID15>
extern volatile __bit                   RXM1EID15           __at(0x78F7);	// @ (0xF1E * 8 + 7)
#define                                 RXM1EID15_bit       _BIT_ACCESS(RXM1EIDH,7)
// RXM1SIDL<RXM1EID16>
extern volatile __bit                   RXM1EID16           __at(0x78E8);	// @ (0xF1D * 8 + 0)
#define                                 RXM1EID16_bit       _BIT_ACCESS(RXM1SIDL,0)
// RXM1SIDL<RXM1EID17>
extern volatile __bit                   RXM1EID17           __at(0x78E9);	// @ (0xF1D * 8 + 1)
#define                                 RXM1EID17_bit       _BIT_ACCESS(RXM1SIDL,1)
// RXM1EIDL<RXM1EID2>
extern volatile __bit                   RXM1EID2            __at(0x78FA);	// @ (0xF1F * 8 + 2)
#define                                 RXM1EID2_bit        _BIT_ACCESS(RXM1EIDL,2)
// RXM1EIDL<RXM1EID3>
extern volatile __bit                   RXM1EID3            __at(0x78FB);	// @ (0xF1F * 8 + 3)
#define                                 RXM1EID3_bit        _BIT_ACCESS(RXM1EIDL,3)
// RXM1EIDL<RXM1EID4>
extern volatile __bit                   RXM1EID4            __at(0x78FC);	// @ (0xF1F * 8 + 4)
#define                                 RXM1EID4_bit        _BIT_ACCESS(RXM1EIDL,4)
// RXM1EIDL<RXM1EID5>
extern volatile __bit                   RXM1EID5            __at(0x78FD);	// @ (0xF1F * 8 + 5)
#define                                 RXM1EID5_bit        _BIT_ACCESS(RXM1EIDL,5)
// RXM1EIDL<RXM1EID6>
extern volatile __bit                   RXM1EID6            __at(0x78FE);	// @ (0xF1F * 8 + 6)
#define                                 RXM1EID6_bit        _BIT_ACCESS(RXM1EIDL,6)
// RXM1EIDL<RXM1EID7>
extern volatile __bit                   RXM1EID7            __at(0x78FF);	// @ (0xF1F * 8 + 7)
#define                                 RXM1EID7_bit        _BIT_ACCESS(RXM1EIDL,7)
// RXM1EIDH<RXM1EID8>
extern volatile __bit                   RXM1EID8            __at(0x78F0);	// @ (0xF1E * 8 + 0)
#define                                 RXM1EID8_bit        _BIT_ACCESS(RXM1EIDH,0)
// RXM1EIDH<RXM1EID9>
extern volatile __bit                   RXM1EID9            __at(0x78F1);	// @ (0xF1E * 8 + 1)
#define                                 RXM1EID9_bit        _BIT_ACCESS(RXM1EIDH,1)
// RXM1SIDL<RXM1EXIDEN>
extern volatile __bit                   RXM1EXIDEN          __at(0x78EB);	// @ (0xF1D * 8 + 3)
#define                                 RXM1EXIDEN_bit      _BIT_ACCESS(RXM1SIDL,3)
// RXM1SIDL<RXM1SID0>
extern volatile __bit                   RXM1SID0            __at(0x78ED);	// @ (0xF1D * 8 + 5)
#define                                 RXM1SID0_bit        _BIT_ACCESS(RXM1SIDL,5)
// RXM1SIDL<RXM1SID1>
extern volatile __bit                   RXM1SID1            __at(0x78EE);	// @ (0xF1D * 8 + 6)
#define                                 RXM1SID1_bit        _BIT_ACCESS(RXM1SIDL,6)
// RXM1SIDH<RXM1SID10>
extern volatile __bit                   RXM1SID10           __at(0x78E7);	// @ (0xF1C * 8 + 7)
#define                                 RXM1SID10_bit       _BIT_ACCESS(RXM1SIDH,7)
// RXM1SIDL<RXM1SID2>
extern volatile __bit                   RXM1SID2            __at(0x78EF);	// @ (0xF1D * 8 + 7)
#define                                 RXM1SID2_bit        _BIT_ACCESS(RXM1SIDL,7)
// RXM1SIDH<RXM1SID3>
extern volatile __bit                   RXM1SID3            __at(0x78E0);	// @ (0xF1C * 8 + 0)
#define                                 RXM1SID3_bit        _BIT_ACCESS(RXM1SIDH,0)
// RXM1SIDH<RXM1SID4>
extern volatile __bit                   RXM1SID4            __at(0x78E1);	// @ (0xF1C * 8 + 1)
#define                                 RXM1SID4_bit        _BIT_ACCESS(RXM1SIDH,1)
// RXM1SIDH<RXM1SID5>
extern volatile __bit                   RXM1SID5            __at(0x78E2);	// @ (0xF1C * 8 + 2)
#define                                 RXM1SID5_bit        _BIT_ACCESS(RXM1SIDH,2)
// RXM1SIDH<RXM1SID6>
extern volatile __bit                   RXM1SID6            __at(0x78E3);	// @ (0xF1C * 8 + 3)
#define                                 RXM1SID6_bit        _BIT_ACCESS(RXM1SIDH,3)
// RXM1SIDH<RXM1SID7>
extern volatile __bit                   RXM1SID7            __at(0x78E4);	// @ (0xF1C * 8 + 4)
#define                                 RXM1SID7_bit        _BIT_ACCESS(RXM1SIDH,4)
// RXM1SIDH<RXM1SID8>
extern volatile __bit                   RXM1SID8            __at(0x78E5);	// @ (0xF1C * 8 + 5)
#define                                 RXM1SID8_bit        _BIT_ACCESS(RXM1SIDH,5)
// RXM1SIDH<RXM1SID9>
extern volatile __bit                   RXM1SID9            __at(0x78E6);	// @ (0xF1C * 8 + 6)
#define                                 RXM1SID9_bit        _BIT_ACCESS(RXM1SIDH,6)
// RXB1CON<RXRTRR0>
extern volatile __bit                   RXRTRR0             __at(0x7A83);	// @ (0xF50 * 8 + 3)
#define                                 RXRTRR0_bit         _BIT_ACCESS(RXB1CON,3)
// B0CON<RXRTRRO_TXLARB>
extern volatile __bit                   RXRTRRO_TXLARB      __at(0x7105);	// @ (0xE20 * 8 + 5)
#define                                 RXRTRRO_TXLARB_bit  _BIT_ACCESS(B0CON,5)
// COMSTAT<RXWARN>
extern volatile __bit                   RXWARN              __at(0x7BA1);	// @ (0xF74 * 8 + 1)
#define                                 RXWARN_bit          _BIT_ACCESS(COMSTAT,1)
// SSPSTAT<R_NOT_W>
extern volatile __bit                   R_NOT_W             __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 R_NOT_W_bit         _BIT_ACCESS(SSPSTAT,2)
// SSPSTAT<R_W>
extern volatile __bit                   R_W                 __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 R_W_bit             _BIT_ACCESS(SSPSTAT,2)
// SSPSTAT<R_nW>
extern volatile __bit                   R_nW                __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 R_nW_bit            _BIT_ACCESS(SSPSTAT,2)
// BRGCON2<SAM>
extern volatile __bit                   SAM                 __at(0x7B8E);	// @ (0xF71 * 8 + 6)
#define                                 SAM_bit             _BIT_ACCESS(BRGCON2,6)
// PORTC<SCK>
extern volatile __bit                   SCK                 __at(0x7C13);	// @ (0xF82 * 8 + 3)
#define                                 SCK_bit             _BIT_ACCESS(PORTC,3)
// BAUDCON<SCKP>
extern volatile __bit                   SCKP                __at(0x7BF4);	// @ (0xF7E * 8 + 4)
#define                                 SCKP_bit            _BIT_ACCESS(BAUDCON,4)
// PORTC<SCL>
extern volatile __bit                   SCL                 __at(0x7C13);	// @ (0xF82 * 8 + 3)
#define                                 SCL_bit             _BIT_ACCESS(PORTC,3)
// OSCCON<SCS>
extern volatile __bit                   SCS                 __at(0x7E98);	// @ (0xFD3 * 8 + 0)
#define                                 SCS_bit             _BIT_ACCESS(OSCCON,0)
// OSCCON<SCS0>
extern volatile __bit                   SCS0                __at(0x7E98);	// @ (0xFD3 * 8 + 0)
#define                                 SCS0_bit            _BIT_ACCESS(OSCCON,0)
// OSCCON<SCS1>
extern volatile __bit                   SCS1                __at(0x7E99);	// @ (0xFD3 * 8 + 1)
#define                                 SCS1_bit            _BIT_ACCESS(OSCCON,1)
// PORTC<SDA>
extern volatile __bit                   SDA                 __at(0x7C14);	// @ (0xF82 * 8 + 4)
#define                                 SDA_bit             _BIT_ACCESS(PORTC,4)
// PORTC<SDI>
extern volatile __bit                   SDI                 __at(0x7C14);	// @ (0xF82 * 8 + 4)
#define                                 SDI_bit             _BIT_ACCESS(PORTC,4)
// PORTC<SDO>
extern volatile __bit                   SDO                 __at(0x7C15);	// @ (0xF82 * 8 + 5)
#define                                 SDO_bit             _BIT_ACCESS(PORTC,5)
// BRGCON2<SEG1PH0>
extern volatile __bit                   SEG1PH0             __at(0x7B8B);	// @ (0xF71 * 8 + 3)
#define                                 SEG1PH0_bit         _BIT_ACCESS(BRGCON2,3)
// BRGCON2<SEG1PH1>
extern volatile __bit                   SEG1PH1             __at(0x7B8C);	// @ (0xF71 * 8 + 4)
#define                                 SEG1PH1_bit         _BIT_ACCESS(BRGCON2,4)
// BRGCON2<SEG1PH2>
extern volatile __bit                   SEG1PH2             __at(0x7B8D);	// @ (0xF71 * 8 + 5)
#define                                 SEG1PH2_bit         _BIT_ACCESS(BRGCON2,5)
// BRGCON3<SEG2PH0>
extern volatile __bit                   SEG2PH0             __at(0x7B90);	// @ (0xF72 * 8 + 0)
#define                                 SEG2PH0_bit         _BIT_ACCESS(BRGCON3,0)
// BRGCON3<SEG2PH1>
extern volatile __bit                   SEG2PH1             __at(0x7B91);	// @ (0xF72 * 8 + 1)
#define                                 SEG2PH1_bit         _BIT_ACCESS(BRGCON3,1)
// BRGCON3<SEG2PH2>
extern volatile __bit                   SEG2PH2             __at(0x7B92);	// @ (0xF72 * 8 + 2)
#define                                 SEG2PH2_bit         _BIT_ACCESS(BRGCON3,2)
// BRGCON2<SEG2PHT>
extern volatile __bit                   SEG2PHT             __at(0x7B8F);	// @ (0xF71 * 8 + 7)
#define                                 SEG2PHT_bit         _BIT_ACCESS(BRGCON2,7)
// BRGCON2<SEG2PHTS>
extern volatile __bit                   SEG2PHTS            __at(0x7B8F);	// @ (0xF71 * 8 + 7)
#define                                 SEG2PHTS_bit        _BIT_ACCESS(BRGCON2,7)
// SSPCON2<SEN>
extern volatile __bit                   SEN                 __at(0x7E28);	// @ (0xFC5 * 8 + 0)
#define                                 SEN_bit             _BIT_ACCESS(SSPCON2,0)
// TXSTA<SENDB>
extern volatile __bit                   SENDB               __at(0x7D63);	// @ (0xFAC * 8 + 3)
#define                                 SENDB_bit           _BIT_ACCESS(TXSTA,3)
// TXSTA<SENDB1>
extern volatile __bit                   SENDB1              __at(0x7D63);	// @ (0xFAC * 8 + 3)
#define                                 SENDB1_bit          _BIT_ACCESS(TXSTA,3)
// BRGCON1<SJW0>
extern volatile __bit                   SJW0                __at(0x7B86);	// @ (0xF70 * 8 + 6)
#define                                 SJW0_bit            _BIT_ACCESS(BRGCON1,6)
// BRGCON1<SJW1>
extern volatile __bit                   SJW1                __at(0x7B87);	// @ (0xF70 * 8 + 7)
#define                                 SJW1_bit            _BIT_ACCESS(BRGCON1,7)
// SSPSTAT<SMP>
extern volatile __bit                   SMP                 __at(0x7E3F);	// @ (0xFC7 * 8 + 7)
#define                                 SMP_bit             _BIT_ACCESS(SSPSTAT,7)
// T1CON<SOSCEN>
extern volatile __bit                   SOSCEN              __at(0x7E6B);	// @ (0xFCD * 8 + 3)
#define                                 SOSCEN_bit          _BIT_ACCESS(T1CON,3)
// T3CON<SOSCEN3>
extern volatile __bit                   SOSCEN3             __at(0x7D8B);	// @ (0xFB1 * 8 + 3)
#define                                 SOSCEN3_bit         _BIT_ACCESS(T3CON,3)
// RCSTA<SPEN>
extern volatile __bit                   SPEN                __at(0x7D5F);	// @ (0xFAB * 8 + 7)
#define                                 SPEN_bit            _BIT_ACCESS(RCSTA,7)
// RCSTA<SPEN1>
extern volatile __bit                   SPEN1               __at(0x7D5F);	// @ (0xFAB * 8 + 7)
#define                                 SPEN1_bit           _BIT_ACCESS(RCSTA,7)
// RCSTA<SREN>
extern volatile __bit                   SREN                __at(0x7D5D);	// @ (0xFAB * 8 + 5)
#define                                 SREN_bit            _BIT_ACCESS(RCSTA,5)
// RCSTA<SREN1>
extern volatile __bit                   SREN1               __at(0x7D5D);	// @ (0xFAB * 8 + 5)
#define                                 SREN1_bit           _BIT_ACCESS(RCSTA,5)
// RCSTA<SRENA>
extern volatile __bit                   SRENA               __at(0x7D5D);	// @ (0xFAB * 8 + 5)
#define                                 SRENA_bit           _BIT_ACCESS(RCSTA,5)
// PORTF<SS>
extern volatile __bit                   SS                  __at(0x7C2F);	// @ (0xF85 * 8 + 7)
#define                                 SS_bit              _BIT_ACCESS(PORTF,7)
// PORTD<SS2>
extern volatile __bit                   SS2                 __at(0x7C1F);	// @ (0xF83 * 8 + 7)
#define                                 SS2_bit             _BIT_ACCESS(PORTD,7)
// SSPCON1<SSPEN>
extern volatile __bit                   SSPEN               __at(0x7E35);	// @ (0xFC6 * 8 + 5)
#define                                 SSPEN_bit           _BIT_ACCESS(SSPCON1,5)
// PIE1<SSPIE>
extern volatile __bit                   SSPIE               __at(0x7CEB);	// @ (0xF9D * 8 + 3)
#define                                 SSPIE_bit           _BIT_ACCESS(PIE1,3)
// PIR1<SSPIF>
extern volatile __bit                   SSPIF               __at(0x7CF3);	// @ (0xF9E * 8 + 3)
#define                                 SSPIF_bit           _BIT_ACCESS(PIR1,3)
// IPR1<SSPIP>
extern volatile __bit                   SSPIP               __at(0x7CFB);	// @ (0xF9F * 8 + 3)
#define                                 SSPIP_bit           _BIT_ACCESS(IPR1,3)
// SSPCON1<SSPM0>
extern volatile __bit                   SSPM0               __at(0x7E30);	// @ (0xFC6 * 8 + 0)
#define                                 SSPM0_bit           _BIT_ACCESS(SSPCON1,0)
// SSPCON1<SSPM1>
extern volatile __bit                   SSPM1               __at(0x7E31);	// @ (0xFC6 * 8 + 1)
#define                                 SSPM1_bit           _BIT_ACCESS(SSPCON1,1)
// SSPCON1<SSPM2>
extern volatile __bit                   SSPM2               __at(0x7E32);	// @ (0xFC6 * 8 + 2)
#define                                 SSPM2_bit           _BIT_ACCESS(SSPCON1,2)
// SSPCON1<SSPM3>
extern volatile __bit                   SSPM3               __at(0x7E33);	// @ (0xFC6 * 8 + 3)
#define                                 SSPM3_bit           _BIT_ACCESS(SSPCON1,3)
// SSPCON1<SSPOV>
extern volatile __bit                   SSPOV               __at(0x7E36);	// @ (0xFC6 * 8 + 6)
#define                                 SSPOV_bit           _BIT_ACCESS(SSPCON1,6)
// SSPSTAT<START>
extern volatile __bit                   START               __at(0x7E3B);	// @ (0xFC7 * 8 + 3)
#define                                 START_bit           _BIT_ACCESS(SSPSTAT,3)
// STKPTR<STKFUL>
extern volatile __bit                   STKFUL              __at(0x7FE7);	// @ (0xFFC * 8 + 7)
#define                                 STKFUL_bit          _BIT_ACCESS(STKPTR,7)
// STKPTR<STKOVF>
extern volatile __bit                   STKOVF              __at(0x7FE7);	// @ (0xFFC * 8 + 7)
#define                                 STKOVF_bit          _BIT_ACCESS(STKPTR,7)
// STKPTR<STKPTR0>
extern volatile __bit                   STKPTR0             __at(0x7FE0);	// @ (0xFFC * 8 + 0)
#define                                 STKPTR0_bit         _BIT_ACCESS(STKPTR,0)
// STKPTR<STKPTR1>
extern volatile __bit                   STKPTR1             __at(0x7FE1);	// @ (0xFFC * 8 + 1)
#define                                 STKPTR1_bit         _BIT_ACCESS(STKPTR,1)
// STKPTR<STKPTR2>
extern volatile __bit                   STKPTR2             __at(0x7FE2);	// @ (0xFFC * 8 + 2)
#define                                 STKPTR2_bit         _BIT_ACCESS(STKPTR,2)
// STKPTR<STKPTR3>
extern volatile __bit                   STKPTR3             __at(0x7FE3);	// @ (0xFFC * 8 + 3)
#define                                 STKPTR3_bit         _BIT_ACCESS(STKPTR,3)
// STKPTR<STKPTR4>
extern volatile __bit                   STKPTR4             __at(0x7FE4);	// @ (0xFFC * 8 + 4)
#define                                 STKPTR4_bit         _BIT_ACCESS(STKPTR,4)
// STKPTR<STKUNF>
extern volatile __bit                   STKUNF              __at(0x7FE6);	// @ (0xFFC * 8 + 6)
#define                                 STKUNF_bit          _BIT_ACCESS(STKPTR,6)
// SSPSTAT<STOP>
extern volatile __bit                   STOP                __at(0x7E3C);	// @ (0xFC7 * 8 + 4)
#define                                 STOP_bit            _BIT_ACCESS(SSPSTAT,4)
// WDTCON<SWDTE>
extern volatile __bit                   SWDTE               __at(0x7E88);	// @ (0xFD1 * 8 + 0)
#define                                 SWDTE_bit           _BIT_ACCESS(WDTCON,0)
// WDTCON<SWDTEN>
extern volatile __bit                   SWDTEN              __at(0x7E88);	// @ (0xFD1 * 8 + 0)
#define                                 SWDTEN_bit          _BIT_ACCESS(WDTCON,0)
// TXSTA<SYNC>
extern volatile __bit                   SYNC                __at(0x7D64);	// @ (0xFAC * 8 + 4)
#define                                 SYNC_bit            _BIT_ACCESS(TXSTA,4)
// TXSTA<SYNC1>
extern volatile __bit                   SYNC1               __at(0x7D64);	// @ (0xFAC * 8 + 4)
#define                                 SYNC1_bit           _BIT_ACCESS(TXSTA,4)
// T0CON<T08BIT>
extern volatile __bit                   T08BIT              __at(0x7EAE);	// @ (0xFD5 * 8 + 6)
#define                                 T08BIT_bit          _BIT_ACCESS(T0CON,6)
// PORTA<T0CKI>
extern volatile __bit                   T0CKI               __at(0x7C04);	// @ (0xF80 * 8 + 4)
#define                                 T0CKI_bit           _BIT_ACCESS(PORTA,4)
// T0CON<T0CS>
extern volatile __bit                   T0CS                __at(0x7EAD);	// @ (0xFD5 * 8 + 5)
#define                                 T0CS_bit            _BIT_ACCESS(T0CON,5)
// INTCON<T0IE>
extern volatile __bit                   T0IE                __at(0x7F95);	// @ (0xFF2 * 8 + 5)
#define                                 T0IE_bit            _BIT_ACCESS(INTCON,5)
// INTCON<T0IF>
extern volatile __bit                   T0IF                __at(0x7F92);	// @ (0xFF2 * 8 + 2)
#define                                 T0IF_bit            _BIT_ACCESS(INTCON,2)
// INTCON2<T0IP>
extern volatile __bit                   T0IP                __at(0x7F8A);	// @ (0xFF1 * 8 + 2)
#define                                 T0IP_bit            _BIT_ACCESS(INTCON2,2)
// T0CON<T0PS0>
extern volatile __bit                   T0PS0               __at(0x7EA8);	// @ (0xFD5 * 8 + 0)
#define                                 T0PS0_bit           _BIT_ACCESS(T0CON,0)
// T0CON<T0PS1>
extern volatile __bit                   T0PS1               __at(0x7EA9);	// @ (0xFD5 * 8 + 1)
#define                                 T0PS1_bit           _BIT_ACCESS(T0CON,1)
// T0CON<T0PS2>
extern volatile __bit                   T0PS2               __at(0x7EAA);	// @ (0xFD5 * 8 + 2)
#define                                 T0PS2_bit           _BIT_ACCESS(T0CON,2)
// T0CON<T0SE>
extern volatile __bit                   T0SE                __at(0x7EAC);	// @ (0xFD5 * 8 + 4)
#define                                 T0SE_bit            _BIT_ACCESS(T0CON,4)
// PORTC<T13CKI>
extern volatile __bit                   T13CKI              __at(0x7C10);	// @ (0xF82 * 8 + 0)
#define                                 T13CKI_bit          _BIT_ACCESS(PORTC,0)
// T1CON<T1CKPS0>
extern volatile __bit                   T1CKPS0             __at(0x7E6C);	// @ (0xFCD * 8 + 4)
#define                                 T1CKPS0_bit         _BIT_ACCESS(T1CON,4)
// T1CON<T1CKPS1>
extern volatile __bit                   T1CKPS1             __at(0x7E6D);	// @ (0xFCD * 8 + 5)
#define                                 T1CKPS1_bit         _BIT_ACCESS(T1CON,5)
// T1CON<T1INSYNC>
extern volatile __bit                   T1INSYNC            __at(0x7E6A);	// @ (0xFCD * 8 + 2)
#define                                 T1INSYNC_bit        _BIT_ACCESS(T1CON,2)
// T1CON<T1OSCEN>
extern volatile __bit                   T1OSCEN             __at(0x7E6B);	// @ (0xFCD * 8 + 3)
#define                                 T1OSCEN_bit         _BIT_ACCESS(T1CON,3)
// PORTC<T1OSI>
extern volatile __bit                   T1OSI               __at(0x7C11);	// @ (0xF82 * 8 + 1)
#define                                 T1OSI_bit           _BIT_ACCESS(PORTC,1)
// PORTC<T1OSO>
extern volatile __bit                   T1OSO               __at(0x7C10);	// @ (0xF82 * 8 + 0)
#define                                 T1OSO_bit           _BIT_ACCESS(PORTC,0)
// T1CON<T1RD16>
extern volatile __bit                   T1RD16              __at(0x7E6F);	// @ (0xFCD * 8 + 7)
#define                                 T1RD16_bit          _BIT_ACCESS(T1CON,7)
// T1CON<T1SYNC>
extern volatile __bit                   T1SYNC              __at(0x7E6A);	// @ (0xFCD * 8 + 2)
#define                                 T1SYNC_bit          _BIT_ACCESS(T1CON,2)
// T2CON<T2CKPS0>
extern volatile __bit                   T2CKPS0             __at(0x7E50);	// @ (0xFCA * 8 + 0)
#define                                 T2CKPS0_bit         _BIT_ACCESS(T2CON,0)
// T2CON<T2CKPS1>
extern volatile __bit                   T2CKPS1             __at(0x7E51);	// @ (0xFCA * 8 + 1)
#define                                 T2CKPS1_bit         _BIT_ACCESS(T2CON,1)
// T2CON<T2OUTPS0>
extern volatile __bit                   T2OUTPS0            __at(0x7E53);	// @ (0xFCA * 8 + 3)
#define                                 T2OUTPS0_bit        _BIT_ACCESS(T2CON,3)
// T2CON<T2OUTPS1>
extern volatile __bit                   T2OUTPS1            __at(0x7E54);	// @ (0xFCA * 8 + 4)
#define                                 T2OUTPS1_bit        _BIT_ACCESS(T2CON,4)
// T2CON<T2OUTPS2>
extern volatile __bit                   T2OUTPS2            __at(0x7E55);	// @ (0xFCA * 8 + 5)
#define                                 T2OUTPS2_bit        _BIT_ACCESS(T2CON,5)
// T2CON<T2OUTPS3>
extern volatile __bit                   T2OUTPS3            __at(0x7E56);	// @ (0xFCA * 8 + 6)
#define                                 T2OUTPS3_bit        _BIT_ACCESS(T2CON,6)
// T3CON<T3CCP1>
extern volatile __bit                   T3CCP1              __at(0x7D8B);	// @ (0xFB1 * 8 + 3)
#define                                 T3CCP1_bit          _BIT_ACCESS(T3CON,3)
// T3CON<T3CCP2>
extern volatile __bit                   T3CCP2              __at(0x7D8E);	// @ (0xFB1 * 8 + 6)
#define                                 T3CCP2_bit          _BIT_ACCESS(T3CON,6)
// T3CON<T3CKPS0>
extern volatile __bit                   T3CKPS0             __at(0x7D8C);	// @ (0xFB1 * 8 + 4)
#define                                 T3CKPS0_bit         _BIT_ACCESS(T3CON,4)
// T3CON<T3CKPS1>
extern volatile __bit                   T3CKPS1             __at(0x7D8D);	// @ (0xFB1 * 8 + 5)
#define                                 T3CKPS1_bit         _BIT_ACCESS(T3CON,5)
// T3CON<T3NSYNC>
extern volatile __bit                   T3NSYNC             __at(0x7D8A);	// @ (0xFB1 * 8 + 2)
#define                                 T3NSYNC_bit         _BIT_ACCESS(T3CON,2)
// T3CON<T3RD16>
extern volatile __bit                   T3RD16              __at(0x7D8F);	// @ (0xFB1 * 8 + 7)
#define                                 T3RD16_bit          _BIT_ACCESS(T3CON,7)
// T3CON<T3SYNC>
extern volatile __bit                   T3SYNC              __at(0x7D8A);	// @ (0xFB1 * 8 + 2)
#define                                 T3SYNC_bit          _BIT_ACCESS(T3CON,2)
// TXERRCNT<TEC0>
extern volatile __bit                   TEC0                __at(0x7BB0);	// @ (0xF76 * 8 + 0)
#define                                 TEC0_bit            _BIT_ACCESS(TXERRCNT,0)
// TXERRCNT<TEC1>
extern volatile __bit                   TEC1                __at(0x7BB1);	// @ (0xF76 * 8 + 1)
#define                                 TEC1_bit            _BIT_ACCESS(TXERRCNT,1)
// TXERRCNT<TEC2>
extern volatile __bit                   TEC2                __at(0x7BB2);	// @ (0xF76 * 8 + 2)
#define                                 TEC2_bit            _BIT_ACCESS(TXERRCNT,2)
// TXERRCNT<TEC3>
extern volatile __bit                   TEC3                __at(0x7BB3);	// @ (0xF76 * 8 + 3)
#define                                 TEC3_bit            _BIT_ACCESS(TXERRCNT,3)
// TXERRCNT<TEC4>
extern volatile __bit                   TEC4                __at(0x7BB4);	// @ (0xF76 * 8 + 4)
#define                                 TEC4_bit            _BIT_ACCESS(TXERRCNT,4)
// TXERRCNT<TEC5>
extern volatile __bit                   TEC5                __at(0x7BB5);	// @ (0xF76 * 8 + 5)
#define                                 TEC5_bit            _BIT_ACCESS(TXERRCNT,5)
// TXERRCNT<TEC6>
extern volatile __bit                   TEC6                __at(0x7BB6);	// @ (0xF76 * 8 + 6)
#define                                 TEC6_bit            _BIT_ACCESS(TXERRCNT,6)
// TXERRCNT<TEC7>
extern volatile __bit                   TEC7                __at(0x7BB7);	// @ (0xF76 * 8 + 7)
#define                                 TEC7_bit            _BIT_ACCESS(TXERRCNT,7)
// INTCON<TMR0IE>
extern volatile __bit                   TMR0IE              __at(0x7F95);	// @ (0xFF2 * 8 + 5)
#define                                 TMR0IE_bit          _BIT_ACCESS(INTCON,5)
// INTCON<TMR0IF>
extern volatile __bit                   TMR0IF              __at(0x7F92);	// @ (0xFF2 * 8 + 2)
#define                                 TMR0IF_bit          _BIT_ACCESS(INTCON,2)
// INTCON2<TMR0IP>
extern volatile __bit                   TMR0IP              __at(0x7F8A);	// @ (0xFF1 * 8 + 2)
#define                                 TMR0IP_bit          _BIT_ACCESS(INTCON2,2)
// T0CON<TMR0ON>
extern volatile __bit                   TMR0ON              __at(0x7EAF);	// @ (0xFD5 * 8 + 7)
#define                                 TMR0ON_bit          _BIT_ACCESS(T0CON,7)
// T1CON<TMR1CS>
extern volatile __bit                   TMR1CS              __at(0x7E69);	// @ (0xFCD * 8 + 1)
#define                                 TMR1CS_bit          _BIT_ACCESS(T1CON,1)
// PIE1<TMR1IE>
extern volatile __bit                   TMR1IE              __at(0x7CE8);	// @ (0xF9D * 8 + 0)
#define                                 TMR1IE_bit          _BIT_ACCESS(PIE1,0)
// PIR1<TMR1IF>
extern volatile __bit                   TMR1IF              __at(0x7CF0);	// @ (0xF9E * 8 + 0)
#define                                 TMR1IF_bit          _BIT_ACCESS(PIR1,0)
// IPR1<TMR1IP>
extern volatile __bit                   TMR1IP              __at(0x7CF8);	// @ (0xF9F * 8 + 0)
#define                                 TMR1IP_bit          _BIT_ACCESS(IPR1,0)
// T1CON<TMR1ON>
extern volatile __bit                   TMR1ON              __at(0x7E68);	// @ (0xFCD * 8 + 0)
#define                                 TMR1ON_bit          _BIT_ACCESS(T1CON,0)
// PIE1<TMR2IE>
extern volatile __bit                   TMR2IE              __at(0x7CE9);	// @ (0xF9D * 8 + 1)
#define                                 TMR2IE_bit          _BIT_ACCESS(PIE1,1)
// PIR1<TMR2IF>
extern volatile __bit                   TMR2IF              __at(0x7CF1);	// @ (0xF9E * 8 + 1)
#define                                 TMR2IF_bit          _BIT_ACCESS(PIR1,1)
// IPR1<TMR2IP>
extern volatile __bit                   TMR2IP              __at(0x7CF9);	// @ (0xF9F * 8 + 1)
#define                                 TMR2IP_bit          _BIT_ACCESS(IPR1,1)
// T2CON<TMR2ON>
extern volatile __bit                   TMR2ON              __at(0x7E52);	// @ (0xFCA * 8 + 2)
#define                                 TMR2ON_bit          _BIT_ACCESS(T2CON,2)
// T3CON<TMR3CS>
extern volatile __bit                   TMR3CS              __at(0x7D89);	// @ (0xFB1 * 8 + 1)
#define                                 TMR3CS_bit          _BIT_ACCESS(T3CON,1)
// PIE2<TMR3IE>
extern volatile __bit                   TMR3IE              __at(0x7D01);	// @ (0xFA0 * 8 + 1)
#define                                 TMR3IE_bit          _BIT_ACCESS(PIE2,1)
// PIR2<TMR3IF>
extern volatile __bit                   TMR3IF              __at(0x7D09);	// @ (0xFA1 * 8 + 1)
#define                                 TMR3IF_bit          _BIT_ACCESS(PIR2,1)
// IPR2<TMR3IP>
extern volatile __bit                   TMR3IP              __at(0x7D11);	// @ (0xFA2 * 8 + 1)
#define                                 TMR3IP_bit          _BIT_ACCESS(IPR2,1)
// T3CON<TMR3ON>
extern volatile __bit                   TMR3ON              __at(0x7D88);	// @ (0xFB1 * 8 + 0)
#define                                 TMR3ON_bit          _BIT_ACCESS(T3CON,0)
// RCON<TO>
extern volatile __bit                   TO                  __at(0x7E83);	// @ (0xFD0 * 8 + 3)
#define                                 TO_bit              _BIT_ACCESS(RCON,3)
// TRISA<TRISA0>
extern volatile __bit                   TRISA0              __at(0x7C90);	// @ (0xF92 * 8 + 0)
#define                                 TRISA0_bit          _BIT_ACCESS(TRISA,0)
// TRISA<TRISA1>
extern volatile __bit                   TRISA1              __at(0x7C91);	// @ (0xF92 * 8 + 1)
#define                                 TRISA1_bit          _BIT_ACCESS(TRISA,1)
// TRISA<TRISA2>
extern volatile __bit                   TRISA2              __at(0x7C92);	// @ (0xF92 * 8 + 2)
#define                                 TRISA2_bit          _BIT_ACCESS(TRISA,2)
// TRISA<TRISA3>
extern volatile __bit                   TRISA3              __at(0x7C93);	// @ (0xF92 * 8 + 3)
#define                                 TRISA3_bit          _BIT_ACCESS(TRISA,3)
// TRISA<TRISA4>
extern volatile __bit                   TRISA4              __at(0x7C94);	// @ (0xF92 * 8 + 4)
#define                                 TRISA4_bit          _BIT_ACCESS(TRISA,4)
// TRISA<TRISA5>
extern volatile __bit                   TRISA5              __at(0x7C95);	// @ (0xF92 * 8 + 5)
#define                                 TRISA5_bit          _BIT_ACCESS(TRISA,5)
// TRISA<TRISA6>
extern volatile __bit                   TRISA6              __at(0x7C96);	// @ (0xF92 * 8 + 6)
#define                                 TRISA6_bit          _BIT_ACCESS(TRISA,6)
// TRISB<TRISB0>
extern volatile __bit                   TRISB0              __at(0x7C98);	// @ (0xF93 * 8 + 0)
#define                                 TRISB0_bit          _BIT_ACCESS(TRISB,0)
// TRISB<TRISB1>
extern volatile __bit                   TRISB1              __at(0x7C99);	// @ (0xF93 * 8 + 1)
#define                                 TRISB1_bit          _BIT_ACCESS(TRISB,1)
// TRISB<TRISB2>
extern volatile __bit                   TRISB2              __at(0x7C9A);	// @ (0xF93 * 8 + 2)
#define                                 TRISB2_bit          _BIT_ACCESS(TRISB,2)
// TRISB<TRISB3>
extern volatile __bit                   TRISB3              __at(0x7C9B);	// @ (0xF93 * 8 + 3)
#define                                 TRISB3_bit          _BIT_ACCESS(TRISB,3)
// TRISB<TRISB4>
extern volatile __bit                   TRISB4              __at(0x7C9C);	// @ (0xF93 * 8 + 4)
#define                                 TRISB4_bit          _BIT_ACCESS(TRISB,4)
// TRISB<TRISB5>
extern volatile __bit                   TRISB5              __at(0x7C9D);	// @ (0xF93 * 8 + 5)
#define                                 TRISB5_bit          _BIT_ACCESS(TRISB,5)
// TRISB<TRISB6>
extern volatile __bit                   TRISB6              __at(0x7C9E);	// @ (0xF93 * 8 + 6)
#define                                 TRISB6_bit          _BIT_ACCESS(TRISB,6)
// TRISB<TRISB7>
extern volatile __bit                   TRISB7              __at(0x7C9F);	// @ (0xF93 * 8 + 7)
#define                                 TRISB7_bit          _BIT_ACCESS(TRISB,7)
// TRISC<TRISC0>
extern volatile __bit                   TRISC0              __at(0x7CA0);	// @ (0xF94 * 8 + 0)
#define                                 TRISC0_bit          _BIT_ACCESS(TRISC,0)
// TRISC<TRISC1>
extern volatile __bit                   TRISC1              __at(0x7CA1);	// @ (0xF94 * 8 + 1)
#define                                 TRISC1_bit          _BIT_ACCESS(TRISC,1)
// TRISC<TRISC2>
extern volatile __bit                   TRISC2              __at(0x7CA2);	// @ (0xF94 * 8 + 2)
#define                                 TRISC2_bit          _BIT_ACCESS(TRISC,2)
// TRISC<TRISC3>
extern volatile __bit                   TRISC3              __at(0x7CA3);	// @ (0xF94 * 8 + 3)
#define                                 TRISC3_bit          _BIT_ACCESS(TRISC,3)
// TRISC<TRISC4>
extern volatile __bit                   TRISC4              __at(0x7CA4);	// @ (0xF94 * 8 + 4)
#define                                 TRISC4_bit          _BIT_ACCESS(TRISC,4)
// TRISC<TRISC5>
extern volatile __bit                   TRISC5              __at(0x7CA5);	// @ (0xF94 * 8 + 5)
#define                                 TRISC5_bit          _BIT_ACCESS(TRISC,5)
// TRISC<TRISC6>
extern volatile __bit                   TRISC6              __at(0x7CA6);	// @ (0xF94 * 8 + 6)
#define                                 TRISC6_bit          _BIT_ACCESS(TRISC,6)
// TRISC<TRISC7>
extern volatile __bit                   TRISC7              __at(0x7CA7);	// @ (0xF94 * 8 + 7)
#define                                 TRISC7_bit          _BIT_ACCESS(TRISC,7)
// TRISD<TRISD0>
extern volatile __bit                   TRISD0              __at(0x7CA8);	// @ (0xF95 * 8 + 0)
#define                                 TRISD0_bit          _BIT_ACCESS(TRISD,0)
// TRISD<TRISD1>
extern volatile __bit                   TRISD1              __at(0x7CA9);	// @ (0xF95 * 8 + 1)
#define                                 TRISD1_bit          _BIT_ACCESS(TRISD,1)
// TRISD<TRISD2>
extern volatile __bit                   TRISD2              __at(0x7CAA);	// @ (0xF95 * 8 + 2)
#define                                 TRISD2_bit          _BIT_ACCESS(TRISD,2)
// TRISD<TRISD3>
extern volatile __bit                   TRISD3              __at(0x7CAB);	// @ (0xF95 * 8 + 3)
#define                                 TRISD3_bit          _BIT_ACCESS(TRISD,3)
// TRISD<TRISD4>
extern volatile __bit                   TRISD4              __at(0x7CAC);	// @ (0xF95 * 8 + 4)
#define                                 TRISD4_bit          _BIT_ACCESS(TRISD,4)
// TRISD<TRISD5>
extern volatile __bit                   TRISD5              __at(0x7CAD);	// @ (0xF95 * 8 + 5)
#define                                 TRISD5_bit          _BIT_ACCESS(TRISD,5)
// TRISD<TRISD6>
extern volatile __bit                   TRISD6              __at(0x7CAE);	// @ (0xF95 * 8 + 6)
#define                                 TRISD6_bit          _BIT_ACCESS(TRISD,6)
// TRISD<TRISD7>
extern volatile __bit                   TRISD7              __at(0x7CAF);	// @ (0xF95 * 8 + 7)
#define                                 TRISD7_bit          _BIT_ACCESS(TRISD,7)
// TRISE<TRISE0>
extern volatile __bit                   TRISE0              __at(0x7CB0);	// @ (0xF96 * 8 + 0)
#define                                 TRISE0_bit          _BIT_ACCESS(TRISE,0)
// TRISE<TRISE1>
extern volatile __bit                   TRISE1              __at(0x7CB1);	// @ (0xF96 * 8 + 1)
#define                                 TRISE1_bit          _BIT_ACCESS(TRISE,1)
// TRISE<TRISE2>
extern volatile __bit                   TRISE2              __at(0x7CB2);	// @ (0xF96 * 8 + 2)
#define                                 TRISE2_bit          _BIT_ACCESS(TRISE,2)
// TRISE<TRISE3>
extern volatile __bit                   TRISE3              __at(0x7CB3);	// @ (0xF96 * 8 + 3)
#define                                 TRISE3_bit          _BIT_ACCESS(TRISE,3)
// TRISE<TRISE4>
extern volatile __bit                   TRISE4              __at(0x7CB4);	// @ (0xF96 * 8 + 4)
#define                                 TRISE4_bit          _BIT_ACCESS(TRISE,4)
// TRISE<TRISE5>
extern volatile __bit                   TRISE5              __at(0x7CB5);	// @ (0xF96 * 8 + 5)
#define                                 TRISE5_bit          _BIT_ACCESS(TRISE,5)
// TRISE<TRISE6>
extern volatile __bit                   TRISE6              __at(0x7CB6);	// @ (0xF96 * 8 + 6)
#define                                 TRISE6_bit          _BIT_ACCESS(TRISE,6)
// TRISE<TRISE7>
extern volatile __bit                   TRISE7              __at(0x7CB7);	// @ (0xF96 * 8 + 7)
#define                                 TRISE7_bit          _BIT_ACCESS(TRISE,7)
// TRISF<TRISF0>
extern volatile __bit                   TRISF0              __at(0x7CB8);	// @ (0xF97 * 8 + 0)
#define                                 TRISF0_bit          _BIT_ACCESS(TRISF,0)
// TRISF<TRISF1>
extern volatile __bit                   TRISF1              __at(0x7CB9);	// @ (0xF97 * 8 + 1)
#define                                 TRISF1_bit          _BIT_ACCESS(TRISF,1)
// TRISF<TRISF2>
extern volatile __bit                   TRISF2              __at(0x7CBA);	// @ (0xF97 * 8 + 2)
#define                                 TRISF2_bit          _BIT_ACCESS(TRISF,2)
// TRISF<TRISF3>
extern volatile __bit                   TRISF3              __at(0x7CBB);	// @ (0xF97 * 8 + 3)
#define                                 TRISF3_bit          _BIT_ACCESS(TRISF,3)
// TRISF<TRISF4>
extern volatile __bit                   TRISF4              __at(0x7CBC);	// @ (0xF97 * 8 + 4)
#define                                 TRISF4_bit          _BIT_ACCESS(TRISF,4)
// TRISF<TRISF5>
extern volatile __bit                   TRISF5              __at(0x7CBD);	// @ (0xF97 * 8 + 5)
#define                                 TRISF5_bit          _BIT_ACCESS(TRISF,5)
// TRISF<TRISF6>
extern volatile __bit                   TRISF6              __at(0x7CBE);	// @ (0xF97 * 8 + 6)
#define                                 TRISF6_bit          _BIT_ACCESS(TRISF,6)
// TRISF<TRISF7>
extern volatile __bit                   TRISF7              __at(0x7CBF);	// @ (0xF97 * 8 + 7)
#define                                 TRISF7_bit          _BIT_ACCESS(TRISF,7)
// TRISG<TRISG0>
extern volatile __bit                   TRISG0              __at(0x7CC0);	// @ (0xF98 * 8 + 0)
#define                                 TRISG0_bit          _BIT_ACCESS(TRISG,0)
// TRISG<TRISG1>
extern volatile __bit                   TRISG1              __at(0x7CC1);	// @ (0xF98 * 8 + 1)
#define                                 TRISG1_bit          _BIT_ACCESS(TRISG,1)
// TRISG<TRISG2>
extern volatile __bit                   TRISG2              __at(0x7CC2);	// @ (0xF98 * 8 + 2)
#define                                 TRISG2_bit          _BIT_ACCESS(TRISG,2)
// TRISG<TRISG3>
extern volatile __bit                   TRISG3              __at(0x7CC3);	// @ (0xF98 * 8 + 3)
#define                                 TRISG3_bit          _BIT_ACCESS(TRISG,3)
// TRISG<TRISG4>
extern volatile __bit                   TRISG4              __at(0x7CC4);	// @ (0xF98 * 8 + 4)
#define                                 TRISG4_bit          _BIT_ACCESS(TRISG,4)
// TXSTA<TRMT>
extern volatile __bit                   TRMT                __at(0x7D61);	// @ (0xFAC * 8 + 1)
#define                                 TRMT_bit            _BIT_ACCESS(TXSTA,1)
// TXSTA<TRMT1>
extern volatile __bit                   TRMT1               __at(0x7D61);	// @ (0xFAC * 8 + 1)
#define                                 TRMT1_bit           _BIT_ACCESS(TXSTA,1)
// PORTC<TX>
extern volatile __bit                   TX                  __at(0x7C16);	// @ (0xF82 * 8 + 6)
#define                                 TX_bit              _BIT_ACCESS(PORTC,6)
// TXBIE<TX0IE>
extern volatile __bit                   TX0IE               __at(0x6FE2);	// @ (0xDFC * 8 + 2)
#define                                 TX0IE_bit           _BIT_ACCESS(TXBIE,2)
// TXB0CON<TX0IF>
extern volatile __bit                   TX0IF               __at(0x7A07);	// @ (0xF40 * 8 + 7)
#define                                 TX0IF_bit           _BIT_ACCESS(TXB0CON,7)
// TXBIE<TX1IE>
extern volatile __bit _DEPRECATED       TX1IE               __at(0x6FE3);	// @ (0xDFC * 8 + 3)
#define                                 TX1IE_bit           _BIT_ACCESS(TXBIE,3)
// TXB1CON<TX1IF>
extern volatile __bit _DEPRECATED       TX1IF               __at(0x7987);	// @ (0xF30 * 8 + 7)
#define                                 TX1IF_bit           _BIT_ACCESS(TXB1CON,7)
// IPR1<TX1IP>
extern volatile __bit                   TX1IP               __at(0x7CFC);	// @ (0xF9F * 8 + 4)
#define                                 TX1IP_bit           _BIT_ACCESS(IPR1,4)
// CIOCON<TX2EN>
extern volatile __bit                   TX2EN               __at(0x7B9E);	// @ (0xF73 * 8 + 6)
#define                                 TX2EN_bit           _BIT_ACCESS(CIOCON,6)
// TXBIE<TX2IE>
extern volatile __bit                   TX2IE               __at(0x6FE4);	// @ (0xDFC * 8 + 4)
#define                                 TX2IE_bit           _BIT_ACCESS(TXBIE,4)
// TXB2CON<TX2IF>
extern volatile __bit                   TX2IF               __at(0x7907);	// @ (0xF20 * 8 + 7)
#define                                 TX2IF_bit           _BIT_ACCESS(TXB2CON,7)
// CIOCON<TX2SRC>
extern volatile __bit                   TX2SRC              __at(0x7B9F);	// @ (0xF73 * 8 + 7)
#define                                 TX2SRC_bit          _BIT_ACCESS(CIOCON,7)
// TXSTA<TX8_9>
extern volatile __bit                   TX8_9               __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 TX8_9_bit           _BIT_ACCESS(TXSTA,6)
// TXSTA<TX9>
extern volatile __bit                   TX9                 __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 TX9_bit             _BIT_ACCESS(TXSTA,6)
// TXSTA<TX91>
extern volatile __bit                   TX91                __at(0x7D66);	// @ (0xFAC * 8 + 6)
#define                                 TX91_bit            _BIT_ACCESS(TXSTA,6)
// TXSTA<TX9D>
extern volatile __bit                   TX9D                __at(0x7D60);	// @ (0xFAC * 8 + 0)
#define                                 TX9D_bit            _BIT_ACCESS(TXSTA,0)
// TXSTA<TX9D1>
extern volatile __bit                   TX9D1               __at(0x7D60);	// @ (0xFAC * 8 + 0)
#define                                 TX9D1_bit           _BIT_ACCESS(TXSTA,0)
// TXB0CON<TXB0ABT>
extern volatile __bit                   TXB0ABT             __at(0x7A06);	// @ (0xF40 * 8 + 6)
#define                                 TXB0ABT_bit         _BIT_ACCESS(TXB0CON,6)
// TXB0D0<TXB0D00>
extern volatile __bit                   TXB0D00             __at(0x7A30);	// @ (0xF46 * 8 + 0)
#define                                 TXB0D00_bit         _BIT_ACCESS(TXB0D0,0)
// TXB0D0<TXB0D01>
extern volatile __bit                   TXB0D01             __at(0x7A31);	// @ (0xF46 * 8 + 1)
#define                                 TXB0D01_bit         _BIT_ACCESS(TXB0D0,1)
// TXB0D0<TXB0D02>
extern volatile __bit                   TXB0D02             __at(0x7A32);	// @ (0xF46 * 8 + 2)
#define                                 TXB0D02_bit         _BIT_ACCESS(TXB0D0,2)
// TXB0D0<TXB0D03>
extern volatile __bit                   TXB0D03             __at(0x7A33);	// @ (0xF46 * 8 + 3)
#define                                 TXB0D03_bit         _BIT_ACCESS(TXB0D0,3)
// TXB0D0<TXB0D04>
extern volatile __bit                   TXB0D04             __at(0x7A34);	// @ (0xF46 * 8 + 4)
#define                                 TXB0D04_bit         _BIT_ACCESS(TXB0D0,4)
// TXB0D0<TXB0D05>
extern volatile __bit                   TXB0D05             __at(0x7A35);	// @ (0xF46 * 8 + 5)
#define                                 TXB0D05_bit         _BIT_ACCESS(TXB0D0,5)
// TXB0D0<TXB0D06>
extern volatile __bit                   TXB0D06             __at(0x7A36);	// @ (0xF46 * 8 + 6)
#define                                 TXB0D06_bit         _BIT_ACCESS(TXB0D0,6)
// TXB0D0<TXB0D07>
extern volatile __bit                   TXB0D07             __at(0x7A37);	// @ (0xF46 * 8 + 7)
#define                                 TXB0D07_bit         _BIT_ACCESS(TXB0D0,7)
// TXB0D1<TXB0D10>
extern volatile __bit                   TXB0D10             __at(0x7A38);	// @ (0xF47 * 8 + 0)
#define                                 TXB0D10_bit         _BIT_ACCESS(TXB0D1,0)
// TXB0D1<TXB0D11>
extern volatile __bit                   TXB0D11             __at(0x7A39);	// @ (0xF47 * 8 + 1)
#define                                 TXB0D11_bit         _BIT_ACCESS(TXB0D1,1)
// TXB0D1<TXB0D12>
extern volatile __bit                   TXB0D12             __at(0x7A3A);	// @ (0xF47 * 8 + 2)
#define                                 TXB0D12_bit         _BIT_ACCESS(TXB0D1,2)
// TXB0D1<TXB0D13>
extern volatile __bit                   TXB0D13             __at(0x7A3B);	// @ (0xF47 * 8 + 3)
#define                                 TXB0D13_bit         _BIT_ACCESS(TXB0D1,3)
// TXB0D1<TXB0D14>
extern volatile __bit                   TXB0D14             __at(0x7A3C);	// @ (0xF47 * 8 + 4)
#define                                 TXB0D14_bit         _BIT_ACCESS(TXB0D1,4)
// TXB0D1<TXB0D15>
extern volatile __bit                   TXB0D15             __at(0x7A3D);	// @ (0xF47 * 8 + 5)
#define                                 TXB0D15_bit         _BIT_ACCESS(TXB0D1,5)
// TXB0D1<TXB0D16>
extern volatile __bit                   TXB0D16             __at(0x7A3E);	// @ (0xF47 * 8 + 6)
#define                                 TXB0D16_bit         _BIT_ACCESS(TXB0D1,6)
// TXB0D1<TXB0D17>
extern volatile __bit                   TXB0D17             __at(0x7A3F);	// @ (0xF47 * 8 + 7)
#define                                 TXB0D17_bit         _BIT_ACCESS(TXB0D1,7)
// TXB0D2<TXB0D20>
extern volatile __bit                   TXB0D20             __at(0x7A40);	// @ (0xF48 * 8 + 0)
#define                                 TXB0D20_bit         _BIT_ACCESS(TXB0D2,0)
// TXB0D2<TXB0D21>
extern volatile __bit                   TXB0D21             __at(0x7A41);	// @ (0xF48 * 8 + 1)
#define                                 TXB0D21_bit         _BIT_ACCESS(TXB0D2,1)
// TXB0D2<TXB0D22>
extern volatile __bit                   TXB0D22             __at(0x7A42);	// @ (0xF48 * 8 + 2)
#define                                 TXB0D22_bit         _BIT_ACCESS(TXB0D2,2)
// TXB0D2<TXB0D23>
extern volatile __bit                   TXB0D23             __at(0x7A43);	// @ (0xF48 * 8 + 3)
#define                                 TXB0D23_bit         _BIT_ACCESS(TXB0D2,3)
// TXB0D2<TXB0D24>
extern volatile __bit                   TXB0D24             __at(0x7A44);	// @ (0xF48 * 8 + 4)
#define                                 TXB0D24_bit         _BIT_ACCESS(TXB0D2,4)
// TXB0D2<TXB0D25>
extern volatile __bit                   TXB0D25             __at(0x7A45);	// @ (0xF48 * 8 + 5)
#define                                 TXB0D25_bit         _BIT_ACCESS(TXB0D2,5)
// TXB0D2<TXB0D26>
extern volatile __bit                   TXB0D26             __at(0x7A46);	// @ (0xF48 * 8 + 6)
#define                                 TXB0D26_bit         _BIT_ACCESS(TXB0D2,6)
// TXB0D2<TXB0D27>
extern volatile __bit                   TXB0D27             __at(0x7A47);	// @ (0xF48 * 8 + 7)
#define                                 TXB0D27_bit         _BIT_ACCESS(TXB0D2,7)
// TXB0D3<TXB0D30>
extern volatile __bit                   TXB0D30             __at(0x7A48);	// @ (0xF49 * 8 + 0)
#define                                 TXB0D30_bit         _BIT_ACCESS(TXB0D3,0)
// TXB0D3<TXB0D31>
extern volatile __bit                   TXB0D31             __at(0x7A49);	// @ (0xF49 * 8 + 1)
#define                                 TXB0D31_bit         _BIT_ACCESS(TXB0D3,1)
// TXB0D3<TXB0D32>
extern volatile __bit                   TXB0D32             __at(0x7A4A);	// @ (0xF49 * 8 + 2)
#define                                 TXB0D32_bit         _BIT_ACCESS(TXB0D3,2)
// TXB0D3<TXB0D33>
extern volatile __bit                   TXB0D33             __at(0x7A4B);	// @ (0xF49 * 8 + 3)
#define                                 TXB0D33_bit         _BIT_ACCESS(TXB0D3,3)
// TXB0D3<TXB0D34>
extern volatile __bit                   TXB0D34             __at(0x7A4C);	// @ (0xF49 * 8 + 4)
#define                                 TXB0D34_bit         _BIT_ACCESS(TXB0D3,4)
// TXB0D3<TXB0D35>
extern volatile __bit                   TXB0D35             __at(0x7A4D);	// @ (0xF49 * 8 + 5)
#define                                 TXB0D35_bit         _BIT_ACCESS(TXB0D3,5)
// TXB0D3<TXB0D36>
extern volatile __bit                   TXB0D36             __at(0x7A4E);	// @ (0xF49 * 8 + 6)
#define                                 TXB0D36_bit         _BIT_ACCESS(TXB0D3,6)
// TXB0D3<TXB0D37>
extern volatile __bit                   TXB0D37             __at(0x7A4F);	// @ (0xF49 * 8 + 7)
#define                                 TXB0D37_bit         _BIT_ACCESS(TXB0D3,7)
// TXB0D4<TXB0D40>
extern volatile __bit                   TXB0D40             __at(0x7A50);	// @ (0xF4A * 8 + 0)
#define                                 TXB0D40_bit         _BIT_ACCESS(TXB0D4,0)
// TXB0D4<TXB0D41>
extern volatile __bit                   TXB0D41             __at(0x7A51);	// @ (0xF4A * 8 + 1)
#define                                 TXB0D41_bit         _BIT_ACCESS(TXB0D4,1)
// TXB0D4<TXB0D42>
extern volatile __bit                   TXB0D42             __at(0x7A52);	// @ (0xF4A * 8 + 2)
#define                                 TXB0D42_bit         _BIT_ACCESS(TXB0D4,2)
// TXB0D4<TXB0D43>
extern volatile __bit                   TXB0D43             __at(0x7A53);	// @ (0xF4A * 8 + 3)
#define                                 TXB0D43_bit         _BIT_ACCESS(TXB0D4,3)
// TXB0D4<TXB0D44>
extern volatile __bit                   TXB0D44             __at(0x7A54);	// @ (0xF4A * 8 + 4)
#define                                 TXB0D44_bit         _BIT_ACCESS(TXB0D4,4)
// TXB0D4<TXB0D45>
extern volatile __bit                   TXB0D45             __at(0x7A55);	// @ (0xF4A * 8 + 5)
#define                                 TXB0D45_bit         _BIT_ACCESS(TXB0D4,5)
// TXB0D4<TXB0D46>
extern volatile __bit                   TXB0D46             __at(0x7A56);	// @ (0xF4A * 8 + 6)
#define                                 TXB0D46_bit         _BIT_ACCESS(TXB0D4,6)
// TXB0D4<TXB0D47>
extern volatile __bit                   TXB0D47             __at(0x7A57);	// @ (0xF4A * 8 + 7)
#define                                 TXB0D47_bit         _BIT_ACCESS(TXB0D4,7)
// TXB0D5<TXB0D50>
extern volatile __bit                   TXB0D50             __at(0x7A58);	// @ (0xF4B * 8 + 0)
#define                                 TXB0D50_bit         _BIT_ACCESS(TXB0D5,0)
// TXB0D5<TXB0D51>
extern volatile __bit                   TXB0D51             __at(0x7A59);	// @ (0xF4B * 8 + 1)
#define                                 TXB0D51_bit         _BIT_ACCESS(TXB0D5,1)
// TXB0D5<TXB0D52>
extern volatile __bit                   TXB0D52             __at(0x7A5A);	// @ (0xF4B * 8 + 2)
#define                                 TXB0D52_bit         _BIT_ACCESS(TXB0D5,2)
// TXB0D5<TXB0D53>
extern volatile __bit                   TXB0D53             __at(0x7A5B);	// @ (0xF4B * 8 + 3)
#define                                 TXB0D53_bit         _BIT_ACCESS(TXB0D5,3)
// TXB0D5<TXB0D54>
extern volatile __bit                   TXB0D54             __at(0x7A5C);	// @ (0xF4B * 8 + 4)
#define                                 TXB0D54_bit         _BIT_ACCESS(TXB0D5,4)
// TXB0D5<TXB0D55>
extern volatile __bit                   TXB0D55             __at(0x7A5D);	// @ (0xF4B * 8 + 5)
#define                                 TXB0D55_bit         _BIT_ACCESS(TXB0D5,5)
// TXB0D5<TXB0D56>
extern volatile __bit                   TXB0D56             __at(0x7A5E);	// @ (0xF4B * 8 + 6)
#define                                 TXB0D56_bit         _BIT_ACCESS(TXB0D5,6)
// TXB0D5<TXB0D57>
extern volatile __bit                   TXB0D57             __at(0x7A5F);	// @ (0xF4B * 8 + 7)
#define                                 TXB0D57_bit         _BIT_ACCESS(TXB0D5,7)
// TXB0D6<TXB0D60>
extern volatile __bit                   TXB0D60             __at(0x7A60);	// @ (0xF4C * 8 + 0)
#define                                 TXB0D60_bit         _BIT_ACCESS(TXB0D6,0)
// TXB0D6<TXB0D61>
extern volatile __bit                   TXB0D61             __at(0x7A61);	// @ (0xF4C * 8 + 1)
#define                                 TXB0D61_bit         _BIT_ACCESS(TXB0D6,1)
// TXB0D6<TXB0D62>
extern volatile __bit                   TXB0D62             __at(0x7A62);	// @ (0xF4C * 8 + 2)
#define                                 TXB0D62_bit         _BIT_ACCESS(TXB0D6,2)
// TXB0D6<TXB0D63>
extern volatile __bit                   TXB0D63             __at(0x7A63);	// @ (0xF4C * 8 + 3)
#define                                 TXB0D63_bit         _BIT_ACCESS(TXB0D6,3)
// TXB0D6<TXB0D64>
extern volatile __bit                   TXB0D64             __at(0x7A64);	// @ (0xF4C * 8 + 4)
#define                                 TXB0D64_bit         _BIT_ACCESS(TXB0D6,4)
// TXB0D6<TXB0D65>
extern volatile __bit                   TXB0D65             __at(0x7A65);	// @ (0xF4C * 8 + 5)
#define                                 TXB0D65_bit         _BIT_ACCESS(TXB0D6,5)
// TXB0D6<TXB0D66>
extern volatile __bit                   TXB0D66             __at(0x7A66);	// @ (0xF4C * 8 + 6)
#define                                 TXB0D66_bit         _BIT_ACCESS(TXB0D6,6)
// TXB0D6<TXB0D67>
extern volatile __bit                   TXB0D67             __at(0x7A67);	// @ (0xF4C * 8 + 7)
#define                                 TXB0D67_bit         _BIT_ACCESS(TXB0D6,7)
// TXB0D7<TXB0D70>
extern volatile __bit                   TXB0D70             __at(0x7A68);	// @ (0xF4D * 8 + 0)
#define                                 TXB0D70_bit         _BIT_ACCESS(TXB0D7,0)
// TXB0D7<TXB0D71>
extern volatile __bit                   TXB0D71             __at(0x7A69);	// @ (0xF4D * 8 + 1)
#define                                 TXB0D71_bit         _BIT_ACCESS(TXB0D7,1)
// TXB0D7<TXB0D72>
extern volatile __bit                   TXB0D72             __at(0x7A6A);	// @ (0xF4D * 8 + 2)
#define                                 TXB0D72_bit         _BIT_ACCESS(TXB0D7,2)
// TXB0D7<TXB0D73>
extern volatile __bit                   TXB0D73             __at(0x7A6B);	// @ (0xF4D * 8 + 3)
#define                                 TXB0D73_bit         _BIT_ACCESS(TXB0D7,3)
// TXB0D7<TXB0D74>
extern volatile __bit                   TXB0D74             __at(0x7A6C);	// @ (0xF4D * 8 + 4)
#define                                 TXB0D74_bit         _BIT_ACCESS(TXB0D7,4)
// TXB0D7<TXB0D75>
extern volatile __bit                   TXB0D75             __at(0x7A6D);	// @ (0xF4D * 8 + 5)
#define                                 TXB0D75_bit         _BIT_ACCESS(TXB0D7,5)
// TXB0D7<TXB0D76>
extern volatile __bit                   TXB0D76             __at(0x7A6E);	// @ (0xF4D * 8 + 6)
#define                                 TXB0D76_bit         _BIT_ACCESS(TXB0D7,6)
// TXB0D7<TXB0D77>
extern volatile __bit                   TXB0D77             __at(0x7A6F);	// @ (0xF4D * 8 + 7)
#define                                 TXB0D77_bit         _BIT_ACCESS(TXB0D7,7)
// TXB0DLC<TXB0DLC0>
extern volatile __bit                   TXB0DLC0            __at(0x7A28);	// @ (0xF45 * 8 + 0)
#define                                 TXB0DLC0_bit        _BIT_ACCESS(TXB0DLC,0)
// TXB0DLC<TXB0DLC1>
extern volatile __bit                   TXB0DLC1            __at(0x7A29);	// @ (0xF45 * 8 + 1)
#define                                 TXB0DLC1_bit        _BIT_ACCESS(TXB0DLC,1)
// TXB0DLC<TXB0DLC2>
extern volatile __bit                   TXB0DLC2            __at(0x7A2A);	// @ (0xF45 * 8 + 2)
#define                                 TXB0DLC2_bit        _BIT_ACCESS(TXB0DLC,2)
// TXB0DLC<TXB0DLC3>
extern volatile __bit                   TXB0DLC3            __at(0x7A2B);	// @ (0xF45 * 8 + 3)
#define                                 TXB0DLC3_bit        _BIT_ACCESS(TXB0DLC,3)
// TXB0EIDL<TXB0EID0>
extern volatile __bit                   TXB0EID0            __at(0x7A20);	// @ (0xF44 * 8 + 0)
#define                                 TXB0EID0_bit        _BIT_ACCESS(TXB0EIDL,0)
// TXB0EIDL<TXB0EID1>
extern volatile __bit                   TXB0EID1            __at(0x7A21);	// @ (0xF44 * 8 + 1)
#define                                 TXB0EID1_bit        _BIT_ACCESS(TXB0EIDL,1)
// TXB0EIDH<TXB0EID10>
extern volatile __bit                   TXB0EID10           __at(0x7A1A);	// @ (0xF43 * 8 + 2)
#define                                 TXB0EID10_bit       _BIT_ACCESS(TXB0EIDH,2)
// TXB0EIDH<TXB0EID11>
extern volatile __bit                   TXB0EID11           __at(0x7A1B);	// @ (0xF43 * 8 + 3)
#define                                 TXB0EID11_bit       _BIT_ACCESS(TXB0EIDH,3)
// TXB0EIDH<TXB0EID12>
extern volatile __bit                   TXB0EID12           __at(0x7A1C);	// @ (0xF43 * 8 + 4)
#define                                 TXB0EID12_bit       _BIT_ACCESS(TXB0EIDH,4)
// TXB0EIDH<TXB0EID13>
extern volatile __bit                   TXB0EID13           __at(0x7A1D);	// @ (0xF43 * 8 + 5)
#define                                 TXB0EID13_bit       _BIT_ACCESS(TXB0EIDH,5)
// TXB0EIDH<TXB0EID14>
extern volatile __bit                   TXB0EID14           __at(0x7A1E);	// @ (0xF43 * 8 + 6)
#define                                 TXB0EID14_bit       _BIT_ACCESS(TXB0EIDH,6)
// TXB0EIDH<TXB0EID15>
extern volatile __bit                   TXB0EID15           __at(0x7A1F);	// @ (0xF43 * 8 + 7)
#define                                 TXB0EID15_bit       _BIT_ACCESS(TXB0EIDH,7)
// TXB0SIDL<TXB0EID16>
extern volatile __bit                   TXB0EID16           __at(0x7A10);	// @ (0xF42 * 8 + 0)
#define                                 TXB0EID16_bit       _BIT_ACCESS(TXB0SIDL,0)
// TXB0SIDL<TXB0EID17>
extern volatile __bit                   TXB0EID17           __at(0x7A11);	// @ (0xF42 * 8 + 1)
#define                                 TXB0EID17_bit       _BIT_ACCESS(TXB0SIDL,1)
// TXB0EIDL<TXB0EID2>
extern volatile __bit                   TXB0EID2            __at(0x7A22);	// @ (0xF44 * 8 + 2)
#define                                 TXB0EID2_bit        _BIT_ACCESS(TXB0EIDL,2)
// TXB0EIDL<TXB0EID3>
extern volatile __bit                   TXB0EID3            __at(0x7A23);	// @ (0xF44 * 8 + 3)
#define                                 TXB0EID3_bit        _BIT_ACCESS(TXB0EIDL,3)
// TXB0EIDL<TXB0EID4>
extern volatile __bit                   TXB0EID4            __at(0x7A24);	// @ (0xF44 * 8 + 4)
#define                                 TXB0EID4_bit        _BIT_ACCESS(TXB0EIDL,4)
// TXB0EIDL<TXB0EID5>
extern volatile __bit                   TXB0EID5            __at(0x7A25);	// @ (0xF44 * 8 + 5)
#define                                 TXB0EID5_bit        _BIT_ACCESS(TXB0EIDL,5)
// TXB0EIDL<TXB0EID6>
extern volatile __bit                   TXB0EID6            __at(0x7A26);	// @ (0xF44 * 8 + 6)
#define                                 TXB0EID6_bit        _BIT_ACCESS(TXB0EIDL,6)
// TXB0EIDL<TXB0EID7>
extern volatile __bit                   TXB0EID7            __at(0x7A27);	// @ (0xF44 * 8 + 7)
#define                                 TXB0EID7_bit        _BIT_ACCESS(TXB0EIDL,7)
// TXB0EIDH<TXB0EID8>
extern volatile __bit                   TXB0EID8            __at(0x7A18);	// @ (0xF43 * 8 + 0)
#define                                 TXB0EID8_bit        _BIT_ACCESS(TXB0EIDH,0)
// TXB0EIDH<TXB0EID9>
extern volatile __bit                   TXB0EID9            __at(0x7A19);	// @ (0xF43 * 8 + 1)
#define                                 TXB0EID9_bit        _BIT_ACCESS(TXB0EIDH,1)
// TXB0CON<TXB0ERR>
extern volatile __bit                   TXB0ERR             __at(0x7A04);	// @ (0xF40 * 8 + 4)
#define                                 TXB0ERR_bit         _BIT_ACCESS(TXB0CON,4)
// TXB0SIDL<TXB0EXIDE>
extern volatile __bit                   TXB0EXIDE           __at(0x7A13);	// @ (0xF42 * 8 + 3)
#define                                 TXB0EXIDE_bit       _BIT_ACCESS(TXB0SIDL,3)
// PIE3<TXB0IE>
extern volatile __bit _DEPRECATED       TXB0IE              __at(0x7D1A);	// @ (0xFA3 * 8 + 2)
#define                                 TXB0IE_bit          _BIT_ACCESS(PIE3,2)
// PIR3<TXB0IF>
extern volatile __bit                   TXB0IF              __at(0x7D22);	// @ (0xFA4 * 8 + 2)
#define                                 TXB0IF_bit          _BIT_ACCESS(PIR3,2)
// IPR3<TXB0IP>
extern volatile __bit                   TXB0IP              __at(0x7D2A);	// @ (0xFA5 * 8 + 2)
#define                                 TXB0IP_bit          _BIT_ACCESS(IPR3,2)
// TXB0CON<TXB0LARB>
extern volatile __bit                   TXB0LARB            __at(0x7A05);	// @ (0xF40 * 8 + 5)
#define                                 TXB0LARB_bit        _BIT_ACCESS(TXB0CON,5)
// TXB0CON<TXB0PRI0>
extern volatile __bit                   TXB0PRI0            __at(0x7A00);	// @ (0xF40 * 8 + 0)
#define                                 TXB0PRI0_bit        _BIT_ACCESS(TXB0CON,0)
// TXB0CON<TXB0PRI1>
extern volatile __bit                   TXB0PRI1            __at(0x7A01);	// @ (0xF40 * 8 + 1)
#define                                 TXB0PRI1_bit        _BIT_ACCESS(TXB0CON,1)
// TXB0CON<TXB0REQ>
extern volatile __bit                   TXB0REQ             __at(0x7A03);	// @ (0xF40 * 8 + 3)
#define                                 TXB0REQ_bit         _BIT_ACCESS(TXB0CON,3)
// TXB0DLC<TXB0RTR>
extern volatile __bit                   TXB0RTR             __at(0x7A2E);	// @ (0xF45 * 8 + 6)
#define                                 TXB0RTR_bit         _BIT_ACCESS(TXB0DLC,6)
// TXB0SIDL<TXB0SID0>
extern volatile __bit                   TXB0SID0            __at(0x7A15);	// @ (0xF42 * 8 + 5)
#define                                 TXB0SID0_bit        _BIT_ACCESS(TXB0SIDL,5)
// TXB0SIDL<TXB0SID1>
extern volatile __bit                   TXB0SID1            __at(0x7A16);	// @ (0xF42 * 8 + 6)
#define                                 TXB0SID1_bit        _BIT_ACCESS(TXB0SIDL,6)
// TXB0SIDH<TXB0SID10>
extern volatile __bit                   TXB0SID10           __at(0x7A0F);	// @ (0xF41 * 8 + 7)
#define                                 TXB0SID10_bit       _BIT_ACCESS(TXB0SIDH,7)
// TXB0SIDL<TXB0SID2>
extern volatile __bit                   TXB0SID2            __at(0x7A17);	// @ (0xF42 * 8 + 7)
#define                                 TXB0SID2_bit        _BIT_ACCESS(TXB0SIDL,7)
// TXB0SIDH<TXB0SID3>
extern volatile __bit                   TXB0SID3            __at(0x7A08);	// @ (0xF41 * 8 + 0)
#define                                 TXB0SID3_bit        _BIT_ACCESS(TXB0SIDH,0)
// TXB0SIDH<TXB0SID4>
extern volatile __bit                   TXB0SID4            __at(0x7A09);	// @ (0xF41 * 8 + 1)
#define                                 TXB0SID4_bit        _BIT_ACCESS(TXB0SIDH,1)
// TXB0SIDH<TXB0SID5>
extern volatile __bit                   TXB0SID5            __at(0x7A0A);	// @ (0xF41 * 8 + 2)
#define                                 TXB0SID5_bit        _BIT_ACCESS(TXB0SIDH,2)
// TXB0SIDH<TXB0SID6>
extern volatile __bit                   TXB0SID6            __at(0x7A0B);	// @ (0xF41 * 8 + 3)
#define                                 TXB0SID6_bit        _BIT_ACCESS(TXB0SIDH,3)
// TXB0SIDH<TXB0SID7>
extern volatile __bit                   TXB0SID7            __at(0x7A0C);	// @ (0xF41 * 8 + 4)
#define                                 TXB0SID7_bit        _BIT_ACCESS(TXB0SIDH,4)
// TXB0SIDH<TXB0SID8>
extern volatile __bit                   TXB0SID8            __at(0x7A0D);	// @ (0xF41 * 8 + 5)
#define                                 TXB0SID8_bit        _BIT_ACCESS(TXB0SIDH,5)
// TXB0SIDH<TXB0SID9>
extern volatile __bit                   TXB0SID9            __at(0x7A0E);	// @ (0xF41 * 8 + 6)
#define                                 TXB0SID9_bit        _BIT_ACCESS(TXB0SIDH,6)
// TXB1CON<TXB1ABT>
extern volatile __bit                   TXB1ABT             __at(0x7986);	// @ (0xF30 * 8 + 6)
#define                                 TXB1ABT_bit         _BIT_ACCESS(TXB1CON,6)
// TXB1D0<TXB1D00>
extern volatile __bit                   TXB1D00             __at(0x79B0);	// @ (0xF36 * 8 + 0)
#define                                 TXB1D00_bit         _BIT_ACCESS(TXB1D0,0)
// TXB1D0<TXB1D01>
extern volatile __bit                   TXB1D01             __at(0x79B1);	// @ (0xF36 * 8 + 1)
#define                                 TXB1D01_bit         _BIT_ACCESS(TXB1D0,1)
// TXB1D0<TXB1D02>
extern volatile __bit                   TXB1D02             __at(0x79B2);	// @ (0xF36 * 8 + 2)
#define                                 TXB1D02_bit         _BIT_ACCESS(TXB1D0,2)
// TXB1D0<TXB1D03>
extern volatile __bit                   TXB1D03             __at(0x79B3);	// @ (0xF36 * 8 + 3)
#define                                 TXB1D03_bit         _BIT_ACCESS(TXB1D0,3)
// TXB1D0<TXB1D04>
extern volatile __bit                   TXB1D04             __at(0x79B4);	// @ (0xF36 * 8 + 4)
#define                                 TXB1D04_bit         _BIT_ACCESS(TXB1D0,4)
// TXB1D0<TXB1D05>
extern volatile __bit                   TXB1D05             __at(0x79B5);	// @ (0xF36 * 8 + 5)
#define                                 TXB1D05_bit         _BIT_ACCESS(TXB1D0,5)
// TXB1D0<TXB1D06>
extern volatile __bit                   TXB1D06             __at(0x79B6);	// @ (0xF36 * 8 + 6)
#define                                 TXB1D06_bit         _BIT_ACCESS(TXB1D0,6)
// TXB1D0<TXB1D07>
extern volatile __bit                   TXB1D07             __at(0x79B7);	// @ (0xF36 * 8 + 7)
#define                                 TXB1D07_bit         _BIT_ACCESS(TXB1D0,7)
// TXB1D1<TXB1D10>
extern volatile __bit                   TXB1D10             __at(0x79B8);	// @ (0xF37 * 8 + 0)
#define                                 TXB1D10_bit         _BIT_ACCESS(TXB1D1,0)
// TXB1D1<TXB1D11>
extern volatile __bit                   TXB1D11             __at(0x79B9);	// @ (0xF37 * 8 + 1)
#define                                 TXB1D11_bit         _BIT_ACCESS(TXB1D1,1)
// TXB1D1<TXB1D12>
extern volatile __bit                   TXB1D12             __at(0x79BA);	// @ (0xF37 * 8 + 2)
#define                                 TXB1D12_bit         _BIT_ACCESS(TXB1D1,2)
// TXB1D1<TXB1D13>
extern volatile __bit                   TXB1D13             __at(0x79BB);	// @ (0xF37 * 8 + 3)
#define                                 TXB1D13_bit         _BIT_ACCESS(TXB1D1,3)
// TXB1D1<TXB1D14>
extern volatile __bit                   TXB1D14             __at(0x79BC);	// @ (0xF37 * 8 + 4)
#define                                 TXB1D14_bit         _BIT_ACCESS(TXB1D1,4)
// TXB1D1<TXB1D15>
extern volatile __bit                   TXB1D15             __at(0x79BD);	// @ (0xF37 * 8 + 5)
#define                                 TXB1D15_bit         _BIT_ACCESS(TXB1D1,5)
// TXB1D1<TXB1D16>
extern volatile __bit                   TXB1D16             __at(0x79BE);	// @ (0xF37 * 8 + 6)
#define                                 TXB1D16_bit         _BIT_ACCESS(TXB1D1,6)
// TXB1D1<TXB1D17>
extern volatile __bit                   TXB1D17             __at(0x79BF);	// @ (0xF37 * 8 + 7)
#define                                 TXB1D17_bit         _BIT_ACCESS(TXB1D1,7)
// TXB1D2<TXB1D20>
extern volatile __bit                   TXB1D20             __at(0x79C0);	// @ (0xF38 * 8 + 0)
#define                                 TXB1D20_bit         _BIT_ACCESS(TXB1D2,0)
// TXB1D2<TXB1D21>
extern volatile __bit                   TXB1D21             __at(0x79C1);	// @ (0xF38 * 8 + 1)
#define                                 TXB1D21_bit         _BIT_ACCESS(TXB1D2,1)
// TXB1D2<TXB1D22>
extern volatile __bit                   TXB1D22             __at(0x79C2);	// @ (0xF38 * 8 + 2)
#define                                 TXB1D22_bit         _BIT_ACCESS(TXB1D2,2)
// TXB1D2<TXB1D23>
extern volatile __bit                   TXB1D23             __at(0x79C3);	// @ (0xF38 * 8 + 3)
#define                                 TXB1D23_bit         _BIT_ACCESS(TXB1D2,3)
// TXB1D2<TXB1D24>
extern volatile __bit                   TXB1D24             __at(0x79C4);	// @ (0xF38 * 8 + 4)
#define                                 TXB1D24_bit         _BIT_ACCESS(TXB1D2,4)
// TXB1D2<TXB1D25>
extern volatile __bit                   TXB1D25             __at(0x79C5);	// @ (0xF38 * 8 + 5)
#define                                 TXB1D25_bit         _BIT_ACCESS(TXB1D2,5)
// TXB1D2<TXB1D26>
extern volatile __bit                   TXB1D26             __at(0x79C6);	// @ (0xF38 * 8 + 6)
#define                                 TXB1D26_bit         _BIT_ACCESS(TXB1D2,6)
// TXB1D2<TXB1D27>
extern volatile __bit                   TXB1D27             __at(0x79C7);	// @ (0xF38 * 8 + 7)
#define                                 TXB1D27_bit         _BIT_ACCESS(TXB1D2,7)
// TXB1D3<TXB1D30>
extern volatile __bit                   TXB1D30             __at(0x79C8);	// @ (0xF39 * 8 + 0)
#define                                 TXB1D30_bit         _BIT_ACCESS(TXB1D3,0)
// TXB1D3<TXB1D31>
extern volatile __bit                   TXB1D31             __at(0x79C9);	// @ (0xF39 * 8 + 1)
#define                                 TXB1D31_bit         _BIT_ACCESS(TXB1D3,1)
// TXB1D3<TXB1D32>
extern volatile __bit                   TXB1D32             __at(0x79CA);	// @ (0xF39 * 8 + 2)
#define                                 TXB1D32_bit         _BIT_ACCESS(TXB1D3,2)
// TXB1D3<TXB1D33>
extern volatile __bit                   TXB1D33             __at(0x79CB);	// @ (0xF39 * 8 + 3)
#define                                 TXB1D33_bit         _BIT_ACCESS(TXB1D3,3)
// TXB1D3<TXB1D34>
extern volatile __bit                   TXB1D34             __at(0x79CC);	// @ (0xF39 * 8 + 4)
#define                                 TXB1D34_bit         _BIT_ACCESS(TXB1D3,4)
// TXB1D3<TXB1D35>
extern volatile __bit                   TXB1D35             __at(0x79CD);	// @ (0xF39 * 8 + 5)
#define                                 TXB1D35_bit         _BIT_ACCESS(TXB1D3,5)
// TXB1D3<TXB1D36>
extern volatile __bit                   TXB1D36             __at(0x79CE);	// @ (0xF39 * 8 + 6)
#define                                 TXB1D36_bit         _BIT_ACCESS(TXB1D3,6)
// TXB1D3<TXB1D37>
extern volatile __bit                   TXB1D37             __at(0x79CF);	// @ (0xF39 * 8 + 7)
#define                                 TXB1D37_bit         _BIT_ACCESS(TXB1D3,7)
// TXB1D4<TXB1D40>
extern volatile __bit                   TXB1D40             __at(0x79D0);	// @ (0xF3A * 8 + 0)
#define                                 TXB1D40_bit         _BIT_ACCESS(TXB1D4,0)
// TXB1D4<TXB1D41>
extern volatile __bit                   TXB1D41             __at(0x79D1);	// @ (0xF3A * 8 + 1)
#define                                 TXB1D41_bit         _BIT_ACCESS(TXB1D4,1)
// TXB1D4<TXB1D42>
extern volatile __bit                   TXB1D42             __at(0x79D2);	// @ (0xF3A * 8 + 2)
#define                                 TXB1D42_bit         _BIT_ACCESS(TXB1D4,2)
// TXB1D4<TXB1D43>
extern volatile __bit                   TXB1D43             __at(0x79D3);	// @ (0xF3A * 8 + 3)
#define                                 TXB1D43_bit         _BIT_ACCESS(TXB1D4,3)
// TXB1D4<TXB1D44>
extern volatile __bit                   TXB1D44             __at(0x79D4);	// @ (0xF3A * 8 + 4)
#define                                 TXB1D44_bit         _BIT_ACCESS(TXB1D4,4)
// TXB1D4<TXB1D45>
extern volatile __bit                   TXB1D45             __at(0x79D5);	// @ (0xF3A * 8 + 5)
#define                                 TXB1D45_bit         _BIT_ACCESS(TXB1D4,5)
// TXB1D4<TXB1D46>
extern volatile __bit                   TXB1D46             __at(0x79D6);	// @ (0xF3A * 8 + 6)
#define                                 TXB1D46_bit         _BIT_ACCESS(TXB1D4,6)
// TXB1D4<TXB1D47>
extern volatile __bit                   TXB1D47             __at(0x79D7);	// @ (0xF3A * 8 + 7)
#define                                 TXB1D47_bit         _BIT_ACCESS(TXB1D4,7)
// TXB1D5<TXB1D50>
extern volatile __bit                   TXB1D50             __at(0x79D8);	// @ (0xF3B * 8 + 0)
#define                                 TXB1D50_bit         _BIT_ACCESS(TXB1D5,0)
// TXB1D5<TXB1D51>
extern volatile __bit                   TXB1D51             __at(0x79D9);	// @ (0xF3B * 8 + 1)
#define                                 TXB1D51_bit         _BIT_ACCESS(TXB1D5,1)
// TXB1D5<TXB1D52>
extern volatile __bit                   TXB1D52             __at(0x79DA);	// @ (0xF3B * 8 + 2)
#define                                 TXB1D52_bit         _BIT_ACCESS(TXB1D5,2)
// TXB1D5<TXB1D53>
extern volatile __bit                   TXB1D53             __at(0x79DB);	// @ (0xF3B * 8 + 3)
#define                                 TXB1D53_bit         _BIT_ACCESS(TXB1D5,3)
// TXB1D5<TXB1D54>
extern volatile __bit                   TXB1D54             __at(0x79DC);	// @ (0xF3B * 8 + 4)
#define                                 TXB1D54_bit         _BIT_ACCESS(TXB1D5,4)
// TXB1D5<TXB1D55>
extern volatile __bit                   TXB1D55             __at(0x79DD);	// @ (0xF3B * 8 + 5)
#define                                 TXB1D55_bit         _BIT_ACCESS(TXB1D5,5)
// TXB1D5<TXB1D56>
extern volatile __bit                   TXB1D56             __at(0x79DE);	// @ (0xF3B * 8 + 6)
#define                                 TXB1D56_bit         _BIT_ACCESS(TXB1D5,6)
// TXB1D5<TXB1D57>
extern volatile __bit                   TXB1D57             __at(0x79DF);	// @ (0xF3B * 8 + 7)
#define                                 TXB1D57_bit         _BIT_ACCESS(TXB1D5,7)
// TXB1D6<TXB1D60>
extern volatile __bit                   TXB1D60             __at(0x79E0);	// @ (0xF3C * 8 + 0)
#define                                 TXB1D60_bit         _BIT_ACCESS(TXB1D6,0)
// TXB1D6<TXB1D61>
extern volatile __bit                   TXB1D61             __at(0x79E1);	// @ (0xF3C * 8 + 1)
#define                                 TXB1D61_bit         _BIT_ACCESS(TXB1D6,1)
// TXB1D6<TXB1D62>
extern volatile __bit                   TXB1D62             __at(0x79E2);	// @ (0xF3C * 8 + 2)
#define                                 TXB1D62_bit         _BIT_ACCESS(TXB1D6,2)
// TXB1D6<TXB1D63>
extern volatile __bit                   TXB1D63             __at(0x79E3);	// @ (0xF3C * 8 + 3)
#define                                 TXB1D63_bit         _BIT_ACCESS(TXB1D6,3)
// TXB1D6<TXB1D64>
extern volatile __bit                   TXB1D64             __at(0x79E4);	// @ (0xF3C * 8 + 4)
#define                                 TXB1D64_bit         _BIT_ACCESS(TXB1D6,4)
// TXB1D6<TXB1D65>
extern volatile __bit                   TXB1D65             __at(0x79E5);	// @ (0xF3C * 8 + 5)
#define                                 TXB1D65_bit         _BIT_ACCESS(TXB1D6,5)
// TXB1D6<TXB1D66>
extern volatile __bit                   TXB1D66             __at(0x79E6);	// @ (0xF3C * 8 + 6)
#define                                 TXB1D66_bit         _BIT_ACCESS(TXB1D6,6)
// TXB1D6<TXB1D67>
extern volatile __bit                   TXB1D67             __at(0x79E7);	// @ (0xF3C * 8 + 7)
#define                                 TXB1D67_bit         _BIT_ACCESS(TXB1D6,7)
// TXB1D7<TXB1D70>
extern volatile __bit                   TXB1D70             __at(0x79E8);	// @ (0xF3D * 8 + 0)
#define                                 TXB1D70_bit         _BIT_ACCESS(TXB1D7,0)
// TXB1D7<TXB1D71>
extern volatile __bit                   TXB1D71             __at(0x79E9);	// @ (0xF3D * 8 + 1)
#define                                 TXB1D71_bit         _BIT_ACCESS(TXB1D7,1)
// TXB1D7<TXB1D72>
extern volatile __bit                   TXB1D72             __at(0x79EA);	// @ (0xF3D * 8 + 2)
#define                                 TXB1D72_bit         _BIT_ACCESS(TXB1D7,2)
// TXB1D7<TXB1D73>
extern volatile __bit                   TXB1D73             __at(0x79EB);	// @ (0xF3D * 8 + 3)
#define                                 TXB1D73_bit         _BIT_ACCESS(TXB1D7,3)
// TXB1D7<TXB1D74>
extern volatile __bit                   TXB1D74             __at(0x79EC);	// @ (0xF3D * 8 + 4)
#define                                 TXB1D74_bit         _BIT_ACCESS(TXB1D7,4)
// TXB1D7<TXB1D75>
extern volatile __bit                   TXB1D75             __at(0x79ED);	// @ (0xF3D * 8 + 5)
#define                                 TXB1D75_bit         _BIT_ACCESS(TXB1D7,5)
// TXB1D7<TXB1D76>
extern volatile __bit                   TXB1D76             __at(0x79EE);	// @ (0xF3D * 8 + 6)
#define                                 TXB1D76_bit         _BIT_ACCESS(TXB1D7,6)
// TXB1D7<TXB1D77>
extern volatile __bit                   TXB1D77             __at(0x79EF);	// @ (0xF3D * 8 + 7)
#define                                 TXB1D77_bit         _BIT_ACCESS(TXB1D7,7)
// TXB1DLC<TXB1DLC0>
extern volatile __bit                   TXB1DLC0            __at(0x79A8);	// @ (0xF35 * 8 + 0)
#define                                 TXB1DLC0_bit        _BIT_ACCESS(TXB1DLC,0)
// TXB1DLC<TXB1DLC1>
extern volatile __bit                   TXB1DLC1            __at(0x79A9);	// @ (0xF35 * 8 + 1)
#define                                 TXB1DLC1_bit        _BIT_ACCESS(TXB1DLC,1)
// TXB1DLC<TXB1DLC2>
extern volatile __bit                   TXB1DLC2            __at(0x79AA);	// @ (0xF35 * 8 + 2)
#define                                 TXB1DLC2_bit        _BIT_ACCESS(TXB1DLC,2)
// TXB1DLC<TXB1DLC3>
extern volatile __bit                   TXB1DLC3            __at(0x79AB);	// @ (0xF35 * 8 + 3)
#define                                 TXB1DLC3_bit        _BIT_ACCESS(TXB1DLC,3)
// TXB1EIDL<TXB1EID0>
extern volatile __bit                   TXB1EID0            __at(0x79A0);	// @ (0xF34 * 8 + 0)
#define                                 TXB1EID0_bit        _BIT_ACCESS(TXB1EIDL,0)
// TXB1EIDL<TXB1EID1>
extern volatile __bit                   TXB1EID1            __at(0x79A1);	// @ (0xF34 * 8 + 1)
#define                                 TXB1EID1_bit        _BIT_ACCESS(TXB1EIDL,1)
// TXB1EIDH<TXB1EID10>
extern volatile __bit                   TXB1EID10           __at(0x799A);	// @ (0xF33 * 8 + 2)
#define                                 TXB1EID10_bit       _BIT_ACCESS(TXB1EIDH,2)
// TXB1EIDH<TXB1EID11>
extern volatile __bit                   TXB1EID11           __at(0x799B);	// @ (0xF33 * 8 + 3)
#define                                 TXB1EID11_bit       _BIT_ACCESS(TXB1EIDH,3)
// TXB1EIDH<TXB1EID12>
extern volatile __bit                   TXB1EID12           __at(0x799C);	// @ (0xF33 * 8 + 4)
#define                                 TXB1EID12_bit       _BIT_ACCESS(TXB1EIDH,4)
// TXB1EIDH<TXB1EID13>
extern volatile __bit                   TXB1EID13           __at(0x799D);	// @ (0xF33 * 8 + 5)
#define                                 TXB1EID13_bit       _BIT_ACCESS(TXB1EIDH,5)
// TXB1EIDH<TXB1EID14>
extern volatile __bit                   TXB1EID14           __at(0x799E);	// @ (0xF33 * 8 + 6)
#define                                 TXB1EID14_bit       _BIT_ACCESS(TXB1EIDH,6)
// TXB1EIDH<TXB1EID15>
extern volatile __bit                   TXB1EID15           __at(0x799F);	// @ (0xF33 * 8 + 7)
#define                                 TXB1EID15_bit       _BIT_ACCESS(TXB1EIDH,7)
// TXB1SIDL<TXB1EID16>
extern volatile __bit                   TXB1EID16           __at(0x7990);	// @ (0xF32 * 8 + 0)
#define                                 TXB1EID16_bit       _BIT_ACCESS(TXB1SIDL,0)
// TXB1SIDL<TXB1EID17>
extern volatile __bit                   TXB1EID17           __at(0x7991);	// @ (0xF32 * 8 + 1)
#define                                 TXB1EID17_bit       _BIT_ACCESS(TXB1SIDL,1)
// TXB1EIDL<TXB1EID2>
extern volatile __bit                   TXB1EID2            __at(0x79A2);	// @ (0xF34 * 8 + 2)
#define                                 TXB1EID2_bit        _BIT_ACCESS(TXB1EIDL,2)
// TXB1EIDL<TXB1EID3>
extern volatile __bit                   TXB1EID3            __at(0x79A3);	// @ (0xF34 * 8 + 3)
#define                                 TXB1EID3_bit        _BIT_ACCESS(TXB1EIDL,3)
// TXB1EIDL<TXB1EID4>
extern volatile __bit                   TXB1EID4            __at(0x79A4);	// @ (0xF34 * 8 + 4)
#define                                 TXB1EID4_bit        _BIT_ACCESS(TXB1EIDL,4)
// TXB1EIDL<TXB1EID5>
extern volatile __bit                   TXB1EID5            __at(0x79A5);	// @ (0xF34 * 8 + 5)
#define                                 TXB1EID5_bit        _BIT_ACCESS(TXB1EIDL,5)
// TXB1EIDL<TXB1EID6>
extern volatile __bit                   TXB1EID6            __at(0x79A6);	// @ (0xF34 * 8 + 6)
#define                                 TXB1EID6_bit        _BIT_ACCESS(TXB1EIDL,6)
// TXB1EIDL<TXB1EID7>
extern volatile __bit                   TXB1EID7            __at(0x79A7);	// @ (0xF34 * 8 + 7)
#define                                 TXB1EID7_bit        _BIT_ACCESS(TXB1EIDL,7)
// TXB1EIDH<TXB1EID8>
extern volatile __bit                   TXB1EID8            __at(0x7998);	// @ (0xF33 * 8 + 0)
#define                                 TXB1EID8_bit        _BIT_ACCESS(TXB1EIDH,0)
// TXB1EIDH<TXB1EID9>
extern volatile __bit                   TXB1EID9            __at(0x7999);	// @ (0xF33 * 8 + 1)
#define                                 TXB1EID9_bit        _BIT_ACCESS(TXB1EIDH,1)
// TXB1CON<TXB1ERR>
extern volatile __bit                   TXB1ERR             __at(0x7984);	// @ (0xF30 * 8 + 4)
#define                                 TXB1ERR_bit         _BIT_ACCESS(TXB1CON,4)
// TXB1SIDL<TXB1EXIDE>
extern volatile __bit                   TXB1EXIDE           __at(0x7993);	// @ (0xF32 * 8 + 3)
#define                                 TXB1EXIDE_bit       _BIT_ACCESS(TXB1SIDL,3)
// PIE3<TXB1IE>
extern volatile __bit _DEPRECATED       TXB1IE              __at(0x7D1B);	// @ (0xFA3 * 8 + 3)
#define                                 TXB1IE_bit          _BIT_ACCESS(PIE3,3)
// PIR3<TXB1IF>
extern volatile __bit                   TXB1IF              __at(0x7D23);	// @ (0xFA4 * 8 + 3)
#define                                 TXB1IF_bit          _BIT_ACCESS(PIR3,3)
// IPR3<TXB1IP>
extern volatile __bit                   TXB1IP              __at(0x7D2B);	// @ (0xFA5 * 8 + 3)
#define                                 TXB1IP_bit          _BIT_ACCESS(IPR3,3)
// TXB1CON<TXB1LARB>
extern volatile __bit                   TXB1LARB            __at(0x7985);	// @ (0xF30 * 8 + 5)
#define                                 TXB1LARB_bit        _BIT_ACCESS(TXB1CON,5)
// TXB1CON<TXB1PRI0>
extern volatile __bit                   TXB1PRI0            __at(0x7980);	// @ (0xF30 * 8 + 0)
#define                                 TXB1PRI0_bit        _BIT_ACCESS(TXB1CON,0)
// TXB1CON<TXB1PRI1>
extern volatile __bit                   TXB1PRI1            __at(0x7981);	// @ (0xF30 * 8 + 1)
#define                                 TXB1PRI1_bit        _BIT_ACCESS(TXB1CON,1)
// TXB1CON<TXB1REQ>
extern volatile __bit                   TXB1REQ             __at(0x7983);	// @ (0xF30 * 8 + 3)
#define                                 TXB1REQ_bit         _BIT_ACCESS(TXB1CON,3)
// TXB1DLC<TXB1RTR>
extern volatile __bit                   TXB1RTR             __at(0x79AE);	// @ (0xF35 * 8 + 6)
#define                                 TXB1RTR_bit         _BIT_ACCESS(TXB1DLC,6)
// TXB1SIDL<TXB1SID0>
extern volatile __bit                   TXB1SID0            __at(0x7995);	// @ (0xF32 * 8 + 5)
#define                                 TXB1SID0_bit        _BIT_ACCESS(TXB1SIDL,5)
// TXB1SIDL<TXB1SID1>
extern volatile __bit                   TXB1SID1            __at(0x7996);	// @ (0xF32 * 8 + 6)
#define                                 TXB1SID1_bit        _BIT_ACCESS(TXB1SIDL,6)
// TXB1SIDH<TXB1SID10>
extern volatile __bit                   TXB1SID10           __at(0x798F);	// @ (0xF31 * 8 + 7)
#define                                 TXB1SID10_bit       _BIT_ACCESS(TXB1SIDH,7)
// TXB1SIDL<TXB1SID2>
extern volatile __bit                   TXB1SID2            __at(0x7997);	// @ (0xF32 * 8 + 7)
#define                                 TXB1SID2_bit        _BIT_ACCESS(TXB1SIDL,7)
// TXB1SIDH<TXB1SID3>
extern volatile __bit                   TXB1SID3            __at(0x7988);	// @ (0xF31 * 8 + 0)
#define                                 TXB1SID3_bit        _BIT_ACCESS(TXB1SIDH,0)
// TXB1SIDH<TXB1SID4>
extern volatile __bit                   TXB1SID4            __at(0x7989);	// @ (0xF31 * 8 + 1)
#define                                 TXB1SID4_bit        _BIT_ACCESS(TXB1SIDH,1)
// TXB1SIDH<TXB1SID5>
extern volatile __bit                   TXB1SID5            __at(0x798A);	// @ (0xF31 * 8 + 2)
#define                                 TXB1SID5_bit        _BIT_ACCESS(TXB1SIDH,2)
// TXB1SIDH<TXB1SID6>
extern volatile __bit                   TXB1SID6            __at(0x798B);	// @ (0xF31 * 8 + 3)
#define                                 TXB1SID6_bit        _BIT_ACCESS(TXB1SIDH,3)
// TXB1SIDH<TXB1SID7>
extern volatile __bit                   TXB1SID7            __at(0x798C);	// @ (0xF31 * 8 + 4)
#define                                 TXB1SID7_bit        _BIT_ACCESS(TXB1SIDH,4)
// TXB1SIDH<TXB1SID8>
extern volatile __bit                   TXB1SID8            __at(0x798D);	// @ (0xF31 * 8 + 5)
#define                                 TXB1SID8_bit        _BIT_ACCESS(TXB1SIDH,5)
// TXB1SIDH<TXB1SID9>
extern volatile __bit                   TXB1SID9            __at(0x798E);	// @ (0xF31 * 8 + 6)
#define                                 TXB1SID9_bit        _BIT_ACCESS(TXB1SIDH,6)
// TXB2CON<TXB2ABT>
extern volatile __bit                   TXB2ABT             __at(0x7906);	// @ (0xF20 * 8 + 6)
#define                                 TXB2ABT_bit         _BIT_ACCESS(TXB2CON,6)
// TXB2D0<TXB2D00>
extern volatile __bit                   TXB2D00             __at(0x7930);	// @ (0xF26 * 8 + 0)
#define                                 TXB2D00_bit         _BIT_ACCESS(TXB2D0,0)
// TXB2D0<TXB2D01>
extern volatile __bit                   TXB2D01             __at(0x7931);	// @ (0xF26 * 8 + 1)
#define                                 TXB2D01_bit         _BIT_ACCESS(TXB2D0,1)
// TXB2D0<TXB2D02>
extern volatile __bit                   TXB2D02             __at(0x7932);	// @ (0xF26 * 8 + 2)
#define                                 TXB2D02_bit         _BIT_ACCESS(TXB2D0,2)
// TXB2D0<TXB2D03>
extern volatile __bit                   TXB2D03             __at(0x7933);	// @ (0xF26 * 8 + 3)
#define                                 TXB2D03_bit         _BIT_ACCESS(TXB2D0,3)
// TXB2D0<TXB2D04>
extern volatile __bit                   TXB2D04             __at(0x7934);	// @ (0xF26 * 8 + 4)
#define                                 TXB2D04_bit         _BIT_ACCESS(TXB2D0,4)
// TXB2D0<TXB2D05>
extern volatile __bit                   TXB2D05             __at(0x7935);	// @ (0xF26 * 8 + 5)
#define                                 TXB2D05_bit         _BIT_ACCESS(TXB2D0,5)
// TXB2D0<TXB2D06>
extern volatile __bit                   TXB2D06             __at(0x7936);	// @ (0xF26 * 8 + 6)
#define                                 TXB2D06_bit         _BIT_ACCESS(TXB2D0,6)
// TXB2D0<TXB2D07>
extern volatile __bit                   TXB2D07             __at(0x7937);	// @ (0xF26 * 8 + 7)
#define                                 TXB2D07_bit         _BIT_ACCESS(TXB2D0,7)
// TXB2D1<TXB2D10>
extern volatile __bit                   TXB2D10             __at(0x7938);	// @ (0xF27 * 8 + 0)
#define                                 TXB2D10_bit         _BIT_ACCESS(TXB2D1,0)
// TXB2D1<TXB2D11>
extern volatile __bit                   TXB2D11             __at(0x7939);	// @ (0xF27 * 8 + 1)
#define                                 TXB2D11_bit         _BIT_ACCESS(TXB2D1,1)
// TXB2D1<TXB2D12>
extern volatile __bit                   TXB2D12             __at(0x793A);	// @ (0xF27 * 8 + 2)
#define                                 TXB2D12_bit         _BIT_ACCESS(TXB2D1,2)
// TXB2D1<TXB2D13>
extern volatile __bit                   TXB2D13             __at(0x793B);	// @ (0xF27 * 8 + 3)
#define                                 TXB2D13_bit         _BIT_ACCESS(TXB2D1,3)
// TXB2D1<TXB2D14>
extern volatile __bit                   TXB2D14             __at(0x793C);	// @ (0xF27 * 8 + 4)
#define                                 TXB2D14_bit         _BIT_ACCESS(TXB2D1,4)
// TXB2D1<TXB2D15>
extern volatile __bit                   TXB2D15             __at(0x793D);	// @ (0xF27 * 8 + 5)
#define                                 TXB2D15_bit         _BIT_ACCESS(TXB2D1,5)
// TXB2D1<TXB2D16>
extern volatile __bit                   TXB2D16             __at(0x793E);	// @ (0xF27 * 8 + 6)
#define                                 TXB2D16_bit         _BIT_ACCESS(TXB2D1,6)
// TXB2D1<TXB2D17>
extern volatile __bit                   TXB2D17             __at(0x793F);	// @ (0xF27 * 8 + 7)
#define                                 TXB2D17_bit         _BIT_ACCESS(TXB2D1,7)
// TXB2D2<TXB2D20>
extern volatile __bit                   TXB2D20             __at(0x7940);	// @ (0xF28 * 8 + 0)
#define                                 TXB2D20_bit         _BIT_ACCESS(TXB2D2,0)
// TXB2D2<TXB2D21>
extern volatile __bit                   TXB2D21             __at(0x7941);	// @ (0xF28 * 8 + 1)
#define                                 TXB2D21_bit         _BIT_ACCESS(TXB2D2,1)
// TXB2D2<TXB2D22>
extern volatile __bit                   TXB2D22             __at(0x7942);	// @ (0xF28 * 8 + 2)
#define                                 TXB2D22_bit         _BIT_ACCESS(TXB2D2,2)
// TXB2D2<TXB2D23>
extern volatile __bit                   TXB2D23             __at(0x7943);	// @ (0xF28 * 8 + 3)
#define                                 TXB2D23_bit         _BIT_ACCESS(TXB2D2,3)
// TXB2D2<TXB2D24>
extern volatile __bit                   TXB2D24             __at(0x7944);	// @ (0xF28 * 8 + 4)
#define                                 TXB2D24_bit         _BIT_ACCESS(TXB2D2,4)
// TXB2D2<TXB2D25>
extern volatile __bit                   TXB2D25             __at(0x7945);	// @ (0xF28 * 8 + 5)
#define                                 TXB2D25_bit         _BIT_ACCESS(TXB2D2,5)
// TXB2D2<TXB2D26>
extern volatile __bit                   TXB2D26             __at(0x7946);	// @ (0xF28 * 8 + 6)
#define                                 TXB2D26_bit         _BIT_ACCESS(TXB2D2,6)
// TXB2D2<TXB2D27>
extern volatile __bit                   TXB2D27             __at(0x7947);	// @ (0xF28 * 8 + 7)
#define                                 TXB2D27_bit         _BIT_ACCESS(TXB2D2,7)
// TXB2D3<TXB2D30>
extern volatile __bit                   TXB2D30             __at(0x7948);	// @ (0xF29 * 8 + 0)
#define                                 TXB2D30_bit         _BIT_ACCESS(TXB2D3,0)
// TXB2D3<TXB2D31>
extern volatile __bit                   TXB2D31             __at(0x7949);	// @ (0xF29 * 8 + 1)
#define                                 TXB2D31_bit         _BIT_ACCESS(TXB2D3,1)
// TXB2D3<TXB2D32>
extern volatile __bit                   TXB2D32             __at(0x794A);	// @ (0xF29 * 8 + 2)
#define                                 TXB2D32_bit         _BIT_ACCESS(TXB2D3,2)
// TXB2D3<TXB2D33>
extern volatile __bit                   TXB2D33             __at(0x794B);	// @ (0xF29 * 8 + 3)
#define                                 TXB2D33_bit         _BIT_ACCESS(TXB2D3,3)
// TXB2D3<TXB2D34>
extern volatile __bit                   TXB2D34             __at(0x794C);	// @ (0xF29 * 8 + 4)
#define                                 TXB2D34_bit         _BIT_ACCESS(TXB2D3,4)
// TXB2D3<TXB2D35>
extern volatile __bit                   TXB2D35             __at(0x794D);	// @ (0xF29 * 8 + 5)
#define                                 TXB2D35_bit         _BIT_ACCESS(TXB2D3,5)
// TXB2D3<TXB2D36>
extern volatile __bit                   TXB2D36             __at(0x794E);	// @ (0xF29 * 8 + 6)
#define                                 TXB2D36_bit         _BIT_ACCESS(TXB2D3,6)
// TXB2D3<TXB2D37>
extern volatile __bit                   TXB2D37             __at(0x794F);	// @ (0xF29 * 8 + 7)
#define                                 TXB2D37_bit         _BIT_ACCESS(TXB2D3,7)
// TXB2D4<TXB2D40>
extern volatile __bit                   TXB2D40             __at(0x7950);	// @ (0xF2A * 8 + 0)
#define                                 TXB2D40_bit         _BIT_ACCESS(TXB2D4,0)
// TXB2D4<TXB2D41>
extern volatile __bit                   TXB2D41             __at(0x7951);	// @ (0xF2A * 8 + 1)
#define                                 TXB2D41_bit         _BIT_ACCESS(TXB2D4,1)
// TXB2D4<TXB2D42>
extern volatile __bit                   TXB2D42             __at(0x7952);	// @ (0xF2A * 8 + 2)
#define                                 TXB2D42_bit         _BIT_ACCESS(TXB2D4,2)
// TXB2D4<TXB2D43>
extern volatile __bit                   TXB2D43             __at(0x7953);	// @ (0xF2A * 8 + 3)
#define                                 TXB2D43_bit         _BIT_ACCESS(TXB2D4,3)
// TXB2D4<TXB2D44>
extern volatile __bit                   TXB2D44             __at(0x7954);	// @ (0xF2A * 8 + 4)
#define                                 TXB2D44_bit         _BIT_ACCESS(TXB2D4,4)
// TXB2D4<TXB2D45>
extern volatile __bit                   TXB2D45             __at(0x7955);	// @ (0xF2A * 8 + 5)
#define                                 TXB2D45_bit         _BIT_ACCESS(TXB2D4,5)
// TXB2D4<TXB2D46>
extern volatile __bit                   TXB2D46             __at(0x7956);	// @ (0xF2A * 8 + 6)
#define                                 TXB2D46_bit         _BIT_ACCESS(TXB2D4,6)
// TXB2D4<TXB2D47>
extern volatile __bit                   TXB2D47             __at(0x7957);	// @ (0xF2A * 8 + 7)
#define                                 TXB2D47_bit         _BIT_ACCESS(TXB2D4,7)
// TXB2D5<TXB2D50>
extern volatile __bit                   TXB2D50             __at(0x7958);	// @ (0xF2B * 8 + 0)
#define                                 TXB2D50_bit         _BIT_ACCESS(TXB2D5,0)
// TXB2D5<TXB2D51>
extern volatile __bit                   TXB2D51             __at(0x7959);	// @ (0xF2B * 8 + 1)
#define                                 TXB2D51_bit         _BIT_ACCESS(TXB2D5,1)
// TXB2D5<TXB2D52>
extern volatile __bit                   TXB2D52             __at(0x795A);	// @ (0xF2B * 8 + 2)
#define                                 TXB2D52_bit         _BIT_ACCESS(TXB2D5,2)
// TXB2D5<TXB2D53>
extern volatile __bit                   TXB2D53             __at(0x795B);	// @ (0xF2B * 8 + 3)
#define                                 TXB2D53_bit         _BIT_ACCESS(TXB2D5,3)
// TXB2D5<TXB2D54>
extern volatile __bit                   TXB2D54             __at(0x795C);	// @ (0xF2B * 8 + 4)
#define                                 TXB2D54_bit         _BIT_ACCESS(TXB2D5,4)
// TXB2D5<TXB2D55>
extern volatile __bit                   TXB2D55             __at(0x795D);	// @ (0xF2B * 8 + 5)
#define                                 TXB2D55_bit         _BIT_ACCESS(TXB2D5,5)
// TXB2D5<TXB2D56>
extern volatile __bit                   TXB2D56             __at(0x795E);	// @ (0xF2B * 8 + 6)
#define                                 TXB2D56_bit         _BIT_ACCESS(TXB2D5,6)
// TXB2D5<TXB2D57>
extern volatile __bit                   TXB2D57             __at(0x795F);	// @ (0xF2B * 8 + 7)
#define                                 TXB2D57_bit         _BIT_ACCESS(TXB2D5,7)
// TXB2D6<TXB2D60>
extern volatile __bit                   TXB2D60             __at(0x7960);	// @ (0xF2C * 8 + 0)
#define                                 TXB2D60_bit         _BIT_ACCESS(TXB2D6,0)
// TXB2D6<TXB2D61>
extern volatile __bit                   TXB2D61             __at(0x7961);	// @ (0xF2C * 8 + 1)
#define                                 TXB2D61_bit         _BIT_ACCESS(TXB2D6,1)
// TXB2D6<TXB2D62>
extern volatile __bit                   TXB2D62             __at(0x7962);	// @ (0xF2C * 8 + 2)
#define                                 TXB2D62_bit         _BIT_ACCESS(TXB2D6,2)
// TXB2D6<TXB2D63>
extern volatile __bit                   TXB2D63             __at(0x7963);	// @ (0xF2C * 8 + 3)
#define                                 TXB2D63_bit         _BIT_ACCESS(TXB2D6,3)
// TXB2D6<TXB2D64>
extern volatile __bit                   TXB2D64             __at(0x7964);	// @ (0xF2C * 8 + 4)
#define                                 TXB2D64_bit         _BIT_ACCESS(TXB2D6,4)
// TXB2D6<TXB2D65>
extern volatile __bit                   TXB2D65             __at(0x7965);	// @ (0xF2C * 8 + 5)
#define                                 TXB2D65_bit         _BIT_ACCESS(TXB2D6,5)
// TXB2D6<TXB2D66>
extern volatile __bit                   TXB2D66             __at(0x7966);	// @ (0xF2C * 8 + 6)
#define                                 TXB2D66_bit         _BIT_ACCESS(TXB2D6,6)
// TXB2D6<TXB2D67>
extern volatile __bit                   TXB2D67             __at(0x7967);	// @ (0xF2C * 8 + 7)
#define                                 TXB2D67_bit         _BIT_ACCESS(TXB2D6,7)
// TXB2D7<TXB2D70>
extern volatile __bit                   TXB2D70             __at(0x7968);	// @ (0xF2D * 8 + 0)
#define                                 TXB2D70_bit         _BIT_ACCESS(TXB2D7,0)
// TXB2D7<TXB2D71>
extern volatile __bit                   TXB2D71             __at(0x7969);	// @ (0xF2D * 8 + 1)
#define                                 TXB2D71_bit         _BIT_ACCESS(TXB2D7,1)
// TXB2D7<TXB2D72>
extern volatile __bit                   TXB2D72             __at(0x796A);	// @ (0xF2D * 8 + 2)
#define                                 TXB2D72_bit         _BIT_ACCESS(TXB2D7,2)
// TXB2D7<TXB2D73>
extern volatile __bit                   TXB2D73             __at(0x796B);	// @ (0xF2D * 8 + 3)
#define                                 TXB2D73_bit         _BIT_ACCESS(TXB2D7,3)
// TXB2D7<TXB2D74>
extern volatile __bit                   TXB2D74             __at(0x796C);	// @ (0xF2D * 8 + 4)
#define                                 TXB2D74_bit         _BIT_ACCESS(TXB2D7,4)
// TXB2D7<TXB2D75>
extern volatile __bit                   TXB2D75             __at(0x796D);	// @ (0xF2D * 8 + 5)
#define                                 TXB2D75_bit         _BIT_ACCESS(TXB2D7,5)
// TXB2D7<TXB2D76>
extern volatile __bit                   TXB2D76             __at(0x796E);	// @ (0xF2D * 8 + 6)
#define                                 TXB2D76_bit         _BIT_ACCESS(TXB2D7,6)
// TXB2D7<TXB2D77>
extern volatile __bit                   TXB2D77             __at(0x796F);	// @ (0xF2D * 8 + 7)
#define                                 TXB2D77_bit         _BIT_ACCESS(TXB2D7,7)
// TXB2DLC<TXB2DLC0>
extern volatile __bit                   TXB2DLC0            __at(0x7928);	// @ (0xF25 * 8 + 0)
#define                                 TXB2DLC0_bit        _BIT_ACCESS(TXB2DLC,0)
// TXB2DLC<TXB2DLC1>
extern volatile __bit                   TXB2DLC1            __at(0x7929);	// @ (0xF25 * 8 + 1)
#define                                 TXB2DLC1_bit        _BIT_ACCESS(TXB2DLC,1)
// TXB2DLC<TXB2DLC2>
extern volatile __bit                   TXB2DLC2            __at(0x792A);	// @ (0xF25 * 8 + 2)
#define                                 TXB2DLC2_bit        _BIT_ACCESS(TXB2DLC,2)
// TXB2DLC<TXB2DLC3>
extern volatile __bit                   TXB2DLC3            __at(0x792B);	// @ (0xF25 * 8 + 3)
#define                                 TXB2DLC3_bit        _BIT_ACCESS(TXB2DLC,3)
// TXB2EIDL<TXB2EID0>
extern volatile __bit                   TXB2EID0            __at(0x7920);	// @ (0xF24 * 8 + 0)
#define                                 TXB2EID0_bit        _BIT_ACCESS(TXB2EIDL,0)
// TXB2EIDL<TXB2EID1>
extern volatile __bit                   TXB2EID1            __at(0x7921);	// @ (0xF24 * 8 + 1)
#define                                 TXB2EID1_bit        _BIT_ACCESS(TXB2EIDL,1)
// TXB2EIDH<TXB2EID10>
extern volatile __bit                   TXB2EID10           __at(0x791A);	// @ (0xF23 * 8 + 2)
#define                                 TXB2EID10_bit       _BIT_ACCESS(TXB2EIDH,2)
// TXB2EIDH<TXB2EID11>
extern volatile __bit                   TXB2EID11           __at(0x791B);	// @ (0xF23 * 8 + 3)
#define                                 TXB2EID11_bit       _BIT_ACCESS(TXB2EIDH,3)
// TXB2EIDH<TXB2EID12>
extern volatile __bit                   TXB2EID12           __at(0x791C);	// @ (0xF23 * 8 + 4)
#define                                 TXB2EID12_bit       _BIT_ACCESS(TXB2EIDH,4)
// TXB2EIDH<TXB2EID13>
extern volatile __bit                   TXB2EID13           __at(0x791D);	// @ (0xF23 * 8 + 5)
#define                                 TXB2EID13_bit       _BIT_ACCESS(TXB2EIDH,5)
// TXB2EIDH<TXB2EID14>
extern volatile __bit                   TXB2EID14           __at(0x791E);	// @ (0xF23 * 8 + 6)
#define                                 TXB2EID14_bit       _BIT_ACCESS(TXB2EIDH,6)
// TXB2EIDH<TXB2EID15>
extern volatile __bit                   TXB2EID15           __at(0x791F);	// @ (0xF23 * 8 + 7)
#define                                 TXB2EID15_bit       _BIT_ACCESS(TXB2EIDH,7)
// TXB2SIDL<TXB2EID16>
extern volatile __bit                   TXB2EID16           __at(0x7910);	// @ (0xF22 * 8 + 0)
#define                                 TXB2EID16_bit       _BIT_ACCESS(TXB2SIDL,0)
// TXB2SIDL<TXB2EID17>
extern volatile __bit                   TXB2EID17           __at(0x7911);	// @ (0xF22 * 8 + 1)
#define                                 TXB2EID17_bit       _BIT_ACCESS(TXB2SIDL,1)
// TXB2EIDL<TXB2EID2>
extern volatile __bit                   TXB2EID2            __at(0x7922);	// @ (0xF24 * 8 + 2)
#define                                 TXB2EID2_bit        _BIT_ACCESS(TXB2EIDL,2)
// TXB2EIDL<TXB2EID3>
extern volatile __bit                   TXB2EID3            __at(0x7923);	// @ (0xF24 * 8 + 3)
#define                                 TXB2EID3_bit        _BIT_ACCESS(TXB2EIDL,3)
// TXB2EIDL<TXB2EID4>
extern volatile __bit                   TXB2EID4            __at(0x7924);	// @ (0xF24 * 8 + 4)
#define                                 TXB2EID4_bit        _BIT_ACCESS(TXB2EIDL,4)
// TXB2EIDL<TXB2EID5>
extern volatile __bit                   TXB2EID5            __at(0x7925);	// @ (0xF24 * 8 + 5)
#define                                 TXB2EID5_bit        _BIT_ACCESS(TXB2EIDL,5)
// TXB2EIDL<TXB2EID6>
extern volatile __bit                   TXB2EID6            __at(0x7926);	// @ (0xF24 * 8 + 6)
#define                                 TXB2EID6_bit        _BIT_ACCESS(TXB2EIDL,6)
// TXB2EIDL<TXB2EID7>
extern volatile __bit                   TXB2EID7            __at(0x7927);	// @ (0xF24 * 8 + 7)
#define                                 TXB2EID7_bit        _BIT_ACCESS(TXB2EIDL,7)
// TXB2EIDH<TXB2EID8>
extern volatile __bit                   TXB2EID8            __at(0x7918);	// @ (0xF23 * 8 + 0)
#define                                 TXB2EID8_bit        _BIT_ACCESS(TXB2EIDH,0)
// TXB2EIDH<TXB2EID9>
extern volatile __bit                   TXB2EID9            __at(0x7919);	// @ (0xF23 * 8 + 1)
#define                                 TXB2EID9_bit        _BIT_ACCESS(TXB2EIDH,1)
// TXB2CON<TXB2ERR>
extern volatile __bit                   TXB2ERR             __at(0x7904);	// @ (0xF20 * 8 + 4)
#define                                 TXB2ERR_bit         _BIT_ACCESS(TXB2CON,4)
// TXB2SIDL<TXB2EXIDE>
extern volatile __bit                   TXB2EXIDE           __at(0x7913);	// @ (0xF22 * 8 + 3)
#define                                 TXB2EXIDE_bit       _BIT_ACCESS(TXB2SIDL,3)
// PIE3<TXB2IE>
extern volatile __bit _DEPRECATED       TXB2IE              __at(0x7D1C);	// @ (0xFA3 * 8 + 4)
#define                                 TXB2IE_bit          _BIT_ACCESS(PIE3,4)
// PIR3<TXB2IF>
extern volatile __bit                   TXB2IF              __at(0x7D24);	// @ (0xFA4 * 8 + 4)
#define                                 TXB2IF_bit          _BIT_ACCESS(PIR3,4)
// IPR3<TXB2IP>
extern volatile __bit                   TXB2IP              __at(0x7D2C);	// @ (0xFA5 * 8 + 4)
#define                                 TXB2IP_bit          _BIT_ACCESS(IPR3,4)
// TXB2CON<TXB2LARB>
extern volatile __bit                   TXB2LARB            __at(0x7905);	// @ (0xF20 * 8 + 5)
#define                                 TXB2LARB_bit        _BIT_ACCESS(TXB2CON,5)
// TXB2CON<TXB2PRI0>
extern volatile __bit                   TXB2PRI0            __at(0x7900);	// @ (0xF20 * 8 + 0)
#define                                 TXB2PRI0_bit        _BIT_ACCESS(TXB2CON,0)
// TXB2CON<TXB2PRI1>
extern volatile __bit                   TXB2PRI1            __at(0x7901);	// @ (0xF20 * 8 + 1)
#define                                 TXB2PRI1_bit        _BIT_ACCESS(TXB2CON,1)
// TXB2CON<TXB2REQ>
extern volatile __bit                   TXB2REQ             __at(0x7903);	// @ (0xF20 * 8 + 3)
#define                                 TXB2REQ_bit         _BIT_ACCESS(TXB2CON,3)
// TXB2DLC<TXB2RTR>
extern volatile __bit                   TXB2RTR             __at(0x792E);	// @ (0xF25 * 8 + 6)
#define                                 TXB2RTR_bit         _BIT_ACCESS(TXB2DLC,6)
// TXB2SIDL<TXB2SID0>
extern volatile __bit                   TXB2SID0            __at(0x7915);	// @ (0xF22 * 8 + 5)
#define                                 TXB2SID0_bit        _BIT_ACCESS(TXB2SIDL,5)
// TXB2SIDL<TXB2SID1>
extern volatile __bit                   TXB2SID1            __at(0x7916);	// @ (0xF22 * 8 + 6)
#define                                 TXB2SID1_bit        _BIT_ACCESS(TXB2SIDL,6)
// TXB2SIDH<TXB2SID10>
extern volatile __bit                   TXB2SID10           __at(0x790F);	// @ (0xF21 * 8 + 7)
#define                                 TXB2SID10_bit       _BIT_ACCESS(TXB2SIDH,7)
// TXB2SIDL<TXB2SID2>
extern volatile __bit                   TXB2SID2            __at(0x7917);	// @ (0xF22 * 8 + 7)
#define                                 TXB2SID2_bit        _BIT_ACCESS(TXB2SIDL,7)
// TXB2SIDH<TXB2SID3>
extern volatile __bit                   TXB2SID3            __at(0x7908);	// @ (0xF21 * 8 + 0)
#define                                 TXB2SID3_bit        _BIT_ACCESS(TXB2SIDH,0)
// TXB2SIDH<TXB2SID4>
extern volatile __bit                   TXB2SID4            __at(0x7909);	// @ (0xF21 * 8 + 1)
#define                                 TXB2SID4_bit        _BIT_ACCESS(TXB2SIDH,1)
// TXB2SIDH<TXB2SID5>
extern volatile __bit                   TXB2SID5            __at(0x790A);	// @ (0xF21 * 8 + 2)
#define                                 TXB2SID5_bit        _BIT_ACCESS(TXB2SIDH,2)
// TXB2SIDH<TXB2SID6>
extern volatile __bit                   TXB2SID6            __at(0x790B);	// @ (0xF21 * 8 + 3)
#define                                 TXB2SID6_bit        _BIT_ACCESS(TXB2SIDH,3)
// TXB2SIDH<TXB2SID7>
extern volatile __bit                   TXB2SID7            __at(0x790C);	// @ (0xF21 * 8 + 4)
#define                                 TXB2SID7_bit        _BIT_ACCESS(TXB2SIDH,4)
// TXB2SIDH<TXB2SID8>
extern volatile __bit                   TXB2SID8            __at(0x790D);	// @ (0xF21 * 8 + 5)
#define                                 TXB2SID8_bit        _BIT_ACCESS(TXB2SIDH,5)
// TXB2SIDH<TXB2SID9>
extern volatile __bit                   TXB2SID9            __at(0x790E);	// @ (0xF21 * 8 + 6)
#define                                 TXB2SID9_bit        _BIT_ACCESS(TXB2SIDH,6)
// TXB2CON<TXBIFBXB2CON>
extern volatile __bit                   TXBIFBXB2CON        __at(0x7907);	// @ (0xF20 * 8 + 7)
#define                                 TXBIFBXB2CON_bit    _BIT_ACCESS(TXB2CON,7)
// TXB1CON<TXBIFTXB1CON>
extern volatile __bit                   TXBIFTXB1CON        __at(0x7987);	// @ (0xF30 * 8 + 7)
#define                                 TXBIFTXB1CON_bit    _BIT_ACCESS(TXB1CON,7)
// PIE3<TXBNIE>
extern volatile __bit                   TXBNIE              __at(0x7D1C);	// @ (0xFA3 * 8 + 4)
#define                                 TXBNIE_bit          _BIT_ACCESS(PIE3,4)
// PIR3<TXBNIF>
extern volatile __bit                   TXBNIF              __at(0x7D24);	// @ (0xFA4 * 8 + 4)
#define                                 TXBNIF_bit          _BIT_ACCESS(PIR3,4)
// IPR3<TXBNIP>
extern volatile __bit                   TXBNIP              __at(0x7D2C);	// @ (0xFA5 * 8 + 4)
#define                                 TXBNIP_bit          _BIT_ACCESS(IPR3,4)
// COMSTAT<TXBO>
extern volatile __bit                   TXBO                __at(0x7BA5);	// @ (0xF74 * 8 + 5)
#define                                 TXBO_bit            _BIT_ACCESS(COMSTAT,5)
// COMSTAT<TXBP>
extern volatile __bit                   TXBP                __at(0x7BA4);	// @ (0xF74 * 8 + 4)
#define                                 TXBP_bit            _BIT_ACCESS(COMSTAT,4)
// PIE3<TXBnIE>
extern volatile __bit                   TXBnIE              __at(0x7D1C);	// @ (0xFA3 * 8 + 4)
#define                                 TXBnIE_bit          _BIT_ACCESS(PIE3,4)
// PIR3<TXBnIF>
extern volatile __bit                   TXBnIF              __at(0x7D24);	// @ (0xFA4 * 8 + 4)
#define                                 TXBnIF_bit          _BIT_ACCESS(PIR3,4)
// IPR3<TXBnIP>
extern volatile __bit                   TXBnIP              __at(0x7D2C);	// @ (0xFA5 * 8 + 4)
#define                                 TXBnIP_bit          _BIT_ACCESS(IPR3,4)
// TXSTA<TXD8>
extern volatile __bit                   TXD8                __at(0x7D60);	// @ (0xFAC * 8 + 0)
#define                                 TXD8_bit            _BIT_ACCESS(TXSTA,0)
// TXSTA<TXEN>
extern volatile __bit                   TXEN                __at(0x7D65);	// @ (0xFAC * 8 + 5)
#define                                 TXEN_bit            _BIT_ACCESS(TXSTA,5)
// TXSTA<TXEN1>
extern volatile __bit                   TXEN1               __at(0x7D65);	// @ (0xFAC * 8 + 5)
#define                                 TXEN1_bit           _BIT_ACCESS(TXSTA,5)
// PIE1<TXIE>
extern volatile __bit                   TXIE                __at(0x7CEC);	// @ (0xF9D * 8 + 4)
#define                                 TXIE_bit            _BIT_ACCESS(PIE1,4)
// PIR1<TXIF>
extern volatile __bit                   TXIF                __at(0x7CF4);	// @ (0xF9E * 8 + 4)
#define                                 TXIF_bit            _BIT_ACCESS(PIR1,4)
// IPR1<TXIP>
extern volatile __bit                   TXIP                __at(0x7CFC);	// @ (0xF9F * 8 + 4)
#define                                 TXIP_bit            _BIT_ACCESS(IPR1,4)
// COMSTAT<TXWARN>
extern volatile __bit                   TXWARN              __at(0x7BA2);	// @ (0xF74 * 8 + 2)
#define                                 TXWARN_bit          _BIT_ACCESS(COMSTAT,2)
// SSPSTAT<UA>
extern volatile __bit                   UA                  __at(0x7E39);	// @ (0xFC7 * 8 + 1)
#define                                 UA_bit              _BIT_ACCESS(SSPSTAT,1)
// PORTA<ULPWUIN>
extern volatile __bit                   ULPWUIN             __at(0x7C00);	// @ (0xF80 * 8 + 0)
#define                                 ULPWUIN_bit         _BIT_ACCESS(PORTA,0)
// ADCON1<VCFG0>
extern volatile __bit                   VCFG0               __at(0x7E0C);	// @ (0xFC1 * 8 + 4)
#define                                 VCFG0_bit           _BIT_ACCESS(ADCON1,4)
// ADCON1<VCFG01>
extern volatile __bit                   VCFG01              __at(0x7E0C);	// @ (0xFC1 * 8 + 4)
#define                                 VCFG01_bit          _BIT_ACCESS(ADCON1,4)
// ADCON1<VCFG1>
extern volatile __bit                   VCFG1               __at(0x7E0D);	// @ (0xFC1 * 8 + 5)
#define                                 VCFG1_bit           _BIT_ACCESS(ADCON1,5)
// ADCON1<VCFG11>
extern volatile __bit                   VCFG11              __at(0x7E0D);	// @ (0xFC1 * 8 + 5)
#define                                 VCFG11_bit          _BIT_ACCESS(ADCON1,5)
// PORTA<VREFM>
extern volatile __bit                   VREFM               __at(0x7C02);	// @ (0xF80 * 8 + 2)
#define                                 VREFM_bit           _BIT_ACCESS(PORTA,2)
// PORTA<VREFP>
extern volatile __bit                   VREFP               __at(0x7C03);	// @ (0xF80 * 8 + 3)
#define                                 VREFP_bit           _BIT_ACCESS(PORTA,3)
// BAUDCON<W4E>
extern volatile __bit                   W4E                 __at(0x7BF1);	// @ (0xF7E * 8 + 1)
#define                                 W4E_bit             _BIT_ACCESS(BAUDCON,1)
// PR2<WAIT0>
extern volatile __bit                   WAIT0               __at(0x7E5C);	// @ (0xFCB * 8 + 4)
#define                                 WAIT0_bit           _BIT_ACCESS(PR2,4)
// PR2<WAIT1>
extern volatile __bit                   WAIT1               __at(0x7E5D);	// @ (0xFCB * 8 + 5)
#define                                 WAIT1_bit           _BIT_ACCESS(PR2,5)
// BRGCON3<WAKDIS>
extern volatile __bit                   WAKDIS              __at(0x7B97);	// @ (0xF72 * 8 + 7)
#define                                 WAKDIS_bit          _BIT_ACCESS(BRGCON3,7)
// BRGCON3<WAKFIL>
extern volatile __bit                   WAKFIL              __at(0x7B96);	// @ (0xF72 * 8 + 6)
#define                                 WAKFIL_bit          _BIT_ACCESS(BRGCON3,6)
// PIE3<WAKIE>
extern volatile __bit                   WAKIE               __at(0x7D1E);	// @ (0xFA3 * 8 + 6)
#define                                 WAKIE_bit           _BIT_ACCESS(PIE3,6)
// PIR3<WAKIF>
extern volatile __bit                   WAKIF               __at(0x7D26);	// @ (0xFA4 * 8 + 6)
#define                                 WAKIF_bit           _BIT_ACCESS(PIR3,6)
// IPR3<WAKIP>
extern volatile __bit                   WAKIP               __at(0x7D2E);	// @ (0xFA5 * 8 + 6)
#define                                 WAKIP_bit           _BIT_ACCESS(IPR3,6)
// SSPCON1<WCOL>
extern volatile __bit                   WCOL                __at(0x7E37);	// @ (0xFC6 * 8 + 7)
#define                                 WCOL_bit            _BIT_ACCESS(SSPCON1,7)
// CANCON<WIN0>
extern volatile __bit                   WIN0                __at(0x7B79);	// @ (0xF6F * 8 + 1)
#define                                 WIN0_bit            _BIT_ACCESS(CANCON,1)
// CANCON<WIN1>
extern volatile __bit                   WIN1                __at(0x7B7A);	// @ (0xF6F * 8 + 2)
#define                                 WIN1_bit            _BIT_ACCESS(CANCON,2)
// CANCON<WIN2>
extern volatile __bit                   WIN2                __at(0x7B7B);	// @ (0xF6F * 8 + 3)
#define                                 WIN2_bit            _BIT_ACCESS(CANCON,3)
// PR2<WM0>
extern volatile __bit                   WM0                 __at(0x7E58);	// @ (0xFCB * 8 + 0)
#define                                 WM0_bit             _BIT_ACCESS(PR2,0)
// PR2<WM1>
extern volatile __bit                   WM1                 __at(0x7E59);	// @ (0xFCB * 8 + 1)
#define                                 WM1_bit             _BIT_ACCESS(PR2,1)
// EECON1<WR>
extern volatile __bit _DEPRECATED       WR                  __at(0x7D31);	// @ (0xFA6 * 8 + 1)
#define                                 WR_bit              _BIT_ACCESS(EECON1,1)
// PORTE<WRE>
extern volatile __bit                   WRE                 __at(0x7C21);	// @ (0xF84 * 8 + 1)
#define                                 WRE_bit             _BIT_ACCESS(PORTE,1)
// EECON1<WREN>
extern volatile __bit                   WREN                __at(0x7D32);	// @ (0xFA6 * 8 + 2)
#define                                 WREN_bit            _BIT_ACCESS(EECON1,2)
// EECON1<WRERR>
extern volatile __bit                   WRERR               __at(0x7D33);	// @ (0xFA6 * 8 + 3)
#define                                 WRERR_bit           _BIT_ACCESS(EECON1,3)
// BAUDCON<WUE>
extern volatile __bit                   WUE                 __at(0x7BF1);	// @ (0xF7E * 8 + 1)
#define                                 WUE_bit             _BIT_ACCESS(BAUDCON,1)
// STATUS<ZERO>
extern volatile __bit                   ZERO                __at(0x7EC2);	// @ (0xFD8 * 8 + 2)
#define                                 ZERO_bit            _BIT_ACCESS(STATUS,2)
// SSPSTAT<nA>
extern volatile __bit                   nA                  __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 nA_bit              _BIT_ACCESS(SSPSTAT,5)
// SSPSTAT<nADDRESS>
extern volatile __bit                   nADDRESS            __at(0x7E3D);	// @ (0xFC7 * 8 + 5)
#define                                 nADDRESS_bit        _BIT_ACCESS(SSPSTAT,5)
// RCON<nBOR>
extern volatile __bit                   nBOR                __at(0x7E80);	// @ (0xFD0 * 8 + 0)
#define                                 nBOR_bit            _BIT_ACCESS(RCON,0)
// ADCON0<nDONE>
extern volatile __bit                   nDONE               __at(0x7E11);	// @ (0xFC2 * 8 + 1)
#define                                 nDONE_bit           _BIT_ACCESS(ADCON0,1)
// COMSTAT<nFIFOEMPTY>
extern volatile __bit                   nFIFOEMPTY          __at(0x7BA7);	// @ (0xF74 * 8 + 7)
#define                                 nFIFOEMPTY_bit      _BIT_ACCESS(COMSTAT,7)
// RCON<nIPEN>
extern volatile __bit                   nIPEN               __at(0x7E87);	// @ (0xFD0 * 8 + 7)
#define                                 nIPEN_bit           _BIT_ACCESS(RCON,7)
// RCON<nPD>
extern volatile __bit                   nPD                 __at(0x7E82);	// @ (0xFD0 * 8 + 2)
#define                                 nPD_bit             _BIT_ACCESS(RCON,2)
// RCON<nPOR>
extern volatile __bit                   nPOR                __at(0x7E81);	// @ (0xFD0 * 8 + 1)
#define                                 nPOR_bit            _BIT_ACCESS(RCON,1)
// INTCON2<nRBPU>
extern volatile __bit                   nRBPU               __at(0x7F8F);	// @ (0xFF1 * 8 + 7)
#define                                 nRBPU_bit           _BIT_ACCESS(INTCON2,7)
// RCON<nRI>
extern volatile __bit                   nRI                 __at(0x7E84);	// @ (0xFD0 * 8 + 4)
#define                                 nRI_bit             _BIT_ACCESS(RCON,4)
// T1CON<nT1SYNC>
extern volatile __bit                   nT1SYNC             __at(0x7E6A);	// @ (0xFCD * 8 + 2)
#define                                 nT1SYNC_bit         _BIT_ACCESS(T1CON,2)
// T3CON<nT3SYNC>
extern volatile __bit                   nT3SYNC             __at(0x7D8A);	// @ (0xFB1 * 8 + 2)
#define                                 nT3SYNC_bit         _BIT_ACCESS(T3CON,2)
// RCON<nTO>
extern volatile __bit                   nTO                 __at(0x7E83);	// @ (0xFD0 * 8 + 3)
#define                                 nTO_bit             _BIT_ACCESS(RCON,3)
// SSPSTAT<nW>
extern volatile __bit                   nW                  __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 nW_bit              _BIT_ACCESS(SSPSTAT,2)
// SSPSTAT<nWRITE>
extern volatile __bit                   nWRITE              __at(0x7E3A);	// @ (0xFC7 * 8 + 2)
#define                                 nWRITE_bit          _BIT_ACCESS(SSPSTAT,2)

#endif // _PIC18F6585_H_
